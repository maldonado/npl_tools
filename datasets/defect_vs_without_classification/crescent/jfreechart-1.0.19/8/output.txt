// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999991518035689	WITHOUT_CLASSIFICATION	8.481964310105372E-7	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999984558350146	WITHOUT_CLASSIFICATION	1.544164985406643E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999998786658278	WITHOUT_CLASSIFICATION	1.2133417205920777E-7	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999990339481817	WITHOUT_CLASSIFICATION	9.660518183080276E-7	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999975187427333	WITHOUT_CLASSIFICATION	2.4812572665399073E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999916405047317	WITHOUT_CLASSIFICATION	8.359495268237621E-6	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999991437695338	WITHOUT_CLASSIFICATION	8.562304661244671E-7	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999915342444198	WITHOUT_CLASSIFICATION	8.465755580190657E-6	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999974094758245	WITHOUT_CLASSIFICATION	2.5905241756091117E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999974572238002	WITHOUT_CLASSIFICATION	2.542776199936038E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.999999243218785	WITHOUT_CLASSIFICATION	7.567812149386975E-7	DEFECT
// units	WITHOUT_CLASSIFICATION	0.999995123933745	WITHOUT_CLASSIFICATION	4.87606625496093E-6	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999996691798013	WITHOUT_CLASSIFICATION	3.30820198729207E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999990820201964	WITHOUT_CLASSIFICATION	9.179798035950881E-7	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999991673816269	WITHOUT_CLASSIFICATION	8.326183731935183E-7	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999986741436602	WITHOUT_CLASSIFICATION	1.325856339773431E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999999482467882	WITHOUT_CLASSIFICATION	5.1753211852981565E-8	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999999340573188	WITHOUT_CLASSIFICATION	6.594268114092417E-8	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999999627889201	WITHOUT_CLASSIFICATION	3.7211079827818386E-8	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999634470272	WITHOUT_CLASSIFICATION	3.6552972740378424E-8	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.999999953425093	WITHOUT_CLASSIFICATION	4.657490713937657E-8	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.999999973718045	WITHOUT_CLASSIFICATION	2.6281954917904606E-8	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999958729994555	WITHOUT_CLASSIFICATION	4.127000544577488E-6	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999945611269662	WITHOUT_CLASSIFICATION	5.4388730338302325E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999994694698427	WITHOUT_CLASSIFICATION	5.305301571955644E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999533308526557	WITHOUT_CLASSIFICATION	4.6669147344229106E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999882854857967	WITHOUT_CLASSIFICATION	1.1714514203453542E-5	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999875651466452	WITHOUT_CLASSIFICATION	1.2434853354794832E-5	DEFECT
// close	WITHOUT_CLASSIFICATION	0.999999871524593	WITHOUT_CLASSIFICATION	1.2847540700834157E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999917996762738	WITHOUT_CLASSIFICATION	8.200323726178098E-6	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999938922773599	WITHOUT_CLASSIFICATION	6.1077226400660855E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999994627086638	WITHOUT_CLASSIFICATION	5.372913362440228E-7	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999993236993707	WITHOUT_CLASSIFICATION	6.763006293239973E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999782010413203	WITHOUT_CLASSIFICATION	2.1798958679697737E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999983139068932	WITHOUT_CLASSIFICATION	1.6860931067303588E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999992338921407	WITHOUT_CLASSIFICATION	7.661078593729759E-7	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999955551151682	WITHOUT_CLASSIFICATION	4.444884831814199E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975224663376	WITHOUT_CLASSIFICATION	2.4775336623518278E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999998960574461	WITHOUT_CLASSIFICATION	1.0394255379142148E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999446139219	WITHOUT_CLASSIFICATION	5.538607808696044E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999446139219	WITHOUT_CLASSIFICATION	5.538607808696044E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999446139219	WITHOUT_CLASSIFICATION	5.538607808696044E-8	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999935713800108	WITHOUT_CLASSIFICATION	6.428619989196243E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999996964154	WITHOUT_CLASSIFICATION	3.035846454361314E-10	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999996459986919	WITHOUT_CLASSIFICATION	3.54001308103292E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999985117664323	WITHOUT_CLASSIFICATION	1.4882335677063064E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999987877332865	WITHOUT_CLASSIFICATION	1.2122667134408778E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999987877332865	WITHOUT_CLASSIFICATION	1.2122667134408778E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999987877332865	WITHOUT_CLASSIFICATION	1.2122667134408778E-6	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999999999908512	WITHOUT_CLASSIFICATION	9.14874972604881E-12	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999998092483888	WITHOUT_CLASSIFICATION	1.907516111747476E-7	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999951915743084	WITHOUT_CLASSIFICATION	4.808425691686477E-6	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9989048701868359	WITHOUT_CLASSIFICATION	0.001095129813164084	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999991900311891	WITHOUT_CLASSIFICATION	8.099688108757748E-7	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999994148354868	WITHOUT_CLASSIFICATION	5.851645130598438E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.999997017741166	WITHOUT_CLASSIFICATION	2.982258833968271E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999997574426271	WITHOUT_CLASSIFICATION	2.4255737286989476E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999997574426271	WITHOUT_CLASSIFICATION	2.4255737286989476E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999510476668965	WITHOUT_CLASSIFICATION	4.8952333103582445E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990885238864913	WITHOUT_CLASSIFICATION	9.114761135086901E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990885238864913	WITHOUT_CLASSIFICATION	9.114761135086901E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990885238864913	WITHOUT_CLASSIFICATION	9.114761135086901E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990885238864913	WITHOUT_CLASSIFICATION	9.114761135086901E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999997501092178	WITHOUT_CLASSIFICATION	2.4989078216673425E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999564251775951	WITHOUT_CLASSIFICATION	4.357482240492023E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999880494652575	WITHOUT_CLASSIFICATION	1.1950534742372411E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9831048828914951	WITHOUT_CLASSIFICATION	0.0168951171085049	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999992061795009	WITHOUT_CLASSIFICATION	7.9382049908428E-7	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9998854004874272	WITHOUT_CLASSIFICATION	1.1459951257277537E-4	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999931778049328	WITHOUT_CLASSIFICATION	6.822195067106731E-6	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999987830745728	WITHOUT_CLASSIFICATION	1.2169254272799518E-6	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999915251229726	WITHOUT_CLASSIFICATION	8.474877027398644E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999992021510485	WITHOUT_CLASSIFICATION	7.978489514794704E-7	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999947765927404	WITHOUT_CLASSIFICATION	5.223407259586265E-6	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999993556750002	WITHOUT_CLASSIFICATION	6.443249998433871E-7	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.9999991360178299	WITHOUT_CLASSIFICATION	8.639821700485114E-7	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999963104102443	WITHOUT_CLASSIFICATION	3.689589755804507E-6	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9999999350210979	WITHOUT_CLASSIFICATION	6.497890207383449E-8	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999998154494257	WITHOUT_CLASSIFICATION	1.8455057440668652E-7	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9999861599548111	WITHOUT_CLASSIFICATION	1.384004518883128E-5	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999995964839	WITHOUT_CLASSIFICATION	4.03516070540818E-10	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9998765608054777	WITHOUT_CLASSIFICATION	1.2343919452232304E-4	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9998765608054777	WITHOUT_CLASSIFICATION	1.2343919452232304E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999948096407185	WITHOUT_CLASSIFICATION	5.190359281511854E-6	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999964095903178	WITHOUT_CLASSIFICATION	3.5904096823074295E-6	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999890842683956	WITHOUT_CLASSIFICATION	1.0915731604345471E-5	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9999998607337196	WITHOUT_CLASSIFICATION	1.3926628042008687E-7	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999992801567262	WITHOUT_CLASSIFICATION	7.198432736868468E-7	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999992705383097	WITHOUT_CLASSIFICATION	7.294616903848371E-7	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999951735512759	WITHOUT_CLASSIFICATION	4.826448724072339E-6	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999999830083669	WITHOUT_CLASSIFICATION	1.6991633174139786E-8	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.999951794475608	WITHOUT_CLASSIFICATION	4.820552439189121E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999997729817448	WITHOUT_CLASSIFICATION	2.2701825521788814E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999779011989378	WITHOUT_CLASSIFICATION	2.20988010621403E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999695204745721	WITHOUT_CLASSIFICATION	3.0479525427914418E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999778651203	WITHOUT_CLASSIFICATION	2.2134879801162335E-8	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999282394260622	WITHOUT_CLASSIFICATION	7.176057393777798E-5	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.999998731831651	WITHOUT_CLASSIFICATION	1.2681683489341426E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.999998731831651	WITHOUT_CLASSIFICATION	1.2681683489341426E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999978640384	WITHOUT_CLASSIFICATION	2.135961628843858E-9	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999994030820436	WITHOUT_CLASSIFICATION	5.969179564389324E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999912925182927	WITHOUT_CLASSIFICATION	8.70748170742096E-6	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9997547720941523	WITHOUT_CLASSIFICATION	2.4522790584770527E-4	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999998414136936	WITHOUT_CLASSIFICATION	1.585863063995852E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999853969119	WITHOUT_CLASSIFICATION	1.4603088124931783E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999853969119	WITHOUT_CLASSIFICATION	1.4603088124931783E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999853969119	WITHOUT_CLASSIFICATION	1.4603088124931783E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999853969119	WITHOUT_CLASSIFICATION	1.4603088124931783E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999853969119	WITHOUT_CLASSIFICATION	1.4603088124931783E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999853969119	WITHOUT_CLASSIFICATION	1.4603088124931783E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999853969119	WITHOUT_CLASSIFICATION	1.4603088124931783E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999853969119	WITHOUT_CLASSIFICATION	1.4603088124931783E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999853969119	WITHOUT_CLASSIFICATION	1.4603088124931783E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999994928684556	WITHOUT_CLASSIFICATION	5.07131544417015E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999994928684556	WITHOUT_CLASSIFICATION	5.07131544417015E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999965223574957	WITHOUT_CLASSIFICATION	3.477642504328265E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999965223574957	WITHOUT_CLASSIFICATION	3.477642504328265E-6	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999999915462252	WITHOUT_CLASSIFICATION	8.453774835384115E-9	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.999956764744657	WITHOUT_CLASSIFICATION	4.3235255342919574E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999945194257249	WITHOUT_CLASSIFICATION	5.48057427514948E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999987582328097	WITHOUT_CLASSIFICATION	1.2417671902792379E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999987582328097	WITHOUT_CLASSIFICATION	1.2417671902792379E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999035609072902	WITHOUT_CLASSIFICATION	9.643909270981016E-5	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999602374727042	WITHOUT_CLASSIFICATION	3.976252729580911E-5	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999918394954966	WITHOUT_CLASSIFICATION	8.160504503348546E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999994128433464	WITHOUT_CLASSIFICATION	5.871566536314863E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999994128433464	WITHOUT_CLASSIFICATION	5.871566536314863E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999957296738554	WITHOUT_CLASSIFICATION	4.27032614450925E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999957296738554	WITHOUT_CLASSIFICATION	4.27032614450925E-6	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999909039085	WITHOUT_CLASSIFICATION	9.096091595526177E-9	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999894484117	WITHOUT_CLASSIFICATION	1.0551588211435594E-8	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9999999971511876	WITHOUT_CLASSIFICATION	2.848812352774372E-9	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999999997269549	WITHOUT_CLASSIFICATION	2.730450350022559E-10	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999999250503	WITHOUT_CLASSIFICATION	7.494970003028252E-8	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999998318610952	WITHOUT_CLASSIFICATION	1.6813890481464743E-7	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999916534024915	WITHOUT_CLASSIFICATION	8.346597508584363E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999985010606104	WITHOUT_CLASSIFICATION	1.4989393897067666E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.999999824989536	WITHOUT_CLASSIFICATION	1.7501046389447533E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999980781288	WITHOUT_CLASSIFICATION	1.921871255020897E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.999998888402459	WITHOUT_CLASSIFICATION	1.1115975410404276E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.999998888402459	WITHOUT_CLASSIFICATION	1.1115975410404276E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.999650418400571	WITHOUT_CLASSIFICATION	3.495815994289155E-4	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.999650418400571	WITHOUT_CLASSIFICATION	3.495815994289155E-4	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999628907273	WITHOUT_CLASSIFICATION	3.7109272561397885E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999869218009	WITHOUT_CLASSIFICATION	1.3078199201145015E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999869218009	WITHOUT_CLASSIFICATION	1.3078199201145015E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999869218009	WITHOUT_CLASSIFICATION	1.3078199201145015E-8	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999988039000747	WITHOUT_CLASSIFICATION	1.1960999253196255E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9998927925353754	WITHOUT_CLASSIFICATION	1.0720746462463589E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999967996096983	WITHOUT_CLASSIFICATION	3.200390301675914E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999967996096983	WITHOUT_CLASSIFICATION	3.200390301675914E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999967996096983	WITHOUT_CLASSIFICATION	3.200390301675914E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999967996096983	WITHOUT_CLASSIFICATION	3.200390301675914E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999967996096983	WITHOUT_CLASSIFICATION	3.200390301675914E-6	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999999119523489	WITHOUT_CLASSIFICATION	8.804765108252553E-8	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999761580310685	WITHOUT_CLASSIFICATION	2.384196893144672E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999761580310685	WITHOUT_CLASSIFICATION	2.384196893144672E-5	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999933043991788	WITHOUT_CLASSIFICATION	6.695600821341159E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999980325683406	WITHOUT_CLASSIFICATION	1.9674316593764746E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999980325683406	WITHOUT_CLASSIFICATION	1.9674316593764746E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973237030207	WITHOUT_CLASSIFICATION	2.676296979202377E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.999999463508407	WITHOUT_CLASSIFICATION	5.36491593119176E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.999999463508407	WITHOUT_CLASSIFICATION	5.36491593119176E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.999999463508407	WITHOUT_CLASSIFICATION	5.36491593119176E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999994853041626	WITHOUT_CLASSIFICATION	5.146958372971388E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999994853041626	WITHOUT_CLASSIFICATION	5.146958372971388E-7	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999999944102499	WITHOUT_CLASSIFICATION	5.589750108237662E-9	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999999157060984	WITHOUT_CLASSIFICATION	8.429390162613812E-8	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999999157060984	WITHOUT_CLASSIFICATION	8.429390162613812E-8	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999923977046864	WITHOUT_CLASSIFICATION	7.602295313554969E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999993409794646	WITHOUT_CLASSIFICATION	6.590205354439455E-7	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999918938100303	WITHOUT_CLASSIFICATION	8.106189969624778E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999960122056958	WITHOUT_CLASSIFICATION	3.9877943041899995E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999960227419834	WITHOUT_CLASSIFICATION	3.977258016598623E-6	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999999792978375	WITHOUT_CLASSIFICATION	2.0702162486223958E-8	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999917829319521	WITHOUT_CLASSIFICATION	8.217068047870323E-6	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999995774788913	WITHOUT_CLASSIFICATION	4.225211086339847E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9998300945042015	WITHOUT_CLASSIFICATION	1.6990549579858554E-4	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.999972194224816	WITHOUT_CLASSIFICATION	2.7805775184046926E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999831314489	WITHOUT_CLASSIFICATION	1.686855110471442E-8	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.8827239900582958	DEFECT	0.11727600994170427	WITHOUT_CLASSIFICATION
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999996615501817	WITHOUT_CLASSIFICATION	3.3844981827032807E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999933299249012	WITHOUT_CLASSIFICATION	6.670075098808139E-6	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999977879710118	WITHOUT_CLASSIFICATION	2.2120289880926144E-6	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999931675368792	WITHOUT_CLASSIFICATION	6.832463120749675E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999888414041465	WITHOUT_CLASSIFICATION	1.115859585345785E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999510828444741	WITHOUT_CLASSIFICATION	4.891715552596138E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999996615000715	WITHOUT_CLASSIFICATION	3.3849992857341856E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999996615000715	WITHOUT_CLASSIFICATION	3.3849992857341856E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999999772774364	WITHOUT_CLASSIFICATION	2.2722563600556983E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999643942872283	WITHOUT_CLASSIFICATION	3.560571277160889E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999643942872283	WITHOUT_CLASSIFICATION	3.560571277160889E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999643942872283	WITHOUT_CLASSIFICATION	3.560571277160889E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940083251806	WITHOUT_CLASSIFICATION	5.99167481939259E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999208181463739	WITHOUT_CLASSIFICATION	7.91818536260422E-5	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.8683770837299504	WITHOUT_CLASSIFICATION	0.1316229162700496	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999889794768135	WITHOUT_CLASSIFICATION	1.1020523186458639E-5	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.999999934062955	WITHOUT_CLASSIFICATION	6.593704507702344E-8	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999410836697349	WITHOUT_CLASSIFICATION	5.891633026513876E-5	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999999163188266	WITHOUT_CLASSIFICATION	8.368117337172382E-8	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999804501325281	WITHOUT_CLASSIFICATION	1.954986747182603E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999804501325281	WITHOUT_CLASSIFICATION	1.954986747182603E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999993956443287	WITHOUT_CLASSIFICATION	6.04355671183732E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999993956443287	WITHOUT_CLASSIFICATION	6.04355671183732E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999939455745223	WITHOUT_CLASSIFICATION	6.054425477736691E-6	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999999952627451	WITHOUT_CLASSIFICATION	4.7372548934068956E-9	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999997501398947	WITHOUT_CLASSIFICATION	2.498601052317228E-7	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999997392990894	WITHOUT_CLASSIFICATION	2.6070091064560916E-7	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999846265660883	WITHOUT_CLASSIFICATION	1.5373433911647305E-5	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9999996361851661	WITHOUT_CLASSIFICATION	3.6381483394345905E-7	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9999958479472817	WITHOUT_CLASSIFICATION	4.152052718268008E-6	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999999979764057	WITHOUT_CLASSIFICATION	2.0235942258640606E-9	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.999998510601389	WITHOUT_CLASSIFICATION	1.4893986109567592E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999995341747068	WITHOUT_CLASSIFICATION	4.658252931881999E-7	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999999088520587	WITHOUT_CLASSIFICATION	9.114794134155012E-8	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.9999972307629235	WITHOUT_CLASSIFICATION	2.769237076557484E-6	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9964481136645655	WITHOUT_CLASSIFICATION	0.0035518863354344027	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9977924368373741	WITHOUT_CLASSIFICATION	0.002207563162625889	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9977924368373741	WITHOUT_CLASSIFICATION	0.002207563162625889	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999997591149536	WITHOUT_CLASSIFICATION	2.408850463082229E-7	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999998941542829	WITHOUT_CLASSIFICATION	1.0584571710943938E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999903649237	WITHOUT_CLASSIFICATION	9.635076304010957E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999903649237	WITHOUT_CLASSIFICATION	9.635076304010957E-9	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999995805615444	WITHOUT_CLASSIFICATION	4.194384557095392E-7	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.999950446562344	WITHOUT_CLASSIFICATION	4.9553437655923375E-5	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999999645622307	WITHOUT_CLASSIFICATION	3.543776933290364E-8	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9848067994030223	WITHOUT_CLASSIFICATION	0.01519320059697766	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999957037028019	WITHOUT_CLASSIFICATION	4.296297198137398E-6	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999999565995397	WITHOUT_CLASSIFICATION	4.34004603313862E-8	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999999042570994	WITHOUT_CLASSIFICATION	9.574290066193054E-8	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999845061755016	WITHOUT_CLASSIFICATION	1.5493824498429033E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999845061755016	WITHOUT_CLASSIFICATION	1.5493824498429033E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999774118179805	WITHOUT_CLASSIFICATION	2.2588182019568994E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999923364386133	WITHOUT_CLASSIFICATION	7.663561386637183E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999923364386133	WITHOUT_CLASSIFICATION	7.663561386637183E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999923364386133	WITHOUT_CLASSIFICATION	7.663561386637183E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999923364386133	WITHOUT_CLASSIFICATION	7.663561386637183E-6	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9511076385870061	WITHOUT_CLASSIFICATION	0.04889236141299404	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999974960301065	WITHOUT_CLASSIFICATION	2.503969893544333E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999974960301065	WITHOUT_CLASSIFICATION	2.503969893544333E-6	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999772459912386	WITHOUT_CLASSIFICATION	2.2754008761383423E-5	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999327745067	WITHOUT_CLASSIFICATION	6.722549331028738E-8	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999991203736217	WITHOUT_CLASSIFICATION	8.79626378172115E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999805110347	WITHOUT_CLASSIFICATION	1.9488965334585203E-8	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999963900681758	WITHOUT_CLASSIFICATION	3.609931824350817E-6	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999979613658112	WITHOUT_CLASSIFICATION	2.038634188917561E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999889252682563	WITHOUT_CLASSIFICATION	1.1074731743631116E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999889252682563	WITHOUT_CLASSIFICATION	1.1074731743631116E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999889252682563	WITHOUT_CLASSIFICATION	1.1074731743631116E-5	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999991131108842	WITHOUT_CLASSIFICATION	8.868891158708588E-7	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999999964470665	WITHOUT_CLASSIFICATION	3.552933581926057E-9	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999265500507	WITHOUT_CLASSIFICATION	7.344994934491115E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999998460962076	WITHOUT_CLASSIFICATION	1.5390379232870592E-7	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.999999994549965	WITHOUT_CLASSIFICATION	5.450034935232029E-9	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9999892153478852	WITHOUT_CLASSIFICATION	1.0784652114826137E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.999998138410759	WITHOUT_CLASSIFICATION	1.8615892410307432E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999995647283086	WITHOUT_CLASSIFICATION	4.35271691393058E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999995647283086	WITHOUT_CLASSIFICATION	4.35271691393058E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999995647283086	WITHOUT_CLASSIFICATION	4.35271691393058E-7	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9998632304942011	WITHOUT_CLASSIFICATION	1.3676950579896824E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999983139068932	WITHOUT_CLASSIFICATION	1.6860931067303588E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999992966537957	WITHOUT_CLASSIFICATION	7.033462043297309E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999992966537957	WITHOUT_CLASSIFICATION	7.033462043297309E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999992966537957	WITHOUT_CLASSIFICATION	7.033462043297309E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994336653718	WITHOUT_CLASSIFICATION	5.66334628179676E-7	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999814105331238	WITHOUT_CLASSIFICATION	1.8589466876184913E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999814105331238	WITHOUT_CLASSIFICATION	1.8589466876184913E-5	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.999990800618936	WITHOUT_CLASSIFICATION	9.19938106406352E-6	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999992214842014	WITHOUT_CLASSIFICATION	7.785157986752097E-7	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999349261831	WITHOUT_CLASSIFICATION	6.50738168458217E-8	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999997072704954	WITHOUT_CLASSIFICATION	2.927295046436422E-7	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999998704752824	WITHOUT_CLASSIFICATION	1.2952471750726246E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.999995196247817	WITHOUT_CLASSIFICATION	4.803752182941661E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975224663376	WITHOUT_CLASSIFICATION	2.4775336623518278E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975224663376	WITHOUT_CLASSIFICATION	2.4775336623518278E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975224663376	WITHOUT_CLASSIFICATION	2.4775336623518278E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999387213976619	WITHOUT_CLASSIFICATION	6.127860233806749E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999782010413203	WITHOUT_CLASSIFICATION	2.1798958679697737E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999963475186803	WITHOUT_CLASSIFICATION	3.6524813196429254E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.999999243218785	WITHOUT_CLASSIFICATION	7.567812149386975E-7	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9998340707910088	WITHOUT_CLASSIFICATION	1.659292089912014E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999977283510614	WITHOUT_CLASSIFICATION	2.2716489386629768E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999977283510614	WITHOUT_CLASSIFICATION	2.2716489386629768E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999977283510614	WITHOUT_CLASSIFICATION	2.2716489386629768E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999977283510614	WITHOUT_CLASSIFICATION	2.2716489386629768E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999977283510614	WITHOUT_CLASSIFICATION	2.2716489386629768E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999977283510614	WITHOUT_CLASSIFICATION	2.2716489386629768E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999977283510614	WITHOUT_CLASSIFICATION	2.2716489386629768E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999977283510614	WITHOUT_CLASSIFICATION	2.2716489386629768E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999977283510614	WITHOUT_CLASSIFICATION	2.2716489386629768E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999971787987095	WITHOUT_CLASSIFICATION	2.821201290575922E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999971787987095	WITHOUT_CLASSIFICATION	2.821201290575922E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999930409201654	WITHOUT_CLASSIFICATION	6.959079834554644E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999930409201654	WITHOUT_CLASSIFICATION	6.959079834554644E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999977274512856	WITHOUT_CLASSIFICATION	2.2725487144626047E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999977274512856	WITHOUT_CLASSIFICATION	2.2725487144626047E-6	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999986338213537	WITHOUT_CLASSIFICATION	1.3661786463501854E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999998321444933	WITHOUT_CLASSIFICATION	1.678555066411168E-7	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999998321444933	WITHOUT_CLASSIFICATION	1.678555066411168E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999987650298164	WITHOUT_CLASSIFICATION	1.234970183590533E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.99999976814258	WITHOUT_CLASSIFICATION	2.3185741996202698E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.99999976814258	WITHOUT_CLASSIFICATION	2.3185741996202698E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999993018325481	WITHOUT_CLASSIFICATION	6.981674517887124E-7	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999990104795352	WITHOUT_CLASSIFICATION	9.895204647003524E-7	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999945670391075	WITHOUT_CLASSIFICATION	5.43296089252175E-6	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999998102158327	WITHOUT_CLASSIFICATION	1.8978416726594298E-7	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999846946205587	WITHOUT_CLASSIFICATION	1.5305379441252605E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999846946205587	WITHOUT_CLASSIFICATION	1.5305379441252605E-5	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999995704520078	WITHOUT_CLASSIFICATION	4.295479920800769E-7	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9999233983807282	WITHOUT_CLASSIFICATION	7.660161927183659E-5	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999994110593666	WITHOUT_CLASSIFICATION	5.889406334242007E-7	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.999998663077104	WITHOUT_CLASSIFICATION	1.3369228960131283E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999872146687	WITHOUT_CLASSIFICATION	1.278533130009838E-8	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998652216344	WITHOUT_CLASSIFICATION	1.347783655337607E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999976099789261	WITHOUT_CLASSIFICATION	2.390021073976372E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999846926021	WITHOUT_CLASSIFICATION	1.530739796073241E-8	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999371454963	WITHOUT_CLASSIFICATION	6.285450362937456E-8	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999895062472725	WITHOUT_CLASSIFICATION	1.049375272761871E-5	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999890715942293	WITHOUT_CLASSIFICATION	1.0928405770609061E-5	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999083649333366	WITHOUT_CLASSIFICATION	9.163506666349741E-5	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.999999067490791	WITHOUT_CLASSIFICATION	9.32509208896101E-7	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999265085475	WITHOUT_CLASSIFICATION	7.349145240385703E-8	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999993586611055	WITHOUT_CLASSIFICATION	6.413388945162284E-7	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999994381663353	WITHOUT_CLASSIFICATION	5.61833664649222E-7	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999866748567909	WITHOUT_CLASSIFICATION	1.3325143209124813E-5	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999998096459526	WITHOUT_CLASSIFICATION	1.9035404729820213E-7	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9999989259979098	WITHOUT_CLASSIFICATION	1.074002090179753E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999988227809319	WITHOUT_CLASSIFICATION	1.1772190681405235E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999988227809319	WITHOUT_CLASSIFICATION	1.1772190681405235E-6	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999920108198275	WITHOUT_CLASSIFICATION	7.989180172562392E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999994449977212	WITHOUT_CLASSIFICATION	5.550022787547622E-7	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.999996236429949	WITHOUT_CLASSIFICATION	3.76357005099746E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999937543476775	WITHOUT_CLASSIFICATION	6.245652322485188E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999966350370171	WITHOUT_CLASSIFICATION	3.364962983008758E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999923111737575	WITHOUT_CLASSIFICATION	7.688826242530464E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999998888373678	WITHOUT_CLASSIFICATION	1.1116263219325754E-7	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999986656159175	WITHOUT_CLASSIFICATION	1.3343840823873742E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999951184349969	WITHOUT_CLASSIFICATION	4.881565003127854E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999951184349969	WITHOUT_CLASSIFICATION	4.881565003127854E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9995482300603535	WITHOUT_CLASSIFICATION	4.5176993964642635E-4	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999982070009059	WITHOUT_CLASSIFICATION	1.7929990941159435E-6	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9997723603943621	WITHOUT_CLASSIFICATION	2.2763960563781105E-4	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9997154448248673	WITHOUT_CLASSIFICATION	2.8455517513268876E-4	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9993166604777357	WITHOUT_CLASSIFICATION	6.833395222643341E-4	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999042045336	WITHOUT_CLASSIFICATION	9.579546642135027E-8	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999997796178557	WITHOUT_CLASSIFICATION	2.2038214437358387E-7	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999998582871157	WITHOUT_CLASSIFICATION	1.4171288429488877E-7	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999998781069722	WITHOUT_CLASSIFICATION	1.2189302782466218E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999997647079026	WITHOUT_CLASSIFICATION	2.3529209738323264E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999997647079026	WITHOUT_CLASSIFICATION	2.3529209738323264E-7	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9998456646931073	WITHOUT_CLASSIFICATION	1.543353068927425E-4	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.999983869763147	WITHOUT_CLASSIFICATION	1.6130236852940584E-5	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999993613129513	WITHOUT_CLASSIFICATION	6.386870486992267E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999992572557392	WITHOUT_CLASSIFICATION	7.427442607062561E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999992572557392	WITHOUT_CLASSIFICATION	7.427442607062561E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999998053459996	WITHOUT_CLASSIFICATION	1.9465400023793732E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999998053459996	WITHOUT_CLASSIFICATION	1.9465400023793732E-7	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999705898697501	WITHOUT_CLASSIFICATION	2.9410130249929753E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999961680931558	WITHOUT_CLASSIFICATION	3.831906844164223E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999102434300414	WITHOUT_CLASSIFICATION	8.975656995865772E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999102434300414	WITHOUT_CLASSIFICATION	8.975656995865772E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999990463987748	WITHOUT_CLASSIFICATION	9.536012252137292E-7	DEFECT
// units	WITHOUT_CLASSIFICATION	0.999995123933745	WITHOUT_CLASSIFICATION	4.87606625496093E-6	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999978629814326	WITHOUT_CLASSIFICATION	2.137018567400846E-6	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999994230515715	WITHOUT_CLASSIFICATION	5.769484285293306E-7	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999999614158668	WITHOUT_CLASSIFICATION	3.8584133177064246E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999982018282618	WITHOUT_CLASSIFICATION	1.7981717382786696E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999982018282618	WITHOUT_CLASSIFICATION	1.7981717382786696E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999982018282618	WITHOUT_CLASSIFICATION	1.7981717382786696E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999982018282618	WITHOUT_CLASSIFICATION	1.7981717382786696E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999982018282618	WITHOUT_CLASSIFICATION	1.7981717382786696E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999982018282618	WITHOUT_CLASSIFICATION	1.7981717382786696E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999982018282618	WITHOUT_CLASSIFICATION	1.7981717382786696E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999982018282618	WITHOUT_CLASSIFICATION	1.7981717382786696E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999982018282618	WITHOUT_CLASSIFICATION	1.7981717382786696E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999982018282618	WITHOUT_CLASSIFICATION	1.7981717382786696E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999982018282618	WITHOUT_CLASSIFICATION	1.7981717382786696E-6	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9999769125967854	WITHOUT_CLASSIFICATION	2.3087403214550874E-5	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9999447208833079	WITHOUT_CLASSIFICATION	5.5279116692140994E-5	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999999093057897	WITHOUT_CLASSIFICATION	9.069421025046388E-8	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.999999411755637	WITHOUT_CLASSIFICATION	5.882443629744384E-7	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999888728962405	WITHOUT_CLASSIFICATION	1.1127103759474693E-5	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999985364363516	WITHOUT_CLASSIFICATION	1.463563648473767E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999998115840835	WITHOUT_CLASSIFICATION	1.884159165273584E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999985814349751	WITHOUT_CLASSIFICATION	1.4185650249665396E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999985814349751	WITHOUT_CLASSIFICATION	1.4185650249665396E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999985814349751	WITHOUT_CLASSIFICATION	1.4185650249665396E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999985814349751	WITHOUT_CLASSIFICATION	1.4185650249665396E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999985814349751	WITHOUT_CLASSIFICATION	1.4185650249665396E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999985814349751	WITHOUT_CLASSIFICATION	1.4185650249665396E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999985814349751	WITHOUT_CLASSIFICATION	1.4185650249665396E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999985814349751	WITHOUT_CLASSIFICATION	1.4185650249665396E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999985814349751	WITHOUT_CLASSIFICATION	1.4185650249665396E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999985814349751	WITHOUT_CLASSIFICATION	1.4185650249665396E-6	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9999379776187188	WITHOUT_CLASSIFICATION	6.20223812812168E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999930584477243	WITHOUT_CLASSIFICATION	6.94155227576468E-6	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9998903552915419	WITHOUT_CLASSIFICATION	1.096447084580125E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999997910339838	WITHOUT_CLASSIFICATION	2.089660161215537E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999997910339838	WITHOUT_CLASSIFICATION	2.089660161215537E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999997910339838	WITHOUT_CLASSIFICATION	2.089660161215537E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999997910339838	WITHOUT_CLASSIFICATION	2.089660161215537E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999997910339838	WITHOUT_CLASSIFICATION	2.089660161215537E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999997910339838	WITHOUT_CLASSIFICATION	2.089660161215537E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999997910339838	WITHOUT_CLASSIFICATION	2.089660161215537E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999917526364	WITHOUT_CLASSIFICATION	8.247363609327857E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999917526364	WITHOUT_CLASSIFICATION	8.247363609327857E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999917526364	WITHOUT_CLASSIFICATION	8.247363609327857E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999917526364	WITHOUT_CLASSIFICATION	8.247363609327857E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999917526364	WITHOUT_CLASSIFICATION	8.247363609327857E-8	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999996695012445	WITHOUT_CLASSIFICATION	3.3049875542669236E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999996846333999	WITHOUT_CLASSIFICATION	3.153666000299054E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999998349846607	WITHOUT_CLASSIFICATION	1.650153392995638E-7	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999987320028951	WITHOUT_CLASSIFICATION	1.267997104859555E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999997436374571	WITHOUT_CLASSIFICATION	2.5636254286762295E-7	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.999999682264415	WITHOUT_CLASSIFICATION	3.177355850387284E-7	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9999997919421723	WITHOUT_CLASSIFICATION	2.08057827819747E-7	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999971762437422	WITHOUT_CLASSIFICATION	2.8237562579157807E-6	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999999108603337	WITHOUT_CLASSIFICATION	8.913966629658432E-8	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999999993352254	WITHOUT_CLASSIFICATION	6.647746420592416E-10	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999961015341379	WITHOUT_CLASSIFICATION	3.898465862168225E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999446139219	WITHOUT_CLASSIFICATION	5.538607808696044E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999446139219	WITHOUT_CLASSIFICATION	5.538607808696044E-8	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999930381228	WITHOUT_CLASSIFICATION	6.961877185689881E-9	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999990845856704	WITHOUT_CLASSIFICATION	9.154143295463932E-7	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999996714027529	WITHOUT_CLASSIFICATION	3.285972470397596E-7	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999991891846737	WITHOUT_CLASSIFICATION	8.108153262703081E-7	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9999844015997728	WITHOUT_CLASSIFICATION	1.559840022726699E-5	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999588373287	WITHOUT_CLASSIFICATION	4.116267120033809E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9659005992025045	WITHOUT_CLASSIFICATION	0.0340994007974955	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999999801046907	WITHOUT_CLASSIFICATION	1.9895309215599286E-8	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999902913731632	WITHOUT_CLASSIFICATION	9.708626836834472E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999998434582098	WITHOUT_CLASSIFICATION	1.5654179021587657E-7	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999988770997645	WITHOUT_CLASSIFICATION	1.1229002354602444E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999935713800108	WITHOUT_CLASSIFICATION	6.428619989196243E-6	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999999623349768	WITHOUT_CLASSIFICATION	3.766502321363434E-8	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999995122791139	WITHOUT_CLASSIFICATION	4.877208861424779E-7	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999961016477682	WITHOUT_CLASSIFICATION	3.898352231842614E-6	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999972025758124	WITHOUT_CLASSIFICATION	2.797424187650606E-6	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9994060559344354	WITHOUT_CLASSIFICATION	5.939440655645206E-4	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.999999804540856	WITHOUT_CLASSIFICATION	1.9545914390671268E-7	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9999997860630508	WITHOUT_CLASSIFICATION	2.1393694916660192E-7	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9999044665803521	WITHOUT_CLASSIFICATION	9.553341964782977E-5	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999991676261861	WITHOUT_CLASSIFICATION	8.323738139483646E-7	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999933343229	WITHOUT_CLASSIFICATION	6.66567716547117E-9	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999999244090458	WITHOUT_CLASSIFICATION	7.559095419293406E-8	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999994529075	WITHOUT_CLASSIFICATION	5.470925278405686E-10	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999999974101362	WITHOUT_CLASSIFICATION	2.589863838479141E-9	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999830618730353	WITHOUT_CLASSIFICATION	1.69381269647518E-5	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999954399158226	WITHOUT_CLASSIFICATION	4.560084177292423E-6	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999988337278227	WITHOUT_CLASSIFICATION	1.1662721772220704E-6	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999996735621662	WITHOUT_CLASSIFICATION	3.264378338080998E-7	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999967256675	WITHOUT_CLASSIFICATION	3.2743325862230164E-9	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999999752268781	WITHOUT_CLASSIFICATION	2.4773121908379313E-8	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.9999910767088647	WITHOUT_CLASSIFICATION	8.923291135207875E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999843190824	WITHOUT_CLASSIFICATION	1.568091758896841E-8	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999843190824	WITHOUT_CLASSIFICATION	1.568091758896841E-8	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999972216287204	WITHOUT_CLASSIFICATION	2.7783712795344054E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999920399165805	WITHOUT_CLASSIFICATION	7.960083419627027E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999996964154	WITHOUT_CLASSIFICATION	3.035846454361314E-10	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999996964154	WITHOUT_CLASSIFICATION	3.035846454361314E-10	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.999999821045381	WITHOUT_CLASSIFICATION	1.7895461900981536E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999618839724	WITHOUT_CLASSIFICATION	3.8116027527780863E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999618839724	WITHOUT_CLASSIFICATION	3.8116027527780863E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999618839724	WITHOUT_CLASSIFICATION	3.8116027527780863E-8	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999920399165805	WITHOUT_CLASSIFICATION	7.960083419627027E-6	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999847668609753	WITHOUT_CLASSIFICATION	1.523313902471906E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.99999719527	WITHOUT_CLASSIFICATION	2.804730000104049E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999920399165805	WITHOUT_CLASSIFICATION	7.960083419627027E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999920399165805	WITHOUT_CLASSIFICATION	7.960083419627027E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999920399165805	WITHOUT_CLASSIFICATION	7.960083419627027E-6	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999999832966658	WITHOUT_CLASSIFICATION	1.6703334143990176E-8	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999993282743841	WITHOUT_CLASSIFICATION	6.717256159581248E-7	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999597825466218	WITHOUT_CLASSIFICATION	4.021745337832494E-5	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999999622188785	WITHOUT_CLASSIFICATION	3.7781121377856377E-8	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999867600717476	WITHOUT_CLASSIFICATION	1.3239928252412943E-5	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999996459986919	WITHOUT_CLASSIFICATION	3.54001308103292E-6	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999999929727394	WITHOUT_CLASSIFICATION	7.027260512405269E-9	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999996459986919	WITHOUT_CLASSIFICATION	3.54001308103292E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9999980436737372	WITHOUT_CLASSIFICATION	1.956326262682073E-6	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999998799129908	WITHOUT_CLASSIFICATION	1.200870092395358E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999996459986919	WITHOUT_CLASSIFICATION	3.54001308103292E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999996459986919	WITHOUT_CLASSIFICATION	3.54001308103292E-6	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999857940742626	WITHOUT_CLASSIFICATION	1.4205925737477247E-5	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999826239152272	WITHOUT_CLASSIFICATION	1.7376084772780044E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999985117664323	WITHOUT_CLASSIFICATION	1.4882335677063064E-6	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999999378322678	WITHOUT_CLASSIFICATION	6.216773208961406E-8	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999999351720664	WITHOUT_CLASSIFICATION	6.482793353019045E-8	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999998761255575	WITHOUT_CLASSIFICATION	1.2387444245171465E-7	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999903973055757	WITHOUT_CLASSIFICATION	9.602694424260945E-6	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999603184412338	WITHOUT_CLASSIFICATION	3.9681558766224705E-5	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999603184412338	WITHOUT_CLASSIFICATION	3.9681558766224705E-5	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999998225551376	WITHOUT_CLASSIFICATION	1.774448623311558E-7	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999370402195115	WITHOUT_CLASSIFICATION	6.295978048856522E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9999997629967122	WITHOUT_CLASSIFICATION	2.3700328779533927E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999994176337559	WITHOUT_CLASSIFICATION	5.823662441621433E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999987877332865	WITHOUT_CLASSIFICATION	1.2122667134408778E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999987877332865	WITHOUT_CLASSIFICATION	1.2122667134408778E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999987877332865	WITHOUT_CLASSIFICATION	1.2122667134408778E-6	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999994176337559	WITHOUT_CLASSIFICATION	5.823662441621433E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999994176337559	WITHOUT_CLASSIFICATION	5.823662441621433E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999994176337559	WITHOUT_CLASSIFICATION	5.823662441621433E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999994176337559	WITHOUT_CLASSIFICATION	5.823662441621433E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999994176337559	WITHOUT_CLASSIFICATION	5.823662441621433E-7	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999995802998952	WITHOUT_CLASSIFICATION	4.197001046834616E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999994559232616	WITHOUT_CLASSIFICATION	5.440767383870027E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999984207792971	WITHOUT_CLASSIFICATION	1.5792207028873032E-6	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999984207792971	WITHOUT_CLASSIFICATION	1.5792207028873032E-6	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999994559232616	WITHOUT_CLASSIFICATION	5.440767383870027E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999994559232616	WITHOUT_CLASSIFICATION	5.440767383870027E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999994559232616	WITHOUT_CLASSIFICATION	5.440767383870027E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.999998022428759	WITHOUT_CLASSIFICATION	1.977571240985359E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.999998022428759	WITHOUT_CLASSIFICATION	1.977571240985359E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.999998022428759	WITHOUT_CLASSIFICATION	1.977571240985359E-6	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999996327479694	WITHOUT_CLASSIFICATION	3.672520306650438E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9659005992025045	WITHOUT_CLASSIFICATION	0.0340994007974955	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999994559232616	WITHOUT_CLASSIFICATION	5.440767383870027E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.999998022428759	WITHOUT_CLASSIFICATION	1.977571240985359E-6	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999997328668352	WITHOUT_CLASSIFICATION	2.6713316486961874E-7	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999995863982332	WITHOUT_CLASSIFICATION	4.136017668461476E-7	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9999997124419704	WITHOUT_CLASSIFICATION	2.8755802959171177E-7	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9999999666641025	WITHOUT_CLASSIFICATION	3.3335897550123526E-8	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999999590819562	WITHOUT_CLASSIFICATION	4.091804375091424E-8	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9999993424424306	WITHOUT_CLASSIFICATION	6.575575693376299E-7	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999973122648229	WITHOUT_CLASSIFICATION	2.68773517712537E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999971441361653	WITHOUT_CLASSIFICATION	2.855863834874287E-6	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999996634130136	WITHOUT_CLASSIFICATION	3.36586986408069E-7	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.999999736397792	WITHOUT_CLASSIFICATION	2.6360220799843693E-7	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.999999736397792	WITHOUT_CLASSIFICATION	2.6360220799843693E-7	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999997436983076	WITHOUT_CLASSIFICATION	2.563016924660735E-7	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999997436983076	WITHOUT_CLASSIFICATION	2.563016924660735E-7	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999993036126739	WITHOUT_CLASSIFICATION	6.96387326138389E-7	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999993036126739	WITHOUT_CLASSIFICATION	6.96387326138389E-7	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.999999490322069	WITHOUT_CLASSIFICATION	5.096779309158263E-7	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999622907421423	WITHOUT_CLASSIFICATION	3.7709257857753034E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9999208219650053	WITHOUT_CLASSIFICATION	7.917803499473601E-5	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.9999985113992463	WITHOUT_CLASSIFICATION	1.4886007536062942E-6	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999992052310105	WITHOUT_CLASSIFICATION	7.947689895059605E-7	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999918621468296	WITHOUT_CLASSIFICATION	8.13785317035224E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.999999999669046	WITHOUT_CLASSIFICATION	3.3095415248020373E-10	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999996027888457	WITHOUT_CLASSIFICATION	3.97211154278995E-7	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999999709350837	WITHOUT_CLASSIFICATION	2.9064916314265597E-8	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999672018252692	WITHOUT_CLASSIFICATION	3.279817473077765E-5	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999996904740058	WITHOUT_CLASSIFICATION	3.095259941544529E-7	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999999622188785	WITHOUT_CLASSIFICATION	3.7781121377856377E-8	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999892771003394	WITHOUT_CLASSIFICATION	1.0722899660711194E-5	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999994148354868	WITHOUT_CLASSIFICATION	5.851645130598438E-7	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999998399334865	WITHOUT_CLASSIFICATION	1.6006651347862031E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999998092483888	WITHOUT_CLASSIFICATION	1.907516111747476E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999998092483888	WITHOUT_CLASSIFICATION	1.907516111747476E-7	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999997217015142	WITHOUT_CLASSIFICATION	2.7829848585577306E-7	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999999459791008	WITHOUT_CLASSIFICATION	5.402089909206761E-8	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9999997700364126	WITHOUT_CLASSIFICATION	2.2996358731640756E-7	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999999910405928	WITHOUT_CLASSIFICATION	8.959407269799924E-9	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999985683884712	WITHOUT_CLASSIFICATION	1.4316115288179942E-6	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999966528735492	WITHOUT_CLASSIFICATION	3.3471264506974174E-6	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999977484655332	WITHOUT_CLASSIFICATION	2.2515344668683335E-6	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999966978314927	WITHOUT_CLASSIFICATION	3.302168507404211E-6	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999999642308204	WITHOUT_CLASSIFICATION	3.576917957115202E-8	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9999703553837755	WITHOUT_CLASSIFICATION	2.9644616224457942E-5	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9999876548225737	WITHOUT_CLASSIFICATION	1.2345177426407738E-5	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999991900311891	WITHOUT_CLASSIFICATION	8.099688108757748E-7	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.999998587279609	WITHOUT_CLASSIFICATION	1.4127203909269671E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.999999164500569	WITHOUT_CLASSIFICATION	8.354994310698529E-7	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999996994362674	WITHOUT_CLASSIFICATION	3.0056373254033817E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999289111051	WITHOUT_CLASSIFICATION	7.108889479055423E-8	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999289111051	WITHOUT_CLASSIFICATION	7.108889479055423E-8	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999991003314225	WITHOUT_CLASSIFICATION	8.996685774707973E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999991003314225	WITHOUT_CLASSIFICATION	8.996685774707973E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.999997017741166	WITHOUT_CLASSIFICATION	2.982258833968271E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.999997017741166	WITHOUT_CLASSIFICATION	2.982258833968271E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999849113125708	WITHOUT_CLASSIFICATION	1.5088687429193232E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999370402195115	WITHOUT_CLASSIFICATION	6.295978048856522E-5	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9902945194416629	WITHOUT_CLASSIFICATION	0.009705480558337138	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9826831538860054	WITHOUT_CLASSIFICATION	0.0173168461139947	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999999332768311	WITHOUT_CLASSIFICATION	6.67231688935436E-8	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999981696268233	WITHOUT_CLASSIFICATION	1.8303731767304037E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999289111051	WITHOUT_CLASSIFICATION	7.108889479055423E-8	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9999957048142399	WITHOUT_CLASSIFICATION	4.295185760134872E-6	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9999078493764263	WITHOUT_CLASSIFICATION	9.215062357364585E-5	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999998660923634	WITHOUT_CLASSIFICATION	1.3390763658552885E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997246775921	WITHOUT_CLASSIFICATION	2.7532240785504E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999991003314225	WITHOUT_CLASSIFICATION	8.996685774707973E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.999997017741166	WITHOUT_CLASSIFICATION	2.982258833968271E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999370402195115	WITHOUT_CLASSIFICATION	6.295978048856522E-5	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999371390927	WITHOUT_CLASSIFICATION	6.286090734745113E-8	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999999996751638	WITHOUT_CLASSIFICATION	3.2483616926611987E-10	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999991474921776	WITHOUT_CLASSIFICATION	8.525078224475647E-7	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999999173508151	WITHOUT_CLASSIFICATION	8.264918494273653E-8	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999999551702756	WITHOUT_CLASSIFICATION	4.4829724362318704E-8	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999999323213411	WITHOUT_CLASSIFICATION	6.767865898703447E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990885238864913	WITHOUT_CLASSIFICATION	9.114761135086901E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999927518710523	WITHOUT_CLASSIFICATION	7.248128947677184E-6	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999962576028687	WITHOUT_CLASSIFICATION	3.7423971313106373E-6	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9995837405173448	WITHOUT_CLASSIFICATION	4.162594826552603E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999997501092178	WITHOUT_CLASSIFICATION	2.4989078216673425E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999564251775951	WITHOUT_CLASSIFICATION	4.357482240492023E-5	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999983915720396	WITHOUT_CLASSIFICATION	1.608427960331652E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999983915720396	WITHOUT_CLASSIFICATION	1.608427960331652E-6	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999975785016789	WITHOUT_CLASSIFICATION	2.421498321053772E-6	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999975785016789	WITHOUT_CLASSIFICATION	2.421498321053772E-6	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.999998352367476	WITHOUT_CLASSIFICATION	1.6476325238775662E-6	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.999998352367476	WITHOUT_CLASSIFICATION	1.6476325238775662E-6	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999989336293204	WITHOUT_CLASSIFICATION	1.0663706796322297E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999880494652575	WITHOUT_CLASSIFICATION	1.1950534742372411E-5	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9999842387805221	WITHOUT_CLASSIFICATION	1.5761219477869778E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9831048828914951	WITHOUT_CLASSIFICATION	0.0168951171085049	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.9999890659799506	WITHOUT_CLASSIFICATION	1.0934020049466094E-5	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999984050738647	WITHOUT_CLASSIFICATION	1.5949261351797108E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999996279626912	WITHOUT_CLASSIFICATION	3.720373088303174E-7	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999996279626912	WITHOUT_CLASSIFICATION	3.720373088303174E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999999846099443	WITHOUT_CLASSIFICATION	1.5390055668184086E-8	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999999846099443	WITHOUT_CLASSIFICATION	1.5390055668184086E-8	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999992061795009	WITHOUT_CLASSIFICATION	7.9382049908428E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.999770344944329	WITHOUT_CLASSIFICATION	2.296550556708959E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9998195861826298	WITHOUT_CLASSIFICATION	1.8041381737011997E-4	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999876752362155	WITHOUT_CLASSIFICATION	1.2324763784576198E-5	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9999916438083918	WITHOUT_CLASSIFICATION	8.356191608204568E-6	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999997525104198	WITHOUT_CLASSIFICATION	2.474895800987127E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999997574426271	WITHOUT_CLASSIFICATION	2.4255737286989476E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.999770344944329	WITHOUT_CLASSIFICATION	2.296550556708959E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9998195861826298	WITHOUT_CLASSIFICATION	1.8041381737011997E-4	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999876752362155	WITHOUT_CLASSIFICATION	1.2324763784576198E-5	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999999534707837	WITHOUT_CLASSIFICATION	4.6529216267905366E-8	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999899027024153	WITHOUT_CLASSIFICATION	1.0097297584806447E-5	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999997430909988	WITHOUT_CLASSIFICATION	2.569090012234479E-7	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999897675594335	WITHOUT_CLASSIFICATION	1.023244056652775E-5	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9827457093282997	WITHOUT_CLASSIFICATION	0.017254290671700243	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9979096705622525	WITHOUT_CLASSIFICATION	0.002090329437747505	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999718433002467	WITHOUT_CLASSIFICATION	2.815669975340813E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999931778049328	WITHOUT_CLASSIFICATION	6.822195067106731E-6	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999977780158388	WITHOUT_CLASSIFICATION	2.221984161334126E-6	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999867365662624	WITHOUT_CLASSIFICATION	1.3263433737564016E-5	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999996080514886	WITHOUT_CLASSIFICATION	3.919485113768635E-7	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999994203337434	WITHOUT_CLASSIFICATION	5.79666256507052E-7	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999994203337434	WITHOUT_CLASSIFICATION	5.79666256507052E-7	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999978666040418	WITHOUT_CLASSIFICATION	2.133395958223093E-6	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999978666040418	WITHOUT_CLASSIFICATION	2.133395958223093E-6	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999998601469016	WITHOUT_CLASSIFICATION	1.398530983812518E-7	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9999999304544218	WITHOUT_CLASSIFICATION	6.954557816465692E-8	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9999988211844292	WITHOUT_CLASSIFICATION	1.1788155707955069E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999992021510485	WITHOUT_CLASSIFICATION	7.978489514794704E-7	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999990571393165	WITHOUT_CLASSIFICATION	9.428606835763455E-7	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999981894351976	WITHOUT_CLASSIFICATION	1.8105648025062177E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999927518710523	WITHOUT_CLASSIFICATION	7.248128947677184E-6	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999979473982811	WITHOUT_CLASSIFICATION	2.0526017188948278E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999981903026212	WITHOUT_CLASSIFICATION	1.8096973788483285E-6	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999998498803392	WITHOUT_CLASSIFICATION	1.5011966086265362E-7	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999732883603449	WITHOUT_CLASSIFICATION	2.6711639655038168E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999915251229726	WITHOUT_CLASSIFICATION	8.474877027398644E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999971114664512	WITHOUT_CLASSIFICATION	2.888533548833245E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999971114664512	WITHOUT_CLASSIFICATION	2.888533548833245E-6	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999786688977939	WITHOUT_CLASSIFICATION	2.133110220610949E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999947765927404	WITHOUT_CLASSIFICATION	5.223407259586265E-6	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999726079590321	WITHOUT_CLASSIFICATION	2.7392040967897262E-5	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999787804218222	WITHOUT_CLASSIFICATION	2.121957817775E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999999344050697	WITHOUT_CLASSIFICATION	6.55949302605599E-8	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9999994819560384	WITHOUT_CLASSIFICATION	5.180439616198496E-7	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9999997310856635	WITHOUT_CLASSIFICATION	2.6891433649442864E-7	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999991037110824	WITHOUT_CLASSIFICATION	8.962889176789676E-7	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9999999664331901	WITHOUT_CLASSIFICATION	3.356680992263177E-8	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9999999678534383	WITHOUT_CLASSIFICATION	3.214656169278623E-8	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999998799129908	WITHOUT_CLASSIFICATION	1.200870092395358E-7	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999994876135917	WITHOUT_CLASSIFICATION	5.123864081857645E-7	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999989156851113	WITHOUT_CLASSIFICATION	1.0843148887138353E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999989110345737	WITHOUT_CLASSIFICATION	1.0889654262601266E-6	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999988729378141	WITHOUT_CLASSIFICATION	1.127062185816384E-6	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999989312791163	WITHOUT_CLASSIFICATION	1.0687208836507005E-6	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.9999999081648845	WITHOUT_CLASSIFICATION	9.183511557084461E-8	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999988288533338	WITHOUT_CLASSIFICATION	1.1711466662065197E-6	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9999969400092868	WITHOUT_CLASSIFICATION	3.0599907130869496E-6	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9999999709544883	WITHOUT_CLASSIFICATION	2.9045511587256863E-8	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999954378254057	WITHOUT_CLASSIFICATION	4.5621745943270785E-6	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999993017546004	WITHOUT_CLASSIFICATION	6.982453996534772E-7	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999989110345737	WITHOUT_CLASSIFICATION	1.0889654262601266E-6	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.999999129153763	WITHOUT_CLASSIFICATION	8.708462370353997E-7	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999988729378141	WITHOUT_CLASSIFICATION	1.127062185816384E-6	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999982660497936	WITHOUT_CLASSIFICATION	1.7339502063839425E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999998154494257	WITHOUT_CLASSIFICATION	1.8455057440668652E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999989312791163	WITHOUT_CLASSIFICATION	1.0687208836507005E-6	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999988288533338	WITHOUT_CLASSIFICATION	1.1711466662065197E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999993015549756	WITHOUT_CLASSIFICATION	6.984450244484013E-7	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999962284399672	WITHOUT_CLASSIFICATION	3.7715600328673273E-6	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999849200577	WITHOUT_CLASSIFICATION	1.5079942286721594E-8	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999999739237512	WITHOUT_CLASSIFICATION	2.6076248858159133E-8	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.9999996907572548	WITHOUT_CLASSIFICATION	3.0924274520455236E-7	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999986423173733	WITHOUT_CLASSIFICATION	1.3576826265862813E-6	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999895541278673	WITHOUT_CLASSIFICATION	1.0445872132664515E-5	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999997025451165	WITHOUT_CLASSIFICATION	2.9745488357569075E-7	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999987694742818	WITHOUT_CLASSIFICATION	1.2305257182316993E-6	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9999934859220178	WITHOUT_CLASSIFICATION	6.514077982168483E-6	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999999802655613	WITHOUT_CLASSIFICATION	1.9734438727485123E-8	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999842544275731	WITHOUT_CLASSIFICATION	1.5745572426829993E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999982660497936	WITHOUT_CLASSIFICATION	1.7339502063839425E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999993015549756	WITHOUT_CLASSIFICATION	6.984450244484013E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999997025451165	WITHOUT_CLASSIFICATION	2.9745488357569075E-7	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999968364117198	WITHOUT_CLASSIFICATION	3.163588280280123E-6	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999987006861177	WITHOUT_CLASSIFICATION	1.2993138822890438E-6	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999972140754423	WITHOUT_CLASSIFICATION	2.7859245578004054E-6	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999543822519089	WITHOUT_CLASSIFICATION	4.5617748091118085E-5	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.999998568932807	WITHOUT_CLASSIFICATION	1.4310671929791798E-6	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999996272966983	WITHOUT_CLASSIFICATION	3.7270330165507453E-7	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999996433349254	WITHOUT_CLASSIFICATION	3.5666507469972693E-7	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999999940113611	WITHOUT_CLASSIFICATION	5.988638892331372E-9	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999998544606417	WITHOUT_CLASSIFICATION	1.4553935840294818E-7	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999994377855811	WITHOUT_CLASSIFICATION	5.622144190117004E-7	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999995299516056	WITHOUT_CLASSIFICATION	4.700483944324795E-7	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999992404512781	WITHOUT_CLASSIFICATION	7.595487218877844E-7	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999995205556502	WITHOUT_CLASSIFICATION	4.794443497153743E-7	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999999890430943	WITHOUT_CLASSIFICATION	1.0956905736268864E-8	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999799437547399	WITHOUT_CLASSIFICATION	2.0056245260133968E-5	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999949846411059	WITHOUT_CLASSIFICATION	5.015358894030353E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999994213273967	WITHOUT_CLASSIFICATION	5.786726032174397E-7	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999999911577565	WITHOUT_CLASSIFICATION	8.84224346125063E-9	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9998234586512025	WITHOUT_CLASSIFICATION	1.7654134879757294E-4	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999999686320843	WITHOUT_CLASSIFICATION	3.1367915754273214E-8	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999999711930246	WITHOUT_CLASSIFICATION	2.880697540210491E-8	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9752278336530177	WITHOUT_CLASSIFICATION	0.024772166346982333	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999912955294167	WITHOUT_CLASSIFICATION	8.704470583313422E-6	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.999998391663909	WITHOUT_CLASSIFICATION	1.6083360909916936E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999880494652575	WITHOUT_CLASSIFICATION	1.1950534742372411E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999992061795009	WITHOUT_CLASSIFICATION	7.9382049908428E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.999770344944329	WITHOUT_CLASSIFICATION	2.296550556708959E-4	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999967923987004	WITHOUT_CLASSIFICATION	3.207601299675076E-6	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999989408099608	WITHOUT_CLASSIFICATION	1.0591900392791293E-6	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999991808356885	WITHOUT_CLASSIFICATION	8.191643114236042E-7	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999887409035055	WITHOUT_CLASSIFICATION	1.1259096494493738E-5	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9999978019918189	WITHOUT_CLASSIFICATION	2.198008181170344E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.999991249736511	WITHOUT_CLASSIFICATION	8.750263489101097E-6	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999994870536892	WITHOUT_CLASSIFICATION	5.129463106810781E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999948096407185	WITHOUT_CLASSIFICATION	5.190359281511854E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999807141660549	WITHOUT_CLASSIFICATION	1.9285833945047803E-5	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999982710984376	WITHOUT_CLASSIFICATION	1.7289015622925942E-6	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9999820930509368	WITHOUT_CLASSIFICATION	1.7906949063257573E-5	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999892825236243	WITHOUT_CLASSIFICATION	1.0717476375636144E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999964095903178	WITHOUT_CLASSIFICATION	3.5904096823074295E-6	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9998029210665189	WITHOUT_CLASSIFICATION	1.9707893348114695E-4	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9998029210665189	WITHOUT_CLASSIFICATION	1.9707893348114695E-4	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999493429210891	WITHOUT_CLASSIFICATION	5.065707891106144E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999493429210891	WITHOUT_CLASSIFICATION	5.065707891106144E-5	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9991924978015089	WITHOUT_CLASSIFICATION	8.075021984910213E-4	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999890842683956	WITHOUT_CLASSIFICATION	1.0915731604345471E-5	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999994573669271	WITHOUT_CLASSIFICATION	5.426330730314446E-7	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9999990593490462	WITHOUT_CLASSIFICATION	9.406509537231626E-7	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999996070185223	WITHOUT_CLASSIFICATION	3.929814777587084E-7	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999954245399062	WITHOUT_CLASSIFICATION	4.57546009381097E-6	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9999999793914934	WITHOUT_CLASSIFICATION	2.060850662686411E-8	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999999916916924	WITHOUT_CLASSIFICATION	8.308307503871995E-9	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.9999999876808977	WITHOUT_CLASSIFICATION	1.231910234046272E-8	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999984050738647	WITHOUT_CLASSIFICATION	1.5949261351797108E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999876752362155	WITHOUT_CLASSIFICATION	1.2324763784576198E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999867365662624	WITHOUT_CLASSIFICATION	1.3263433737564016E-5	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999978653354095	WITHOUT_CLASSIFICATION	2.1346645905054446E-6	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999990815576778	WITHOUT_CLASSIFICATION	9.184423221774614E-7	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999919497635147	WITHOUT_CLASSIFICATION	8.050236485277417E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998289557306	WITHOUT_CLASSIFICATION	1.7104426939691633E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999822305874	WITHOUT_CLASSIFICATION	1.776941251012212E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997671219488	WITHOUT_CLASSIFICATION	2.3287805127848572E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999890289045	WITHOUT_CLASSIFICATION	1.0971095485973513E-8	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.9999985978763833	WITHOUT_CLASSIFICATION	1.4021236166501586E-6	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999992801567262	WITHOUT_CLASSIFICATION	7.198432736868468E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999054309467	WITHOUT_CLASSIFICATION	9.456905330582013E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998973201513	WITHOUT_CLASSIFICATION	1.0267984871044692E-7	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9999999485517992	WITHOUT_CLASSIFICATION	5.14482007713709E-8	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999961201607066	WITHOUT_CLASSIFICATION	3.879839293399294E-6	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999961201607066	WITHOUT_CLASSIFICATION	3.879839293399294E-6	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9999998850551948	WITHOUT_CLASSIFICATION	1.1494480517075934E-7	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999995174501645	WITHOUT_CLASSIFICATION	4.825498355865885E-7	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999963970469637	WITHOUT_CLASSIFICATION	3.6029530362806554E-6	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999996969523608	WITHOUT_CLASSIFICATION	3.030476392290556E-7	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999841477193689	WITHOUT_CLASSIFICATION	1.5852280631023424E-5	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9999923885334323	WITHOUT_CLASSIFICATION	7.611466567730305E-6	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999982578440121	WITHOUT_CLASSIFICATION	1.7421559878956735E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999998786266115	WITHOUT_CLASSIFICATION	1.2137338848030123E-7	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999982578440121	WITHOUT_CLASSIFICATION	1.7421559878956735E-6	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999569104355993	WITHOUT_CLASSIFICATION	4.308956440070951E-5	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999957062183409	WITHOUT_CLASSIFICATION	4.293781659118298E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999998786266115	WITHOUT_CLASSIFICATION	1.2137338848030123E-7	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999951735512759	WITHOUT_CLASSIFICATION	4.826448724072339E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999787853981	WITHOUT_CLASSIFICATION	2.1214601814565606E-8	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999999666181528	WITHOUT_CLASSIFICATION	3.338184708603618E-8	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999988848651098	WITHOUT_CLASSIFICATION	1.1151348902397635E-6	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999997857513373	WITHOUT_CLASSIFICATION	2.142486627021559E-7	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.999951794475608	WITHOUT_CLASSIFICATION	4.820552439189121E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999986351519724	WITHOUT_CLASSIFICATION	1.3648480275179449E-6	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999997046563465	WITHOUT_CLASSIFICATION	2.953436535351751E-7	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999997729817448	WITHOUT_CLASSIFICATION	2.2701825521788814E-7	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999508598606	WITHOUT_CLASSIFICATION	4.9140139323859265E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999508598606	WITHOUT_CLASSIFICATION	4.9140139323859265E-8	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999995440540412	WITHOUT_CLASSIFICATION	4.559459587620471E-7	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9999998788228714	WITHOUT_CLASSIFICATION	1.2117712853429723E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999779011989378	WITHOUT_CLASSIFICATION	2.20988010621403E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999779011989378	WITHOUT_CLASSIFICATION	2.20988010621403E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999779011989378	WITHOUT_CLASSIFICATION	2.20988010621403E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998116254021523	WITHOUT_CLASSIFICATION	1.8837459784774722E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998116254021523	WITHOUT_CLASSIFICATION	1.8837459784774722E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998116254021523	WITHOUT_CLASSIFICATION	1.8837459784774722E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999960801064489	WITHOUT_CLASSIFICATION	3.9198935510650965E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999960801064489	WITHOUT_CLASSIFICATION	3.9198935510650965E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999960801064489	WITHOUT_CLASSIFICATION	3.9198935510650965E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999695204745721	WITHOUT_CLASSIFICATION	3.0479525427914418E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999695204745721	WITHOUT_CLASSIFICATION	3.0479525427914418E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999997574426271	WITHOUT_CLASSIFICATION	2.4255737286989476E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999997574426271	WITHOUT_CLASSIFICATION	2.4255737286989476E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999510476668965	WITHOUT_CLASSIFICATION	4.8952333103582445E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999927518710523	WITHOUT_CLASSIFICATION	7.248128947677184E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999927518710523	WITHOUT_CLASSIFICATION	7.248128947677184E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990885238864913	WITHOUT_CLASSIFICATION	9.114761135086901E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9995837405173448	WITHOUT_CLASSIFICATION	4.162594826552603E-4	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999880494652575	WITHOUT_CLASSIFICATION	1.1950534742372411E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999890842683956	WITHOUT_CLASSIFICATION	1.0915731604345471E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999779011989378	WITHOUT_CLASSIFICATION	2.20988010621403E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998116254021523	WITHOUT_CLASSIFICATION	1.8837459784774722E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998116254021523	WITHOUT_CLASSIFICATION	1.8837459784774722E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999960801064489	WITHOUT_CLASSIFICATION	3.9198935510650965E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999960801064489	WITHOUT_CLASSIFICATION	3.9198935510650965E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999695204745721	WITHOUT_CLASSIFICATION	3.0479525427914418E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999695204745721	WITHOUT_CLASSIFICATION	3.0479525427914418E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999787853981	WITHOUT_CLASSIFICATION	2.1214601814565606E-8	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999963075642343	WITHOUT_CLASSIFICATION	3.6924357657511023E-6	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9999930466131495	WITHOUT_CLASSIFICATION	6.953386850613661E-6	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999999645610055	WITHOUT_CLASSIFICATION	3.5438994475900004E-8	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999946021945049	WITHOUT_CLASSIFICATION	5.3978054951795315E-6	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999998070315458	WITHOUT_CLASSIFICATION	1.929684543289153E-7	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9895150754392198	WITHOUT_CLASSIFICATION	0.010484924560780122	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999778651203	WITHOUT_CLASSIFICATION	2.2134879801162335E-8	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999990150339952	WITHOUT_CLASSIFICATION	9.849660047430055E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9999282394260622	WITHOUT_CLASSIFICATION	7.176057393777798E-5	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999999718048587	WITHOUT_CLASSIFICATION	2.8195141289478278E-8	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9920171142793927	WITHOUT_CLASSIFICATION	0.0079828857206073	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999999417581379	WITHOUT_CLASSIFICATION	5.824186208306567E-8	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999999417581379	WITHOUT_CLASSIFICATION	5.824186208306567E-8	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999890693841876	WITHOUT_CLASSIFICATION	1.0930615812379045E-5	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999890693841876	WITHOUT_CLASSIFICATION	1.0930615812379045E-5	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999697963082889	WITHOUT_CLASSIFICATION	3.0203691711231274E-5	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999697963082889	WITHOUT_CLASSIFICATION	3.0203691711231274E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999787853981	WITHOUT_CLASSIFICATION	2.1214601814565606E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9990885238864913	WITHOUT_CLASSIFICATION	9.114761135086901E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9995837405173448	WITHOUT_CLASSIFICATION	4.162594826552603E-4	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999989336293204	WITHOUT_CLASSIFICATION	1.0663706796322297E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999984050738647	WITHOUT_CLASSIFICATION	1.5949261351797108E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999992061795009	WITHOUT_CLASSIFICATION	7.9382049908428E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.999770344944329	WITHOUT_CLASSIFICATION	2.296550556708959E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999948096407185	WITHOUT_CLASSIFICATION	5.190359281511854E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999948096407185	WITHOUT_CLASSIFICATION	5.190359281511854E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999807141660549	WITHOUT_CLASSIFICATION	1.9285833945047803E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999807141660549	WITHOUT_CLASSIFICATION	1.9285833945047803E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999998785971581	WITHOUT_CLASSIFICATION	1.2140284195785516E-7	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999999292906557	WITHOUT_CLASSIFICATION	7.070934427705939E-8	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999995460864413	WITHOUT_CLASSIFICATION	4.539135587136854E-7	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999976058647887	WITHOUT_CLASSIFICATION	2.39413521124304E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999976058647887	WITHOUT_CLASSIFICATION	2.39413521124304E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999998457188877	WITHOUT_CLASSIFICATION	1.5428111232578032E-7	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999900278765622	WITHOUT_CLASSIFICATION	9.972123437892109E-6	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999999655679362	WITHOUT_CLASSIFICATION	3.44320638224844E-8	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999992002425694	WITHOUT_CLASSIFICATION	7.997574306904094E-7	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999999142093778	WITHOUT_CLASSIFICATION	8.579062216147214E-8	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999999125167383	WITHOUT_CLASSIFICATION	8.74832617726136E-8	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999997772933213	WITHOUT_CLASSIFICATION	2.2270667876880528E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999997772933213	WITHOUT_CLASSIFICATION	2.2270667876880528E-7	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.9999998322412149	WITHOUT_CLASSIFICATION	1.6775878513425864E-7	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9999999299377657	WITHOUT_CLASSIFICATION	7.00622344433299E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999998785971581	WITHOUT_CLASSIFICATION	1.2140284195785516E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999998785971581	WITHOUT_CLASSIFICATION	1.2140284195785516E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999980475278936	WITHOUT_CLASSIFICATION	1.952472106313244E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999976058647887	WITHOUT_CLASSIFICATION	2.39413521124304E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.999998731831651	WITHOUT_CLASSIFICATION	1.2681683489341426E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999996731982982	WITHOUT_CLASSIFICATION	3.268017017356467E-7	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999996731982982	WITHOUT_CLASSIFICATION	3.268017017356467E-7	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999998457188877	WITHOUT_CLASSIFICATION	1.5428111232578032E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999992002425694	WITHOUT_CLASSIFICATION	7.997574306904094E-7	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999996885771817	WITHOUT_CLASSIFICATION	3.1142281829125474E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999997553380375	WITHOUT_CLASSIFICATION	2.4466196247603134E-7	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999710304940446	WITHOUT_CLASSIFICATION	2.8969505955352196E-5	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999968371422074	WITHOUT_CLASSIFICATION	3.162857792559915E-6	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9999933867848179	WITHOUT_CLASSIFICATION	6.613215182056037E-6	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999996976410173	WITHOUT_CLASSIFICATION	3.0235898265351866E-7	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9999712397097037	WITHOUT_CLASSIFICATION	2.876029029638E-5	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999955906270764	WITHOUT_CLASSIFICATION	4.409372923632465E-6	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999963582495698	WITHOUT_CLASSIFICATION	3.641750430369458E-6	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999999921655544	WITHOUT_CLASSIFICATION	7.83444573072837E-9	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999978640384	WITHOUT_CLASSIFICATION	2.135961628843858E-9	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999952458581776	WITHOUT_CLASSIFICATION	4.754141822442176E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.999998452294568	WITHOUT_CLASSIFICATION	1.5477054320028035E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999324688347	WITHOUT_CLASSIFICATION	6.753116522573734E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999541833106	WITHOUT_CLASSIFICATION	4.581668940412438E-8	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999994030820436	WITHOUT_CLASSIFICATION	5.969179564389324E-7	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999948807410475	WITHOUT_CLASSIFICATION	5.119258952616927E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.999999992727545	WITHOUT_CLASSIFICATION	7.272455048962776E-9	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999939151737647	WITHOUT_CLASSIFICATION	6.08482623534003E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999967149824	WITHOUT_CLASSIFICATION	3.2850176414963562E-9	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999986003925447	WITHOUT_CLASSIFICATION	1.3996074553097449E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999996139089645	WITHOUT_CLASSIFICATION	3.860910353883424E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999990810517089	WITHOUT_CLASSIFICATION	9.189482912247087E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999990810517089	WITHOUT_CLASSIFICATION	9.189482912247087E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999990810517089	WITHOUT_CLASSIFICATION	9.189482912247087E-7	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.999926987711773	WITHOUT_CLASSIFICATION	7.301228822701888E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.999926987711773	WITHOUT_CLASSIFICATION	7.301228822701888E-5	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999996298942458	WITHOUT_CLASSIFICATION	3.7010575411396937E-7	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999999392849243	WITHOUT_CLASSIFICATION	6.071507576822802E-8	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.999997733191684	WITHOUT_CLASSIFICATION	2.266808316051351E-6	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999977797972307	WITHOUT_CLASSIFICATION	2.2202027691798473E-6	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999999640485008	WITHOUT_CLASSIFICATION	3.595149914970305E-8	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999912925182927	WITHOUT_CLASSIFICATION	8.70748170742096E-6	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9999336883915039	WITHOUT_CLASSIFICATION	6.631160849610772E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9997547720941523	WITHOUT_CLASSIFICATION	2.4522790584770527E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.999998413364219	WITHOUT_CLASSIFICATION	1.5866357809480856E-6	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999877225106808	WITHOUT_CLASSIFICATION	1.2277489319102973E-5	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999990071224854	WITHOUT_CLASSIFICATION	9.928775146505656E-7	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999998414136936	WITHOUT_CLASSIFICATION	1.585863063995852E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999998414136936	WITHOUT_CLASSIFICATION	1.585863063995852E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999853969119	WITHOUT_CLASSIFICATION	1.4603088124931783E-8	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9999470533722977	WITHOUT_CLASSIFICATION	5.294662770215453E-5	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999946896764	WITHOUT_CLASSIFICATION	5.310323591575575E-9	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999989925346955	WITHOUT_CLASSIFICATION	1.0074653045905855E-6	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999989925346955	WITHOUT_CLASSIFICATION	1.0074653045905855E-6	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999989925346955	WITHOUT_CLASSIFICATION	1.0074653045905855E-6	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999999754317687	WITHOUT_CLASSIFICATION	2.456823129882336E-8	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999762292765	WITHOUT_CLASSIFICATION	2.3770723466324717E-8	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999891444414	WITHOUT_CLASSIFICATION	1.0855558557651198E-8	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999946540131294	WITHOUT_CLASSIFICATION	5.345986870673422E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.999998587279609	WITHOUT_CLASSIFICATION	1.4127203909269671E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.999999164500569	WITHOUT_CLASSIFICATION	8.354994310698529E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999952458581776	WITHOUT_CLASSIFICATION	4.754141822442176E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.999998452294568	WITHOUT_CLASSIFICATION	1.5477054320028035E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.999999992727545	WITHOUT_CLASSIFICATION	7.272455048962776E-9	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999939151737647	WITHOUT_CLASSIFICATION	6.08482623534003E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999967149824	WITHOUT_CLASSIFICATION	3.2850176414963562E-9	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999986003925447	WITHOUT_CLASSIFICATION	1.3996074553097449E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999996139089645	WITHOUT_CLASSIFICATION	3.860910353883424E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999989925346955	WITHOUT_CLASSIFICATION	1.0074653045905855E-6	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.999996514568502	WITHOUT_CLASSIFICATION	3.4854314979412954E-6	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999999292901215	WITHOUT_CLASSIFICATION	7.070987857383278E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999989724530721	WITHOUT_CLASSIFICATION	1.0275469278511332E-6	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.6838462995966815	WITHOUT_CLASSIFICATION	0.31615370040331847	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9999767368443627	WITHOUT_CLASSIFICATION	2.3263155637260127E-5	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9999232800537632	WITHOUT_CLASSIFICATION	7.671994623677071E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999205358825565	WITHOUT_CLASSIFICATION	7.946411744352054E-5	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999999093109496	WITHOUT_CLASSIFICATION	9.068905046323572E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999994928684556	WITHOUT_CLASSIFICATION	5.07131544417015E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999994928684556	WITHOUT_CLASSIFICATION	5.07131544417015E-7	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999739730485	WITHOUT_CLASSIFICATION	2.6026951536280874E-8	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999739730485	WITHOUT_CLASSIFICATION	2.6026951536280874E-8	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999989417948254	WITHOUT_CLASSIFICATION	1.058205174636827E-6	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.999999998747904	WITHOUT_CLASSIFICATION	1.252095965701566E-9	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999948829547	WITHOUT_CLASSIFICATION	5.117045337973536E-9	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999965223574957	WITHOUT_CLASSIFICATION	3.477642504328265E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999965223574957	WITHOUT_CLASSIFICATION	3.477642504328265E-6	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999842320458662	WITHOUT_CLASSIFICATION	1.576795413376859E-5	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999830618730353	WITHOUT_CLASSIFICATION	1.69381269647518E-5	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999967256675	WITHOUT_CLASSIFICATION	3.2743325862230164E-9	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999324688347	WITHOUT_CLASSIFICATION	6.753116522573734E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999965223574957	WITHOUT_CLASSIFICATION	3.477642504328265E-6	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999999967651252	WITHOUT_CLASSIFICATION	3.234874856965588E-9	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999893271089022	WITHOUT_CLASSIFICATION	1.0672891097743329E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999121246105	WITHOUT_CLASSIFICATION	8.787538955571386E-8	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999998122247566	WITHOUT_CLASSIFICATION	1.8777524340403644E-7	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999999880173164	WITHOUT_CLASSIFICATION	1.1982683663857449E-8	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999996661823444	WITHOUT_CLASSIFICATION	3.3381765569480823E-7	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999987923603973	WITHOUT_CLASSIFICATION	1.2076396026883803E-6	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999995315496615	WITHOUT_CLASSIFICATION	4.684503385229552E-7	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999988221624424	WITHOUT_CLASSIFICATION	1.1778375576122275E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999988221624424	WITHOUT_CLASSIFICATION	1.1778375576122275E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999945194257249	WITHOUT_CLASSIFICATION	5.48057427514948E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999945194257249	WITHOUT_CLASSIFICATION	5.48057427514948E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999945194257249	WITHOUT_CLASSIFICATION	5.48057427514948E-6	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999926320621255	WITHOUT_CLASSIFICATION	7.36793787446781E-6	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999946856746925	WITHOUT_CLASSIFICATION	5.314325307537219E-6	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999946856746925	WITHOUT_CLASSIFICATION	5.314325307537219E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.999996609754727	WITHOUT_CLASSIFICATION	3.390245273066791E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.999996609754727	WITHOUT_CLASSIFICATION	3.390245273066791E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999981823133991	WITHOUT_CLASSIFICATION	1.8176866008308837E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.99999877169957	WITHOUT_CLASSIFICATION	1.2283004300788444E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999987582328097	WITHOUT_CLASSIFICATION	1.2417671902792379E-6	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999995578132299	WITHOUT_CLASSIFICATION	4.421867701232535E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999035609072902	WITHOUT_CLASSIFICATION	9.643909270981016E-5	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999602374727042	WITHOUT_CLASSIFICATION	3.976252729580911E-5	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999731529271058	WITHOUT_CLASSIFICATION	2.6847072894217334E-5	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999918394954966	WITHOUT_CLASSIFICATION	8.160504503348546E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999996945417401	WITHOUT_CLASSIFICATION	3.0545825984000037E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999957296738554	WITHOUT_CLASSIFICATION	4.27032614450925E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999937752294109	WITHOUT_CLASSIFICATION	6.224770588980226E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999995652062431	WITHOUT_CLASSIFICATION	4.3479375693292067E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999995366361143	WITHOUT_CLASSIFICATION	4.633638857162176E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.999999966094231	WITHOUT_CLASSIFICATION	3.390576902278941E-8	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.997447258145493	WITHOUT_CLASSIFICATION	0.0025527418545070054	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999999606397082	WITHOUT_CLASSIFICATION	3.936029183903038E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999983367901735	WITHOUT_CLASSIFICATION	1.6632098265729702E-6	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9999927034614349	WITHOUT_CLASSIFICATION	7.29653856500869E-6	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999997403587798	WITHOUT_CLASSIFICATION	2.59641220202837E-7	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999993049375095	WITHOUT_CLASSIFICATION	6.950624904656773E-7	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999998322060566	WITHOUT_CLASSIFICATION	1.6779394334523412E-7	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999998821030256	WITHOUT_CLASSIFICATION	1.1789697429139525E-7	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999998995827276	WITHOUT_CLASSIFICATION	1.0041727226142892E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999997857131132	WITHOUT_CLASSIFICATION	2.1428688690531808E-7	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999993582058991	WITHOUT_CLASSIFICATION	6.417941008884102E-7	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.999999859905668	WITHOUT_CLASSIFICATION	1.4009433200108735E-7	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999991541455452	WITHOUT_CLASSIFICATION	8.458544547325168E-7	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.999992858576383	WITHOUT_CLASSIFICATION	7.141423617043179E-6	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999999179425177	WITHOUT_CLASSIFICATION	8.205748224082116E-8	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999973370958275	WITHOUT_CLASSIFICATION	2.6629041724223957E-6	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999758147491733	WITHOUT_CLASSIFICATION	2.4185250826668124E-5	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9999296523122325	WITHOUT_CLASSIFICATION	7.0347687767476E-5	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999993229687886	WITHOUT_CLASSIFICATION	6.770312113812351E-7	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999799934517658	WITHOUT_CLASSIFICATION	2.0006548234287514E-5	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999896897427983	WITHOUT_CLASSIFICATION	1.0310257201783468E-5	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999997139719206	WITHOUT_CLASSIFICATION	2.860280794179421E-7	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999966856946519	WITHOUT_CLASSIFICATION	3.31430534801172E-6	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999995468735796	WITHOUT_CLASSIFICATION	4.531264202788975E-7	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999974839042799	WITHOUT_CLASSIFICATION	2.5160957200354154E-6	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999705303434113	WITHOUT_CLASSIFICATION	2.9469656588581765E-5	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999999542795581	WITHOUT_CLASSIFICATION	4.5720441854967456E-8	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999993023983645	WITHOUT_CLASSIFICATION	6.97601635509494E-7	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999973629781855	WITHOUT_CLASSIFICATION	2.63702181440188E-6	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999975542255639	WITHOUT_CLASSIFICATION	2.4457744361068303E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9999941808750367	WITHOUT_CLASSIFICATION	5.8191249634281344E-6	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9999908990098362	WITHOUT_CLASSIFICATION	9.100990163761163E-6	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999616574751925	WITHOUT_CLASSIFICATION	3.8342524807450976E-5	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999980415221348	WITHOUT_CLASSIFICATION	1.9584778651436407E-6	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9999934135729933	WITHOUT_CLASSIFICATION	6.586427006700021E-6	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9999185972325868	WITHOUT_CLASSIFICATION	8.140276741321302E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999993767125664	WITHOUT_CLASSIFICATION	6.232874336008607E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999928365229	WITHOUT_CLASSIFICATION	7.163477182900979E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999107808	WITHOUT_CLASSIFICATION	8.921920004234757E-8	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999775113011947	WITHOUT_CLASSIFICATION	2.248869880528093E-5	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999775113011947	WITHOUT_CLASSIFICATION	2.248869880528093E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999985010606104	WITHOUT_CLASSIFICATION	1.4989393897067666E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999978337634381	WITHOUT_CLASSIFICATION	2.16623656185429E-6	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999968692516342	WITHOUT_CLASSIFICATION	3.130748365803885E-6	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999999657035895	WITHOUT_CLASSIFICATION	3.429641044735201E-8	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999999928282375	WITHOUT_CLASSIFICATION	7.171762537911053E-9	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999785756777799	WITHOUT_CLASSIFICATION	2.1424322220007116E-5	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9999693464264713	WITHOUT_CLASSIFICATION	3.0653573528706514E-5	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9999841056514378	WITHOUT_CLASSIFICATION	1.5894348562183288E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999980781288	WITHOUT_CLASSIFICATION	1.921871255020897E-9	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999035609072902	WITHOUT_CLASSIFICATION	9.643909270981016E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999980781288	WITHOUT_CLASSIFICATION	1.921871255020897E-9	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999532012389322	WITHOUT_CLASSIFICATION	4.6798761067757794E-5	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999999195855128	WITHOUT_CLASSIFICATION	8.041448711721311E-8	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.99998011077157	WITHOUT_CLASSIFICATION	1.988922842993856E-5	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999997759405096	WITHOUT_CLASSIFICATION	2.2405949045748042E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999976307262167	WITHOUT_CLASSIFICATION	2.3692737832020315E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999998002535809	WITHOUT_CLASSIFICATION	1.99746419012619E-7	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999362633338	WITHOUT_CLASSIFICATION	6.373666627151495E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999998971414576	WITHOUT_CLASSIFICATION	1.0285854240129394E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999992096928026	WITHOUT_CLASSIFICATION	7.90307197310833E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999983367901735	WITHOUT_CLASSIFICATION	1.6632098265729702E-6	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999894484117	WITHOUT_CLASSIFICATION	1.0551588211435594E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999928365229	WITHOUT_CLASSIFICATION	7.163477182900979E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999107808	WITHOUT_CLASSIFICATION	8.921920004234757E-8	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.999999824989536	WITHOUT_CLASSIFICATION	1.7501046389447533E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999998002535809	WITHOUT_CLASSIFICATION	1.99746419012619E-7	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999362633338	WITHOUT_CLASSIFICATION	6.373666627151495E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999998971414576	WITHOUT_CLASSIFICATION	1.0285854240129394E-7	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999988886263784	WITHOUT_CLASSIFICATION	1.1113736215930878E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9999999191279434	WITHOUT_CLASSIFICATION	8.087205656303497E-8	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9999998318271822	WITHOUT_CLASSIFICATION	1.68172817686587E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999803061707528	WITHOUT_CLASSIFICATION	1.969382924715622E-5	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999999390727602	WITHOUT_CLASSIFICATION	6.092723983734024E-8	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999796528029804	WITHOUT_CLASSIFICATION	2.0347197019551766E-5	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.999444788601738	WITHOUT_CLASSIFICATION	5.552113982619178E-4	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999978879333424	WITHOUT_CLASSIFICATION	2.112066657607714E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999602374727042	WITHOUT_CLASSIFICATION	3.976252729580911E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999996945417401	WITHOUT_CLASSIFICATION	3.0545825984000037E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999996945417401	WITHOUT_CLASSIFICATION	3.0545825984000037E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999994128433464	WITHOUT_CLASSIFICATION	5.871566536314863E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999957296738554	WITHOUT_CLASSIFICATION	4.27032614450925E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999937752294109	WITHOUT_CLASSIFICATION	6.224770588980226E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999995652062431	WITHOUT_CLASSIFICATION	4.3479375693292067E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999995366361143	WITHOUT_CLASSIFICATION	4.633638857162176E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999993767125664	WITHOUT_CLASSIFICATION	6.232874336008607E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999928365229	WITHOUT_CLASSIFICATION	7.163477182900979E-9	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999978337634381	WITHOUT_CLASSIFICATION	2.16623656185429E-6	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999974354823601	WITHOUT_CLASSIFICATION	2.5645176400262955E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.999998888402459	WITHOUT_CLASSIFICATION	1.1115975410404276E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999998960137512	WITHOUT_CLASSIFICATION	1.0398624878678221E-7	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999984457240756	WITHOUT_CLASSIFICATION	1.5542759243444125E-6	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999896855989	WITHOUT_CLASSIFICATION	1.0314401205297534E-8	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.999997020232702	WITHOUT_CLASSIFICATION	2.9797672979848123E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999970469557808	WITHOUT_CLASSIFICATION	2.953044219102045E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999970469557808	WITHOUT_CLASSIFICATION	2.953044219102045E-6	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999924858891908	WITHOUT_CLASSIFICATION	7.5141108092459355E-6	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.999994678430937	WITHOUT_CLASSIFICATION	5.321569063020622E-6	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999986023495154	WITHOUT_CLASSIFICATION	1.397650484492472E-6	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999948507618561	WITHOUT_CLASSIFICATION	5.149238143811971E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999994128433464	WITHOUT_CLASSIFICATION	5.871566536314863E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999995652062431	WITHOUT_CLASSIFICATION	4.3479375693292067E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999995366361143	WITHOUT_CLASSIFICATION	4.633638857162176E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.999999966094231	WITHOUT_CLASSIFICATION	3.390576902278941E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999983367901735	WITHOUT_CLASSIFICATION	1.6632098265729702E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999993767125664	WITHOUT_CLASSIFICATION	6.232874336008607E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999928365229	WITHOUT_CLASSIFICATION	7.163477182900979E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999107808	WITHOUT_CLASSIFICATION	8.921920004234757E-8	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999980781288	WITHOUT_CLASSIFICATION	1.921871255020897E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.999998888402459	WITHOUT_CLASSIFICATION	1.1115975410404276E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.999997170004266	WITHOUT_CLASSIFICATION	2.8299957339119005E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.999997170004266	WITHOUT_CLASSIFICATION	2.8299957339119005E-6	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.999865317656747	WITHOUT_CLASSIFICATION	1.346823432529512E-4	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.999999492121793	WITHOUT_CLASSIFICATION	5.078782069865038E-7	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992469219544	WITHOUT_CLASSIFICATION	7.530780455108281E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.999650418400571	WITHOUT_CLASSIFICATION	3.495815994289155E-4	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999993756022	WITHOUT_CLASSIFICATION	6.243978683527365E-10	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999993756022	WITHOUT_CLASSIFICATION	6.243978683527365E-10	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999628907273	WITHOUT_CLASSIFICATION	3.7109272561397885E-8	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999628907273	WITHOUT_CLASSIFICATION	3.7109272561397885E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999869218009	WITHOUT_CLASSIFICATION	1.3078199201145015E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999869218009	WITHOUT_CLASSIFICATION	1.3078199201145015E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999869218009	WITHOUT_CLASSIFICATION	1.3078199201145015E-8	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993991212413	WITHOUT_CLASSIFICATION	6.008787588550354E-7	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995483827899	WITHOUT_CLASSIFICATION	4.516172100377436E-7	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999510082644	WITHOUT_CLASSIFICATION	4.8991735542325945E-8	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9999999203894092	WITHOUT_CLASSIFICATION	7.961059089655025E-8	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999998118738632	WITHOUT_CLASSIFICATION	1.8812613669487996E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9999035609072902	WITHOUT_CLASSIFICATION	9.643909270981016E-5	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999602374727042	WITHOUT_CLASSIFICATION	3.976252729580911E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999996945417401	WITHOUT_CLASSIFICATION	3.0545825984000037E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999957296738554	WITHOUT_CLASSIFICATION	4.27032614450925E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999998322060566	WITHOUT_CLASSIFICATION	1.6779394334523412E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999993767125664	WITHOUT_CLASSIFICATION	6.232874336008607E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999803061707528	WITHOUT_CLASSIFICATION	1.969382924715622E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999948507618561	WITHOUT_CLASSIFICATION	5.149238143811971E-6	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999986121783387	WITHOUT_CLASSIFICATION	1.3878216612363336E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9998927925353754	WITHOUT_CLASSIFICATION	1.0720746462463589E-4	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9995399108662774	WITHOUT_CLASSIFICATION	4.600891337225728E-4	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9998500096852749	WITHOUT_CLASSIFICATION	1.4999031472516728E-4	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.999996845139226	WITHOUT_CLASSIFICATION	3.1548607739990296E-6	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999796963317987	WITHOUT_CLASSIFICATION	2.0303668201313744E-5	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999982950292373	WITHOUT_CLASSIFICATION	1.704970762677711E-6	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999933930864155	WITHOUT_CLASSIFICATION	6.6069135844589076E-6	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999563520295247	WITHOUT_CLASSIFICATION	4.364797047534729E-5	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9858456647281191	WITHOUT_CLASSIFICATION	0.014154335271881074	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9997656761850666	WITHOUT_CLASSIFICATION	2.3432381493341704E-4	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999994900434164	WITHOUT_CLASSIFICATION	5.099565835688521E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999997553380375	WITHOUT_CLASSIFICATION	2.4466196247603134E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999995652062431	WITHOUT_CLASSIFICATION	4.3479375693292067E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999995366361143	WITHOUT_CLASSIFICATION	4.633638857162176E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999993767125664	WITHOUT_CLASSIFICATION	6.232874336008607E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999928365229	WITHOUT_CLASSIFICATION	7.163477182900979E-9	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999980781288	WITHOUT_CLASSIFICATION	1.921871255020897E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.999998888402459	WITHOUT_CLASSIFICATION	1.1115975410404276E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999998960137512	WITHOUT_CLASSIFICATION	1.0398624878678221E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999896855989	WITHOUT_CLASSIFICATION	1.0314401205297534E-8	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.999997020232702	WITHOUT_CLASSIFICATION	2.9797672979848123E-6	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999984262841	WITHOUT_CLASSIFICATION	1.5737159961135965E-9	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999889351365	WITHOUT_CLASSIFICATION	1.1064863458718924E-8	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999847214195065	WITHOUT_CLASSIFICATION	1.527858049351812E-5	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999999555824955	WITHOUT_CLASSIFICATION	4.4417504536967685E-8	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999996145259193	WITHOUT_CLASSIFICATION	3.8547408058775463E-7	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999931895218659	WITHOUT_CLASSIFICATION	6.810478134151813E-6	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9998934826262612	WITHOUT_CLASSIFICATION	1.0651737373885038E-4	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999978360131357	WITHOUT_CLASSIFICATION	2.1639868642724475E-6	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999981484882352	WITHOUT_CLASSIFICATION	1.8515117649016258E-6	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999964467002115	WITHOUT_CLASSIFICATION	3.5532997886409918E-6	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.9475722521784179	WITHOUT_CLASSIFICATION	0.052427747821582146	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9998104480433901	WITHOUT_CLASSIFICATION	1.8955195660992185E-4	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999164493950568	WITHOUT_CLASSIFICATION	8.355060494327735E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9999880867802124	WITHOUT_CLASSIFICATION	1.1913219787517021E-5	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999993567948434	WITHOUT_CLASSIFICATION	6.432051565989518E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999967996096983	WITHOUT_CLASSIFICATION	3.200390301675914E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999967996096983	WITHOUT_CLASSIFICATION	3.200390301675914E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999937752294109	WITHOUT_CLASSIFICATION	6.224770588980226E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999107808	WITHOUT_CLASSIFICATION	8.921920004234757E-8	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999985010606104	WITHOUT_CLASSIFICATION	1.4989393897067666E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999978337634381	WITHOUT_CLASSIFICATION	2.16623656185429E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.999997020232702	WITHOUT_CLASSIFICATION	2.9797672979848123E-6	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999997831419719	WITHOUT_CLASSIFICATION	2.1685802806410442E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999966428477773	WITHOUT_CLASSIFICATION	3.35715222280744E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999986031845115	WITHOUT_CLASSIFICATION	1.396815488404266E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999986031845115	WITHOUT_CLASSIFICATION	1.396815488404266E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999791417853	WITHOUT_CLASSIFICATION	2.0858214789363595E-8	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999791417853	WITHOUT_CLASSIFICATION	2.0858214789363595E-8	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999988869929941	WITHOUT_CLASSIFICATION	1.1130070058854383E-6	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9923212493454054	WITHOUT_CLASSIFICATION	0.007678750654594637	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999833758850202	WITHOUT_CLASSIFICATION	1.6624114979810854E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999988992425205	WITHOUT_CLASSIFICATION	1.1007574794638845E-6	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999987579470024	WITHOUT_CLASSIFICATION	1.2420529975669594E-6	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999805346766404	WITHOUT_CLASSIFICATION	1.946532335963345E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999966582679012	WITHOUT_CLASSIFICATION	3.3417320989346664E-6	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999868752164497	WITHOUT_CLASSIFICATION	1.3124783550287192E-5	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999999511100102	WITHOUT_CLASSIFICATION	4.888998981217351E-8	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999997932263909	WITHOUT_CLASSIFICATION	2.0677360905537397E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9967719678647038	WITHOUT_CLASSIFICATION	0.0032280321352962118	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999999581625602	WITHOUT_CLASSIFICATION	4.183743985407121E-8	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999974041603096	WITHOUT_CLASSIFICATION	2.5958396904570373E-6	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999944851255037	WITHOUT_CLASSIFICATION	5.5148744963408335E-6	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999982374821509	WITHOUT_CLASSIFICATION	1.7625178491200855E-6	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999979055639603	WITHOUT_CLASSIFICATION	2.094436039696543E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999996904740058	WITHOUT_CLASSIFICATION	3.095259941544529E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999969678454977	WITHOUT_CLASSIFICATION	3.0321545022819547E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9999642716045077	WITHOUT_CLASSIFICATION	3.572839549235768E-5	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.999995949136515	WITHOUT_CLASSIFICATION	4.0508634850147494E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999869111742309	WITHOUT_CLASSIFICATION	1.3088825769142014E-5	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999953422156515	WITHOUT_CLASSIFICATION	4.6577843485143575E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999778509865805	WITHOUT_CLASSIFICATION	2.2149013419354946E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999819779797413	WITHOUT_CLASSIFICATION	1.802202025872822E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999999288616589	WITHOUT_CLASSIFICATION	7.113834114117251E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999998187794445	WITHOUT_CLASSIFICATION	1.8122055539302883E-7	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.999999630319563	WITHOUT_CLASSIFICATION	3.69680437051083E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999963717054435	WITHOUT_CLASSIFICATION	3.628294556504704E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9998945970940029	WITHOUT_CLASSIFICATION	1.0540290599717385E-4	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999993290691639	WITHOUT_CLASSIFICATION	6.709308361010495E-7	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.999997908284731	WITHOUT_CLASSIFICATION	2.0917152689816385E-6	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999969891960765	WITHOUT_CLASSIFICATION	3.010803923409655E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999959856389755	WITHOUT_CLASSIFICATION	4.0143610244717805E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999761580310685	WITHOUT_CLASSIFICATION	2.384196893144672E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999998716757058	WITHOUT_CLASSIFICATION	1.2832429429278643E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999994763755438	WITHOUT_CLASSIFICATION	5.236244562750887E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999999553560023	WITHOUT_CLASSIFICATION	4.4643997836446976E-8	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999998359050877	WITHOUT_CLASSIFICATION	1.640949123900235E-7	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999969293854081	WITHOUT_CLASSIFICATION	3.070614592043971E-6	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.999999022584225	WITHOUT_CLASSIFICATION	9.77415774988806E-7	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999986525631538	WITHOUT_CLASSIFICATION	1.3474368462264278E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999107808	WITHOUT_CLASSIFICATION	8.921920004234757E-8	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999985010606104	WITHOUT_CLASSIFICATION	1.4989393897067666E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999978337634381	WITHOUT_CLASSIFICATION	2.16623656185429E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999966428477773	WITHOUT_CLASSIFICATION	3.35715222280744E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.999997020232702	WITHOUT_CLASSIFICATION	2.9797672979848123E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999967996096983	WITHOUT_CLASSIFICATION	3.200390301675914E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999967996096983	WITHOUT_CLASSIFICATION	3.200390301675914E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999946540131294	WITHOUT_CLASSIFICATION	5.345986870673422E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999986031845115	WITHOUT_CLASSIFICATION	1.396815488404266E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9997617512265944	WITHOUT_CLASSIFICATION	2.3824877340551312E-4	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999791417853	WITHOUT_CLASSIFICATION	2.0858214789363595E-8	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999993290691639	WITHOUT_CLASSIFICATION	6.709308361010495E-7	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.999997908284731	WITHOUT_CLASSIFICATION	2.0917152689816385E-6	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999988469701954	WITHOUT_CLASSIFICATION	1.153029804682503E-6	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999933043991788	WITHOUT_CLASSIFICATION	6.695600821341159E-6	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999997669441641	WITHOUT_CLASSIFICATION	2.3305583594671E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999998547328572	WITHOUT_CLASSIFICATION	1.4526714276681402E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999910626215338	WITHOUT_CLASSIFICATION	8.937378466181195E-6	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.999986527376708	WITHOUT_CLASSIFICATION	1.3472623291895727E-5	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999542998542577	WITHOUT_CLASSIFICATION	4.5700145742340295E-5	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999816966254792	WITHOUT_CLASSIFICATION	1.8303374520788904E-5	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999511696864691	WITHOUT_CLASSIFICATION	4.8830313530932274E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999967742135418	WITHOUT_CLASSIFICATION	3.225786458071845E-6	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999999017493642	WITHOUT_CLASSIFICATION	9.825063579785887E-8	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999987792821747	WITHOUT_CLASSIFICATION	1.2207178252551898E-6	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999996470567947	WITHOUT_CLASSIFICATION	3.529432054263041E-7	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9999686702815404	WITHOUT_CLASSIFICATION	3.1329718459639395E-5	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999991717017661	WITHOUT_CLASSIFICATION	8.282982339259849E-7	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999975578901457	WITHOUT_CLASSIFICATION	2.4421098543274213E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999999831157452	WITHOUT_CLASSIFICATION	1.6884254731691527E-8	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999993543040094	WITHOUT_CLASSIFICATION	6.456959905223285E-7	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.999997513739371	WITHOUT_CLASSIFICATION	2.486260628997724E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999989392757979	WITHOUT_CLASSIFICATION	1.060724202137718E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999983367901735	WITHOUT_CLASSIFICATION	1.6632098265729702E-6	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999894484117	WITHOUT_CLASSIFICATION	1.0551588211435594E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999928365229	WITHOUT_CLASSIFICATION	7.163477182900979E-9	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999896855989	WITHOUT_CLASSIFICATION	1.0314401205297534E-8	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973237030207	WITHOUT_CLASSIFICATION	2.676296979202377E-6	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.999994724872732	WITHOUT_CLASSIFICATION	5.2751272680233204E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.999999949378724	WITHOUT_CLASSIFICATION	5.062127585780393E-8	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973237030207	WITHOUT_CLASSIFICATION	2.676296979202377E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973237030207	WITHOUT_CLASSIFICATION	2.676296979202377E-6	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9999968110413681	WITHOUT_CLASSIFICATION	3.1889586319385886E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.999999949378724	WITHOUT_CLASSIFICATION	5.062127585780393E-8	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.999999949378724	WITHOUT_CLASSIFICATION	5.062127585780393E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999998681141283	WITHOUT_CLASSIFICATION	1.318858716972116E-7	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999978756642314	WITHOUT_CLASSIFICATION	2.124335768604351E-6	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999999245756191	WITHOUT_CLASSIFICATION	7.542438085509018E-8	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.999999979161285	WITHOUT_CLASSIFICATION	2.0838714945833E-8	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999980151689316	WITHOUT_CLASSIFICATION	1.984831068451093E-6	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999992951440638	WITHOUT_CLASSIFICATION	7.048559362960969E-7	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9999995840644575	WITHOUT_CLASSIFICATION	4.1593554239719665E-7	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999950498523753	WITHOUT_CLASSIFICATION	4.950147624670692E-6	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999937520215824	WITHOUT_CLASSIFICATION	6.247978417656724E-6	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.999999646258027	WITHOUT_CLASSIFICATION	3.5374197300835455E-7	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.984922529151964	WITHOUT_CLASSIFICATION	0.015077470848035963	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999987514294572	WITHOUT_CLASSIFICATION	1.2485705428900204E-6	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999994074410752	WITHOUT_CLASSIFICATION	5.925589248469551E-7	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999926776240593	WITHOUT_CLASSIFICATION	7.322375940635311E-6	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999998492259431	WITHOUT_CLASSIFICATION	1.5077405686369378E-7	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999981585520167	WITHOUT_CLASSIFICATION	1.8414479833637752E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999983367901735	WITHOUT_CLASSIFICATION	1.6632098265729702E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999107808	WITHOUT_CLASSIFICATION	8.921920004234757E-8	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999775113011947	WITHOUT_CLASSIFICATION	2.248869880528093E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999985010606104	WITHOUT_CLASSIFICATION	1.4989393897067666E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999978337634381	WITHOUT_CLASSIFICATION	2.16623656185429E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999966428477773	WITHOUT_CLASSIFICATION	3.35715222280744E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999988886263784	WITHOUT_CLASSIFICATION	1.1113736215930878E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999803061707528	WITHOUT_CLASSIFICATION	1.969382924715622E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.999997020232702	WITHOUT_CLASSIFICATION	2.9797672979848123E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999967996096983	WITHOUT_CLASSIFICATION	3.200390301675914E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999967996096983	WITHOUT_CLASSIFICATION	3.200390301675914E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999967996096983	WITHOUT_CLASSIFICATION	3.200390301675914E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999986031845115	WITHOUT_CLASSIFICATION	1.396815488404266E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999986031845115	WITHOUT_CLASSIFICATION	1.396815488404266E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9997617512265944	WITHOUT_CLASSIFICATION	2.3824877340551312E-4	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999988992425205	WITHOUT_CLASSIFICATION	1.1007574794638845E-6	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999966582679012	WITHOUT_CLASSIFICATION	3.3417320989346664E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999910626215338	WITHOUT_CLASSIFICATION	8.937378466181195E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999998640847746	WITHOUT_CLASSIFICATION	1.359152254753609E-7	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9999209379350873	WITHOUT_CLASSIFICATION	7.906206491264856E-5	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999996209311264	WITHOUT_CLASSIFICATION	3.790688736551891E-7	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999994556151276	WITHOUT_CLASSIFICATION	5.443848724110228E-7	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999987196363235	WITHOUT_CLASSIFICATION	1.2803636765121197E-6	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999925720868027	WITHOUT_CLASSIFICATION	7.427913197419987E-6	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999997496278339	WITHOUT_CLASSIFICATION	2.5037216608367903E-7	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999999480274486	WITHOUT_CLASSIFICATION	5.197255133385924E-8	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999998111416337	WITHOUT_CLASSIFICATION	1.8885836622505786E-7	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999997982080799	WITHOUT_CLASSIFICATION	2.0179192003936404E-7	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999997199707978	WITHOUT_CLASSIFICATION	2.80029202199503E-7	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999999929176605	WITHOUT_CLASSIFICATION	7.0823394800030295E-9	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999723786267082	WITHOUT_CLASSIFICATION	2.7621373291723703E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999998967202545	WITHOUT_CLASSIFICATION	1.032797454765129E-7	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999988230156454	WITHOUT_CLASSIFICATION	1.17698435473361E-6	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999963722278207	WITHOUT_CLASSIFICATION	3.6277721793918737E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999791417853	WITHOUT_CLASSIFICATION	2.0858214789363595E-8	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999791417853	WITHOUT_CLASSIFICATION	2.0858214789363595E-8	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.999995949136515	WITHOUT_CLASSIFICATION	4.0508634850147494E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999869111742309	WITHOUT_CLASSIFICATION	1.3088825769142014E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999778509865805	WITHOUT_CLASSIFICATION	2.2149013419354946E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999819779797413	WITHOUT_CLASSIFICATION	1.802202025872822E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999999288616589	WITHOUT_CLASSIFICATION	7.113834114117251E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999998187794445	WITHOUT_CLASSIFICATION	1.8122055539302883E-7	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.999999630319563	WITHOUT_CLASSIFICATION	3.69680437051083E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999963717054435	WITHOUT_CLASSIFICATION	3.628294556504704E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9998945970940029	WITHOUT_CLASSIFICATION	1.0540290599717385E-4	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999993290691639	WITHOUT_CLASSIFICATION	6.709308361010495E-7	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999993290691639	WITHOUT_CLASSIFICATION	6.709308361010495E-7	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999816966254792	WITHOUT_CLASSIFICATION	1.8303374520788904E-5	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999904664232316	WITHOUT_CLASSIFICATION	9.533576768381046E-6	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.999982617269905	WITHOUT_CLASSIFICATION	1.738273009494145E-5	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999980529174198	WITHOUT_CLASSIFICATION	1.947082580039217E-6	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999954101029147	WITHOUT_CLASSIFICATION	4.589897085263733E-6	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999989562751116	WITHOUT_CLASSIFICATION	1.043724888371814E-6	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999941300568516	WITHOUT_CLASSIFICATION	5.8699431484417105E-6	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999993294437777	WITHOUT_CLASSIFICATION	6.7055622237122E-7	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9999989547467086	WITHOUT_CLASSIFICATION	1.0452532913057823E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.999999463508407	WITHOUT_CLASSIFICATION	5.36491593119176E-7	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.99949475176341	WITHOUT_CLASSIFICATION	5.052482365900815E-4	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999999519263129	WITHOUT_CLASSIFICATION	4.807368714042293E-8	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999992015328851	WITHOUT_CLASSIFICATION	7.984671148661112E-7	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999973066190943	WITHOUT_CLASSIFICATION	2.6933809057225356E-6	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.999998258709127	WITHOUT_CLASSIFICATION	1.741290873147479E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999994128433464	WITHOUT_CLASSIFICATION	5.871566536314863E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999957296738554	WITHOUT_CLASSIFICATION	4.27032614450925E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999946540131294	WITHOUT_CLASSIFICATION	5.345986870673422E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999946540131294	WITHOUT_CLASSIFICATION	5.345986870673422E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.999997908284731	WITHOUT_CLASSIFICATION	2.0917152689816385E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999998716757058	WITHOUT_CLASSIFICATION	1.2832429429278643E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999998716757058	WITHOUT_CLASSIFICATION	1.2832429429278643E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999994763755438	WITHOUT_CLASSIFICATION	5.236244562750887E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999999553560023	WITHOUT_CLASSIFICATION	4.4643997836446976E-8	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999999553560023	WITHOUT_CLASSIFICATION	4.4643997836446976E-8	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999910626215338	WITHOUT_CLASSIFICATION	8.937378466181195E-6	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999967742135418	WITHOUT_CLASSIFICATION	3.225786458071845E-6	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999982014596019	WITHOUT_CLASSIFICATION	1.7985403980249877E-6	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9996793877948981	WITHOUT_CLASSIFICATION	3.2061220510204273E-4	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9996793877948981	WITHOUT_CLASSIFICATION	3.2061220510204273E-4	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999997455409002	WITHOUT_CLASSIFICATION	2.544590997935325E-7	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999996717147732	WITHOUT_CLASSIFICATION	3.2828522674589364E-7	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.999902536611901	WITHOUT_CLASSIFICATION	9.746338809896917E-5	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9999768166058088	WITHOUT_CLASSIFICATION	2.3183394191122904E-5	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9999957154723719	WITHOUT_CLASSIFICATION	4.284527628133144E-6	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999972788972301	WITHOUT_CLASSIFICATION	2.7211027697670763E-6	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999998473094488	WITHOUT_CLASSIFICATION	1.526905512549929E-7	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999989741038798	WITHOUT_CLASSIFICATION	1.0258961201504617E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999983367901735	WITHOUT_CLASSIFICATION	1.6632098265729702E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999928365229	WITHOUT_CLASSIFICATION	7.163477182900979E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999107808	WITHOUT_CLASSIFICATION	8.921920004234757E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999988886263784	WITHOUT_CLASSIFICATION	1.1113736215930878E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999796528029804	WITHOUT_CLASSIFICATION	2.0347197019551766E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999980325683406	WITHOUT_CLASSIFICATION	1.9674316593764746E-6	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.9542667888813093	WITHOUT_CLASSIFICATION	0.04573321111869068	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.999996479588475	WITHOUT_CLASSIFICATION	3.520411525081436E-6	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999989308944482	WITHOUT_CLASSIFICATION	1.0691055517668856E-6	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999891952837012	WITHOUT_CLASSIFICATION	1.0804716298697641E-5	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999921902671204	WITHOUT_CLASSIFICATION	7.809732879619394E-6	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999997384600744	WITHOUT_CLASSIFICATION	2.61539925634326E-7	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999989037301258	WITHOUT_CLASSIFICATION	1.096269874204209E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.999999994195127	WITHOUT_CLASSIFICATION	5.804873027538114E-9	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999998982351896	WITHOUT_CLASSIFICATION	1.0176481042451454E-7	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999999836511062	WITHOUT_CLASSIFICATION	1.634889371501287E-8	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999990536769455	WITHOUT_CLASSIFICATION	9.463230544956607E-7	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999988475280885	WITHOUT_CLASSIFICATION	1.1524719114314786E-6	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999995348658466	WITHOUT_CLASSIFICATION	4.6513415350679375E-7	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.9999998305429426	WITHOUT_CLASSIFICATION	1.6945705735001276E-7	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999997595295421	WITHOUT_CLASSIFICATION	2.4047045781452133E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999994853041626	WITHOUT_CLASSIFICATION	5.146958372971388E-7	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999926687866308	WITHOUT_CLASSIFICATION	7.331213369097313E-6	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999997182732376	WITHOUT_CLASSIFICATION	2.817267623683887E-7	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9999996627261308	WITHOUT_CLASSIFICATION	3.3727386920206003E-7	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999995302052316	WITHOUT_CLASSIFICATION	4.6979476846457323E-7	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999998668495718	WITHOUT_CLASSIFICATION	1.3315042827588807E-7	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999999452562379	WITHOUT_CLASSIFICATION	5.4743762035808166E-8	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999972631166615	WITHOUT_CLASSIFICATION	2.736883338546443E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999107808	WITHOUT_CLASSIFICATION	8.921920004234757E-8	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973237030207	WITHOUT_CLASSIFICATION	2.676296979202377E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973237030207	WITHOUT_CLASSIFICATION	2.676296979202377E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.999999949378724	WITHOUT_CLASSIFICATION	5.062127585780393E-8	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999926687866308	WITHOUT_CLASSIFICATION	7.331213369097313E-6	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999988666668324	WITHOUT_CLASSIFICATION	1.1333331676654102E-6	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9999998395586933	WITHOUT_CLASSIFICATION	1.6044130669056042E-7	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999980716774334	WITHOUT_CLASSIFICATION	1.92832256663948E-6	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999999449253996	WITHOUT_CLASSIFICATION	5.5074600423067606E-8	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999970895249333	WITHOUT_CLASSIFICATION	2.910475066633395E-6	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.999999960160138	WITHOUT_CLASSIFICATION	3.9839862055905095E-8	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999980850077645	WITHOUT_CLASSIFICATION	1.9149922354672333E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999955551151682	WITHOUT_CLASSIFICATION	4.444884831814199E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999999157060984	WITHOUT_CLASSIFICATION	8.429390162613812E-8	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999923977046864	WITHOUT_CLASSIFICATION	7.602295313554969E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999980898746922	WITHOUT_CLASSIFICATION	1.9101253077510304E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999998831923006	WITHOUT_CLASSIFICATION	1.1680769937412853E-7	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999999392820083	WITHOUT_CLASSIFICATION	6.071799166234482E-8	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999998516659544	WITHOUT_CLASSIFICATION	1.4833404554489986E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999999513527328	WITHOUT_CLASSIFICATION	4.8647267197793325E-8	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999996846456823	WITHOUT_CLASSIFICATION	3.153543176773191E-7	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999783236019884	WITHOUT_CLASSIFICATION	2.1676398011713425E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999918938100303	WITHOUT_CLASSIFICATION	8.106189969624778E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999960122056958	WITHOUT_CLASSIFICATION	3.9877943041899995E-6	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999667676181486	WITHOUT_CLASSIFICATION	3.323238185133815E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999904163964	WITHOUT_CLASSIFICATION	9.583603623236715E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973237030207	WITHOUT_CLASSIFICATION	2.676296979202377E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973237030207	WITHOUT_CLASSIFICATION	2.676296979202377E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973237030207	WITHOUT_CLASSIFICATION	2.676296979202377E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973237030207	WITHOUT_CLASSIFICATION	2.676296979202377E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973237030207	WITHOUT_CLASSIFICATION	2.676296979202377E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973237030207	WITHOUT_CLASSIFICATION	2.676296979202377E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999995474930092	WITHOUT_CLASSIFICATION	4.525069907207655E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999904163964	WITHOUT_CLASSIFICATION	9.583603623236715E-9	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999904163964	WITHOUT_CLASSIFICATION	9.583603623236715E-9	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999987534835224	WITHOUT_CLASSIFICATION	1.2465164776269187E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999960227419834	WITHOUT_CLASSIFICATION	3.977258016598623E-6	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999994091586928	WITHOUT_CLASSIFICATION	5.908413071557995E-7	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999997708142658	WITHOUT_CLASSIFICATION	2.2918573423676483E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999888861696522	WITHOUT_CLASSIFICATION	1.11138303478059E-5	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999999440735922	WITHOUT_CLASSIFICATION	5.5926407901650725E-8	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9998498870366269	WITHOUT_CLASSIFICATION	1.5011296337316747E-4	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999999515181968	WITHOUT_CLASSIFICATION	4.848180315280759E-8	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999994312120448	WITHOUT_CLASSIFICATION	5.687879551142103E-7	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999935652783185	WITHOUT_CLASSIFICATION	6.434721681473284E-6	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999889794768135	WITHOUT_CLASSIFICATION	1.1020523186458639E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999903478374095	WITHOUT_CLASSIFICATION	9.652162590492787E-5	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999996645900016	WITHOUT_CLASSIFICATION	3.3540999841548724E-7	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999480856816081	WITHOUT_CLASSIFICATION	5.1914318391853326E-5	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.999999419382317	WITHOUT_CLASSIFICATION	5.806176831439242E-7	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9816457479436086	WITHOUT_CLASSIFICATION	0.018354252056391438	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998279823272	WITHOUT_CLASSIFICATION	1.7201767287801717E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999710384913	WITHOUT_CLASSIFICATION	2.8961508739323298E-8	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996308831405	WITHOUT_CLASSIFICATION	3.6911685955883846E-7	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999547494739	WITHOUT_CLASSIFICATION	4.525052624944442E-8	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999967020736334	WITHOUT_CLASSIFICATION	3.2979263664394144E-6	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999963640467263	WITHOUT_CLASSIFICATION	3.635953273572054E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999995474930092	WITHOUT_CLASSIFICATION	4.525069907207655E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999710384913	WITHOUT_CLASSIFICATION	2.8961508739323298E-8	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999999259077016	WITHOUT_CLASSIFICATION	7.409229840592453E-8	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999598951516314	WITHOUT_CLASSIFICATION	4.01048483685767E-5	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999950833219347	WITHOUT_CLASSIFICATION	4.916678065254312E-6	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998085809326	WITHOUT_CLASSIFICATION	1.9141906731686058E-7	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998992915432	WITHOUT_CLASSIFICATION	1.0070845674948385E-7	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999822177703	WITHOUT_CLASSIFICATION	1.7782229617128175E-8	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999474723614	WITHOUT_CLASSIFICATION	5.25276385756299E-8	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999907251235	WITHOUT_CLASSIFICATION	9.274876445217895E-9	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999611520078	WITHOUT_CLASSIFICATION	3.8847992240120284E-8	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999755318622	WITHOUT_CLASSIFICATION	2.4468137880552035E-8	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998639419507	WITHOUT_CLASSIFICATION	1.3605804916224136E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999915900339	WITHOUT_CLASSIFICATION	8.409966083708454E-9	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9990293727367363	WITHOUT_CLASSIFICATION	9.706272632637271E-4	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999980718059044	WITHOUT_CLASSIFICATION	1.9281940955657578E-6	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9997600282104396	WITHOUT_CLASSIFICATION	2.3997178956040402E-4	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.999999996636237	WITHOUT_CLASSIFICATION	3.3637630211716622E-9	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999955459535268	WITHOUT_CLASSIFICATION	4.454046473241016E-6	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999952640053422	WITHOUT_CLASSIFICATION	4.735994657769997E-6	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999998286834031	WITHOUT_CLASSIFICATION	1.7131659685017723E-7	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999999814820115	WITHOUT_CLASSIFICATION	1.8517988490449563E-8	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999999871299398	WITHOUT_CLASSIFICATION	1.2870060155642803E-8	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999998976980793	WITHOUT_CLASSIFICATION	1.0230192067992531E-7	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999728298352029	WITHOUT_CLASSIFICATION	2.7170164797161698E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999728298352029	WITHOUT_CLASSIFICATION	2.7170164797161698E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999999866506476	WITHOUT_CLASSIFICATION	1.3349352508495836E-8	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999999866506476	WITHOUT_CLASSIFICATION	1.3349352508495836E-8	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9999397085068784	WITHOUT_CLASSIFICATION	6.029149312159321E-5	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9999660357195533	WITHOUT_CLASSIFICATION	3.396428044672842E-5	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.999994508894236	WITHOUT_CLASSIFICATION	5.491105764009483E-6	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9999997068742978	WITHOUT_CLASSIFICATION	2.931257022212065E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9998295708828705	WITHOUT_CLASSIFICATION	1.7042911712938049E-4	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.999899676658293	WITHOUT_CLASSIFICATION	1.0032334170697119E-4	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.999998718791817	WITHOUT_CLASSIFICATION	1.2812081829635812E-6	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.999999901339136	WITHOUT_CLASSIFICATION	9.8660864121981E-8	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999831314489	WITHOUT_CLASSIFICATION	1.686855110471442E-8	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.9596668195806907	DEFECT	0.04033318041930941	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.999999788131775	WITHOUT_CLASSIFICATION	2.1186822490803369E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999996615501817	WITHOUT_CLASSIFICATION	3.3844981827032807E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999996615501817	WITHOUT_CLASSIFICATION	3.3844981827032807E-7	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999963861832064	WITHOUT_CLASSIFICATION	3.613816793471037E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999963861832064	WITHOUT_CLASSIFICATION	3.613816793471037E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999997070395327	WITHOUT_CLASSIFICATION	2.929604673430439E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999933299249012	WITHOUT_CLASSIFICATION	6.670075098808139E-6	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.999998951932078	WITHOUT_CLASSIFICATION	1.0480679220623089E-6	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999980789650937	WITHOUT_CLASSIFICATION	1.921034906206899E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999999330363727	WITHOUT_CLASSIFICATION	6.696362736722113E-8	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999902678242542	WITHOUT_CLASSIFICATION	9.732175745813233E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999639307657655	WITHOUT_CLASSIFICATION	3.60692342345438E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999904163964	WITHOUT_CLASSIFICATION	9.583603623236715E-9	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999931675368792	WITHOUT_CLASSIFICATION	6.832463120749675E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999999330363727	WITHOUT_CLASSIFICATION	6.696362736722113E-8	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999963195719979	WITHOUT_CLASSIFICATION	3.6804280020454832E-6	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999997989922064	WITHOUT_CLASSIFICATION	2.0100779361286062E-7	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999994759156894	WITHOUT_CLASSIFICATION	5.240843105200282E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999639307657655	WITHOUT_CLASSIFICATION	3.60692342345438E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999998663310665	WITHOUT_CLASSIFICATION	1.336689335673587E-7	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9999997685612116	WITHOUT_CLASSIFICATION	2.3143878831809217E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999888414041465	WITHOUT_CLASSIFICATION	1.115859585345785E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999888414041465	WITHOUT_CLASSIFICATION	1.115859585345785E-5	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999994086303817	WITHOUT_CLASSIFICATION	5.913696182197872E-7	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9993050263630577	WITHOUT_CLASSIFICATION	6.949736369423339E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999510828444741	WITHOUT_CLASSIFICATION	4.891715552596138E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999510828444741	WITHOUT_CLASSIFICATION	4.891715552596138E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.999995745198046	WITHOUT_CLASSIFICATION	4.254801953974116E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999992417542468	WITHOUT_CLASSIFICATION	7.582457531214061E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998058200192	WITHOUT_CLASSIFICATION	1.9417998075916065E-7	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999999496627139	WITHOUT_CLASSIFICATION	5.033728618196108E-8	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999691556716709	WITHOUT_CLASSIFICATION	3.084432832921438E-5	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9999787051965393	WITHOUT_CLASSIFICATION	2.1294803460777646E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999993096724796	WITHOUT_CLASSIFICATION	6.903275204416572E-7	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999998002535809	WITHOUT_CLASSIFICATION	1.99746419012619E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999980718059044	WITHOUT_CLASSIFICATION	1.9281940955657578E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999821189821028	WITHOUT_CLASSIFICATION	1.7881017897194252E-5	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999982868018656	WITHOUT_CLASSIFICATION	1.7131981342409582E-6	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.999994586530142	WITHOUT_CLASSIFICATION	5.41346985813953E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999430738887731	WITHOUT_CLASSIFICATION	5.69261112268929E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.999989221601393	WITHOUT_CLASSIFICATION	1.0778398606984213E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999875478094711	WITHOUT_CLASSIFICATION	1.2452190528866097E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999983854590453	WITHOUT_CLASSIFICATION	1.6145409547302198E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999983854590453	WITHOUT_CLASSIFICATION	1.6145409547302198E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999852232072	WITHOUT_CLASSIFICATION	1.4776792776577508E-8	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999852232072	WITHOUT_CLASSIFICATION	1.4776792776577508E-8	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999882738253069	WITHOUT_CLASSIFICATION	1.1726174693206265E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.999995585918655	WITHOUT_CLASSIFICATION	4.414081345011339E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999996615000715	WITHOUT_CLASSIFICATION	3.3849992857341856E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999002399717	WITHOUT_CLASSIFICATION	9.976002833153559E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.999999808172883	WITHOUT_CLASSIFICATION	1.9182711700663512E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999999772774364	WITHOUT_CLASSIFICATION	2.2722563600556983E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999450729428623	WITHOUT_CLASSIFICATION	5.49270571377956E-5	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.999999781820588	WITHOUT_CLASSIFICATION	2.1817941187111928E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.999831913450989	WITHOUT_CLASSIFICATION	1.680865490109488E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9993902280095782	WITHOUT_CLASSIFICATION	6.097719904217567E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999995760975427	WITHOUT_CLASSIFICATION	4.239024573017692E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9986473693392103	WITHOUT_CLASSIFICATION	0.0013526306607897754	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.999831913450989	WITHOUT_CLASSIFICATION	1.680865490109488E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9993902280095782	WITHOUT_CLASSIFICATION	6.097719904217567E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999995760975427	WITHOUT_CLASSIFICATION	4.239024573017692E-6	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.999995400302025	WITHOUT_CLASSIFICATION	4.599697974938809E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999643942872283	WITHOUT_CLASSIFICATION	3.560571277160889E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999643942872283	WITHOUT_CLASSIFICATION	3.560571277160889E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999821189821028	WITHOUT_CLASSIFICATION	1.7881017897194252E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999821189821028	WITHOUT_CLASSIFICATION	1.7881017897194252E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999959759684209	WITHOUT_CLASSIFICATION	4.024031579031965E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999959759684209	WITHOUT_CLASSIFICATION	4.024031579031965E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940083251806	WITHOUT_CLASSIFICATION	5.99167481939259E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940083251806	WITHOUT_CLASSIFICATION	5.99167481939259E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.999999749074058	WITHOUT_CLASSIFICATION	2.509259420122892E-7	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.999999749074058	WITHOUT_CLASSIFICATION	2.509259420122892E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.999999936780993	WITHOUT_CLASSIFICATION	6.32190070163859E-8	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999963214835624	WITHOUT_CLASSIFICATION	3.6785164375971576E-6	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999978425834619	WITHOUT_CLASSIFICATION	2.157416538173915E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998058200192	WITHOUT_CLASSIFICATION	1.9417998075916065E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998058200192	WITHOUT_CLASSIFICATION	1.9417998075916065E-7	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.999989221601393	WITHOUT_CLASSIFICATION	1.0778398606984213E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999995760975427	WITHOUT_CLASSIFICATION	4.239024573017692E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999643942872283	WITHOUT_CLASSIFICATION	3.560571277160889E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999643942872283	WITHOUT_CLASSIFICATION	3.560571277160889E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999821189821028	WITHOUT_CLASSIFICATION	1.7881017897194252E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999959759684209	WITHOUT_CLASSIFICATION	4.024031579031965E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940083251806	WITHOUT_CLASSIFICATION	5.99167481939259E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999999195498466	WITHOUT_CLASSIFICATION	8.045015347405487E-8	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999949212440395	WITHOUT_CLASSIFICATION	5.078755960419447E-6	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9998473781128161	WITHOUT_CLASSIFICATION	1.5262188718378466E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999925832955323	WITHOUT_CLASSIFICATION	7.416704467665153E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999937066830277	WITHOUT_CLASSIFICATION	6.293316972278753E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9994961422646367	WITHOUT_CLASSIFICATION	5.038577353633475E-4	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9999444812694025	WITHOUT_CLASSIFICATION	5.551873059747441E-5	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999921897626989	WITHOUT_CLASSIFICATION	7.810237301242563E-6	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999470798400046	WITHOUT_CLASSIFICATION	5.2920159995302775E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999933299249012	WITHOUT_CLASSIFICATION	6.670075098808139E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.999989221601393	WITHOUT_CLASSIFICATION	1.0778398606984213E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.999831913450989	WITHOUT_CLASSIFICATION	1.680865490109488E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9993902280095782	WITHOUT_CLASSIFICATION	6.097719904217567E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999995760975427	WITHOUT_CLASSIFICATION	4.239024573017692E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999643942872283	WITHOUT_CLASSIFICATION	3.560571277160889E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999959759684209	WITHOUT_CLASSIFICATION	4.024031579031965E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940083251806	WITHOUT_CLASSIFICATION	5.99167481939259E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940083251806	WITHOUT_CLASSIFICATION	5.99167481939259E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9994961422646367	WITHOUT_CLASSIFICATION	5.038577353633475E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9994961422646367	WITHOUT_CLASSIFICATION	5.038577353633475E-4	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999999310397445	WITHOUT_CLASSIFICATION	6.8960255491549E-8	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999874082635651	WITHOUT_CLASSIFICATION	1.2591736434927995E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999208181463739	WITHOUT_CLASSIFICATION	7.91818536260422E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999993435156044	WITHOUT_CLASSIFICATION	6.564843956672494E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999953618029574	WITHOUT_CLASSIFICATION	4.638197042532829E-6	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.999990962375776	WITHOUT_CLASSIFICATION	9.037624224107766E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.999999463508407	WITHOUT_CLASSIFICATION	5.36491593119176E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999933299249012	WITHOUT_CLASSIFICATION	6.670075098808139E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998058200192	WITHOUT_CLASSIFICATION	1.9417998075916065E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998058200192	WITHOUT_CLASSIFICATION	1.9417998075916065E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999430738887731	WITHOUT_CLASSIFICATION	5.69261112268929E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.999989221601393	WITHOUT_CLASSIFICATION	1.0778398606984213E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999450729428623	WITHOUT_CLASSIFICATION	5.49270571377956E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999450729428623	WITHOUT_CLASSIFICATION	5.49270571377956E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999450729428623	WITHOUT_CLASSIFICATION	5.49270571377956E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999643942872283	WITHOUT_CLASSIFICATION	3.560571277160889E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999643942872283	WITHOUT_CLASSIFICATION	3.560571277160889E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9994961422646367	WITHOUT_CLASSIFICATION	5.038577353633475E-4	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999874082635651	WITHOUT_CLASSIFICATION	1.2591736434927995E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999208181463739	WITHOUT_CLASSIFICATION	7.91818536260422E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999992992424	WITHOUT_CLASSIFICATION	7.007576328397755E-10	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9999797570055017	WITHOUT_CLASSIFICATION	2.0242994498315676E-5	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9999995761949129	WITHOUT_CLASSIFICATION	4.238050870188942E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9997223073760662	WITHOUT_CLASSIFICATION	2.776926239337824E-4	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7230120757850166	WITHOUT_CLASSIFICATION	0.27698792421498347	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999978614809749	WITHOUT_CLASSIFICATION	2.138519025024445E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999888414041465	WITHOUT_CLASSIFICATION	1.115859585345785E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999510828444741	WITHOUT_CLASSIFICATION	4.891715552596138E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999510828444741	WITHOUT_CLASSIFICATION	4.891715552596138E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.999995745198046	WITHOUT_CLASSIFICATION	4.254801953974116E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999874082635651	WITHOUT_CLASSIFICATION	1.2591736434927995E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995754196602	WITHOUT_CLASSIFICATION	4.245803397349034E-7	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9999880742777443	WITHOUT_CLASSIFICATION	1.1925722255659831E-5	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.999999339041911	WITHOUT_CLASSIFICATION	6.609580890816927E-7	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9999675782245694	WITHOUT_CLASSIFICATION	3.242177543065669E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9999519536563923	WITHOUT_CLASSIFICATION	4.804634360770013E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999975626907277	WITHOUT_CLASSIFICATION	2.437309272339995E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999983679871528	WITHOUT_CLASSIFICATION	1.6320128472790928E-6	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999976185182899	WITHOUT_CLASSIFICATION	2.3814817100487636E-6	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999994767965729	WITHOUT_CLASSIFICATION	5.232034270819136E-7	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999985534010425	WITHOUT_CLASSIFICATION	1.4465989575207035E-6	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999986227352287	WITHOUT_CLASSIFICATION	1.3772647713423452E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995754196602	WITHOUT_CLASSIFICATION	4.245803397349034E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995754196602	WITHOUT_CLASSIFICATION	4.245803397349034E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.999995745198046	WITHOUT_CLASSIFICATION	4.254801953974116E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999992417542468	WITHOUT_CLASSIFICATION	7.582457531214061E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.999831913450989	WITHOUT_CLASSIFICATION	1.680865490109488E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9993902280095782	WITHOUT_CLASSIFICATION	6.097719904217567E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999925832955323	WITHOUT_CLASSIFICATION	7.416704467665153E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999937066830277	WITHOUT_CLASSIFICATION	6.293316972278753E-6	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999979251289424	WITHOUT_CLASSIFICATION	2.074871057610456E-6	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999321484698965	WITHOUT_CLASSIFICATION	6.785153010347676E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.999926379970442	WITHOUT_CLASSIFICATION	7.36200295579895E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.99999979117525	WITHOUT_CLASSIFICATION	2.0882475001195482E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999999917409729	WITHOUT_CLASSIFICATION	8.25902710217221E-9	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999975947732543	WITHOUT_CLASSIFICATION	2.405226745623326E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5409849852610588	WITHOUT_CLASSIFICATION	0.4590150147389413	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7291897911023004	DEFECT	0.27081020889769963	WITHOUT_CLASSIFICATION
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999667676181486	WITHOUT_CLASSIFICATION	3.323238185133815E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999903478374095	WITHOUT_CLASSIFICATION	9.652162590492787E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999480856816081	WITHOUT_CLASSIFICATION	5.1914318391853326E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999875478094711	WITHOUT_CLASSIFICATION	1.2452190528866097E-5	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999882738253069	WITHOUT_CLASSIFICATION	1.1726174693206265E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940083251806	WITHOUT_CLASSIFICATION	5.99167481939259E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5409849852610588	WITHOUT_CLASSIFICATION	0.4590150147389413	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999810481115224	WITHOUT_CLASSIFICATION	1.8951888477562337E-5	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5044590514639385	WITHOUT_CLASSIFICATION	0.49554094853606157	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996992853552	WITHOUT_CLASSIFICATION	3.0071464480267183E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9708510563236515	DEFECT	0.02914894367634852	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9913078539291412	DEFECT	0.008692146070858766	WITHOUT_CLASSIFICATION
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989867368845	WITHOUT_CLASSIFICATION	1.013263115514877E-6	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9496629995599876	DEFECT	0.05033700044001248	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9797172627261831	DEFECT	0.020282737273816857	WITHOUT_CLASSIFICATION
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999917282701638	WITHOUT_CLASSIFICATION	8.271729836142008E-6	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7454897104098455	WITHOUT_CLASSIFICATION	0.25451028959015454	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7315579921233419	DEFECT	0.268442007876658	WITHOUT_CLASSIFICATION
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999998615153584	WITHOUT_CLASSIFICATION	1.3848464162216646E-7	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9762894465346528	WITHOUT_CLASSIFICATION	0.023710553465347253	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.8812935449985292	WITHOUT_CLASSIFICATION	0.11870645500147074	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999905168705272	WITHOUT_CLASSIFICATION	9.483129472752139E-6	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.8841959301664651	WITHOUT_CLASSIFICATION	0.11580406983353478	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.6204948100007938	WITHOUT_CLASSIFICATION	0.37950518999920635	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999889794768135	WITHOUT_CLASSIFICATION	1.1020523186458639E-5	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.884318449421405	WITHOUT_CLASSIFICATION	0.11568155057859503	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.7253466167521606	WITHOUT_CLASSIFICATION	0.27465338324783944	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999874508136131	WITHOUT_CLASSIFICATION	1.2549186386881682E-5	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999993678083	WITHOUT_CLASSIFICATION	6.321917455155606E-10	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9999874129285631	WITHOUT_CLASSIFICATION	1.2587071436958684E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999999575184351	WITHOUT_CLASSIFICATION	4.248156500212873E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999998615153584	WITHOUT_CLASSIFICATION	1.3848464162216646E-7	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9993050263630577	WITHOUT_CLASSIFICATION	6.949736369423339E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999510828444741	WITHOUT_CLASSIFICATION	4.891715552596138E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.999995745198046	WITHOUT_CLASSIFICATION	4.254801953974116E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.999995745198046	WITHOUT_CLASSIFICATION	4.254801953974116E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999992417542468	WITHOUT_CLASSIFICATION	7.582457531214061E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999998058200192	WITHOUT_CLASSIFICATION	1.9417998075916065E-7	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999691556716709	WITHOUT_CLASSIFICATION	3.084432832921438E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999993096724796	WITHOUT_CLASSIFICATION	6.903275204416572E-7	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999982868018656	WITHOUT_CLASSIFICATION	1.7131981342409582E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.999989221601393	WITHOUT_CLASSIFICATION	1.0778398606984213E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9994961422646367	WITHOUT_CLASSIFICATION	5.038577353633475E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999992135598	WITHOUT_CLASSIFICATION	7.864402294585641E-10	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9999994909797909	WITHOUT_CLASSIFICATION	5.090202090392666E-7	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999999834710015	WITHOUT_CLASSIFICATION	1.6528998461672785E-8	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999998746911651	WITHOUT_CLASSIFICATION	1.253088348233711E-7	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999984888858446	WITHOUT_CLASSIFICATION	1.5111141554141216E-6	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.9999993634219196	WITHOUT_CLASSIFICATION	6.365780803128208E-7	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999941488406304	WITHOUT_CLASSIFICATION	5.851159369625945E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9999817342647245	WITHOUT_CLASSIFICATION	1.8265735275490655E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999888414041465	WITHOUT_CLASSIFICATION	1.115859585345785E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999450729428623	WITHOUT_CLASSIFICATION	5.49270571377956E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940083251806	WITHOUT_CLASSIFICATION	5.99167481939259E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999925832955323	WITHOUT_CLASSIFICATION	7.416704467665153E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999937066830277	WITHOUT_CLASSIFICATION	6.293316972278753E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9994961422646367	WITHOUT_CLASSIFICATION	5.038577353633475E-4	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999321484698965	WITHOUT_CLASSIFICATION	6.785153010347676E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.999926379970442	WITHOUT_CLASSIFICATION	7.36200295579895E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999994513320073	WITHOUT_CLASSIFICATION	5.486679927121369E-7	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999998733423259	WITHOUT_CLASSIFICATION	1.2665767406990913E-7	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999982742832777	WITHOUT_CLASSIFICATION	1.725716722315445E-6	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9999996019683621	WITHOUT_CLASSIFICATION	3.9803163783309347E-7	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999972550602355	WITHOUT_CLASSIFICATION	2.7449397644962876E-6	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.999999896770936	WITHOUT_CLASSIFICATION	1.0322906393100252E-7	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9999966530366375	WITHOUT_CLASSIFICATION	3.3469633625212617E-6	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999975236385532	WITHOUT_CLASSIFICATION	2.4763614467664613E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999960298944509	WITHOUT_CLASSIFICATION	3.970105549123483E-6	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999993521586747	WITHOUT_CLASSIFICATION	6.478413252049114E-7	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7291897911023004	DEFECT	0.27081020889769963	WITHOUT_CLASSIFICATION
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.999999896770936	WITHOUT_CLASSIFICATION	1.0322906393100252E-7	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999960298944509	WITHOUT_CLASSIFICATION	3.970105549123483E-6	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999993521586747	WITHOUT_CLASSIFICATION	6.478413252049114E-7	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9997445122765835	WITHOUT_CLASSIFICATION	2.554877234165125E-4	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999410836697349	WITHOUT_CLASSIFICATION	5.891633026513876E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999648550626	WITHOUT_CLASSIFICATION	3.5144937460626097E-8	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999648550626	WITHOUT_CLASSIFICATION	3.5144937460626097E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974732848097	WITHOUT_CLASSIFICATION	2.526715190180563E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999951505074771	WITHOUT_CLASSIFICATION	4.849492522995486E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999951505074771	WITHOUT_CLASSIFICATION	4.849492522995486E-6	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999900645580616	WITHOUT_CLASSIFICATION	9.935441938372603E-6	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999787528956117	WITHOUT_CLASSIFICATION	2.1247104388418216E-5	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999996398168803	WITHOUT_CLASSIFICATION	3.6018311963446677E-7	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999971802670049	WITHOUT_CLASSIFICATION	2.8197329949867234E-6	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.999999959018482	WITHOUT_CLASSIFICATION	4.0981517956871135E-8	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999930658487	WITHOUT_CLASSIFICATION	6.934151259378074E-9	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9073680897723175	WITHOUT_CLASSIFICATION	0.09263191022768243	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999999860928677	WITHOUT_CLASSIFICATION	1.390713222782215E-8	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999804501325281	WITHOUT_CLASSIFICATION	1.954986747182603E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999999631349694	WITHOUT_CLASSIFICATION	3.686503055020054E-8	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999991085386003	WITHOUT_CLASSIFICATION	8.914613996281395E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999915312301402	WITHOUT_CLASSIFICATION	8.468769859891024E-6	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999631262558	WITHOUT_CLASSIFICATION	3.68737440810741E-8	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999804501325281	WITHOUT_CLASSIFICATION	1.954986747182603E-5	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999993805962921	WITHOUT_CLASSIFICATION	6.194037080013737E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999998719063272	WITHOUT_CLASSIFICATION	1.2809367281421665E-7	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9999999708326781	WITHOUT_CLASSIFICATION	2.9167321883295767E-8	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999993956443287	WITHOUT_CLASSIFICATION	6.04355671183732E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999928956696663	WITHOUT_CLASSIFICATION	7.104330333608435E-6	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999996508811255	WITHOUT_CLASSIFICATION	3.4911887440940875E-7	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999998494824899	WITHOUT_CLASSIFICATION	1.5051751019991806E-7	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999985086910954	WITHOUT_CLASSIFICATION	1.4913089047083014E-6	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9963649212034977	WITHOUT_CLASSIFICATION	0.0036350787965023354	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9953427448564761	WITHOUT_CLASSIFICATION	0.004657255143523872	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9999256084512191	WITHOUT_CLASSIFICATION	7.439154878088171E-5	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999999387588697	WITHOUT_CLASSIFICATION	6.124113032285383E-8	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9997871411132795	WITHOUT_CLASSIFICATION	2.1285888672048828E-4	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999887018577188	WITHOUT_CLASSIFICATION	1.1298142281169747E-5	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999967199444564	WITHOUT_CLASSIFICATION	3.2800555436396606E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999988870778821	WITHOUT_CLASSIFICATION	1.1129221178162408E-6	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999996779552192	WITHOUT_CLASSIFICATION	3.2204478083747817E-7	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999999951086144	WITHOUT_CLASSIFICATION	4.8913856944128535E-9	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999968949348065	WITHOUT_CLASSIFICATION	3.1050651935410757E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9999996814984381	WITHOUT_CLASSIFICATION	3.185015619419573E-7	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999999614398352	WITHOUT_CLASSIFICATION	3.856016490596553E-8	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9999999853136499	WITHOUT_CLASSIFICATION	1.4686350194920467E-8	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999856270101384	WITHOUT_CLASSIFICATION	1.4372989861596707E-5	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999998926316244	WITHOUT_CLASSIFICATION	1.0736837558782908E-7	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999782458334305	WITHOUT_CLASSIFICATION	2.175416656940845E-5	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999957427203633	WITHOUT_CLASSIFICATION	4.257279636642376E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.999999969630603	WITHOUT_CLASSIFICATION	3.0369396965252964E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999988814287283	WITHOUT_CLASSIFICATION	1.118571271769671E-6	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999996574922616	WITHOUT_CLASSIFICATION	3.425077384048596E-7	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9794111979768744	WITHOUT_CLASSIFICATION	0.02058880202312552	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999903496100019	WITHOUT_CLASSIFICATION	9.650389998029823E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999998683622049	WITHOUT_CLASSIFICATION	1.3163779509954715E-7	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999997501398947	WITHOUT_CLASSIFICATION	2.498601052317228E-7	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999994473880118	WITHOUT_CLASSIFICATION	5.526119881310775E-7	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999989664471527	WITHOUT_CLASSIFICATION	1.0335528472938574E-6	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.999999897142652	WITHOUT_CLASSIFICATION	1.0285734803286169E-7	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999999470084119	WITHOUT_CLASSIFICATION	5.299158817762612E-8	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999996730347985	WITHOUT_CLASSIFICATION	3.269652015399437E-7	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.999999978808457	WITHOUT_CLASSIFICATION	2.1191542853895067E-8	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999994773344636	WITHOUT_CLASSIFICATION	5.22665536380738E-7	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999998239931778	WITHOUT_CLASSIFICATION	1.7600682209231416E-7	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999998372807629	WITHOUT_CLASSIFICATION	1.62719237192644E-7	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999999152663883	WITHOUT_CLASSIFICATION	8.473361159813044E-8	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.999999734130564	WITHOUT_CLASSIFICATION	2.658694360059899E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999994464680174	WITHOUT_CLASSIFICATION	5.535319825476473E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999999410390836	WITHOUT_CLASSIFICATION	5.896091640072185E-8	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.999997236599328	WITHOUT_CLASSIFICATION	2.763400671967664E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999918938100303	WITHOUT_CLASSIFICATION	8.106189969624778E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999992417542468	WITHOUT_CLASSIFICATION	7.582457531214061E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999996508811255	WITHOUT_CLASSIFICATION	3.4911887440940875E-7	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.999999969630603	WITHOUT_CLASSIFICATION	3.0369396965252964E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999988814287283	WITHOUT_CLASSIFICATION	1.118571271769671E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999999410390836	WITHOUT_CLASSIFICATION	5.896091640072185E-8	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.999997236599328	WITHOUT_CLASSIFICATION	2.763400671967664E-6	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999970614814842	WITHOUT_CLASSIFICATION	2.938518515853323E-6	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999985628657486	WITHOUT_CLASSIFICATION	1.437134251434472E-6	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999996757379415	WITHOUT_CLASSIFICATION	3.2426205852642983E-7	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.9999999908208389	WITHOUT_CLASSIFICATION	9.179161094246576E-9	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999977938049698	WITHOUT_CLASSIFICATION	2.206195030212002E-6	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.999999212324382	WITHOUT_CLASSIFICATION	7.876756179966567E-7	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999999788247894	WITHOUT_CLASSIFICATION	2.117521062143732E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999967091535034	WITHOUT_CLASSIFICATION	3.2908464966213635E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999887618917785	WITHOUT_CLASSIFICATION	1.1238108221492873E-5	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999975947732543	WITHOUT_CLASSIFICATION	2.405226745623326E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999831314489	WITHOUT_CLASSIFICATION	1.686855110471442E-8	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7230120757850166	WITHOUT_CLASSIFICATION	0.27698792421498347	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5044590514639385	WITHOUT_CLASSIFICATION	0.49554094853606157	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999996105208997	WITHOUT_CLASSIFICATION	3.8947910030097593E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999881717256	WITHOUT_CLASSIFICATION	1.1828274423813861E-8	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999985534010425	WITHOUT_CLASSIFICATION	1.4465989575207035E-6	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999998491218689	WITHOUT_CLASSIFICATION	1.5087813119463166E-7	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999892898694351	WITHOUT_CLASSIFICATION	1.0710130564792333E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999903478374095	WITHOUT_CLASSIFICATION	9.652162590492787E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999480856816081	WITHOUT_CLASSIFICATION	5.1914318391853326E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999955459535268	WITHOUT_CLASSIFICATION	4.454046473241016E-6	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999952640053422	WITHOUT_CLASSIFICATION	4.735994657769997E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9708510563236515	DEFECT	0.02914894367634852	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9913078539291412	DEFECT	0.008692146070858766	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9496629995599876	DEFECT	0.05033700044001248	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9797172627261831	DEFECT	0.020282737273816857	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7454897104098455	WITHOUT_CLASSIFICATION	0.25451028959015454	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7315579921233419	DEFECT	0.268442007876658	WITHOUT_CLASSIFICATION
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999999170953285	WITHOUT_CLASSIFICATION	8.290467146259099E-8	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996992853552	WITHOUT_CLASSIFICATION	3.0071464480267183E-6	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989867368845	WITHOUT_CLASSIFICATION	1.013263115514877E-6	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999917282701638	WITHOUT_CLASSIFICATION	8.271729836142008E-6	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999984819586065	WITHOUT_CLASSIFICATION	1.5180413935074776E-6	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999962583962712	WITHOUT_CLASSIFICATION	3.7416037288448775E-6	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999947462401441	WITHOUT_CLASSIFICATION	5.253759855959628E-6	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.6001900770174076	DEFECT	0.39980992298259255	WITHOUT_CLASSIFICATION
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999935652783185	WITHOUT_CLASSIFICATION	6.434721681473284E-6	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999987314122392	WITHOUT_CLASSIFICATION	1.2685877608132421E-6	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999969994757686	WITHOUT_CLASSIFICATION	3.000524231500745E-6	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9999933140418404	WITHOUT_CLASSIFICATION	6.685958159502107E-6	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999999974354681	WITHOUT_CLASSIFICATION	2.5645319038833994E-9	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999972602259319	WITHOUT_CLASSIFICATION	2.7397740680148027E-6	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999985871594045	WITHOUT_CLASSIFICATION	1.412840595521075E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999888414041465	WITHOUT_CLASSIFICATION	1.115859585345785E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999999631349694	WITHOUT_CLASSIFICATION	3.686503055020054E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997633287927	WITHOUT_CLASSIFICATION	2.3667120737266638E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.999998345022146	WITHOUT_CLASSIFICATION	1.6549778540363968E-6	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999989705026703	WITHOUT_CLASSIFICATION	1.0294973297219749E-6	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999387028901945	WITHOUT_CLASSIFICATION	6.12971098054692E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999892044082875	WITHOUT_CLASSIFICATION	1.0795591712414668E-5	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.999999359009138	WITHOUT_CLASSIFICATION	6.409908621330367E-7	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9999871437894945	WITHOUT_CLASSIFICATION	1.2856210505520067E-5	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999999130376975	WITHOUT_CLASSIFICATION	8.696230243377182E-8	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999917579867477	WITHOUT_CLASSIFICATION	8.242013252436132E-6	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.999981701104786	WITHOUT_CLASSIFICATION	1.8298895213936878E-5	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999999284155784	WITHOUT_CLASSIFICATION	7.158442155368316E-8	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9999979257755259	WITHOUT_CLASSIFICATION	2.0742244740775764E-6	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999999392820083	WITHOUT_CLASSIFICATION	6.071799166234482E-8	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999980718059044	WITHOUT_CLASSIFICATION	1.9281940955657578E-6	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999963195719979	WITHOUT_CLASSIFICATION	3.6804280020454832E-6	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999902678242542	WITHOUT_CLASSIFICATION	9.732175745813233E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999639307657655	WITHOUT_CLASSIFICATION	3.60692342345438E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999888414041465	WITHOUT_CLASSIFICATION	1.115859585345785E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999999860928677	WITHOUT_CLASSIFICATION	1.390713222782215E-8	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999915312301402	WITHOUT_CLASSIFICATION	8.468769859891024E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999998719063272	WITHOUT_CLASSIFICATION	1.2809367281421665E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999993956443287	WITHOUT_CLASSIFICATION	6.04355671183732E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999993956443287	WITHOUT_CLASSIFICATION	6.04355671183732E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996978029034	WITHOUT_CLASSIFICATION	3.021970965762262E-7	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999997060767801	WITHOUT_CLASSIFICATION	2.939232198968412E-7	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999981397555147	WITHOUT_CLASSIFICATION	1.8602444853650395E-6	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9999845073195129	WITHOUT_CLASSIFICATION	1.5492680487049403E-5	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999995777867717	WITHOUT_CLASSIFICATION	4.222132282056245E-7	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9999997002203371	WITHOUT_CLASSIFICATION	2.997796628129644E-7	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999993205129676	WITHOUT_CLASSIFICATION	6.794870325366893E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999961015341379	WITHOUT_CLASSIFICATION	3.898465862168225E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999999195855128	WITHOUT_CLASSIFICATION	8.041448711721311E-8	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999992417542468	WITHOUT_CLASSIFICATION	7.582457531214061E-7	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999892044082875	WITHOUT_CLASSIFICATION	1.0795591712414668E-5	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.999999971815163	WITHOUT_CLASSIFICATION	2.8184836962331014E-8	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999042301177857	WITHOUT_CLASSIFICATION	9.576988221428621E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.999999430729544	WITHOUT_CLASSIFICATION	5.692704558993821E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999913978501703	WITHOUT_CLASSIFICATION	8.602149829762558E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999996739719151	WITHOUT_CLASSIFICATION	3.2602808487584223E-7	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999991656943724	WITHOUT_CLASSIFICATION	8.343056276168998E-7	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999999506432686	WITHOUT_CLASSIFICATION	4.935673146366131E-8	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.999997506143335	WITHOUT_CLASSIFICATION	2.4938566649740505E-6	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999995150850537	WITHOUT_CLASSIFICATION	4.849149463285999E-7	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999999986769205	WITHOUT_CLASSIFICATION	1.3230795119362977E-9	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999993784201248	WITHOUT_CLASSIFICATION	6.215798751968074E-7	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999997554675648	WITHOUT_CLASSIFICATION	2.445324352351225E-7	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9999375205213044	WITHOUT_CLASSIFICATION	6.247947869560277E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999998002535809	WITHOUT_CLASSIFICATION	1.99746419012619E-7	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999875478094711	WITHOUT_CLASSIFICATION	1.2452190528866097E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999983854590453	WITHOUT_CLASSIFICATION	1.6145409547302198E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999983854590453	WITHOUT_CLASSIFICATION	1.6145409547302198E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999852232072	WITHOUT_CLASSIFICATION	1.4776792776577508E-8	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999852232072	WITHOUT_CLASSIFICATION	1.4776792776577508E-8	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999882738253069	WITHOUT_CLASSIFICATION	1.1726174693206265E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.999995585918655	WITHOUT_CLASSIFICATION	4.414081345011339E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999002399717	WITHOUT_CLASSIFICATION	9.976002833153559E-8	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999002399717	WITHOUT_CLASSIFICATION	9.976002833153559E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.999999808172883	WITHOUT_CLASSIFICATION	1.9182711700663512E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.999999808172883	WITHOUT_CLASSIFICATION	1.9182711700663512E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999999772774364	WITHOUT_CLASSIFICATION	2.2722563600556983E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999999772774364	WITHOUT_CLASSIFICATION	2.2722563600556983E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9997223073760662	WITHOUT_CLASSIFICATION	2.776926239337824E-4	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.99999958889874	WITHOUT_CLASSIFICATION	4.1110126005217076E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999999041664891	WITHOUT_CLASSIFICATION	9.58335109283096E-8	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999821833620407	WITHOUT_CLASSIFICATION	1.7816637959243606E-5	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9999632968763159	WITHOUT_CLASSIFICATION	3.670312368417466E-5	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999997609369277	WITHOUT_CLASSIFICATION	2.3906307233335564E-7	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999998004536113	WITHOUT_CLASSIFICATION	1.995463887566261E-7	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999999486478494	WITHOUT_CLASSIFICATION	5.135215065736889E-8	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999998236042882	WITHOUT_CLASSIFICATION	1.763957117611885E-7	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999999015661756	WITHOUT_CLASSIFICATION	9.843382442767105E-8	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999999247763166	WITHOUT_CLASSIFICATION	7.52236834028266E-8	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999998845060522	WITHOUT_CLASSIFICATION	1.1549394782141995E-7	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999958239544894	WITHOUT_CLASSIFICATION	4.176045510618715E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999888414041465	WITHOUT_CLASSIFICATION	1.115859585345785E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999992417542468	WITHOUT_CLASSIFICATION	7.582457531214061E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999108774949668	WITHOUT_CLASSIFICATION	8.912250503322239E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999915312301402	WITHOUT_CLASSIFICATION	8.468769859891024E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999998719063272	WITHOUT_CLASSIFICATION	1.2809367281421665E-7	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999967091535034	WITHOUT_CLASSIFICATION	3.2908464966213635E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999997060767801	WITHOUT_CLASSIFICATION	2.939232198968412E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.999998510601389	WITHOUT_CLASSIFICATION	1.4893986109567592E-6	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999911152695	WITHOUT_CLASSIFICATION	8.884730507616765E-9	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999999107834822	WITHOUT_CLASSIFICATION	8.921651780060517E-8	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999999982245191	WITHOUT_CLASSIFICATION	1.7754808588181461E-9	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.999999638600945	WITHOUT_CLASSIFICATION	3.613990550422261E-7	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999997282579071	WITHOUT_CLASSIFICATION	2.717420930018586E-7	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999960165265591	WITHOUT_CLASSIFICATION	3.983473440918777E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999904163964	WITHOUT_CLASSIFICATION	9.583603623236715E-9	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999639307657655	WITHOUT_CLASSIFICATION	3.60692342345438E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999998663310665	WITHOUT_CLASSIFICATION	1.336689335673587E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940083251806	WITHOUT_CLASSIFICATION	5.99167481939259E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999993435156044	WITHOUT_CLASSIFICATION	6.564843956672494E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999953618029574	WITHOUT_CLASSIFICATION	4.638197042532829E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999993956443287	WITHOUT_CLASSIFICATION	6.04355671183732E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999996508811255	WITHOUT_CLASSIFICATION	3.4911887440940875E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999881717256	WITHOUT_CLASSIFICATION	1.1828274423813861E-8	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999815221957	WITHOUT_CLASSIFICATION	1.8477804221646995E-8	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9989719078155039	WITHOUT_CLASSIFICATION	0.0010280921844961057	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999999881280363	WITHOUT_CLASSIFICATION	1.1871963763461196E-8	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999994013155796	WITHOUT_CLASSIFICATION	5.986844204497525E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999999364432024	WITHOUT_CLASSIFICATION	6.355679758414553E-8	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999958649672086	WITHOUT_CLASSIFICATION	4.1350327913964684E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999961015341379	WITHOUT_CLASSIFICATION	3.898465862168225E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999992417542468	WITHOUT_CLASSIFICATION	7.582457531214061E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999992135598	WITHOUT_CLASSIFICATION	7.864402294585641E-10	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999915312301402	WITHOUT_CLASSIFICATION	8.468769859891024E-6	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.999999430729544	WITHOUT_CLASSIFICATION	5.692704558993821E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999996739719151	WITHOUT_CLASSIFICATION	3.2602808487584223E-7	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999999106685104	WITHOUT_CLASSIFICATION	8.933148975577327E-8	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999995245805655	WITHOUT_CLASSIFICATION	4.754194345278537E-7	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999919431874834	WITHOUT_CLASSIFICATION	8.056812516516136E-6	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999987438841759	WITHOUT_CLASSIFICATION	1.2561158240749848E-6	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999996465623274	WITHOUT_CLASSIFICATION	3.534376726428757E-7	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999999423262594	WITHOUT_CLASSIFICATION	5.7673740510439776E-8	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999992724776388	WITHOUT_CLASSIFICATION	7.27522361118653E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999996465623274	WITHOUT_CLASSIFICATION	3.534376726428757E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986028390621	WITHOUT_CLASSIFICATION	1.3971609378350311E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999999423262594	WITHOUT_CLASSIFICATION	5.7673740510439776E-8	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999992724776388	WITHOUT_CLASSIFICATION	7.27522361118653E-7	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999995341747068	WITHOUT_CLASSIFICATION	4.658252931881999E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999988465164739	WITHOUT_CLASSIFICATION	1.1534835261107161E-6	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999988465164739	WITHOUT_CLASSIFICATION	1.1534835261107161E-6	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9997990319100158	WITHOUT_CLASSIFICATION	2.0096808998417893E-4	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9999916156646927	WITHOUT_CLASSIFICATION	8.38433530728328E-6	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999999823303235	WITHOUT_CLASSIFICATION	1.766967652745549E-8	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.999999943957384	WITHOUT_CLASSIFICATION	5.604261594130411E-8	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999999662468605	WITHOUT_CLASSIFICATION	3.375313950450838E-8	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999983146847428	WITHOUT_CLASSIFICATION	1.6853152572491797E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999818353290303	WITHOUT_CLASSIFICATION	1.8164670969753273E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999915312301402	WITHOUT_CLASSIFICATION	8.468769859891024E-6	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9997990319100158	WITHOUT_CLASSIFICATION	2.0096808998417893E-4	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999977965820104	WITHOUT_CLASSIFICATION	2.203417989523766E-6	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999822847755	WITHOUT_CLASSIFICATION	1.771522449361296E-8	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999999997326526	WITHOUT_CLASSIFICATION	2.673473752090341E-10	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999947845732944	WITHOUT_CLASSIFICATION	5.215426705562253E-6	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9999584323864166	WITHOUT_CLASSIFICATION	4.156761358339101E-5	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.999999984389432	WITHOUT_CLASSIFICATION	1.5610567950970164E-8	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999997743800403	WITHOUT_CLASSIFICATION	2.2561995969050988E-7	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9998962895495688	WITHOUT_CLASSIFICATION	1.03710450431144E-4	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999826953402317	WITHOUT_CLASSIFICATION	1.7304659768428566E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999977965820104	WITHOUT_CLASSIFICATION	2.203417989523766E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999977965820104	WITHOUT_CLASSIFICATION	2.203417989523766E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999977965820104	WITHOUT_CLASSIFICATION	2.203417989523766E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999977965820104	WITHOUT_CLASSIFICATION	2.203417989523766E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999888414041465	WITHOUT_CLASSIFICATION	1.115859585345785E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999999772774364	WITHOUT_CLASSIFICATION	2.2722563600556983E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999940083251806	WITHOUT_CLASSIFICATION	5.99167481939259E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999993678083	WITHOUT_CLASSIFICATION	6.321917455155606E-10	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.999999430729544	WITHOUT_CLASSIFICATION	5.692704558993821E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999913978501703	WITHOUT_CLASSIFICATION	8.602149829762558E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999996739719151	WITHOUT_CLASSIFICATION	3.2602808487584223E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.999998901628434	WITHOUT_CLASSIFICATION	1.0983715660048579E-6	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999942886497873	WITHOUT_CLASSIFICATION	5.711350212660495E-6	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9998670369380492	WITHOUT_CLASSIFICATION	1.329630619508323E-4	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999998472800528	WITHOUT_CLASSIFICATION	1.527199471736148E-7	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999918565071	WITHOUT_CLASSIFICATION	8.14349282627184E-9	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999918565071	WITHOUT_CLASSIFICATION	8.14349282627184E-9	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999965511551179	WITHOUT_CLASSIFICATION	3.448844882244247E-6	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.999996108985643	WITHOUT_CLASSIFICATION	3.891014357129007E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999994835014301	WITHOUT_CLASSIFICATION	5.16498570019179E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999831314489	WITHOUT_CLASSIFICATION	1.686855110471442E-8	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999888414041465	WITHOUT_CLASSIFICATION	1.115859585345785E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.999999936780993	WITHOUT_CLASSIFICATION	6.32190070163859E-8	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999998733423259	WITHOUT_CLASSIFICATION	1.2665767406990913E-7	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999956134993603	WITHOUT_CLASSIFICATION	4.386500639688831E-6	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9999849588412932	WITHOUT_CLASSIFICATION	1.5041158706841745E-5	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9999966841073163	WITHOUT_CLASSIFICATION	3.3158926837313703E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999990444370381	WITHOUT_CLASSIFICATION	9.555629618411764E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.999999788131775	WITHOUT_CLASSIFICATION	2.1186822490803369E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999996615501817	WITHOUT_CLASSIFICATION	3.3844981827032807E-7	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999963861832064	WITHOUT_CLASSIFICATION	3.613816793471037E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999963861832064	WITHOUT_CLASSIFICATION	3.613816793471037E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999997070395327	WITHOUT_CLASSIFICATION	2.929604673430439E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999996615000715	WITHOUT_CLASSIFICATION	3.3849992857341856E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999002399717	WITHOUT_CLASSIFICATION	9.976002833153559E-8	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9997223073760662	WITHOUT_CLASSIFICATION	2.776926239337824E-4	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999917579867477	WITHOUT_CLASSIFICATION	8.242013252436132E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999977965820104	WITHOUT_CLASSIFICATION	2.203417989523766E-6	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9998976941746883	WITHOUT_CLASSIFICATION	1.0230582531175651E-4	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999999345754683	WITHOUT_CLASSIFICATION	6.542453164504071E-8	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999999568515031	WITHOUT_CLASSIFICATION	4.3148496763873466E-8	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999999765154846	WITHOUT_CLASSIFICATION	2.348451550267797E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999977965820104	WITHOUT_CLASSIFICATION	2.203417989523766E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.99999719527	WITHOUT_CLASSIFICATION	2.804730000104049E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999067559237262	WITHOUT_CLASSIFICATION	9.324407627380994E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999996465623274	WITHOUT_CLASSIFICATION	3.534376726428757E-7	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999999423262594	WITHOUT_CLASSIFICATION	5.7673740510439776E-8	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999992724776388	WITHOUT_CLASSIFICATION	7.27522361118653E-7	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9794111979768744	WITHOUT_CLASSIFICATION	0.02058880202312552	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999972387212414	WITHOUT_CLASSIFICATION	2.761278758586257E-6	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999999202778096	WITHOUT_CLASSIFICATION	7.972219033958811E-8	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999999969337142	WITHOUT_CLASSIFICATION	3.0662856928842045E-9	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.999999304719764	WITHOUT_CLASSIFICATION	6.952802360436081E-7	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999994759143851	WITHOUT_CLASSIFICATION	5.240856148316265E-7	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999994346663622	WITHOUT_CLASSIFICATION	5.653336376835883E-7	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999988521903793	WITHOUT_CLASSIFICATION	1.1478096206655881E-6	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999995948629923	WITHOUT_CLASSIFICATION	4.051370076970461E-7	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999932421712266	WITHOUT_CLASSIFICATION	6.757828773347103E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.999998011755668	WITHOUT_CLASSIFICATION	1.988244332017171E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.999998011755668	WITHOUT_CLASSIFICATION	1.988244332017171E-6	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999992799354953	WITHOUT_CLASSIFICATION	7.200645046406176E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.999998901628434	WITHOUT_CLASSIFICATION	1.0983715660048579E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999677108402	WITHOUT_CLASSIFICATION	3.228915982209926E-8	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.999992167789725	WITHOUT_CLASSIFICATION	7.832210274983947E-6	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.999992167789725	WITHOUT_CLASSIFICATION	7.832210274983947E-6	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999993094056521	WITHOUT_CLASSIFICATION	6.905943480546484E-7	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999985204464267	WITHOUT_CLASSIFICATION	1.4795535732497168E-6	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999954137876959	WITHOUT_CLASSIFICATION	4.586212304193183E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999677108402	WITHOUT_CLASSIFICATION	3.228915982209926E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999677108402	WITHOUT_CLASSIFICATION	3.228915982209926E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999677108402	WITHOUT_CLASSIFICATION	3.228915982209926E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999778651203	WITHOUT_CLASSIFICATION	2.2134879801162335E-8	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.999992167789725	WITHOUT_CLASSIFICATION	7.832210274983947E-6	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999999575184351	WITHOUT_CLASSIFICATION	4.248156500212873E-8	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999796003854053	WITHOUT_CLASSIFICATION	2.0399614594643186E-5	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999842146332	WITHOUT_CLASSIFICATION	1.5785366736443045E-8	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999825442147	WITHOUT_CLASSIFICATION	1.7455785341433404E-8	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.999999522959223	WITHOUT_CLASSIFICATION	4.770407769939432E-7	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999999999460003	WITHOUT_CLASSIFICATION	5.3999675864135204E-11	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999977386909125	WITHOUT_CLASSIFICATION	2.2613090875552304E-6	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9977924368373741	WITHOUT_CLASSIFICATION	0.002207563162625889	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9977924368373741	WITHOUT_CLASSIFICATION	0.002207563162625889	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9977924368373741	WITHOUT_CLASSIFICATION	0.002207563162625889	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9999834844367828	WITHOUT_CLASSIFICATION	1.651556321717545E-5	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999977967381259	WITHOUT_CLASSIFICATION	2.2032618739829527E-6	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.9999168408870415	WITHOUT_CLASSIFICATION	8.315911295857723E-5	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9999659079555988	WITHOUT_CLASSIFICATION	3.4092044401235975E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999999960925879	WITHOUT_CLASSIFICATION	3.9074119578603645E-9	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.999094628806367	WITHOUT_CLASSIFICATION	9.053711936328613E-4	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999974292252117	WITHOUT_CLASSIFICATION	2.570774788291646E-6	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999848679049779	WITHOUT_CLASSIFICATION	1.5132095022265188E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999999966527443	WITHOUT_CLASSIFICATION	3.3472557435881047E-9	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999999563518381	WITHOUT_CLASSIFICATION	4.3648161855835787E-8	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999997591149536	WITHOUT_CLASSIFICATION	2.408850463082229E-7	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999960655945517	WITHOUT_CLASSIFICATION	3.934405448330513E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999918139945	WITHOUT_CLASSIFICATION	8.186005487697235E-9	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999918139945	WITHOUT_CLASSIFICATION	8.186005487697235E-9	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999990265857708	WITHOUT_CLASSIFICATION	9.734142292101698E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999990265857708	WITHOUT_CLASSIFICATION	9.734142292101698E-7	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999928842901681	WITHOUT_CLASSIFICATION	7.115709831920727E-6	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999999986748771	WITHOUT_CLASSIFICATION	1.325122978261333E-9	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999989289401637	WITHOUT_CLASSIFICATION	1.0710598362517107E-6	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.999999999813278	WITHOUT_CLASSIFICATION	1.8672200895549054E-10	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999977608451062	WITHOUT_CLASSIFICATION	2.2391548938953492E-6	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999998057944041	WITHOUT_CLASSIFICATION	1.9420559601114706E-7	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999999605560295	WITHOUT_CLASSIFICATION	3.944397055153969E-8	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.999999839106996	WITHOUT_CLASSIFICATION	1.6089300392176544E-7	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9999996275205837	WITHOUT_CLASSIFICATION	3.724794162741587E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.999999932360464	WITHOUT_CLASSIFICATION	6.763953602259537E-8	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999995321453311	WITHOUT_CLASSIFICATION	4.6785466882037713E-7	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983246043224	WITHOUT_CLASSIFICATION	1.6753956776319003E-6	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999550834379738	WITHOUT_CLASSIFICATION	4.4916562026310076E-5	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999926302155534	WITHOUT_CLASSIFICATION	7.369784446587889E-6	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9989798478296431	WITHOUT_CLASSIFICATION	0.001020152170356892	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999999928556562	WITHOUT_CLASSIFICATION	7.144343733425968E-9	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999972007533324	WITHOUT_CLASSIFICATION	2.7992466675134843E-6	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999972007533324	WITHOUT_CLASSIFICATION	2.7992466675134843E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999987824672566	WITHOUT_CLASSIFICATION	1.2175327433455874E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999987824672566	WITHOUT_CLASSIFICATION	1.2175327433455874E-6	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9999621568745583	WITHOUT_CLASSIFICATION	3.784312544163912E-5	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9999985127371349	WITHOUT_CLASSIFICATION	1.487262865072714E-6	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9999964867832061	WITHOUT_CLASSIFICATION	3.5132167939773413E-6	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9999894193710651	WITHOUT_CLASSIFICATION	1.0580628934928899E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999903649237	WITHOUT_CLASSIFICATION	9.635076304010957E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999903649237	WITHOUT_CLASSIFICATION	9.635076304010957E-9	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9992546459282861	WITHOUT_CLASSIFICATION	7.453540717140304E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9998427244099278	WITHOUT_CLASSIFICATION	1.572755900722162E-4	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999905695640608	WITHOUT_CLASSIFICATION	9.43043593911163E-6	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999996618149845	WITHOUT_CLASSIFICATION	3.3818501561009195E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999597611512	WITHOUT_CLASSIFICATION	4.0238848898095195E-8	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999903719817631	WITHOUT_CLASSIFICATION	9.628018236903043E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999818440337922	WITHOUT_CLASSIFICATION	1.8155966207778555E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999818440337922	WITHOUT_CLASSIFICATION	1.8155966207778555E-5	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.999950446562344	WITHOUT_CLASSIFICATION	4.9553437655923375E-5	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.999996620853323	WITHOUT_CLASSIFICATION	3.3791466769110507E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.999996620853323	WITHOUT_CLASSIFICATION	3.3791466769110507E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999987084429272	WITHOUT_CLASSIFICATION	1.291557072870871E-6	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999899179412264	WITHOUT_CLASSIFICATION	1.0082058773568204E-5	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999999938412469	WITHOUT_CLASSIFICATION	6.1587531457097606E-9	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999998519154327	WITHOUT_CLASSIFICATION	1.4808456725636875E-7	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999999403125288	WITHOUT_CLASSIFICATION	5.968747116511866E-8	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.999999996206422	WITHOUT_CLASSIFICATION	3.793577941381715E-9	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999998783670919	WITHOUT_CLASSIFICATION	1.2163290807525888E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999903649237	WITHOUT_CLASSIFICATION	9.635076304010957E-9	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999905695640608	WITHOUT_CLASSIFICATION	9.43043593911163E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999999714969	WITHOUT_CLASSIFICATION	2.8503030505413806E-11	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999984483579927	WITHOUT_CLASSIFICATION	1.5516420073385785E-6	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999985948273342	WITHOUT_CLASSIFICATION	1.4051726657880322E-6	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999999762922327	WITHOUT_CLASSIFICATION	2.370776724354867E-8	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999998242929193	WITHOUT_CLASSIFICATION	1.7570708063043916E-7	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999999717398596	WITHOUT_CLASSIFICATION	2.8260140420174027E-8	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999999868474809	WITHOUT_CLASSIFICATION	1.3152519046479986E-8	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999992186155584	WITHOUT_CLASSIFICATION	7.813844415287845E-7	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999998632694642	WITHOUT_CLASSIFICATION	1.3673053574552075E-7	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999872613324294	WITHOUT_CLASSIFICATION	1.273866757052061E-5	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999998587033581	WITHOUT_CLASSIFICATION	1.412966420216755E-7	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999975809985846	WITHOUT_CLASSIFICATION	2.4190014154749604E-6	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9848067994030223	WITHOUT_CLASSIFICATION	0.01519320059697766	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999312154929	WITHOUT_CLASSIFICATION	6.87845070886379E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999972879378184	WITHOUT_CLASSIFICATION	2.7120621815450002E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999484172174419	WITHOUT_CLASSIFICATION	5.158278255805547E-5	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999997394964475	WITHOUT_CLASSIFICATION	2.605035524810612E-7	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9996059286656379	WITHOUT_CLASSIFICATION	3.9407133436214915E-4	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.999999694257367	WITHOUT_CLASSIFICATION	3.057426328815756E-7	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999952266840846	WITHOUT_CLASSIFICATION	4.773315915345236E-6	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999973739380064	WITHOUT_CLASSIFICATION	2.6260619935632827E-6	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999997693297881	WITHOUT_CLASSIFICATION	2.3067021184872467E-7	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999999907905265	WITHOUT_CLASSIFICATION	9.209473468977314E-9	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.999727249472903	WITHOUT_CLASSIFICATION	2.7275052709701045E-4	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999999688482732	WITHOUT_CLASSIFICATION	3.11517267203115E-8	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999976449738	WITHOUT_CLASSIFICATION	2.355026231347631E-9	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999969880424509	WITHOUT_CLASSIFICATION	3.011957549188965E-6	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999976449738	WITHOUT_CLASSIFICATION	2.355026231347631E-9	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999491292221	WITHOUT_CLASSIFICATION	5.087077785764137E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998408302331	WITHOUT_CLASSIFICATION	1.5916976696798635E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999276445657	WITHOUT_CLASSIFICATION	7.235543426931609E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999664151727	WITHOUT_CLASSIFICATION	3.358482718940207E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999926202392	WITHOUT_CLASSIFICATION	7.379760803350546E-9	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999183979817	WITHOUT_CLASSIFICATION	8.160201829834903E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991902580005	WITHOUT_CLASSIFICATION	8.097419995401038E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999999714969	WITHOUT_CLASSIFICATION	2.8503030505413806E-11	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999998527458908	WITHOUT_CLASSIFICATION	1.472541092344954E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999998527458908	WITHOUT_CLASSIFICATION	1.472541092344954E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999985105231	WITHOUT_CLASSIFICATION	1.4894768444253258E-9	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999985105231	WITHOUT_CLASSIFICATION	1.4894768444253258E-9	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999985105231	WITHOUT_CLASSIFICATION	1.4894768444253258E-9	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999999975471425	WITHOUT_CLASSIFICATION	2.4528575323063137E-9	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999999975471425	WITHOUT_CLASSIFICATION	2.4528575323063137E-9	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999999042570994	WITHOUT_CLASSIFICATION	9.574290066193054E-8	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999999042570994	WITHOUT_CLASSIFICATION	9.574290066193054E-8	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999999198870859	WITHOUT_CLASSIFICATION	8.011291408771999E-8	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999998281153221	WITHOUT_CLASSIFICATION	1.7188467801788492E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999998281153221	WITHOUT_CLASSIFICATION	1.7188467801788492E-7	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999987212993064	WITHOUT_CLASSIFICATION	1.278700693545213E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999845061755016	WITHOUT_CLASSIFICATION	1.5493824498429033E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999845061755016	WITHOUT_CLASSIFICATION	1.5493824498429033E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9992708029358627	WITHOUT_CLASSIFICATION	7.29197064137266E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9992708029358627	WITHOUT_CLASSIFICATION	7.29197064137266E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9992708029358627	WITHOUT_CLASSIFICATION	7.29197064137266E-4	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999977890532437	WITHOUT_CLASSIFICATION	2.210946756294749E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9999712493281229	WITHOUT_CLASSIFICATION	2.8750671877078886E-5	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.999996875768223	WITHOUT_CLASSIFICATION	3.1242317770059763E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.999999936780993	WITHOUT_CLASSIFICATION	6.32190070163859E-8	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.999999936780993	WITHOUT_CLASSIFICATION	6.32190070163859E-8	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999994513320073	WITHOUT_CLASSIFICATION	5.486679927121369E-7	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999987084429272	WITHOUT_CLASSIFICATION	1.291557072870871E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999997394964475	WITHOUT_CLASSIFICATION	2.605035524810612E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999997394964475	WITHOUT_CLASSIFICATION	2.605035524810612E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998408302331	WITHOUT_CLASSIFICATION	1.5916976696798635E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999999714969	WITHOUT_CLASSIFICATION	2.8503030505413806E-11	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999977890532437	WITHOUT_CLASSIFICATION	2.210946756294749E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999977890532437	WITHOUT_CLASSIFICATION	2.210946756294749E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999988580855322	WITHOUT_CLASSIFICATION	1.1419144677773735E-6	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999998089004023	WITHOUT_CLASSIFICATION	1.9109959779442426E-7	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999998818753896	WITHOUT_CLASSIFICATION	1.1812461038365782E-7	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999998779569583	WITHOUT_CLASSIFICATION	1.2204304177322604E-7	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999998436828791	WITHOUT_CLASSIFICATION	1.5631712099156678E-7	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999984466015309	WITHOUT_CLASSIFICATION	1.5533984691818483E-6	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999991667576177	WITHOUT_CLASSIFICATION	8.332423823695637E-7	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999999831594004	WITHOUT_CLASSIFICATION	1.6840599581435086E-8	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.99999977590118	WITHOUT_CLASSIFICATION	2.2409881988463515E-7	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999868372009182	WITHOUT_CLASSIFICATION	1.316279908179261E-5	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999779287059843	WITHOUT_CLASSIFICATION	2.2071294015724293E-5	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999986899342843	WITHOUT_CLASSIFICATION	1.3100657156908405E-6	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999958649672086	WITHOUT_CLASSIFICATION	4.1350327913964684E-6	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9999982092615839	WITHOUT_CLASSIFICATION	1.790738416068129E-6	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999689587547521	WITHOUT_CLASSIFICATION	3.104124524777344E-5	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999606078580399	WITHOUT_CLASSIFICATION	3.9392141960117955E-5	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9999981492005732	WITHOUT_CLASSIFICATION	1.8507994267996766E-6	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9995685561027808	WITHOUT_CLASSIFICATION	4.314438972191367E-4	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999937874924091	WITHOUT_CLASSIFICATION	6.212507590936074E-6	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999995676318845	WITHOUT_CLASSIFICATION	4.323681155492626E-7	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9998872931044441	WITHOUT_CLASSIFICATION	1.127068955559098E-4	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999904186287675	WITHOUT_CLASSIFICATION	9.58137123255999E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999903649237	WITHOUT_CLASSIFICATION	9.635076304010957E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999903649237	WITHOUT_CLASSIFICATION	9.635076304010957E-9	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999597611512	WITHOUT_CLASSIFICATION	4.0238848898095195E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999491292221	WITHOUT_CLASSIFICATION	5.087077785764137E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999664151727	WITHOUT_CLASSIFICATION	3.358482718940207E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999926202392	WITHOUT_CLASSIFICATION	7.379760803350546E-9	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999926202392	WITHOUT_CLASSIFICATION	7.379760803350546E-9	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9998578719628062	WITHOUT_CLASSIFICATION	1.4212803719380833E-4	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999801065974734	WITHOUT_CLASSIFICATION	1.9893402526703295E-5	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999999213473899	WITHOUT_CLASSIFICATION	7.865261013529447E-8	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999999637697665	WITHOUT_CLASSIFICATION	3.6230233420405446E-8	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.999997774010321	WITHOUT_CLASSIFICATION	2.225989679115868E-6	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999999820903456	WITHOUT_CLASSIFICATION	1.7909654372185713E-8	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999983876901577	WITHOUT_CLASSIFICATION	1.6123098423212245E-6	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999998192665361	WITHOUT_CLASSIFICATION	1.8073346383188463E-7	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.9999949807568044	WITHOUT_CLASSIFICATION	5.019243195663818E-6	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999998492915475	WITHOUT_CLASSIFICATION	1.507084525119407E-7	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999977640030348	WITHOUT_CLASSIFICATION	2.2359969653184973E-6	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.9999993255967324	WITHOUT_CLASSIFICATION	6.744032675541766E-7	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.99999954689887	WITHOUT_CLASSIFICATION	4.531011299953732E-7	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999999260198811	WITHOUT_CLASSIFICATION	7.398011888009685E-8	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999960151279556	WITHOUT_CLASSIFICATION	3.984872044396447E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999972489668	WITHOUT_CLASSIFICATION	2.7510331128582707E-9	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999998881355064	WITHOUT_CLASSIFICATION	1.1186449353712064E-7	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999970305284199	WITHOUT_CLASSIFICATION	2.969471580087073E-6	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.999999881110268	WITHOUT_CLASSIFICATION	1.1888973201203832E-7	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999996809185877	WITHOUT_CLASSIFICATION	3.190814123449005E-7	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.99999936618601	WITHOUT_CLASSIFICATION	6.338139899199933E-7	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999982772302026	WITHOUT_CLASSIFICATION	1.7227697973691192E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999972489668	WITHOUT_CLASSIFICATION	2.7510331128582707E-9	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9999999614145207	WITHOUT_CLASSIFICATION	3.8585479341553306E-8	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999880156844859	WITHOUT_CLASSIFICATION	1.198431551399946E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999995158324984	WITHOUT_CLASSIFICATION	4.84167501658626E-7	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999790147141225	WITHOUT_CLASSIFICATION	2.0985285877532923E-5	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999997638878565	WITHOUT_CLASSIFICATION	2.3611214355051038E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999969880424509	WITHOUT_CLASSIFICATION	3.011957549188965E-6	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999880156844859	WITHOUT_CLASSIFICATION	1.198431551399946E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999923364386133	WITHOUT_CLASSIFICATION	7.663561386637183E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930003719057	WITHOUT_CLASSIFICATION	6.999628094243972E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9998860516120807	WITHOUT_CLASSIFICATION	1.1394838791929457E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9998860516120807	WITHOUT_CLASSIFICATION	1.1394838791929457E-4	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999799496301575	WITHOUT_CLASSIFICATION	2.0050369842563106E-5	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999956101686022	WITHOUT_CLASSIFICATION	4.3898313978464105E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999945227928096	WITHOUT_CLASSIFICATION	5.477207190377502E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9959171089372976	WITHOUT_CLASSIFICATION	0.004082891062702449	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999993638535135	WITHOUT_CLASSIFICATION	6.361464864021807E-7	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999985160843639	WITHOUT_CLASSIFICATION	1.4839156361228414E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.999857594624129	WITHOUT_CLASSIFICATION	1.4240537587091804E-4	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.999857594624129	WITHOUT_CLASSIFICATION	1.4240537587091804E-4	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999999980800823	WITHOUT_CLASSIFICATION	1.9199177394879673E-9	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999995321453311	WITHOUT_CLASSIFICATION	4.6785466882037713E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999923364386133	WITHOUT_CLASSIFICATION	7.663561386637183E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999923364386133	WITHOUT_CLASSIFICATION	7.663561386637183E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930003719057	WITHOUT_CLASSIFICATION	6.999628094243972E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9998860516120807	WITHOUT_CLASSIFICATION	1.1394838791929457E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9998860516120807	WITHOUT_CLASSIFICATION	1.1394838791929457E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999945227928096	WITHOUT_CLASSIFICATION	5.477207190377502E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999945227928096	WITHOUT_CLASSIFICATION	5.477207190377502E-6	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9999999718762853	WITHOUT_CLASSIFICATION	2.8123714746002853E-8	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9511076385870061	WITHOUT_CLASSIFICATION	0.04889236141299404	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999999920403551	WITHOUT_CLASSIFICATION	7.959644941055445E-9	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999975174189782	WITHOUT_CLASSIFICATION	2.4825810216505055E-6	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999975174189782	WITHOUT_CLASSIFICATION	2.4825810216505055E-6	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999994844697707	WITHOUT_CLASSIFICATION	5.155302292804682E-7	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999994331321856	WITHOUT_CLASSIFICATION	5.668678144229517E-7	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999820205914579	WITHOUT_CLASSIFICATION	1.79794085421351E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9998331876532212	WITHOUT_CLASSIFICATION	1.6681234677889606E-4	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999914025231103	WITHOUT_CLASSIFICATION	8.597476889768715E-6	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999973963967298	WITHOUT_CLASSIFICATION	2.6036032702511242E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999736621365194	WITHOUT_CLASSIFICATION	2.6337863480647863E-5	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999959582610373	WITHOUT_CLASSIFICATION	4.0417389627112894E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999974960301065	WITHOUT_CLASSIFICATION	2.503969893544333E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999654287648059	WITHOUT_CLASSIFICATION	3.457123519416269E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999654287648059	WITHOUT_CLASSIFICATION	3.457123519416269E-5	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999994798357154	WITHOUT_CLASSIFICATION	5.201642847184524E-7	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999999355519044	WITHOUT_CLASSIFICATION	6.444809564470557E-8	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999994505187011	WITHOUT_CLASSIFICATION	5.494812988363362E-7	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999999412667361	WITHOUT_CLASSIFICATION	5.873326396325383E-8	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999997060456616	WITHOUT_CLASSIFICATION	2.939543384179293E-7	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999993240491503	WITHOUT_CLASSIFICATION	6.759508498038358E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999923364386133	WITHOUT_CLASSIFICATION	7.663561386637183E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930003719057	WITHOUT_CLASSIFICATION	6.999628094243972E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930003719057	WITHOUT_CLASSIFICATION	6.999628094243972E-6	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9999993158856892	WITHOUT_CLASSIFICATION	6.841143107519485E-7	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999856804038493	WITHOUT_CLASSIFICATION	1.431959615073336E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999884209642271	WITHOUT_CLASSIFICATION	1.1579035772811005E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999764135536248	WITHOUT_CLASSIFICATION	2.3586446375169914E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999764135536248	WITHOUT_CLASSIFICATION	2.3586446375169914E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.999996608641755	WITHOUT_CLASSIFICATION	3.3913582449797016E-6	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9999782598542537	WITHOUT_CLASSIFICATION	2.1740145746243733E-5	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9999234073452121	WITHOUT_CLASSIFICATION	7.659265478786842E-5	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999998758809441	WITHOUT_CLASSIFICATION	1.2411905585121246E-7	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999984109743433	WITHOUT_CLASSIFICATION	1.58902565669677E-6	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9999908614960001	WITHOUT_CLASSIFICATION	9.138503999853299E-6	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9998910684078872	WITHOUT_CLASSIFICATION	1.0893159211280837E-4	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999998864804531	WITHOUT_CLASSIFICATION	1.1351954695372462E-7	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999999380168975	WITHOUT_CLASSIFICATION	6.19831025233062E-8	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999999995905616	WITHOUT_CLASSIFICATION	4.094383260205936E-10	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999564730415834	WITHOUT_CLASSIFICATION	4.352695841664914E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999999747232519	WITHOUT_CLASSIFICATION	2.5276748148946913E-8	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999999003889012	WITHOUT_CLASSIFICATION	9.96110988369261E-8	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.999990327929446	WITHOUT_CLASSIFICATION	9.672070554035541E-6	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9999999984426156	WITHOUT_CLASSIFICATION	1.5573844700412024E-9	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999327745067	WITHOUT_CLASSIFICATION	6.722549331028738E-8	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.9999996696920183	WITHOUT_CLASSIFICATION	3.3030798177503116E-7	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999985489130476	WITHOUT_CLASSIFICATION	1.4510869523659446E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.9999986657996582	WITHOUT_CLASSIFICATION	1.3342003417735208E-6	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.999957593285601	WITHOUT_CLASSIFICATION	4.240671439898957E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.9999456907786184	WITHOUT_CLASSIFICATION	5.4309221381665764E-5	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999974343008576	WITHOUT_CLASSIFICATION	2.565699142286557E-6	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999982306611	WITHOUT_CLASSIFICATION	1.7693389161717465E-9	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999982486910999	WITHOUT_CLASSIFICATION	1.7513089001283758E-6	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999982486910999	WITHOUT_CLASSIFICATION	1.7513089001283758E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999188441721275	WITHOUT_CLASSIFICATION	8.115582787247476E-5	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999994807077298	WITHOUT_CLASSIFICATION	5.192922700979839E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999188441721275	WITHOUT_CLASSIFICATION	8.115582787247476E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999188441721275	WITHOUT_CLASSIFICATION	8.115582787247476E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999972879378184	WITHOUT_CLASSIFICATION	2.7120621815450002E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999923364386133	WITHOUT_CLASSIFICATION	7.663561386637183E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930003719057	WITHOUT_CLASSIFICATION	6.999628094243972E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997633287927	WITHOUT_CLASSIFICATION	2.3667120737266638E-7	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930003719057	WITHOUT_CLASSIFICATION	6.999628094243972E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9998860516120807	WITHOUT_CLASSIFICATION	1.1394838791929457E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9998860516120807	WITHOUT_CLASSIFICATION	1.1394838791929457E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999945227928096	WITHOUT_CLASSIFICATION	5.477207190377502E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999945227928096	WITHOUT_CLASSIFICATION	5.477207190377502E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999736621365194	WITHOUT_CLASSIFICATION	2.6337863480647863E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999998936881519	WITHOUT_CLASSIFICATION	1.0631184817873912E-7	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9984198896404972	WITHOUT_CLASSIFICATION	0.0015801103595026805	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999998267104846	WITHOUT_CLASSIFICATION	1.7328951528370267E-7	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.999924944639762	WITHOUT_CLASSIFICATION	7.505536023791004E-5	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9989343025309411	WITHOUT_CLASSIFICATION	0.001065697469058893	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.5658504177776515	DEFECT	0.43414958222234834	WITHOUT_CLASSIFICATION
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981875625745	WITHOUT_CLASSIFICATION	1.8124374255394218E-6	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999991637895289	WITHOUT_CLASSIFICATION	8.362104711717841E-7	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999987481117831	WITHOUT_CLASSIFICATION	1.2518882168551586E-6	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999994696411723	WITHOUT_CLASSIFICATION	5.303588277635281E-7	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999870113597505	WITHOUT_CLASSIFICATION	1.2988640249556978E-5	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9999581542018872	WITHOUT_CLASSIFICATION	4.1845798112806845E-5	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999999966875917	WITHOUT_CLASSIFICATION	3.3124083515089566E-9	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999327745067	WITHOUT_CLASSIFICATION	6.722549331028738E-8	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.999998222635355	WITHOUT_CLASSIFICATION	1.7773646450762005E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999992947027201	WITHOUT_CLASSIFICATION	7.052972799573048E-7	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999996577339876	WITHOUT_CLASSIFICATION	3.4226601244661945E-7	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9999099465275838	WITHOUT_CLASSIFICATION	9.005347241625657E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999998936881519	WITHOUT_CLASSIFICATION	1.0631184817873912E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999998936881519	WITHOUT_CLASSIFICATION	1.0631184817873912E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999550834379738	WITHOUT_CLASSIFICATION	4.4916562026310076E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999972879378184	WITHOUT_CLASSIFICATION	2.7120621815450002E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999774118179805	WITHOUT_CLASSIFICATION	2.2588182019568994E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999923364386133	WITHOUT_CLASSIFICATION	7.663561386637183E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930003719057	WITHOUT_CLASSIFICATION	6.999628094243972E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930003719057	WITHOUT_CLASSIFICATION	6.999628094243972E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930003719057	WITHOUT_CLASSIFICATION	6.999628094243972E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9998860516120807	WITHOUT_CLASSIFICATION	1.1394838791929457E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9998860516120807	WITHOUT_CLASSIFICATION	1.1394838791929457E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9998860516120807	WITHOUT_CLASSIFICATION	1.1394838791929457E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9998860516120807	WITHOUT_CLASSIFICATION	1.1394838791929457E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9998860516120807	WITHOUT_CLASSIFICATION	1.1394838791929457E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999945227928096	WITHOUT_CLASSIFICATION	5.477207190377502E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999945227928096	WITHOUT_CLASSIFICATION	5.477207190377502E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999945227928096	WITHOUT_CLASSIFICATION	5.477207190377502E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999945227928096	WITHOUT_CLASSIFICATION	5.477207190377502E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9959171089372976	WITHOUT_CLASSIFICATION	0.004082891062702449	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999998936881519	WITHOUT_CLASSIFICATION	1.0631184817873912E-7	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999891907608278	WITHOUT_CLASSIFICATION	1.0809239172146963E-5	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999867384645759	WITHOUT_CLASSIFICATION	1.32615354240207E-5	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999996759861238	WITHOUT_CLASSIFICATION	3.240138762250194E-7	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999996759861238	WITHOUT_CLASSIFICATION	3.240138762250194E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999996794691652	WITHOUT_CLASSIFICATION	3.2053083486946543E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999996794691652	WITHOUT_CLASSIFICATION	3.2053083486946543E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999996794691652	WITHOUT_CLASSIFICATION	3.2053083486946543E-7	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999866915828337	WITHOUT_CLASSIFICATION	1.3308417166332598E-5	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999999999950037	WITHOUT_CLASSIFICATION	4.996332877188226E-12	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999998744800547	WITHOUT_CLASSIFICATION	1.255199452728907E-7	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999912236902768	WITHOUT_CLASSIFICATION	8.776309723173082E-6	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995758801105	WITHOUT_CLASSIFICATION	4.2411988946354935E-7	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999981360031772	WITHOUT_CLASSIFICATION	1.863996822833834E-6	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999993736632742	WITHOUT_CLASSIFICATION	6.263367257023214E-7	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999999135002184	WITHOUT_CLASSIFICATION	8.649978157304864E-8	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9999978707094916	WITHOUT_CLASSIFICATION	2.1292905084139306E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999597611512	WITHOUT_CLASSIFICATION	4.0238848898095195E-8	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999312154929	WITHOUT_CLASSIFICATION	6.87845070886379E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999972879378184	WITHOUT_CLASSIFICATION	2.7120621815450002E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.999998222635355	WITHOUT_CLASSIFICATION	1.7773646450762005E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999996577339876	WITHOUT_CLASSIFICATION	3.4226601244661945E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999899681017356	WITHOUT_CLASSIFICATION	1.0031898264377107E-5	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9943898091472326	WITHOUT_CLASSIFICATION	0.0056101908527673916	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999991823422	WITHOUT_CLASSIFICATION	8.176577877594403E-10	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999991823422	WITHOUT_CLASSIFICATION	8.176577877594403E-10	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999899681017356	WITHOUT_CLASSIFICATION	1.0031898264377107E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999805110347	WITHOUT_CLASSIFICATION	1.9488965334585203E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999998936881519	WITHOUT_CLASSIFICATION	1.0631184817873912E-7	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999998681956048	WITHOUT_CLASSIFICATION	1.3180439524260938E-7	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999997504256	WITHOUT_CLASSIFICATION	2.495744350020464E-10	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999998936881519	WITHOUT_CLASSIFICATION	1.0631184817873912E-7	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999999352593265	WITHOUT_CLASSIFICATION	6.474067342041596E-8	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999997857929308	WITHOUT_CLASSIFICATION	2.142070692582824E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999998936881519	WITHOUT_CLASSIFICATION	1.0631184817873912E-7	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999981657613792	WITHOUT_CLASSIFICATION	1.8342386207019452E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999998936881519	WITHOUT_CLASSIFICATION	1.0631184817873912E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999998936881519	WITHOUT_CLASSIFICATION	1.0631184817873912E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999998936881519	WITHOUT_CLASSIFICATION	1.0631184817873912E-7	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999778651203	WITHOUT_CLASSIFICATION	2.2134879801162335E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999778651203	WITHOUT_CLASSIFICATION	2.2134879801162335E-8	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.999999839106996	WITHOUT_CLASSIFICATION	1.6089300392176544E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999999364432024	WITHOUT_CLASSIFICATION	6.355679758414553E-8	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.999999932360464	WITHOUT_CLASSIFICATION	6.763953602259537E-8	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999550834379738	WITHOUT_CLASSIFICATION	4.4916562026310076E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999597611512	WITHOUT_CLASSIFICATION	4.0238848898095195E-8	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9998860516120807	WITHOUT_CLASSIFICATION	1.1394838791929457E-4	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9959171089372976	WITHOUT_CLASSIFICATION	0.004082891062702449	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.999857594624129	WITHOUT_CLASSIFICATION	1.4240537587091804E-4	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999992947027201	WITHOUT_CLASSIFICATION	7.052972799573048E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999805110347	WITHOUT_CLASSIFICATION	1.9488965334585203E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999805110347	WITHOUT_CLASSIFICATION	1.9488965334585203E-8	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999899681017356	WITHOUT_CLASSIFICATION	1.0031898264377107E-5	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999997504256	WITHOUT_CLASSIFICATION	2.495744350020464E-10	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999998681956048	WITHOUT_CLASSIFICATION	1.3180439524260938E-7	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999998681956048	WITHOUT_CLASSIFICATION	1.3180439524260938E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999997857929308	WITHOUT_CLASSIFICATION	2.142070692582824E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999997857929308	WITHOUT_CLASSIFICATION	2.142070692582824E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999999039633043	WITHOUT_CLASSIFICATION	9.603669562995855E-8	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9998789420419214	WITHOUT_CLASSIFICATION	1.2105795807868475E-4	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999999868037055	WITHOUT_CLASSIFICATION	1.3196294378389664E-8	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999993539831916	WITHOUT_CLASSIFICATION	6.460168083840486E-7	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9957485630175152	WITHOUT_CLASSIFICATION	0.004251436982484696	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996132035557	WITHOUT_CLASSIFICATION	3.8679644433923734E-7	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9997584306308663	WITHOUT_CLASSIFICATION	2.4156936913376825E-4	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999999441638409	WITHOUT_CLASSIFICATION	5.583615909107416E-8	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999999441638409	WITHOUT_CLASSIFICATION	5.583615909107416E-8	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.999911756401213	WITHOUT_CLASSIFICATION	8.824359878699671E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9999867509093222	WITHOUT_CLASSIFICATION	1.3249090677870174E-5	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999996710802923	WITHOUT_CLASSIFICATION	3.2891970770977386E-7	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9999607021033805	WITHOUT_CLASSIFICATION	3.929789661961236E-5	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999990845856704	WITHOUT_CLASSIFICATION	9.154143295463932E-7	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999930381228	WITHOUT_CLASSIFICATION	6.961877185689881E-9	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999588373287	WITHOUT_CLASSIFICATION	4.116267120033809E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9659005992025045	WITHOUT_CLASSIFICATION	0.0340994007974955	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999998434582098	WITHOUT_CLASSIFICATION	1.5654179021587657E-7	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999972025758124	WITHOUT_CLASSIFICATION	2.797424187650606E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999830618730353	WITHOUT_CLASSIFICATION	1.69381269647518E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999843190824	WITHOUT_CLASSIFICATION	1.568091758896841E-8	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999843190824	WITHOUT_CLASSIFICATION	1.568091758896841E-8	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999999093109496	WITHOUT_CLASSIFICATION	9.068905046323572E-8	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999995321453311	WITHOUT_CLASSIFICATION	4.6785466882037713E-7	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999312154929	WITHOUT_CLASSIFICATION	6.87845070886379E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999805110347	WITHOUT_CLASSIFICATION	1.9488965334585203E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999805110347	WITHOUT_CLASSIFICATION	1.9488965334585203E-8	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999994764945412	WITHOUT_CLASSIFICATION	5.235054587112493E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.999999686910696	WITHOUT_CLASSIFICATION	3.1308930400622174E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.999999686910696	WITHOUT_CLASSIFICATION	3.1308930400622174E-7	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9989602646729938	WITHOUT_CLASSIFICATION	0.0010397353270062179	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999990490406897	WITHOUT_CLASSIFICATION	9.509593104047777E-7	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999990916626694	WITHOUT_CLASSIFICATION	9.08337330477722E-7	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999997256702037	WITHOUT_CLASSIFICATION	2.743297962746938E-7	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999999764418407	WITHOUT_CLASSIFICATION	2.355815931457859E-8	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999961110104001	WITHOUT_CLASSIFICATION	3.888989599863186E-6	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999961110104001	WITHOUT_CLASSIFICATION	3.888989599863186E-6	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999990928507752	WITHOUT_CLASSIFICATION	9.07149224825732E-7	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999990562642594	WITHOUT_CLASSIFICATION	9.4373574063192E-7	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.999999954846945	WITHOUT_CLASSIFICATION	4.515305490496928E-8	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999995981624025	WITHOUT_CLASSIFICATION	4.018375976130149E-7	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.9999999696343022	WITHOUT_CLASSIFICATION	3.0365697768559436E-8	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.999999881081338	WITHOUT_CLASSIFICATION	1.1891866207262181E-7	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999996226078373	WITHOUT_CLASSIFICATION	3.7739216269868643E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999996964154	WITHOUT_CLASSIFICATION	3.035846454361314E-10	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999867600717476	WITHOUT_CLASSIFICATION	1.3239928252412943E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999985117664323	WITHOUT_CLASSIFICATION	1.4882335677063064E-6	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999948807410475	WITHOUT_CLASSIFICATION	5.119258952616927E-6	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999994764945412	WITHOUT_CLASSIFICATION	5.235054587112493E-7	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999998462333638	WITHOUT_CLASSIFICATION	1.5376663624627214E-7	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999687149018778	WITHOUT_CLASSIFICATION	3.1285098122217216E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9999923878882822	WITHOUT_CLASSIFICATION	7.612111717910179E-6	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999998593605611	WITHOUT_CLASSIFICATION	1.406394388896443E-7	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999980343597961	WITHOUT_CLASSIFICATION	1.9656402039358707E-6	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999976143704966	WITHOUT_CLASSIFICATION	2.385629503278228E-6	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999999826393497	WITHOUT_CLASSIFICATION	1.7360650212526486E-8	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9999368096376753	WITHOUT_CLASSIFICATION	6.31903623247197E-5	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999486925817659	WITHOUT_CLASSIFICATION	5.130741823415214E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999655397616771	WITHOUT_CLASSIFICATION	3.446023832291354E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999432361237024	WITHOUT_CLASSIFICATION	5.676387629767374E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999872903053574	WITHOUT_CLASSIFICATION	1.2709694642587849E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999988469701954	WITHOUT_CLASSIFICATION	1.153029804682503E-6	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9994865470920945	WITHOUT_CLASSIFICATION	5.134529079055219E-4	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999986638860154	WITHOUT_CLASSIFICATION	1.3361139845169905E-6	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9999506462624808	WITHOUT_CLASSIFICATION	4.935373751932453E-5	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999885417616449	WITHOUT_CLASSIFICATION	1.1458238355146761E-5	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9999984996376796	WITHOUT_CLASSIFICATION	1.5003623204766813E-6	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9999943729489478	WITHOUT_CLASSIFICATION	5.6270510522678926E-6	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999993096485434	WITHOUT_CLASSIFICATION	6.90351456526951E-7	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.999997490148736	WITHOUT_CLASSIFICATION	2.5098512641512815E-6	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9999996863786965	WITHOUT_CLASSIFICATION	3.1362130340929176E-7	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999994862917432	WITHOUT_CLASSIFICATION	5.137082567957742E-6	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999966532664494	WITHOUT_CLASSIFICATION	3.346733550646363E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999357905108	WITHOUT_CLASSIFICATION	6.4209489138848E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999265500507	WITHOUT_CLASSIFICATION	7.344994934491115E-8	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999995468093246	WITHOUT_CLASSIFICATION	4.531906753614977E-7	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.999926987711773	WITHOUT_CLASSIFICATION	7.301228822701888E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.999998413364219	WITHOUT_CLASSIFICATION	1.5866357809480856E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999994862917432	WITHOUT_CLASSIFICATION	5.137082567957742E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999357905108	WITHOUT_CLASSIFICATION	6.4209489138848E-8	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999357905108	WITHOUT_CLASSIFICATION	6.4209489138848E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999265500507	WITHOUT_CLASSIFICATION	7.344994934491115E-8	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999998881860012	WITHOUT_CLASSIFICATION	1.118139989344821E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999998460962076	WITHOUT_CLASSIFICATION	1.5390379232870592E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999998460962076	WITHOUT_CLASSIFICATION	1.5390379232870592E-7	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999993372880985	WITHOUT_CLASSIFICATION	6.627119014692303E-7	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999938226620297	WITHOUT_CLASSIFICATION	6.177337970235999E-6	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999938226620297	WITHOUT_CLASSIFICATION	6.177337970235999E-6	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999998478912967	WITHOUT_CLASSIFICATION	1.5210870333995218E-7	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999999698882104	WITHOUT_CLASSIFICATION	3.011178963461408E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999507463309	WITHOUT_CLASSIFICATION	4.9253669149304806E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999507463309	WITHOUT_CLASSIFICATION	4.9253669149304806E-8	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999995450292174	WITHOUT_CLASSIFICATION	4.54970782698983E-7	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999991489664759	WITHOUT_CLASSIFICATION	8.510335241061428E-7	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999996867934839	WITHOUT_CLASSIFICATION	3.132065160345955E-7	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999993103874777	WITHOUT_CLASSIFICATION	6.89612522330547E-7	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999969004395195	WITHOUT_CLASSIFICATION	3.0995604805601193E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999958333031956	WITHOUT_CLASSIFICATION	4.166696804285347E-6	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999983897933347	WITHOUT_CLASSIFICATION	1.6102066653823765E-6	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999985290755046	WITHOUT_CLASSIFICATION	1.4709244954485988E-6	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.99998251880641	WITHOUT_CLASSIFICATION	1.7481193590073463E-5	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999997829647466	WITHOUT_CLASSIFICATION	2.1703525338627506E-7	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9999644417524598	WITHOUT_CLASSIFICATION	3.555824754025634E-5	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999963627714717	WITHOUT_CLASSIFICATION	3.6372285282420043E-6	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999769349176444	WITHOUT_CLASSIFICATION	2.3065082355518726E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.999992393875288	WITHOUT_CLASSIFICATION	7.606124711992577E-6	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.999998440982411	WITHOUT_CLASSIFICATION	1.5590175889800744E-6	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999931532376535	WITHOUT_CLASSIFICATION	6.846762346587957E-6	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.9999999489771544	WITHOUT_CLASSIFICATION	5.10228455105166E-8	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999205358825565	WITHOUT_CLASSIFICATION	7.946411744352054E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999997553380375	WITHOUT_CLASSIFICATION	2.4466196247603134E-7	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999889252682563	WITHOUT_CLASSIFICATION	1.1074731743631116E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999872903053574	WITHOUT_CLASSIFICATION	1.2709694642587849E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.999998650272127	WITHOUT_CLASSIFICATION	1.349727872988323E-6	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999997899059844	WITHOUT_CLASSIFICATION	2.1009401563933534E-7	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999995191779779	WITHOUT_CLASSIFICATION	4.808220220851411E-7	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9999952276369677	WITHOUT_CLASSIFICATION	4.772363032336525E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999833391638561	WITHOUT_CLASSIFICATION	1.6660836143995926E-5	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999996128673434	WITHOUT_CLASSIFICATION	3.87132656623256E-7	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999999585405972	WITHOUT_CLASSIFICATION	4.145940271967984E-8	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9999927682171493	WITHOUT_CLASSIFICATION	7.231782850632716E-6	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999999873617924	WITHOUT_CLASSIFICATION	1.2638207621059918E-8	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.99999619025167	WITHOUT_CLASSIFICATION	3.8097483299552435E-6	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999998433265465	WITHOUT_CLASSIFICATION	1.566734535571796E-7	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999999404116552	WITHOUT_CLASSIFICATION	5.958834486117725E-8	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999997433487766	WITHOUT_CLASSIFICATION	2.566512233783256E-7	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.999992268570006	WITHOUT_CLASSIFICATION	7.731429993876923E-6	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999994201862508	WITHOUT_CLASSIFICATION	5.798137491823544E-7	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999995558862386	WITHOUT_CLASSIFICATION	4.441137614274021E-7	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9999606383027297	WITHOUT_CLASSIFICATION	3.936169727015194E-5	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999998292801227	WITHOUT_CLASSIFICATION	1.7071987733477237E-7	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.999997818961091	WITHOUT_CLASSIFICATION	2.181038909095511E-6	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999827222227381	WITHOUT_CLASSIFICATION	1.7277777261859036E-5	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999999233106611	WITHOUT_CLASSIFICATION	7.668933888464407E-8	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999999226394409	WITHOUT_CLASSIFICATION	7.736055908523331E-8	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999834230651764	WITHOUT_CLASSIFICATION	1.657693482352057E-5	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999995010654433	WITHOUT_CLASSIFICATION	4.989345567576619E-7	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999941660221076	WITHOUT_CLASSIFICATION	5.833977892394083E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999995647283086	WITHOUT_CLASSIFICATION	4.35271691393058E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999996836641677	WITHOUT_CLASSIFICATION	3.163358322654917E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999995596516362	WITHOUT_CLASSIFICATION	4.4034836383754765E-7	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999999942784632	WITHOUT_CLASSIFICATION	5.721536799953124E-9	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999985117664323	WITHOUT_CLASSIFICATION	1.4882335677063064E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999985117664323	WITHOUT_CLASSIFICATION	1.4882335677063064E-6	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999991450153539	WITHOUT_CLASSIFICATION	8.549846461456523E-7	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999999976891755	WITHOUT_CLASSIFICATION	2.3108245504647033E-9	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999730253069	WITHOUT_CLASSIFICATION	2.6974693167410093E-8	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994336653718	WITHOUT_CLASSIFICATION	5.66334628179676E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999983139068932	WITHOUT_CLASSIFICATION	1.6860931067303588E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998723955383	WITHOUT_CLASSIFICATION	1.2760446164944008E-7	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999992338921407	WITHOUT_CLASSIFICATION	7.661078593729759E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999984277432205	WITHOUT_CLASSIFICATION	1.5722567795575912E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999992966537957	WITHOUT_CLASSIFICATION	7.033462043297309E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998723955383	WITHOUT_CLASSIFICATION	1.2760446164944008E-7	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.999999958421462	WITHOUT_CLASSIFICATION	4.157853786911599E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998723955383	WITHOUT_CLASSIFICATION	1.2760446164944008E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998723955383	WITHOUT_CLASSIFICATION	1.2760446164944008E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998723955383	WITHOUT_CLASSIFICATION	1.2760446164944008E-7	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999991194764942	WITHOUT_CLASSIFICATION	8.805235058411095E-7	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999894148691078	WITHOUT_CLASSIFICATION	1.0585130892337868E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999814105331238	WITHOUT_CLASSIFICATION	1.8589466876184913E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999814105331238	WITHOUT_CLASSIFICATION	1.8589466876184913E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999894148691078	WITHOUT_CLASSIFICATION	1.0585130892337868E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999894148691078	WITHOUT_CLASSIFICATION	1.0585130892337868E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999894148691078	WITHOUT_CLASSIFICATION	1.0585130892337868E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999894148691078	WITHOUT_CLASSIFICATION	1.0585130892337868E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999894148691078	WITHOUT_CLASSIFICATION	1.0585130892337868E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999910832999532	WITHOUT_CLASSIFICATION	8.916700046767129E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999910832999532	WITHOUT_CLASSIFICATION	8.916700046767129E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999910832999532	WITHOUT_CLASSIFICATION	8.916700046767129E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999910832999532	WITHOUT_CLASSIFICATION	8.916700046767129E-6	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9997589725603585	WITHOUT_CLASSIFICATION	2.4102743964153593E-4	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999963209849891	WITHOUT_CLASSIFICATION	3.679015010873192E-6	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999976141885448	WITHOUT_CLASSIFICATION	2.3858114552041335E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.9999987823517485	WITHOUT_CLASSIFICATION	1.21764825152241E-6	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999994151535494	WITHOUT_CLASSIFICATION	5.848464506339793E-7	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999991116310084	WITHOUT_CLASSIFICATION	8.883689915568337E-7	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999977441653588	WITHOUT_CLASSIFICATION	2.255834641145157E-6	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999992287255832	WITHOUT_CLASSIFICATION	7.712744167690624E-7	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999986327542733	WITHOUT_CLASSIFICATION	1.3672457266661695E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999958669520301	WITHOUT_CLASSIFICATION	4.133047969917664E-6	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999981116498484	WITHOUT_CLASSIFICATION	1.8883501515850356E-6	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.999999541110037	WITHOUT_CLASSIFICATION	4.588899630575379E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999949212440395	WITHOUT_CLASSIFICATION	5.078755960419447E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999929175787488	WITHOUT_CLASSIFICATION	7.082421251286674E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999982258355666	WITHOUT_CLASSIFICATION	1.7741644333621095E-6	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999996697391742	WITHOUT_CLASSIFICATION	3.3026082585610353E-7	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999996299253552	WITHOUT_CLASSIFICATION	3.700746449101042E-7	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.999998689243149	WITHOUT_CLASSIFICATION	1.3107568510141114E-6	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999992168848543	WITHOUT_CLASSIFICATION	7.831151458462742E-7	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999987869129359	WITHOUT_CLASSIFICATION	1.2130870641192571E-6	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999965001094341	WITHOUT_CLASSIFICATION	3.4998905659296844E-6	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999998080135759	WITHOUT_CLASSIFICATION	1.9198642418166E-7	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.9999905901102678	WITHOUT_CLASSIFICATION	9.409889732250672E-6	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999897903717269	WITHOUT_CLASSIFICATION	1.0209628273163583E-5	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9999817219699182	WITHOUT_CLASSIFICATION	1.827803008189706E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999992214842014	WITHOUT_CLASSIFICATION	7.785157986752097E-7	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999015748879	WITHOUT_CLASSIFICATION	9.842511200161489E-8	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999015748879	WITHOUT_CLASSIFICATION	9.842511200161489E-8	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999349261831	WITHOUT_CLASSIFICATION	6.50738168458217E-8	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999993844669777	WITHOUT_CLASSIFICATION	6.155330224359988E-7	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999993844669777	WITHOUT_CLASSIFICATION	6.155330224359988E-7	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999997072704954	WITHOUT_CLASSIFICATION	2.927295046436422E-7	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9997073750964302	WITHOUT_CLASSIFICATION	2.926249035698471E-4	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9997073750964302	WITHOUT_CLASSIFICATION	2.926249035698471E-4	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999985017700582	WITHOUT_CLASSIFICATION	1.4982299417830673E-6	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999985017700582	WITHOUT_CLASSIFICATION	1.4982299417830673E-6	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999998704752824	WITHOUT_CLASSIFICATION	1.2952471750726246E-7	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999830677860438	WITHOUT_CLASSIFICATION	1.6932213956159667E-5	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999830677860438	WITHOUT_CLASSIFICATION	1.6932213956159667E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999847552496588	WITHOUT_CLASSIFICATION	1.5244750341209569E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999863919610844	WITHOUT_CLASSIFICATION	1.3608038915533906E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.999995196247817	WITHOUT_CLASSIFICATION	4.803752182941661E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975224663376	WITHOUT_CLASSIFICATION	2.4775336623518278E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975224663376	WITHOUT_CLASSIFICATION	2.4775336623518278E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.999999107758196	WITHOUT_CLASSIFICATION	8.922418038961244E-7	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999988778327097	WITHOUT_CLASSIFICATION	1.1221672903330398E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999989081738169	WITHOUT_CLASSIFICATION	1.0918261830354778E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.999998247028414	WITHOUT_CLASSIFICATION	1.7529715859621756E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999992357771512	WITHOUT_CLASSIFICATION	7.642228488915432E-7	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999991090663632	WITHOUT_CLASSIFICATION	8.909336368319937E-7	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999984234437138	WITHOUT_CLASSIFICATION	1.576556286220653E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9999975110413748	WITHOUT_CLASSIFICATION	2.488958625252023E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999932618208653	WITHOUT_CLASSIFICATION	6.738179134592451E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999782010413203	WITHOUT_CLASSIFICATION	2.1798958679697737E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994336653718	WITHOUT_CLASSIFICATION	5.66334628179676E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999782010413203	WITHOUT_CLASSIFICATION	2.1798958679697737E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999985298164996	WITHOUT_CLASSIFICATION	1.4701835003962534E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999991767524604	WITHOUT_CLASSIFICATION	8.232475395924938E-7	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999968368814421	WITHOUT_CLASSIFICATION	3.1631185578173535E-6	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.999988392441386	WITHOUT_CLASSIFICATION	1.1607558613960728E-5	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999965578496637	WITHOUT_CLASSIFICATION	3.4421503363164203E-6	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999962714181605	WITHOUT_CLASSIFICATION	3.7285818394802944E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999991379276427	WITHOUT_CLASSIFICATION	8.620723572298289E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.999999243218785	WITHOUT_CLASSIFICATION	7.567812149386975E-7	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9997830673343128	WITHOUT_CLASSIFICATION	2.1693266568729517E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999977283510614	WITHOUT_CLASSIFICATION	2.2716489386629768E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999971787987095	WITHOUT_CLASSIFICATION	2.821201290575922E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999971787987095	WITHOUT_CLASSIFICATION	2.821201290575922E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999971787987095	WITHOUT_CLASSIFICATION	2.821201290575922E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999971787987095	WITHOUT_CLASSIFICATION	2.821201290575922E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999971787987095	WITHOUT_CLASSIFICATION	2.821201290575922E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999971787987095	WITHOUT_CLASSIFICATION	2.821201290575922E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999971787987095	WITHOUT_CLASSIFICATION	2.821201290575922E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999971787987095	WITHOUT_CLASSIFICATION	2.821201290575922E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999930409201654	WITHOUT_CLASSIFICATION	6.959079834554644E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999930409201654	WITHOUT_CLASSIFICATION	6.959079834554644E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999930409201654	WITHOUT_CLASSIFICATION	6.959079834554644E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999930409201654	WITHOUT_CLASSIFICATION	6.959079834554644E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999930409201654	WITHOUT_CLASSIFICATION	6.959079834554644E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999930409201654	WITHOUT_CLASSIFICATION	6.959079834554644E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999930409201654	WITHOUT_CLASSIFICATION	6.959079834554644E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999930409201654	WITHOUT_CLASSIFICATION	6.959079834554644E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999977274512856	WITHOUT_CLASSIFICATION	2.2725487144626047E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999977274512856	WITHOUT_CLASSIFICATION	2.2725487144626047E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999977274512856	WITHOUT_CLASSIFICATION	2.2725487144626047E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999977274512856	WITHOUT_CLASSIFICATION	2.2725487144626047E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999977274512856	WITHOUT_CLASSIFICATION	2.2725487144626047E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999977274512856	WITHOUT_CLASSIFICATION	2.2725487144626047E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999977274512856	WITHOUT_CLASSIFICATION	2.2725487144626047E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999977274512856	WITHOUT_CLASSIFICATION	2.2725487144626047E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999981225808645	WITHOUT_CLASSIFICATION	1.8774191355287799E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999981225808645	WITHOUT_CLASSIFICATION	1.8774191355287799E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999987293908338	WITHOUT_CLASSIFICATION	1.2706091662702994E-6	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999974364982179	WITHOUT_CLASSIFICATION	2.5635017820575538E-6	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999974364982179	WITHOUT_CLASSIFICATION	2.5635017820575538E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999987293908338	WITHOUT_CLASSIFICATION	1.2706091662702994E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999982258355666	WITHOUT_CLASSIFICATION	1.7741644333621095E-6	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9999975966987493	WITHOUT_CLASSIFICATION	2.403301250591807E-6	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999998427346882	WITHOUT_CLASSIFICATION	1.5726531170490483E-7	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9997169514990479	WITHOUT_CLASSIFICATION	2.830485009520697E-4	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999984987855901	WITHOUT_CLASSIFICATION	1.501214409926539E-6	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999995334512473	WITHOUT_CLASSIFICATION	4.6654875271760576E-7	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999937888644608	WITHOUT_CLASSIFICATION	6.211135539315962E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999998321444933	WITHOUT_CLASSIFICATION	1.678555066411168E-7	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999992753474529	WITHOUT_CLASSIFICATION	7.246525470767219E-7	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999985556847347	WITHOUT_CLASSIFICATION	1.44431526525632E-6	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.999999127130618	WITHOUT_CLASSIFICATION	8.728693819050131E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999995160614078	WITHOUT_CLASSIFICATION	4.839385922446149E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999987650298164	WITHOUT_CLASSIFICATION	1.234970183590533E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.99999976814258	WITHOUT_CLASSIFICATION	2.3185741996202698E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.99999976814258	WITHOUT_CLASSIFICATION	2.3185741996202698E-7	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999976533867081	WITHOUT_CLASSIFICATION	2.3466132918980524E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999976533867081	WITHOUT_CLASSIFICATION	2.3466132918980524E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999995352103993	WITHOUT_CLASSIFICATION	4.6478960065422506E-7	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999994150111305	WITHOUT_CLASSIFICATION	5.849888695211173E-7	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999992378599121	WITHOUT_CLASSIFICATION	7.621400878999353E-7	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999990566483526	WITHOUT_CLASSIFICATION	9.433516474571173E-7	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.999999623883548	WITHOUT_CLASSIFICATION	3.7611645195900117E-7	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999993651195533	WITHOUT_CLASSIFICATION	6.348804465701012E-7	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999985556847347	WITHOUT_CLASSIFICATION	1.44431526525632E-6	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.999999127130618	WITHOUT_CLASSIFICATION	8.728693819050131E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999995160614078	WITHOUT_CLASSIFICATION	4.839385922446149E-7	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999996993000664	WITHOUT_CLASSIFICATION	3.006999336937026E-7	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999999317648256	WITHOUT_CLASSIFICATION	6.823517435260289E-8	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999996679059892	WITHOUT_CLASSIFICATION	3.320940108003112E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999996799212465	WITHOUT_CLASSIFICATION	3.200787534536252E-7	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999995163672651	WITHOUT_CLASSIFICATION	4.836327349207787E-7	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999932230192259	WITHOUT_CLASSIFICATION	6.7769807739895955E-6	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999973002214337	WITHOUT_CLASSIFICATION	2.6997785663078477E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9999430127987775	WITHOUT_CLASSIFICATION	5.6987201222449654E-5	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9999995183715209	WITHOUT_CLASSIFICATION	4.816284791054106E-7	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999972340047066	WITHOUT_CLASSIFICATION	2.765995293304113E-6	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.999986607618197	WITHOUT_CLASSIFICATION	1.3392381803083713E-5	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999996485797176	WITHOUT_CLASSIFICATION	3.5142028242793346E-7	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999800985581114	WITHOUT_CLASSIFICATION	1.990144188855109E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999846946205587	WITHOUT_CLASSIFICATION	1.5305379441252605E-5	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999972214498418	WITHOUT_CLASSIFICATION	2.7785501581024793E-6	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999442059221376	WITHOUT_CLASSIFICATION	5.5794077862342314E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998652216344	WITHOUT_CLASSIFICATION	1.347783655337607E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998652216344	WITHOUT_CLASSIFICATION	1.347783655337607E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995754246348	WITHOUT_CLASSIFICATION	4.2457536522558544E-7	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999961575538859	WITHOUT_CLASSIFICATION	3.842446113978343E-6	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9997464792215386	WITHOUT_CLASSIFICATION	2.5352077846140024E-4	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9999827965234762	WITHOUT_CLASSIFICATION	1.720347652382467E-5	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999891962392616	WITHOUT_CLASSIFICATION	1.0803760738395722E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988665802765	WITHOUT_CLASSIFICATION	1.1334197235066027E-6	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.999998723064907	WITHOUT_CLASSIFICATION	1.2769350930508014E-6	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999935219890175	WITHOUT_CLASSIFICATION	6.478010982479534E-6	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999947747050827	WITHOUT_CLASSIFICATION	5.225294917278482E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999973364569955	WITHOUT_CLASSIFICATION	2.663543004505938E-6	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999999753066271	WITHOUT_CLASSIFICATION	2.4693372804992308E-8	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9999334531835877	WITHOUT_CLASSIFICATION	6.654681641223963E-5	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999950470083074	WITHOUT_CLASSIFICATION	4.952991692624642E-6	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999452364167586	WITHOUT_CLASSIFICATION	5.476358324147568E-5	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9999045253197684	WITHOUT_CLASSIFICATION	9.54746802316967E-5	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999886505487363	WITHOUT_CLASSIFICATION	1.134945126370826E-5	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999995336132284	WITHOUT_CLASSIFICATION	4.663867716603748E-7	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999977925822311	WITHOUT_CLASSIFICATION	2.2074177688725573E-6	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999992018346179	WITHOUT_CLASSIFICATION	7.981653821553484E-7	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999999223803355	WITHOUT_CLASSIFICATION	7.761966446735408E-8	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999931062815419	WITHOUT_CLASSIFICATION	6.893718458115484E-6	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9988627072742051	WITHOUT_CLASSIFICATION	0.001137292725794929	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999890126118409	WITHOUT_CLASSIFICATION	1.098738815903327E-5	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.999999903298612	WITHOUT_CLASSIFICATION	9.670138795725801E-8	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999988600682223	WITHOUT_CLASSIFICATION	1.1399317776960458E-6	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999991284967541	WITHOUT_CLASSIFICATION	8.715032458814922E-7	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999895062472725	WITHOUT_CLASSIFICATION	1.049375272761871E-5	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999986187312923	WITHOUT_CLASSIFICATION	1.3812687077010997E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9999689353522999	WITHOUT_CLASSIFICATION	3.10646477000475E-5	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999995352103993	WITHOUT_CLASSIFICATION	4.6478960065422506E-7	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999994150111305	WITHOUT_CLASSIFICATION	5.849888695211173E-7	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9999999191180879	WITHOUT_CLASSIFICATION	8.088191196405301E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998742926464	WITHOUT_CLASSIFICATION	1.2570735362624485E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999371454963	WITHOUT_CLASSIFICATION	6.285450362937456E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999807590518	WITHOUT_CLASSIFICATION	1.924094821232037E-7	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999999466452983	WITHOUT_CLASSIFICATION	5.3354701652269484E-8	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999999488079656	WITHOUT_CLASSIFICATION	5.1192034532977255E-8	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999999767399648	WITHOUT_CLASSIFICATION	2.3260035196948656E-8	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999982212054	WITHOUT_CLASSIFICATION	1.7787946546127738E-9	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999975781373502	WITHOUT_CLASSIFICATION	2.421862649713108E-6	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999864594569515	WITHOUT_CLASSIFICATION	1.354054304844309E-5	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9999217668931837	WITHOUT_CLASSIFICATION	7.823310681633695E-5	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999628290395285	WITHOUT_CLASSIFICATION	3.717096047148819E-5	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999974460223111	WITHOUT_CLASSIFICATION	2.5539776889273575E-6	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999916009237837	WITHOUT_CLASSIFICATION	8.399076216350109E-6	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999844377516031	WITHOUT_CLASSIFICATION	1.5562248397022753E-5	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999919751985348	WITHOUT_CLASSIFICATION	8.024801465148818E-6	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9999945844988586	WITHOUT_CLASSIFICATION	5.4155011414231555E-6	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9998767513182463	WITHOUT_CLASSIFICATION	1.232486817536217E-4	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999869948845693	WITHOUT_CLASSIFICATION	1.300511543078595E-5	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9998991169952798	WITHOUT_CLASSIFICATION	1.0088300472020363E-4	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999516356550678	WITHOUT_CLASSIFICATION	4.8364344932241644E-5	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999890448308038	WITHOUT_CLASSIFICATION	1.0955169196265423E-5	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.999952264378738	WITHOUT_CLASSIFICATION	4.773562126199569E-5	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999905376060879	WITHOUT_CLASSIFICATION	9.462393912139163E-6	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9998177879457428	WITHOUT_CLASSIFICATION	1.8221205425709628E-4	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9997049540347819	WITHOUT_CLASSIFICATION	2.950459652181188E-4	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999969404627262	WITHOUT_CLASSIFICATION	3.0595372737297804E-6	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999969098761073	WITHOUT_CLASSIFICATION	3.090123892791893E-6	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999986398203325	WITHOUT_CLASSIFICATION	1.3601796674760486E-6	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.999996929388164	WITHOUT_CLASSIFICATION	3.070611836073551E-6	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999979407191528	WITHOUT_CLASSIFICATION	2.059280847154744E-6	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9999889762926404	WITHOUT_CLASSIFICATION	1.1023707359674928E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999968909157045	WITHOUT_CLASSIFICATION	3.1090842954579406E-6	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999993371632224	WITHOUT_CLASSIFICATION	6.628367775350642E-7	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999993333792053	WITHOUT_CLASSIFICATION	6.666207945855006E-7	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999988100165959	WITHOUT_CLASSIFICATION	1.1899834042088216E-6	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999983030463228	WITHOUT_CLASSIFICATION	1.6969536772440546E-6	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999970670147719	WITHOUT_CLASSIFICATION	2.932985228026817E-6	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999996361074143	WITHOUT_CLASSIFICATION	3.6389258581861215E-7	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999996946972639	WITHOUT_CLASSIFICATION	3.0530273613799965E-7	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999885103246794	WITHOUT_CLASSIFICATION	1.148967532061197E-5	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999992459238073	WITHOUT_CLASSIFICATION	7.540761926804075E-7	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999982033361955	WITHOUT_CLASSIFICATION	1.7966638044528614E-6	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9998320610577972	WITHOUT_CLASSIFICATION	1.6793894220272065E-4	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9999932382619257	WITHOUT_CLASSIFICATION	6.761738074309305E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975224663376	WITHOUT_CLASSIFICATION	2.4775336623518278E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999772470747563	WITHOUT_CLASSIFICATION	2.2752925243634725E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.994954171655346	WITHOUT_CLASSIFICATION	0.005045828344653914	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9997353112816739	WITHOUT_CLASSIFICATION	2.6468871832603983E-4	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9978804665280862	WITHOUT_CLASSIFICATION	0.0021195334719138078	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.998544742025027	WITHOUT_CLASSIFICATION	0.0014552579749729827	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999781365746027	WITHOUT_CLASSIFICATION	2.1863425397366943E-5	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999781365746027	WITHOUT_CLASSIFICATION	2.1863425397366943E-5	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999990670800769	WITHOUT_CLASSIFICATION	9.329199231371687E-7	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999990670800769	WITHOUT_CLASSIFICATION	9.329199231371687E-7	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9998383564795156	WITHOUT_CLASSIFICATION	1.616435204845008E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999920108198275	WITHOUT_CLASSIFICATION	7.989180172562392E-6	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999998413246015	WITHOUT_CLASSIFICATION	1.5867539861654787E-7	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999998413246015	WITHOUT_CLASSIFICATION	1.5867539861654787E-7	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999779747862912	WITHOUT_CLASSIFICATION	2.20252137088139E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999978248999197	WITHOUT_CLASSIFICATION	2.1751000801650507E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999995111544253	WITHOUT_CLASSIFICATION	4.888455747081654E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999924700336444	WITHOUT_CLASSIFICATION	7.529966355531697E-6	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999995614610068	WITHOUT_CLASSIFICATION	4.385389932490498E-7	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999952134476773	WITHOUT_CLASSIFICATION	4.78655232273707E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.999996236429949	WITHOUT_CLASSIFICATION	3.76357005099746E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999963819769248	WITHOUT_CLASSIFICATION	3.6180230751840644E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999937543476775	WITHOUT_CLASSIFICATION	6.245652322485188E-6	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999948075078999	WITHOUT_CLASSIFICATION	5.192492100031806E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999947376586642	WITHOUT_CLASSIFICATION	5.262341335863044E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999954999179297	WITHOUT_CLASSIFICATION	4.500082070298944E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999961247387379	WITHOUT_CLASSIFICATION	3.875261262029561E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999973564031235	WITHOUT_CLASSIFICATION	2.643596876596404E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999923111737575	WITHOUT_CLASSIFICATION	7.688826242530464E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997246775921	WITHOUT_CLASSIFICATION	2.7532240785504E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999978248999197	WITHOUT_CLASSIFICATION	2.1751000801650507E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999995111544253	WITHOUT_CLASSIFICATION	4.888455747081654E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999924700336444	WITHOUT_CLASSIFICATION	7.529966355531697E-6	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999995614610068	WITHOUT_CLASSIFICATION	4.385389932490498E-7	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999952134476773	WITHOUT_CLASSIFICATION	4.78655232273707E-6	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999991518035689	WITHOUT_CLASSIFICATION	8.481964310105372E-7	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999984558350146	WITHOUT_CLASSIFICATION	1.544164985406643E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999998786658278	WITHOUT_CLASSIFICATION	1.2133417205920777E-7	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999990339481817	WITHOUT_CLASSIFICATION	9.660518183080276E-7	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999975187427333	WITHOUT_CLASSIFICATION	2.4812572665399073E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999916405047317	WITHOUT_CLASSIFICATION	8.359495268237621E-6	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999991437695338	WITHOUT_CLASSIFICATION	8.562304661244671E-7	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999915342444198	WITHOUT_CLASSIFICATION	8.465755580190657E-6	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999974094758245	WITHOUT_CLASSIFICATION	2.5905241756091117E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999974572238002	WITHOUT_CLASSIFICATION	2.542776199936038E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999994449977212	WITHOUT_CLASSIFICATION	5.550022787547622E-7	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999963819769248	WITHOUT_CLASSIFICATION	3.6180230751840644E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999998888373678	WITHOUT_CLASSIFICATION	1.1116263219325754E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999996720132622	WITHOUT_CLASSIFICATION	3.2798673772003437E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999996720132622	WITHOUT_CLASSIFICATION	3.2798673772003437E-7	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999956247777334	WITHOUT_CLASSIFICATION	4.37522226664425E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999986656159175	WITHOUT_CLASSIFICATION	1.3343840823873742E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999951184349969	WITHOUT_CLASSIFICATION	4.881565003127854E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999951184349969	WITHOUT_CLASSIFICATION	4.881565003127854E-6	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999922182165647	WITHOUT_CLASSIFICATION	7.781783435404877E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999961160641024	WITHOUT_CLASSIFICATION	3.883935897547529E-6	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999896729116255	WITHOUT_CLASSIFICATION	1.0327088374496121E-5	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999988767150171	WITHOUT_CLASSIFICATION	1.1232849829032728E-6	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.999999109378061	WITHOUT_CLASSIFICATION	8.906219390744724E-7	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.9999996483959305	WITHOUT_CLASSIFICATION	3.5160406944513735E-7	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999929396065622	WITHOUT_CLASSIFICATION	7.060393437784949E-6	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999964123589395	WITHOUT_CLASSIFICATION	3.5876410604801343E-6	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.999998272351625	WITHOUT_CLASSIFICATION	1.7276483749866734E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9997328826394755	WITHOUT_CLASSIFICATION	2.671173605245155E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999993924296976	WITHOUT_CLASSIFICATION	6.075703025275494E-7	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999990155415707	WITHOUT_CLASSIFICATION	9.844584293318621E-7	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999989518577839	WITHOUT_CLASSIFICATION	1.0481422160663087E-6	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.999999977624686	WITHOUT_CLASSIFICATION	2.237531394450542E-8	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999986003000476	WITHOUT_CLASSIFICATION	1.3996999523337432E-6	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999999889227257	WITHOUT_CLASSIFICATION	1.1077274351289531E-8	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999987552013939	WITHOUT_CLASSIFICATION	1.2447986060669624E-6	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999997017508044	WITHOUT_CLASSIFICATION	2.982491956698866E-7	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999815973978093	WITHOUT_CLASSIFICATION	1.8402602190718065E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.999985639743155	WITHOUT_CLASSIFICATION	1.4360256845075837E-5	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999954794829626	WITHOUT_CLASSIFICATION	4.52051703743264E-6	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999974380608087	WITHOUT_CLASSIFICATION	2.561939191263463E-6	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999948075078999	WITHOUT_CLASSIFICATION	5.192492100031806E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999947376586642	WITHOUT_CLASSIFICATION	5.262341335863044E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999966350370171	WITHOUT_CLASSIFICATION	3.364962983008758E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999954999179297	WITHOUT_CLASSIFICATION	4.500082070298944E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999961247387379	WITHOUT_CLASSIFICATION	3.875261262029561E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999973564031235	WITHOUT_CLASSIFICATION	2.643596876596404E-6	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9997900695236095	WITHOUT_CLASSIFICATION	2.0993047639043607E-4	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999046690602291	WITHOUT_CLASSIFICATION	9.533093977081567E-5	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999964109450644	WITHOUT_CLASSIFICATION	3.589054935490128E-6	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999996352491441	WITHOUT_CLASSIFICATION	3.647508558678463E-7	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999978679121231	WITHOUT_CLASSIFICATION	2.1320878770362342E-6	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9998808300085091	WITHOUT_CLASSIFICATION	1.1916999149081932E-4	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999987593148266	WITHOUT_CLASSIFICATION	1.240685173314047E-6	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999956969932126	WITHOUT_CLASSIFICATION	4.303006787342371E-6	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999657872433533	WITHOUT_CLASSIFICATION	3.42127566465913E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999906299132775	WITHOUT_CLASSIFICATION	9.370086722642678E-6	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.9999460082844847	WITHOUT_CLASSIFICATION	5.399171551534982E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999842661734686	WITHOUT_CLASSIFICATION	1.5733826531380342E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999512218537431	WITHOUT_CLASSIFICATION	4.877814625691798E-5	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999042045336	WITHOUT_CLASSIFICATION	9.579546642135027E-8	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999882756282725	WITHOUT_CLASSIFICATION	1.1724371727570763E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999997157437102	WITHOUT_CLASSIFICATION	2.842562898552487E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999217663625	WITHOUT_CLASSIFICATION	7.823363751134887E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999893923390472	WITHOUT_CLASSIFICATION	1.0607660952714377E-5	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999998582871157	WITHOUT_CLASSIFICATION	1.4171288429488877E-7	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996861511217	WITHOUT_CLASSIFICATION	3.1384887836919204E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999996640123829	WITHOUT_CLASSIFICATION	3.3598761714195824E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999860292174947	WITHOUT_CLASSIFICATION	1.3970782505240153E-5	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999998626786661	WITHOUT_CLASSIFICATION	1.3732133396550316E-7	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999998950357666	WITHOUT_CLASSIFICATION	1.0496423335816986E-7	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.9999998716919184	WITHOUT_CLASSIFICATION	1.2830808164034268E-7	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999985776850205	WITHOUT_CLASSIFICATION	1.4223149795422107E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999982613653507	WITHOUT_CLASSIFICATION	1.73863464923425E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.999998305736869	WITHOUT_CLASSIFICATION	1.694263131035172E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999940297290126	WITHOUT_CLASSIFICATION	5.970270987411687E-6	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9999586831023624	WITHOUT_CLASSIFICATION	4.1316897637606805E-5	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999666576206738	WITHOUT_CLASSIFICATION	3.3342379326164934E-5	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999958490608709	WITHOUT_CLASSIFICATION	4.150939129139667E-6	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999995844491869	WITHOUT_CLASSIFICATION	4.155508130118735E-7	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999993529047431	WITHOUT_CLASSIFICATION	6.470952569964392E-7	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996626483284	WITHOUT_CLASSIFICATION	3.3735167164537575E-7	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999849830210109	WITHOUT_CLASSIFICATION	1.5016978989167886E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999795484171	WITHOUT_CLASSIFICATION	2.0451582910440394E-8	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999992572557392	WITHOUT_CLASSIFICATION	7.427442607062561E-7	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999607151546701	WITHOUT_CLASSIFICATION	3.928484532985959E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999961680931558	WITHOUT_CLASSIFICATION	3.831906844164223E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999961680931558	WITHOUT_CLASSIFICATION	3.831906844164223E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999953095943787	WITHOUT_CLASSIFICATION	4.690405621398204E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999983139068932	WITHOUT_CLASSIFICATION	1.6860931067303588E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999992338921407	WITHOUT_CLASSIFICATION	7.661078593729759E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999990820201964	WITHOUT_CLASSIFICATION	9.179798035950881E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999102434300414	WITHOUT_CLASSIFICATION	8.975656995865772E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999090178610389	WITHOUT_CLASSIFICATION	9.098213896106782E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999990463987748	WITHOUT_CLASSIFICATION	9.536012252137292E-7	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999990463987748	WITHOUT_CLASSIFICATION	9.536012252137292E-7	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999990463987748	WITHOUT_CLASSIFICATION	9.536012252137292E-7	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999965585794106	WITHOUT_CLASSIFICATION	3.441420589477704E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999960146226307	WITHOUT_CLASSIFICATION	3.985377369309871E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.999999897535277	WITHOUT_CLASSIFICATION	1.0246472308023219E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.999999897535277	WITHOUT_CLASSIFICATION	1.0246472308023219E-7	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999985240724614	WITHOUT_CLASSIFICATION	1.4759275385962232E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999987298085791	WITHOUT_CLASSIFICATION	1.2701914208195494E-6	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.999999913258663	WITHOUT_CLASSIFICATION	8.674133708392737E-8	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999979924484437	WITHOUT_CLASSIFICATION	2.0075515563266643E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9999992532890528	WITHOUT_CLASSIFICATION	7.467109472523083E-7	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.999999094007192	WITHOUT_CLASSIFICATION	9.059928080072091E-7	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999995686825771	WITHOUT_CLASSIFICATION	4.3131742292786005E-7	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999995234133805	WITHOUT_CLASSIFICATION	4.765866194995741E-7	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999987087088426	WITHOUT_CLASSIFICATION	1.2912911574904607E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999998886234818	WITHOUT_CLASSIFICATION	1.1137651827501225E-7	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999991058759929	WITHOUT_CLASSIFICATION	8.941240070542838E-7	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9998222829736033	WITHOUT_CLASSIFICATION	1.777170263966779E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999873614974878	WITHOUT_CLASSIFICATION	1.2638502512162395E-5	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9998928833577481	WITHOUT_CLASSIFICATION	1.071166422520264E-4	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999981007695457	WITHOUT_CLASSIFICATION	1.8992304542968242E-6	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.999890618034066	WITHOUT_CLASSIFICATION	1.0938196593396957E-4	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.9999880698446542	WITHOUT_CLASSIFICATION	1.1930155345914125E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999982018282618	WITHOUT_CLASSIFICATION	1.7981717382786696E-6	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999994943271213	WITHOUT_CLASSIFICATION	5.056728786919098E-7	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999999002300001	WITHOUT_CLASSIFICATION	9.976999993658546E-8	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999999261866498	WITHOUT_CLASSIFICATION	7.38133502349716E-8	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999998415564024	WITHOUT_CLASSIFICATION	1.584435976337616E-7	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999838271486344	WITHOUT_CLASSIFICATION	1.6172851365527153E-5	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999997896585965	WITHOUT_CLASSIFICATION	2.1034140342050394E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999942968360281	WITHOUT_CLASSIFICATION	5.70316397185499E-6	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999999418720882	WITHOUT_CLASSIFICATION	5.81279117990295E-8	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999998643741235	WITHOUT_CLASSIFICATION	1.3562587663020554E-7	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.99999983010153	WITHOUT_CLASSIFICATION	1.698984698616989E-7	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.999999919227626	WITHOUT_CLASSIFICATION	8.077237409283236E-8	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.999999806815559	WITHOUT_CLASSIFICATION	1.931844409754071E-7	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999997538491034	WITHOUT_CLASSIFICATION	2.461508965826818E-7	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998849484576	WITHOUT_CLASSIFICATION	1.1505154242192806E-7	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999853358948554	WITHOUT_CLASSIFICATION	1.4664105144584974E-5	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999955858529841	WITHOUT_CLASSIFICATION	4.41414701590475E-6	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999998560641055	WITHOUT_CLASSIFICATION	1.4393589445772666E-7	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999995745277063	WITHOUT_CLASSIFICATION	4.254722936877165E-7	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999998275161995	WITHOUT_CLASSIFICATION	1.7248380057492656E-7	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999995633043951	WITHOUT_CLASSIFICATION	4.366956048624208E-7	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9999656437470592	WITHOUT_CLASSIFICATION	3.4356252940850456E-5	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999996157664947	WITHOUT_CLASSIFICATION	3.842335052797657E-7	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999992138734896	WITHOUT_CLASSIFICATION	7.86126510428951E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999997553380375	WITHOUT_CLASSIFICATION	2.4466196247603134E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999999157060984	WITHOUT_CLASSIFICATION	8.429390162613812E-8	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999996836641677	WITHOUT_CLASSIFICATION	3.163358322654917E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999995596516362	WITHOUT_CLASSIFICATION	4.4034836383754765E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994336653718	WITHOUT_CLASSIFICATION	5.66334628179676E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999795484171	WITHOUT_CLASSIFICATION	2.0451582910440394E-8	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999942968360281	WITHOUT_CLASSIFICATION	5.70316397185499E-6	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999993096402273	WITHOUT_CLASSIFICATION	6.903597726690585E-7	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999998029985465	WITHOUT_CLASSIFICATION	1.970014534254344E-7	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999993079899961	WITHOUT_CLASSIFICATION	6.920100039048246E-7	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999987649375776	WITHOUT_CLASSIFICATION	1.2350624224858538E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999452332294	WITHOUT_CLASSIFICATION	5.476677042438095E-8	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999977597715227	WITHOUT_CLASSIFICATION	2.2402284773659847E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999968069982166	WITHOUT_CLASSIFICATION	3.193001783379534E-6	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999794126748585	WITHOUT_CLASSIFICATION	2.0587325141562055E-5	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999999479722005	WITHOUT_CLASSIFICATION	5.202779960612074E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999615413564	WITHOUT_CLASSIFICATION	3.8458643499112314E-8	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999995490645105	WITHOUT_CLASSIFICATION	4.509354894006832E-7	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999968069982166	WITHOUT_CLASSIFICATION	3.193001783379534E-6	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999244884793	WITHOUT_CLASSIFICATION	7.551152074234903E-8	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999995282595076	WITHOUT_CLASSIFICATION	4.717404925167121E-7	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.999999964120922	WITHOUT_CLASSIFICATION	3.587907794715569E-8	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998939657094	WITHOUT_CLASSIFICATION	1.0603429050710394E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999985814349751	WITHOUT_CLASSIFICATION	1.4185650249665396E-6	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999967926371235	WITHOUT_CLASSIFICATION	3.2073628765114897E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999984934709125	WITHOUT_CLASSIFICATION	1.506529087490243E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999984934709125	WITHOUT_CLASSIFICATION	1.506529087490243E-6	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999996464332738	WITHOUT_CLASSIFICATION	3.5356672626723004E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999998095845508	WITHOUT_CLASSIFICATION	1.9041544916749377E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999998095845508	WITHOUT_CLASSIFICATION	1.9041544916749377E-7	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999981152141	WITHOUT_CLASSIFICATION	1.8847858866431594E-9	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999996051171	WITHOUT_CLASSIFICATION	3.948829383718881E-10	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999999847491604	WITHOUT_CLASSIFICATION	1.5250839509985363E-8	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999998309443193	WITHOUT_CLASSIFICATION	1.690556807312581E-7	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999998560704659	WITHOUT_CLASSIFICATION	1.4392953407056517E-7	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999998227786832	WITHOUT_CLASSIFICATION	1.7722131675634428E-7	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.9999995209035528	WITHOUT_CLASSIFICATION	4.790964472130165E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999673807525483	WITHOUT_CLASSIFICATION	3.26192474516106E-5	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999997091661896	WITHOUT_CLASSIFICATION	2.90833810362831E-7	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999991015350213	WITHOUT_CLASSIFICATION	8.98464978741521E-7	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.999999862476212	WITHOUT_CLASSIFICATION	1.3752378807532032E-7	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999946278792301	WITHOUT_CLASSIFICATION	5.372120769910664E-6	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999997945835151	WITHOUT_CLASSIFICATION	2.0541648499505958E-7	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999992794761521	WITHOUT_CLASSIFICATION	7.205238478945711E-7	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999992424365687	WITHOUT_CLASSIFICATION	7.575634312334144E-7	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999988482916786	WITHOUT_CLASSIFICATION	1.1517083213377448E-6	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999940354972455	WITHOUT_CLASSIFICATION	5.964502754531625E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999889252682563	WITHOUT_CLASSIFICATION	1.1074731743631116E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999889252682563	WITHOUT_CLASSIFICATION	1.1074731743631116E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999872903053574	WITHOUT_CLASSIFICATION	1.2709694642587849E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999833391638561	WITHOUT_CLASSIFICATION	1.6660836143995926E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999872903053574	WITHOUT_CLASSIFICATION	1.2709694642587849E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999872903053574	WITHOUT_CLASSIFICATION	1.2709694642587849E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999872903053574	WITHOUT_CLASSIFICATION	1.2709694642587849E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999983139068932	WITHOUT_CLASSIFICATION	1.6860931067303588E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999992338921407	WITHOUT_CLASSIFICATION	7.661078593729759E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999265085475	WITHOUT_CLASSIFICATION	7.349145240385703E-8	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999968909157045	WITHOUT_CLASSIFICATION	3.1090842954579406E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9997328826394755	WITHOUT_CLASSIFICATION	2.671173605245155E-4	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999815973978093	WITHOUT_CLASSIFICATION	1.8402602190718065E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.999985639743155	WITHOUT_CLASSIFICATION	1.4360256845075837E-5	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999998115840835	WITHOUT_CLASSIFICATION	1.884159165273584E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999452332294	WITHOUT_CLASSIFICATION	5.476677042438095E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999615413564	WITHOUT_CLASSIFICATION	3.8458643499112314E-8	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999998585777123	WITHOUT_CLASSIFICATION	1.4142228769666617E-7	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999980234313925	WITHOUT_CLASSIFICATION	1.976568607402601E-6	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999985603597529	WITHOUT_CLASSIFICATION	1.4396402470594074E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.999999736334215	WITHOUT_CLASSIFICATION	2.636657849037693E-7	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999999275055288	WITHOUT_CLASSIFICATION	7.249447118549173E-8	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999999366908282	WITHOUT_CLASSIFICATION	6.330917185624901E-8	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999996836841072	WITHOUT_CLASSIFICATION	3.163158928205554E-7	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.999999292985525	WITHOUT_CLASSIFICATION	7.07014474909906E-7	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999977741869936	WITHOUT_CLASSIFICATION	2.2258130063223023E-6	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999957174940929	WITHOUT_CLASSIFICATION	4.282505907058513E-6	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999988868336476	WITHOUT_CLASSIFICATION	1.1131663524300076E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9999285622311028	WITHOUT_CLASSIFICATION	7.143776889716744E-5	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999992028353164	WITHOUT_CLASSIFICATION	7.971646835155122E-7	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999997239160348	WITHOUT_CLASSIFICATION	2.7608396528089413E-7	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999997355825552	WITHOUT_CLASSIFICATION	2.644174448202836E-7	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999903156243493	WITHOUT_CLASSIFICATION	9.684375650665738E-6	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.999998973474928	WITHOUT_CLASSIFICATION	1.0265250718601436E-6	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.96145699267318	WITHOUT_CLASSIFICATION	0.038543007326820054	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999998946547394	WITHOUT_CLASSIFICATION	1.053452607205591E-7	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999966522359176	WITHOUT_CLASSIFICATION	3.347764082422603E-6	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999964080613649	WITHOUT_CLASSIFICATION	3.591938635008203E-6	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999955673325137	WITHOUT_CLASSIFICATION	4.432667486304717E-6	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999640233246734	WITHOUT_CLASSIFICATION	3.5976675326584045E-5	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.9999988791965939	WITHOUT_CLASSIFICATION	1.1208034061801643E-6	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999957603800672	WITHOUT_CLASSIFICATION	4.239619932839979E-6	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9999277110674615	WITHOUT_CLASSIFICATION	7.228893253842316E-5	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9998690828958283	WITHOUT_CLASSIFICATION	1.309171041716447E-4	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999891005861304	WITHOUT_CLASSIFICATION	1.0899413869536708E-5	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999895424662963	WITHOUT_CLASSIFICATION	1.0457533703635604E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997246775921	WITHOUT_CLASSIFICATION	2.7532240785504E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997246775921	WITHOUT_CLASSIFICATION	2.7532240785504E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999980850077645	WITHOUT_CLASSIFICATION	1.9149922354672333E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9997328826394755	WITHOUT_CLASSIFICATION	2.671173605245155E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999993924296976	WITHOUT_CLASSIFICATION	6.075703025275494E-7	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999990155415707	WITHOUT_CLASSIFICATION	9.844584293318621E-7	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9995482300603535	WITHOUT_CLASSIFICATION	4.5176993964642635E-4	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999989518577839	WITHOUT_CLASSIFICATION	1.0481422160663087E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999882756282725	WITHOUT_CLASSIFICATION	1.1724371727570763E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999997157437102	WITHOUT_CLASSIFICATION	2.842562898552487E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999217663625	WITHOUT_CLASSIFICATION	7.823363751134887E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999893923390472	WITHOUT_CLASSIFICATION	1.0607660952714377E-5	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996861511217	WITHOUT_CLASSIFICATION	3.1384887836919204E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999996640123829	WITHOUT_CLASSIFICATION	3.3598761714195824E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999860292174947	WITHOUT_CLASSIFICATION	1.3970782505240153E-5	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999998626786661	WITHOUT_CLASSIFICATION	1.3732133396550316E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999940297290126	WITHOUT_CLASSIFICATION	5.970270987411687E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.999983869763147	WITHOUT_CLASSIFICATION	1.6130236852940584E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999795484171	WITHOUT_CLASSIFICATION	2.0451582910440394E-8	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999961680931558	WITHOUT_CLASSIFICATION	3.831906844164223E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999953095943787	WITHOUT_CLASSIFICATION	4.690405621398204E-6	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999090178610389	WITHOUT_CLASSIFICATION	9.098213896106782E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999990463987748	WITHOUT_CLASSIFICATION	9.536012252137292E-7	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999990463987748	WITHOUT_CLASSIFICATION	9.536012252137292E-7	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999965585794106	WITHOUT_CLASSIFICATION	3.441420589477704E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.999999897535277	WITHOUT_CLASSIFICATION	1.0246472308023219E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.999999897535277	WITHOUT_CLASSIFICATION	1.0246472308023219E-7	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999985240724614	WITHOUT_CLASSIFICATION	1.4759275385962232E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999987298085791	WITHOUT_CLASSIFICATION	1.2701914208195494E-6	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999998868513397	WITHOUT_CLASSIFICATION	1.1314866023267314E-7	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999966947298614	WITHOUT_CLASSIFICATION	3.3052701385963233E-6	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999999072666916	WITHOUT_CLASSIFICATION	9.27333084591319E-8	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999996423712838	WITHOUT_CLASSIFICATION	3.5762871616427914E-7	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999979103411478	WITHOUT_CLASSIFICATION	2.0896588521603682E-6	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999999358707015	WITHOUT_CLASSIFICATION	6.412929854866872E-8	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999998982775544	WITHOUT_CLASSIFICATION	1.0172244564169619E-7	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999934803132011	WITHOUT_CLASSIFICATION	6.519686798875625E-6	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999991397293533	WITHOUT_CLASSIFICATION	8.602706467590474E-7	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999917884979502	WITHOUT_CLASSIFICATION	8.211502049763455E-6	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999995679220045	WITHOUT_CLASSIFICATION	4.32077995572303E-7	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999999404392791	WITHOUT_CLASSIFICATION	5.9560720877605294E-8	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999998452512806	WITHOUT_CLASSIFICATION	1.5474871946314315E-7	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.999985407486323	WITHOUT_CLASSIFICATION	1.4592513677003794E-5	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999999156015146	WITHOUT_CLASSIFICATION	8.439848541422109E-8	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.999985146451418	WITHOUT_CLASSIFICATION	1.4853548581899824E-5	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9999768169042992	WITHOUT_CLASSIFICATION	2.3183095700822218E-5	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9998021264041093	WITHOUT_CLASSIFICATION	1.9787359589068835E-4	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999984388701992	WITHOUT_CLASSIFICATION	1.5611298006638617E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999995598654047	WITHOUT_CLASSIFICATION	4.401345952810477E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999980850077645	WITHOUT_CLASSIFICATION	1.9149922354672333E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999955551151682	WITHOUT_CLASSIFICATION	4.444884831814199E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999999157060984	WITHOUT_CLASSIFICATION	8.429390162613812E-8	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999923977046864	WITHOUT_CLASSIFICATION	7.602295313554969E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999980898746922	WITHOUT_CLASSIFICATION	1.9101253077510304E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999995647283086	WITHOUT_CLASSIFICATION	4.35271691393058E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994336653718	WITHOUT_CLASSIFICATION	5.66334628179676E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.999995196247817	WITHOUT_CLASSIFICATION	4.803752182941661E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975224663376	WITHOUT_CLASSIFICATION	2.4775336623518278E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.999998247028414	WITHOUT_CLASSIFICATION	1.7529715859621756E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999782010413203	WITHOUT_CLASSIFICATION	2.1798958679697737E-5	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999705898697501	WITHOUT_CLASSIFICATION	2.9410130249929753E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999102434300414	WITHOUT_CLASSIFICATION	8.975656995865772E-5	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999960146226307	WITHOUT_CLASSIFICATION	3.985377369309871E-6	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999673807525483	WITHOUT_CLASSIFICATION	3.26192474516106E-5	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9998732289050823	WITHOUT_CLASSIFICATION	1.267710949175784E-4	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.992562426194286	WITHOUT_CLASSIFICATION	0.00743757380571388	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999997910339838	WITHOUT_CLASSIFICATION	2.089660161215537E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999917526364	WITHOUT_CLASSIFICATION	8.247363609327857E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999917526364	WITHOUT_CLASSIFICATION	8.247363609327857E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999917526364	WITHOUT_CLASSIFICATION	8.247363609327857E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999917526364	WITHOUT_CLASSIFICATION	8.247363609327857E-8	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.999999248205217	WITHOUT_CLASSIFICATION	7.517947829140061E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999996920831806	WITHOUT_CLASSIFICATION	3.079168193634825E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999999842580068	WITHOUT_CLASSIFICATION	1.574199318838003E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999999842580068	WITHOUT_CLASSIFICATION	1.574199318838003E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999999842580068	WITHOUT_CLASSIFICATION	1.574199318838003E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999999842580068	WITHOUT_CLASSIFICATION	1.574199318838003E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999999842580068	WITHOUT_CLASSIFICATION	1.574199318838003E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999999842580068	WITHOUT_CLASSIFICATION	1.574199318838003E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999996920831806	WITHOUT_CLASSIFICATION	3.079168193634825E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999996920831806	WITHOUT_CLASSIFICATION	3.079168193634825E-7	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999998591022601	WITHOUT_CLASSIFICATION	1.4089773991239353E-7	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999997961438102	WITHOUT_CLASSIFICATION	2.038561897764767E-7	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.9999999340116243	WITHOUT_CLASSIFICATION	6.598837571867803E-8	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.9999998177354604	WITHOUT_CLASSIFICATION	1.8226453963472612E-7	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999997662679564	WITHOUT_CLASSIFICATION	2.3373204349789893E-7	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999950172580516	WITHOUT_CLASSIFICATION	4.982741948379818E-6	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999950172580516	WITHOUT_CLASSIFICATION	4.982741948379818E-6	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999987584119294	WITHOUT_CLASSIFICATION	1.2415880706612469E-6	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999998707471562	WITHOUT_CLASSIFICATION	1.2925284367955948E-7	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999994735096348	WITHOUT_CLASSIFICATION	5.264903652238242E-7	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999995341031095	WITHOUT_CLASSIFICATION	4.658968905397944E-7	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999992730877368	WITHOUT_CLASSIFICATION	7.269122630859787E-7	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999994716535009	WITHOUT_CLASSIFICATION	5.283464991095808E-7	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999922221827406	WITHOUT_CLASSIFICATION	7.77781725945653E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999048357356	WITHOUT_CLASSIFICATION	9.51642643528921E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999995152297017	WITHOUT_CLASSIFICATION	4.847702983451878E-7	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999989277130413	WITHOUT_CLASSIFICATION	1.0722869586997835E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999890955776929	WITHOUT_CLASSIFICATION	1.0904422307208727E-5	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999994850011876	WITHOUT_CLASSIFICATION	5.149988123790687E-7	DEFECT
// view	WITHOUT_CLASSIFICATION	0.999991101222151	WITHOUT_CLASSIFICATION	8.89877784906703E-6	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999929975565368	WITHOUT_CLASSIFICATION	7.002443463242337E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994336653718	WITHOUT_CLASSIFICATION	5.66334628179676E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.999995196247817	WITHOUT_CLASSIFICATION	4.803752182941661E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975224663376	WITHOUT_CLASSIFICATION	2.4775336623518278E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999782010413203	WITHOUT_CLASSIFICATION	2.1798958679697737E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999993236993707	WITHOUT_CLASSIFICATION	6.763006293239973E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999993018325481	WITHOUT_CLASSIFICATION	6.981674517887124E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999996799212465	WITHOUT_CLASSIFICATION	3.200787534536252E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999673807525483	WITHOUT_CLASSIFICATION	3.26192474516106E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999997910339838	WITHOUT_CLASSIFICATION	2.089660161215537E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999917526364	WITHOUT_CLASSIFICATION	8.247363609327857E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.999999917526364	WITHOUT_CLASSIFICATION	8.247363609327857E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999999842580068	WITHOUT_CLASSIFICATION	1.574199318838003E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999999842580068	WITHOUT_CLASSIFICATION	1.574199318838003E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999999842580068	WITHOUT_CLASSIFICATION	1.574199318838003E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999996920831806	WITHOUT_CLASSIFICATION	3.079168193634825E-7	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999987584119294	WITHOUT_CLASSIFICATION	1.2415880706612469E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999048357356	WITHOUT_CLASSIFICATION	9.51642643528921E-8	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999048357356	WITHOUT_CLASSIFICATION	9.51642643528921E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999995152297017	WITHOUT_CLASSIFICATION	4.847702983451878E-7	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999962956232554	WITHOUT_CLASSIFICATION	3.704376744485075E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999985839099647	WITHOUT_CLASSIFICATION	1.4160900353190951E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999994917501441	WITHOUT_CLASSIFICATION	5.082498558797994E-7	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999813489499472	WITHOUT_CLASSIFICATION	1.865105005279749E-5	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999990324430111	WITHOUT_CLASSIFICATION	9.675569888368322E-7	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.999999796021156	WITHOUT_CLASSIFICATION	2.0397884405796188E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999996846333999	WITHOUT_CLASSIFICATION	3.153666000299054E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999998349846607	WITHOUT_CLASSIFICATION	1.650153392995638E-7	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999956128662587	WITHOUT_CLASSIFICATION	4.387133741267084E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999999067499467	WITHOUT_CLASSIFICATION	9.325005331575353E-8	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999998806127688	WITHOUT_CLASSIFICATION	1.1938723126370338E-7	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999996954213902	WITHOUT_CLASSIFICATION	3.0457860985837813E-7	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.9999998960019135	WITHOUT_CLASSIFICATION	1.0399808658880187E-7	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.99999978812945	WITHOUT_CLASSIFICATION	2.1187055004417575E-7	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999999375478119	WITHOUT_CLASSIFICATION	6.245218799420699E-8	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999985336640477	WITHOUT_CLASSIFICATION	1.466335952308024E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999992385510831	WITHOUT_CLASSIFICATION	7.61448916893165E-7	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.9999995739675442	WITHOUT_CLASSIFICATION	4.260324557301142E-7	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999999385997101	WITHOUT_CLASSIFICATION	6.140028979690191E-8	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.999999941247712	WITHOUT_CLASSIFICATION	5.875228805939947E-8	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999997441592067	WITHOUT_CLASSIFICATION	2.558407933216417E-7	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999744983835	WITHOUT_CLASSIFICATION	2.5501616499551993E-8	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.9999861269596291	WITHOUT_CLASSIFICATION	1.3873040370978683E-5	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999847586410764	WITHOUT_CLASSIFICATION	1.5241358923649718E-5	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999989211421201	WITHOUT_CLASSIFICATION	1.078857879924386E-6	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.99999966691929	WITHOUT_CLASSIFICATION	3.330807099187062E-7	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999999292590104	WITHOUT_CLASSIFICATION	7.074098958952777E-8	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999990802006501	WITHOUT_CLASSIFICATION	9.197993498684298E-7	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999998692532579	WITHOUT_CLASSIFICATION	1.3074674218632606E-7	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999995416701438	WITHOUT_CLASSIFICATION	4.583298562093554E-7	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999999649202211	WITHOUT_CLASSIFICATION	3.5079778807484876E-8	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999997898761542	WITHOUT_CLASSIFICATION	2.1012384581406587E-7	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.999999830906792	WITHOUT_CLASSIFICATION	1.6909320804421287E-7	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999703578617	WITHOUT_CLASSIFICATION	2.964213840694725E-8	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999995571612504	WITHOUT_CLASSIFICATION	4.428387494602653E-7	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999998176986941	WITHOUT_CLASSIFICATION	1.823013060763996E-7	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999997784629407	WITHOUT_CLASSIFICATION	2.215370593329553E-7	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999994091586928	WITHOUT_CLASSIFICATION	5.908413071557995E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999888861696522	WITHOUT_CLASSIFICATION	1.11138303478059E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999744983835	WITHOUT_CLASSIFICATION	2.5501616499551993E-8	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999999138375674	WITHOUT_CLASSIFICATION	8.616243269505477E-8	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999999471855232	WITHOUT_CLASSIFICATION	5.281447689845597E-8	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999998842391519	WITHOUT_CLASSIFICATION	1.1576084820074362E-7	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999959675838446	WITHOUT_CLASSIFICATION	4.032416155422932E-6	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.999999799206196	WITHOUT_CLASSIFICATION	2.007938039959649E-7	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999888277660424	WITHOUT_CLASSIFICATION	1.1172233957683719E-5	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999993140794284	WITHOUT_CLASSIFICATION	6.859205715321824E-7	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999990713660114	WITHOUT_CLASSIFICATION	9.286339885775282E-7	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999928221887671	WITHOUT_CLASSIFICATION	7.1778112329022224E-6	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.999997390508044	WITHOUT_CLASSIFICATION	2.609491955867752E-6	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9999897600026889	WITHOUT_CLASSIFICATION	1.0239997311083165E-5	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9999966069929743	WITHOUT_CLASSIFICATION	3.393007025740445E-6	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9999973006664686	WITHOUT_CLASSIFICATION	2.6993335314021407E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999974059931	WITHOUT_CLASSIFICATION	2.5940068836800128E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999974059931	WITHOUT_CLASSIFICATION	2.5940068836800128E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999974059931	WITHOUT_CLASSIFICATION	2.5940068836800128E-9	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999731574435913	WITHOUT_CLASSIFICATION	2.684255640877815E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999731574435913	WITHOUT_CLASSIFICATION	2.684255640877815E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999731574435913	WITHOUT_CLASSIFICATION	2.684255640877815E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999998785971581	WITHOUT_CLASSIFICATION	1.2140284195785516E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999998785971581	WITHOUT_CLASSIFICATION	1.2140284195785516E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999541833106	WITHOUT_CLASSIFICATION	4.581668940412438E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999541833106	WITHOUT_CLASSIFICATION	4.581668940412438E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999541833106	WITHOUT_CLASSIFICATION	4.581668940412438E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999541833106	WITHOUT_CLASSIFICATION	4.581668940412438E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999989724530721	WITHOUT_CLASSIFICATION	1.0275469278511332E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999989724530721	WITHOUT_CLASSIFICATION	1.0275469278511332E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999989724530721	WITHOUT_CLASSIFICATION	1.0275469278511332E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999989724530721	WITHOUT_CLASSIFICATION	1.0275469278511332E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999985120904188	WITHOUT_CLASSIFICATION	1.4879095812573035E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999985120904188	WITHOUT_CLASSIFICATION	1.4879095812573035E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999985120904188	WITHOUT_CLASSIFICATION	1.4879095812573035E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999985120904188	WITHOUT_CLASSIFICATION	1.4879095812573035E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999985120904188	WITHOUT_CLASSIFICATION	1.4879095812573035E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999121246105	WITHOUT_CLASSIFICATION	8.787538955571386E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999121246105	WITHOUT_CLASSIFICATION	8.787538955571386E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999121246105	WITHOUT_CLASSIFICATION	8.787538955571386E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999121246105	WITHOUT_CLASSIFICATION	8.787538955571386E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999992096928026	WITHOUT_CLASSIFICATION	7.90307197310833E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999992096928026	WITHOUT_CLASSIFICATION	7.90307197310833E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999998785971581	WITHOUT_CLASSIFICATION	1.2140284195785516E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999541833106	WITHOUT_CLASSIFICATION	4.581668940412438E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999989724530721	WITHOUT_CLASSIFICATION	1.0275469278511332E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999985120904188	WITHOUT_CLASSIFICATION	1.4879095812573035E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999121246105	WITHOUT_CLASSIFICATION	8.787538955571386E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999992096928026	WITHOUT_CLASSIFICATION	7.90307197310833E-7	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999992626859509	WITHOUT_CLASSIFICATION	7.373140490737765E-7	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999978879333424	WITHOUT_CLASSIFICATION	2.112066657607714E-6	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.9999993759059027	WITHOUT_CLASSIFICATION	6.240940973759708E-7	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999833758850202	WITHOUT_CLASSIFICATION	1.6624114979810854E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999833758850202	WITHOUT_CLASSIFICATION	1.6624114979810854E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9998691646015309	WITHOUT_CLASSIFICATION	1.3083539846906088E-4	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9998691646015309	WITHOUT_CLASSIFICATION	1.3083539846906088E-4	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9998691646015309	WITHOUT_CLASSIFICATION	1.3083539846906088E-4	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9999788521287238	WITHOUT_CLASSIFICATION	2.114787127605835E-5	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999999402496408	WITHOUT_CLASSIFICATION	5.975035925463623E-8	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999989262915613	WITHOUT_CLASSIFICATION	1.0737084386853967E-6	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999997018658433	WITHOUT_CLASSIFICATION	2.981341566430912E-7	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999975173036793	WITHOUT_CLASSIFICATION	2.4826963207170047E-6	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999994473408914	WITHOUT_CLASSIFICATION	5.526591086265438E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999995745277063	WITHOUT_CLASSIFICATION	4.254722936877165E-7	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999998275161995	WITHOUT_CLASSIFICATION	1.7248380057492656E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999452332294	WITHOUT_CLASSIFICATION	5.476677042438095E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999615413564	WITHOUT_CLASSIFICATION	3.8458643499112314E-8	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999833758850202	WITHOUT_CLASSIFICATION	1.6624114979810854E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9998691646015309	WITHOUT_CLASSIFICATION	1.3083539846906088E-4	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999995831041547	WITHOUT_CLASSIFICATION	4.1689584535153E-7	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999912356727049	WITHOUT_CLASSIFICATION	8.7643272951831E-6	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999999634769936	WITHOUT_CLASSIFICATION	3.652300636223702E-8	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999966166909	WITHOUT_CLASSIFICATION	3.3833090499739704E-9	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999047514425	WITHOUT_CLASSIFICATION	9.524855748672753E-8	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999999672830626	WITHOUT_CLASSIFICATION	3.2716937470476395E-8	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999927098417	WITHOUT_CLASSIFICATION	7.290158305834858E-9	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999999863318569	WITHOUT_CLASSIFICATION	1.3668143073531295E-8	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999999833558993	WITHOUT_CLASSIFICATION	1.6644100578361884E-8	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.99999971057581	WITHOUT_CLASSIFICATION	2.8942418997004543E-7	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999998766782731	WITHOUT_CLASSIFICATION	1.233217269363826E-7	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999992998176066	WITHOUT_CLASSIFICATION	7.001823932889351E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999983770118988	WITHOUT_CLASSIFICATION	1.6229881012588176E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999983770118988	WITHOUT_CLASSIFICATION	1.6229881012588176E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999983770118988	WITHOUT_CLASSIFICATION	1.6229881012588176E-6	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999999106360515	WITHOUT_CLASSIFICATION	8.936394843097295E-8	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999993552178987	WITHOUT_CLASSIFICATION	6.447821013318105E-7	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999996402800655	WITHOUT_CLASSIFICATION	3.5971993447276797E-7	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999989787009417	WITHOUT_CLASSIFICATION	1.0212990583381866E-6	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999993492908712	WITHOUT_CLASSIFICATION	6.507091287887045E-7	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999826279734	WITHOUT_CLASSIFICATION	1.7372026553429543E-8	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999925784500988	WITHOUT_CLASSIFICATION	7.42154990117651E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999955230936648	WITHOUT_CLASSIFICATION	4.476906335170068E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999997963122446	WITHOUT_CLASSIFICATION	2.0368775536715554E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999998463910855	WITHOUT_CLASSIFICATION	1.5360891434711864E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999995745277063	WITHOUT_CLASSIFICATION	4.254722936877165E-7	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999998275161995	WITHOUT_CLASSIFICATION	1.7248380057492656E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999995831041547	WITHOUT_CLASSIFICATION	4.1689584535153E-7	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999997963122446	WITHOUT_CLASSIFICATION	2.0368775536715554E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999998463910855	WITHOUT_CLASSIFICATION	1.5360891434711864E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996223233699	WITHOUT_CLASSIFICATION	3.7767663001468356E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999996346122145	WITHOUT_CLASSIFICATION	3.6538778548515467E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999996346122145	WITHOUT_CLASSIFICATION	3.6538778548515467E-7	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9997353724806726	WITHOUT_CLASSIFICATION	2.6462751932740093E-4	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999999748857816	WITHOUT_CLASSIFICATION	2.511421837921961E-8	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999992325594919	WITHOUT_CLASSIFICATION	7.674405081464002E-7	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999999204875503	WITHOUT_CLASSIFICATION	7.951244975668156E-8	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999999513711294	WITHOUT_CLASSIFICATION	4.86288706582707E-8	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999998453922782	WITHOUT_CLASSIFICATION	1.5460772175644926E-7	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999998064491747	WITHOUT_CLASSIFICATION	1.9355082516655795E-7	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999948670712278	WITHOUT_CLASSIFICATION	5.132928772222639E-6	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999936679208191	WITHOUT_CLASSIFICATION	6.332079180914678E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999961802974414	WITHOUT_CLASSIFICATION	3.819702558525081E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999999952991954	WITHOUT_CLASSIFICATION	4.700804640980118E-9	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.999996354049414	WITHOUT_CLASSIFICATION	3.6459505860682755E-6	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999990149234538	WITHOUT_CLASSIFICATION	9.850765462128038E-7	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999991757526764	WITHOUT_CLASSIFICATION	8.242473236021128E-7	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999997768197709	WITHOUT_CLASSIFICATION	2.231802291321186E-7	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.999996870849522	WITHOUT_CLASSIFICATION	3.1291504780484776E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999999557561082	WITHOUT_CLASSIFICATION	4.4243891695765433E-8	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999998795651526	WITHOUT_CLASSIFICATION	1.204348475075564E-7	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999999823052395	WITHOUT_CLASSIFICATION	1.769476051514285E-8	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999996744337235	WITHOUT_CLASSIFICATION	3.2556627649952483E-7	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999999762577956	WITHOUT_CLASSIFICATION	2.374220445773459E-8	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999942387406775	WITHOUT_CLASSIFICATION	5.761259322486965E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.999999032989288	WITHOUT_CLASSIFICATION	9.670107119304064E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.999998270664084	WITHOUT_CLASSIFICATION	1.72933591606637E-6	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999927494516474	WITHOUT_CLASSIFICATION	7.250548352588196E-6	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999970527895136	WITHOUT_CLASSIFICATION	2.9472104863440077E-6	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999958055207713	WITHOUT_CLASSIFICATION	4.194479228787284E-6	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999985307888113	WITHOUT_CLASSIFICATION	1.4692111887023576E-6	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9998545093881056	WITHOUT_CLASSIFICATION	1.4549061189435503E-4	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999999825956812	WITHOUT_CLASSIFICATION	1.7404318715322782E-8	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999992616567659	WITHOUT_CLASSIFICATION	7.383432340457177E-7	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999976625299266	WITHOUT_CLASSIFICATION	2.3374700734103098E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999998929843044	WITHOUT_CLASSIFICATION	1.0701569561435849E-7	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.9999996772189066	WITHOUT_CLASSIFICATION	3.227810934385417E-7	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9999989521740242	WITHOUT_CLASSIFICATION	1.0478259757952066E-6	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999985566932903	WITHOUT_CLASSIFICATION	1.4433067097898372E-6	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999998206828831	WITHOUT_CLASSIFICATION	1.7931711685678647E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999995647283086	WITHOUT_CLASSIFICATION	4.35271691393058E-7	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999833391638561	WITHOUT_CLASSIFICATION	1.6660836143995926E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999730253069	WITHOUT_CLASSIFICATION	2.6974693167410093E-8	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999992966537957	WITHOUT_CLASSIFICATION	7.033462043297309E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994336653718	WITHOUT_CLASSIFICATION	5.66334628179676E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999984277432205	WITHOUT_CLASSIFICATION	1.5722567795575912E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999975224663376	WITHOUT_CLASSIFICATION	2.4775336623518278E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999347042348982	WITHOUT_CLASSIFICATION	6.529576510186164E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999993236993707	WITHOUT_CLASSIFICATION	6.763006293239973E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999673807525483	WITHOUT_CLASSIFICATION	3.26192474516106E-5	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999997239160348	WITHOUT_CLASSIFICATION	2.7608396528089413E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999995411924366	WITHOUT_CLASSIFICATION	4.5880756330907953E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999983770118988	WITHOUT_CLASSIFICATION	1.6229881012588176E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999983770118988	WITHOUT_CLASSIFICATION	1.6229881012588176E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999983770118988	WITHOUT_CLASSIFICATION	1.6229881012588176E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999996346122145	WITHOUT_CLASSIFICATION	3.6538778548515467E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999996346122145	WITHOUT_CLASSIFICATION	3.6538778548515467E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999996346122145	WITHOUT_CLASSIFICATION	3.6538778548515467E-7	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.999999032989288	WITHOUT_CLASSIFICATION	9.670107119304064E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.999998270664084	WITHOUT_CLASSIFICATION	1.72933591606637E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9997689414445798	WITHOUT_CLASSIFICATION	2.3105855542018843E-4	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999997346500917	WITHOUT_CLASSIFICATION	2.65349908285327E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999998640847746	WITHOUT_CLASSIFICATION	1.359152254753609E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999998640847746	WITHOUT_CLASSIFICATION	1.359152254753609E-7	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999999804532355	WITHOUT_CLASSIFICATION	1.954676457350973E-8	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999992359213944	WITHOUT_CLASSIFICATION	7.640786054810497E-7	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999992053856894	WITHOUT_CLASSIFICATION	7.946143105739168E-7	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999994025869736	WITHOUT_CLASSIFICATION	5.97413026420489E-7	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999997716414181	WITHOUT_CLASSIFICATION	2.283585818580681E-7	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999997716414181	WITHOUT_CLASSIFICATION	2.283585818580681E-7	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999998289835413	WITHOUT_CLASSIFICATION	1.7101645872278703E-7	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.999998270732991	WITHOUT_CLASSIFICATION	1.7292670090853972E-6	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999997961090392	WITHOUT_CLASSIFICATION	2.038909607059365E-7	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999998615579963	WITHOUT_CLASSIFICATION	1.384420037519915E-7	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999999341352458	WITHOUT_CLASSIFICATION	6.586475415575032E-8	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999851568586	WITHOUT_CLASSIFICATION	1.484314147281156E-8	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999964692215493	WITHOUT_CLASSIFICATION	3.530778450643244E-6	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999998364179228	WITHOUT_CLASSIFICATION	1.6358207725712294E-7	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999999206476303	WITHOUT_CLASSIFICATION	7.935236972993976E-8	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999998185983331	WITHOUT_CLASSIFICATION	1.8140166684332112E-7	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999998780355536	WITHOUT_CLASSIFICATION	1.2196444653604903E-7	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999997975096238	WITHOUT_CLASSIFICATION	2.0249037628657994E-7	DEFECT
// line	WITHOUT_CLASSIFICATION	0.999992074417334	WITHOUT_CLASSIFICATION	7.9255826659977E-6	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9998996825841271	WITHOUT_CLASSIFICATION	1.003174158729168E-4	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.999999872949591	WITHOUT_CLASSIFICATION	1.2705040894993576E-7	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999983692278535	WITHOUT_CLASSIFICATION	1.6307721465792038E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999973476453656	WITHOUT_CLASSIFICATION	2.6523546342467943E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999989205599545	WITHOUT_CLASSIFICATION	1.0794400454495933E-6	DEFECT
// border	WITHOUT_CLASSIFICATION	0.999999418743301	WITHOUT_CLASSIFICATION	5.812566990312948E-7	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999974378477152	WITHOUT_CLASSIFICATION	2.5621522848024887E-6	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999951507228634	WITHOUT_CLASSIFICATION	4.849277136696612E-6	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999999332768311	WITHOUT_CLASSIFICATION	6.67231688935436E-8	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999961160641024	WITHOUT_CLASSIFICATION	3.883935897547529E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996223233699	WITHOUT_CLASSIFICATION	3.7767663001468356E-7	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9986473693392103	WITHOUT_CLASSIFICATION	0.0013526306607897754	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999951507228634	WITHOUT_CLASSIFICATION	4.849277136696612E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999999195498466	WITHOUT_CLASSIFICATION	8.045015347405487E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.999999434773691	WITHOUT_CLASSIFICATION	5.652263088667624E-7	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.999999434773691	WITHOUT_CLASSIFICATION	5.652263088667624E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.99999923662773	WITHOUT_CLASSIFICATION	7.633722699369078E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.99999923662773	WITHOUT_CLASSIFICATION	7.633722699369078E-7	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999999310397445	WITHOUT_CLASSIFICATION	6.8960255491549E-8	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999992992424	WITHOUT_CLASSIFICATION	7.007576328397755E-10	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999999651568858	WITHOUT_CLASSIFICATION	3.4843114096916676E-8	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.999999605058198	WITHOUT_CLASSIFICATION	3.949418020270417E-7	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999882592145464	WITHOUT_CLASSIFICATION	1.1740785453554724E-5	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999882592145464	WITHOUT_CLASSIFICATION	1.1740785453554724E-5	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9999220908091337	WITHOUT_CLASSIFICATION	7.7909190866269E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999944699783	WITHOUT_CLASSIFICATION	5.530021622339044E-9	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999999755440087	WITHOUT_CLASSIFICATION	2.445599142827517E-8	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999988006721804	WITHOUT_CLASSIFICATION	1.1993278196242475E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995754196602	WITHOUT_CLASSIFICATION	4.245803397349034E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974732848097	WITHOUT_CLASSIFICATION	2.526715190180563E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999993805962921	WITHOUT_CLASSIFICATION	6.194037080013737E-7	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999935180518302	WITHOUT_CLASSIFICATION	6.4819481696742995E-6	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999935180518302	WITHOUT_CLASSIFICATION	6.4819481696742995E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999988870778821	WITHOUT_CLASSIFICATION	1.1129221178162408E-6	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999999692056927	WITHOUT_CLASSIFICATION	3.079430724648977E-8	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.999999300031449	WITHOUT_CLASSIFICATION	6.999685510122643E-7	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.999571463099159	WITHOUT_CLASSIFICATION	4.2853690084095574E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999832078096872	WITHOUT_CLASSIFICATION	1.6792190312762143E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9997453722035636	WITHOUT_CLASSIFICATION	2.5462779643634325E-4	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999915332327246	WITHOUT_CLASSIFICATION	8.466767275311571E-6	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999599333259693	WITHOUT_CLASSIFICATION	4.006667403056184E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.999993583308075	WITHOUT_CLASSIFICATION	6.416691924999584E-6	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999992949485313	WITHOUT_CLASSIFICATION	7.050514686988573E-7	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999998385479819	WITHOUT_CLASSIFICATION	1.6145201803874434E-7	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999994897701812	WITHOUT_CLASSIFICATION	5.102298188411498E-7	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999948427371611	WITHOUT_CLASSIFICATION	5.157262838885789E-6	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999807408867839	WITHOUT_CLASSIFICATION	1.9259113216081377E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.999999627792652	WITHOUT_CLASSIFICATION	3.722073480212036E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.999998345022146	WITHOUT_CLASSIFICATION	1.6549778540363968E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996978029034	WITHOUT_CLASSIFICATION	3.021970965762262E-7	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999942130152966	WITHOUT_CLASSIFICATION	5.786984703357817E-6	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999973985732827	WITHOUT_CLASSIFICATION	2.60142671733799E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999865032536671	WITHOUT_CLASSIFICATION	1.3496746332790044E-5	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999994672217541	WITHOUT_CLASSIFICATION	5.327782457686301E-7	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999815221957	WITHOUT_CLASSIFICATION	1.8477804221646995E-8	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999995765370089	WITHOUT_CLASSIFICATION	4.234629911933387E-7	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999999011149749	WITHOUT_CLASSIFICATION	9.888502507488003E-8	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999944699783	WITHOUT_CLASSIFICATION	5.530021622339044E-9	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995754196602	WITHOUT_CLASSIFICATION	4.245803397349034E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995754196602	WITHOUT_CLASSIFICATION	4.245803397349034E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999998615153584	WITHOUT_CLASSIFICATION	1.3848464162216646E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999998615153584	WITHOUT_CLASSIFICATION	1.3848464162216646E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999998615153584	WITHOUT_CLASSIFICATION	1.3848464162216646E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999998615153584	WITHOUT_CLASSIFICATION	1.3848464162216646E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974732848097	WITHOUT_CLASSIFICATION	2.526715190180563E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974732848097	WITHOUT_CLASSIFICATION	2.526715190180563E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974732848097	WITHOUT_CLASSIFICATION	2.526715190180563E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999974732848097	WITHOUT_CLASSIFICATION	2.526715190180563E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999995765370089	WITHOUT_CLASSIFICATION	4.234629911933387E-7	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.9996425094608148	WITHOUT_CLASSIFICATION	3.574905391851879E-4	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9998285205141832	WITHOUT_CLASSIFICATION	1.71479485816732E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999650850106176	WITHOUT_CLASSIFICATION	3.491498938236647E-5	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999998721224241	WITHOUT_CLASSIFICATION	1.2787757589330866E-7	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999986770378185	WITHOUT_CLASSIFICATION	1.322962181383509E-6	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999928029123168	WITHOUT_CLASSIFICATION	7.1970876830350235E-6	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999977905664942	WITHOUT_CLASSIFICATION	2.209433505746101E-6	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9999996776612335	WITHOUT_CLASSIFICATION	3.2233876649874786E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999997958711418	WITHOUT_CLASSIFICATION	2.0412885813223447E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999997958711418	WITHOUT_CLASSIFICATION	2.0412885813223447E-7	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.9999984917509552	WITHOUT_CLASSIFICATION	1.5082490448030142E-6	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.999992963540306	WITHOUT_CLASSIFICATION	7.0364596940008055E-6	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9998161397083584	WITHOUT_CLASSIFICATION	1.8386029164158248E-4	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9999194437515161	WITHOUT_CLASSIFICATION	8.055624848391325E-5	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.999948802853278	WITHOUT_CLASSIFICATION	5.119714672191095E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999751159829066	WITHOUT_CLASSIFICATION	2.488401709343371E-5	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999654386776109	WITHOUT_CLASSIFICATION	3.456132238908037E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999870163308731	WITHOUT_CLASSIFICATION	1.2983669127046842E-5	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999912726547479	WITHOUT_CLASSIFICATION	8.727345252129994E-6	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999815730130083	WITHOUT_CLASSIFICATION	1.842698699172413E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999993929468899	WITHOUT_CLASSIFICATION	6.070531101481135E-7	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999993929468899	WITHOUT_CLASSIFICATION	6.070531101481135E-7	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.999980592525307	WITHOUT_CLASSIFICATION	1.940747469296115E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999999237600088	WITHOUT_CLASSIFICATION	7.623999123782515E-8	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.999998560138896	WITHOUT_CLASSIFICATION	1.4398611039977356E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999677108402	WITHOUT_CLASSIFICATION	3.228915982209926E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999677108402	WITHOUT_CLASSIFICATION	3.228915982209926E-8	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999997962868219	WITHOUT_CLASSIFICATION	2.037131780112455E-7	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999872645136233	WITHOUT_CLASSIFICATION	1.2735486376616492E-5	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999872645136233	WITHOUT_CLASSIFICATION	1.2735486376616492E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999709571336358	WITHOUT_CLASSIFICATION	2.9042866364206196E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999709571336358	WITHOUT_CLASSIFICATION	2.9042866364206196E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999709571336358	WITHOUT_CLASSIFICATION	2.9042866364206196E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999976124328128	WITHOUT_CLASSIFICATION	2.387567187185255E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999999345440378	WITHOUT_CLASSIFICATION	6.545596214019177E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999859389375	WITHOUT_CLASSIFICATION	1.4061062511640007E-7	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999977965820104	WITHOUT_CLASSIFICATION	2.203417989523766E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999977965820104	WITHOUT_CLASSIFICATION	2.203417989523766E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.999980592525307	WITHOUT_CLASSIFICATION	1.940747469296115E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999677108402	WITHOUT_CLASSIFICATION	3.228915982209926E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999677108402	WITHOUT_CLASSIFICATION	3.228915982209926E-8	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999709571336358	WITHOUT_CLASSIFICATION	2.9042866364206196E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999709571336358	WITHOUT_CLASSIFICATION	2.9042866364206196E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999709571336358	WITHOUT_CLASSIFICATION	2.9042866364206196E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999976124328128	WITHOUT_CLASSIFICATION	2.387567187185255E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999999345440378	WITHOUT_CLASSIFICATION	6.545596214019177E-8	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999999567624253	WITHOUT_CLASSIFICATION	4.323757485511814E-8	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999926757400814	WITHOUT_CLASSIFICATION	7.324259918562362E-6	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999915158921733	WITHOUT_CLASSIFICATION	8.484107826707177E-6	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9999700667156287	WITHOUT_CLASSIFICATION	2.993328437131018E-5	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999869569685402	WITHOUT_CLASSIFICATION	1.3043031459744232E-5	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.999809164170038	WITHOUT_CLASSIFICATION	1.9083582996213982E-4	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9997882447022857	WITHOUT_CLASSIFICATION	2.1175529771442906E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999188441721275	WITHOUT_CLASSIFICATION	8.115582787247476E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999999279205819	WITHOUT_CLASSIFICATION	7.207941810050166E-7	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999999279205819	WITHOUT_CLASSIFICATION	7.207941810050166E-7	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999999733703102	WITHOUT_CLASSIFICATION	2.6629689822157245E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999998936881519	WITHOUT_CLASSIFICATION	1.0631184817873912E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999998936881519	WITHOUT_CLASSIFICATION	1.0631184817873912E-7	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999995150635786	WITHOUT_CLASSIFICATION	4.849364212664805E-7	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999995505779659	WITHOUT_CLASSIFICATION	4.49422034167051E-7	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999999527736694	WITHOUT_CLASSIFICATION	4.7226330512841407E-8	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999999313548261	WITHOUT_CLASSIFICATION	6.864517395998244E-8	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999429724341	WITHOUT_CLASSIFICATION	5.7027566048879783E-8	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999429724341	WITHOUT_CLASSIFICATION	5.7027566048879783E-8	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999429724341	WITHOUT_CLASSIFICATION	5.7027566048879783E-8	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999902375756272	WITHOUT_CLASSIFICATION	9.7624243728826E-6	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999980376342966	WITHOUT_CLASSIFICATION	1.9623657034037614E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999998985886751	WITHOUT_CLASSIFICATION	1.0141132493188131E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999998487150555	WITHOUT_CLASSIFICATION	1.5128494441861573E-7	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999956210138786	WITHOUT_CLASSIFICATION	4.378986121473071E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999995447201496	WITHOUT_CLASSIFICATION	4.5527985039545E-7	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.999999963509497	WITHOUT_CLASSIFICATION	3.649050294890198E-8	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999998957617551	WITHOUT_CLASSIFICATION	1.0423824494104508E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999998957617551	WITHOUT_CLASSIFICATION	1.0423824494104508E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999999039633043	WITHOUT_CLASSIFICATION	9.603669562995855E-8	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999999822701179	WITHOUT_CLASSIFICATION	1.7729882185820377E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996223233699	WITHOUT_CLASSIFICATION	3.7767663001468356E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996223233699	WITHOUT_CLASSIFICATION	3.7767663001468356E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999992992424	WITHOUT_CLASSIFICATION	7.007576328397755E-10	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999926757400814	WITHOUT_CLASSIFICATION	7.324259918562362E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999188441721275	WITHOUT_CLASSIFICATION	8.115582787247476E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999999279205819	WITHOUT_CLASSIFICATION	7.207941810050166E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999998487150555	WITHOUT_CLASSIFICATION	1.5128494441861573E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999998487150555	WITHOUT_CLASSIFICATION	1.5128494441861573E-7	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999998985886751	WITHOUT_CLASSIFICATION	1.0141132493188131E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999999567624253	WITHOUT_CLASSIFICATION	4.323757485511814E-8	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.999999963509497	WITHOUT_CLASSIFICATION	3.649050294890198E-8	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999995447201496	WITHOUT_CLASSIFICATION	4.5527985039545E-7	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999987927520451	WITHOUT_CLASSIFICATION	1.2072479550027328E-6	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9998003875437276	WITHOUT_CLASSIFICATION	1.9961245627232057E-4	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999999909298698	WITHOUT_CLASSIFICATION	9.070130084169242E-9	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.999977285080649	WITHOUT_CLASSIFICATION	2.2714919350958927E-5	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999991401367876	WITHOUT_CLASSIFICATION	8.59863212358156E-7	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999991401367876	WITHOUT_CLASSIFICATION	8.59863212358156E-7	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999999605675295	WITHOUT_CLASSIFICATION	3.94324704921865E-7	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999989786832604	WITHOUT_CLASSIFICATION	1.02131673967096E-6	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999994743017491	WITHOUT_CLASSIFICATION	5.256982510547865E-7	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999997562439437	WITHOUT_CLASSIFICATION	2.4375605639778043E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999994694698427	WITHOUT_CLASSIFICATION	5.305301571955644E-7	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.999999336103342	WITHOUT_CLASSIFICATION	6.638966580641775E-7	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999998633836265	WITHOUT_CLASSIFICATION	1.3661637354929357E-7	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999998698459451	WITHOUT_CLASSIFICATION	1.3015405487862196E-7	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999988377912559	WITHOUT_CLASSIFICATION	1.1622087440856969E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999993641184984	WITHOUT_CLASSIFICATION	6.358815015122662E-7	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999090158296212	WITHOUT_CLASSIFICATION	9.098417037871394E-5	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999910800501621	WITHOUT_CLASSIFICATION	8.9199498378407E-6	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999998198284226	WITHOUT_CLASSIFICATION	1.8017157748991553E-7	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999997589188719	WITHOUT_CLASSIFICATION	2.4108112800754886E-7	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999991454561493	WITHOUT_CLASSIFICATION	8.545438506458738E-7	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999996753532172	WITHOUT_CLASSIFICATION	3.2464678279230245E-7	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999985652892448	WITHOUT_CLASSIFICATION	1.4347107551972127E-6	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999997975221854	WITHOUT_CLASSIFICATION	2.0247781464616423E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999982258355666	WITHOUT_CLASSIFICATION	1.7741644333621095E-6	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999999194269285	WITHOUT_CLASSIFICATION	8.057307157410665E-8	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999980032771866	WITHOUT_CLASSIFICATION	1.9967228134643735E-6	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999999357043073	WITHOUT_CLASSIFICATION	6.429569264668554E-8	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999982918898269	WITHOUT_CLASSIFICATION	1.708110173036141E-6	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999996826505482	WITHOUT_CLASSIFICATION	3.173494518234945E-7	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999999133346827	WITHOUT_CLASSIFICATION	8.666531730420496E-8	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999990606008466	WITHOUT_CLASSIFICATION	9.393991533896929E-7	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999998146399333	WITHOUT_CLASSIFICATION	1.8536006669663837E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999994807077298	WITHOUT_CLASSIFICATION	5.192922700979839E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999966428477773	WITHOUT_CLASSIFICATION	3.35715222280744E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996223233699	WITHOUT_CLASSIFICATION	3.7767663001468356E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999982258355666	WITHOUT_CLASSIFICATION	1.7741644333621095E-6	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999929540899838	WITHOUT_CLASSIFICATION	7.045910016215563E-6	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999985236656556	WITHOUT_CLASSIFICATION	1.4763343444471792E-6	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9999972811706388	WITHOUT_CLASSIFICATION	2.7188293612366053E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999998152130414	WITHOUT_CLASSIFICATION	1.8478695866597026E-7	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999998874637755	WITHOUT_CLASSIFICATION	1.1253622439633738E-7	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999998966014281	WITHOUT_CLASSIFICATION	1.033985719260189E-7	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999999648878249	WITHOUT_CLASSIFICATION	3.51121750934068E-8	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999998808780286	WITHOUT_CLASSIFICATION	1.1912197136419935E-7	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999991050221606	WITHOUT_CLASSIFICATION	8.949778394186203E-7	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999998285394522	WITHOUT_CLASSIFICATION	1.7146054780661698E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9997689414445798	WITHOUT_CLASSIFICATION	2.3105855542018843E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9997338042969419	WITHOUT_CLASSIFICATION	2.6619570305810966E-4	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.999996634004361	WITHOUT_CLASSIFICATION	3.365995639071551E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999999831008293	WITHOUT_CLASSIFICATION	1.6899170765412567E-8	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999997680692364	WITHOUT_CLASSIFICATION	2.31930763440958E-7	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9999985367192749	WITHOUT_CLASSIFICATION	1.4632807250540226E-6	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999999576145113	WITHOUT_CLASSIFICATION	4.2385488748346365E-8	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999997119024742	WITHOUT_CLASSIFICATION	2.8809752582148375E-7	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999996117961187	WITHOUT_CLASSIFICATION	3.882038812511737E-7	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999968640089288	WITHOUT_CLASSIFICATION	3.135991071122946E-6	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999969540059823	WITHOUT_CLASSIFICATION	3.045994017727757E-6	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999999971654924	WITHOUT_CLASSIFICATION	2.8345075788204797E-9	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999986698241292	WITHOUT_CLASSIFICATION	1.3301758707976674E-6	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999986698241292	WITHOUT_CLASSIFICATION	1.3301758707976674E-6	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999999273056233	WITHOUT_CLASSIFICATION	7.269437672531181E-8	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999980659262544	WITHOUT_CLASSIFICATION	1.934073745607892E-6	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999997536837881	WITHOUT_CLASSIFICATION	2.463162118451033E-7	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9992521348867315	WITHOUT_CLASSIFICATION	7.478651132685054E-4	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999990654334203	WITHOUT_CLASSIFICATION	9.345665797824608E-7	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.99999695692826	WITHOUT_CLASSIFICATION	3.043071740021723E-6	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9999998222745893	WITHOUT_CLASSIFICATION	1.7772541075686596E-7	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999999477851819	WITHOUT_CLASSIFICATION	5.2214818147170515E-8	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.999999888171089	WITHOUT_CLASSIFICATION	1.1182891101978899E-7	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999985533286146	WITHOUT_CLASSIFICATION	1.4466713853933815E-6	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9999742740752038	WITHOUT_CLASSIFICATION	2.5725924796159565E-5	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.99999964407021	WITHOUT_CLASSIFICATION	3.5592978993177517E-7	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999981277446244	WITHOUT_CLASSIFICATION	1.8722553756477783E-6	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999913884650091	WITHOUT_CLASSIFICATION	8.611534990964062E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9995596762059189	WITHOUT_CLASSIFICATION	4.403237940811104E-4	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999999905344792	WITHOUT_CLASSIFICATION	9.465520760943228E-9	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999997609101803	WITHOUT_CLASSIFICATION	2.3908981968919644E-7	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999489368928951	WITHOUT_CLASSIFICATION	5.106310710498507E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999489368928951	WITHOUT_CLASSIFICATION	5.106310710498507E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999489368928951	WITHOUT_CLASSIFICATION	5.106310710498507E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.999993985153494	WITHOUT_CLASSIFICATION	6.014846506014978E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999955955291336	WITHOUT_CLASSIFICATION	4.40447086632533E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999955955291336	WITHOUT_CLASSIFICATION	4.40447086632533E-6	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999952446938482	WITHOUT_CLASSIFICATION	4.7553061518364035E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999929780734605	WITHOUT_CLASSIFICATION	7.0219265395389055E-6	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999957229077526	WITHOUT_CLASSIFICATION	4.277092247368317E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.999998439057658	WITHOUT_CLASSIFICATION	1.5609423421334255E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.999998439057658	WITHOUT_CLASSIFICATION	1.5609423421334255E-6	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.999999433088944	WITHOUT_CLASSIFICATION	5.669110559495353E-7	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.999997144454441	WITHOUT_CLASSIFICATION	2.855545559042236E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999999582021813	WITHOUT_CLASSIFICATION	4.179781874491989E-8	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999749168063	WITHOUT_CLASSIFICATION	2.5083193797873788E-8	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9999963921658951	WITHOUT_CLASSIFICATION	3.607834105058846E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999999582021813	WITHOUT_CLASSIFICATION	4.179781874491989E-8	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999749168063	WITHOUT_CLASSIFICATION	2.5083193797873788E-8	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999993162201525	WITHOUT_CLASSIFICATION	6.837798475841953E-7	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999965084712086	WITHOUT_CLASSIFICATION	3.491528791431576E-6	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999998172126758	WITHOUT_CLASSIFICATION	1.8278732407692522E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999998172126758	WITHOUT_CLASSIFICATION	1.8278732407692522E-7	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999980973526689	WITHOUT_CLASSIFICATION	1.9026473311894108E-6	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.999995292430008	WITHOUT_CLASSIFICATION	4.707569992032168E-6	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999977115587976	WITHOUT_CLASSIFICATION	2.288441202377115E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9999792335387908	WITHOUT_CLASSIFICATION	2.0766461209186904E-5	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999980041745846	WITHOUT_CLASSIFICATION	1.9958254153805846E-6	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999993722613983	WITHOUT_CLASSIFICATION	6.277386016604623E-7	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9999940978410502	WITHOUT_CLASSIFICATION	5.90215894983622E-6	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999999045463442	WITHOUT_CLASSIFICATION	9.545365572399634E-8	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999913293713628	WITHOUT_CLASSIFICATION	8.670628637099863E-6	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9999998296995831	WITHOUT_CLASSIFICATION	1.7030041680900208E-7	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9999972736378974	WITHOUT_CLASSIFICATION	2.726362102733534E-6	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999993849990141	WITHOUT_CLASSIFICATION	6.150009859622859E-7	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999995019534675	WITHOUT_CLASSIFICATION	4.980465324215767E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999533308526557	WITHOUT_CLASSIFICATION	4.6669147344229106E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999946562504146	WITHOUT_CLASSIFICATION	5.343749585357174E-6	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999999736959724	WITHOUT_CLASSIFICATION	2.6304027632447427E-8	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.999999989850489	WITHOUT_CLASSIFICATION	1.0149510935162695E-8	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999975688847047	WITHOUT_CLASSIFICATION	2.431115295291946E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999976305987132	WITHOUT_CLASSIFICATION	2.369401286884088E-6	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999981652183317	WITHOUT_CLASSIFICATION	1.8347816682431696E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999847552496588	WITHOUT_CLASSIFICATION	1.5244750341209569E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999863919610844	WITHOUT_CLASSIFICATION	1.3608038915533906E-5	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999932230192259	WITHOUT_CLASSIFICATION	6.7769807739895955E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.999999627792652	WITHOUT_CLASSIFICATION	3.722073480212036E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.999999627792652	WITHOUT_CLASSIFICATION	3.722073480212036E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.999998345022146	WITHOUT_CLASSIFICATION	1.6549778540363968E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.999998345022146	WITHOUT_CLASSIFICATION	1.6549778540363968E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996978029034	WITHOUT_CLASSIFICATION	3.021970965762262E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996978029034	WITHOUT_CLASSIFICATION	3.021970965762262E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999188441721275	WITHOUT_CLASSIFICATION	8.115582787247476E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999188441721275	WITHOUT_CLASSIFICATION	8.115582787247476E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999994694698427	WITHOUT_CLASSIFICATION	5.305301571955644E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9997689414445798	WITHOUT_CLASSIFICATION	2.3105855542018843E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999489368928951	WITHOUT_CLASSIFICATION	5.106310710498507E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999489368928951	WITHOUT_CLASSIFICATION	5.106310710498507E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999955955291336	WITHOUT_CLASSIFICATION	4.40447086632533E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999955955291336	WITHOUT_CLASSIFICATION	4.40447086632533E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999955955291336	WITHOUT_CLASSIFICATION	4.40447086632533E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999929780734605	WITHOUT_CLASSIFICATION	7.0219265395389055E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999929780734605	WITHOUT_CLASSIFICATION	7.0219265395389055E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999929780734605	WITHOUT_CLASSIFICATION	7.0219265395389055E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.999993985153494	WITHOUT_CLASSIFICATION	6.014846506014978E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.999993985153494	WITHOUT_CLASSIFICATION	6.014846506014978E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999533308526557	WITHOUT_CLASSIFICATION	4.6669147344229106E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999946562504146	WITHOUT_CLASSIFICATION	5.343749585357174E-6	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999996606311	WITHOUT_CLASSIFICATION	3.393688173965156E-10	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999998830868408	WITHOUT_CLASSIFICATION	1.169131591696988E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999998210304772	WITHOUT_CLASSIFICATION	1.789695228482284E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999998210304772	WITHOUT_CLASSIFICATION	1.789695228482284E-7	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.9999993136016109	WITHOUT_CLASSIFICATION	6.863983891046847E-7	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.999999728938292	WITHOUT_CLASSIFICATION	2.7106170795164807E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999998210304772	WITHOUT_CLASSIFICATION	1.789695228482284E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999917996762738	WITHOUT_CLASSIFICATION	8.200323726178098E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999939401584614	WITHOUT_CLASSIFICATION	6.059841538499634E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999939401584614	WITHOUT_CLASSIFICATION	6.059841538499634E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999939401584614	WITHOUT_CLASSIFICATION	6.059841538499634E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999998106546646	WITHOUT_CLASSIFICATION	1.8934533547032034E-7	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999999164797674	WITHOUT_CLASSIFICATION	8.352023268476748E-8	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999981693900176	WITHOUT_CLASSIFICATION	1.8306099823744634E-6	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.999989631631757	WITHOUT_CLASSIFICATION	1.0368368243022428E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999665969638	WITHOUT_CLASSIFICATION	3.340303620967236E-8	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999665969638	WITHOUT_CLASSIFICATION	3.340303620967236E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998153775151	WITHOUT_CLASSIFICATION	1.8462248487572572E-7	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.999984299183463	WITHOUT_CLASSIFICATION	1.5700816536931774E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999847552496588	WITHOUT_CLASSIFICATION	1.5244750341209569E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999863919610844	WITHOUT_CLASSIFICATION	1.3608038915533906E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999996346122145	WITHOUT_CLASSIFICATION	3.6538778548515467E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999996346122145	WITHOUT_CLASSIFICATION	3.6538778548515467E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.999999627792652	WITHOUT_CLASSIFICATION	3.722073480212036E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.999998345022146	WITHOUT_CLASSIFICATION	1.6549778540363968E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996978029034	WITHOUT_CLASSIFICATION	3.021970965762262E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999188441721275	WITHOUT_CLASSIFICATION	8.115582787247476E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999188441721275	WITHOUT_CLASSIFICATION	8.115582787247476E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999188441721275	WITHOUT_CLASSIFICATION	8.115582787247476E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999999279205819	WITHOUT_CLASSIFICATION	7.207941810050166E-7	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999999279205819	WITHOUT_CLASSIFICATION	7.207941810050166E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999994694698427	WITHOUT_CLASSIFICATION	5.305301571955644E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999946562504146	WITHOUT_CLASSIFICATION	5.343749585357174E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999946562504146	WITHOUT_CLASSIFICATION	5.343749585357174E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999976305987132	WITHOUT_CLASSIFICATION	2.369401286884088E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999998210304772	WITHOUT_CLASSIFICATION	1.789695228482284E-7	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999939401584614	WITHOUT_CLASSIFICATION	6.059841538499634E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.999999728938292	WITHOUT_CLASSIFICATION	2.7106170795164807E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999917996762738	WITHOUT_CLASSIFICATION	8.200323726178098E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999917996762738	WITHOUT_CLASSIFICATION	8.200323726178098E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999998106546646	WITHOUT_CLASSIFICATION	1.8934533547032034E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999665969638	WITHOUT_CLASSIFICATION	3.340303620967236E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998153775151	WITHOUT_CLASSIFICATION	1.8462248487572572E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999981693900176	WITHOUT_CLASSIFICATION	1.8306099823744634E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999981693900176	WITHOUT_CLASSIFICATION	1.8306099823744634E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999981693900176	WITHOUT_CLASSIFICATION	1.8306099823744634E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999993467172724	WITHOUT_CLASSIFICATION	6.532827275205604E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999993467172724	WITHOUT_CLASSIFICATION	6.532827275205604E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999993467172724	WITHOUT_CLASSIFICATION	6.532827275205604E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999993183450552	WITHOUT_CLASSIFICATION	6.816549447944333E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999993183450552	WITHOUT_CLASSIFICATION	6.816549447944333E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999993183450552	WITHOUT_CLASSIFICATION	6.816549447944333E-7	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999957460206964	WITHOUT_CLASSIFICATION	4.253979303620683E-6	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.999999018750533	WITHOUT_CLASSIFICATION	9.81249466930274E-7	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999916499767116	WITHOUT_CLASSIFICATION	8.350023288408772E-6	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999875715931988	WITHOUT_CLASSIFICATION	1.242840680116387E-5	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999989789336283	WITHOUT_CLASSIFICATION	1.021066371674523E-6	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999881302891044	WITHOUT_CLASSIFICATION	1.186971089567127E-5	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.9999998735755057	WITHOUT_CLASSIFICATION	1.264244943382124E-7	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999596001969687	WITHOUT_CLASSIFICATION	4.039980303123675E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999999978640384	WITHOUT_CLASSIFICATION	2.135961628843858E-9	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999973790933038	WITHOUT_CLASSIFICATION	2.6209066962619016E-6	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999998967335235	WITHOUT_CLASSIFICATION	1.0326647642565167E-7	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999952415124542	WITHOUT_CLASSIFICATION	4.758487545792538E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9999937620794067	WITHOUT_CLASSIFICATION	6.237920593250275E-6	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.9999971608810675	WITHOUT_CLASSIFICATION	2.839118932483054E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999979487550629	WITHOUT_CLASSIFICATION	2.05124493706139E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999847552496588	WITHOUT_CLASSIFICATION	1.5244750341209569E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999863919610844	WITHOUT_CLASSIFICATION	1.3608038915533906E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999996346122145	WITHOUT_CLASSIFICATION	3.6538778548515467E-7	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999974380608087	WITHOUT_CLASSIFICATION	2.561939191263463E-6	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.999999999169514	WITHOUT_CLASSIFICATION	8.304860300628047E-10	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.999999627792652	WITHOUT_CLASSIFICATION	3.722073480212036E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.999998345022146	WITHOUT_CLASSIFICATION	1.6549778540363968E-6	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996978029034	WITHOUT_CLASSIFICATION	3.021970965762262E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999994694698427	WITHOUT_CLASSIFICATION	5.305301571955644E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999989584605468	WITHOUT_CLASSIFICATION	1.0415394532722325E-6	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9983341134669855	WITHOUT_CLASSIFICATION	0.0016658865330144968	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9995596762059189	WITHOUT_CLASSIFICATION	4.403237940811104E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999533308526557	WITHOUT_CLASSIFICATION	4.6669147344229106E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999946562504146	WITHOUT_CLASSIFICATION	5.343749585357174E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999939401584614	WITHOUT_CLASSIFICATION	6.059841538499634E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.999999728938292	WITHOUT_CLASSIFICATION	2.7106170795164807E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999917996762738	WITHOUT_CLASSIFICATION	8.200323726178098E-6	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.999989631631757	WITHOUT_CLASSIFICATION	1.0368368243022428E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.999984299183463	WITHOUT_CLASSIFICATION	1.5700816536931774E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999916499767116	WITHOUT_CLASSIFICATION	8.350023288408772E-6	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999875715931988	WITHOUT_CLASSIFICATION	1.242840680116387E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.999996457413128	WITHOUT_CLASSIFICATION	3.5425868719626907E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999610198583608	WITHOUT_CLASSIFICATION	3.8980141639183044E-5	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9999996017884573	WITHOUT_CLASSIFICATION	3.9821154274495473E-7	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999999570999614	WITHOUT_CLASSIFICATION	4.2900038595054204E-8	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999999501504673	WITHOUT_CLASSIFICATION	4.984953267544531E-8	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999970136871768	WITHOUT_CLASSIFICATION	2.986312823136703E-6	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999999170216838	WITHOUT_CLASSIFICATION	8.297831614553536E-8	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999764049200304	WITHOUT_CLASSIFICATION	2.359507996966707E-5	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999999307568314	WITHOUT_CLASSIFICATION	6.92431686557153E-8	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999967241423945	WITHOUT_CLASSIFICATION	3.275857605572828E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999958224933342	WITHOUT_CLASSIFICATION	4.1775066658272405E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999958224933342	WITHOUT_CLASSIFICATION	4.1775066658272405E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999971930431225	WITHOUT_CLASSIFICATION	2.806956877520798E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999971930431225	WITHOUT_CLASSIFICATION	2.806956877520798E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.99999940457718	WITHOUT_CLASSIFICATION	5.954228199891649E-7	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.99999360258774	WITHOUT_CLASSIFICATION	6.397412260069905E-6	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999988931997396	WITHOUT_CLASSIFICATION	1.1068002604365415E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999994030820436	WITHOUT_CLASSIFICATION	5.969179564389324E-7	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999999159835817	WITHOUT_CLASSIFICATION	8.401641829657315E-8	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999980475278936	WITHOUT_CLASSIFICATION	1.952472106313244E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9998972499798915	WITHOUT_CLASSIFICATION	1.0275002010845524E-4	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9992948112113398	WITHOUT_CLASSIFICATION	7.05188788660149E-4	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999997403587798	WITHOUT_CLASSIFICATION	2.59641220202837E-7	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999997636534348	WITHOUT_CLASSIFICATION	2.3634656522359206E-7	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999909039085	WITHOUT_CLASSIFICATION	9.096091595526177E-9	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999993767125664	WITHOUT_CLASSIFICATION	6.232874336008607E-7	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999993599779581	WITHOUT_CLASSIFICATION	6.400220419158212E-7	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.999999892008786	WITHOUT_CLASSIFICATION	1.079912139407809E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.999998888402459	WITHOUT_CLASSIFICATION	1.1115975410404276E-6	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999992272052879	WITHOUT_CLASSIFICATION	7.727947121245878E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9967719678647038	WITHOUT_CLASSIFICATION	0.0032280321352962118	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9997617512265944	WITHOUT_CLASSIFICATION	2.3824877340551312E-4	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999995158324984	WITHOUT_CLASSIFICATION	4.84167501658626E-7	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999997630235707	WITHOUT_CLASSIFICATION	2.3697642912172698E-7	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9999648712121242	WITHOUT_CLASSIFICATION	3.512878787578097E-5	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999998107683097	WITHOUT_CLASSIFICATION	1.8923169021627832E-7	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9996283632300479	WITHOUT_CLASSIFICATION	3.716367699521593E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999995474930092	WITHOUT_CLASSIFICATION	4.525069907207655E-7	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999988454443944	WITHOUT_CLASSIFICATION	1.1545556056046427E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9998972499798915	WITHOUT_CLASSIFICATION	1.0275002010845524E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9998972499798915	WITHOUT_CLASSIFICATION	1.0275002010845524E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999276445657	WITHOUT_CLASSIFICATION	7.235543426931609E-8	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999992135598	WITHOUT_CLASSIFICATION	7.864402294585641E-10	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999992135598	WITHOUT_CLASSIFICATION	7.864402294585641E-10	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999998411211953	WITHOUT_CLASSIFICATION	1.5887880466900757E-7	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9548376363057323	WITHOUT_CLASSIFICATION	0.04516236369426771	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9999998439010236	WITHOUT_CLASSIFICATION	1.5609897638523608E-7	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9999862728493273	WITHOUT_CLASSIFICATION	1.3727150672766075E-5	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999999752177923	WITHOUT_CLASSIFICATION	2.4782207744928376E-8	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9998814730551607	WITHOUT_CLASSIFICATION	1.185269448391906E-4	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9998814730551607	WITHOUT_CLASSIFICATION	1.185269448391906E-4	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999528722074	WITHOUT_CLASSIFICATION	4.7127792447640035E-8	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999999714969	WITHOUT_CLASSIFICATION	2.8503030505413806E-11	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930003719057	WITHOUT_CLASSIFICATION	6.999628094243972E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999774118179805	WITHOUT_CLASSIFICATION	2.2588182019568994E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9999828811937397	WITHOUT_CLASSIFICATION	1.7118806260242683E-5	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999998837378812	WITHOUT_CLASSIFICATION	1.1626211883611234E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9997445122765835	WITHOUT_CLASSIFICATION	2.554877234165125E-4	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999998419016741	WITHOUT_CLASSIFICATION	1.5809832589529702E-7	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999998826129066	WITHOUT_CLASSIFICATION	1.1738709333470258E-7	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999996957321061	WITHOUT_CLASSIFICATION	3.042678939955815E-7	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999992998072464	WITHOUT_CLASSIFICATION	7.001927536405055E-7	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999996105208997	WITHOUT_CLASSIFICATION	3.8947910030097593E-7	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9999996395248012	WITHOUT_CLASSIFICATION	3.604751987643404E-7	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999373676848	WITHOUT_CLASSIFICATION	6.263231519538278E-8	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999999069699071	WITHOUT_CLASSIFICATION	9.303009285494362E-8	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9999226726399985	WITHOUT_CLASSIFICATION	7.73273600015514E-5	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999999273445086	WITHOUT_CLASSIFICATION	7.265549141010269E-8	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999924674014142	WITHOUT_CLASSIFICATION	7.532598585796501E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.999999994549965	WITHOUT_CLASSIFICATION	5.450034935232029E-9	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999992626859509	WITHOUT_CLASSIFICATION	7.373140490737765E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999854980815972	WITHOUT_CLASSIFICATION	1.4501918402838504E-5	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999997705398728	WITHOUT_CLASSIFICATION	2.2946012718892027E-7	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999986285067748	WITHOUT_CLASSIFICATION	1.3714932252650768E-6	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.999999964998159	WITHOUT_CLASSIFICATION	3.5001841081955265E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992626895327	WITHOUT_CLASSIFICATION	7.373104673303554E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999985814349751	WITHOUT_CLASSIFICATION	1.4185650249665396E-6	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999921524917331	WITHOUT_CLASSIFICATION	7.847508266802343E-6	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999921524917331	WITHOUT_CLASSIFICATION	7.847508266802343E-6	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999999058887978	WITHOUT_CLASSIFICATION	9.411120221851984E-8	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999999799929813	WITHOUT_CLASSIFICATION	2.0007018716863506E-8	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9426728041850236	WITHOUT_CLASSIFICATION	0.05732719581497626	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9999826738376228	WITHOUT_CLASSIFICATION	1.732616237713676E-5	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9999955124311256	WITHOUT_CLASSIFICATION	4.487568874435458E-6	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.99999695692826	WITHOUT_CLASSIFICATION	3.043071740021723E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999999477851819	WITHOUT_CLASSIFICATION	5.2214818147170515E-8	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999989584605468	WITHOUT_CLASSIFICATION	1.0415394532722325E-6	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9983341134669855	WITHOUT_CLASSIFICATION	0.0016658865330144968	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999489368928951	WITHOUT_CLASSIFICATION	5.106310710498507E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999533308526557	WITHOUT_CLASSIFICATION	4.6669147344229106E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999533308526557	WITHOUT_CLASSIFICATION	4.6669147344229106E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999946562504146	WITHOUT_CLASSIFICATION	5.343749585357174E-6	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999901140813905	WITHOUT_CLASSIFICATION	9.885918609620904E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999976305987132	WITHOUT_CLASSIFICATION	2.369401286884088E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999976305987132	WITHOUT_CLASSIFICATION	2.369401286884088E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999998210304772	WITHOUT_CLASSIFICATION	1.789695228482284E-7	DEFECT
// open	WITHOUT_CLASSIFICATION	0.9999968198771194	WITHOUT_CLASSIFICATION	3.1801228805586985E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.999999728938292	WITHOUT_CLASSIFICATION	2.7106170795164807E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999665969638	WITHOUT_CLASSIFICATION	3.340303620967236E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998153775151	WITHOUT_CLASSIFICATION	1.8462248487572572E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999998153775151	WITHOUT_CLASSIFICATION	1.8462248487572572E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999981693900176	WITHOUT_CLASSIFICATION	1.8306099823744634E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999981693900176	WITHOUT_CLASSIFICATION	1.8306099823744634E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999981693900176	WITHOUT_CLASSIFICATION	1.8306099823744634E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999981693900176	WITHOUT_CLASSIFICATION	1.8306099823744634E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.999996457413128	WITHOUT_CLASSIFICATION	3.5425868719626907E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.999996457413128	WITHOUT_CLASSIFICATION	3.5425868719626907E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999610198583608	WITHOUT_CLASSIFICATION	3.8980141639183044E-5	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999610198583608	WITHOUT_CLASSIFICATION	3.8980141639183044E-5	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9998200129814181	WITHOUT_CLASSIFICATION	1.7998701858193568E-4	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999892771003394	WITHOUT_CLASSIFICATION	1.0722899660711194E-5	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999972244035242	WITHOUT_CLASSIFICATION	2.7755964758799908E-6	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999972244035242	WITHOUT_CLASSIFICATION	2.7755964758799908E-6	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999892771003394	WITHOUT_CLASSIFICATION	1.0722899660711194E-5	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999993610548918	WITHOUT_CLASSIFICATION	6.389451081805334E-7	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9998200129814181	WITHOUT_CLASSIFICATION	1.7998701858193568E-4	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999991875393559	WITHOUT_CLASSIFICATION	8.124606441727911E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999991875393559	WITHOUT_CLASSIFICATION	8.124606441727911E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999991875393559	WITHOUT_CLASSIFICATION	8.124606441727911E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999991875393559	WITHOUT_CLASSIFICATION	8.124606441727911E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999991875393559	WITHOUT_CLASSIFICATION	8.124606441727911E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999991875393559	WITHOUT_CLASSIFICATION	8.124606441727911E-7	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999999911958	WITHOUT_CLASSIFICATION	8.80410328800399E-12	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999999624628	WITHOUT_CLASSIFICATION	3.7537164070678833E-11	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999999998052966	WITHOUT_CLASSIFICATION	1.9470339401888923E-10	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999991875393559	WITHOUT_CLASSIFICATION	8.124606441727911E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999991875393559	WITHOUT_CLASSIFICATION	8.124606441727911E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999991875393559	WITHOUT_CLASSIFICATION	8.124606441727911E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999991875393559	WITHOUT_CLASSIFICATION	8.124606441727911E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999991875393559	WITHOUT_CLASSIFICATION	8.124606441727911E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997633287927	WITHOUT_CLASSIFICATION	2.3667120737266638E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997633287927	WITHOUT_CLASSIFICATION	2.3667120737266638E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999974801654716	WITHOUT_CLASSIFICATION	2.5198345283603133E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999974801654716	WITHOUT_CLASSIFICATION	2.5198345283603133E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999974801654716	WITHOUT_CLASSIFICATION	2.5198345283603133E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999974801654716	WITHOUT_CLASSIFICATION	2.5198345283603133E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999764135536248	WITHOUT_CLASSIFICATION	2.3586446375169914E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999988957782168	WITHOUT_CLASSIFICATION	1.1042217831997226E-6	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999988957782168	WITHOUT_CLASSIFICATION	1.1042217831997226E-6	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999969234894758	WITHOUT_CLASSIFICATION	3.0765105242669896E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999903141649287	WITHOUT_CLASSIFICATION	9.685835071354769E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999903141649287	WITHOUT_CLASSIFICATION	9.685835071354769E-6	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9998265773476354	WITHOUT_CLASSIFICATION	1.7342265236462852E-4	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999903141649287	WITHOUT_CLASSIFICATION	9.685835071354769E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999763299364	WITHOUT_CLASSIFICATION	2.367006353942555E-8	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999974801654716	WITHOUT_CLASSIFICATION	2.5198345283603133E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999974801654716	WITHOUT_CLASSIFICATION	2.5198345283603133E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999975766449026	WITHOUT_CLASSIFICATION	2.4233550972591095E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999966428477773	WITHOUT_CLASSIFICATION	3.35715222280744E-6	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.9748694142055863	WITHOUT_CLASSIFICATION	0.025130585794413823	DEFECT
// todo: not serialized yet	DEFECT	0.9999232366163551	WITHOUT_CLASSIFICATION	7.676338364488918E-5	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.8371526334261888	WITHOUT_CLASSIFICATION	0.1628473665738112	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.8188301703532231	WITHOUT_CLASSIFICATION	0.18116982964677686	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.8188301703532231	WITHOUT_CLASSIFICATION	0.18116982964677686	DEFECT
// TODO: Check this result...	DEFECT	0.6485145837034613	WITHOUT_CLASSIFICATION	0.3514854162965386	DEFECT
// TODO: Check this result...	DEFECT	0.6485145837034613	WITHOUT_CLASSIFICATION	0.3514854162965386	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9993409295885044	WITHOUT_CLASSIFICATION	6.590704114954813E-4	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.99931538122603	WITHOUT_CLASSIFICATION	6.846187739700204E-4	DEFECT
