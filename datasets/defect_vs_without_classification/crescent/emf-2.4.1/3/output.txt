// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999993527988357	WITHOUT_CLASSIFICATION	6.472011643827152E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999940692916257	WITHOUT_CLASSIFICATION	5.930708374231652E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999993937095892	WITHOUT_CLASSIFICATION	6.062904107127839E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999995769705151	WITHOUT_CLASSIFICATION	4.230294848729143E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999962553355545	WITHOUT_CLASSIFICATION	3.744664445524725E-6	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.99999992025195	WITHOUT_CLASSIFICATION	7.974805013830287E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999922016818327	WITHOUT_CLASSIFICATION	7.798318167368076E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999940207291849	WITHOUT_CLASSIFICATION	5.9792708152245935E-6	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999998811161969	WITHOUT_CLASSIFICATION	1.1888380322888869E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999971283778477	WITHOUT_CLASSIFICATION	2.871622152409984E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999991923336903	WITHOUT_CLASSIFICATION	8.076663096565214E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.99999138788593	WITHOUT_CLASSIFICATION	8.612114070034287E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999951185797119	WITHOUT_CLASSIFICATION	4.88142028813265E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998640909068	WITHOUT_CLASSIFICATION	1.3590909326591921E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999992711390415	WITHOUT_CLASSIFICATION	7.288609584398699E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999997777400174	WITHOUT_CLASSIFICATION	2.2225998264183598E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999976297896969	WITHOUT_CLASSIFICATION	2.370210303186162E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999922016818327	WITHOUT_CLASSIFICATION	7.798318167368076E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999996616535803	WITHOUT_CLASSIFICATION	3.3834641973658175E-7	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999993164870161	WITHOUT_CLASSIFICATION	6.835129838446235E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.999999924213572	WITHOUT_CLASSIFICATION	7.57864279875703E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999916791126607	WITHOUT_CLASSIFICATION	8.320887339256809E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999916791126607	WITHOUT_CLASSIFICATION	8.320887339256809E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999998363037823	WITHOUT_CLASSIFICATION	1.6369621771409296E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999949149486357	WITHOUT_CLASSIFICATION	5.085051364359994E-6	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999907571754525	WITHOUT_CLASSIFICATION	9.242824547468236E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999888601870991	WITHOUT_CLASSIFICATION	1.1139812900822098E-5	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999948267760529	WITHOUT_CLASSIFICATION	5.173223947106719E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999955667624276	WITHOUT_CLASSIFICATION	4.433237572371466E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999904443228945	WITHOUT_CLASSIFICATION	9.555677105344035E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999999635025295	WITHOUT_CLASSIFICATION	3.6497470496774926E-7	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999981158294936	WITHOUT_CLASSIFICATION	1.884170506332925E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9992871270690179	WITHOUT_CLASSIFICATION	7.128729309821233E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999999159837315	WITHOUT_CLASSIFICATION	8.401626849567962E-7	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999985928467068	WITHOUT_CLASSIFICATION	1.4071532931473644E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999968525691557	WITHOUT_CLASSIFICATION	3.1474308442908023E-6	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999984285203282	WITHOUT_CLASSIFICATION	1.571479671827461E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999995707569028	WITHOUT_CLASSIFICATION	4.2924309715132673E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999978910505054	WITHOUT_CLASSIFICATION	2.108949494614384E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999973964732147	WITHOUT_CLASSIFICATION	2.603526785326271E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999994834021119	WITHOUT_CLASSIFICATION	5.16597888183593E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999946304861985	WITHOUT_CLASSIFICATION	5.369513801524085E-6	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999985695583089	WITHOUT_CLASSIFICATION	1.430441691175281E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999991607841411	WITHOUT_CLASSIFICATION	8.392158589470554E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999931990360931	WITHOUT_CLASSIFICATION	6.800963906966587E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.999993138766652	WITHOUT_CLASSIFICATION	6.861233348100101E-6	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997849090060991	WITHOUT_CLASSIFICATION	2.150909939009605E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999652175716905	WITHOUT_CLASSIFICATION	3.4782428309578356E-5	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9995385560508175	WITHOUT_CLASSIFICATION	4.614439491824944E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9998179618896419	WITHOUT_CLASSIFICATION	1.820381103580842E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999699158445	WITHOUT_CLASSIFICATION	3.0084155489072525E-7	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997849090060991	WITHOUT_CLASSIFICATION	2.150909939009605E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9998752223268728	WITHOUT_CLASSIFICATION	1.2477767312712803E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9998702167753818	WITHOUT_CLASSIFICATION	1.2978322461811E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.99970331234802	WITHOUT_CLASSIFICATION	2.9668765197999274E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999221788365673	WITHOUT_CLASSIFICATION	7.782116343264105E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9998932343471126	WITHOUT_CLASSIFICATION	1.0676565288728862E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999504594676576	WITHOUT_CLASSIFICATION	4.954053234248081E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999967414742686	WITHOUT_CLASSIFICATION	3.2585257314680624E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995975042744	WITHOUT_CLASSIFICATION	4.024957256596449E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999946769627697	WITHOUT_CLASSIFICATION	5.323037230284499E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999994914656819	WITHOUT_CLASSIFICATION	5.085343181673669E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999678735363005	WITHOUT_CLASSIFICATION	3.2126463699642015E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999741223410226	WITHOUT_CLASSIFICATION	2.5877658977470268E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958287494888	WITHOUT_CLASSIFICATION	4.1712505112307436E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999923529734214	WITHOUT_CLASSIFICATION	7.647026578601426E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999940223166941	WITHOUT_CLASSIFICATION	5.977683305883227E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999998007895808	WITHOUT_CLASSIFICATION	1.9921041920351543E-6	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.999864606383094	WITHOUT_CLASSIFICATION	1.3539361690596732E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.999999335413544	WITHOUT_CLASSIFICATION	6.645864560147888E-7	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9997440946029132	WITHOUT_CLASSIFICATION	2.5590539708681667E-4	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9999812942787285	WITHOUT_CLASSIFICATION	1.8705721271580573E-5	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.999999271390516	WITHOUT_CLASSIFICATION	7.286094838872927E-7	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9999794687406838	WITHOUT_CLASSIFICATION	2.0531259316312957E-5	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9999914660290509	WITHOUT_CLASSIFICATION	8.533970949122687E-6	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999911642183109	WITHOUT_CLASSIFICATION	8.835781689073694E-6	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999971686334012	WITHOUT_CLASSIFICATION	2.8313665988064197E-6	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9999321328402703	WITHOUT_CLASSIFICATION	6.786715972976004E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9968688743756997	WITHOUT_CLASSIFICATION	0.003131125624300265	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.99999138788593	WITHOUT_CLASSIFICATION	8.612114070034287E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999951185797119	WITHOUT_CLASSIFICATION	4.88142028813265E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998640909068	WITHOUT_CLASSIFICATION	1.3590909326591921E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999957576139188	WITHOUT_CLASSIFICATION	4.2423860812713504E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999893514915176	WITHOUT_CLASSIFICATION	1.0648508482383046E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999992711390415	WITHOUT_CLASSIFICATION	7.288609584398699E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999997777400174	WITHOUT_CLASSIFICATION	2.2225998264183598E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999976297896969	WITHOUT_CLASSIFICATION	2.370210303186162E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9996920831314519	WITHOUT_CLASSIFICATION	3.079168685481495E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9996920831314519	WITHOUT_CLASSIFICATION	3.079168685481495E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9996920831314519	WITHOUT_CLASSIFICATION	3.079168685481495E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.99999992025195	WITHOUT_CLASSIFICATION	7.974805013830287E-8	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999982434830815	WITHOUT_CLASSIFICATION	1.7565169185215362E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.999999415590788	WITHOUT_CLASSIFICATION	5.844092120466792E-7	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999998406779035	WITHOUT_CLASSIFICATION	1.593220965176756E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.999999924213572	WITHOUT_CLASSIFICATION	7.57864279875703E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999986207452154	WITHOUT_CLASSIFICATION	1.3792547845448537E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999904443228945	WITHOUT_CLASSIFICATION	9.555677105344035E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999999635025295	WITHOUT_CLASSIFICATION	3.6497470496774926E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9992871270690179	WITHOUT_CLASSIFICATION	7.128729309821233E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999968525691557	WITHOUT_CLASSIFICATION	3.1474308442908023E-6	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9999975529622235	WITHOUT_CLASSIFICATION	2.4470377764665913E-6	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999878519334171	WITHOUT_CLASSIFICATION	1.2148066582936311E-5	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999995199106385	WITHOUT_CLASSIFICATION	4.800893614673809E-7	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999972219364328	WITHOUT_CLASSIFICATION	2.77806356719766E-6	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999997186142295	WITHOUT_CLASSIFICATION	2.813857705391349E-7	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999973964732147	WITHOUT_CLASSIFICATION	2.603526785326271E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999946304861985	WITHOUT_CLASSIFICATION	5.369513801524085E-6	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999986369873621	WITHOUT_CLASSIFICATION	1.363012637843595E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9999997597896377	WITHOUT_CLASSIFICATION	2.4021036234347053E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999860986729324	WITHOUT_CLASSIFICATION	1.3901327067617067E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999998176768855	WITHOUT_CLASSIFICATION	1.8232311462101136E-7	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999965467432217	WITHOUT_CLASSIFICATION	3.453256778346678E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999971647477558	WITHOUT_CLASSIFICATION	2.835252244183538E-6	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999986424366254	WITHOUT_CLASSIFICATION	1.357563374595263E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999948525814746	WITHOUT_CLASSIFICATION	5.14741852536321E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.999970001054293	WITHOUT_CLASSIFICATION	2.999894570695986E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999883391159496	WITHOUT_CLASSIFICATION	1.1660884050370198E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999993212431508	WITHOUT_CLASSIFICATION	6.787568491181001E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.999970001054293	WITHOUT_CLASSIFICATION	2.999894570695986E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999778391731866	WITHOUT_CLASSIFICATION	2.2160826813399665E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999966677249493	WITHOUT_CLASSIFICATION	3.332275050614235E-6	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999983910553947	WITHOUT_CLASSIFICATION	1.6089446052540973E-6	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999968384207343	WITHOUT_CLASSIFICATION	3.1615792657285157E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.999970001054293	WITHOUT_CLASSIFICATION	2.999894570695986E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999883391159496	WITHOUT_CLASSIFICATION	1.1660884050370198E-5	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999922734276315	WITHOUT_CLASSIFICATION	7.72657236856771E-6	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999995781267755	WITHOUT_CLASSIFICATION	4.218732244092737E-7	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999998264326373	WITHOUT_CLASSIFICATION	1.7356736270215317E-6	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999996462676101	WITHOUT_CLASSIFICATION	3.53732389897706E-6	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999981690223255	WITHOUT_CLASSIFICATION	1.8309776745459013E-6	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999937075696488	WITHOUT_CLASSIFICATION	6.292430351328507E-6	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999991738160515	WITHOUT_CLASSIFICATION	8.261839485517591E-7	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9998132313882947	WITHOUT_CLASSIFICATION	1.867686117052586E-4	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.999974761095217	WITHOUT_CLASSIFICATION	2.523890478301117E-5	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9999108874250816	WITHOUT_CLASSIFICATION	8.91125749184704E-5	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9986986765156418	WITHOUT_CLASSIFICATION	0.0013013234843580954	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999974113517566	WITHOUT_CLASSIFICATION	2.5886482433588094E-6	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999998597216728	WITHOUT_CLASSIFICATION	1.4027832720631978E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999652175716905	WITHOUT_CLASSIFICATION	3.4782428309578356E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999686318738	WITHOUT_CLASSIFICATION	3.1368126280438865E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999734589849952	WITHOUT_CLASSIFICATION	2.6541015004741758E-5	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999845727604136	WITHOUT_CLASSIFICATION	1.5427239586334065E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9998948996221513	WITHOUT_CLASSIFICATION	1.0510037784879779E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.999936472604539	WITHOUT_CLASSIFICATION	6.352739546100237E-5	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999503572568263	WITHOUT_CLASSIFICATION	4.964274317371899E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999620916609702	WITHOUT_CLASSIFICATION	3.7908339029950974E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999686318738	WITHOUT_CLASSIFICATION	3.1368126280438865E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999734589849952	WITHOUT_CLASSIFICATION	2.6541015004741758E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999955507587676	WITHOUT_CLASSIFICATION	4.449241232397924E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999955507587676	WITHOUT_CLASSIFICATION	4.449241232397924E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999961995694121	WITHOUT_CLASSIFICATION	3.800430587825258E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999994537841805	WITHOUT_CLASSIFICATION	5.462158195076233E-7	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.99999654041065	WITHOUT_CLASSIFICATION	3.45958935000921E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999961995694121	WITHOUT_CLASSIFICATION	3.800430587825258E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999994537841805	WITHOUT_CLASSIFICATION	5.462158195076233E-7	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999980875191854	WITHOUT_CLASSIFICATION	1.9124808146253098E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999966556637412	WITHOUT_CLASSIFICATION	3.3443362588388632E-6	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999958904236281	WITHOUT_CLASSIFICATION	4.109576371859663E-6	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999852489563159	WITHOUT_CLASSIFICATION	1.4751043683967847E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999958904236281	WITHOUT_CLASSIFICATION	4.109576371859663E-6	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999992108679708	WITHOUT_CLASSIFICATION	7.891320291518377E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999989922738247	WITHOUT_CLASSIFICATION	1.00772617518241E-6	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999989922738247	WITHOUT_CLASSIFICATION	1.00772617518241E-6	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999820407994587	WITHOUT_CLASSIFICATION	1.795920054126547E-5	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999998282395952	WITHOUT_CLASSIFICATION	1.7176040482500025E-7	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999889542893962	WITHOUT_CLASSIFICATION	1.1045710603874371E-5	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999577546075459	WITHOUT_CLASSIFICATION	4.224539245398185E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999999181860956	WITHOUT_CLASSIFICATION	8.181390440024851E-8	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999995442804802	WITHOUT_CLASSIFICATION	4.5571951987893084E-7	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999934355756798	WITHOUT_CLASSIFICATION	6.5644243202130655E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999894910879685	WITHOUT_CLASSIFICATION	1.0508912031561943E-5	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999963885104559	WITHOUT_CLASSIFICATION	3.611489544126034E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999613618672489	WITHOUT_CLASSIFICATION	3.863813275113306E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999929032146401	WITHOUT_CLASSIFICATION	7.096785359819174E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999894910879685	WITHOUT_CLASSIFICATION	1.0508912031561943E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999613618672489	WITHOUT_CLASSIFICATION	3.863813275113306E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999894910879685	WITHOUT_CLASSIFICATION	1.0508912031561943E-5	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.999996551349338	WITHOUT_CLASSIFICATION	3.4486506620000276E-6	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999113654449547	WITHOUT_CLASSIFICATION	8.863455504532233E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999894910879685	WITHOUT_CLASSIFICATION	1.0508912031561943E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999894910879685	WITHOUT_CLASSIFICATION	1.0508912031561943E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999894910879685	WITHOUT_CLASSIFICATION	1.0508912031561943E-5	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999772423163302	WITHOUT_CLASSIFICATION	2.2757683669755017E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999674650817094	WITHOUT_CLASSIFICATION	3.253491829061983E-5	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999989701985752	WITHOUT_CLASSIFICATION	1.029801424820006E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999997868952408	WITHOUT_CLASSIFICATION	2.1310475906109035E-7	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9999882195060076	WITHOUT_CLASSIFICATION	1.1780493992451824E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999903922896051	WITHOUT_CLASSIFICATION	9.607710394855986E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999982623707321	WITHOUT_CLASSIFICATION	1.7376292680010981E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999990649197401	WITHOUT_CLASSIFICATION	9.350802598046228E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999990649197401	WITHOUT_CLASSIFICATION	9.350802598046228E-7	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.999997286847198	WITHOUT_CLASSIFICATION	2.713152801920234E-6	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.999999030069375	WITHOUT_CLASSIFICATION	9.699306250342301E-7	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999811890237251	WITHOUT_CLASSIFICATION	1.8810976274908037E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999224664644641	WITHOUT_CLASSIFICATION	7.753353553585121E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999990143662187	WITHOUT_CLASSIFICATION	9.856337812908478E-7	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999995168505809	WITHOUT_CLASSIFICATION	4.831494190563183E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999997868952408	WITHOUT_CLASSIFICATION	2.1310475906109035E-7	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999874550606958	WITHOUT_CLASSIFICATION	1.2544939304135807E-5	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999817660186152	WITHOUT_CLASSIFICATION	1.8233981384878835E-5	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999987831888792	WITHOUT_CLASSIFICATION	1.2168111207349915E-6	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999973633896848	WITHOUT_CLASSIFICATION	2.6366103152076625E-6	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999848657128915	WITHOUT_CLASSIFICATION	1.513428710851148E-5	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.999999000712931	WITHOUT_CLASSIFICATION	9.992870689486515E-7	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999996768010748	WITHOUT_CLASSIFICATION	3.2319892517205743E-7	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999969782351293	WITHOUT_CLASSIFICATION	3.021764870601727E-6	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999998269972105	WITHOUT_CLASSIFICATION	1.7300278952036318E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999613618672489	WITHOUT_CLASSIFICATION	3.863813275113306E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999619214389142	WITHOUT_CLASSIFICATION	3.807856108586012E-5	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999983305268341	WITHOUT_CLASSIFICATION	1.6694731658425765E-6	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.999999435954071	WITHOUT_CLASSIFICATION	5.640459289694625E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.999999435954071	WITHOUT_CLASSIFICATION	5.640459289694625E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999995696441356	WITHOUT_CLASSIFICATION	4.3035586444436315E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999613618672489	WITHOUT_CLASSIFICATION	3.863813275113306E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.999975664461611	WITHOUT_CLASSIFICATION	2.4335538388921817E-5	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999792519746221	WITHOUT_CLASSIFICATION	2.0748025377833395E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999987810396593	WITHOUT_CLASSIFICATION	1.218960340718235E-6	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999997873668611	WITHOUT_CLASSIFICATION	2.1263313885062216E-7	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999987794770078	WITHOUT_CLASSIFICATION	1.2205229921820932E-6	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.999999339683259	WITHOUT_CLASSIFICATION	6.603167408829541E-7	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999994973227396	WITHOUT_CLASSIFICATION	5.02677260418944E-7	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999979289864847	WITHOUT_CLASSIFICATION	2.0710135152376226E-6	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.999997164996491	WITHOUT_CLASSIFICATION	2.835003508947468E-6	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999998893822786	WITHOUT_CLASSIFICATION	1.1061772142904372E-7	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9989228801929274	WITHOUT_CLASSIFICATION	0.00107711980707259	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999791953232307	WITHOUT_CLASSIFICATION	2.0804676769293404E-5	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999975108005906	WITHOUT_CLASSIFICATION	2.48919940925755E-6	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9602126276319065	WITHOUT_CLASSIFICATION	0.03978737236809347	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999992105822766	WITHOUT_CLASSIFICATION	7.894177233446634E-7	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999997558457643	WITHOUT_CLASSIFICATION	2.4415423567739616E-7	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999998865609664	WITHOUT_CLASSIFICATION	1.1343903355434466E-7	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999962363615487	WITHOUT_CLASSIFICATION	3.7636384513074265E-6	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999966641251867	WITHOUT_CLASSIFICATION	3.33587481342452E-6	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999875692436763	WITHOUT_CLASSIFICATION	1.2430756323740442E-5	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999995094787762	WITHOUT_CLASSIFICATION	4.9052122371539E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999613618672489	WITHOUT_CLASSIFICATION	3.863813275113306E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999805111511694	WITHOUT_CLASSIFICATION	1.9488848830650517E-5	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999997742893082	WITHOUT_CLASSIFICATION	2.25710691864037E-7	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9993939080138509	WITHOUT_CLASSIFICATION	6.06091986149049E-4	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999963368444229	WITHOUT_CLASSIFICATION	3.663155577113496E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999981077862131	WITHOUT_CLASSIFICATION	1.8922137869246886E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999993131939263	WITHOUT_CLASSIFICATION	6.868060737094698E-7	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994617775293	WITHOUT_CLASSIFICATION	5.382224707785039E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999613618672489	WITHOUT_CLASSIFICATION	3.863813275113306E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9998788639106961	WITHOUT_CLASSIFICATION	1.2113608930389293E-4	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999995225180319	WITHOUT_CLASSIFICATION	4.774819680496469E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999995225180319	WITHOUT_CLASSIFICATION	4.774819680496469E-7	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999953356081657	WITHOUT_CLASSIFICATION	4.664391834377384E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999953356081657	WITHOUT_CLASSIFICATION	4.664391834377384E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999772554682741	WITHOUT_CLASSIFICATION	2.2744531725901985E-5	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999998061854838	WITHOUT_CLASSIFICATION	1.9381451626147111E-7	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999895539377041	WITHOUT_CLASSIFICATION	1.0446062295808179E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999895539377041	WITHOUT_CLASSIFICATION	1.0446062295808179E-5	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9998844902118286	WITHOUT_CLASSIFICATION	1.1550978817137273E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.999996307053547	WITHOUT_CLASSIFICATION	3.6929464530782397E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999674650817094	WITHOUT_CLASSIFICATION	3.253491829061983E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.99999022247043	WITHOUT_CLASSIFICATION	9.777529570061256E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.99999022247043	WITHOUT_CLASSIFICATION	9.777529570061256E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.99999022247043	WITHOUT_CLASSIFICATION	9.777529570061256E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.999996307053547	WITHOUT_CLASSIFICATION	3.6929464530782397E-6	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999998885883031	WITHOUT_CLASSIFICATION	1.1141169682979036E-7	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999517248013655	WITHOUT_CLASSIFICATION	4.827519863450733E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9999955422906465	WITHOUT_CLASSIFICATION	4.457709353466607E-6	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.999927591408722	WITHOUT_CLASSIFICATION	7.240859127801444E-5	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999997718280873	WITHOUT_CLASSIFICATION	2.281719127087298E-7	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999968113598485	WITHOUT_CLASSIFICATION	3.188640151467602E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999993937095892	WITHOUT_CLASSIFICATION	6.062904107127839E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999995769705151	WITHOUT_CLASSIFICATION	4.230294848729143E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999962553355545	WITHOUT_CLASSIFICATION	3.744664445524725E-6	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.99999992025195	WITHOUT_CLASSIFICATION	7.974805013830287E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999940207291849	WITHOUT_CLASSIFICATION	5.9792708152245935E-6	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999998811161969	WITHOUT_CLASSIFICATION	1.1888380322888869E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999971283778477	WITHOUT_CLASSIFICATION	2.871622152409984E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.99999138788593	WITHOUT_CLASSIFICATION	8.612114070034287E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999951185797119	WITHOUT_CLASSIFICATION	4.88142028813265E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998640909068	WITHOUT_CLASSIFICATION	1.3590909326591921E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999774974663668	WITHOUT_CLASSIFICATION	2.250253363320776E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999992711390415	WITHOUT_CLASSIFICATION	7.288609584398699E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999997777400174	WITHOUT_CLASSIFICATION	2.2225998264183598E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999976297896969	WITHOUT_CLASSIFICATION	2.370210303186162E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999996616535803	WITHOUT_CLASSIFICATION	3.3834641973658175E-7	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999993164870161	WITHOUT_CLASSIFICATION	6.835129838446235E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999997579232409	WITHOUT_CLASSIFICATION	2.420767590998718E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999968006365375	WITHOUT_CLASSIFICATION	3.199363462508189E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.999999924213572	WITHOUT_CLASSIFICATION	7.57864279875703E-8	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999998363037823	WITHOUT_CLASSIFICATION	1.6369621771409296E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999949149486357	WITHOUT_CLASSIFICATION	5.085051364359994E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999986207452154	WITHOUT_CLASSIFICATION	1.3792547845448537E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999904443228945	WITHOUT_CLASSIFICATION	9.555677105344035E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999999635025295	WITHOUT_CLASSIFICATION	3.6497470496774926E-7	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999981158294936	WITHOUT_CLASSIFICATION	1.884170506332925E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9992871270690179	WITHOUT_CLASSIFICATION	7.128729309821233E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999973926235107	WITHOUT_CLASSIFICATION	2.6073764893642313E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999586551543	WITHOUT_CLASSIFICATION	4.134484555428023E-8	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999995707569028	WITHOUT_CLASSIFICATION	4.2924309715132673E-7	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999999159837315	WITHOUT_CLASSIFICATION	8.401626849567962E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999968525691557	WITHOUT_CLASSIFICATION	3.1474308442908023E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999985928467068	WITHOUT_CLASSIFICATION	1.4071532931473644E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999852281031061	WITHOUT_CLASSIFICATION	1.4771896893954282E-5	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.999998353702513	WITHOUT_CLASSIFICATION	1.6462974869839059E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999968525691557	WITHOUT_CLASSIFICATION	3.1474308442908023E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999973964732147	WITHOUT_CLASSIFICATION	2.603526785326271E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999978910505054	WITHOUT_CLASSIFICATION	2.108949494614384E-6	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999991032872937	WITHOUT_CLASSIFICATION	8.967127062691264E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999946304861985	WITHOUT_CLASSIFICATION	5.369513801524085E-6	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999927968661201	WITHOUT_CLASSIFICATION	7.203133880011497E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999852281031061	WITHOUT_CLASSIFICATION	1.4771896893954282E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999946304861985	WITHOUT_CLASSIFICATION	5.369513801524085E-6	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999970505442427	WITHOUT_CLASSIFICATION	2.949455757211098E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999995244939275	WITHOUT_CLASSIFICATION	4.755060725493084E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999998132219626	WITHOUT_CLASSIFICATION	1.867780374012761E-7	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999998789160056	WITHOUT_CLASSIFICATION	1.210839944673357E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999955490032642	WITHOUT_CLASSIFICATION	4.450996735779071E-6	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9999604391348119	WITHOUT_CLASSIFICATION	3.956086518801055E-5	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999798480910342	WITHOUT_CLASSIFICATION	2.0151908965725107E-5	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999965868967717	WITHOUT_CLASSIFICATION	3.4131032281276147E-6	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.999891135308087	WITHOUT_CLASSIFICATION	1.0886469191288784E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999933317548461	WITHOUT_CLASSIFICATION	6.6682451538544984E-6	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999455861575393	WITHOUT_CLASSIFICATION	5.4413842460634175E-5	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9998757760002139	WITHOUT_CLASSIFICATION	1.2422399978607798E-4	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999994723646208	WITHOUT_CLASSIFICATION	5.276353790985373E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999956321379231	WITHOUT_CLASSIFICATION	4.367862076859464E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999981116416746	WITHOUT_CLASSIFICATION	1.8883583253980624E-6	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999999470439362	WITHOUT_CLASSIFICATION	5.2956063695325076E-8	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999997516726695	WITHOUT_CLASSIFICATION	2.4832733039962454E-7	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999995867329831	WITHOUT_CLASSIFICATION	4.132670169302556E-7	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999997909787653	WITHOUT_CLASSIFICATION	2.0902123469141513E-7	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.999989376947715	WITHOUT_CLASSIFICATION	1.0623052285188438E-5	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999890488745197	WITHOUT_CLASSIFICATION	1.0951125480433707E-5	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.999999967242485	WITHOUT_CLASSIFICATION	3.275751505383738E-8	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999998405577729	WITHOUT_CLASSIFICATION	1.5944222707374571E-7	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999997890098848	WITHOUT_CLASSIFICATION	2.1099011520807714E-7	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999987169890644	WITHOUT_CLASSIFICATION	1.2830109355014424E-6	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9999618991075507	WITHOUT_CLASSIFICATION	3.8100892449345E-5	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999927390030365	WITHOUT_CLASSIFICATION	7.26099696352536E-6	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999991180702889	WITHOUT_CLASSIFICATION	8.819297112594554E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999994941330189	WITHOUT_CLASSIFICATION	5.058669810869072E-7	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999994845431085	WITHOUT_CLASSIFICATION	5.154568914543354E-7	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999985695583089	WITHOUT_CLASSIFICATION	1.430441691175281E-6	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999981278859458	WITHOUT_CLASSIFICATION	1.8721140542209498E-6	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.999999014898622	WITHOUT_CLASSIFICATION	9.851013781175553E-7	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999947994776438	WITHOUT_CLASSIFICATION	5.2005223561195915E-6	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999993440662563	WITHOUT_CLASSIFICATION	6.559337435880723E-7	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.999993866528062	WITHOUT_CLASSIFICATION	6.133471937986221E-6	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.999982933222069	WITHOUT_CLASSIFICATION	1.7066777931020985E-5	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999971610119214	WITHOUT_CLASSIFICATION	2.8389880786348423E-6	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999936535339556	WITHOUT_CLASSIFICATION	6.346466044310253E-6	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999691195458547	WITHOUT_CLASSIFICATION	3.088045414534554E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999951636535883	WITHOUT_CLASSIFICATION	4.8363464117259645E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999939781576601	WITHOUT_CLASSIFICATION	6.021842339891265E-6	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999972533974022	WITHOUT_CLASSIFICATION	2.7466025978034845E-6	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999996616665707	WITHOUT_CLASSIFICATION	3.3833342925292275E-7	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999980993104934	WITHOUT_CLASSIFICATION	1.900689506650341E-6	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.999997461183789	WITHOUT_CLASSIFICATION	2.5388162110570762E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999515494748245	WITHOUT_CLASSIFICATION	4.8450525175446966E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999976163462071	WITHOUT_CLASSIFICATION	2.3836537929647856E-6	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999797007674875	WITHOUT_CLASSIFICATION	2.0299232512492034E-5	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999666007805	WITHOUT_CLASSIFICATION	3.3399219448668065E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999687700833805	WITHOUT_CLASSIFICATION	3.122991661950058E-5	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9998499041739387	WITHOUT_CLASSIFICATION	1.5009582606129287E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9999899046286317	WITHOUT_CLASSIFICATION	1.0095371368387177E-5	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999879499341631	WITHOUT_CLASSIFICATION	1.2050065836961215E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999814266138379	WITHOUT_CLASSIFICATION	1.8573386162096816E-5	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999998282395952	WITHOUT_CLASSIFICATION	1.7176040482500025E-7	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999997326909091	WITHOUT_CLASSIFICATION	2.6730909087323063E-7	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999978396953249	WITHOUT_CLASSIFICATION	2.1603046751898175E-6	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999989595981152	WITHOUT_CLASSIFICATION	1.0404018847672493E-6	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999982556999404	WITHOUT_CLASSIFICATION	1.7443000595747134E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999992073863538	WITHOUT_CLASSIFICATION	7.92613646018394E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999939817033769	WITHOUT_CLASSIFICATION	6.018296622979719E-6	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9999986758908762	WITHOUT_CLASSIFICATION	1.3241091237714195E-6	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9998274341391377	WITHOUT_CLASSIFICATION	1.7256586086245243E-4	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999990356184473	WITHOUT_CLASSIFICATION	9.643815527312984E-7	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999810258422209	WITHOUT_CLASSIFICATION	1.897415777912086E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999987631245999	WITHOUT_CLASSIFICATION	1.2368754000821453E-6	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999903922896051	WITHOUT_CLASSIFICATION	9.607710394855986E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999982623707321	WITHOUT_CLASSIFICATION	1.7376292680010981E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999995168505809	WITHOUT_CLASSIFICATION	4.831494190563183E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999939817033769	WITHOUT_CLASSIFICATION	6.018296622979719E-6	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999810258422209	WITHOUT_CLASSIFICATION	1.897415777912086E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999987631245999	WITHOUT_CLASSIFICATION	1.2368754000821453E-6	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999997606125514	WITHOUT_CLASSIFICATION	2.3938744865180756E-7	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999995886395707	WITHOUT_CLASSIFICATION	4.113604292568999E-7	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999115065125934	WITHOUT_CLASSIFICATION	8.849348740658111E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999977301224642	WITHOUT_CLASSIFICATION	2.2698775357583647E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999970420465514	WITHOUT_CLASSIFICATION	2.957953448509184E-6	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999287425154	WITHOUT_CLASSIFICATION	7.125748459987392E-8	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999997767755312	WITHOUT_CLASSIFICATION	2.2322446884890724E-7	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999984125014426	WITHOUT_CLASSIFICATION	1.5874985575135277E-6	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999986136774462	WITHOUT_CLASSIFICATION	1.3863225537300583E-6	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9999942829682951	WITHOUT_CLASSIFICATION	5.717031704858258E-6	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999998794870798	WITHOUT_CLASSIFICATION	1.2051292029822073E-7	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9999272332387928	WITHOUT_CLASSIFICATION	7.276676120722667E-5	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999997135123536	WITHOUT_CLASSIFICATION	2.8648764631002306E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999977349978645	WITHOUT_CLASSIFICATION	2.265002135592602E-6	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999992973615323	WITHOUT_CLASSIFICATION	7.02638467703523E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999996053585092	WITHOUT_CLASSIFICATION	3.946414907093471E-7	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999970948528254	WITHOUT_CLASSIFICATION	2.9051471744688723E-6	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999954759403934	WITHOUT_CLASSIFICATION	4.5240596066583214E-6	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999994965834941	WITHOUT_CLASSIFICATION	5.034165059339419E-7	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999988504530278	WITHOUT_CLASSIFICATION	1.1495469721642588E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999990026093323	WITHOUT_CLASSIFICATION	9.973906677555863E-7	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999974779435926	WITHOUT_CLASSIFICATION	2.522056407361129E-6	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999982556999404	WITHOUT_CLASSIFICATION	1.7443000595747134E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999992073863538	WITHOUT_CLASSIFICATION	7.92613646018394E-7	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.999999715038466	WITHOUT_CLASSIFICATION	2.8496153409800567E-7	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999991777360716	WITHOUT_CLASSIFICATION	8.222639283640589E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999982621621966	WITHOUT_CLASSIFICATION	1.7378378034796503E-6	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999983588016002	WITHOUT_CLASSIFICATION	1.6411983998763147E-6	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999861005166409	WITHOUT_CLASSIFICATION	1.3899483359141937E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999969553932929	WITHOUT_CLASSIFICATION	3.0446067071732406E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9998486117244835	WITHOUT_CLASSIFICATION	1.5138827551659516E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999974821710316	WITHOUT_CLASSIFICATION	2.517828968529239E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999875539082439	WITHOUT_CLASSIFICATION	1.2446091756176122E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999875539082439	WITHOUT_CLASSIFICATION	1.2446091756176122E-5	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999998038088304	WITHOUT_CLASSIFICATION	1.9619116954343746E-7	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999847039007922	WITHOUT_CLASSIFICATION	1.529609920781229E-5	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999998803017021	WITHOUT_CLASSIFICATION	1.1969829797843352E-7	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999987971213742	WITHOUT_CLASSIFICATION	1.202878625721014E-6	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999999641877764	WITHOUT_CLASSIFICATION	3.581222374291363E-8	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999995990342896	WITHOUT_CLASSIFICATION	4.0096571051464586E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999939956420082	WITHOUT_CLASSIFICATION	6.004357991784375E-6	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999939956420082	WITHOUT_CLASSIFICATION	6.004357991784375E-6	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999997168448783	WITHOUT_CLASSIFICATION	2.831551216927825E-7	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999985357909519	WITHOUT_CLASSIFICATION	1.464209048140569E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999904802831837	WITHOUT_CLASSIFICATION	9.519716816229452E-6	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999994935258345	WITHOUT_CLASSIFICATION	5.06474165450794E-7	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999995481317926	WITHOUT_CLASSIFICATION	4.518682074512104E-7	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999821291173925	WITHOUT_CLASSIFICATION	1.787088260752158E-5	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999996440145441	WITHOUT_CLASSIFICATION	3.5598545585409506E-7	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999998444537977	WITHOUT_CLASSIFICATION	1.555462022944779E-7	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999996230147405	WITHOUT_CLASSIFICATION	3.7698525953435026E-7	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999973482129877	WITHOUT_CLASSIFICATION	2.651787012216898E-6	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999987353571721	WITHOUT_CLASSIFICATION	1.2646428279236132E-6	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999828321704	WITHOUT_CLASSIFICATION	1.7167829539602568E-8	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9997383750774195	WITHOUT_CLASSIFICATION	2.6162492258054745E-4	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999973085203541	WITHOUT_CLASSIFICATION	2.6914796460072612E-6	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.999999149565653	WITHOUT_CLASSIFICATION	8.504343469950103E-7	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999780603323629	WITHOUT_CLASSIFICATION	2.1939667637115346E-5	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999997024244924	WITHOUT_CLASSIFICATION	2.975755074955591E-7	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999999155615699	WITHOUT_CLASSIFICATION	8.44384301920494E-8	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999999337629315	WITHOUT_CLASSIFICATION	6.623706852867155E-8	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.999998172711225	WITHOUT_CLASSIFICATION	1.8272887749224718E-6	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999983338370784	WITHOUT_CLASSIFICATION	1.6661629216887959E-6	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999994662220046	WITHOUT_CLASSIFICATION	5.337779954091438E-7	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999999883575239	WITHOUT_CLASSIFICATION	1.1642476044900047E-8	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999217717979405	WITHOUT_CLASSIFICATION	7.822820205951336E-5	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999971316942216	WITHOUT_CLASSIFICATION	2.8683057784572887E-6	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999946449734342	WITHOUT_CLASSIFICATION	5.355026565907135E-6	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.999995920162664	WITHOUT_CLASSIFICATION	4.07983733598648E-6	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999855227560381	WITHOUT_CLASSIFICATION	1.4477243961858128E-5	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999992932160645	WITHOUT_CLASSIFICATION	7.067839354053557E-7	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999945249481617	WITHOUT_CLASSIFICATION	5.4750518383176216E-6	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999998372264107	WITHOUT_CLASSIFICATION	1.6277358928136988E-7	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999970797660368	WITHOUT_CLASSIFICATION	2.9202339631972203E-6	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999892260992634	WITHOUT_CLASSIFICATION	1.0773900736593068E-5	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999847306586283	WITHOUT_CLASSIFICATION	1.5269341371746967E-5	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9999810378364806	WITHOUT_CLASSIFICATION	1.896216351945892E-5	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999852895793413	WITHOUT_CLASSIFICATION	1.4710420658646564E-5	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999990549702148	WITHOUT_CLASSIFICATION	9.450297853191664E-7	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999973803918278	WITHOUT_CLASSIFICATION	2.619608172099965E-6	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999999188970864	WITHOUT_CLASSIFICATION	8.11029136937159E-8	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999960233619475	WITHOUT_CLASSIFICATION	3.976638052532277E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999995629994294	WITHOUT_CLASSIFICATION	4.3700057070646456E-7	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999998519013675	WITHOUT_CLASSIFICATION	1.4809863252170022E-7	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999990159826277	WITHOUT_CLASSIFICATION	9.840173722686534E-7	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999992445669571	WITHOUT_CLASSIFICATION	7.554330428899773E-7	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9995247204711042	WITHOUT_CLASSIFICATION	4.752795288957907E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999995629994294	WITHOUT_CLASSIFICATION	4.3700057070646456E-7	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999990159826277	WITHOUT_CLASSIFICATION	9.840173722686534E-7	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999799114576472	WITHOUT_CLASSIFICATION	2.008854235284117E-5	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999983299608839	WITHOUT_CLASSIFICATION	1.6700391161591832E-6	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999888027634192	WITHOUT_CLASSIFICATION	1.1197236580813204E-5	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999940293714703	WITHOUT_CLASSIFICATION	5.970628529710415E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999960233619475	WITHOUT_CLASSIFICATION	3.976638052532277E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999960233619475	WITHOUT_CLASSIFICATION	3.976638052532277E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999995629994294	WITHOUT_CLASSIFICATION	4.3700057070646456E-7	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999991248882096	WITHOUT_CLASSIFICATION	8.7511179047415E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999992303454891	WITHOUT_CLASSIFICATION	7.696545109614189E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999997853234905	WITHOUT_CLASSIFICATION	2.1467650946852408E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999997853234905	WITHOUT_CLASSIFICATION	2.1467650946852408E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999997924851453	WITHOUT_CLASSIFICATION	2.0751485479385968E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999994224349972	WITHOUT_CLASSIFICATION	5.775650028981194E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999987827928285	WITHOUT_CLASSIFICATION	1.2172071715362496E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999987827928285	WITHOUT_CLASSIFICATION	1.2172071715362496E-6	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999992379341086	WITHOUT_CLASSIFICATION	7.620658914383752E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999994224349972	WITHOUT_CLASSIFICATION	5.775650028981194E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999987827928285	WITHOUT_CLASSIFICATION	1.2172071715362496E-6	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999992379341086	WITHOUT_CLASSIFICATION	7.620658914383752E-7	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999991911599663	WITHOUT_CLASSIFICATION	8.088400336482781E-7	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999998470614885	WITHOUT_CLASSIFICATION	1.5293851150283183E-7	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999995493120963	WITHOUT_CLASSIFICATION	4.506879036527727E-7	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999989194087182	WITHOUT_CLASSIFICATION	1.080591281800042E-6	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999985572225638	WITHOUT_CLASSIFICATION	1.442777436134872E-6	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999988542432583	WITHOUT_CLASSIFICATION	1.1457567417281167E-6	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999996463633765	WITHOUT_CLASSIFICATION	3.536366235769327E-7	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.999995950695147	WITHOUT_CLASSIFICATION	4.049304852979671E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9999996945296997	WITHOUT_CLASSIFICATION	3.0547030031492904E-7	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999977373925822	WITHOUT_CLASSIFICATION	2.262607417728172E-6	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999995397100251	WITHOUT_CLASSIFICATION	4.602899748705613E-7	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999998142227687	WITHOUT_CLASSIFICATION	1.857772311859977E-7	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999995969851477	WITHOUT_CLASSIFICATION	4.0301485222119734E-7	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999998157623845	WITHOUT_CLASSIFICATION	1.842376154587171E-7	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999731517456935	WITHOUT_CLASSIFICATION	2.6848254306581796E-5	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999996241078724	WITHOUT_CLASSIFICATION	3.7589212757167064E-7	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999997417305707	WITHOUT_CLASSIFICATION	2.5826942922218107E-7	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999996804376645	WITHOUT_CLASSIFICATION	3.1956233544062266E-7	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999999353225572	WITHOUT_CLASSIFICATION	6.467744287749833E-8	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999991534239093	WITHOUT_CLASSIFICATION	8.465760906974475E-7	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999998625971063	WITHOUT_CLASSIFICATION	1.374028936825057E-7	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999998573898273	WITHOUT_CLASSIFICATION	1.426101726747139E-7	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999133998434	WITHOUT_CLASSIFICATION	8.660015651476472E-8	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999998143726189	WITHOUT_CLASSIFICATION	1.8562738114599047E-7	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999996072083446	WITHOUT_CLASSIFICATION	3.927916555023832E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999995215451695	WITHOUT_CLASSIFICATION	4.784548305048674E-7	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999997752646658	WITHOUT_CLASSIFICATION	2.2473533433502281E-7	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.999994953275886	WITHOUT_CLASSIFICATION	5.04672411405921E-6	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999997961222117	WITHOUT_CLASSIFICATION	2.0387778836326974E-7	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999998921956945	WITHOUT_CLASSIFICATION	1.0780430546453728E-7	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999983552787045	WITHOUT_CLASSIFICATION	1.6447212955047018E-6	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999798846089472	WITHOUT_CLASSIFICATION	2.0115391052829725E-5	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999937941278697	WITHOUT_CLASSIFICATION	6.205872130255365E-6	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999853545732694	WITHOUT_CLASSIFICATION	1.4645426730600986E-5	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999911818639406	WITHOUT_CLASSIFICATION	8.818136059348261E-6	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999988786717747	WITHOUT_CLASSIFICATION	1.121328225334627E-6	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999997607793463	WITHOUT_CLASSIFICATION	2.3922065370645013E-7	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999945549004888	WITHOUT_CLASSIFICATION	5.445099511141885E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999994529596597	WITHOUT_CLASSIFICATION	5.470403403106309E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999994529596597	WITHOUT_CLASSIFICATION	5.470403403106309E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999994529596597	WITHOUT_CLASSIFICATION	5.470403403106309E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999999525306397	WITHOUT_CLASSIFICATION	4.74693602086599E-8	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999968831580657	WITHOUT_CLASSIFICATION	3.116841934290231E-6	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999783875648623	WITHOUT_CLASSIFICATION	2.1612435137609653E-5	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999658169198645	WITHOUT_CLASSIFICATION	3.418308013556456E-5	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999978670964247	WITHOUT_CLASSIFICATION	2.132903575238331E-6	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.999969566451601	WITHOUT_CLASSIFICATION	3.0433548399107793E-5	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999722682708	WITHOUT_CLASSIFICATION	2.7731729209810884E-8	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999999756226605	WITHOUT_CLASSIFICATION	2.437733948449411E-8	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999998176384017	WITHOUT_CLASSIFICATION	1.8236159818433483E-7	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999994739596335	WITHOUT_CLASSIFICATION	5.260403664879052E-7	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999997319134953	WITHOUT_CLASSIFICATION	2.6808650464548335E-7	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999936013023815	WITHOUT_CLASSIFICATION	6.39869761852935E-6	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.99999979611722	WITHOUT_CLASSIFICATION	2.0388278010898947E-7	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999902706551924	WITHOUT_CLASSIFICATION	9.729344807525595E-6	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999987953489645	WITHOUT_CLASSIFICATION	1.20465103549492E-6	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999998175638348	WITHOUT_CLASSIFICATION	1.824361652127249E-7	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999961278830174	WITHOUT_CLASSIFICATION	3.872116982553955E-6	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999997443569247	WITHOUT_CLASSIFICATION	2.5564307519254347E-7	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.999998270004354	WITHOUT_CLASSIFICATION	1.7299956459123194E-6	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999960952471081	WITHOUT_CLASSIFICATION	3.90475289194137E-6	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.999988782927389	WITHOUT_CLASSIFICATION	1.12170726110049E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999996518409742	WITHOUT_CLASSIFICATION	3.481590257655773E-7	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999916148057565	WITHOUT_CLASSIFICATION	8.385194243441637E-6	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.999955880901313	WITHOUT_CLASSIFICATION	4.411909868704464E-5	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999999193466069	WITHOUT_CLASSIFICATION	8.065339306179973E-8	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9993297856657857	WITHOUT_CLASSIFICATION	6.702143342142276E-4	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999965557230884	WITHOUT_CLASSIFICATION	3.44427691144236E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999988786980579	WITHOUT_CLASSIFICATION	1.1213019420036533E-6	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999916715427603	WITHOUT_CLASSIFICATION	8.328457239743403E-6	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999986436256715	WITHOUT_CLASSIFICATION	1.3563743285852626E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999651041759463	WITHOUT_CLASSIFICATION	3.489582405369036E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999954270768571	WITHOUT_CLASSIFICATION	4.572923142970164E-6	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9999029925390318	WITHOUT_CLASSIFICATION	9.700746096813285E-5	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999999806048031	WITHOUT_CLASSIFICATION	1.9395196868762498E-8	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999913328257188	WITHOUT_CLASSIFICATION	8.667174281225118E-6	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999997601084358	WITHOUT_CLASSIFICATION	2.398915642117808E-7	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999992277372214	WITHOUT_CLASSIFICATION	7.722627786704352E-7	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999916745090321	WITHOUT_CLASSIFICATION	8.325490967812345E-6	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999979030247884	WITHOUT_CLASSIFICATION	2.0969752115152323E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999770140760509	WITHOUT_CLASSIFICATION	2.2985923949070974E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999973293119052	WITHOUT_CLASSIFICATION	2.670688094773939E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999745525389019	WITHOUT_CLASSIFICATION	2.544746109815828E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999969553932929	WITHOUT_CLASSIFICATION	3.0446067071732406E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999957406311806	WITHOUT_CLASSIFICATION	4.25936881945664E-6	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999967294205235	WITHOUT_CLASSIFICATION	3.2705794764822474E-6	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999993917093247	WITHOUT_CLASSIFICATION	6.082906752007411E-7	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9999986132163885	WITHOUT_CLASSIFICATION	1.386783611552877E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.999990722336316	WITHOUT_CLASSIFICATION	9.277663683982954E-6	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9999988800946561	WITHOUT_CLASSIFICATION	1.11990534399533E-6	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999999229378741	WITHOUT_CLASSIFICATION	7.70621259186706E-8	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999993479175499	WITHOUT_CLASSIFICATION	6.520824501642425E-7	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999903033317141	WITHOUT_CLASSIFICATION	9.696668285896072E-6	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.999999830464834	WITHOUT_CLASSIFICATION	1.6953516613305703E-7	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999616834968965	WITHOUT_CLASSIFICATION	3.831650310349361E-5	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.999997245230286	WITHOUT_CLASSIFICATION	2.7547697140765543E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999988236046428	WITHOUT_CLASSIFICATION	1.1763953572239016E-6	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999910512856547	WITHOUT_CLASSIFICATION	8.948714345311586E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999988285053655	WITHOUT_CLASSIFICATION	1.1714946345057095E-6	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999989023369543	WITHOUT_CLASSIFICATION	1.0976630456406466E-6	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999998434229793	WITHOUT_CLASSIFICATION	1.5657702079412765E-7	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999989960294181	WITHOUT_CLASSIFICATION	1.0039705818621533E-6	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999936872760468	WITHOUT_CLASSIFICATION	6.312723953139523E-6	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999970893343478	WITHOUT_CLASSIFICATION	2.910665652193316E-6	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.999999630794115	WITHOUT_CLASSIFICATION	3.692058849814104E-7	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9999992132918634	WITHOUT_CLASSIFICATION	7.867081365986847E-7	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999984790138958	WITHOUT_CLASSIFICATION	1.5209861042298082E-6	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999962615197112	WITHOUT_CLASSIFICATION	3.7384802887731144E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999948707156526	WITHOUT_CLASSIFICATION	5.129284347336752E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999948707156526	WITHOUT_CLASSIFICATION	5.129284347336752E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999964091591647	WITHOUT_CLASSIFICATION	3.590840835320532E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999964091591647	WITHOUT_CLASSIFICATION	3.590840835320532E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999984790138958	WITHOUT_CLASSIFICATION	1.5209861042298082E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999964091591647	WITHOUT_CLASSIFICATION	3.590840835320532E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.999999718296968	WITHOUT_CLASSIFICATION	2.817030319727825E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.999997894633599	WITHOUT_CLASSIFICATION	2.1053664009383756E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.999997894633599	WITHOUT_CLASSIFICATION	2.1053664009383756E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999933009555766	WITHOUT_CLASSIFICATION	6.69904442342335E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999992489610363	WITHOUT_CLASSIFICATION	7.510389637826644E-7	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999835864014751	WITHOUT_CLASSIFICATION	1.641359852482176E-5	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9999599281025418	WITHOUT_CLASSIFICATION	4.007189745821501E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999997104033043	WITHOUT_CLASSIFICATION	2.895966957014229E-7	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999998129788478	WITHOUT_CLASSIFICATION	1.870211523078122E-7	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.999999269469823	WITHOUT_CLASSIFICATION	7.305301769445071E-7	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9998934556831502	WITHOUT_CLASSIFICATION	1.0654431684978614E-4	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9998937757496436	WITHOUT_CLASSIFICATION	1.0622425035636772E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999740745315755	WITHOUT_CLASSIFICATION	2.5925468424446306E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999933124429822	WITHOUT_CLASSIFICATION	6.687557017863253E-6	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999969523053869	WITHOUT_CLASSIFICATION	3.0476946130500676E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999991475745187	WITHOUT_CLASSIFICATION	8.524254812552214E-7	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999998205886583	WITHOUT_CLASSIFICATION	1.7941134167621646E-7	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999978918969189	WITHOUT_CLASSIFICATION	2.108103081021514E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999998021143593	WITHOUT_CLASSIFICATION	1.9788564062938873E-7	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999997347927351	WITHOUT_CLASSIFICATION	2.652072649831495E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9999192939860516	WITHOUT_CLASSIFICATION	8.070601394835711E-5	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9999835852465333	WITHOUT_CLASSIFICATION	1.641475346673181E-5	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999999511219007	WITHOUT_CLASSIFICATION	4.887809931475825E-8	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999998225000027	WITHOUT_CLASSIFICATION	1.7749999724179337E-7	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999832434850716	WITHOUT_CLASSIFICATION	1.675651492840012E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999985161902453	WITHOUT_CLASSIFICATION	1.4838097547671352E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.999998023593963	WITHOUT_CLASSIFICATION	1.9764060370009385E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.999998023593963	WITHOUT_CLASSIFICATION	1.9764060370009385E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999813959887207	WITHOUT_CLASSIFICATION	1.8604011279283297E-5	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999975500445988	WITHOUT_CLASSIFICATION	2.4499554012546394E-6	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999476223683812	WITHOUT_CLASSIFICATION	5.2377631618736016E-5	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999971320964854	WITHOUT_CLASSIFICATION	2.867903514614268E-6	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.999941232635949	WITHOUT_CLASSIFICATION	5.8767364050941975E-5	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999957620251865	WITHOUT_CLASSIFICATION	4.2379748136019625E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999954858678491	WITHOUT_CLASSIFICATION	4.51413215088231E-6	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9999975646733812	WITHOUT_CLASSIFICATION	2.4353266189155562E-6	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999970925303451	WITHOUT_CLASSIFICATION	2.9074696549245097E-6	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9993960668726091	WITHOUT_CLASSIFICATION	6.039331273909213E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.999999363583766	WITHOUT_CLASSIFICATION	6.364162340502135E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999721785117655	WITHOUT_CLASSIFICATION	2.7821488234424373E-5	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999975426313487	WITHOUT_CLASSIFICATION	2.457368651329729E-6	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9998117466888936	WITHOUT_CLASSIFICATION	1.8825331110638072E-4	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999981218666197	WITHOUT_CLASSIFICATION	1.878133380200252E-6	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999949128622657	WITHOUT_CLASSIFICATION	5.087137734283219E-6	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999350966481808	WITHOUT_CLASSIFICATION	6.49033518192237E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999980469951287	WITHOUT_CLASSIFICATION	1.9530048712270817E-6	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999958060342773	WITHOUT_CLASSIFICATION	4.193965722743872E-6	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999747308551288	WITHOUT_CLASSIFICATION	2.5269144871241886E-5	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.999996898395683	WITHOUT_CLASSIFICATION	3.101604317082793E-6	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9998961488868426	WITHOUT_CLASSIFICATION	1.0385111315739537E-4	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999992648235668	WITHOUT_CLASSIFICATION	7.351764331488682E-7	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999960602247793	WITHOUT_CLASSIFICATION	3.939775220724856E-6	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999945753621453	WITHOUT_CLASSIFICATION	5.424637854728184E-6	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999995678617902	WITHOUT_CLASSIFICATION	4.3213820978853666E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999990839898482	WITHOUT_CLASSIFICATION	9.160101517541498E-7	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999996833725213	WITHOUT_CLASSIFICATION	3.166274786888016E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999198936872	WITHOUT_CLASSIFICATION	8.010631279761908E-8	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999994578339151	WITHOUT_CLASSIFICATION	5.421660850037672E-7	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999975129286705	WITHOUT_CLASSIFICATION	2.4870713294216093E-6	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999999508540737	WITHOUT_CLASSIFICATION	4.914592640370071E-8	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999997612861742	WITHOUT_CLASSIFICATION	2.3871382580443794E-7	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.999994028409675	WITHOUT_CLASSIFICATION	5.971590325032336E-6	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9999164418565835	WITHOUT_CLASSIFICATION	8.355814341647808E-5	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.999967190688488	WITHOUT_CLASSIFICATION	3.2809311512025475E-5	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999980993879675	WITHOUT_CLASSIFICATION	1.9006120324727014E-6	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999997372769364	WITHOUT_CLASSIFICATION	2.6272306364246243E-7	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999422843462709	WITHOUT_CLASSIFICATION	5.771565372928288E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9999787535982599	WITHOUT_CLASSIFICATION	2.1246401740036633E-5	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999969437218246	WITHOUT_CLASSIFICATION	3.056278175347721E-6	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999992794479347	WITHOUT_CLASSIFICATION	7.205520653062182E-7	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999989316647456	WITHOUT_CLASSIFICATION	1.0683352544035805E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999993937095892	WITHOUT_CLASSIFICATION	6.062904107127839E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999995769705151	WITHOUT_CLASSIFICATION	4.230294848729143E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999970925303451	WITHOUT_CLASSIFICATION	2.9074696549245097E-6	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9993960668726091	WITHOUT_CLASSIFICATION	6.039331273909213E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.999999363583766	WITHOUT_CLASSIFICATION	6.364162340502135E-7	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999957403026479	WITHOUT_CLASSIFICATION	4.259697352094862E-6	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999936078503223	WITHOUT_CLASSIFICATION	6.392149677678739E-6	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999961174719703	WITHOUT_CLASSIFICATION	3.882528029779206E-6	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999997261723028	WITHOUT_CLASSIFICATION	2.7382769717453746E-7	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999954566852476	WITHOUT_CLASSIFICATION	4.543314752418669E-6	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999989479598149	WITHOUT_CLASSIFICATION	1.0520401849805591E-6	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999961752004478	WITHOUT_CLASSIFICATION	3.824799552191315E-6	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9997784744218945	WITHOUT_CLASSIFICATION	2.2152557810541524E-4	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.999999812004631	WITHOUT_CLASSIFICATION	1.8799536897329022E-7	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999812823687111	WITHOUT_CLASSIFICATION	1.8717631288952354E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999974181160909	WITHOUT_CLASSIFICATION	2.581883909060322E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999974181160909	WITHOUT_CLASSIFICATION	2.581883909060322E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999974917216253	WITHOUT_CLASSIFICATION	2.508278374613725E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999747392865647	WITHOUT_CLASSIFICATION	2.526071343532402E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999985352105754	WITHOUT_CLASSIFICATION	1.4647894246566662E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999967902509515	WITHOUT_CLASSIFICATION	3.2097490485137814E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999963303415694	WITHOUT_CLASSIFICATION	3.669658430522062E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999997226171669	WITHOUT_CLASSIFICATION	2.773828331673968E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999997287101876	WITHOUT_CLASSIFICATION	2.7128981244340073E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999983481186029	WITHOUT_CLASSIFICATION	1.6518813971985348E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999993149525159	WITHOUT_CLASSIFICATION	6.850474840542638E-7	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999998099715347	WITHOUT_CLASSIFICATION	1.9002846519486248E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999995736796832	WITHOUT_CLASSIFICATION	4.2632031684517324E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999953152919672	WITHOUT_CLASSIFICATION	4.684708032799382E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999993874391877	WITHOUT_CLASSIFICATION	6.125608122395186E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999731817176661	WITHOUT_CLASSIFICATION	2.6818282333891458E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999890015360744	WITHOUT_CLASSIFICATION	1.0998463925747408E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999953045019903	WITHOUT_CLASSIFICATION	4.6954980097122235E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999991923336903	WITHOUT_CLASSIFICATION	8.076663096565214E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999962553355545	WITHOUT_CLASSIFICATION	3.744664445524725E-6	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.99999992025195	WITHOUT_CLASSIFICATION	7.974805013830287E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999940207291849	WITHOUT_CLASSIFICATION	5.9792708152245935E-6	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999998811161969	WITHOUT_CLASSIFICATION	1.1888380322888869E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999971283778477	WITHOUT_CLASSIFICATION	2.871622152409984E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.99999138788593	WITHOUT_CLASSIFICATION	8.612114070034287E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999951185797119	WITHOUT_CLASSIFICATION	4.88142028813265E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998640909068	WITHOUT_CLASSIFICATION	1.3590909326591921E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999774974663668	WITHOUT_CLASSIFICATION	2.250253363320776E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999992711390415	WITHOUT_CLASSIFICATION	7.288609584398699E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999997777400174	WITHOUT_CLASSIFICATION	2.2225998264183598E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999976297896969	WITHOUT_CLASSIFICATION	2.370210303186162E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999996616535803	WITHOUT_CLASSIFICATION	3.3834641973658175E-7	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999993164870161	WITHOUT_CLASSIFICATION	6.835129838446235E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.999999924213572	WITHOUT_CLASSIFICATION	7.57864279875703E-8	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999998363037823	WITHOUT_CLASSIFICATION	1.6369621771409296E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999949149486357	WITHOUT_CLASSIFICATION	5.085051364359994E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999986207452154	WITHOUT_CLASSIFICATION	1.3792547845448537E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999904443228945	WITHOUT_CLASSIFICATION	9.555677105344035E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999999635025295	WITHOUT_CLASSIFICATION	3.6497470496774926E-7	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999981158294936	WITHOUT_CLASSIFICATION	1.884170506332925E-6	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999973926235107	WITHOUT_CLASSIFICATION	2.6073764893642313E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999999159837315	WITHOUT_CLASSIFICATION	8.401626849567962E-7	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999985928467068	WITHOUT_CLASSIFICATION	1.4071532931473644E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999852281031061	WITHOUT_CLASSIFICATION	1.4771896893954282E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999995707569028	WITHOUT_CLASSIFICATION	4.2924309715132673E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999978910505054	WITHOUT_CLASSIFICATION	2.108949494614384E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999973964732147	WITHOUT_CLASSIFICATION	2.603526785326271E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999946304861985	WITHOUT_CLASSIFICATION	5.369513801524085E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999974917216253	WITHOUT_CLASSIFICATION	2.508278374613725E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999747392865647	WITHOUT_CLASSIFICATION	2.526071343532402E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999985352105754	WITHOUT_CLASSIFICATION	1.4647894246566662E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999967902509515	WITHOUT_CLASSIFICATION	3.2097490485137814E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999997287101876	WITHOUT_CLASSIFICATION	2.7128981244340073E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999983481186029	WITHOUT_CLASSIFICATION	1.6518813971985348E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9994528765828695	WITHOUT_CLASSIFICATION	5.471234171304798E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999998132219626	WITHOUT_CLASSIFICATION	1.867780374012761E-7	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999998789160056	WITHOUT_CLASSIFICATION	1.210839944673357E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999995736796832	WITHOUT_CLASSIFICATION	4.2632031684517324E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999953152919672	WITHOUT_CLASSIFICATION	4.684708032799382E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999993874391877	WITHOUT_CLASSIFICATION	6.125608122395186E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999731817176661	WITHOUT_CLASSIFICATION	2.6818282333891458E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999953045019903	WITHOUT_CLASSIFICATION	4.6954980097122235E-6	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999992772612065	WITHOUT_CLASSIFICATION	7.227387934584552E-7	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999997850037279	WITHOUT_CLASSIFICATION	2.1499627206044433E-7	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999974465337361	WITHOUT_CLASSIFICATION	2.553466263812773E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999993390249966	WITHOUT_CLASSIFICATION	6.609750033980935E-7	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999998818519382	WITHOUT_CLASSIFICATION	1.1814806169077833E-7	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999998391713278	WITHOUT_CLASSIFICATION	1.6082867212406996E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999990851484075	WITHOUT_CLASSIFICATION	9.148515925385922E-7	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999993527988357	WITHOUT_CLASSIFICATION	6.472011643827152E-7	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999844234824106	WITHOUT_CLASSIFICATION	1.5576517589408292E-5	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.999999840910407	WITHOUT_CLASSIFICATION	1.5908959305964677E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999844234824106	WITHOUT_CLASSIFICATION	1.5576517589408292E-5	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9996980011150916	WITHOUT_CLASSIFICATION	3.0199888490848833E-4	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999997580041777	WITHOUT_CLASSIFICATION	2.419958223337474E-7	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.999926003907914	WITHOUT_CLASSIFICATION	7.399609208594988E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.999926003907914	WITHOUT_CLASSIFICATION	7.399609208594988E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999994766542829	WITHOUT_CLASSIFICATION	5.23345717006414E-7	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999996496606571	WITHOUT_CLASSIFICATION	3.503393428928086E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999990774915447	WITHOUT_CLASSIFICATION	9.225084553134566E-7	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999818462107788	WITHOUT_CLASSIFICATION	1.815378922116222E-5	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9999757118355628	WITHOUT_CLASSIFICATION	2.42881644372451E-5	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999973772665788	WITHOUT_CLASSIFICATION	2.622733421173709E-6	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.999979014951448	WITHOUT_CLASSIFICATION	2.098504855190078E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.999984294177606	WITHOUT_CLASSIFICATION	1.570582239400059E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999981926677712	WITHOUT_CLASSIFICATION	1.8073322287660541E-6	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999900161673844	WITHOUT_CLASSIFICATION	9.983832615690924E-6	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999996365226163	WITHOUT_CLASSIFICATION	3.6347738381262965E-7	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999524254785335	WITHOUT_CLASSIFICATION	4.7574521466635486E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.999999893272995	WITHOUT_CLASSIFICATION	1.0672700496954295E-7	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.999999893272995	WITHOUT_CLASSIFICATION	1.0672700496954295E-7	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999998965639552	WITHOUT_CLASSIFICATION	1.0343604474448548E-7	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999969043749832	WITHOUT_CLASSIFICATION	3.0956250166569682E-6	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999647829333725	WITHOUT_CLASSIFICATION	3.521706662742604E-5	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9971973804030022	WITHOUT_CLASSIFICATION	0.0028026195969976958	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9996694465362891	WITHOUT_CLASSIFICATION	3.305534637108663E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999664460977052	WITHOUT_CLASSIFICATION	3.355390229483409E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999990291150301	WITHOUT_CLASSIFICATION	9.708849698668962E-7	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999636175173758	WITHOUT_CLASSIFICATION	3.638248262418622E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999991244915916	WITHOUT_CLASSIFICATION	8.755084084827448E-7	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999972316157653	WITHOUT_CLASSIFICATION	2.7683842348304923E-6	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999757382903282	WITHOUT_CLASSIFICATION	2.426170967181626E-5	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999998020418355	WITHOUT_CLASSIFICATION	1.9795816456756535E-7	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999946178184546	WITHOUT_CLASSIFICATION	5.382181545522208E-6	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9999984668893337	WITHOUT_CLASSIFICATION	1.5331106663916461E-6	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999971320964854	WITHOUT_CLASSIFICATION	2.867903514614268E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999990175438743	WITHOUT_CLASSIFICATION	9.82456125698525E-7	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999891379932547	WITHOUT_CLASSIFICATION	1.0862006745220975E-5	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999863059709158	WITHOUT_CLASSIFICATION	1.3694029084314512E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999935931686258	WITHOUT_CLASSIFICATION	6.406831374232405E-6	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9999949556794625	WITHOUT_CLASSIFICATION	5.044320537563834E-6	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999964529801123	WITHOUT_CLASSIFICATION	3.547019887718019E-6	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999652433313446	WITHOUT_CLASSIFICATION	3.4756668655368986E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999209527106588	WITHOUT_CLASSIFICATION	7.904728934114833E-5	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999973513501241	WITHOUT_CLASSIFICATION	2.648649875892427E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999915389629385	WITHOUT_CLASSIFICATION	8.461037061518789E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.999747359575607	WITHOUT_CLASSIFICATION	2.52640424392968E-4	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.999747359575607	WITHOUT_CLASSIFICATION	2.52640424392968E-4	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999964331543628	WITHOUT_CLASSIFICATION	3.5668456371049852E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999974940976375	WITHOUT_CLASSIFICATION	2.505902362476796E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999932744123575	WITHOUT_CLASSIFICATION	6.725587642481626E-6	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999904647397667	WITHOUT_CLASSIFICATION	9.535260233408669E-6	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999718479501746	WITHOUT_CLASSIFICATION	2.815204982543537E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999933754620612	WITHOUT_CLASSIFICATION	6.624537938772195E-6	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999899101075902	WITHOUT_CLASSIFICATION	1.0089892409776382E-5	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9999998726236723	WITHOUT_CLASSIFICATION	1.2737632764288587E-7	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999998944048297	WITHOUT_CLASSIFICATION	1.0559517026807311E-7	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999882919992868	WITHOUT_CLASSIFICATION	1.1708000713183455E-5	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999994863572926	WITHOUT_CLASSIFICATION	5.136427073853582E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999972769905864	WITHOUT_CLASSIFICATION	2.723009413640029E-6	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999999469786298	WITHOUT_CLASSIFICATION	5.302137017950717E-8	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999988206708535	WITHOUT_CLASSIFICATION	1.179329146459492E-6	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999494546011	WITHOUT_CLASSIFICATION	5.054539877480861E-8	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999922602557358	WITHOUT_CLASSIFICATION	7.739744264126356E-6	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999170747556	WITHOUT_CLASSIFICATION	8.292524445593389E-8	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9996941939207008	WITHOUT_CLASSIFICATION	3.058060792992486E-4	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9994168620194281	WITHOUT_CLASSIFICATION	5.831379805718584E-4	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999989496076366	WITHOUT_CLASSIFICATION	1.0503923634651952E-6	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999952054082274	WITHOUT_CLASSIFICATION	4.794591772576912E-6	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999128588881	WITHOUT_CLASSIFICATION	8.714111187862956E-8	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999774974663668	WITHOUT_CLASSIFICATION	2.250253363320776E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999997579232409	WITHOUT_CLASSIFICATION	2.420767590998718E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999852281031061	WITHOUT_CLASSIFICATION	1.4771896893954282E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999998391713278	WITHOUT_CLASSIFICATION	1.6082867212406996E-7	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.999255298339952	WITHOUT_CLASSIFICATION	7.44701660047899E-4	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999998003048487	WITHOUT_CLASSIFICATION	1.996951513452134E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999971283778477	WITHOUT_CLASSIFICATION	2.871622152409984E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999984881419468	WITHOUT_CLASSIFICATION	1.51185805329673E-6	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999991070464829	WITHOUT_CLASSIFICATION	8.929535171616303E-7	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999997007714241	WITHOUT_CLASSIFICATION	2.9922857590122737E-7	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999985376896755	WITHOUT_CLASSIFICATION	1.4623103244547454E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999852281031061	WITHOUT_CLASSIFICATION	1.4771896893954282E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999883391159496	WITHOUT_CLASSIFICATION	1.1660884050370198E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999778391731866	WITHOUT_CLASSIFICATION	2.2160826813399665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999974821710316	WITHOUT_CLASSIFICATION	2.517828968529239E-6	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.99999974360537	WITHOUT_CLASSIFICATION	2.563946300298251E-7	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999988743559229	WITHOUT_CLASSIFICATION	1.1256440769875763E-6	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9999937301877815	WITHOUT_CLASSIFICATION	6.269812218518279E-6	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999989595227985	WITHOUT_CLASSIFICATION	1.0404772015431082E-6	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999996863268156	WITHOUT_CLASSIFICATION	3.1367318442868516E-7	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999960233619475	WITHOUT_CLASSIFICATION	3.976638052532277E-6	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999768720445267	WITHOUT_CLASSIFICATION	2.3127955473362255E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999997924851453	WITHOUT_CLASSIFICATION	2.0751485479385968E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999997924851453	WITHOUT_CLASSIFICATION	2.0751485479385968E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999997924851453	WITHOUT_CLASSIFICATION	2.0751485479385968E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999987827928285	WITHOUT_CLASSIFICATION	1.2172071715362496E-6	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.999999822070667	WITHOUT_CLASSIFICATION	1.779293330904506E-7	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999984932100012	WITHOUT_CLASSIFICATION	1.5067899987200007E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999994472689808	WITHOUT_CLASSIFICATION	5.527310191783648E-7	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.999995950695147	WITHOUT_CLASSIFICATION	4.049304852979671E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999957953916108	WITHOUT_CLASSIFICATION	4.204608389203915E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999955337227889	WITHOUT_CLASSIFICATION	4.466277211121692E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9999987805115854	WITHOUT_CLASSIFICATION	1.2194884145165908E-6	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.999994320194782	WITHOUT_CLASSIFICATION	5.679805218031204E-6	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999997631888483	WITHOUT_CLASSIFICATION	2.3681115170637382E-7	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999739328074	WITHOUT_CLASSIFICATION	2.6067192608538244E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999959781367658	WITHOUT_CLASSIFICATION	4.02186323418304E-6	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9998908969022239	WITHOUT_CLASSIFICATION	1.0910309777623171E-4	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999991985129763	WITHOUT_CLASSIFICATION	8.014870238808128E-7	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999552207502016	WITHOUT_CLASSIFICATION	4.47792497985105E-5	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999991978866642	WITHOUT_CLASSIFICATION	8.021133358610158E-7	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999959025037596	WITHOUT_CLASSIFICATION	4.097496240444122E-6	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999931362534752	WITHOUT_CLASSIFICATION	6.863746524789723E-6	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999992553602253	WITHOUT_CLASSIFICATION	7.446397748241162E-7	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.999992493424536	WITHOUT_CLASSIFICATION	7.506575464088361E-6	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999997339000465	WITHOUT_CLASSIFICATION	2.6609995349310713E-7	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999994529596597	WITHOUT_CLASSIFICATION	5.470403403106309E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999993643079241	WITHOUT_CLASSIFICATION	6.356920757680465E-7	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999994949704654	WITHOUT_CLASSIFICATION	5.050295345608797E-7	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999996576980124	WITHOUT_CLASSIFICATION	3.4230198770577723E-7	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999993984078145	WITHOUT_CLASSIFICATION	6.015921855897665E-7	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999998862074061	WITHOUT_CLASSIFICATION	1.137925938934239E-7	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999998471931364	WITHOUT_CLASSIFICATION	1.528068635796344E-7	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999975580168814	WITHOUT_CLASSIFICATION	2.4419831185652353E-6	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.999999802691256	WITHOUT_CLASSIFICATION	1.9730874400389734E-7	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999922995422625	WITHOUT_CLASSIFICATION	7.7004577374296E-6	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.999999534218936	WITHOUT_CLASSIFICATION	4.6578106410957565E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999996945682885	WITHOUT_CLASSIFICATION	3.054317114723026E-7	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999990038589588	WITHOUT_CLASSIFICATION	9.961410411883092E-7	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999889840745623	WITHOUT_CLASSIFICATION	1.1015925437705357E-5	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9999953218419428	WITHOUT_CLASSIFICATION	4.678158057160173E-6	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.999999893800694	WITHOUT_CLASSIFICATION	1.0619930602552116E-7	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999506242209361	WITHOUT_CLASSIFICATION	4.937577906392363E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999964091591647	WITHOUT_CLASSIFICATION	3.590840835320532E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999964091591647	WITHOUT_CLASSIFICATION	3.590840835320532E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999991475745187	WITHOUT_CLASSIFICATION	8.524254812552214E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999991475745187	WITHOUT_CLASSIFICATION	8.524254812552214E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999969001569521	WITHOUT_CLASSIFICATION	3.0998430479904563E-6	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.999999776143974	WITHOUT_CLASSIFICATION	2.2385602613308542E-7	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.999999975789742	WITHOUT_CLASSIFICATION	2.4210257945273227E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999988718702999	WITHOUT_CLASSIFICATION	1.1281297000513105E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999988718702999	WITHOUT_CLASSIFICATION	1.1281297000513105E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999988718702999	WITHOUT_CLASSIFICATION	1.1281297000513105E-6	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999971753725488	WITHOUT_CLASSIFICATION	2.824627451093942E-6	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999900043128741	WITHOUT_CLASSIFICATION	9.995687125799264E-6	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999721785117655	WITHOUT_CLASSIFICATION	2.7821488234424373E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999992496830694	WITHOUT_CLASSIFICATION	7.503169306385378E-7	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.999991581037313	WITHOUT_CLASSIFICATION	8.418962686898363E-6	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999821430629693	WITHOUT_CLASSIFICATION	1.7856937030745703E-5	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999660551050926	WITHOUT_CLASSIFICATION	3.394489490742276E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999435347869967	WITHOUT_CLASSIFICATION	5.6465213003304335E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999435347869967	WITHOUT_CLASSIFICATION	5.6465213003304335E-5	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999995261891735	WITHOUT_CLASSIFICATION	4.738108263660823E-7	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999926154697836	WITHOUT_CLASSIFICATION	7.384530216458406E-6	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9982815088571522	WITHOUT_CLASSIFICATION	0.0017184911428478713	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9992593098919637	WITHOUT_CLASSIFICATION	7.406901080363249E-4	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999966752861108	WITHOUT_CLASSIFICATION	3.324713889204444E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9932937322761586	WITHOUT_CLASSIFICATION	0.006706267723841472	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999787844498373	WITHOUT_CLASSIFICATION	2.1215550162679112E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999974181160909	WITHOUT_CLASSIFICATION	2.581883909060322E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999963303415694	WITHOUT_CLASSIFICATION	3.669658430522062E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999997226171669	WITHOUT_CLASSIFICATION	2.773828331673968E-7	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999998099715347	WITHOUT_CLASSIFICATION	1.9002846519486248E-7	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999890015360744	WITHOUT_CLASSIFICATION	1.0998463925747408E-5	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.999999658860889	WITHOUT_CLASSIFICATION	3.411391109901457E-7	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999192170700545	WITHOUT_CLASSIFICATION	8.078292994550058E-5	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999997160221931	WITHOUT_CLASSIFICATION	2.839778069581395E-7	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999990851484075	WITHOUT_CLASSIFICATION	9.148515925385922E-7	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999132240282941	WITHOUT_CLASSIFICATION	8.677597170589502E-5	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999991842406726	WITHOUT_CLASSIFICATION	8.157593274546547E-7	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999998965639552	WITHOUT_CLASSIFICATION	1.0343604474448548E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.999999505812658	WITHOUT_CLASSIFICATION	4.941873419830038E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999882476432089	WITHOUT_CLASSIFICATION	1.1752356791073049E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999857844753343	WITHOUT_CLASSIFICATION	1.4215524665777555E-5	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999966121768863	WITHOUT_CLASSIFICATION	3.3878231137084315E-6	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999958339557342	WITHOUT_CLASSIFICATION	4.166044265816583E-6	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999946252200431	WITHOUT_CLASSIFICATION	5.374779956883215E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999997581742271	WITHOUT_CLASSIFICATION	2.4182577281622933E-7	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999976963996449	WITHOUT_CLASSIFICATION	2.303600355037151E-6	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.999999435818696	WITHOUT_CLASSIFICATION	5.641813040010859E-7	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999947117852552	WITHOUT_CLASSIFICATION	5.288214744776332E-6	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999947117852552	WITHOUT_CLASSIFICATION	5.288214744776332E-6	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999997539069857	WITHOUT_CLASSIFICATION	2.460930142631246E-7	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999996057431234	WITHOUT_CLASSIFICATION	3.942568765770609E-7	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999959611778569	WITHOUT_CLASSIFICATION	4.0388221429531385E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999577206634792	WITHOUT_CLASSIFICATION	4.227933652080795E-5	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999577206634792	WITHOUT_CLASSIFICATION	4.227933652080795E-5	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.999989614972658	WITHOUT_CLASSIFICATION	1.03850273419145E-5	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9999860657803428	WITHOUT_CLASSIFICATION	1.3934219657152856E-5	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999195946274043	WITHOUT_CLASSIFICATION	8.040537259562554E-5	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999998109711664	WITHOUT_CLASSIFICATION	1.8902883353450883E-7	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.999998020264851	WITHOUT_CLASSIFICATION	1.9797351490036048E-6	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999996446196963	WITHOUT_CLASSIFICATION	3.5538030376362427E-7	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999999075343468	WITHOUT_CLASSIFICATION	9.246565323233447E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999980753841207	WITHOUT_CLASSIFICATION	1.9246158793343704E-6	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999985577910828	WITHOUT_CLASSIFICATION	1.4422089172040335E-6	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999865308554859	WITHOUT_CLASSIFICATION	1.3469144513928298E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.999997492211543	WITHOUT_CLASSIFICATION	2.5077884569436963E-6	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999870043144836	WITHOUT_CLASSIFICATION	1.2995685516351492E-5	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999989159978646	WITHOUT_CLASSIFICATION	1.084002135348818E-6	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999992527451173	WITHOUT_CLASSIFICATION	7.472548827585744E-7	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.999999348235011	WITHOUT_CLASSIFICATION	6.517649889973441E-7	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999970616650372	WITHOUT_CLASSIFICATION	2.9383349628235924E-6	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999996093227848	WITHOUT_CLASSIFICATION	3.906772152160806E-7	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999979133409984	WITHOUT_CLASSIFICATION	2.0866590015746086E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999722232093692	WITHOUT_CLASSIFICATION	2.7776790630927447E-5	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999991111975535	WITHOUT_CLASSIFICATION	8.888024466316885E-7	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999812539287912	WITHOUT_CLASSIFICATION	1.874607120875387E-5	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.999998807168815	WITHOUT_CLASSIFICATION	1.192831185070097E-6	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999971880738405	WITHOUT_CLASSIFICATION	2.811926159456387E-6	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9998624681216115	WITHOUT_CLASSIFICATION	1.3753187838842952E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999994111995958	WITHOUT_CLASSIFICATION	5.888004041874927E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999994111995958	WITHOUT_CLASSIFICATION	5.888004041874927E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999994111995958	WITHOUT_CLASSIFICATION	5.888004041874927E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999994111995958	WITHOUT_CLASSIFICATION	5.888004041874927E-7	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.999999860849161	WITHOUT_CLASSIFICATION	1.391508389666059E-7	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999607265454543	WITHOUT_CLASSIFICATION	3.927345454578985E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.999993646329246	WITHOUT_CLASSIFICATION	6.353670754041087E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.999993646329246	WITHOUT_CLASSIFICATION	6.353670754041087E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.999993646329246	WITHOUT_CLASSIFICATION	6.353670754041087E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999946685786184	WITHOUT_CLASSIFICATION	5.331421381529211E-6	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999963951299438	WITHOUT_CLASSIFICATION	3.6048700561646808E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999931524461448	WITHOUT_CLASSIFICATION	6.847553855151307E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999996340226172	WITHOUT_CLASSIFICATION	3.6597738279298476E-7	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999996340226172	WITHOUT_CLASSIFICATION	3.6597738279298476E-7	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999935931686258	WITHOUT_CLASSIFICATION	6.406831374232405E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999935931686258	WITHOUT_CLASSIFICATION	6.406831374232405E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9999114546422899	WITHOUT_CLASSIFICATION	8.854535771008291E-5	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9999114546422899	WITHOUT_CLASSIFICATION	8.854535771008291E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9961475174347284	WITHOUT_CLASSIFICATION	0.003852482565271743	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999937529730493	WITHOUT_CLASSIFICATION	6.247026950744923E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999916784669532	WITHOUT_CLASSIFICATION	8.32153304674194E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999862493220809	WITHOUT_CLASSIFICATION	1.3750677919067322E-5	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999628956021868	WITHOUT_CLASSIFICATION	3.710439781321041E-5	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999975331769924	WITHOUT_CLASSIFICATION	2.4668230075518047E-6	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999881877539399	WITHOUT_CLASSIFICATION	1.181224605999761E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999763583200035	WITHOUT_CLASSIFICATION	2.364167999650648E-5	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999980865609109	WITHOUT_CLASSIFICATION	1.9134390890703063E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999890597945261	WITHOUT_CLASSIFICATION	1.0940205473861767E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999861405827222	WITHOUT_CLASSIFICATION	1.385941727790348E-5	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999909101546652	WITHOUT_CLASSIFICATION	9.089845334772427E-6	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.999997530718798	WITHOUT_CLASSIFICATION	2.4692812019354726E-6	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999961532095667	WITHOUT_CLASSIFICATION	3.846790433320852E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.999986120149403	WITHOUT_CLASSIFICATION	1.3879850596966255E-5	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999589031624138	WITHOUT_CLASSIFICATION	4.1096837586192746E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999903129591796	WITHOUT_CLASSIFICATION	9.687040820439235E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999885063956852	WITHOUT_CLASSIFICATION	1.1493604314732898E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999948829447218	WITHOUT_CLASSIFICATION	5.117055278189236E-6	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.999990333964157	WITHOUT_CLASSIFICATION	9.66603584288329E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999869543497026	WITHOUT_CLASSIFICATION	1.3045650297322896E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999869543497026	WITHOUT_CLASSIFICATION	1.3045650297322896E-5	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999696890337046	WITHOUT_CLASSIFICATION	3.0310966295322596E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.999998539359741	WITHOUT_CLASSIFICATION	1.4606402589501634E-6	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9996630798911949	WITHOUT_CLASSIFICATION	3.3692010880509595E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9997342506333711	WITHOUT_CLASSIFICATION	2.6574936662898153E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9995909745292562	WITHOUT_CLASSIFICATION	4.0902547074383615E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9997957947078584	WITHOUT_CLASSIFICATION	2.0420529214160954E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9997708513066282	WITHOUT_CLASSIFICATION	2.2914869337163537E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9997316818497866	WITHOUT_CLASSIFICATION	2.683181502134894E-4	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9997380416776306	WITHOUT_CLASSIFICATION	2.6195832236936223E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9996871859774201	WITHOUT_CLASSIFICATION	3.1281402257990915E-4	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9997224219793618	WITHOUT_CLASSIFICATION	2.7757802063826655E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9997177816527051	WITHOUT_CLASSIFICATION	2.8221834729483925E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9997726482439713	WITHOUT_CLASSIFICATION	2.273517560286185E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9996586500462159	WITHOUT_CLASSIFICATION	3.413499537840934E-4	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9996838626273521	WITHOUT_CLASSIFICATION	3.1613737264792047E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9996365551444077	WITHOUT_CLASSIFICATION	3.634448555922015E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999522637105742	WITHOUT_CLASSIFICATION	4.773628942585065E-5	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999842855052096	WITHOUT_CLASSIFICATION	1.5714494790428026E-5	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999985011391193	WITHOUT_CLASSIFICATION	1.4988608807334593E-6	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999562416699496	WITHOUT_CLASSIFICATION	4.3758330050411945E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999724513697996	WITHOUT_CLASSIFICATION	2.754863020032295E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999724513697996	WITHOUT_CLASSIFICATION	2.754863020032295E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999724513697996	WITHOUT_CLASSIFICATION	2.754863020032295E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999724513697996	WITHOUT_CLASSIFICATION	2.754863020032295E-5	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9998052418536659	WITHOUT_CLASSIFICATION	1.9475814633404843E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999853440485733	WITHOUT_CLASSIFICATION	1.4655951426738446E-5	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9995946751893259	WITHOUT_CLASSIFICATION	4.053248106740871E-4	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999945565960741	WITHOUT_CLASSIFICATION	5.443403926006649E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999945565960741	WITHOUT_CLASSIFICATION	5.443403926006649E-6	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999970577975402	WITHOUT_CLASSIFICATION	2.942202459680067E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999996888309081	WITHOUT_CLASSIFICATION	3.1116909197896795E-7	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999996888309081	WITHOUT_CLASSIFICATION	3.1116909197896795E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999922184119827	WITHOUT_CLASSIFICATION	7.78158801732167E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999922184119827	WITHOUT_CLASSIFICATION	7.78158801732167E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999956148241805	WITHOUT_CLASSIFICATION	4.385175819441186E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999941422044937	WITHOUT_CLASSIFICATION	5.85779550641503E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999971978605335	WITHOUT_CLASSIFICATION	2.8021394664772646E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.999990758250336	WITHOUT_CLASSIFICATION	9.241749664014346E-6	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999866902480486	WITHOUT_CLASSIFICATION	1.3309751951266737E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999948463575072	WITHOUT_CLASSIFICATION	5.153642492800419E-6	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999984592392337	WITHOUT_CLASSIFICATION	1.5407607662739405E-6	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999994854885367	WITHOUT_CLASSIFICATION	5.14511463344678E-7	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9998673957253571	WITHOUT_CLASSIFICATION	1.3260427464299108E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9998673957253571	WITHOUT_CLASSIFICATION	1.3260427464299108E-4	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999914791566608	WITHOUT_CLASSIFICATION	8.52084333923242E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999979249599193	WITHOUT_CLASSIFICATION	2.0750400806283546E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9997022603662977	WITHOUT_CLASSIFICATION	2.977396337021944E-4	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.999999284239322	WITHOUT_CLASSIFICATION	7.157606778727363E-7	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999855336330739	WITHOUT_CLASSIFICATION	1.4466366926177744E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999979787679922	WITHOUT_CLASSIFICATION	2.0212320078079686E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999979787679922	WITHOUT_CLASSIFICATION	2.0212320078079686E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999979787679922	WITHOUT_CLASSIFICATION	2.0212320078079686E-6	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999996354233825	WITHOUT_CLASSIFICATION	3.645766175336985E-7	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999996354233825	WITHOUT_CLASSIFICATION	3.645766175336985E-7	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999995872380665	WITHOUT_CLASSIFICATION	4.1276193352275154E-7	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.999997104745019	WITHOUT_CLASSIFICATION	2.8952549810140206E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.999997104745019	WITHOUT_CLASSIFICATION	2.8952549810140206E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999987618826387	WITHOUT_CLASSIFICATION	1.2381173613129988E-6	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999968736989704	WITHOUT_CLASSIFICATION	3.1263010295512358E-6	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999904647397667	WITHOUT_CLASSIFICATION	9.535260233408669E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876941501904	WITHOUT_CLASSIFICATION	1.2305849809557473E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999905284294648	WITHOUT_CLASSIFICATION	9.471570535218246E-6	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999905284294648	WITHOUT_CLASSIFICATION	9.471570535218246E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999922356542751	WITHOUT_CLASSIFICATION	7.764345724995672E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999920221107825	WITHOUT_CLASSIFICATION	7.97788921747274E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924944186664	WITHOUT_CLASSIFICATION	7.505581333511669E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999901651820934	WITHOUT_CLASSIFICATION	9.834817906639378E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999917606517478	WITHOUT_CLASSIFICATION	8.239348252234339E-6	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924989611444	WITHOUT_CLASSIFICATION	7.50103885562124E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999939638457257	WITHOUT_CLASSIFICATION	6.0361542742761605E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999939638457257	WITHOUT_CLASSIFICATION	6.0361542742761605E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999939638457257	WITHOUT_CLASSIFICATION	6.0361542742761605E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999913448876614	WITHOUT_CLASSIFICATION	8.655112338660793E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999929433207115	WITHOUT_CLASSIFICATION	7.056679288435614E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999893338358379	WITHOUT_CLASSIFICATION	1.066616416215204E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999893338358379	WITHOUT_CLASSIFICATION	1.066616416215204E-5	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999892916598491	WITHOUT_CLASSIFICATION	1.070834015103838E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927657877724	WITHOUT_CLASSIFICATION	7.23421222749617E-6	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999901007587803	WITHOUT_CLASSIFICATION	9.8992412197324E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992687406148	WITHOUT_CLASSIFICATION	7.312593852083842E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999913762348788	WITHOUT_CLASSIFICATION	8.623765121234382E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999978182162959	WITHOUT_CLASSIFICATION	2.1817837042303864E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.99999654041065	WITHOUT_CLASSIFICATION	3.45958935000921E-6	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999960436870807	WITHOUT_CLASSIFICATION	3.95631291931586E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999990385498885	WITHOUT_CLASSIFICATION	9.614501115548364E-7	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999857935417259	WITHOUT_CLASSIFICATION	1.4206458274106975E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999991212803024	WITHOUT_CLASSIFICATION	8.78719697619231E-7	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999818628950307	WITHOUT_CLASSIFICATION	1.8137104969301344E-5	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999907796675922	WITHOUT_CLASSIFICATION	9.220332407845574E-6	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999651386696387	WITHOUT_CLASSIFICATION	3.486133036139464E-5	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999393384612107	WITHOUT_CLASSIFICATION	6.0661538789114744E-5	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999908757360233	WITHOUT_CLASSIFICATION	9.124263976742049E-6	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999972427380155	WITHOUT_CLASSIFICATION	2.7572619845665698E-6	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999959057041499	WITHOUT_CLASSIFICATION	4.094295850183845E-6	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999976947520601	WITHOUT_CLASSIFICATION	2.305247939975659E-6	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999964745902875	WITHOUT_CLASSIFICATION	3.525409712456195E-6	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999078753532094	WITHOUT_CLASSIFICATION	9.212464679063108E-5	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999886553066226	WITHOUT_CLASSIFICATION	1.1344693377425302E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999996246805742	WITHOUT_CLASSIFICATION	3.7531942571145625E-7	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999992014020437	WITHOUT_CLASSIFICATION	7.985979562405135E-7	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999998397789304	WITHOUT_CLASSIFICATION	1.6022106965395012E-7	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999862650011141	WITHOUT_CLASSIFICATION	1.3734998885992554E-5	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999993601516817	WITHOUT_CLASSIFICATION	6.398483182404372E-7	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9998190458128322	WITHOUT_CLASSIFICATION	1.8095418716774716E-4	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9998150720001168	WITHOUT_CLASSIFICATION	1.84927999883234E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999776362030315	WITHOUT_CLASSIFICATION	2.2363796968492905E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999969386319766	WITHOUT_CLASSIFICATION	3.0613680233501606E-6	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999203875371536	WITHOUT_CLASSIFICATION	7.961246284631703E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999699158445	WITHOUT_CLASSIFICATION	3.0084155489072525E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999967414742686	WITHOUT_CLASSIFICATION	3.2585257314680624E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995975042744	WITHOUT_CLASSIFICATION	4.024957256596449E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999986918978489	WITHOUT_CLASSIFICATION	1.3081021511024562E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999946769627697	WITHOUT_CLASSIFICATION	5.323037230284499E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999994914656819	WITHOUT_CLASSIFICATION	5.085343181673669E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999986760492949	WITHOUT_CLASSIFICATION	1.323950705121108E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999678735363005	WITHOUT_CLASSIFICATION	3.2126463699642015E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999741223410226	WITHOUT_CLASSIFICATION	2.5877658977470268E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958287494888	WITHOUT_CLASSIFICATION	4.1712505112307436E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999923529734214	WITHOUT_CLASSIFICATION	7.647026578601426E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.99999761524383	WITHOUT_CLASSIFICATION	2.3847561699566066E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999998007895808	WITHOUT_CLASSIFICATION	1.9921041920351543E-6	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9998901519200101	WITHOUT_CLASSIFICATION	1.098480799898648E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999862992951324	WITHOUT_CLASSIFICATION	1.3700704867699028E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999983734103832	WITHOUT_CLASSIFICATION	1.6265896167293695E-6	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999770157478642	WITHOUT_CLASSIFICATION	2.2984252135761368E-5	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999994753031944	WITHOUT_CLASSIFICATION	5.246968055817575E-7	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999975284993471	WITHOUT_CLASSIFICATION	2.471500652812943E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.999980386200299	WITHOUT_CLASSIFICATION	1.961379970095997E-5	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999996908505528	WITHOUT_CLASSIFICATION	3.091494471304888E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.999980386200299	WITHOUT_CLASSIFICATION	1.961379970095997E-5	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999387751053058	WITHOUT_CLASSIFICATION	6.122489469424535E-5	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999984383450525	WITHOUT_CLASSIFICATION	1.5616549475047412E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999943507249213	WITHOUT_CLASSIFICATION	5.649275078724412E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999947838606447	WITHOUT_CLASSIFICATION	5.216139355407071E-6	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999924385206496	WITHOUT_CLASSIFICATION	7.561479350477565E-6	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999978979536809	WITHOUT_CLASSIFICATION	2.1020463190807387E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999990474642866	WITHOUT_CLASSIFICATION	9.525357133705013E-7	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999432240329501	WITHOUT_CLASSIFICATION	5.677596704996208E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999991212803024	WITHOUT_CLASSIFICATION	8.78719697619231E-7	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9998877831682411	WITHOUT_CLASSIFICATION	1.1221683175885288E-4	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9997961147320465	WITHOUT_CLASSIFICATION	2.038852679535197E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999982269395855	WITHOUT_CLASSIFICATION	1.7730604144989462E-6	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999056768574	WITHOUT_CLASSIFICATION	9.432314264536973E-8	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9998362467075527	WITHOUT_CLASSIFICATION	1.6375329244740786E-4	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9997304150490787	WITHOUT_CLASSIFICATION	2.695849509213173E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9995693159212282	WITHOUT_CLASSIFICATION	4.306840787717012E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999749153890866	WITHOUT_CLASSIFICATION	2.5084610913501497E-5	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999963845446396	WITHOUT_CLASSIFICATION	3.615455360436882E-6	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999996096907284	WITHOUT_CLASSIFICATION	3.903092716516567E-7	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999995781106207	WITHOUT_CLASSIFICATION	4.218893792559447E-7	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999996259590966	WITHOUT_CLASSIFICATION	3.740409034200549E-7	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.999974170510281	WITHOUT_CLASSIFICATION	2.5829489718993604E-5	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999933997792629	WITHOUT_CLASSIFICATION	6.600220737127124E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.99999839034819	WITHOUT_CLASSIFICATION	1.6096518100173795E-6	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.999994710731895	WITHOUT_CLASSIFICATION	5.2892681049749E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999984005231908	WITHOUT_CLASSIFICATION	1.5994768092076244E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999322381113257	WITHOUT_CLASSIFICATION	6.776188867424085E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999322381113257	WITHOUT_CLASSIFICATION	6.776188867424085E-5	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999374730178033	WITHOUT_CLASSIFICATION	6.25269821966513E-5	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9999773824840619	WITHOUT_CLASSIFICATION	2.261751593819102E-5	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.999994513275881	WITHOUT_CLASSIFICATION	5.486724119031299E-6	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999933840401611	WITHOUT_CLASSIFICATION	6.615959838811983E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999942442510629	WITHOUT_CLASSIFICATION	5.755748937156156E-6	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9998532144636886	WITHOUT_CLASSIFICATION	1.467855363113389E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9968688743756997	WITHOUT_CLASSIFICATION	0.003131125624300265	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999974612868147	WITHOUT_CLASSIFICATION	2.538713185461713E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999907542780487	WITHOUT_CLASSIFICATION	9.245721951295492E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997386656369585	WITHOUT_CLASSIFICATION	2.613343630415832E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999875326412588	WITHOUT_CLASSIFICATION	1.2467358741206097E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999885939924548	WITHOUT_CLASSIFICATION	1.1406007545275264E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999543431628483	WITHOUT_CLASSIFICATION	4.5656837151806025E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.999871224273994	WITHOUT_CLASSIFICATION	1.287757260059295E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999652175716905	WITHOUT_CLASSIFICATION	3.4782428309578356E-5	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999557638819276	WITHOUT_CLASSIFICATION	4.423611807226107E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999963832833695	WITHOUT_CLASSIFICATION	3.616716630524498E-6	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999766998969459	WITHOUT_CLASSIFICATION	2.3300103054098916E-5	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999829251951579	WITHOUT_CLASSIFICATION	1.707480484207278E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999942442510629	WITHOUT_CLASSIFICATION	5.755748937156156E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999963832833695	WITHOUT_CLASSIFICATION	3.616716630524498E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999974612868147	WITHOUT_CLASSIFICATION	2.538713185461713E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999907542780487	WITHOUT_CLASSIFICATION	9.245721951295492E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999979887827303	WITHOUT_CLASSIFICATION	2.0112172698433392E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999756285132038	WITHOUT_CLASSIFICATION	2.437148679623603E-5	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999906168229766	WITHOUT_CLASSIFICATION	9.383177023359253E-6	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999933341333903	WITHOUT_CLASSIFICATION	6.665866609766801E-6	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999884322862097	WITHOUT_CLASSIFICATION	1.1567713790243974E-5	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9997866784944064	WITHOUT_CLASSIFICATION	2.1332150559367658E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9997866784944064	WITHOUT_CLASSIFICATION	2.1332150559367658E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999732283643203	WITHOUT_CLASSIFICATION	2.677163567960031E-5	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999856422491815	WITHOUT_CLASSIFICATION	1.435775081847406E-5	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999841161129454	WITHOUT_CLASSIFICATION	1.588388705455611E-5	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999910378129464	WITHOUT_CLASSIFICATION	8.96218705350138E-6	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999965645995724	WITHOUT_CLASSIFICATION	3.43540042759725E-5	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999902161906774	WITHOUT_CLASSIFICATION	9.78380932257298E-6	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999765899845523	WITHOUT_CLASSIFICATION	2.34100154476071E-5	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999938929028902	WITHOUT_CLASSIFICATION	6.107097109715545E-6	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999923565821648	WITHOUT_CLASSIFICATION	7.643417835253887E-6	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999817113092561	WITHOUT_CLASSIFICATION	1.828869074394815E-5	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999952289485737	WITHOUT_CLASSIFICATION	4.771051426327373E-6	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999837281236152	WITHOUT_CLASSIFICATION	1.6271876384739902E-5	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999849963794248	WITHOUT_CLASSIFICATION	1.5003620575074313E-5	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999648068601361	WITHOUT_CLASSIFICATION	3.519313986394308E-5	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999908188956501	WITHOUT_CLASSIFICATION	9.181104349789977E-6	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999915677073475	WITHOUT_CLASSIFICATION	8.43229265247214E-6	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999806912975414	WITHOUT_CLASSIFICATION	1.9308702458571856E-5	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999953254836534	WITHOUT_CLASSIFICATION	4.674516346556209E-6	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999816023080187	WITHOUT_CLASSIFICATION	1.839769198125668E-5	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999826227823606	WITHOUT_CLASSIFICATION	1.737721763934726E-5	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999602092019859	WITHOUT_CLASSIFICATION	3.979079801401115E-5	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999896194340249	WITHOUT_CLASSIFICATION	1.0380565975134344E-5	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999851849804906	WITHOUT_CLASSIFICATION	1.4815019509459655E-5	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999866084204759	WITHOUT_CLASSIFICATION	1.3391579524071617E-5	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999679577250568	WITHOUT_CLASSIFICATION	3.2042274943193615E-5	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999916409054191	WITHOUT_CLASSIFICATION	8.359094580833116E-6	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999314078214067	WITHOUT_CLASSIFICATION	6.859217859323873E-5	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999550322608839	WITHOUT_CLASSIFICATION	4.496773911607589E-5	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997995786018286	WITHOUT_CLASSIFICATION	2.004213981715132E-4	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999853049918948	WITHOUT_CLASSIFICATION	1.4695008105125263E-5	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9997489341140079	WITHOUT_CLASSIFICATION	2.5106588599216263E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999804863103641	WITHOUT_CLASSIFICATION	1.9513689635861913E-5	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999980336258477	WITHOUT_CLASSIFICATION	1.9663741523010605E-5	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999538761685853	WITHOUT_CLASSIFICATION	4.6123831414656325E-5	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999879672250824	WITHOUT_CLASSIFICATION	1.2032774917525118E-5	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999794524483765	WITHOUT_CLASSIFICATION	2.0547551623446396E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999518031357961	WITHOUT_CLASSIFICATION	4.819686420386649E-5	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999874263934815	WITHOUT_CLASSIFICATION	1.2573606518575943E-5	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999762036676075	WITHOUT_CLASSIFICATION	2.3796332392488978E-5	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999455109997702	WITHOUT_CLASSIFICATION	5.4489000229812534E-5	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999857848338014	WITHOUT_CLASSIFICATION	1.4215166198654069E-5	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999816610298041	WITHOUT_CLASSIFICATION	1.8338970195861813E-5	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999956983513206	WITHOUT_CLASSIFICATION	4.301648679390518E-5	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999847616591913	WITHOUT_CLASSIFICATION	1.5238340808795909E-5	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999938414866823	WITHOUT_CLASSIFICATION	6.158513317706157E-5	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997808661309198	WITHOUT_CLASSIFICATION	2.1913386908024523E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999428718543296	WITHOUT_CLASSIFICATION	5.712814567047137E-5	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999897218383569	WITHOUT_CLASSIFICATION	1.0278161643123715E-5	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999967943540573	WITHOUT_CLASSIFICATION	3.2056459425880135E-6	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999974215303201	WITHOUT_CLASSIFICATION	2.5784696799838057E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999972593522585	WITHOUT_CLASSIFICATION	2.7406477415359376E-6	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999966703681021	WITHOUT_CLASSIFICATION	3.3296318977921887E-6	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999995086155649	WITHOUT_CLASSIFICATION	4.913844351173605E-7	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999601357405418	WITHOUT_CLASSIFICATION	3.986425945826372E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999893338358379	WITHOUT_CLASSIFICATION	1.066616416215204E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999885939924548	WITHOUT_CLASSIFICATION	1.1406007545275264E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999993459652698	WITHOUT_CLASSIFICATION	6.540347301007815E-7	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999991436101356	WITHOUT_CLASSIFICATION	8.563898644136044E-7	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999974874519314	WITHOUT_CLASSIFICATION	2.512548068615924E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999744278112609	WITHOUT_CLASSIFICATION	2.5572188739101664E-5	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999962802283174	WITHOUT_CLASSIFICATION	3.7197716824945918E-6	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999822835667855	WITHOUT_CLASSIFICATION	1.7716433214458475E-5	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999982744905805	WITHOUT_CLASSIFICATION	1.7255094194718022E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999894910879685	WITHOUT_CLASSIFICATION	1.0508912031561943E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999894910879685	WITHOUT_CLASSIFICATION	1.0508912031561943E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999875326412588	WITHOUT_CLASSIFICATION	1.2467358741206097E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.99998437244652	WITHOUT_CLASSIFICATION	1.5627553479916936E-5	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999987994233764	WITHOUT_CLASSIFICATION	1.2005766235955239E-6	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999827203112542	WITHOUT_CLASSIFICATION	1.727968874566902E-5	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999978739400698	WITHOUT_CLASSIFICATION	2.1260599302006807E-5	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999611690174603	WITHOUT_CLASSIFICATION	3.883098253962142E-5	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999604669452948	WITHOUT_CLASSIFICATION	3.953305470506597E-5	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999810502755243	WITHOUT_CLASSIFICATION	1.8949724475730317E-5	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999808393159197	WITHOUT_CLASSIFICATION	1.9160684080343288E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999894910879685	WITHOUT_CLASSIFICATION	1.0508912031561943E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999619214389142	WITHOUT_CLASSIFICATION	3.807856108586012E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.999975664461611	WITHOUT_CLASSIFICATION	2.4335538388921817E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999917480982841	WITHOUT_CLASSIFICATION	8.251901715976407E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999996438207309	WITHOUT_CLASSIFICATION	3.5617926903533377E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999889264979068	WITHOUT_CLASSIFICATION	1.107350209309622E-5	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999981403367935	WITHOUT_CLASSIFICATION	1.8596632065277476E-6	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999952724408537	WITHOUT_CLASSIFICATION	4.727559146244828E-6	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999825893571525	WITHOUT_CLASSIFICATION	1.7410642847555367E-5	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999933926067648	WITHOUT_CLASSIFICATION	6.6073932351571904E-6	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999990899772467	WITHOUT_CLASSIFICATION	9.100227533235039E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999875326412588	WITHOUT_CLASSIFICATION	1.2467358741206097E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999894910879685	WITHOUT_CLASSIFICATION	1.0508912031561943E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999917480982841	WITHOUT_CLASSIFICATION	8.251901715976407E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999996438207309	WITHOUT_CLASSIFICATION	3.5617926903533377E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999889264979068	WITHOUT_CLASSIFICATION	1.107350209309622E-5	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999998165252391	WITHOUT_CLASSIFICATION	1.8347476101812846E-7	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9998757703300984	WITHOUT_CLASSIFICATION	1.2422966990156494E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.999996307053547	WITHOUT_CLASSIFICATION	3.6929464530782397E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999947870755929	WITHOUT_CLASSIFICATION	5.212924407155181E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999787161069731	WITHOUT_CLASSIFICATION	2.1283893026948626E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999787161069731	WITHOUT_CLASSIFICATION	2.1283893026948626E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999787161069731	WITHOUT_CLASSIFICATION	2.1283893026948626E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999983878289771	WITHOUT_CLASSIFICATION	1.6121710228766754E-6	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999980525083079	WITHOUT_CLASSIFICATION	1.9474916920771697E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999748631256834	WITHOUT_CLASSIFICATION	2.5136874316592756E-5	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999936049853807	WITHOUT_CLASSIFICATION	6.39501461928397E-6	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999930987282671	WITHOUT_CLASSIFICATION	6.901271732888791E-6	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999996369369228	WITHOUT_CLASSIFICATION	3.630630771062539E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999567908673727	WITHOUT_CLASSIFICATION	4.320913262733056E-5	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999854116408199	WITHOUT_CLASSIFICATION	1.4588359180107924E-5	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999586551543	WITHOUT_CLASSIFICATION	4.134484555428023E-8	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.999999807744188	WITHOUT_CLASSIFICATION	1.9225581212653357E-7	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999979227639597	WITHOUT_CLASSIFICATION	2.077236040299659E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999996012333013	WITHOUT_CLASSIFICATION	3.9876669870669346E-7	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999809264726741	WITHOUT_CLASSIFICATION	1.9073527325816004E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.999998802176821	WITHOUT_CLASSIFICATION	1.1978231790322642E-6	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999971500227965	WITHOUT_CLASSIFICATION	2.8499772034181194E-6	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999974524869701	WITHOUT_CLASSIFICATION	2.547513029841111E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9998269338644951	WITHOUT_CLASSIFICATION	1.730661355049339E-4	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.999983200044647	WITHOUT_CLASSIFICATION	1.6799955353028267E-5	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999996187380237	WITHOUT_CLASSIFICATION	3.812619762798236E-7	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999877283602028	WITHOUT_CLASSIFICATION	1.2271639797177706E-5	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999978880002665	WITHOUT_CLASSIFICATION	2.111999733575527E-6	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999994315410549	WITHOUT_CLASSIFICATION	5.684589452337971E-7	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.999998435229697	WITHOUT_CLASSIFICATION	1.5647703030293258E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999998058140182	WITHOUT_CLASSIFICATION	1.9418598176652477E-7	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999997075282536	WITHOUT_CLASSIFICATION	2.924717464341854E-7	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999933317548461	WITHOUT_CLASSIFICATION	6.6682451538544984E-6	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999995711615126	WITHOUT_CLASSIFICATION	4.2883848737330075E-7	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999991849331559	WITHOUT_CLASSIFICATION	8.150668441850429E-7	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999856622969028	WITHOUT_CLASSIFICATION	1.4337703097148421E-5	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999350149721272	WITHOUT_CLASSIFICATION	6.498502787269546E-5	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999993783702906	WITHOUT_CLASSIFICATION	6.216297093776793E-7	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999943705440575	WITHOUT_CLASSIFICATION	5.629455942548323E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999926460123926	WITHOUT_CLASSIFICATION	7.353987607436818E-6	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9999773438652945	WITHOUT_CLASSIFICATION	2.265613470548213E-5	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999957678050584	WITHOUT_CLASSIFICATION	4.232194941601076E-6	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.999996281791613	WITHOUT_CLASSIFICATION	3.718208386912925E-6	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999996246805742	WITHOUT_CLASSIFICATION	3.7531942571145625E-7	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999555034580765	WITHOUT_CLASSIFICATION	4.449654192348079E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999994959530457	WITHOUT_CLASSIFICATION	5.040469543281824E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999993074730086	WITHOUT_CLASSIFICATION	6.925269914954441E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999996937023096	WITHOUT_CLASSIFICATION	3.062976904101672E-7	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999934841162884	WITHOUT_CLASSIFICATION	6.515883711579869E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999995325044281	WITHOUT_CLASSIFICATION	4.6749557190638253E-7	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999934841162884	WITHOUT_CLASSIFICATION	6.515883711579869E-6	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999996541305709	WITHOUT_CLASSIFICATION	3.458694290781318E-7	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999886939106459	WITHOUT_CLASSIFICATION	1.1306089354127064E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.99991816833039	WITHOUT_CLASSIFICATION	8.183166960999145E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999994422167425	WITHOUT_CLASSIFICATION	5.577832573794778E-7	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999947708028655	WITHOUT_CLASSIFICATION	5.2291971345440965E-6	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999997668080188	WITHOUT_CLASSIFICATION	2.33191981133118E-7	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999963595016523	WITHOUT_CLASSIFICATION	3.6404983476091003E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999984239883859	WITHOUT_CLASSIFICATION	1.5760116141107877E-6	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999997742757355	WITHOUT_CLASSIFICATION	2.2572426453193986E-7	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999983458362978	WITHOUT_CLASSIFICATION	1.6541637021994056E-6	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999882914664169	WITHOUT_CLASSIFICATION	1.170853358317577E-5	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999978993766545	WITHOUT_CLASSIFICATION	2.1006233453845586E-6	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999995795259718	WITHOUT_CLASSIFICATION	4.2047402814446825E-7	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999973230632099	WITHOUT_CLASSIFICATION	2.67693679012603E-6	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999998796266576	WITHOUT_CLASSIFICATION	1.2037334240432955E-7	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999982278266717	WITHOUT_CLASSIFICATION	1.7721733283138532E-6	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999996994837204	WITHOUT_CLASSIFICATION	3.0051627962140046E-7	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.999998344165947	WITHOUT_CLASSIFICATION	1.655834053086774E-6	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999985175997103	WITHOUT_CLASSIFICATION	1.482400289688379E-6	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999976579568813	WITHOUT_CLASSIFICATION	2.3420431186736602E-6	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9995005816907104	WITHOUT_CLASSIFICATION	4.994183092895332E-4	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.999996034102957	WITHOUT_CLASSIFICATION	3.965897042989828E-6	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999964290371537	WITHOUT_CLASSIFICATION	3.5709628463374083E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999988786980579	WITHOUT_CLASSIFICATION	1.1213019420036533E-6	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999993404916125	WITHOUT_CLASSIFICATION	6.59508387496137E-7	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999979355764741	WITHOUT_CLASSIFICATION	2.0644235258929876E-6	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999141507522	WITHOUT_CLASSIFICATION	8.584924792878728E-8	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999998668917308	WITHOUT_CLASSIFICATION	1.3310826909183065E-7	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999989162946187	WITHOUT_CLASSIFICATION	1.0837053813666107E-6	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999997088367624	WITHOUT_CLASSIFICATION	2.9116323764999356E-7	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999994644062282	WITHOUT_CLASSIFICATION	5.355937717478444E-7	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999651041759463	WITHOUT_CLASSIFICATION	3.489582405369036E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999978462908838	WITHOUT_CLASSIFICATION	2.1537091160782517E-6	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.999999811799986	WITHOUT_CLASSIFICATION	1.8820001391013732E-7	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.999999501288869	WITHOUT_CLASSIFICATION	4.987111309232095E-7	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999991714961904	WITHOUT_CLASSIFICATION	8.285038094511297E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.999995085099732	WITHOUT_CLASSIFICATION	4.914900268063337E-6	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.99999954209437	WITHOUT_CLASSIFICATION	4.5790562989356944E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999993074730086	WITHOUT_CLASSIFICATION	6.925269914954441E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999998711629127	WITHOUT_CLASSIFICATION	1.2883708732565865E-7	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999948862995919	WITHOUT_CLASSIFICATION	5.113700408122564E-6	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999969069771358	WITHOUT_CLASSIFICATION	3.0930228642690213E-6	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999961514123626	WITHOUT_CLASSIFICATION	3.848587637324876E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999995325044281	WITHOUT_CLASSIFICATION	4.6749557190638253E-7	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999916745090321	WITHOUT_CLASSIFICATION	8.325490967812345E-6	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999981555673656	WITHOUT_CLASSIFICATION	1.844432634475872E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999977225607062	WITHOUT_CLASSIFICATION	2.2774392938362686E-6	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.999997381456062	WITHOUT_CLASSIFICATION	2.6185439380814303E-6	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999611355432062	WITHOUT_CLASSIFICATION	3.886445679374018E-5	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999920665979867	WITHOUT_CLASSIFICATION	7.9334020132744E-6	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999981940382141	WITHOUT_CLASSIFICATION	1.8059617858905267E-6	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999945376429649	WITHOUT_CLASSIFICATION	5.462357035143917E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999986291330014	WITHOUT_CLASSIFICATION	1.3708669985543323E-6	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.999941515048544	WITHOUT_CLASSIFICATION	5.848495145596737E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999992014020437	WITHOUT_CLASSIFICATION	7.985979562405135E-7	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999745525389019	WITHOUT_CLASSIFICATION	2.544746109815828E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999980018335953	WITHOUT_CLASSIFICATION	1.9981664047432023E-6	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999997378886519	WITHOUT_CLASSIFICATION	2.621113480228566E-7	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999895697188622	WITHOUT_CLASSIFICATION	1.0430281137783067E-5	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999990864581442	WITHOUT_CLASSIFICATION	9.135418559081104E-7	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.999994768724931	WITHOUT_CLASSIFICATION	5.231275069001723E-6	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999997085958641	WITHOUT_CLASSIFICATION	2.914041359967529E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999988924988573	WITHOUT_CLASSIFICATION	1.107501142745872E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999998406454436	WITHOUT_CLASSIFICATION	1.5935455640379492E-7	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999945794934751	WITHOUT_CLASSIFICATION	5.420506524816478E-6	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999988924988573	WITHOUT_CLASSIFICATION	1.107501142745872E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999998170842079	WITHOUT_CLASSIFICATION	1.8291579219472097E-7	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999926808343033	WITHOUT_CLASSIFICATION	7.31916569677446E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999913880440142	WITHOUT_CLASSIFICATION	8.611955985690711E-6	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999919024451401	WITHOUT_CLASSIFICATION	8.097554859851401E-6	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999991342072128	WITHOUT_CLASSIFICATION	8.657927872405128E-7	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999931060003437	WITHOUT_CLASSIFICATION	6.893999656287905E-6	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999994248767372	WITHOUT_CLASSIFICATION	5.751232626968343E-7	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999996788254725	WITHOUT_CLASSIFICATION	3.2117452755780007E-7	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999975376367624	WITHOUT_CLASSIFICATION	2.4623632376409116E-6	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999994263017933	WITHOUT_CLASSIFICATION	5.736982067593644E-7	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999964253107054	WITHOUT_CLASSIFICATION	3.5746892944704203E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999925023278569	WITHOUT_CLASSIFICATION	7.497672143201431E-6	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999933268243744	WITHOUT_CLASSIFICATION	6.6731756256978805E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999973505968022	WITHOUT_CLASSIFICATION	2.6494031978552323E-6	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999956822739419	WITHOUT_CLASSIFICATION	4.31772605813066E-6	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999927370434655	WITHOUT_CLASSIFICATION	7.2629565345275015E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999989381728903	WITHOUT_CLASSIFICATION	1.0618271096647404E-6	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999961458219044	WITHOUT_CLASSIFICATION	3.854178095467437E-6	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999945028982642	WITHOUT_CLASSIFICATION	5.49710173583901E-6	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999948953038744	WITHOUT_CLASSIFICATION	5.104696125544054E-6	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999973187191133	WITHOUT_CLASSIFICATION	2.6812808867061785E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999893338358379	WITHOUT_CLASSIFICATION	1.066616416215204E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999893338358379	WITHOUT_CLASSIFICATION	1.066616416215204E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999943507249213	WITHOUT_CLASSIFICATION	5.649275078724412E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999894910879685	WITHOUT_CLASSIFICATION	1.0508912031561943E-5	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999996014789424	WITHOUT_CLASSIFICATION	3.9852105755477875E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.999999293080898	WITHOUT_CLASSIFICATION	7.069191019521846E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.999999293080898	WITHOUT_CLASSIFICATION	7.069191019521846E-7	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999985161902453	WITHOUT_CLASSIFICATION	1.4838097547671352E-6	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999994921112851	WITHOUT_CLASSIFICATION	5.078887148463718E-7	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.999999648304242	WITHOUT_CLASSIFICATION	3.516957579802037E-7	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999998579502293	WITHOUT_CLASSIFICATION	1.4204977074776396E-7	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999737532822928	WITHOUT_CLASSIFICATION	2.6246717707162445E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999988088957147	WITHOUT_CLASSIFICATION	1.191104285328297E-6	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999592629103861	WITHOUT_CLASSIFICATION	4.0737089613864214E-5	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999955243068381	WITHOUT_CLASSIFICATION	4.475693161969563E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999882436130567	WITHOUT_CLASSIFICATION	1.1756386943257096E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999882436130567	WITHOUT_CLASSIFICATION	1.1756386943257096E-5	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999974367912599	WITHOUT_CLASSIFICATION	2.563208740148101E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999974367912599	WITHOUT_CLASSIFICATION	2.563208740148101E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999770140760509	WITHOUT_CLASSIFICATION	2.2985923949070974E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999878054451787	WITHOUT_CLASSIFICATION	1.2194554821254327E-5	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999985089853233	WITHOUT_CLASSIFICATION	1.4910146767267889E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999964933812648	WITHOUT_CLASSIFICATION	3.506618735130829E-6	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999940462310046	WITHOUT_CLASSIFICATION	5.953768995307984E-6	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999995620248855	WITHOUT_CLASSIFICATION	4.379751145726163E-7	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999981658030782	WITHOUT_CLASSIFICATION	1.8341969217392983E-6	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999984280114249	WITHOUT_CLASSIFICATION	1.5719885750290004E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999995065002624	WITHOUT_CLASSIFICATION	4.934997376011321E-7	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999931028823825	WITHOUT_CLASSIFICATION	6.89711761754153E-6	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999992516639312	WITHOUT_CLASSIFICATION	7.483360687822918E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999864832010792	WITHOUT_CLASSIFICATION	1.3516798920806365E-5	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999864832010792	WITHOUT_CLASSIFICATION	1.3516798920806365E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999223149838544	WITHOUT_CLASSIFICATION	7.768501614560976E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999223149838544	WITHOUT_CLASSIFICATION	7.768501614560976E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999979450407129	WITHOUT_CLASSIFICATION	2.0549592870866426E-6	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9999922587408289	WITHOUT_CLASSIFICATION	7.741259171132491E-6	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999527069366647	WITHOUT_CLASSIFICATION	4.7293063335210465E-5	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9998914191933117	WITHOUT_CLASSIFICATION	1.0858080668836244E-4	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999958128350995	WITHOUT_CLASSIFICATION	4.187164900488232E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999967005268521	WITHOUT_CLASSIFICATION	3.299473147888841E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999994472689808	WITHOUT_CLASSIFICATION	5.527310191783648E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999971926592328	WITHOUT_CLASSIFICATION	2.807340767091119E-6	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999971926592328	WITHOUT_CLASSIFICATION	2.807340767091119E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999962881759199	WITHOUT_CLASSIFICATION	3.711824080053963E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999962881759199	WITHOUT_CLASSIFICATION	3.711824080053963E-6	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999988280807316	WITHOUT_CLASSIFICATION	1.1719192684192235E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999992649998181	WITHOUT_CLASSIFICATION	7.350001819970956E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999548290044309	WITHOUT_CLASSIFICATION	4.5170995569173036E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999548290044309	WITHOUT_CLASSIFICATION	4.5170995569173036E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999548290044309	WITHOUT_CLASSIFICATION	4.5170995569173036E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999998883264639	WITHOUT_CLASSIFICATION	1.1167353614977038E-7	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999977726811634	WITHOUT_CLASSIFICATION	2.2273188365525784E-6	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999921292783102	WITHOUT_CLASSIFICATION	7.870721689883583E-6	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999994018918433	WITHOUT_CLASSIFICATION	5.981081566134081E-7	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999972425890417	WITHOUT_CLASSIFICATION	2.7574109583534522E-6	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.99996556426666	WITHOUT_CLASSIFICATION	3.44357333401031E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.999996621069803	WITHOUT_CLASSIFICATION	3.3789301969355536E-6	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999994231970474	WITHOUT_CLASSIFICATION	5.76802952730021E-7	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999991226183931	WITHOUT_CLASSIFICATION	8.773816068899608E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999991634077879	WITHOUT_CLASSIFICATION	8.365922120305105E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999961514399202	WITHOUT_CLASSIFICATION	3.84856007988316E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999976118882701	WITHOUT_CLASSIFICATION	2.3881117299298246E-6	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999959781367658	WITHOUT_CLASSIFICATION	4.02186323418304E-6	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.999998122756996	WITHOUT_CLASSIFICATION	1.8772430039682923E-6	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999996543787768	WITHOUT_CLASSIFICATION	3.456212231955934E-7	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999993657073808	WITHOUT_CLASSIFICATION	6.342926191713404E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999970056454616	WITHOUT_CLASSIFICATION	2.99435453846739E-6	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.999994726393327	WITHOUT_CLASSIFICATION	5.273606672911763E-6	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999895411304227	WITHOUT_CLASSIFICATION	1.045886957720616E-5	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999995347865076	WITHOUT_CLASSIFICATION	4.6521349240015587E-7	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.999999627991838	WITHOUT_CLASSIFICATION	3.7200816209205317E-7	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999882911618618	WITHOUT_CLASSIFICATION	1.1708838138099812E-5	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999907638470877	WITHOUT_CLASSIFICATION	9.23615291216175E-6	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999860489482857	WITHOUT_CLASSIFICATION	1.3951051714377583E-5	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999888431085802	WITHOUT_CLASSIFICATION	1.115689141974884E-5	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999829369133612	WITHOUT_CLASSIFICATION	1.706308663877166E-5	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999847458723452	WITHOUT_CLASSIFICATION	1.5254127654757294E-5	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999984831749755	WITHOUT_CLASSIFICATION	1.5168250244779531E-6	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999764769280116	WITHOUT_CLASSIFICATION	2.3523071988474137E-5	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.999992493424536	WITHOUT_CLASSIFICATION	7.506575464088361E-6	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999989636921767	WITHOUT_CLASSIFICATION	1.0363078233420798E-6	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999578988285118	WITHOUT_CLASSIFICATION	4.2101171488289236E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999853628411002	WITHOUT_CLASSIFICATION	1.4637158899882026E-5	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.99999692792292	WITHOUT_CLASSIFICATION	3.072077079889242E-6	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999718086743156	WITHOUT_CLASSIFICATION	2.8191325684459387E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999995197156528	WITHOUT_CLASSIFICATION	4.802843471455102E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999760268267563	WITHOUT_CLASSIFICATION	2.3973173243660207E-5	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999963802289515	WITHOUT_CLASSIFICATION	3.6197710484290633E-6	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999958407328917	WITHOUT_CLASSIFICATION	4.159267108334956E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999994949704654	WITHOUT_CLASSIFICATION	5.050295345608797E-7	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999986629706807	WITHOUT_CLASSIFICATION	1.3370293192203067E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999996576980124	WITHOUT_CLASSIFICATION	3.4230198770577723E-7	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9983046100485401	WITHOUT_CLASSIFICATION	0.001695389951459856	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999998311993612	WITHOUT_CLASSIFICATION	1.6880063879281706E-7	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999980416086621	WITHOUT_CLASSIFICATION	1.958391337989063E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999999180099945	WITHOUT_CLASSIFICATION	8.199000555854934E-8	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.999999681059365	WITHOUT_CLASSIFICATION	3.189406349282836E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999939886901804	WITHOUT_CLASSIFICATION	6.011309819604833E-6	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999800691424745	WITHOUT_CLASSIFICATION	1.993085752546258E-5	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999848079301719	WITHOUT_CLASSIFICATION	1.5192069828223427E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999997537151616	WITHOUT_CLASSIFICATION	2.462848383752773E-7	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999999645643817	WITHOUT_CLASSIFICATION	3.543561835913764E-8	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999992343933863	WITHOUT_CLASSIFICATION	7.656066137160094E-7	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999996356861494	WITHOUT_CLASSIFICATION	3.6431385063009553E-7	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.999999765987747	WITHOUT_CLASSIFICATION	2.3401225296273895E-7	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999994266567808	WITHOUT_CLASSIFICATION	5.733432192883866E-7	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9983046100485401	WITHOUT_CLASSIFICATION	0.001695389951459856	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9983046100485401	WITHOUT_CLASSIFICATION	0.001695389951459856	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999899876629409	WITHOUT_CLASSIFICATION	1.0012337058997622E-5	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999995819011296	WITHOUT_CLASSIFICATION	4.1809887040613594E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999996945682885	WITHOUT_CLASSIFICATION	3.054317114723026E-7	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999956051495059	WITHOUT_CLASSIFICATION	4.394850494129499E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999956051495059	WITHOUT_CLASSIFICATION	4.394850494129499E-6	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999990588762315	WITHOUT_CLASSIFICATION	9.4112376837882E-7	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999997593705747	WITHOUT_CLASSIFICATION	2.4062942533932196E-7	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999997742832213	WITHOUT_CLASSIFICATION	2.257167787555313E-7	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9999995705939164	WITHOUT_CLASSIFICATION	4.2940608364877966E-7	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999927653768663	WITHOUT_CLASSIFICATION	7.2346231337083196E-6	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.999997435299062	WITHOUT_CLASSIFICATION	2.5647009380293933E-6	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999998903010362	WITHOUT_CLASSIFICATION	1.0969896380116383E-7	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999956447787274	WITHOUT_CLASSIFICATION	4.355221272561289E-6	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999056034709474	WITHOUT_CLASSIFICATION	9.439652905275111E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999881618658614	WITHOUT_CLASSIFICATION	1.1838134138582941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999814525409793	WITHOUT_CLASSIFICATION	1.8547459020721573E-5	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.999998654256534	WITHOUT_CLASSIFICATION	1.345743465920933E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999927653768663	WITHOUT_CLASSIFICATION	7.2346231337083196E-6	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882436130567	WITHOUT_CLASSIFICATION	1.1756386943257096E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882436130567	WITHOUT_CLASSIFICATION	1.1756386943257096E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999231923136532	WITHOUT_CLASSIFICATION	7.680768634672078E-5	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999962668483388	WITHOUT_CLASSIFICATION	3.733151661343261E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999983797938928	WITHOUT_CLASSIFICATION	1.6202061071735875E-6	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999971934482166	WITHOUT_CLASSIFICATION	2.806551783314985E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9996810038555506	WITHOUT_CLASSIFICATION	3.189961444494375E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999638404056523	WITHOUT_CLASSIFICATION	3.61595943476907E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999638404056523	WITHOUT_CLASSIFICATION	3.61595943476907E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999929037492932	WITHOUT_CLASSIFICATION	7.096250706900306E-6	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9997432568651683	WITHOUT_CLASSIFICATION	2.5674313483165157E-4	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.999983312123437	WITHOUT_CLASSIFICATION	1.6687876562876505E-5	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9993672780164063	WITHOUT_CLASSIFICATION	6.327219835936187E-4	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9997919883657398	WITHOUT_CLASSIFICATION	2.080116342602511E-4	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999798322165888	WITHOUT_CLASSIFICATION	2.0167783411197545E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.999827323608091	WITHOUT_CLASSIFICATION	1.726763919089701E-4	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9998669000527628	WITHOUT_CLASSIFICATION	1.330999472372787E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999699158445	WITHOUT_CLASSIFICATION	3.0084155489072525E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999967414742686	WITHOUT_CLASSIFICATION	3.2585257314680624E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995975042744	WITHOUT_CLASSIFICATION	4.024957256596449E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999986918978489	WITHOUT_CLASSIFICATION	1.3081021511024562E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999946769627697	WITHOUT_CLASSIFICATION	5.323037230284499E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999994914656819	WITHOUT_CLASSIFICATION	5.085343181673669E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999986760492949	WITHOUT_CLASSIFICATION	1.323950705121108E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999678735363005	WITHOUT_CLASSIFICATION	3.2126463699642015E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999996129481828	WITHOUT_CLASSIFICATION	3.8705181703230334E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999741223410226	WITHOUT_CLASSIFICATION	2.5877658977470268E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958287494888	WITHOUT_CLASSIFICATION	4.1712505112307436E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999923529734214	WITHOUT_CLASSIFICATION	7.647026578601426E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.99999761524383	WITHOUT_CLASSIFICATION	2.3847561699566066E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999998007895808	WITHOUT_CLASSIFICATION	1.9921041920351543E-6	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999990920371862	WITHOUT_CLASSIFICATION	9.079628138591568E-7	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999835416280269	WITHOUT_CLASSIFICATION	1.6458371973036412E-5	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999955217693679	WITHOUT_CLASSIFICATION	4.478230632091359E-6	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999977816013408	WITHOUT_CLASSIFICATION	2.2183986592542015E-6	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999751987157159	WITHOUT_CLASSIFICATION	2.4801284284024383E-5	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999725859512877	WITHOUT_CLASSIFICATION	2.7414048712370196E-5	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999993589178728	WITHOUT_CLASSIFICATION	6.410821272206857E-7	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999750791969526	WITHOUT_CLASSIFICATION	2.492080304745182E-5	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999616977397472	WITHOUT_CLASSIFICATION	3.830226025279801E-5	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999896383882727	WITHOUT_CLASSIFICATION	1.036161172730935E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999949110575919	WITHOUT_CLASSIFICATION	5.088942408181836E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999949110575919	WITHOUT_CLASSIFICATION	5.088942408181836E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999922955392873	WITHOUT_CLASSIFICATION	7.704460712650848E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999969001569521	WITHOUT_CLASSIFICATION	3.0998430479904563E-6	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999900895088836	WITHOUT_CLASSIFICATION	9.910491116430635E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999829792244247	WITHOUT_CLASSIFICATION	1.702077557528553E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999829792244247	WITHOUT_CLASSIFICATION	1.702077557528553E-5	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999987616092149	WITHOUT_CLASSIFICATION	1.238390785112862E-6	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999990602884199	WITHOUT_CLASSIFICATION	9.397115800354372E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999988718702999	WITHOUT_CLASSIFICATION	1.1281297000513105E-6	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999684015478155	WITHOUT_CLASSIFICATION	3.159845218454508E-5	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999724438279417	WITHOUT_CLASSIFICATION	2.755617205840353E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999986918978489	WITHOUT_CLASSIFICATION	1.3081021511024562E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999992930955737	WITHOUT_CLASSIFICATION	7.069044263261997E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999994914656819	WITHOUT_CLASSIFICATION	5.085343181673669E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999678735363005	WITHOUT_CLASSIFICATION	3.2126463699642015E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958287494888	WITHOUT_CLASSIFICATION	4.1712505112307436E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999923529734214	WITHOUT_CLASSIFICATION	7.647026578601426E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999940223166941	WITHOUT_CLASSIFICATION	5.977683305883227E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999998007895808	WITHOUT_CLASSIFICATION	1.9921041920351543E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999652175716905	WITHOUT_CLASSIFICATION	3.4782428309578356E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999223149838544	WITHOUT_CLASSIFICATION	7.768501614560976E-5	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.999985290495725	WITHOUT_CLASSIFICATION	1.4709504275010218E-5	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999697255892279	WITHOUT_CLASSIFICATION	3.0274410772003297E-5	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999971784581413	WITHOUT_CLASSIFICATION	2.8215418586089837E-6	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999265236484935	WITHOUT_CLASSIFICATION	7.347635150648711E-5	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9999420187947559	WITHOUT_CLASSIFICATION	5.7981205244220524E-5	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999991590852768	WITHOUT_CLASSIFICATION	8.409147232072732E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9987739011081475	WITHOUT_CLASSIFICATION	0.0012260988918525667	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999018781225155	WITHOUT_CLASSIFICATION	9.81218774844975E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999941243511212	WITHOUT_CLASSIFICATION	5.87564887875577E-6	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999616442384803	WITHOUT_CLASSIFICATION	3.8355761519720974E-5	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999776559596777	WITHOUT_CLASSIFICATION	2.2344040322325473E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9997293271078814	WITHOUT_CLASSIFICATION	2.7067289211854626E-4	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998427344260483	WITHOUT_CLASSIFICATION	1.5726557395173363E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999416143032165	WITHOUT_CLASSIFICATION	5.838569678358392E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999962142406015	WITHOUT_CLASSIFICATION	3.7857593986382683E-6	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999848491973525	WITHOUT_CLASSIFICATION	1.5150802647575776E-5	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9997023873398421	WITHOUT_CLASSIFICATION	2.976126601579445E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999992496830694	WITHOUT_CLASSIFICATION	7.503169306385378E-7	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999995785068733	WITHOUT_CLASSIFICATION	4.214931267857033E-7	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999995785068733	WITHOUT_CLASSIFICATION	4.214931267857033E-7	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999981113222794	WITHOUT_CLASSIFICATION	1.8886777206658554E-6	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9997688874629532	WITHOUT_CLASSIFICATION	2.3111253704675682E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999435347869967	WITHOUT_CLASSIFICATION	5.6465213003304335E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999435347869967	WITHOUT_CLASSIFICATION	5.6465213003304335E-5	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999901711769016	WITHOUT_CLASSIFICATION	9.828823098413402E-6	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.999999019001438	WITHOUT_CLASSIFICATION	9.809985619966122E-7	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999995100873686	WITHOUT_CLASSIFICATION	4.89912631330359E-7	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999991664609644	WITHOUT_CLASSIFICATION	8.33539035640284E-7	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999970348483125	WITHOUT_CLASSIFICATION	2.965151687485096E-6	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999984553468446	WITHOUT_CLASSIFICATION	1.5446531554452418E-6	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999919868931886	WITHOUT_CLASSIFICATION	8.013106811443851E-6	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999842579159572	WITHOUT_CLASSIFICATION	1.5742084042691293E-5	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999978161075236	WITHOUT_CLASSIFICATION	2.183892476478884E-6	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999928010065535	WITHOUT_CLASSIFICATION	7.19899344642468E-6	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998726229384719	WITHOUT_CLASSIFICATION	1.2737706152805836E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999416143032165	WITHOUT_CLASSIFICATION	5.838569678358392E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9996804626460561	WITHOUT_CLASSIFICATION	3.195373539439096E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999875326412588	WITHOUT_CLASSIFICATION	1.2467358741206097E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999885939924548	WITHOUT_CLASSIFICATION	1.1406007545275264E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999986382958961	WITHOUT_CLASSIFICATION	1.3617041039059727E-6	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9999986407978069	WITHOUT_CLASSIFICATION	1.3592021931267992E-6	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999865832987647	WITHOUT_CLASSIFICATION	1.3416701235355574E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999997000286456	WITHOUT_CLASSIFICATION	2.9997135438939105E-7	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902263090134	WITHOUT_CLASSIFICATION	9.77369098673822E-6	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902263090134	WITHOUT_CLASSIFICATION	9.77369098673822E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.99998615952469	WITHOUT_CLASSIFICATION	1.3840475309953325E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999871141714242	WITHOUT_CLASSIFICATION	1.2885828575862938E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999842579159572	WITHOUT_CLASSIFICATION	1.5742084042691293E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999842579159572	WITHOUT_CLASSIFICATION	1.5742084042691293E-5	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999929387959842	WITHOUT_CLASSIFICATION	7.061204015858273E-6	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9999428392036978	WITHOUT_CLASSIFICATION	5.71607963022444E-5	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999989139383311	WITHOUT_CLASSIFICATION	1.0860616689650159E-6	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999757274000634	WITHOUT_CLASSIFICATION	2.42725999367368E-5	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.999998494589717	WITHOUT_CLASSIFICATION	1.5054102828927048E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999983802693645	WITHOUT_CLASSIFICATION	1.6197306355920267E-6	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999970402454414	WITHOUT_CLASSIFICATION	2.959754558598888E-6	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999805605616547	WITHOUT_CLASSIFICATION	1.9439438345181626E-5	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999979100139825	WITHOUT_CLASSIFICATION	2.089986017535224E-6	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9994739997170277	WITHOUT_CLASSIFICATION	5.260002829723522E-4	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999967440318471	WITHOUT_CLASSIFICATION	3.2559681529284E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999994902425645	WITHOUT_CLASSIFICATION	5.097574354043404E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999994902425645	WITHOUT_CLASSIFICATION	5.097574354043404E-7	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.999994979098983	WITHOUT_CLASSIFICATION	5.020901016988955E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999987189254523	WITHOUT_CLASSIFICATION	1.2810745476901876E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999987189254523	WITHOUT_CLASSIFICATION	1.2810745476901876E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999807401225691	WITHOUT_CLASSIFICATION	1.925987743091732E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999807401225691	WITHOUT_CLASSIFICATION	1.925987743091732E-5	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999964109787615	WITHOUT_CLASSIFICATION	3.589021238605909E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999998785266908	WITHOUT_CLASSIFICATION	1.2147330928009347E-7	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999998785266908	WITHOUT_CLASSIFICATION	1.2147330928009347E-7	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999976142862681	WITHOUT_CLASSIFICATION	2.385713731951224E-6	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999905873522246	WITHOUT_CLASSIFICATION	9.41264777551913E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997386656369585	WITHOUT_CLASSIFICATION	2.613343630415832E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999664460977052	WITHOUT_CLASSIFICATION	3.355390229483409E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.999999505812658	WITHOUT_CLASSIFICATION	4.941873419830038E-7	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999967969948841	WITHOUT_CLASSIFICATION	3.2030051158807212E-6	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999882476432089	WITHOUT_CLASSIFICATION	1.1752356791073049E-5	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999002420252294	WITHOUT_CLASSIFICATION	9.975797477049281E-5	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999804502408881	WITHOUT_CLASSIFICATION	1.954975911191858E-5	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999969832044296	WITHOUT_CLASSIFICATION	3.016795570398686E-6	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999993885538181	WITHOUT_CLASSIFICATION	6.114461819708574E-7	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999968823840694	WITHOUT_CLASSIFICATION	3.117615930702514E-6	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999930813528476	WITHOUT_CLASSIFICATION	6.918647152366396E-6	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999905873522246	WITHOUT_CLASSIFICATION	9.41264777551913E-6	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999998295951011	WITHOUT_CLASSIFICATION	1.7040489895394205E-7	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999857844753343	WITHOUT_CLASSIFICATION	1.4215524665777555E-5	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999994999989702	WITHOUT_CLASSIFICATION	5.000010298030818E-7	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999949501393307	WITHOUT_CLASSIFICATION	5.049860669395234E-6	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999994980924711	WITHOUT_CLASSIFICATION	5.019075289330267E-7	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999987956510182	WITHOUT_CLASSIFICATION	1.204348981750675E-6	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999338696242996	WITHOUT_CLASSIFICATION	6.613037570039921E-5	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999910398322764	WITHOUT_CLASSIFICATION	8.960167723589116E-6	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999969966750268	WITHOUT_CLASSIFICATION	3.0033249731905184E-6	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999978816099894	WITHOUT_CLASSIFICATION	2.118390010648349E-6	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9997003447358631	WITHOUT_CLASSIFICATION	2.996552641369626E-4	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9998859824378634	WITHOUT_CLASSIFICATION	1.1401756213652653E-4	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999962929147512	WITHOUT_CLASSIFICATION	3.707085248779195E-6	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9996554098732419	WITHOUT_CLASSIFICATION	3.445901267580835E-4	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999991140502393	WITHOUT_CLASSIFICATION	8.859497606295851E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999285852843762	WITHOUT_CLASSIFICATION	7.141471562381236E-5	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999996834639022	WITHOUT_CLASSIFICATION	3.165360977724707E-7	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999979186898807	WITHOUT_CLASSIFICATION	2.081310119280388E-6	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.999999870914888	WITHOUT_CLASSIFICATION	1.290851119837878E-7	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999983060021451	WITHOUT_CLASSIFICATION	1.6939978549501338E-6	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999995645402127	WITHOUT_CLASSIFICATION	4.354597874347881E-7	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999488070378968	WITHOUT_CLASSIFICATION	5.119296210326055E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999997581742271	WITHOUT_CLASSIFICATION	2.4182577281622933E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999990001870996	WITHOUT_CLASSIFICATION	9.998129003395153E-7	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9999994444991173	WITHOUT_CLASSIFICATION	5.55500882793769E-7	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999995988805711	WITHOUT_CLASSIFICATION	4.0111942892754044E-7	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999765496295288	WITHOUT_CLASSIFICATION	2.345037047119989E-5	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999956275736193	WITHOUT_CLASSIFICATION	4.372426380730023E-6	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999996226043714	WITHOUT_CLASSIFICATION	3.7739562859752685E-7	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9999935489085386	WITHOUT_CLASSIFICATION	6.451091461375765E-6	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.999992968096967	WITHOUT_CLASSIFICATION	7.03190303295584E-6	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999993393031785	WITHOUT_CLASSIFICATION	6.606968216134617E-7	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.999997584518717	WITHOUT_CLASSIFICATION	2.4154812830301654E-6	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999995390510116	WITHOUT_CLASSIFICATION	4.609489884268833E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999996102076636	WITHOUT_CLASSIFICATION	3.897923364153026E-7	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999052114737887	WITHOUT_CLASSIFICATION	9.478852621131506E-5	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999998699516821	WITHOUT_CLASSIFICATION	1.3004831786571964E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999990001870996	WITHOUT_CLASSIFICATION	9.998129003395153E-7	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999991244915916	WITHOUT_CLASSIFICATION	8.755084084827448E-7	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.999999187791698	WITHOUT_CLASSIFICATION	8.12208301903301E-7	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.999999187791698	WITHOUT_CLASSIFICATION	8.12208301903301E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999928702219291	WITHOUT_CLASSIFICATION	7.129778070942513E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999928702219291	WITHOUT_CLASSIFICATION	7.129778070942513E-6	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9999721267530016	WITHOUT_CLASSIFICATION	2.787324699839518E-5	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999982813997846	WITHOUT_CLASSIFICATION	1.7186002153231043E-6	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999990887250355	WITHOUT_CLASSIFICATION	9.112749644557895E-7	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999641116501365	WITHOUT_CLASSIFICATION	3.5888349863477124E-5	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999965804791662	WITHOUT_CLASSIFICATION	3.419520833787746E-6	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.999977227298392	WITHOUT_CLASSIFICATION	2.2772701608085538E-5	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9995706122387762	WITHOUT_CLASSIFICATION	4.2938776122373356E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999984819631	WITHOUT_CLASSIFICATION	1.5180368998511415E-6	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999936059029854	WITHOUT_CLASSIFICATION	6.394097014658634E-6	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999937626992792	WITHOUT_CLASSIFICATION	6.2373007207264405E-6	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.999919189973728	WITHOUT_CLASSIFICATION	8.081002627213045E-5	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.999996209049972	WITHOUT_CLASSIFICATION	3.790950028145107E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999988244118726	WITHOUT_CLASSIFICATION	1.1755881274233026E-6	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.999995450543947	WITHOUT_CLASSIFICATION	4.549456053027906E-6	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999976284302952	WITHOUT_CLASSIFICATION	2.3715697048442925E-6	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999979839097837	WITHOUT_CLASSIFICATION	2.0160902162928457E-6	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999982769170308	WITHOUT_CLASSIFICATION	1.7230829691902093E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999986382958961	WITHOUT_CLASSIFICATION	1.3617041039059727E-6	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999919235477525	WITHOUT_CLASSIFICATION	8.07645224742953E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999996325770417	WITHOUT_CLASSIFICATION	3.6742295822604845E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999652175716905	WITHOUT_CLASSIFICATION	3.4782428309578356E-5	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999996325770417	WITHOUT_CLASSIFICATION	3.6742295822604845E-7	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999730115363505	WITHOUT_CLASSIFICATION	2.6988463649406188E-5	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9997510966303678	WITHOUT_CLASSIFICATION	2.4890336963230504E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.999987472909315	WITHOUT_CLASSIFICATION	1.252709068509047E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999959611778569	WITHOUT_CLASSIFICATION	4.0388221429531385E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999984684917026	WITHOUT_CLASSIFICATION	1.531508297389881E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999854555493938	WITHOUT_CLASSIFICATION	1.4544450606144615E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999854555493938	WITHOUT_CLASSIFICATION	1.4544450606144615E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999560509581931	WITHOUT_CLASSIFICATION	4.3949041806921554E-5	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999994354382878	WITHOUT_CLASSIFICATION	5.64561712136719E-7	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.999999554304906	WITHOUT_CLASSIFICATION	4.4569509404389046E-7	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999965765420471	WITHOUT_CLASSIFICATION	3.4234579529801157E-6	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999988941779876	WITHOUT_CLASSIFICATION	1.1058220123638992E-6	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.999997512022963	WITHOUT_CLASSIFICATION	2.4879770370676845E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999984684917026	WITHOUT_CLASSIFICATION	1.531508297389881E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999854555493938	WITHOUT_CLASSIFICATION	1.4544450606144615E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999854555493938	WITHOUT_CLASSIFICATION	1.4544450606144615E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999560509581931	WITHOUT_CLASSIFICATION	4.3949041806921554E-5	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999986347396493	WITHOUT_CLASSIFICATION	1.3652603506629325E-6	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999964790944537	WITHOUT_CLASSIFICATION	3.5209055462642434E-6	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999928377472396	WITHOUT_CLASSIFICATION	7.1622527603643315E-6	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999975507805952	WITHOUT_CLASSIFICATION	2.449219404817649E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999951356354869	WITHOUT_CLASSIFICATION	4.864364513128103E-6	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9999969354507805	WITHOUT_CLASSIFICATION	3.064549219632376E-6	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999998506882567	WITHOUT_CLASSIFICATION	1.4931174333508303E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999891495618561	WITHOUT_CLASSIFICATION	1.0850438143767882E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999891495618561	WITHOUT_CLASSIFICATION	1.0850438143767882E-5	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999886722671086	WITHOUT_CLASSIFICATION	1.1327732891304862E-5	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999904587593148	WITHOUT_CLASSIFICATION	9.541240685244745E-6	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.999962956084599	WITHOUT_CLASSIFICATION	3.704391540116092E-5	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9999961286651612	WITHOUT_CLASSIFICATION	3.871334838820699E-6	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999335513094614	WITHOUT_CLASSIFICATION	6.644869053867747E-5	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999562813740983	WITHOUT_CLASSIFICATION	4.371862590173196E-5	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999995250694301	WITHOUT_CLASSIFICATION	4.749305698966553E-7	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999986623404954	WITHOUT_CLASSIFICATION	1.337659504525932E-6	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.999954731878135	WITHOUT_CLASSIFICATION	4.526812186490607E-5	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999958163728258	WITHOUT_CLASSIFICATION	4.183627174303052E-6	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999972226473114	WITHOUT_CLASSIFICATION	2.7773526886091795E-6	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999940522049612	WITHOUT_CLASSIFICATION	5.947795038781942E-6	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999990921439854	WITHOUT_CLASSIFICATION	9.078560144510178E-7	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9999933628483568	WITHOUT_CLASSIFICATION	6.63715164320697E-6	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999685972109209	WITHOUT_CLASSIFICATION	3.1402789079049716E-5	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999790973008861	WITHOUT_CLASSIFICATION	2.090269911390313E-5	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999938179354927	WITHOUT_CLASSIFICATION	6.182064507248128E-6	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999993489927232	WITHOUT_CLASSIFICATION	6.510072767549872E-7	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9998527818827276	WITHOUT_CLASSIFICATION	1.472181172723529E-4	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999971222619867	WITHOUT_CLASSIFICATION	2.877738013435754E-6	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999987482287577	WITHOUT_CLASSIFICATION	1.251771242295325E-6	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999923502937429	WITHOUT_CLASSIFICATION	7.649706257124387E-6	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999988543972028	WITHOUT_CLASSIFICATION	1.1456027972581462E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999978005520465	WITHOUT_CLASSIFICATION	2.199447953518731E-6	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999986931033045	WITHOUT_CLASSIFICATION	1.3068966954441408E-6	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999997403674286	WITHOUT_CLASSIFICATION	2.5963257143451674E-7	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999998317741331	WITHOUT_CLASSIFICATION	1.6822586684742325E-7	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.999902211779094	WITHOUT_CLASSIFICATION	9.778822090606988E-5	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999996805241298	WITHOUT_CLASSIFICATION	3.1947587022258146E-7	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999843827113651	WITHOUT_CLASSIFICATION	1.5617288634878974E-5	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999941750766597	WITHOUT_CLASSIFICATION	5.82492334034699E-6	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999955498138527	WITHOUT_CLASSIFICATION	4.450186147205643E-6	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9997608140185917	WITHOUT_CLASSIFICATION	2.3918598140828243E-4	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999971083022187	WITHOUT_CLASSIFICATION	2.8916977813045593E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999913353815101	WITHOUT_CLASSIFICATION	8.664618490004524E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999913353815101	WITHOUT_CLASSIFICATION	8.664618490004524E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999987897044785	WITHOUT_CLASSIFICATION	1.2102955214784582E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999929744701105	WITHOUT_CLASSIFICATION	7.0255298894347916E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999664089300386	WITHOUT_CLASSIFICATION	3.3591069961311095E-5	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999838807466966	WITHOUT_CLASSIFICATION	1.611925330328772E-5	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9997621858755232	WITHOUT_CLASSIFICATION	2.3781412447676132E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999930071407966	WITHOUT_CLASSIFICATION	6.992859203392143E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999963681201807	WITHOUT_CLASSIFICATION	3.6318798193091074E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924163295582	WITHOUT_CLASSIFICATION	7.5836704417434E-6	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9999818077177346	WITHOUT_CLASSIFICATION	1.8192282265459383E-5	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999989684079696	WITHOUT_CLASSIFICATION	1.031592030362284E-6	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999996717514792	WITHOUT_CLASSIFICATION	3.282485208544511E-7	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999956655325494	WITHOUT_CLASSIFICATION	4.334467450624756E-6	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999769505735131	WITHOUT_CLASSIFICATION	2.304942648694766E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999861330585342	WITHOUT_CLASSIFICATION	1.3866941465759484E-5	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9999603206929811	WITHOUT_CLASSIFICATION	3.967930701884194E-5	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999557544672429	WITHOUT_CLASSIFICATION	4.424553275699437E-5	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999927907172105	WITHOUT_CLASSIFICATION	7.2092827895970006E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999966225575662	WITHOUT_CLASSIFICATION	3.3774424338250267E-6	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999974798105776	WITHOUT_CLASSIFICATION	2.52018942231653E-6	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999768749860065	WITHOUT_CLASSIFICATION	2.3125013993434012E-5	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999976302371095	WITHOUT_CLASSIFICATION	2.3697628905530494E-6	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.999998545364329	WITHOUT_CLASSIFICATION	1.4546356710947793E-6	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9998573301979252	WITHOUT_CLASSIFICATION	1.4266980207474692E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.999997492211543	WITHOUT_CLASSIFICATION	2.5077884569436963E-6	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999996460461458	WITHOUT_CLASSIFICATION	3.5395385425437974E-7	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999994647319616	WITHOUT_CLASSIFICATION	5.352680384512696E-7	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999982477064233	WITHOUT_CLASSIFICATION	1.7522935766073801E-6	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999967603489193	WITHOUT_CLASSIFICATION	3.23965108080479E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999937213428358	WITHOUT_CLASSIFICATION	6.278657164126054E-6	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999833901387648	WITHOUT_CLASSIFICATION	1.6609861235165496E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999872877622484	WITHOUT_CLASSIFICATION	1.2712237751621485E-5	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999980394914364	WITHOUT_CLASSIFICATION	1.9605085636449757E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999993475704444	WITHOUT_CLASSIFICATION	6.524295556993534E-7	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999995915126636	WITHOUT_CLASSIFICATION	4.0848733640192867E-7	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999951672396686	WITHOUT_CLASSIFICATION	4.832760331300362E-6	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999993502977543	WITHOUT_CLASSIFICATION	6.497022455924894E-7	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999774625159107	WITHOUT_CLASSIFICATION	2.253748408933453E-5	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999996969499204	WITHOUT_CLASSIFICATION	3.030500796455016E-7	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.999965343694015	WITHOUT_CLASSIFICATION	3.465630598496408E-5	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999963789746755	WITHOUT_CLASSIFICATION	3.6210253243882372E-6	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999963026601077	WITHOUT_CLASSIFICATION	3.697339892293834E-6	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999911953003086	WITHOUT_CLASSIFICATION	8.804699691392244E-6	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999994933129138	WITHOUT_CLASSIFICATION	5.066870862077905E-7	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999997128568	WITHOUT_CLASSIFICATION	2.8714319997265834E-7	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999560241003936	WITHOUT_CLASSIFICATION	4.397589960628497E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999954309120055	WITHOUT_CLASSIFICATION	4.569087994484034E-6	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999998103458022	WITHOUT_CLASSIFICATION	1.8965419769001126E-7	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999954309120055	WITHOUT_CLASSIFICATION	4.569087994484034E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998782740175629	WITHOUT_CLASSIFICATION	1.2172598243700361E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9999860013027845	WITHOUT_CLASSIFICATION	1.3998697215571739E-5	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999997639660664	WITHOUT_CLASSIFICATION	2.360339335842744E-7	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999917588478909	WITHOUT_CLASSIFICATION	8.241152108979132E-6	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999997507311298	WITHOUT_CLASSIFICATION	2.4926887021478075E-7	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.999999568454304	WITHOUT_CLASSIFICATION	4.3154569593645265E-7	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999911808999631	WITHOUT_CLASSIFICATION	8.819100036886323E-6	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9999570806223194	WITHOUT_CLASSIFICATION	4.2919377680685324E-5	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999603957038854	WITHOUT_CLASSIFICATION	3.960429611465839E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999974962068153	WITHOUT_CLASSIFICATION	2.5037931846088557E-6	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999996565836538	WITHOUT_CLASSIFICATION	3.4341634631800107E-7	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999806716467143	WITHOUT_CLASSIFICATION	1.9328353285709262E-5	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999909275506339	WITHOUT_CLASSIFICATION	9.072449366087146E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9998156070584442	WITHOUT_CLASSIFICATION	1.8439294155591683E-4	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999799457056293	WITHOUT_CLASSIFICATION	2.005429437072001E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.999999348235011	WITHOUT_CLASSIFICATION	6.517649889973441E-7	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999804464429095	WITHOUT_CLASSIFICATION	1.9553557090516815E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9999920081003013	WITHOUT_CLASSIFICATION	7.991899698637785E-6	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999162401318573	WITHOUT_CLASSIFICATION	8.375986814260015E-5	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999953973567864	WITHOUT_CLASSIFICATION	4.602643213575938E-6	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999911470433855	WITHOUT_CLASSIFICATION	8.852956614384817E-6	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.99999912978132	WITHOUT_CLASSIFICATION	8.702186800494775E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977221532603	WITHOUT_CLASSIFICATION	2.2778467396102164E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999911808999631	WITHOUT_CLASSIFICATION	8.819100036886323E-6	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999920055835099	WITHOUT_CLASSIFICATION	7.994416490064057E-6	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999986525037898	WITHOUT_CLASSIFICATION	1.3474962101728625E-6	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999986525037898	WITHOUT_CLASSIFICATION	1.3474962101728625E-6	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999996093227848	WITHOUT_CLASSIFICATION	3.906772152160806E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999991327773231	WITHOUT_CLASSIFICATION	8.672226769080324E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999991327773231	WITHOUT_CLASSIFICATION	8.672226769080324E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999961891337508	WITHOUT_CLASSIFICATION	3.8108662491911335E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999961891337508	WITHOUT_CLASSIFICATION	3.8108662491911335E-6	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9999365564650601	WITHOUT_CLASSIFICATION	6.344353494001863E-5	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999777998008899	WITHOUT_CLASSIFICATION	2.2200199110205433E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999979133409984	WITHOUT_CLASSIFICATION	2.0866590015746086E-6	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999817958471967	WITHOUT_CLASSIFICATION	1.820415280321569E-5	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999898827189967	WITHOUT_CLASSIFICATION	1.0117281003250008E-5	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999984972494458	WITHOUT_CLASSIFICATION	1.5027505542117045E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9999900809704318	WITHOUT_CLASSIFICATION	9.919029568193101E-6	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.99998947709281	WITHOUT_CLASSIFICATION	1.0522907189894697E-5	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999828621807074	WITHOUT_CLASSIFICATION	1.7137819292554174E-5	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999979890706282	WITHOUT_CLASSIFICATION	2.010929371758292E-6	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999996307428402	WITHOUT_CLASSIFICATION	3.6925715974081256E-7	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999891019572559	WITHOUT_CLASSIFICATION	1.089804274404444E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999722232093692	WITHOUT_CLASSIFICATION	2.7776790630927447E-5	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999991185651457	WITHOUT_CLASSIFICATION	8.814348543639536E-7	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999951914095379	WITHOUT_CLASSIFICATION	4.808590462241755E-6	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999958866938597	WITHOUT_CLASSIFICATION	4.113306140247343E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999979161760232	WITHOUT_CLASSIFICATION	2.0838239769017466E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9998611900855487	WITHOUT_CLASSIFICATION	1.3880991445135719E-4	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9998611900855487	WITHOUT_CLASSIFICATION	1.3880991445135719E-4	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999991111975535	WITHOUT_CLASSIFICATION	8.888024466316885E-7	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9998324459835151	WITHOUT_CLASSIFICATION	1.6755401648500755E-4	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999996884191288	WITHOUT_CLASSIFICATION	3.1158087130391846E-7	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999872551991965	WITHOUT_CLASSIFICATION	1.2744800803418955E-5	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999999777832294	WITHOUT_CLASSIFICATION	2.221677074480968E-8	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.999998429704285	WITHOUT_CLASSIFICATION	1.5702957149874822E-6	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999997137472232	WITHOUT_CLASSIFICATION	2.862527768086379E-7	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999971882660437	WITHOUT_CLASSIFICATION	2.8117339562964357E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999938432187285	WITHOUT_CLASSIFICATION	6.156781271523298E-6	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999998084229585	WITHOUT_CLASSIFICATION	1.9157704147947183E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999990484275074	WITHOUT_CLASSIFICATION	9.515724926150736E-7	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999899317945077	WITHOUT_CLASSIFICATION	1.0068205492357874E-5	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999940023029887	WITHOUT_CLASSIFICATION	5.997697011152711E-6	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999991980143815	WITHOUT_CLASSIFICATION	8.019856184367828E-7	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999908187654951	WITHOUT_CLASSIFICATION	9.181234504932898E-6	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999948791202683	WITHOUT_CLASSIFICATION	5.1208797317394045E-6	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999459847038442	WITHOUT_CLASSIFICATION	5.401529615586169E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999407611102648	WITHOUT_CLASSIFICATION	5.923888973523364E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9997766939588003	WITHOUT_CLASSIFICATION	2.233060411996076E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.999985604689555	WITHOUT_CLASSIFICATION	1.4395310444870587E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999764255729315	WITHOUT_CLASSIFICATION	2.357442706844059E-5	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999917756907335	WITHOUT_CLASSIFICATION	8.224309266517992E-6	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.999992002708674	WITHOUT_CLASSIFICATION	7.997291325908677E-6	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999999445159912	WITHOUT_CLASSIFICATION	5.548400886038981E-8	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999998624309023	WITHOUT_CLASSIFICATION	1.3756909757710384E-7	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999999262623064	WITHOUT_CLASSIFICATION	7.373769365110718E-8	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999999693970568	WITHOUT_CLASSIFICATION	3.0602943168586726E-8	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999998089763261	WITHOUT_CLASSIFICATION	1.9102367388060182E-7	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999899568362624	WITHOUT_CLASSIFICATION	1.0043163737623297E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999556828226456	WITHOUT_CLASSIFICATION	4.431717735446826E-5	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999388873769244	WITHOUT_CLASSIFICATION	6.111262307566407E-5	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999864174505054	WITHOUT_CLASSIFICATION	1.3582549494681583E-5	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.999666113448385	WITHOUT_CLASSIFICATION	3.338865516150921E-4	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999984412084483	WITHOUT_CLASSIFICATION	1.558791551688819E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.999982926695488	WITHOUT_CLASSIFICATION	1.7073304511927607E-5	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.999762678583797	WITHOUT_CLASSIFICATION	2.3732141620302005E-4	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9999691310118278	WITHOUT_CLASSIFICATION	3.086898817210897E-5	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999781191562336	WITHOUT_CLASSIFICATION	2.1880843766427242E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999962031521412	WITHOUT_CLASSIFICATION	3.7968478587042884E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999994111995958	WITHOUT_CLASSIFICATION	5.888004041874927E-7	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999984341998958	WITHOUT_CLASSIFICATION	1.5658001042844788E-6	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999976647488827	WITHOUT_CLASSIFICATION	2.3352511172192294E-6	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.999997712340972	WITHOUT_CLASSIFICATION	2.2876590278857634E-6	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999995665759652	WITHOUT_CLASSIFICATION	4.3342403481598744E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999564722419051	WITHOUT_CLASSIFICATION	4.35277580948661E-5	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.999999860849161	WITHOUT_CLASSIFICATION	1.391508389666059E-7	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999920335643909	WITHOUT_CLASSIFICATION	7.96643560913095E-6	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999995665759652	WITHOUT_CLASSIFICATION	4.3342403481598744E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999997635572416	WITHOUT_CLASSIFICATION	2.364427584839465E-7	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999976340436859	WITHOUT_CLASSIFICATION	2.365956314040431E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999918665105504	WITHOUT_CLASSIFICATION	8.13348944958155E-6	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999740921330649	WITHOUT_CLASSIFICATION	2.5907866935203595E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999843619335024	WITHOUT_CLASSIFICATION	1.5638066497682234E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999564722419051	WITHOUT_CLASSIFICATION	4.35277580948661E-5	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999920335643909	WITHOUT_CLASSIFICATION	7.96643560913095E-6	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999843850880924	WITHOUT_CLASSIFICATION	1.5614911907586867E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999607265454543	WITHOUT_CLASSIFICATION	3.927345454578985E-5	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999854051150956	WITHOUT_CLASSIFICATION	1.4594884904448187E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999996635502673	WITHOUT_CLASSIFICATION	3.364497327115801E-7	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999910783393698	WITHOUT_CLASSIFICATION	8.921660630216982E-6	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9996558492853981	WITHOUT_CLASSIFICATION	3.441507146019019E-4	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999970197949313	WITHOUT_CLASSIFICATION	2.9802050687735067E-6	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999961806718222	WITHOUT_CLASSIFICATION	3.8193281778222615E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.999993646329246	WITHOUT_CLASSIFICATION	6.353670754041087E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.999993646329246	WITHOUT_CLASSIFICATION	6.353670754041087E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999928723319227	WITHOUT_CLASSIFICATION	7.127668077350695E-6	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999909842015303	WITHOUT_CLASSIFICATION	9.015798469698757E-6	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999996738034412	WITHOUT_CLASSIFICATION	3.261965587904855E-7	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999992445568991	WITHOUT_CLASSIFICATION	7.554431009991165E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999699158445	WITHOUT_CLASSIFICATION	3.0084155489072525E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999967414742686	WITHOUT_CLASSIFICATION	3.2585257314680624E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995975042744	WITHOUT_CLASSIFICATION	4.024957256596449E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995975042744	WITHOUT_CLASSIFICATION	4.024957256596449E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999986918978489	WITHOUT_CLASSIFICATION	1.3081021511024562E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999992930955737	WITHOUT_CLASSIFICATION	7.069044263261997E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999992930955737	WITHOUT_CLASSIFICATION	7.069044263261997E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999946769627697	WITHOUT_CLASSIFICATION	5.323037230284499E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999994914656819	WITHOUT_CLASSIFICATION	5.085343181673669E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999994914656819	WITHOUT_CLASSIFICATION	5.085343181673669E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999986760492949	WITHOUT_CLASSIFICATION	1.323950705121108E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999678735363005	WITHOUT_CLASSIFICATION	3.2126463699642015E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999996129481828	WITHOUT_CLASSIFICATION	3.8705181703230334E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999741223410226	WITHOUT_CLASSIFICATION	2.5877658977470268E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958287494888	WITHOUT_CLASSIFICATION	4.1712505112307436E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999923529734214	WITHOUT_CLASSIFICATION	7.647026578601426E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.99999761524383	WITHOUT_CLASSIFICATION	2.3847561699566066E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999998007895808	WITHOUT_CLASSIFICATION	1.9921041920351543E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999941243511212	WITHOUT_CLASSIFICATION	5.87564887875577E-6	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999616442384803	WITHOUT_CLASSIFICATION	3.8355761519720974E-5	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.999984607877507	WITHOUT_CLASSIFICATION	1.539212249305933E-5	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998704690868344	WITHOUT_CLASSIFICATION	1.2953091316554767E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999848759735638	WITHOUT_CLASSIFICATION	1.5124026436216509E-5	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.999981495992667	WITHOUT_CLASSIFICATION	1.850400733310383E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999982370519681	WITHOUT_CLASSIFICATION	1.7629480320033768E-6	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999742099654579	WITHOUT_CLASSIFICATION	2.5790034542052665E-5	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999994566006043	WITHOUT_CLASSIFICATION	5.433993958177091E-7	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999997764754238	WITHOUT_CLASSIFICATION	2.2352457622358142E-7	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999988947453137	WITHOUT_CLASSIFICATION	1.1052546862681242E-6	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9989594026421326	WITHOUT_CLASSIFICATION	0.0010405973578673736	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999931524461448	WITHOUT_CLASSIFICATION	6.847553855151307E-6	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9991591139015674	WITHOUT_CLASSIFICATION	8.408860984325834E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.999203757328638	WITHOUT_CLASSIFICATION	7.962426713621178E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999945156569267	WITHOUT_CLASSIFICATION	5.484343073360051E-6	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.999050124018325	WITHOUT_CLASSIFICATION	9.498759816749444E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9995318525447064	WITHOUT_CLASSIFICATION	4.6814745529356774E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.998563697531795	WITHOUT_CLASSIFICATION	0.001436302468204971	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.999637783973787	WITHOUT_CLASSIFICATION	3.622160262130087E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999750285077804	WITHOUT_CLASSIFICATION	2.4971492219524514E-5	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999656897735016	WITHOUT_CLASSIFICATION	3.431022649838453E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999929035745053	WITHOUT_CLASSIFICATION	7.096425494677044E-6	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9995529038409388	WITHOUT_CLASSIFICATION	4.470961590612562E-4	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9995047003192269	WITHOUT_CLASSIFICATION	4.95299680773138E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999678735363005	WITHOUT_CLASSIFICATION	3.2126463699642015E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999996129481828	WITHOUT_CLASSIFICATION	3.8705181703230334E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999741223410226	WITHOUT_CLASSIFICATION	2.5877658977470268E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999923529734214	WITHOUT_CLASSIFICATION	7.647026578601426E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999940223166941	WITHOUT_CLASSIFICATION	5.977683305883227E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999998007895808	WITHOUT_CLASSIFICATION	1.9921041920351543E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999941243511212	WITHOUT_CLASSIFICATION	5.87564887875577E-6	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999616442384803	WITHOUT_CLASSIFICATION	3.8355761519720974E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999891495618561	WITHOUT_CLASSIFICATION	1.0850438143767882E-5	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999880605831195	WITHOUT_CLASSIFICATION	1.1939416880587714E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999842197256158	WITHOUT_CLASSIFICATION	1.578027438417268E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9994970272275833	WITHOUT_CLASSIFICATION	5.029727724167885E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9995886256190797	WITHOUT_CLASSIFICATION	4.11374380920235E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9999614019003443	WITHOUT_CLASSIFICATION	3.859809965568761E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999770541589615	WITHOUT_CLASSIFICATION	2.2945841038448278E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999770541589615	WITHOUT_CLASSIFICATION	2.2945841038448278E-5	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9994451290154615	WITHOUT_CLASSIFICATION	5.548709845385177E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999303037300001	WITHOUT_CLASSIFICATION	6.969626999992265E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9996522703543599	WITHOUT_CLASSIFICATION	3.477296456401974E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999984363935355	WITHOUT_CLASSIFICATION	1.5636064644964736E-6	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999984363935355	WITHOUT_CLASSIFICATION	1.5636064644964736E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999790597195164	WITHOUT_CLASSIFICATION	2.094028048361044E-5	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999883864721899	WITHOUT_CLASSIFICATION	1.161352781004647E-5	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999994696273343	WITHOUT_CLASSIFICATION	5.303726657265419E-7	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999970700983828	WITHOUT_CLASSIFICATION	2.9299016171078996E-6	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999895035781209	WITHOUT_CLASSIFICATION	1.0496421879170554E-5	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999928205948964	WITHOUT_CLASSIFICATION	7.17940510361622E-6	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999775105558802	WITHOUT_CLASSIFICATION	2.2489444119732236E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999909782652107	WITHOUT_CLASSIFICATION	9.021734789408146E-6	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999692740004861	WITHOUT_CLASSIFICATION	3.072599951385927E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.999924932251894	WITHOUT_CLASSIFICATION	7.506774810597324E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999908332015216	WITHOUT_CLASSIFICATION	9.166798478447478E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999908332015216	WITHOUT_CLASSIFICATION	9.166798478447478E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9999114546422899	WITHOUT_CLASSIFICATION	8.854535771008291E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999940892930968	WITHOUT_CLASSIFICATION	5.9107069032122475E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999940892930968	WITHOUT_CLASSIFICATION	5.9107069032122475E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999940892930968	WITHOUT_CLASSIFICATION	5.9107069032122475E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9961475174347284	WITHOUT_CLASSIFICATION	0.003852482565271743	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9961475174347284	WITHOUT_CLASSIFICATION	0.003852482565271743	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999879695928497	WITHOUT_CLASSIFICATION	1.2030407150172902E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999879695928497	WITHOUT_CLASSIFICATION	1.2030407150172902E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999879695928497	WITHOUT_CLASSIFICATION	1.2030407150172902E-5	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999965512245944	WITHOUT_CLASSIFICATION	3.4487754055312395E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999965512245944	WITHOUT_CLASSIFICATION	3.4487754055312395E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999965512245944	WITHOUT_CLASSIFICATION	3.4487754055312395E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999871357076429	WITHOUT_CLASSIFICATION	1.2864292357012955E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999871357076429	WITHOUT_CLASSIFICATION	1.2864292357012955E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999833511854652	WITHOUT_CLASSIFICATION	1.6648814534798717E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999833511854652	WITHOUT_CLASSIFICATION	1.6648814534798717E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999970278931615	WITHOUT_CLASSIFICATION	2.9721068385858596E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999970278931615	WITHOUT_CLASSIFICATION	2.9721068385858596E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999990175438743	WITHOUT_CLASSIFICATION	9.82456125698525E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999990175438743	WITHOUT_CLASSIFICATION	9.82456125698525E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999931791752844	WITHOUT_CLASSIFICATION	6.8208247156503205E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999931791752844	WITHOUT_CLASSIFICATION	6.8208247156503205E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999896460990871	WITHOUT_CLASSIFICATION	1.0353900912797564E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999896460990871	WITHOUT_CLASSIFICATION	1.0353900912797564E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999985929333541	WITHOUT_CLASSIFICATION	1.4070666458683012E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999985929333541	WITHOUT_CLASSIFICATION	1.4070666458683012E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999871357076429	WITHOUT_CLASSIFICATION	1.2864292357012955E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999833511854652	WITHOUT_CLASSIFICATION	1.6648814534798717E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999970278931615	WITHOUT_CLASSIFICATION	2.9721068385858596E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999931791752844	WITHOUT_CLASSIFICATION	6.8208247156503205E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999896460990871	WITHOUT_CLASSIFICATION	1.0353900912797564E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999985929333541	WITHOUT_CLASSIFICATION	1.4070666458683012E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999924772280963	WITHOUT_CLASSIFICATION	7.522771903704499E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999898092735022	WITHOUT_CLASSIFICATION	1.0190726497696165E-5	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.999892118757865	WITHOUT_CLASSIFICATION	1.0788124213508925E-4	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9993533830555938	WITHOUT_CLASSIFICATION	6.466169444062269E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999771868979909	WITHOUT_CLASSIFICATION	2.2813102009064414E-5	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.99999266355793	WITHOUT_CLASSIFICATION	7.336442069885643E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999856641129301	WITHOUT_CLASSIFICATION	1.4335887069960453E-5	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999643412271759	WITHOUT_CLASSIFICATION	3.5658772824110374E-5	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999987892419053	WITHOUT_CLASSIFICATION	1.2107580946288696E-6	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999905685221984	WITHOUT_CLASSIFICATION	9.431477801516417E-6	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999832908744314	WITHOUT_CLASSIFICATION	1.670912556861418E-5	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999958767976865	WITHOUT_CLASSIFICATION	4.123202313502896E-6	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999879728852231	WITHOUT_CLASSIFICATION	1.2027114776996235E-5	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999814233997363	WITHOUT_CLASSIFICATION	1.8576600263627977E-5	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999858045061104	WITHOUT_CLASSIFICATION	1.4195493889533765E-5	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999916784669532	WITHOUT_CLASSIFICATION	8.32153304674194E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.999990247987047	WITHOUT_CLASSIFICATION	9.752012952909142E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999603153740949	WITHOUT_CLASSIFICATION	3.9684625905129586E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999862493220809	WITHOUT_CLASSIFICATION	1.3750677919067322E-5	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999932804588845	WITHOUT_CLASSIFICATION	6.71954111549432E-6	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999944004213128	WITHOUT_CLASSIFICATION	5.599578687124851E-6	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999979080180583	WITHOUT_CLASSIFICATION	2.091981941590638E-6	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999958174098327	WITHOUT_CLASSIFICATION	4.1825901673244534E-6	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999815895899863	WITHOUT_CLASSIFICATION	1.8410410013769262E-5	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999862262645802	WITHOUT_CLASSIFICATION	1.3773735419788679E-5	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9999898865712235	WITHOUT_CLASSIFICATION	1.0113428776488247E-5	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999898370821473	WITHOUT_CLASSIFICATION	1.0162917852810112E-5	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999713328591293	WITHOUT_CLASSIFICATION	2.8667140870629488E-5	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999975331769924	WITHOUT_CLASSIFICATION	2.4668230075518047E-6	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999602882273738	WITHOUT_CLASSIFICATION	3.9711772626209294E-5	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999474711377893	WITHOUT_CLASSIFICATION	5.252886221077928E-5	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999881877539399	WITHOUT_CLASSIFICATION	1.181224605999761E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999972744401111	WITHOUT_CLASSIFICATION	2.725559888874932E-6	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999972744401111	WITHOUT_CLASSIFICATION	2.725559888874932E-6	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999594233754682	WITHOUT_CLASSIFICATION	4.05766245318063E-5	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999985615952832	WITHOUT_CLASSIFICATION	1.43840471675846E-6	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999744379898441	WITHOUT_CLASSIFICATION	2.5562010155821547E-5	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.999998909000415	WITHOUT_CLASSIFICATION	1.0909995850026363E-6	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999763583200035	WITHOUT_CLASSIFICATION	2.364167999650648E-5	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999803619989855	WITHOUT_CLASSIFICATION	1.963800101444396E-5	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999993344986935	WITHOUT_CLASSIFICATION	6.655013065260696E-7	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999515200447997	WITHOUT_CLASSIFICATION	4.847995520036346E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.999995270495116	WITHOUT_CLASSIFICATION	4.729504883917082E-6	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999976290922586	WITHOUT_CLASSIFICATION	2.370907741264477E-6	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999889023748696	WITHOUT_CLASSIFICATION	1.1097625130482151E-5	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999460831455653	WITHOUT_CLASSIFICATION	5.3916854434716864E-5	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999869543497026	WITHOUT_CLASSIFICATION	1.3045650297322896E-5	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999869543497026	WITHOUT_CLASSIFICATION	1.3045650297322896E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999890597945261	WITHOUT_CLASSIFICATION	1.0940205473861767E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999890597945261	WITHOUT_CLASSIFICATION	1.0940205473861767E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999890597945261	WITHOUT_CLASSIFICATION	1.0940205473861767E-5	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999938304338135	WITHOUT_CLASSIFICATION	6.169566186460334E-6	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999815684812403	WITHOUT_CLASSIFICATION	1.8431518759621496E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999861405827222	WITHOUT_CLASSIFICATION	1.385941727790348E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999861405827222	WITHOUT_CLASSIFICATION	1.385941727790348E-5	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999943257514298	WITHOUT_CLASSIFICATION	5.674248570219974E-6	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999815278427356	WITHOUT_CLASSIFICATION	1.8472157264282267E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999974168911185	WITHOUT_CLASSIFICATION	2.583108881531455E-6	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999095457508319	WITHOUT_CLASSIFICATION	9.045424916802364E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999963154822235	WITHOUT_CLASSIFICATION	3.684517776506102E-6	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999804044391558	WITHOUT_CLASSIFICATION	1.9595560844251277E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999760088235422	WITHOUT_CLASSIFICATION	2.3991176457763248E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999974564010009	WITHOUT_CLASSIFICATION	2.543598999027143E-6	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999837547115312	WITHOUT_CLASSIFICATION	1.6245288468783113E-5	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999912535964242	WITHOUT_CLASSIFICATION	8.746403575866079E-6	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999845707008871	WITHOUT_CLASSIFICATION	1.5429299112975495E-5	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.999991409133968	WITHOUT_CLASSIFICATION	8.590866032128708E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999979514769899	WITHOUT_CLASSIFICATION	2.0485230101772804E-6	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999815235113765	WITHOUT_CLASSIFICATION	1.847648862347822E-5	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999662804932549	WITHOUT_CLASSIFICATION	3.3719506745157426E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999862209930287	WITHOUT_CLASSIFICATION	1.3779006971306365E-5	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999984099199217	WITHOUT_CLASSIFICATION	1.590080078249305E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999890417663646	WITHOUT_CLASSIFICATION	1.0958233635320003E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.999988898524981	WITHOUT_CLASSIFICATION	1.1101475019122379E-5	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999983055475204	WITHOUT_CLASSIFICATION	1.694452479559036E-6	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999708609748513	WITHOUT_CLASSIFICATION	2.913902514865163E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999961532095667	WITHOUT_CLASSIFICATION	3.846790433320852E-6	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9998444672033122	WITHOUT_CLASSIFICATION	1.5553279668789106E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999903129591796	WITHOUT_CLASSIFICATION	9.687040820439235E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999903129591796	WITHOUT_CLASSIFICATION	9.687040820439235E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999903129591796	WITHOUT_CLASSIFICATION	9.687040820439235E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999885063956852	WITHOUT_CLASSIFICATION	1.1493604314732898E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999885063956852	WITHOUT_CLASSIFICATION	1.1493604314732898E-5	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999948829447218	WITHOUT_CLASSIFICATION	5.117055278189236E-6	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999783109220879	WITHOUT_CLASSIFICATION	2.168907791210241E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999783109220879	WITHOUT_CLASSIFICATION	2.168907791210241E-5	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999912433009203	WITHOUT_CLASSIFICATION	8.75669907984369E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.999977756641304	WITHOUT_CLASSIFICATION	2.2243358696044184E-5	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999948829447218	WITHOUT_CLASSIFICATION	5.117055278189236E-6	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999616042720743	WITHOUT_CLASSIFICATION	3.839572792568518E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999948829447218	WITHOUT_CLASSIFICATION	5.117055278189236E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9998446845685293	WITHOUT_CLASSIFICATION	1.5531543147085796E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9998446845685293	WITHOUT_CLASSIFICATION	1.5531543147085796E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999869543497026	WITHOUT_CLASSIFICATION	1.3045650297322896E-5	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9998866197689356	WITHOUT_CLASSIFICATION	1.1338023106442885E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9997137813353167	WITHOUT_CLASSIFICATION	2.862186646832065E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.999748119329781	WITHOUT_CLASSIFICATION	2.518806702189616E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9997579541385585	WITHOUT_CLASSIFICATION	2.420458614413623E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9998030209953522	WITHOUT_CLASSIFICATION	1.9697900464781413E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.999740460219375	WITHOUT_CLASSIFICATION	2.5953978062496136E-4	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9997856246321776	WITHOUT_CLASSIFICATION	2.1437536782242716E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9997133486987846	WITHOUT_CLASSIFICATION	2.8665130121543987E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.999702278157192	WITHOUT_CLASSIFICATION	2.9772184280800414E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9997342891885307	WITHOUT_CLASSIFICATION	2.6571081146931194E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9997286602206896	WITHOUT_CLASSIFICATION	2.7133977931044E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.999671447930653	WITHOUT_CLASSIFICATION	3.285520693469672E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9997074962676132	WITHOUT_CLASSIFICATION	2.925037323868473E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.999786558208965	WITHOUT_CLASSIFICATION	2.134417910348961E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9996202123830998	WITHOUT_CLASSIFICATION	3.7978761690023486E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9997209434653626	WITHOUT_CLASSIFICATION	2.7905653463739487E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.999767782811892	WITHOUT_CLASSIFICATION	2.3221718810808282E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9997629760015557	WITHOUT_CLASSIFICATION	2.3702399844427945E-4	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9997973493153169	WITHOUT_CLASSIFICATION	2.0265068468298998E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9996979981331103	WITHOUT_CLASSIFICATION	3.020018668896941E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9997407850557194	WITHOUT_CLASSIFICATION	2.5921494428065694E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9996492302604149	WITHOUT_CLASSIFICATION	3.5076973958514276E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9996590202285807	WITHOUT_CLASSIFICATION	3.409797714193297E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9997099677557464	WITHOUT_CLASSIFICATION	2.900322442536751E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9997155592488356	WITHOUT_CLASSIFICATION	2.844407511644096E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9997602511995597	WITHOUT_CLASSIFICATION	2.3974880044028688E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9997842946318948	WITHOUT_CLASSIFICATION	2.1570536810529395E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.999762471792718	WITHOUT_CLASSIFICATION	2.3752820728181336E-4	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9997896020632706	WITHOUT_CLASSIFICATION	2.103979367293196E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9997235786099903	WITHOUT_CLASSIFICATION	2.7642139000977854E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9997479776675641	WITHOUT_CLASSIFICATION	2.5202233243585713E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9997620625445018	WITHOUT_CLASSIFICATION	2.3793745549811673E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9998198266949958	WITHOUT_CLASSIFICATION	1.8017330500412254E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.999732240818265	WITHOUT_CLASSIFICATION	2.6775918173510793E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9997575115116303	WITHOUT_CLASSIFICATION	2.4248848836980257E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9996959316191055	WITHOUT_CLASSIFICATION	3.0406838089445124E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9997625279640279	WITHOUT_CLASSIFICATION	2.3747203597212474E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9996340903133997	WITHOUT_CLASSIFICATION	3.6590968660039685E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9997827764640594	WITHOUT_CLASSIFICATION	2.1722353594054892E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.99978894221219	WITHOUT_CLASSIFICATION	2.1105778781011598E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9997391606657348	WITHOUT_CLASSIFICATION	2.608393342652791E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9997357266374493	WITHOUT_CLASSIFICATION	2.6427336255073773E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9997373666943634	WITHOUT_CLASSIFICATION	2.6263330563649047E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9997091708539846	WITHOUT_CLASSIFICATION	2.9082914601550187E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9996621349132427	WITHOUT_CLASSIFICATION	3.378650867573103E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9997115643896684	WITHOUT_CLASSIFICATION	2.8843561033167645E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9997362229424144	WITHOUT_CLASSIFICATION	2.637770575855885E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9996719213282297	WITHOUT_CLASSIFICATION	3.280786717702292E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9997730595402208	WITHOUT_CLASSIFICATION	2.269404597793033E-4	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9997547162337735	WITHOUT_CLASSIFICATION	2.452837662264988E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.999717170874374	WITHOUT_CLASSIFICATION	2.828291256261045E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9996398579564271	WITHOUT_CLASSIFICATION	3.6014204357299155E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9997176546173863	WITHOUT_CLASSIFICATION	2.823453826137228E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9996910480279904	WITHOUT_CLASSIFICATION	3.0895197200957994E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9997346968557732	WITHOUT_CLASSIFICATION	2.653031442267945E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9997727432714999	WITHOUT_CLASSIFICATION	2.2725672850013596E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9997903967358023	WITHOUT_CLASSIFICATION	2.0960326419773483E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9998235020988513	WITHOUT_CLASSIFICATION	1.7649790114871407E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9997189651318138	WITHOUT_CLASSIFICATION	2.810348681861682E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9997071378512491	WITHOUT_CLASSIFICATION	2.928621487509605E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9997079796830687	WITHOUT_CLASSIFICATION	2.920203169313438E-4	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9996231614203618	WITHOUT_CLASSIFICATION	3.768385796382028E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.999715121012971	WITHOUT_CLASSIFICATION	2.8487898702897604E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9997035548010452	WITHOUT_CLASSIFICATION	2.964451989547864E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9997060743160892	WITHOUT_CLASSIFICATION	2.9392568391075453E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9997117224751101	WITHOUT_CLASSIFICATION	2.8827752488996686E-4	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9997778597569495	WITHOUT_CLASSIFICATION	2.22140243050399E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9997004930711869	WITHOUT_CLASSIFICATION	2.9950692881315893E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9996814486709512	WITHOUT_CLASSIFICATION	3.185513290487683E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9996246239770352	WITHOUT_CLASSIFICATION	3.753760229647933E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9996622677998825	WITHOUT_CLASSIFICATION	3.377322001174911E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9996605474758062	WITHOUT_CLASSIFICATION	3.3945252419376995E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9997889663762709	WITHOUT_CLASSIFICATION	2.1103362372904604E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9997757490785132	WITHOUT_CLASSIFICATION	2.242509214867307E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9997854675639986	WITHOUT_CLASSIFICATION	2.145324360015115E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9996775395540883	WITHOUT_CLASSIFICATION	3.2246044591164214E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9996894046085506	WITHOUT_CLASSIFICATION	3.105953914493575E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9997275995607455	WITHOUT_CLASSIFICATION	2.724004392545003E-4	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9998163041363873	WITHOUT_CLASSIFICATION	1.836958636126559E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9996674511745588	WITHOUT_CLASSIFICATION	3.325488254412095E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999947127600713	WITHOUT_CLASSIFICATION	5.28723992861211E-6	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999896512085138	WITHOUT_CLASSIFICATION	1.0348791486274734E-5	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999973712873906	WITHOUT_CLASSIFICATION	2.628712609421284E-6	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999973726483526	WITHOUT_CLASSIFICATION	2.6273516472701168E-6	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999971616369906	WITHOUT_CLASSIFICATION	2.8383630094235463E-6	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.999997171250047	WITHOUT_CLASSIFICATION	2.8287499529607137E-6	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9998864389442815	WITHOUT_CLASSIFICATION	1.13561055718541E-4	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999892845755352	WITHOUT_CLASSIFICATION	1.0715424464799384E-5	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999951568592129	WITHOUT_CLASSIFICATION	4.843140787086389E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999984538917921	WITHOUT_CLASSIFICATION	1.5461082078863233E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999803619989855	WITHOUT_CLASSIFICATION	1.963800101444396E-5	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999938304338135	WITHOUT_CLASSIFICATION	6.169566186460334E-6	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999815684812403	WITHOUT_CLASSIFICATION	1.8431518759621496E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999861405827222	WITHOUT_CLASSIFICATION	1.385941727790348E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999890417663646	WITHOUT_CLASSIFICATION	1.0958233635320003E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.999988898524981	WITHOUT_CLASSIFICATION	1.1101475019122379E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.999986120149403	WITHOUT_CLASSIFICATION	1.3879850596966255E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999885063956852	WITHOUT_CLASSIFICATION	1.1493604314732898E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999869543497026	WITHOUT_CLASSIFICATION	1.3045650297322896E-5	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999833000053847	WITHOUT_CLASSIFICATION	1.669999461526603E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999906169300092	WITHOUT_CLASSIFICATION	9.383069990784352E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999942818703357	WITHOUT_CLASSIFICATION	5.718129664294988E-6	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.999940555273413	WITHOUT_CLASSIFICATION	5.944472658710304E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999778165977028	WITHOUT_CLASSIFICATION	2.2183402297124417E-5	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.999957406702279	WITHOUT_CLASSIFICATION	4.25932977210384E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999995307320236	WITHOUT_CLASSIFICATION	4.692679763441976E-7	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999952682467841	WITHOUT_CLASSIFICATION	4.7317532158720115E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999603153740949	WITHOUT_CLASSIFICATION	3.9684625905129586E-5	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999535969160602	WITHOUT_CLASSIFICATION	4.6403083939771674E-5	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999941824453199	WITHOUT_CLASSIFICATION	5.81755468008787E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999993848952985	WITHOUT_CLASSIFICATION	6.151047015819446E-7	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999981938352259	WITHOUT_CLASSIFICATION	1.80616477410598E-6	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999936495043235	WITHOUT_CLASSIFICATION	6.350495676533853E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999855450149534	WITHOUT_CLASSIFICATION	1.4454985046687923E-5	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999723573159847	WITHOUT_CLASSIFICATION	2.7642684015319833E-5	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999836956486393	WITHOUT_CLASSIFICATION	1.6304351360746144E-5	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999993567188493	WITHOUT_CLASSIFICATION	6.432811505822779E-7	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999998680201313	WITHOUT_CLASSIFICATION	1.3197986877075217E-7	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999619026353187	WITHOUT_CLASSIFICATION	3.8097364681314814E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999483138298212	WITHOUT_CLASSIFICATION	5.168617017879794E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999784767944682	WITHOUT_CLASSIFICATION	2.1523205531919626E-5	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999944290535132	WITHOUT_CLASSIFICATION	5.570946486870271E-6	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999912801423234	WITHOUT_CLASSIFICATION	8.719857676516638E-6	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999699273496802	WITHOUT_CLASSIFICATION	3.0072650319735914E-5	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999939972225458	WITHOUT_CLASSIFICATION	6.002777454170912E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.999920533769378	WITHOUT_CLASSIFICATION	7.946623062209441E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999995947533922	WITHOUT_CLASSIFICATION	4.052466078101834E-7	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999705587363219	WITHOUT_CLASSIFICATION	2.944126367808776E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999966420898382	WITHOUT_CLASSIFICATION	3.357910161864173E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999797626374459	WITHOUT_CLASSIFICATION	2.023736255405931E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999853440485733	WITHOUT_CLASSIFICATION	1.4655951426738446E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999853440485733	WITHOUT_CLASSIFICATION	1.4655951426738446E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999209527106588	WITHOUT_CLASSIFICATION	7.904728934114833E-5	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999044902611246	WITHOUT_CLASSIFICATION	9.550973887532377E-5	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999785068321999	WITHOUT_CLASSIFICATION	2.1493167800128467E-5	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999841672671587	WITHOUT_CLASSIFICATION	1.583273284134149E-5	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999464911004878	WITHOUT_CLASSIFICATION	5.350889951220683E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9998683609056485	WITHOUT_CLASSIFICATION	1.3163909435151162E-4	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.999961921952455	WITHOUT_CLASSIFICATION	3.807804754490146E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999970577975402	WITHOUT_CLASSIFICATION	2.942202459680067E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999985658754419	WITHOUT_CLASSIFICATION	1.4341245580816194E-6	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999997094014825	WITHOUT_CLASSIFICATION	2.9059851737247775E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999922184119827	WITHOUT_CLASSIFICATION	7.78158801732167E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.999991384802051	WITHOUT_CLASSIFICATION	8.615197949013846E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999965872919232	WITHOUT_CLASSIFICATION	3.4127080766894675E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999954366421862	WITHOUT_CLASSIFICATION	4.5633578138398395E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999956148241805	WITHOUT_CLASSIFICATION	4.385175819441186E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999941422044937	WITHOUT_CLASSIFICATION	5.85779550641503E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999989723662197	WITHOUT_CLASSIFICATION	1.0276337802376146E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9998465529544929	WITHOUT_CLASSIFICATION	1.534470455071773E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999974227518597	WITHOUT_CLASSIFICATION	2.577248140284272E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999992725549269	WITHOUT_CLASSIFICATION	7.274450730637574E-7	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999971978605335	WITHOUT_CLASSIFICATION	2.8021394664772646E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999933910045494	WITHOUT_CLASSIFICATION	6.608995450581574E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999836416525174	WITHOUT_CLASSIFICATION	1.6358347482576846E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999994539442356	WITHOUT_CLASSIFICATION	5.460557643393107E-7	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999981653628446	WITHOUT_CLASSIFICATION	1.834637155452814E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.999990758250336	WITHOUT_CLASSIFICATION	9.241749664014346E-6	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999943850623272	WITHOUT_CLASSIFICATION	5.614937672760563E-6	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999866902480486	WITHOUT_CLASSIFICATION	1.3309751951266737E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999964078420318	WITHOUT_CLASSIFICATION	3.5921579681200492E-6	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999959693666142	WITHOUT_CLASSIFICATION	4.03063338583575E-6	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999821969988045	WITHOUT_CLASSIFICATION	1.7803001195447484E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999984592392337	WITHOUT_CLASSIFICATION	1.5407607662739405E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999993448904152	WITHOUT_CLASSIFICATION	6.551095848557789E-7	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999989419319828	WITHOUT_CLASSIFICATION	1.0580680171996402E-6	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999986197023931	WITHOUT_CLASSIFICATION	1.3802976067972354E-6	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999971954340647	WITHOUT_CLASSIFICATION	2.8045659353963813E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999989416990358	WITHOUT_CLASSIFICATION	1.0583009642621093E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999987523912199	WITHOUT_CLASSIFICATION	1.2476087800186203E-6	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999998241847333	WITHOUT_CLASSIFICATION	1.7581526668388683E-7	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.999999284239322	WITHOUT_CLASSIFICATION	7.157606778727363E-7	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999736552276228	WITHOUT_CLASSIFICATION	2.634477237718466E-5	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999855336330739	WITHOUT_CLASSIFICATION	1.4466366926177744E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999985809706682	WITHOUT_CLASSIFICATION	1.4190293318295287E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999992322400355	WITHOUT_CLASSIFICATION	7.677599645455205E-7	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999997986165591	WITHOUT_CLASSIFICATION	2.0138344093441539E-7	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999995864246866	WITHOUT_CLASSIFICATION	4.135753134578913E-7	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999951250868333	WITHOUT_CLASSIFICATION	4.874913166609383E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999993351634378	WITHOUT_CLASSIFICATION	6.648365623418145E-7	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999890560116653	WITHOUT_CLASSIFICATION	1.0943988334656096E-5	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999351972690871	WITHOUT_CLASSIFICATION	6.480273091289466E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9994187652210708	WITHOUT_CLASSIFICATION	5.81234778929186E-4	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999619003011023	WITHOUT_CLASSIFICATION	3.80996988977224E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999899622217733	WITHOUT_CLASSIFICATION	1.0037778226784197E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999979787679922	WITHOUT_CLASSIFICATION	2.0212320078079686E-6	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999231158609068	WITHOUT_CLASSIFICATION	7.688413909326533E-5	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999979479356794	WITHOUT_CLASSIFICATION	2.052064320584022E-6	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.999999695284572	WITHOUT_CLASSIFICATION	3.0471542795877827E-7	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999994394517576	WITHOUT_CLASSIFICATION	5.605482424583467E-7	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999973513501241	WITHOUT_CLASSIFICATION	2.648649875892427E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999990885842178	WITHOUT_CLASSIFICATION	9.114157823054214E-7	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999998769486209	WITHOUT_CLASSIFICATION	1.2305137909308522E-7	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999980307319618	WITHOUT_CLASSIFICATION	1.96926803822002E-6	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.999999066642902	WITHOUT_CLASSIFICATION	9.33357098032034E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999990786378942	WITHOUT_CLASSIFICATION	9.213621057213252E-7	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999993504799085	WITHOUT_CLASSIFICATION	6.495200915382656E-7	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999973735103207	WITHOUT_CLASSIFICATION	2.6264896792308645E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.999989578473086	WITHOUT_CLASSIFICATION	1.0421526913925072E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999886141741685	WITHOUT_CLASSIFICATION	1.1385825831405439E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999973981855755	WITHOUT_CLASSIFICATION	2.601814424488531E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999999473127757	WITHOUT_CLASSIFICATION	5.268722418850113E-8	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999995872380665	WITHOUT_CLASSIFICATION	4.1276193352275154E-7	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999813290750319	WITHOUT_CLASSIFICATION	1.867092496800197E-5	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999946534136842	WITHOUT_CLASSIFICATION	5.346586315774358E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999862333320579	WITHOUT_CLASSIFICATION	1.3766667942075439E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999506035133855	WITHOUT_CLASSIFICATION	4.939648661461144E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9997711329493117	WITHOUT_CLASSIFICATION	2.288670506882076E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999952388985829	WITHOUT_CLASSIFICATION	4.761101417181303E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999983461354605	WITHOUT_CLASSIFICATION	1.6538645394442264E-6	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999996574182495	WITHOUT_CLASSIFICATION	3.42581750618367E-7	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999913917829211	WITHOUT_CLASSIFICATION	8.608217078913567E-6	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999997924619316	WITHOUT_CLASSIFICATION	2.0753806829439212E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999923711069258	WITHOUT_CLASSIFICATION	7.6288930741880455E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999974940976375	WITHOUT_CLASSIFICATION	2.505902362476796E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999971227554586	WITHOUT_CLASSIFICATION	2.8772445414922814E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999987618826387	WITHOUT_CLASSIFICATION	1.2381173613129988E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.999995481424808	WITHOUT_CLASSIFICATION	4.518575192081058E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9993775362165418	WITHOUT_CLASSIFICATION	6.224637834582171E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999859767454331	WITHOUT_CLASSIFICATION	1.402325456702572E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999954873908226	WITHOUT_CLASSIFICATION	4.512609177457548E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999945565960741	WITHOUT_CLASSIFICATION	5.443403926006649E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999960179241999	WITHOUT_CLASSIFICATION	3.982075800063305E-6	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999964779625464	WITHOUT_CLASSIFICATION	3.5220374535539758E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999907652967512	WITHOUT_CLASSIFICATION	9.234703248817219E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999908927927195	WITHOUT_CLASSIFICATION	9.107207280498883E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999968254087851	WITHOUT_CLASSIFICATION	3.1745912148003853E-6	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999987384853755	WITHOUT_CLASSIFICATION	1.2615146245360029E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999983477065912	WITHOUT_CLASSIFICATION	1.652293408752629E-6	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999990339668863	WITHOUT_CLASSIFICATION	9.660331137205236E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999970082356465	WITHOUT_CLASSIFICATION	2.9917643535795514E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999990247975598	WITHOUT_CLASSIFICATION	9.752024403090177E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9996230345017845	WITHOUT_CLASSIFICATION	3.7696549821558553E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999875965541781	WITHOUT_CLASSIFICATION	1.2403445821820748E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999912153445639	WITHOUT_CLASSIFICATION	8.784655436047705E-6	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999924250003475	WITHOUT_CLASSIFICATION	7.574999652514719E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876941501904	WITHOUT_CLASSIFICATION	1.2305849809557473E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935404961425	WITHOUT_CLASSIFICATION	6.459503857364285E-6	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999993418717014	WITHOUT_CLASSIFICATION	6.581282986017881E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935218081668	WITHOUT_CLASSIFICATION	6.478191833172273E-6	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925644305654	WITHOUT_CLASSIFICATION	7.435569434544769E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999932512139913	WITHOUT_CLASSIFICATION	6.748786008641681E-6	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999993009251904	WITHOUT_CLASSIFICATION	6.9907480959693194E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999910636641024	WITHOUT_CLASSIFICATION	8.936335897602234E-6	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999938133506938	WITHOUT_CLASSIFICATION	6.186649306235981E-6	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924919172486	WITHOUT_CLASSIFICATION	7.508082751427148E-6	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999933312677564	WITHOUT_CLASSIFICATION	6.668732243642974E-6	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926194071411	WITHOUT_CLASSIFICATION	7.380592858906319E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999920221107825	WITHOUT_CLASSIFICATION	7.97788921747274E-6	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999929114381593	WITHOUT_CLASSIFICATION	7.08856184078215E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924944186664	WITHOUT_CLASSIFICATION	7.505581333511669E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999930926839544	WITHOUT_CLASSIFICATION	6.907316045482776E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999901651820934	WITHOUT_CLASSIFICATION	9.834817906639378E-6	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999990710248638	WITHOUT_CLASSIFICATION	9.289751362088085E-6	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999921728023532	WITHOUT_CLASSIFICATION	7.827197646739754E-6	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913834950815	WITHOUT_CLASSIFICATION	8.616504918490877E-6	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999930123383294	WITHOUT_CLASSIFICATION	6.987661670707067E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999912086163756	WITHOUT_CLASSIFICATION	8.791383624480067E-6	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999921781679908	WITHOUT_CLASSIFICATION	7.821832009098324E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999940260622194	WITHOUT_CLASSIFICATION	5.973937780541476E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924944186664	WITHOUT_CLASSIFICATION	7.505581333511669E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999940260622194	WITHOUT_CLASSIFICATION	5.973937780541476E-6	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924989611444	WITHOUT_CLASSIFICATION	7.50103885562124E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999929960098916	WITHOUT_CLASSIFICATION	7.003990108458853E-6	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999912911876573	WITHOUT_CLASSIFICATION	8.70881234269444E-6	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999933511218098	WITHOUT_CLASSIFICATION	6.648878190176919E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999991957893931	WITHOUT_CLASSIFICATION	8.042106068942348E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999929648163499	WITHOUT_CLASSIFICATION	7.035183650111614E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999939638457257	WITHOUT_CLASSIFICATION	6.0361542742761605E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999939638457257	WITHOUT_CLASSIFICATION	6.0361542742761605E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999926657698858	WITHOUT_CLASSIFICATION	7.334230114317396E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926549732071	WITHOUT_CLASSIFICATION	7.345026792881201E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999927062331622	WITHOUT_CLASSIFICATION	7.293766837819512E-6	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999993883247167	WITHOUT_CLASSIFICATION	6.116752833020112E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999917961427165	WITHOUT_CLASSIFICATION	8.203857283440276E-6	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999920738839154	WITHOUT_CLASSIFICATION	7.92611608468153E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999922360752528	WITHOUT_CLASSIFICATION	7.76392474722782E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924944186664	WITHOUT_CLASSIFICATION	7.505581333511669E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999929433207115	WITHOUT_CLASSIFICATION	7.056679288435614E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999934787837698	WITHOUT_CLASSIFICATION	6.521216230162875E-6	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919434385162	WITHOUT_CLASSIFICATION	8.056561483808992E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935108950658	WITHOUT_CLASSIFICATION	6.489104934178875E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999940468191748	WITHOUT_CLASSIFICATION	5.953180825182764E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.99999142003984	WITHOUT_CLASSIFICATION	8.579960159996846E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893655929747	WITHOUT_CLASSIFICATION	1.0634407025192583E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999901007587803	WITHOUT_CLASSIFICATION	9.8992412197324E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935894371249	WITHOUT_CLASSIFICATION	6.41056287511275E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935894371249	WITHOUT_CLASSIFICATION	6.41056287511275E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999938054587991	WITHOUT_CLASSIFICATION	6.194541200960435E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999938054587991	WITHOUT_CLASSIFICATION	6.194541200960435E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992687406148	WITHOUT_CLASSIFICATION	7.312593852083842E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999913762348788	WITHOUT_CLASSIFICATION	8.623765121234382E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924944186664	WITHOUT_CLASSIFICATION	7.505581333511669E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999930926839544	WITHOUT_CLASSIFICATION	6.907316045482776E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999939638457257	WITHOUT_CLASSIFICATION	6.0361542742761605E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893655929747	WITHOUT_CLASSIFICATION	1.0634407025192583E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935894371249	WITHOUT_CLASSIFICATION	6.41056287511275E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999938054587991	WITHOUT_CLASSIFICATION	6.194541200960435E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999913762348788	WITHOUT_CLASSIFICATION	8.623765121234382E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999918890179641	WITHOUT_CLASSIFICATION	8.110982035936187E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999934297263473	WITHOUT_CLASSIFICATION	6.570273652778658E-6	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925882845089	WITHOUT_CLASSIFICATION	7.411715491110311E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915484470677	WITHOUT_CLASSIFICATION	8.451552932241008E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999919991239467	WITHOUT_CLASSIFICATION	8.000876053336155E-6	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999930302307931	WITHOUT_CLASSIFICATION	6.969769206915199E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893342694268	WITHOUT_CLASSIFICATION	1.06657305731558E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999939638457257	WITHOUT_CLASSIFICATION	6.0361542742761605E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999933754620612	WITHOUT_CLASSIFICATION	6.624537938772195E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893342694268	WITHOUT_CLASSIFICATION	1.06657305731558E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917147413496	WITHOUT_CLASSIFICATION	8.285258650436938E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999922956571188	WITHOUT_CLASSIFICATION	7.704342881216854E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992589983196	WITHOUT_CLASSIFICATION	7.410016804025056E-6	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999932536776761	WITHOUT_CLASSIFICATION	6.7463223238695055E-6	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925569040468	WITHOUT_CLASSIFICATION	7.443095953230388E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999905558360367	WITHOUT_CLASSIFICATION	9.444163963385996E-6	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999934603139395	WITHOUT_CLASSIFICATION	6.539686060548497E-6	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999929037492932	WITHOUT_CLASSIFICATION	7.096250706900306E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999906959790104	WITHOUT_CLASSIFICATION	9.304020989741554E-6	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999897531231274	WITHOUT_CLASSIFICATION	1.0246876872562818E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999930216501296	WITHOUT_CLASSIFICATION	6.9783498703792705E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915171262451	WITHOUT_CLASSIFICATION	8.482873754824726E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935346504221	WITHOUT_CLASSIFICATION	6.465349577844277E-6	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986945337475	WITHOUT_CLASSIFICATION	1.3054662525082615E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999866432123102	WITHOUT_CLASSIFICATION	1.335678768976983E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999928354828883	WITHOUT_CLASSIFICATION	7.16451711162045E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999990126529238	WITHOUT_CLASSIFICATION	9.873470761984941E-6	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876529891485	WITHOUT_CLASSIFICATION	1.2347010851576689E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999988672702236	WITHOUT_CLASSIFICATION	1.1327297763955948E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876443277232	WITHOUT_CLASSIFICATION	1.2355672276628919E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999992725549269	WITHOUT_CLASSIFICATION	7.274450730637574E-7	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999930813528476	WITHOUT_CLASSIFICATION	6.918647152366396E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999910783393698	WITHOUT_CLASSIFICATION	8.921660630216982E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999925598235607	WITHOUT_CLASSIFICATION	7.440176439316335E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999930216501296	WITHOUT_CLASSIFICATION	6.9783498703792705E-6	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999919194223916	WITHOUT_CLASSIFICATION	8.080577608359465E-6	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999915866194513	WITHOUT_CLASSIFICATION	8.413380548746795E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923227802952	WITHOUT_CLASSIFICATION	7.677219704916354E-6	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999984873878056	WITHOUT_CLASSIFICATION	1.5126121943962773E-6	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999985533055753	WITHOUT_CLASSIFICATION	1.4466944246708191E-6	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999990415171277	WITHOUT_CLASSIFICATION	9.584828722541712E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999984146503689	WITHOUT_CLASSIFICATION	1.5853496310926932E-6	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999982948034253	WITHOUT_CLASSIFICATION	1.7051965746325484E-6	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999985629159289	WITHOUT_CLASSIFICATION	1.4370840710596422E-6	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999965036739029	WITHOUT_CLASSIFICATION	3.4963260970320826E-6	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999985112069476	WITHOUT_CLASSIFICATION	1.4887930523670266E-6	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999963778697981	WITHOUT_CLASSIFICATION	3.6221302018489474E-6	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999999193046572	WITHOUT_CLASSIFICATION	8.069534280391465E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.999952657710446	WITHOUT_CLASSIFICATION	4.7342289553994254E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999968254087851	WITHOUT_CLASSIFICATION	3.1745912148003853E-6	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999004605285539	WITHOUT_CLASSIFICATION	9.953947144602891E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999973151403805	WITHOUT_CLASSIFICATION	2.684859619512818E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999799022704671	WITHOUT_CLASSIFICATION	2.009772953292688E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999926849922989	WITHOUT_CLASSIFICATION	7.315007701211071E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999966271633491	WITHOUT_CLASSIFICATION	3.372836650862482E-6	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999949560700304	WITHOUT_CLASSIFICATION	5.0439299695609745E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999921374222639	WITHOUT_CLASSIFICATION	7.862577736057662E-6	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999981527374101	WITHOUT_CLASSIFICATION	1.8472625899567451E-6	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999909905079036	WITHOUT_CLASSIFICATION	9.009492096308306E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.999920533769378	WITHOUT_CLASSIFICATION	7.946623062209441E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999995947533922	WITHOUT_CLASSIFICATION	4.052466078101834E-7	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999705587363219	WITHOUT_CLASSIFICATION	2.944126367808776E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999966420898382	WITHOUT_CLASSIFICATION	3.357910161864173E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999797626374459	WITHOUT_CLASSIFICATION	2.023736255405931E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999853440485733	WITHOUT_CLASSIFICATION	1.4655951426738446E-5	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999044902611246	WITHOUT_CLASSIFICATION	9.550973887532377E-5	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999785068321999	WITHOUT_CLASSIFICATION	2.1493167800128467E-5	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999841672671587	WITHOUT_CLASSIFICATION	1.583273284134149E-5	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999464911004878	WITHOUT_CLASSIFICATION	5.350889951220683E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9998683609056485	WITHOUT_CLASSIFICATION	1.3163909435151162E-4	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999915389629385	WITHOUT_CLASSIFICATION	8.461037061518789E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999945565960741	WITHOUT_CLASSIFICATION	5.443403926006649E-6	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999997094014825	WITHOUT_CLASSIFICATION	2.9059851737247775E-7	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.999991384802051	WITHOUT_CLASSIFICATION	8.615197949013846E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999989723662197	WITHOUT_CLASSIFICATION	1.0276337802376146E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9998465529544929	WITHOUT_CLASSIFICATION	1.534470455071773E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999974227518597	WITHOUT_CLASSIFICATION	2.577248140284272E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999985658754419	WITHOUT_CLASSIFICATION	1.4341245580816194E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999922184119827	WITHOUT_CLASSIFICATION	7.78158801732167E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999992725549269	WITHOUT_CLASSIFICATION	7.274450730637574E-7	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999954366421862	WITHOUT_CLASSIFICATION	4.5633578138398395E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999939972225458	WITHOUT_CLASSIFICATION	6.002777454170912E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999965872919232	WITHOUT_CLASSIFICATION	3.4127080766894675E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999836416525174	WITHOUT_CLASSIFICATION	1.6358347482576846E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999994539442356	WITHOUT_CLASSIFICATION	5.460557643393107E-7	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999981653628446	WITHOUT_CLASSIFICATION	1.834637155452814E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999968254087851	WITHOUT_CLASSIFICATION	3.1745912148003853E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999921672074134	WITHOUT_CLASSIFICATION	7.832792586617386E-6	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999676481552	WITHOUT_CLASSIFICATION	3.2351844695988716E-8	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999943850623272	WITHOUT_CLASSIFICATION	5.614937672760563E-6	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999964078420318	WITHOUT_CLASSIFICATION	3.5921579681200492E-6	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999948463575072	WITHOUT_CLASSIFICATION	5.153642492800419E-6	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999959693666142	WITHOUT_CLASSIFICATION	4.03063338583575E-6	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999821969988045	WITHOUT_CLASSIFICATION	1.7803001195447484E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999993448904152	WITHOUT_CLASSIFICATION	6.551095848557789E-7	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999994854885367	WITHOUT_CLASSIFICATION	5.14511463344678E-7	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999989419319828	WITHOUT_CLASSIFICATION	1.0580680171996402E-6	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999986197023931	WITHOUT_CLASSIFICATION	1.3802976067972354E-6	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999971954340647	WITHOUT_CLASSIFICATION	2.8045659353963813E-6	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999914791566608	WITHOUT_CLASSIFICATION	8.52084333923242E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999989416990358	WITHOUT_CLASSIFICATION	1.0583009642621093E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9997022603662977	WITHOUT_CLASSIFICATION	2.977396337021944E-4	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999736552276228	WITHOUT_CLASSIFICATION	2.634477237718466E-5	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999987523912199	WITHOUT_CLASSIFICATION	1.2476087800186203E-6	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999998241847333	WITHOUT_CLASSIFICATION	1.7581526668388683E-7	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999985809706682	WITHOUT_CLASSIFICATION	1.4190293318295287E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999992322400355	WITHOUT_CLASSIFICATION	7.677599645455205E-7	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999997986165591	WITHOUT_CLASSIFICATION	2.0138344093441539E-7	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999964331543628	WITHOUT_CLASSIFICATION	3.5668456371049852E-6	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999995864246866	WITHOUT_CLASSIFICATION	4.135753134578913E-7	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999951250868333	WITHOUT_CLASSIFICATION	4.874913166609383E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999993351634378	WITHOUT_CLASSIFICATION	6.648365623418145E-7	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999890560116653	WITHOUT_CLASSIFICATION	1.0943988334656096E-5	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999351972690871	WITHOUT_CLASSIFICATION	6.480273091289466E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9994187652210708	WITHOUT_CLASSIFICATION	5.81234778929186E-4	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999619003011023	WITHOUT_CLASSIFICATION	3.80996988977224E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999899622217733	WITHOUT_CLASSIFICATION	1.0037778226784197E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999979787679922	WITHOUT_CLASSIFICATION	2.0212320078079686E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999979787679922	WITHOUT_CLASSIFICATION	2.0212320078079686E-6	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999231158609068	WITHOUT_CLASSIFICATION	7.688413909326533E-5	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999979479356794	WITHOUT_CLASSIFICATION	2.052064320584022E-6	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.999999695284572	WITHOUT_CLASSIFICATION	3.0471542795877827E-7	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999994394517576	WITHOUT_CLASSIFICATION	5.605482424583467E-7	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999990885842178	WITHOUT_CLASSIFICATION	9.114157823054214E-7	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999998769486209	WITHOUT_CLASSIFICATION	1.2305137909308522E-7	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999980307319618	WITHOUT_CLASSIFICATION	1.96926803822002E-6	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.999999066642902	WITHOUT_CLASSIFICATION	9.33357098032034E-7	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999993504799085	WITHOUT_CLASSIFICATION	6.495200915382656E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999932744123575	WITHOUT_CLASSIFICATION	6.725587642481626E-6	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999973735103207	WITHOUT_CLASSIFICATION	2.6264896792308645E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.999989578473086	WITHOUT_CLASSIFICATION	1.0421526913925072E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999886141741685	WITHOUT_CLASSIFICATION	1.1385825831405439E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999973981855755	WITHOUT_CLASSIFICATION	2.601814424488531E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999999473127757	WITHOUT_CLASSIFICATION	5.268722418850113E-8	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999813290750319	WITHOUT_CLASSIFICATION	1.867092496800197E-5	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999946534136842	WITHOUT_CLASSIFICATION	5.346586315774358E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999862333320579	WITHOUT_CLASSIFICATION	1.3766667942075439E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999506035133855	WITHOUT_CLASSIFICATION	4.939648661461144E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9997711329493117	WITHOUT_CLASSIFICATION	2.288670506882076E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999952388985829	WITHOUT_CLASSIFICATION	4.761101417181303E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999983461354605	WITHOUT_CLASSIFICATION	1.6538645394442264E-6	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999996574182495	WITHOUT_CLASSIFICATION	3.42581750618367E-7	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999913917829211	WITHOUT_CLASSIFICATION	8.608217078913567E-6	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999997924619316	WITHOUT_CLASSIFICATION	2.0753806829439212E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999923711069258	WITHOUT_CLASSIFICATION	7.6288930741880455E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999971227554586	WITHOUT_CLASSIFICATION	2.8772445414922814E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.999995481424808	WITHOUT_CLASSIFICATION	4.518575192081058E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9993775362165418	WITHOUT_CLASSIFICATION	6.224637834582171E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999859767454331	WITHOUT_CLASSIFICATION	1.402325456702572E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999954873908226	WITHOUT_CLASSIFICATION	4.512609177457548E-6	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999718479501746	WITHOUT_CLASSIFICATION	2.815204982543537E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999986516384507	WITHOUT_CLASSIFICATION	1.3483615492411842E-6	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.999998447990332	WITHOUT_CLASSIFICATION	1.552009668003758E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999960179241999	WITHOUT_CLASSIFICATION	3.982075800063305E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999992720740912	WITHOUT_CLASSIFICATION	7.279259087722965E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999964779625464	WITHOUT_CLASSIFICATION	3.5220374535539758E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999907652967512	WITHOUT_CLASSIFICATION	9.234703248817219E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999908927927195	WITHOUT_CLASSIFICATION	9.107207280498883E-6	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999968736989704	WITHOUT_CLASSIFICATION	3.1263010295512358E-6	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999987384853755	WITHOUT_CLASSIFICATION	1.2615146245360029E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999983477065912	WITHOUT_CLASSIFICATION	1.652293408752629E-6	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999990339668863	WITHOUT_CLASSIFICATION	9.660331137205236E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999970082356465	WITHOUT_CLASSIFICATION	2.9917643535795514E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999990247975598	WITHOUT_CLASSIFICATION	9.752024403090177E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9996230345017845	WITHOUT_CLASSIFICATION	3.7696549821558553E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999875965541781	WITHOUT_CLASSIFICATION	1.2403445821820748E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999912153445639	WITHOUT_CLASSIFICATION	8.784655436047705E-6	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999924250003475	WITHOUT_CLASSIFICATION	7.574999652514719E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935404961425	WITHOUT_CLASSIFICATION	6.459503857364285E-6	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999993418717014	WITHOUT_CLASSIFICATION	6.581282986017881E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935218081668	WITHOUT_CLASSIFICATION	6.478191833172273E-6	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925644305654	WITHOUT_CLASSIFICATION	7.435569434544769E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934410341198	WITHOUT_CLASSIFICATION	6.558965880140357E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999932512139913	WITHOUT_CLASSIFICATION	6.748786008641681E-6	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999993009251904	WITHOUT_CLASSIFICATION	6.9907480959693194E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999910636641024	WITHOUT_CLASSIFICATION	8.936335897602234E-6	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999938133506938	WITHOUT_CLASSIFICATION	6.186649306235981E-6	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924919172486	WITHOUT_CLASSIFICATION	7.508082751427148E-6	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999933312677564	WITHOUT_CLASSIFICATION	6.668732243642974E-6	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926194071411	WITHOUT_CLASSIFICATION	7.380592858906319E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999922356542751	WITHOUT_CLASSIFICATION	7.764345724995672E-6	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999929114381593	WITHOUT_CLASSIFICATION	7.08856184078215E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924944186664	WITHOUT_CLASSIFICATION	7.505581333511669E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999930926839544	WITHOUT_CLASSIFICATION	6.907316045482776E-6	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999990710248638	WITHOUT_CLASSIFICATION	9.289751362088085E-6	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999921728023532	WITHOUT_CLASSIFICATION	7.827197646739754E-6	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913834950815	WITHOUT_CLASSIFICATION	8.616504918490877E-6	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999930123383294	WITHOUT_CLASSIFICATION	6.987661670707067E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999912086163756	WITHOUT_CLASSIFICATION	8.791383624480067E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999917606517478	WITHOUT_CLASSIFICATION	8.239348252234339E-6	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999921781679908	WITHOUT_CLASSIFICATION	7.821832009098324E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999940260622194	WITHOUT_CLASSIFICATION	5.973937780541476E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999929960098916	WITHOUT_CLASSIFICATION	7.003990108458853E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999939638457257	WITHOUT_CLASSIFICATION	6.0361542742761605E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999939638457257	WITHOUT_CLASSIFICATION	6.0361542742761605E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926549732071	WITHOUT_CLASSIFICATION	7.345026792881201E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999940260622194	WITHOUT_CLASSIFICATION	5.973937780541476E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999912911876573	WITHOUT_CLASSIFICATION	8.70881234269444E-6	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999933511218098	WITHOUT_CLASSIFICATION	6.648878190176919E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999991957893931	WITHOUT_CLASSIFICATION	8.042106068942348E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999929648163499	WITHOUT_CLASSIFICATION	7.035183650111614E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999939638457257	WITHOUT_CLASSIFICATION	6.0361542742761605E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999926657698858	WITHOUT_CLASSIFICATION	7.334230114317396E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999927062331622	WITHOUT_CLASSIFICATION	7.293766837819512E-6	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999993883247167	WITHOUT_CLASSIFICATION	6.116752833020112E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999917961427165	WITHOUT_CLASSIFICATION	8.203857283440276E-6	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999920738839154	WITHOUT_CLASSIFICATION	7.92611608468153E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999922360752528	WITHOUT_CLASSIFICATION	7.76392474722782E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999913448876614	WITHOUT_CLASSIFICATION	8.655112338660793E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927657877724	WITHOUT_CLASSIFICATION	7.23421222749617E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999934787837698	WITHOUT_CLASSIFICATION	6.521216230162875E-6	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919434385162	WITHOUT_CLASSIFICATION	8.056561483808992E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999940468191748	WITHOUT_CLASSIFICATION	5.953180825182764E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924944186664	WITHOUT_CLASSIFICATION	7.505581333511669E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924944186664	WITHOUT_CLASSIFICATION	7.505581333511669E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935108950658	WITHOUT_CLASSIFICATION	6.489104934178875E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.99999142003984	WITHOUT_CLASSIFICATION	8.579960159996846E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893655929747	WITHOUT_CLASSIFICATION	1.0634407025192583E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935894371249	WITHOUT_CLASSIFICATION	6.41056287511275E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935894371249	WITHOUT_CLASSIFICATION	6.41056287511275E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999938054587991	WITHOUT_CLASSIFICATION	6.194541200960435E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999938054587991	WITHOUT_CLASSIFICATION	6.194541200960435E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992687406148	WITHOUT_CLASSIFICATION	7.312593852083842E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992687406148	WITHOUT_CLASSIFICATION	7.312593852083842E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999913762348788	WITHOUT_CLASSIFICATION	8.623765121234382E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999918890179641	WITHOUT_CLASSIFICATION	8.110982035936187E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999930926839544	WITHOUT_CLASSIFICATION	6.907316045482776E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999939638457257	WITHOUT_CLASSIFICATION	6.0361542742761605E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893655929747	WITHOUT_CLASSIFICATION	1.0634407025192583E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935894371249	WITHOUT_CLASSIFICATION	6.41056287511275E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999938054587991	WITHOUT_CLASSIFICATION	6.194541200960435E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999934297263473	WITHOUT_CLASSIFICATION	6.570273652778658E-6	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925882845089	WITHOUT_CLASSIFICATION	7.411715491110311E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915484470677	WITHOUT_CLASSIFICATION	8.451552932241008E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999919991239467	WITHOUT_CLASSIFICATION	8.000876053336155E-6	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999930302307931	WITHOUT_CLASSIFICATION	6.969769206915199E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999933754620612	WITHOUT_CLASSIFICATION	6.624537938772195E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999933754620612	WITHOUT_CLASSIFICATION	6.624537938772195E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893342694268	WITHOUT_CLASSIFICATION	1.06657305731558E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999917147413496	WITHOUT_CLASSIFICATION	8.285258650436938E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999922956571188	WITHOUT_CLASSIFICATION	7.704342881216854E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992589983196	WITHOUT_CLASSIFICATION	7.410016804025056E-6	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999932536776761	WITHOUT_CLASSIFICATION	6.7463223238695055E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923426390386	WITHOUT_CLASSIFICATION	7.657360961395596E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999939638457257	WITHOUT_CLASSIFICATION	6.0361542742761605E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893342694268	WITHOUT_CLASSIFICATION	1.06657305731558E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925569040468	WITHOUT_CLASSIFICATION	7.443095953230388E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999905558360367	WITHOUT_CLASSIFICATION	9.444163963385996E-6	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999934603139395	WITHOUT_CLASSIFICATION	6.539686060548497E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999906959790104	WITHOUT_CLASSIFICATION	9.304020989741554E-6	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999897531231274	WITHOUT_CLASSIFICATION	1.0246876872562818E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999930216501296	WITHOUT_CLASSIFICATION	6.9783498703792705E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915171262451	WITHOUT_CLASSIFICATION	8.482873754824726E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935346504221	WITHOUT_CLASSIFICATION	6.465349577844277E-6	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986945337475	WITHOUT_CLASSIFICATION	1.3054662525082615E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999866432123102	WITHOUT_CLASSIFICATION	1.335678768976983E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999928354828883	WITHOUT_CLASSIFICATION	7.16451711162045E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999990126529238	WITHOUT_CLASSIFICATION	9.873470761984941E-6	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876529891485	WITHOUT_CLASSIFICATION	1.2347010851576689E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999988672702236	WITHOUT_CLASSIFICATION	1.1327297763955948E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876443277232	WITHOUT_CLASSIFICATION	1.2355672276628919E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924163295582	WITHOUT_CLASSIFICATION	7.5836704417434E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999925598235607	WITHOUT_CLASSIFICATION	7.440176439316335E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999930216501296	WITHOUT_CLASSIFICATION	6.9783498703792705E-6	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999919194223916	WITHOUT_CLASSIFICATION	8.080577608359465E-6	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999915866194513	WITHOUT_CLASSIFICATION	8.413380548746795E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923227802952	WITHOUT_CLASSIFICATION	7.677219704916354E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999921672074134	WITHOUT_CLASSIFICATION	7.832792586617386E-6	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999984873878056	WITHOUT_CLASSIFICATION	1.5126121943962773E-6	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999985533055753	WITHOUT_CLASSIFICATION	1.4466944246708191E-6	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999990415171277	WITHOUT_CLASSIFICATION	9.584828722541712E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999984146503689	WITHOUT_CLASSIFICATION	1.5853496310926932E-6	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999982948034253	WITHOUT_CLASSIFICATION	1.7051965746325484E-6	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999985629159289	WITHOUT_CLASSIFICATION	1.4370840710596422E-6	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999965036739029	WITHOUT_CLASSIFICATION	3.4963260970320826E-6	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999985112069476	WITHOUT_CLASSIFICATION	1.4887930523670266E-6	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999963778697981	WITHOUT_CLASSIFICATION	3.6221302018489474E-6	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999999193046572	WITHOUT_CLASSIFICATION	8.069534280391465E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.999952657710446	WITHOUT_CLASSIFICATION	4.7342289553994254E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999968254087851	WITHOUT_CLASSIFICATION	3.1745912148003853E-6	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999004605285539	WITHOUT_CLASSIFICATION	9.953947144602891E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999973151403805	WITHOUT_CLASSIFICATION	2.684859619512818E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999799022704671	WITHOUT_CLASSIFICATION	2.009772953292688E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999926849922989	WITHOUT_CLASSIFICATION	7.315007701211071E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999992725549269	WITHOUT_CLASSIFICATION	7.274450730637574E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999966271633491	WITHOUT_CLASSIFICATION	3.372836650862482E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999966271633491	WITHOUT_CLASSIFICATION	3.372836650862482E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999921374222639	WITHOUT_CLASSIFICATION	7.862577736057662E-6	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999981527374101	WITHOUT_CLASSIFICATION	1.8472625899567451E-6	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999676481552	WITHOUT_CLASSIFICATION	3.2351844695988716E-8	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999935369190961	WITHOUT_CLASSIFICATION	6.463080903940784E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999935369190961	WITHOUT_CLASSIFICATION	6.463080903940784E-6	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9995241565400468	WITHOUT_CLASSIFICATION	4.7584345995322047E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.999795926517815	WITHOUT_CLASSIFICATION	2.0407348218494368E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999998562699787	WITHOUT_CLASSIFICATION	1.4373002137082322E-7	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.999999259338534	WITHOUT_CLASSIFICATION	7.406614661508042E-7	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9999945126367977	WITHOUT_CLASSIFICATION	5.487363202237456E-6	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.999999900122023	WITHOUT_CLASSIFICATION	9.987797708909119E-8	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999656866956	WITHOUT_CLASSIFICATION	3.431330442497762E-8	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999981995568796	WITHOUT_CLASSIFICATION	1.8004431203567522E-6	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.999980548225931	WITHOUT_CLASSIFICATION	1.9451774069071327E-5	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999929309727169	WITHOUT_CLASSIFICATION	7.069027283037746E-6	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999995457227665	WITHOUT_CLASSIFICATION	4.5427723351592966E-7	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999895116601868	WITHOUT_CLASSIFICATION	1.0488339813332736E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999963429918823	WITHOUT_CLASSIFICATION	3.6570081177097636E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999992137383447	WITHOUT_CLASSIFICATION	7.862616553931991E-7	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999988054644354	WITHOUT_CLASSIFICATION	1.194535564571268E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999999073536874	WITHOUT_CLASSIFICATION	9.264631256868665E-8	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9999988074357407	WITHOUT_CLASSIFICATION	1.192564259357835E-6	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.999994974926122	WITHOUT_CLASSIFICATION	5.025073877934265E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999961001605112	WITHOUT_CLASSIFICATION	3.899839488700538E-6	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999974745020723	WITHOUT_CLASSIFICATION	2.525497927642922E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.999998923719252	WITHOUT_CLASSIFICATION	1.0762807479381003E-6	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999988656053687	WITHOUT_CLASSIFICATION	1.1343946313006529E-6	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999592372090865	WITHOUT_CLASSIFICATION	4.076279091340341E-5	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999961277389755	WITHOUT_CLASSIFICATION	3.872261024546656E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999963426352574	WITHOUT_CLASSIFICATION	3.6573647425948002E-6	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999982222742787	WITHOUT_CLASSIFICATION	1.777725721287056E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999814384396188	WITHOUT_CLASSIFICATION	1.85615603811436E-5	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999984245556028	WITHOUT_CLASSIFICATION	1.5754443971168177E-6	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999989843497005	WITHOUT_CLASSIFICATION	1.0156502995998983E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999986057364201	WITHOUT_CLASSIFICATION	1.394263579884724E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999986057364201	WITHOUT_CLASSIFICATION	1.394263579884724E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992120373099	WITHOUT_CLASSIFICATION	7.879626902255447E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992120373099	WITHOUT_CLASSIFICATION	7.879626902255447E-7	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999988391870055	WITHOUT_CLASSIFICATION	1.1608129945382766E-6	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999994500751472	WITHOUT_CLASSIFICATION	5.499248528726986E-7	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999610388048	WITHOUT_CLASSIFICATION	3.8961195158327994E-8	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999821642917712	WITHOUT_CLASSIFICATION	1.783570822869542E-5	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999848041980545	WITHOUT_CLASSIFICATION	1.5195801945559358E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999492055559935	WITHOUT_CLASSIFICATION	5.0794444006499626E-5	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.999987180976657	WITHOUT_CLASSIFICATION	1.2819023343133538E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999936736728283	WITHOUT_CLASSIFICATION	6.32632717175458E-6	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.99999465828595	WITHOUT_CLASSIFICATION	5.341714049971335E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999987663501635	WITHOUT_CLASSIFICATION	1.233649836468889E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999987663501635	WITHOUT_CLASSIFICATION	1.233649836468889E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999996629859955	WITHOUT_CLASSIFICATION	3.37014004433907E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999996629859955	WITHOUT_CLASSIFICATION	3.37014004433907E-7	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999996363263378	WITHOUT_CLASSIFICATION	3.636736621172531E-7	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999992104368051	WITHOUT_CLASSIFICATION	7.895631949620674E-7	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.999998354503775	WITHOUT_CLASSIFICATION	1.6454962249768636E-6	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.999999200018262	WITHOUT_CLASSIFICATION	7.999817378369358E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999930677475907	WITHOUT_CLASSIFICATION	6.932252409315816E-6	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999998286642036	WITHOUT_CLASSIFICATION	1.7133579654617271E-7	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999997113089367	WITHOUT_CLASSIFICATION	2.8869106329712123E-7	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999963069423845	WITHOUT_CLASSIFICATION	3.6930576154811756E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9999997043210516	WITHOUT_CLASSIFICATION	2.9567894843993616E-7	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999998517904168	WITHOUT_CLASSIFICATION	1.4820958311414362E-7	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999753783986982	WITHOUT_CLASSIFICATION	2.462160130180885E-5	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999981589698899	WITHOUT_CLASSIFICATION	1.8410301101420868E-6	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.999998566751576	WITHOUT_CLASSIFICATION	1.4332484240663024E-6	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999975326649827	WITHOUT_CLASSIFICATION	2.4673350173270487E-6	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999996912846629	WITHOUT_CLASSIFICATION	3.087153370481117E-7	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999804011411726	WITHOUT_CLASSIFICATION	1.9598858827423126E-5	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999878895767034	WITHOUT_CLASSIFICATION	1.2110423296706E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999983753982491	WITHOUT_CLASSIFICATION	1.6246017509302322E-6	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.999998342546277	WITHOUT_CLASSIFICATION	1.65745372300152E-6	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999853918769425	WITHOUT_CLASSIFICATION	1.4608123057632279E-5	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9999793756739079	WITHOUT_CLASSIFICATION	2.0624326092037996E-5	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999664580803013	WITHOUT_CLASSIFICATION	3.354191969875002E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999986576333159	WITHOUT_CLASSIFICATION	1.342366684056453E-6	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999951621136809	WITHOUT_CLASSIFICATION	4.837886319101575E-6	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999997176707438	WITHOUT_CLASSIFICATION	2.823292561499452E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999879805921364	WITHOUT_CLASSIFICATION	1.2019407863672753E-5	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999640072567978	WITHOUT_CLASSIFICATION	3.599274320210337E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999953880495109	WITHOUT_CLASSIFICATION	4.611950489087042E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999953880495109	WITHOUT_CLASSIFICATION	4.611950489087042E-6	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999989768008299	WITHOUT_CLASSIFICATION	1.02319917001887E-6	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999995014031642	WITHOUT_CLASSIFICATION	4.9859683572788E-7	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999998786927095	WITHOUT_CLASSIFICATION	1.21307290532198E-7	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999981677461492	WITHOUT_CLASSIFICATION	1.832253850699218E-6	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999932680793766	WITHOUT_CLASSIFICATION	6.7319206234148325E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999967873464999	WITHOUT_CLASSIFICATION	3.2126535001667533E-6	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999715987573422	WITHOUT_CLASSIFICATION	2.8401242657811215E-5	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999988353289697	WITHOUT_CLASSIFICATION	1.1646710303158647E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992120373099	WITHOUT_CLASSIFICATION	7.879626902255447E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992120373099	WITHOUT_CLASSIFICATION	7.879626902255447E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992120373099	WITHOUT_CLASSIFICATION	7.879626902255447E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999879805921364	WITHOUT_CLASSIFICATION	1.2019407863672753E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999882919992868	WITHOUT_CLASSIFICATION	1.1708000713183455E-5	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999941329207515	WITHOUT_CLASSIFICATION	5.867079248575962E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999836119125086	WITHOUT_CLASSIFICATION	1.638808749143073E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9999985781694773	WITHOUT_CLASSIFICATION	1.4218305226130355E-6	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999942489388726	WITHOUT_CLASSIFICATION	5.751061127435298E-6	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999921817613834	WITHOUT_CLASSIFICATION	7.818238616635698E-6	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999998746344592	WITHOUT_CLASSIFICATION	1.2536554088594422E-7	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999992443444912	WITHOUT_CLASSIFICATION	7.556555088743504E-7	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999998479220665	WITHOUT_CLASSIFICATION	1.5207793341741118E-7	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.999998947358758	WITHOUT_CLASSIFICATION	1.0526412418941452E-6	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999993618329782	WITHOUT_CLASSIFICATION	6.381670217638222E-7	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999997514670771	WITHOUT_CLASSIFICATION	2.4853292292077085E-7	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999779493163677	WITHOUT_CLASSIFICATION	2.205068363226958E-5	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999996595602852	WITHOUT_CLASSIFICATION	3.40439714747793E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999486323444496	WITHOUT_CLASSIFICATION	5.136765555045418E-5	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999321688076285	WITHOUT_CLASSIFICATION	6.783119237157834E-5	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9999997391589879	WITHOUT_CLASSIFICATION	2.608410120391292E-7	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999931224525886	WITHOUT_CLASSIFICATION	6.87754741137804E-6	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999996950159813	WITHOUT_CLASSIFICATION	3.0498401870800063E-7	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999990322855807	WITHOUT_CLASSIFICATION	9.677144192769967E-7	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999970651046266	WITHOUT_CLASSIFICATION	2.9348953733832368E-6	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999985895690767	WITHOUT_CLASSIFICATION	1.4104309233034569E-6	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999993874362711	WITHOUT_CLASSIFICATION	6.125637288850037E-7	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999995770963879	WITHOUT_CLASSIFICATION	4.2290361209204245E-7	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999990583652093	WITHOUT_CLASSIFICATION	9.416347906960401E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992120373099	WITHOUT_CLASSIFICATION	7.879626902255447E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999998746344592	WITHOUT_CLASSIFICATION	1.2536554088594422E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999486323444496	WITHOUT_CLASSIFICATION	5.136765555045418E-5	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999994928855764	WITHOUT_CLASSIFICATION	5.071144235169332E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999997659686535	WITHOUT_CLASSIFICATION	2.340313464809224E-7	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999991487082377	WITHOUT_CLASSIFICATION	8.512917622310445E-7	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9994754384977138	WITHOUT_CLASSIFICATION	5.24561502286252E-4	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999949233246752	WITHOUT_CLASSIFICATION	5.076675324749822E-6	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999501623602718	WITHOUT_CLASSIFICATION	4.983763972818796E-5	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999757757304713	WITHOUT_CLASSIFICATION	2.4224269528825108E-5	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999995701109208	WITHOUT_CLASSIFICATION	4.2988907917549346E-7	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9999828351277771	WITHOUT_CLASSIFICATION	1.7164872222946406E-5	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.99999988532704	WITHOUT_CLASSIFICATION	1.1467295991915295E-7	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999963553280136	WITHOUT_CLASSIFICATION	3.6446719865213486E-6	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999963553280136	WITHOUT_CLASSIFICATION	3.6446719865213486E-6	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999992629806607	WITHOUT_CLASSIFICATION	7.370193394181251E-7	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999949575518113	WITHOUT_CLASSIFICATION	5.042448188720947E-6	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999999147377707	WITHOUT_CLASSIFICATION	8.526222926986161E-8	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999982442333047	WITHOUT_CLASSIFICATION	1.7557666952096385E-6	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.999999969771525	WITHOUT_CLASSIFICATION	3.0228474963560974E-8	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999980128658241	WITHOUT_CLASSIFICATION	1.9871341757910987E-6	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999973724146634	WITHOUT_CLASSIFICATION	2.6275853366799153E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999998563579322	WITHOUT_CLASSIFICATION	1.4364206783654304E-7	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999989883229123	WITHOUT_CLASSIFICATION	1.0116770876634623E-6	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999865481645858	WITHOUT_CLASSIFICATION	1.3451835414237812E-5	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.999999329880939	WITHOUT_CLASSIFICATION	6.701190610289366E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999996629859955	WITHOUT_CLASSIFICATION	3.37014004433907E-7	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999997113089367	WITHOUT_CLASSIFICATION	2.8869106329712123E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999486323444496	WITHOUT_CLASSIFICATION	5.136765555045418E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.999999969771525	WITHOUT_CLASSIFICATION	3.0228474963560974E-8	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999980128658241	WITHOUT_CLASSIFICATION	1.9871341757910987E-6	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.999999641535375	WITHOUT_CLASSIFICATION	3.5846462499017414E-7	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999998574571604	WITHOUT_CLASSIFICATION	1.4254283968325228E-7	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999901632662427	WITHOUT_CLASSIFICATION	9.836733757234142E-6	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9999937489416613	WITHOUT_CLASSIFICATION	6.251058338674977E-6	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999918786270073	WITHOUT_CLASSIFICATION	8.121372992784375E-6	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999993297368498	WITHOUT_CLASSIFICATION	6.702631502584973E-7	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9999189861296456	WITHOUT_CLASSIFICATION	8.101387035448043E-5	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999792144895863	WITHOUT_CLASSIFICATION	2.0785510413764475E-5	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999998494788557	WITHOUT_CLASSIFICATION	1.5052114430591735E-7	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999926055236485	WITHOUT_CLASSIFICATION	7.39447635141406E-6	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999996035902984	WITHOUT_CLASSIFICATION	3.9640970159332796E-7	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999996299543172	WITHOUT_CLASSIFICATION	3.700456828696357E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9997824414879098	WITHOUT_CLASSIFICATION	2.1755851209006574E-4	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999984917300504	WITHOUT_CLASSIFICATION	1.508269949655339E-6	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.999997665998073	WITHOUT_CLASSIFICATION	2.334001926850165E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.999998007492241	WITHOUT_CLASSIFICATION	1.9925077590587136E-6	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9997824414879098	WITHOUT_CLASSIFICATION	2.1755851209006574E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9997824414879098	WITHOUT_CLASSIFICATION	2.1755851209006574E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9997824414879098	WITHOUT_CLASSIFICATION	2.1755851209006574E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999985758851435	WITHOUT_CLASSIFICATION	1.4241148564002033E-6	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999986325122705	WITHOUT_CLASSIFICATION	1.3674877295392276E-6	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999992491991987	WITHOUT_CLASSIFICATION	7.508008013059763E-7	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999997526435851	WITHOUT_CLASSIFICATION	2.4735641479775546E-7	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999986676652183	WITHOUT_CLASSIFICATION	1.3323347816700588E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999999573684839	WITHOUT_CLASSIFICATION	4.2631516042414194E-8	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999910580240243	WITHOUT_CLASSIFICATION	8.941975975616879E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999985083957182	WITHOUT_CLASSIFICATION	1.4916042817282332E-6	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.999999908161828	WITHOUT_CLASSIFICATION	9.183817188971656E-8	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999964614489343	WITHOUT_CLASSIFICATION	3.5385510658166966E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9998687613719943	WITHOUT_CLASSIFICATION	1.3123862800573256E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999975429970096	WITHOUT_CLASSIFICATION	2.4570029904664115E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999967902509515	WITHOUT_CLASSIFICATION	3.2097490485137814E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999966271633491	WITHOUT_CLASSIFICATION	3.372836650862482E-6	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999998680758562	WITHOUT_CLASSIFICATION	1.3192414381836533E-7	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999984960707545	WITHOUT_CLASSIFICATION	1.5039292454929912E-6	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999998651068518	WITHOUT_CLASSIFICATION	1.3489314817312593E-7	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999999419769521	WITHOUT_CLASSIFICATION	5.8023048002506905E-8	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999993242320035	WITHOUT_CLASSIFICATION	6.757679965094551E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999993242320035	WITHOUT_CLASSIFICATION	6.757679965094551E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999947284824616	WITHOUT_CLASSIFICATION	5.2715175384170775E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999945345749451	WITHOUT_CLASSIFICATION	5.465425054855575E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999947284824616	WITHOUT_CLASSIFICATION	5.2715175384170775E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999852538984019	WITHOUT_CLASSIFICATION	1.4746101597998229E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999960586226897	WITHOUT_CLASSIFICATION	3.941377310297155E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999836182640702	WITHOUT_CLASSIFICATION	1.638173592970628E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999950283306073	WITHOUT_CLASSIFICATION	4.971669392687158E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999950283306073	WITHOUT_CLASSIFICATION	4.971669392687158E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999874780014147	WITHOUT_CLASSIFICATION	1.2521998585296078E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999874780014147	WITHOUT_CLASSIFICATION	1.2521998585296078E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.999986089060666	WITHOUT_CLASSIFICATION	1.3910939333996602E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.999986089060666	WITHOUT_CLASSIFICATION	1.3910939333996602E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999985525857306	WITHOUT_CLASSIFICATION	1.447414269384171E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999985525857306	WITHOUT_CLASSIFICATION	1.447414269384171E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999985525857306	WITHOUT_CLASSIFICATION	1.447414269384171E-6	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999908079992392	WITHOUT_CLASSIFICATION	9.192000760742483E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999985525857306	WITHOUT_CLASSIFICATION	1.447414269384171E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999985525857306	WITHOUT_CLASSIFICATION	1.447414269384171E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999991763813164	WITHOUT_CLASSIFICATION	8.236186836054044E-7	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999877546897655	WITHOUT_CLASSIFICATION	1.2245310234557306E-5	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999998468161563	WITHOUT_CLASSIFICATION	1.5318384374763915E-7	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.999999984281258	WITHOUT_CLASSIFICATION	1.571874198036903E-8	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999997038236191	WITHOUT_CLASSIFICATION	2.9617638075824764E-7	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999997836798856	WITHOUT_CLASSIFICATION	2.16320114328824E-7	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999940193401198	WITHOUT_CLASSIFICATION	5.980659880239005E-6	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999996545660174	WITHOUT_CLASSIFICATION	3.454339826717404E-7	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9999942952592686	WITHOUT_CLASSIFICATION	5.704740731410959E-6	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999998682547834	WITHOUT_CLASSIFICATION	1.3174521661123537E-7	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999978198267104	WITHOUT_CLASSIFICATION	2.180173289551956E-6	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999968013412457	WITHOUT_CLASSIFICATION	3.1986587543094466E-6	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999999888599307	WITHOUT_CLASSIFICATION	1.1140069350720741E-8	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999997952823921	WITHOUT_CLASSIFICATION	2.047176079459477E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999994187767371	WITHOUT_CLASSIFICATION	5.812232628398379E-7	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.999999881230345	WITHOUT_CLASSIFICATION	1.1876965492974293E-7	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.999999709662214	WITHOUT_CLASSIFICATION	2.903377860300025E-7	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999988037405805	WITHOUT_CLASSIFICATION	1.1962594195298318E-6	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999986482738327	WITHOUT_CLASSIFICATION	1.3517261673852434E-6	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999997416828345	WITHOUT_CLASSIFICATION	2.583171654629007E-7	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999996564761319	WITHOUT_CLASSIFICATION	3.4352386813844965E-7	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999848141036787	WITHOUT_CLASSIFICATION	1.518589632129925E-5	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999848141036787	WITHOUT_CLASSIFICATION	1.518589632129925E-5	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9999865541252598	WITHOUT_CLASSIFICATION	1.3445874740255727E-5	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9999865541252598	WITHOUT_CLASSIFICATION	1.3445874740255727E-5	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999999469786298	WITHOUT_CLASSIFICATION	5.302137017950717E-8	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999989470520856	WITHOUT_CLASSIFICATION	1.0529479143558236E-6	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999995220280857	WITHOUT_CLASSIFICATION	4.779719142946862E-7	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.999999718790493	WITHOUT_CLASSIFICATION	2.8120950703511875E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.999999010461608	WITHOUT_CLASSIFICATION	9.895383919536736E-7	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999824002418747	WITHOUT_CLASSIFICATION	1.75997581253306E-5	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.999999600372033	WITHOUT_CLASSIFICATION	3.9962796700017546E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9999672798726275	WITHOUT_CLASSIFICATION	3.272012737255612E-5	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999987713635349	WITHOUT_CLASSIFICATION	1.228636465114453E-6	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999986289234775	WITHOUT_CLASSIFICATION	1.3710765225075517E-6	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.999999926487048	WITHOUT_CLASSIFICATION	7.351295196229883E-8	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999990734542642	WITHOUT_CLASSIFICATION	9.265457357666016E-7	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999949658045812	WITHOUT_CLASSIFICATION	5.034195418689113E-6	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999997601404118	WITHOUT_CLASSIFICATION	2.398595881241529E-7	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999934196054651	WITHOUT_CLASSIFICATION	6.580394534870727E-6	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.999999700371919	WITHOUT_CLASSIFICATION	2.996280809319437E-7	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999999139711921	WITHOUT_CLASSIFICATION	8.602880784310834E-8	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999992645340482	WITHOUT_CLASSIFICATION	7.35465951758662E-7	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999871679898458	WITHOUT_CLASSIFICATION	1.283201015424751E-5	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9999989222016827	WITHOUT_CLASSIFICATION	1.0777983172332132E-6	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999998437481529	WITHOUT_CLASSIFICATION	1.562518470549862E-7	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999995486511355	WITHOUT_CLASSIFICATION	4.513488644120003E-7	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999975477353698	WITHOUT_CLASSIFICATION	2.452264630246171E-6	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9999908721682198	WITHOUT_CLASSIFICATION	9.127831780219521E-6	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999998500933931	WITHOUT_CLASSIFICATION	1.4990660681438715E-7	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999973425224207	WITHOUT_CLASSIFICATION	2.6574775793321174E-6	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999981277116885	WITHOUT_CLASSIFICATION	1.8722883114319007E-6	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999764095214975	WITHOUT_CLASSIFICATION	2.3590478502524834E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999969368033313	WITHOUT_CLASSIFICATION	3.0631966687037717E-6	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999979181419731	WITHOUT_CLASSIFICATION	2.081858026899994E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999699158445	WITHOUT_CLASSIFICATION	3.0084155489072525E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999967414742686	WITHOUT_CLASSIFICATION	3.2585257314680624E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995975042744	WITHOUT_CLASSIFICATION	4.024957256596449E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999986918978489	WITHOUT_CLASSIFICATION	1.3081021511024562E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999946769627697	WITHOUT_CLASSIFICATION	5.323037230284499E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999994914656819	WITHOUT_CLASSIFICATION	5.085343181673669E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999678735363005	WITHOUT_CLASSIFICATION	3.2126463699642015E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999996129481828	WITHOUT_CLASSIFICATION	3.8705181703230334E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999741223410226	WITHOUT_CLASSIFICATION	2.5877658977470268E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958287494888	WITHOUT_CLASSIFICATION	4.1712505112307436E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999923529734214	WITHOUT_CLASSIFICATION	7.647026578601426E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999940223166941	WITHOUT_CLASSIFICATION	5.977683305883227E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999998007895808	WITHOUT_CLASSIFICATION	1.9921041920351543E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999652175716905	WITHOUT_CLASSIFICATION	3.4782428309578356E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999935369190961	WITHOUT_CLASSIFICATION	6.463080903940784E-6	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.999968428802137	WITHOUT_CLASSIFICATION	3.157119786293822E-5	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999999163660054	WITHOUT_CLASSIFICATION	8.363399461356229E-8	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999699292553563	WITHOUT_CLASSIFICATION	3.0070744643636217E-5	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999956204065156	WITHOUT_CLASSIFICATION	4.3795934844419225E-6	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999963735794474	WITHOUT_CLASSIFICATION	3.6264205526129238E-6	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999947474101655	WITHOUT_CLASSIFICATION	5.25258983453683E-6	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999996388532365	WITHOUT_CLASSIFICATION	3.6114676351842343E-7	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.999999313669149	WITHOUT_CLASSIFICATION	6.86330850973419E-7	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999631857236293	WITHOUT_CLASSIFICATION	3.681427637081224E-5	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999029045054376	WITHOUT_CLASSIFICATION	9.70954945624249E-5	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9998543779139731	WITHOUT_CLASSIFICATION	1.456220860268811E-4	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999013790312713	WITHOUT_CLASSIFICATION	9.862096872872509E-5	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9998382046124087	WITHOUT_CLASSIFICATION	1.6179538759123182E-4	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.999804884109579	WITHOUT_CLASSIFICATION	1.9511589042098124E-4	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999103478044857	WITHOUT_CLASSIFICATION	8.965219551418819E-5	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999966825348192	WITHOUT_CLASSIFICATION	3.3174651807600095E-6	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9998925900790098	WITHOUT_CLASSIFICATION	1.0740992099019797E-4	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.999925951700998	WITHOUT_CLASSIFICATION	7.404829900199682E-5	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999994170784882	WITHOUT_CLASSIFICATION	5.8292151171544E-7	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999969708778725	WITHOUT_CLASSIFICATION	3.029122127482489E-6	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9956659544687144	WITHOUT_CLASSIFICATION	0.0043340455312854695	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999991825432065	WITHOUT_CLASSIFICATION	8.174567935168189E-7	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.999999487553751	WITHOUT_CLASSIFICATION	5.124462490311459E-7	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9995091352867033	WITHOUT_CLASSIFICATION	4.908647132966527E-4	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9999957790957305	WITHOUT_CLASSIFICATION	4.2209042696420804E-6	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999996196272022	WITHOUT_CLASSIFICATION	3.803727978505664E-7	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999999567720121	WITHOUT_CLASSIFICATION	4.322798784520881E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999990597104342	WITHOUT_CLASSIFICATION	9.4028956575752E-7	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999799337840858	WITHOUT_CLASSIFICATION	2.006621591418577E-5	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999962148451278	WITHOUT_CLASSIFICATION	3.7851548722945858E-6	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999993396087581	WITHOUT_CLASSIFICATION	6.603912419314834E-7	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999733750105329	WITHOUT_CLASSIFICATION	2.662498946708292E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999996346968867	WITHOUT_CLASSIFICATION	3.653031132630652E-7	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999995154680014	WITHOUT_CLASSIFICATION	4.845319987170733E-7	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999946974155547	WITHOUT_CLASSIFICATION	5.30258444523255E-6	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999991871703523	WITHOUT_CLASSIFICATION	8.128296476572528E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999991647298336	WITHOUT_CLASSIFICATION	8.352701663422882E-7	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999993861664007	WITHOUT_CLASSIFICATION	6.138335992116862E-7	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999989328754072	WITHOUT_CLASSIFICATION	1.0671245927558735E-6	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999997505902014	WITHOUT_CLASSIFICATION	2.4940979851982133E-7	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999998684512184	WITHOUT_CLASSIFICATION	1.3154878158599866E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999997083221912	WITHOUT_CLASSIFICATION	2.916778087651925E-7	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999988220436028	WITHOUT_CLASSIFICATION	1.1779563972679833E-6	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.999999953585268	WITHOUT_CLASSIFICATION	4.6414732002499994E-8	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.999997191118298	WITHOUT_CLASSIFICATION	2.8088817020089305E-6	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.999996035536323	WITHOUT_CLASSIFICATION	3.964463677047662E-6	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999996810386163	WITHOUT_CLASSIFICATION	3.1896138378530953E-7	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999995425625076	WITHOUT_CLASSIFICATION	4.5743749244850067E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9999042339503127	WITHOUT_CLASSIFICATION	9.576604968726658E-5	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999982336889297	WITHOUT_CLASSIFICATION	1.7663110702765542E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999975937629026	WITHOUT_CLASSIFICATION	2.4062370973993177E-6	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999967132345325	WITHOUT_CLASSIFICATION	3.2867654675172193E-6	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999976942915686	WITHOUT_CLASSIFICATION	2.3057084314701994E-6	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999996910117889	WITHOUT_CLASSIFICATION	3.089882111295033E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999988495476179	WITHOUT_CLASSIFICATION	1.1504523821571268E-6	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999988495476179	WITHOUT_CLASSIFICATION	1.1504523821571268E-6	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999997442148325	WITHOUT_CLASSIFICATION	2.557851675468403E-7	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999996595863613	WITHOUT_CLASSIFICATION	3.4041363872054343E-7	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999983413708519	WITHOUT_CLASSIFICATION	1.6586291481919325E-6	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.999998361916577	WITHOUT_CLASSIFICATION	1.6380834229258342E-6	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999987839336139	WITHOUT_CLASSIFICATION	1.2160663860710505E-6	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999988394838752	WITHOUT_CLASSIFICATION	1.1605161247479756E-6	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999999381327884	WITHOUT_CLASSIFICATION	6.18672115085988E-8	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999991870023683	WITHOUT_CLASSIFICATION	8.129976316083218E-7	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999999692989888	WITHOUT_CLASSIFICATION	3.0701011158192705E-8	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999991505523438	WITHOUT_CLASSIFICATION	8.49447656194912E-7	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999988453972323	WITHOUT_CLASSIFICATION	1.1546027677405022E-6	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9999987947395966	WITHOUT_CLASSIFICATION	1.2052604034428114E-6	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.999993141759023	WITHOUT_CLASSIFICATION	6.858240977069057E-6	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999976882817788	WITHOUT_CLASSIFICATION	2.3117182211453163E-6	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999995029481306	WITHOUT_CLASSIFICATION	4.970518693258695E-7	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9999978675418509	WITHOUT_CLASSIFICATION	2.1324581490976816E-6	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999984284822391	WITHOUT_CLASSIFICATION	1.5715177608620669E-6	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999731427656	WITHOUT_CLASSIFICATION	2.6857234497000154E-8	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999985971391728	WITHOUT_CLASSIFICATION	1.402860827121833E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9999895442548975	WITHOUT_CLASSIFICATION	1.0455745102554753E-5	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999999893211696	WITHOUT_CLASSIFICATION	1.0678830298833615E-8	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999988126166557	WITHOUT_CLASSIFICATION	1.1873833443594643E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.999992958565543	WITHOUT_CLASSIFICATION	7.041434456987892E-6	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999995676929414	WITHOUT_CLASSIFICATION	4.323070585501396E-7	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999983764953879	WITHOUT_CLASSIFICATION	1.6235046121347947E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999943507249213	WITHOUT_CLASSIFICATION	5.649275078724412E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999892916598491	WITHOUT_CLASSIFICATION	1.070834015103838E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999985525857306	WITHOUT_CLASSIFICATION	1.447414269384171E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999985525857306	WITHOUT_CLASSIFICATION	1.447414269384171E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999985525857306	WITHOUT_CLASSIFICATION	1.447414269384171E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999985525857306	WITHOUT_CLASSIFICATION	1.447414269384171E-6	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999967738523519	WITHOUT_CLASSIFICATION	3.226147648204673E-6	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.999999631801311	WITHOUT_CLASSIFICATION	3.681986889824933E-7	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999997293906154	WITHOUT_CLASSIFICATION	2.706093846487829E-7	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9999993040116372	WITHOUT_CLASSIFICATION	6.959883628659671E-7	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999996098519284	WITHOUT_CLASSIFICATION	3.901480715969701E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999633079938047	WITHOUT_CLASSIFICATION	3.6692006195257334E-5	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999737988500778	WITHOUT_CLASSIFICATION	2.6201149922239745E-5	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999993805520229	WITHOUT_CLASSIFICATION	6.194479771329643E-7	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999993789750523	WITHOUT_CLASSIFICATION	6.210249475938538E-7	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999983003725792	WITHOUT_CLASSIFICATION	1.6996274207939974E-6	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999991587435355	WITHOUT_CLASSIFICATION	8.412564644607016E-7	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999977203746557	WITHOUT_CLASSIFICATION	2.279625344193018E-6	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999745408469297	WITHOUT_CLASSIFICATION	2.545915307039337E-5	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999970935820609	WITHOUT_CLASSIFICATION	2.906417939002241E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999734255842592	WITHOUT_CLASSIFICATION	2.6574415740800835E-5	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999976761474352	WITHOUT_CLASSIFICATION	2.323852564912173E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999993242320035	WITHOUT_CLASSIFICATION	6.757679965094551E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999993242320035	WITHOUT_CLASSIFICATION	6.757679965094551E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999947284824616	WITHOUT_CLASSIFICATION	5.2715175384170775E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999947284824616	WITHOUT_CLASSIFICATION	5.2715175384170775E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999972769905864	WITHOUT_CLASSIFICATION	2.723009413640029E-6	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999901866849069	WITHOUT_CLASSIFICATION	9.81331509314006E-6	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999981454497365	WITHOUT_CLASSIFICATION	1.8545502635754635E-6	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999998079355711	WITHOUT_CLASSIFICATION	1.9206442902872245E-7	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.999979245325535	WITHOUT_CLASSIFICATION	2.075467446511752E-5	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999656685141809	WITHOUT_CLASSIFICATION	3.4331485819133695E-5	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999995782655084	WITHOUT_CLASSIFICATION	4.2173449157025783E-7	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999997873264387	WITHOUT_CLASSIFICATION	2.126735614351349E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999969386319766	WITHOUT_CLASSIFICATION	3.0613680233501606E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999969386319766	WITHOUT_CLASSIFICATION	3.0613680233501606E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999994902425645	WITHOUT_CLASSIFICATION	5.097574354043404E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999994902425645	WITHOUT_CLASSIFICATION	5.097574354043404E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.999998007492241	WITHOUT_CLASSIFICATION	1.9925077590587136E-6	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999960586226897	WITHOUT_CLASSIFICATION	3.941377310297155E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999852538984019	WITHOUT_CLASSIFICATION	1.4746101597998229E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999836182640702	WITHOUT_CLASSIFICATION	1.638173592970628E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999950283306073	WITHOUT_CLASSIFICATION	4.971669392687158E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999950283306073	WITHOUT_CLASSIFICATION	4.971669392687158E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999874780014147	WITHOUT_CLASSIFICATION	1.2521998585296078E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999874780014147	WITHOUT_CLASSIFICATION	1.2521998585296078E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.999986089060666	WITHOUT_CLASSIFICATION	1.3910939333996602E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.999986089060666	WITHOUT_CLASSIFICATION	1.3910939333996602E-5	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999137323070906	WITHOUT_CLASSIFICATION	8.626769290944741E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999953487107217	WITHOUT_CLASSIFICATION	4.651289278314333E-6	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999885926977121	WITHOUT_CLASSIFICATION	1.1407302287902716E-5	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999882219338937	WITHOUT_CLASSIFICATION	1.1778066106347704E-5	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999996689634095	WITHOUT_CLASSIFICATION	3.3103659046358573E-7	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999980048321425	WITHOUT_CLASSIFICATION	1.9951678575338672E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.999998273852961	WITHOUT_CLASSIFICATION	1.7261470390775308E-6	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999981734412584	WITHOUT_CLASSIFICATION	1.826558741518669E-6	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999950823986151	WITHOUT_CLASSIFICATION	4.917601384962345E-6	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999997709563923	WITHOUT_CLASSIFICATION	2.2904360767822455E-7	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999996524899556	WITHOUT_CLASSIFICATION	3.475100444911997E-7	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999981363877795	WITHOUT_CLASSIFICATION	1.8636122204434358E-6	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999992310095905	WITHOUT_CLASSIFICATION	7.689904094261502E-7	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999991170519773	WITHOUT_CLASSIFICATION	8.829480227139255E-7	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999999179680665	WITHOUT_CLASSIFICATION	8.20319335122726E-8	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999985350866674	WITHOUT_CLASSIFICATION	1.464913332584059E-6	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999949527153489	WITHOUT_CLASSIFICATION	5.047284651128096E-6	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999976040650739	WITHOUT_CLASSIFICATION	2.395934926059742E-6	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999997507984251	WITHOUT_CLASSIFICATION	2.4920157503533824E-7	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.999993509383877	WITHOUT_CLASSIFICATION	6.490616123000814E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.999999332721094	WITHOUT_CLASSIFICATION	6.672789060027528E-7	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999735265795616	WITHOUT_CLASSIFICATION	2.6473420438470923E-5	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999849524416821	WITHOUT_CLASSIFICATION	1.5047558317996043E-5	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.999999872011708	WITHOUT_CLASSIFICATION	1.2798829201789862E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999992254384495	WITHOUT_CLASSIFICATION	7.745615504998668E-7	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999994376232766	WITHOUT_CLASSIFICATION	5.623767234154883E-7	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9999998752138469	WITHOUT_CLASSIFICATION	1.2478615306049003E-7	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999995966716861	WITHOUT_CLASSIFICATION	4.033283138235289E-7	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9999943434961829	WITHOUT_CLASSIFICATION	5.656503817127737E-6	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9999997458633321	WITHOUT_CLASSIFICATION	2.541366679398574E-7	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999988496090261	WITHOUT_CLASSIFICATION	1.1503909738307106E-6	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999923648523976	WITHOUT_CLASSIFICATION	7.635147602480355E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999937596132726	WITHOUT_CLASSIFICATION	6.240386727404026E-6	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999996929921717	WITHOUT_CLASSIFICATION	3.0700782828521384E-7	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999964270943069	WITHOUT_CLASSIFICATION	3.572905693164113E-6	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999994685921949	WITHOUT_CLASSIFICATION	5.314078051334284E-7	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999996614694202	WITHOUT_CLASSIFICATION	3.385305797855592E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.999999387768641	WITHOUT_CLASSIFICATION	6.122313590426091E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999994788108572	WITHOUT_CLASSIFICATION	5.211891427474698E-7	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999995772107035	WITHOUT_CLASSIFICATION	4.2278929650260593E-7	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999968611836456	WITHOUT_CLASSIFICATION	3.1388163543068967E-6	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999999897388275	WITHOUT_CLASSIFICATION	1.026117236096323E-8	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999988419177692	WITHOUT_CLASSIFICATION	1.158082230835791E-6	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999984650725071	WITHOUT_CLASSIFICATION	1.5349274929136088E-6	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999996856848455	WITHOUT_CLASSIFICATION	3.143151545521171E-7	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999982084064151	WITHOUT_CLASSIFICATION	1.7915935848186725E-6	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9996353278251277	WITHOUT_CLASSIFICATION	3.646721748722622E-4	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999943714457091	WITHOUT_CLASSIFICATION	5.62855429084017E-6	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999998896235737	WITHOUT_CLASSIFICATION	1.1037642630878441E-7	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999963865036412	WITHOUT_CLASSIFICATION	3.6134963587105217E-6	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999894740109574	WITHOUT_CLASSIFICATION	1.052598904253755E-5	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999962786365155	WITHOUT_CLASSIFICATION	3.7213634844803987E-6	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9999101322538472	WITHOUT_CLASSIFICATION	8.98677461529246E-5	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9999758096276974	WITHOUT_CLASSIFICATION	2.4190372302667923E-5	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9999426968406215	WITHOUT_CLASSIFICATION	5.7303159378394885E-5	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999989800598886	WITHOUT_CLASSIFICATION	1.019940111387927E-6	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999892341663241	WITHOUT_CLASSIFICATION	1.0765833675926317E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999982645080312	WITHOUT_CLASSIFICATION	1.735491968832473E-6	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999997039780658	WITHOUT_CLASSIFICATION	2.9602193412677987E-7	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999990940100729	WITHOUT_CLASSIFICATION	9.059899270725764E-7	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999977755911903	WITHOUT_CLASSIFICATION	2.224408809723757E-6	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999994556108502	WITHOUT_CLASSIFICATION	5.44389149691125E-7	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999970865443261	WITHOUT_CLASSIFICATION	2.913455673941886E-6	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999993353351322	WITHOUT_CLASSIFICATION	6.64664867849053E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999997188759664	WITHOUT_CLASSIFICATION	2.811240336342883E-7	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999994307726894	WITHOUT_CLASSIFICATION	5.692273105179102E-7	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999997848050732	WITHOUT_CLASSIFICATION	2.151949266272057E-7	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999999265874633	WITHOUT_CLASSIFICATION	7.341253663211814E-8	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999994914656819	WITHOUT_CLASSIFICATION	5.085343181673669E-7	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999996149175413	WITHOUT_CLASSIFICATION	3.8508245869855445E-7	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999996144894793	WITHOUT_CLASSIFICATION	3.855105206229667E-7	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999509817189	WITHOUT_CLASSIFICATION	4.9018281142756E-8	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999964892882451	WITHOUT_CLASSIFICATION	3.510711754803915E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999803996077811	WITHOUT_CLASSIFICATION	1.960039221894648E-5	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999584135313584	WITHOUT_CLASSIFICATION	4.1586468641703106E-5	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999946648858062	WITHOUT_CLASSIFICATION	5.335114193731591E-6	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999992780362396	WITHOUT_CLASSIFICATION	7.219637605247005E-7	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999986648366104	WITHOUT_CLASSIFICATION	1.3351633896309676E-6	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9999055261686535	WITHOUT_CLASSIFICATION	9.44738313465281E-5	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999991440612218	WITHOUT_CLASSIFICATION	8.559387781414001E-7	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999481407749625	WITHOUT_CLASSIFICATION	5.185922503748298E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999678735363005	WITHOUT_CLASSIFICATION	3.2126463699642015E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999837600769989	WITHOUT_CLASSIFICATION	1.6239923001237332E-5	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9997987646613419	WITHOUT_CLASSIFICATION	2.0123533865819344E-4	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.99990686410406	WITHOUT_CLASSIFICATION	9.313589593990294E-5	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999933243759968	WITHOUT_CLASSIFICATION	6.6756240032150574E-6	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999984863272939	WITHOUT_CLASSIFICATION	1.5136727060420566E-6	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9996620107844494	WITHOUT_CLASSIFICATION	3.3798921555069797E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.999987850767645	WITHOUT_CLASSIFICATION	1.2149232355020746E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999972699716507	WITHOUT_CLASSIFICATION	2.730028349382545E-6	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999938737403424	WITHOUT_CLASSIFICATION	6.126259657678904E-6	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999845553381347	WITHOUT_CLASSIFICATION	1.544466186536645E-5	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999745837342366	WITHOUT_CLASSIFICATION	2.541626576342351E-5	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.999884051160947	WITHOUT_CLASSIFICATION	1.1594883905302821E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999824682196333	WITHOUT_CLASSIFICATION	1.7531780366739658E-5	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999979774423022	WITHOUT_CLASSIFICATION	2.022557697695886E-6	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999960340638886	WITHOUT_CLASSIFICATION	3.965936111393005E-6	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999940282774464	WITHOUT_CLASSIFICATION	5.971722553634273E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999977516685958	WITHOUT_CLASSIFICATION	2.248331404181986E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999544706979066	WITHOUT_CLASSIFICATION	4.552930209353852E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999830897426858	WITHOUT_CLASSIFICATION	1.6910257314171302E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999830897426858	WITHOUT_CLASSIFICATION	1.6910257314171302E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.999998842185778	WITHOUT_CLASSIFICATION	1.1578142220665815E-6	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999713602232808	WITHOUT_CLASSIFICATION	2.8639776719222683E-5	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999985987026023	WITHOUT_CLASSIFICATION	1.4012973976469187E-6	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999986906027947	WITHOUT_CLASSIFICATION	1.3093972053794613E-6	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999979245162909	WITHOUT_CLASSIFICATION	2.0754837091795332E-6	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999984054358793	WITHOUT_CLASSIFICATION	1.5945641207240889E-6	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999876609936718	WITHOUT_CLASSIFICATION	1.2339006328263107E-5	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999971345743076	WITHOUT_CLASSIFICATION	2.8654256924388954E-6	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999995052392474	WITHOUT_CLASSIFICATION	4.947607524883757E-7	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999997322545275	WITHOUT_CLASSIFICATION	2.677454725271745E-7	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999966463348557	WITHOUT_CLASSIFICATION	3.353665144284321E-6	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.999992631024642	WITHOUT_CLASSIFICATION	7.368975358039906E-6	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.999954308669199	WITHOUT_CLASSIFICATION	4.56913308010756E-5	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999977361502931	WITHOUT_CLASSIFICATION	2.263849706999582E-6	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9998460988720532	WITHOUT_CLASSIFICATION	1.5390112794687395E-4	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999985351543579	WITHOUT_CLASSIFICATION	1.464845642187853E-6	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999993041906531	WITHOUT_CLASSIFICATION	6.958093468588699E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.999956820979595	WITHOUT_CLASSIFICATION	4.317902040487896E-5	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999951283291396	WITHOUT_CLASSIFICATION	4.871670860385857E-6	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999984806446132	WITHOUT_CLASSIFICATION	1.5193553868291307E-6	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999989391071049	WITHOUT_CLASSIFICATION	1.060892895123517E-6	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999596161452106	WITHOUT_CLASSIFICATION	4.038385478940479E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999940012237646	WITHOUT_CLASSIFICATION	5.9987762354318E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999994488355545	WITHOUT_CLASSIFICATION	5.511644455675026E-7	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999846811520826	WITHOUT_CLASSIFICATION	1.5318847917323758E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999989383794161	WITHOUT_CLASSIFICATION	1.0616205838635168E-6	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999908179069825	WITHOUT_CLASSIFICATION	9.182093017498856E-6	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999981801579676	WITHOUT_CLASSIFICATION	1.81984203238667E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999962931603723	WITHOUT_CLASSIFICATION	3.7068396276462206E-6	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.999977787878703	WITHOUT_CLASSIFICATION	2.221212129704845E-5	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999990064005955	WITHOUT_CLASSIFICATION	9.93599404432859E-7	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.999992441607856	WITHOUT_CLASSIFICATION	7.558392143864766E-6	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999867766086423	WITHOUT_CLASSIFICATION	1.3223391357662528E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999900787706082	WITHOUT_CLASSIFICATION	9.921229391780372E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999967747822668	WITHOUT_CLASSIFICATION	3.225217733222611E-6	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999881933569295	WITHOUT_CLASSIFICATION	1.1806643070562899E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999630807846199	WITHOUT_CLASSIFICATION	3.691921538004046E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999962931603723	WITHOUT_CLASSIFICATION	3.7068396276462206E-6	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999994602437311	WITHOUT_CLASSIFICATION	5.397562689775822E-7	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999999848106188	WITHOUT_CLASSIFICATION	1.5189381222599293E-8	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999945170144826	WITHOUT_CLASSIFICATION	5.4829855173943766E-6	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9999996764674122	WITHOUT_CLASSIFICATION	3.2353258779148855E-7	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999929107550916	WITHOUT_CLASSIFICATION	7.089244908496064E-6	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999305447404919	WITHOUT_CLASSIFICATION	6.945525950816225E-5	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999984093782596	WITHOUT_CLASSIFICATION	1.5906217405375304E-6	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999111605762054	WITHOUT_CLASSIFICATION	8.883942379450758E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999877285331092	WITHOUT_CLASSIFICATION	1.2271466890730458E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999795057878448	WITHOUT_CLASSIFICATION	2.0494212155135477E-5	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999939868245971	WITHOUT_CLASSIFICATION	6.0131754029385275E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999848135295366	WITHOUT_CLASSIFICATION	1.5186470463348197E-5	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999964257069275	WITHOUT_CLASSIFICATION	3.574293072593951E-6	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9998954337321275	WITHOUT_CLASSIFICATION	1.0456626787245017E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.999989117792507	WITHOUT_CLASSIFICATION	1.0882207493071797E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.999697825348639	WITHOUT_CLASSIFICATION	3.021746513609485E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.999697825348639	WITHOUT_CLASSIFICATION	3.021746513609485E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9999972791484589	WITHOUT_CLASSIFICATION	2.720851541179911E-6	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9999975766079438	WITHOUT_CLASSIFICATION	2.4233920562555104E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999988304547816	WITHOUT_CLASSIFICATION	1.169545218392998E-6	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.999997536569284	WITHOUT_CLASSIFICATION	2.463430715906051E-6	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999959274062316	WITHOUT_CLASSIFICATION	4.072593768521329E-6	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999974111233695	WITHOUT_CLASSIFICATION	2.588876630435402E-6	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999996636816008	WITHOUT_CLASSIFICATION	3.3631839921011325E-7	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999937295868653	WITHOUT_CLASSIFICATION	6.270413134702998E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999996431591471	WITHOUT_CLASSIFICATION	3.5684085286764965E-7	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999990685017033	WITHOUT_CLASSIFICATION	9.314982966795602E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999978743355181	WITHOUT_CLASSIFICATION	2.1256644817875823E-6	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9990302293452826	WITHOUT_CLASSIFICATION	9.697706547174116E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999967788760991	WITHOUT_CLASSIFICATION	3.2211239010534323E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999945345749451	WITHOUT_CLASSIFICATION	5.465425054855575E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999945345749451	WITHOUT_CLASSIFICATION	5.465425054855575E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999988304547816	WITHOUT_CLASSIFICATION	1.169545218392998E-6	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999978743355181	WITHOUT_CLASSIFICATION	2.1256644817875823E-6	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.99997077834367	WITHOUT_CLASSIFICATION	2.92216563299746E-5	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.999994051429911	WITHOUT_CLASSIFICATION	5.9485700889142925E-6	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999783222876467	WITHOUT_CLASSIFICATION	2.167771235331036E-5	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9999995237808177	WITHOUT_CLASSIFICATION	4.762191822860435E-7	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999992595649942	WITHOUT_CLASSIFICATION	7.404350057233154E-7	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999987139838561	WITHOUT_CLASSIFICATION	1.2860161438151924E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.999999030511973	WITHOUT_CLASSIFICATION	9.694880269671727E-7	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999821519034872	WITHOUT_CLASSIFICATION	1.7848096512942114E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999979207987745	WITHOUT_CLASSIFICATION	2.0792012254726825E-6	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999990364583641	WITHOUT_CLASSIFICATION	9.635416359516188E-7	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.99990812629648	WITHOUT_CLASSIFICATION	9.18737035200312E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.999949974335951	WITHOUT_CLASSIFICATION	5.00256640490131E-5	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999897576947859	WITHOUT_CLASSIFICATION	1.024230521416292E-5	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999570970082617	WITHOUT_CLASSIFICATION	4.290299173822812E-5	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.999999300881285	WITHOUT_CLASSIFICATION	6.991187150601702E-7	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999976626062826	WITHOUT_CLASSIFICATION	2.3373937173540846E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999902237211162	WITHOUT_CLASSIFICATION	9.776278883682426E-6	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999956659402952	WITHOUT_CLASSIFICATION	4.334059704756174E-6	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999933004419416	WITHOUT_CLASSIFICATION	6.699558058474523E-6	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999992127015936	WITHOUT_CLASSIFICATION	7.872984063925007E-7	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9999998372262958	WITHOUT_CLASSIFICATION	1.627737042014606E-7	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999981638659201	WITHOUT_CLASSIFICATION	1.8361340798534663E-6	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9997975551736699	WITHOUT_CLASSIFICATION	2.024448263301072E-4	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999758347691119	WITHOUT_CLASSIFICATION	2.416523088810113E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999982450475358	WITHOUT_CLASSIFICATION	1.7549524642157457E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977221532603	WITHOUT_CLASSIFICATION	2.2778467396102164E-6	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999952769007855	WITHOUT_CLASSIFICATION	4.7230992144994695E-6	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999740118827883	WITHOUT_CLASSIFICATION	2.5988117211615453E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999968302514416	WITHOUT_CLASSIFICATION	3.169748558348408E-6	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999963751122755	WITHOUT_CLASSIFICATION	3.6248877244595744E-6	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9999997859072682	WITHOUT_CLASSIFICATION	2.1409273187752848E-7	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999792442023168	WITHOUT_CLASSIFICATION	2.0755797683264762E-5	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999996014485598	WITHOUT_CLASSIFICATION	3.9855144021229347E-7	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999991894509138	WITHOUT_CLASSIFICATION	8.105490862605447E-7	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999997305101747	WITHOUT_CLASSIFICATION	2.694898253515416E-7	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999896284715949	WITHOUT_CLASSIFICATION	1.0371528404991537E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999952963202133	WITHOUT_CLASSIFICATION	4.703679786612521E-6	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999980102680692	WITHOUT_CLASSIFICATION	1.9897319307248334E-6	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999967977436818	WITHOUT_CLASSIFICATION	3.2022563183428886E-6	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999984867716853	WITHOUT_CLASSIFICATION	1.5132283146688542E-6	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999968542430231	WITHOUT_CLASSIFICATION	3.1457569768697434E-6	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999973168794944	WITHOUT_CLASSIFICATION	2.6831205056403463E-6	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999831739377355	WITHOUT_CLASSIFICATION	1.6826062264506954E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.999963577431895	WITHOUT_CLASSIFICATION	3.642256810500926E-5	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9998715235465271	WITHOUT_CLASSIFICATION	1.28476453472866E-4	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999818291149157	WITHOUT_CLASSIFICATION	1.8170885084202937E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9997992135447237	WITHOUT_CLASSIFICATION	2.0078645527636665E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999996129481828	WITHOUT_CLASSIFICATION	3.8705181703230334E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999741223410226	WITHOUT_CLASSIFICATION	2.5877658977470268E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958287494888	WITHOUT_CLASSIFICATION	4.1712505112307436E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999923529734214	WITHOUT_CLASSIFICATION	7.647026578601426E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999935323237933	WITHOUT_CLASSIFICATION	6.467676206758437E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999921485767823	WITHOUT_CLASSIFICATION	7.851423217668874E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999940223166941	WITHOUT_CLASSIFICATION	5.977683305883227E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999998007895808	WITHOUT_CLASSIFICATION	1.9921041920351543E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999922016818327	WITHOUT_CLASSIFICATION	7.798318167368076E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999652175716905	WITHOUT_CLASSIFICATION	3.4782428309578356E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999991475745187	WITHOUT_CLASSIFICATION	8.524254812552214E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999974917216253	WITHOUT_CLASSIFICATION	2.508278374613725E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999747392865647	WITHOUT_CLASSIFICATION	2.526071343532402E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999985352105754	WITHOUT_CLASSIFICATION	1.4647894246566662E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999967902509515	WITHOUT_CLASSIFICATION	3.2097490485137814E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999963303415694	WITHOUT_CLASSIFICATION	3.669658430522062E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999997226171669	WITHOUT_CLASSIFICATION	2.773828331673968E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999997287101876	WITHOUT_CLASSIFICATION	2.7128981244340073E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999983481186029	WITHOUT_CLASSIFICATION	1.6518813971985348E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999998444539492	WITHOUT_CLASSIFICATION	1.5554605090067203E-7	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9998105238112761	WITHOUT_CLASSIFICATION	1.8947618872394207E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9996381070139638	WITHOUT_CLASSIFICATION	3.618929860361438E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9998338718756666	WITHOUT_CLASSIFICATION	1.6612812433333405E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999038103582433	WITHOUT_CLASSIFICATION	9.618964175672607E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999038103582433	WITHOUT_CLASSIFICATION	9.618964175672607E-5	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9997597418217898	WITHOUT_CLASSIFICATION	2.402581782101646E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999037074302125	WITHOUT_CLASSIFICATION	9.629256978748672E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999939737157744	WITHOUT_CLASSIFICATION	6.026284225668237E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999916791126607	WITHOUT_CLASSIFICATION	8.320887339256809E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999916791126607	WITHOUT_CLASSIFICATION	8.320887339256809E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999916791126607	WITHOUT_CLASSIFICATION	8.320887339256809E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999936261514949	WITHOUT_CLASSIFICATION	6.373848505138077E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999699158445	WITHOUT_CLASSIFICATION	3.0084155489072525E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999967414742686	WITHOUT_CLASSIFICATION	3.2585257314680624E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995975042744	WITHOUT_CLASSIFICATION	4.024957256596449E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999986918978489	WITHOUT_CLASSIFICATION	1.3081021511024562E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999946769627697	WITHOUT_CLASSIFICATION	5.323037230284499E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999987837733042	WITHOUT_CLASSIFICATION	1.2162266958026826E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977221532603	WITHOUT_CLASSIFICATION	2.2778467396102164E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999994914656819	WITHOUT_CLASSIFICATION	5.085343181673669E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999678735363005	WITHOUT_CLASSIFICATION	3.2126463699642015E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999996129481828	WITHOUT_CLASSIFICATION	3.8705181703230334E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999741223410226	WITHOUT_CLASSIFICATION	2.5877658977470268E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958287494888	WITHOUT_CLASSIFICATION	4.1712505112307436E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999923529734214	WITHOUT_CLASSIFICATION	7.647026578601426E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999998007895808	WITHOUT_CLASSIFICATION	1.9921041920351543E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999974917216253	WITHOUT_CLASSIFICATION	2.508278374613725E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999747392865647	WITHOUT_CLASSIFICATION	2.526071343532402E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999985352105754	WITHOUT_CLASSIFICATION	1.4647894246566662E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999998099715347	WITHOUT_CLASSIFICATION	1.9002846519486248E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999995736796832	WITHOUT_CLASSIFICATION	4.2632031684517324E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999953152919672	WITHOUT_CLASSIFICATION	4.684708032799382E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999993874391877	WITHOUT_CLASSIFICATION	6.125608122395186E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999731817176661	WITHOUT_CLASSIFICATION	2.6818282333891458E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999890015360744	WITHOUT_CLASSIFICATION	1.0998463925747408E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999953045019903	WITHOUT_CLASSIFICATION	4.6954980097122235E-6	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999994697069883	WITHOUT_CLASSIFICATION	5.30293011776848E-7	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9997399678200426	WITHOUT_CLASSIFICATION	2.600321799573855E-4	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.999599629149273	WITHOUT_CLASSIFICATION	4.0037085072705173E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9999830229993623	WITHOUT_CLASSIFICATION	1.697700063772985E-5	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999856392106343	WITHOUT_CLASSIFICATION	1.4360789365732202E-5	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999979005219879	WITHOUT_CLASSIFICATION	2.099478012104034E-6	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.99999756931759	WITHOUT_CLASSIFICATION	2.4306824099815938E-6	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9996532477745894	WITHOUT_CLASSIFICATION	3.467522254106467E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9996757901883437	WITHOUT_CLASSIFICATION	3.2420981165619245E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9992784961597818	WITHOUT_CLASSIFICATION	7.215038402181555E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9996165302871907	WITHOUT_CLASSIFICATION	3.8346971280942504E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9997173299366084	WITHOUT_CLASSIFICATION	2.8267006339153383E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999998132219626	WITHOUT_CLASSIFICATION	1.867780374012761E-7	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999998789160056	WITHOUT_CLASSIFICATION	1.210839944673357E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999991475745187	WITHOUT_CLASSIFICATION	8.524254812552214E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999997226171669	WITHOUT_CLASSIFICATION	2.773828331673968E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999997287101876	WITHOUT_CLASSIFICATION	2.7128981244340073E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999983481186029	WITHOUT_CLASSIFICATION	1.6518813971985348E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999995736796832	WITHOUT_CLASSIFICATION	4.2632031684517324E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999953152919672	WITHOUT_CLASSIFICATION	4.684708032799382E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999993874391877	WITHOUT_CLASSIFICATION	6.125608122395186E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999731817176661	WITHOUT_CLASSIFICATION	2.6818282333891458E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999890015360744	WITHOUT_CLASSIFICATION	1.0998463925747408E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999974465337361	WITHOUT_CLASSIFICATION	2.553466263812773E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999993390249966	WITHOUT_CLASSIFICATION	6.609750033980935E-7	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999998818519382	WITHOUT_CLASSIFICATION	1.1814806169077833E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999961001605112	WITHOUT_CLASSIFICATION	3.899839488700538E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999961001605112	WITHOUT_CLASSIFICATION	3.899839488700538E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999961001605112	WITHOUT_CLASSIFICATION	3.899839488700538E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999961001605112	WITHOUT_CLASSIFICATION	3.899839488700538E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999961001605112	WITHOUT_CLASSIFICATION	3.899839488700538E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999963426352574	WITHOUT_CLASSIFICATION	3.6573647425948002E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992120373099	WITHOUT_CLASSIFICATION	7.879626902255447E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992120373099	WITHOUT_CLASSIFICATION	7.879626902255447E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992120373099	WITHOUT_CLASSIFICATION	7.879626902255447E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992120373099	WITHOUT_CLASSIFICATION	7.879626902255447E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992120373099	WITHOUT_CLASSIFICATION	7.879626902255447E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992120373099	WITHOUT_CLASSIFICATION	7.879626902255447E-7	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999935641429252	WITHOUT_CLASSIFICATION	6.435857074871213E-6	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999956208673582	WITHOUT_CLASSIFICATION	4.379132641921383E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999916474911231	WITHOUT_CLASSIFICATION	8.352508876919661E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999994289946106	WITHOUT_CLASSIFICATION	5.710053893427908E-7	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999990316703501	WITHOUT_CLASSIFICATION	9.683296499063727E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999962088994395	WITHOUT_CLASSIFICATION	3.7911005603934446E-6	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999997002613156	WITHOUT_CLASSIFICATION	2.997386844273243E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999969386319766	WITHOUT_CLASSIFICATION	3.0613680233501606E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999969386319766	WITHOUT_CLASSIFICATION	3.0613680233501606E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999969386319766	WITHOUT_CLASSIFICATION	3.0613680233501606E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999640072567978	WITHOUT_CLASSIFICATION	3.599274320210337E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999620916609702	WITHOUT_CLASSIFICATION	3.7908339029950974E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999999557076563	WITHOUT_CLASSIFICATION	4.4292343709992424E-8	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999966556637412	WITHOUT_CLASSIFICATION	3.3443362588388632E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999966556637412	WITHOUT_CLASSIFICATION	3.3443362588388632E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999486323444496	WITHOUT_CLASSIFICATION	5.136765555045418E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999966556637412	WITHOUT_CLASSIFICATION	3.3443362588388632E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999990322855807	WITHOUT_CLASSIFICATION	9.677144192769967E-7	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999970651046266	WITHOUT_CLASSIFICATION	2.9348953733832368E-6	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999985895690767	WITHOUT_CLASSIFICATION	1.4104309233034569E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999975641153445	WITHOUT_CLASSIFICATION	2.435884655618837E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999975641153445	WITHOUT_CLASSIFICATION	2.435884655618837E-6	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999987691846797	WITHOUT_CLASSIFICATION	1.230815320335097E-6	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999961507476213	WITHOUT_CLASSIFICATION	3.849252378751319E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999613618672489	WITHOUT_CLASSIFICATION	3.863813275113306E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999613618672489	WITHOUT_CLASSIFICATION	3.863813275113306E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999613618672489	WITHOUT_CLASSIFICATION	3.863813275113306E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9999994980657844	WITHOUT_CLASSIFICATION	5.019342156011694E-7	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9739086275131886	WITHOUT_CLASSIFICATION	0.0260913724868113	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999998758340131	WITHOUT_CLASSIFICATION	1.2416598696115857E-7	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999911416570448	WITHOUT_CLASSIFICATION	8.85834295517135E-6	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999858796715172	WITHOUT_CLASSIFICATION	1.4120328482689302E-5	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999999227842307	WITHOUT_CLASSIFICATION	7.721576935678946E-8	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.999993138766652	WITHOUT_CLASSIFICATION	6.861233348100101E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999963814700341	WITHOUT_CLASSIFICATION	3.618529965928906E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.999993138766652	WITHOUT_CLASSIFICATION	6.861233348100101E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999936261514949	WITHOUT_CLASSIFICATION	6.373848505138077E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999916791126607	WITHOUT_CLASSIFICATION	8.320887339256809E-6	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999823030714	WITHOUT_CLASSIFICATION	1.7696928604520337E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999999369199691	WITHOUT_CLASSIFICATION	6.308003090892236E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999940692916257	WITHOUT_CLASSIFICATION	5.930708374231652E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999995683239471	WITHOUT_CLASSIFICATION	4.316760530154887E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999936261514949	WITHOUT_CLASSIFICATION	6.373848505138077E-6	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999999977460404	WITHOUT_CLASSIFICATION	2.2539596039671697E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998928730797	WITHOUT_CLASSIFICATION	1.0712692030179008E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999985525857306	WITHOUT_CLASSIFICATION	1.447414269384171E-6	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999997038236191	WITHOUT_CLASSIFICATION	2.9617638075824764E-7	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.999983326142993	WITHOUT_CLASSIFICATION	1.6673857006956243E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.999983326142993	WITHOUT_CLASSIFICATION	1.6673857006956243E-5	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999607908023271	WITHOUT_CLASSIFICATION	3.9209197672779434E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999973929840806	WITHOUT_CLASSIFICATION	2.607015919396124E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999951171366203	WITHOUT_CLASSIFICATION	4.882863379782079E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999920150428561	WITHOUT_CLASSIFICATION	7.984957143985894E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999979847611817	WITHOUT_CLASSIFICATION	2.0152388183726477E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999977365696067	WITHOUT_CLASSIFICATION	2.263430393219755E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.999999182234922	WITHOUT_CLASSIFICATION	8.177650780881489E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999697475088	WITHOUT_CLASSIFICATION	3.025249120001385E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999773659972552	WITHOUT_CLASSIFICATION	2.263400274481264E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.999733998625247	WITHOUT_CLASSIFICATION	2.66001374752935E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999746509339471	WITHOUT_CLASSIFICATION	2.534906605287225E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9997197708325208	WITHOUT_CLASSIFICATION	2.8022916747913023E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999984429860039	WITHOUT_CLASSIFICATION	1.5570139961155239E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9996872460055621	WITHOUT_CLASSIFICATION	3.127539944378214E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.999973700625257	WITHOUT_CLASSIFICATION	2.629937474295371E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999994839800843	WITHOUT_CLASSIFICATION	5.160199157661057E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999989102755936	WITHOUT_CLASSIFICATION	1.0897244063694276E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999915755824577	WITHOUT_CLASSIFICATION	8.424417542219903E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999942826618626	WITHOUT_CLASSIFICATION	5.717338137336782E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999784597865677	WITHOUT_CLASSIFICATION	2.1540213432272287E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999951325815066	WITHOUT_CLASSIFICATION	4.867418493382508E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999947870755929	WITHOUT_CLASSIFICATION	5.212924407155181E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999994839800843	WITHOUT_CLASSIFICATION	5.160199157661057E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.999996448320456	WITHOUT_CLASSIFICATION	3.551679544003109E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999994819576448	WITHOUT_CLASSIFICATION	5.180423551798315E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999947666446487	WITHOUT_CLASSIFICATION	5.233355351285332E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999926169727366	WITHOUT_CLASSIFICATION	7.383027263506509E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999989478219687	WITHOUT_CLASSIFICATION	1.0521780312593292E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.999997235452031	WITHOUT_CLASSIFICATION	2.764547968991595E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999951289711059	WITHOUT_CLASSIFICATION	4.87102889414805E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999953997112936	WITHOUT_CLASSIFICATION	4.600288706395942E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999995994678333	WITHOUT_CLASSIFICATION	4.0053216676684346E-7	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999978396305422	WITHOUT_CLASSIFICATION	2.1603694577299795E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999978396305422	WITHOUT_CLASSIFICATION	2.1603694577299795E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999951325815066	WITHOUT_CLASSIFICATION	4.867418493382508E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999996508034186	WITHOUT_CLASSIFICATION	3.4919658139708043E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.999999792247681	WITHOUT_CLASSIFICATION	2.0775231894090101E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999994261479582	WITHOUT_CLASSIFICATION	5.738520418295139E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999992810390518	WITHOUT_CLASSIFICATION	7.189609482637616E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999150525327496	WITHOUT_CLASSIFICATION	8.494746725037606E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999920828330535	WITHOUT_CLASSIFICATION	7.917166946464833E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999789307806403	WITHOUT_CLASSIFICATION	2.1069219359761923E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999961579921751	WITHOUT_CLASSIFICATION	3.842007824824124E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998113596139345	WITHOUT_CLASSIFICATION	1.8864038606546354E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999805736995804	WITHOUT_CLASSIFICATION	1.9426300419571327E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.999998534725137	WITHOUT_CLASSIFICATION	1.4652748629183765E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999862120723028	WITHOUT_CLASSIFICATION	1.3787927697347248E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998614522494245	WITHOUT_CLASSIFICATION	1.3854775057549443E-4	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999997270446496	WITHOUT_CLASSIFICATION	2.729553505095195E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999987837733042	WITHOUT_CLASSIFICATION	1.2162266958026826E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999998109420551	WITHOUT_CLASSIFICATION	1.8905794489596382E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999989604464841	WITHOUT_CLASSIFICATION	1.03955351599327E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999769836207953	WITHOUT_CLASSIFICATION	2.301637920457878E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998109067055361	WITHOUT_CLASSIFICATION	1.8909329446403805E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999998109420551	WITHOUT_CLASSIFICATION	1.8905794489596382E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999953828816679	WITHOUT_CLASSIFICATION	4.617118332092573E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999994151826825	WITHOUT_CLASSIFICATION	5.848173173879469E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.99999862297003	WITHOUT_CLASSIFICATION	1.3770299700358858E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999959029781835	WITHOUT_CLASSIFICATION	4.097021816533713E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999939581700066	WITHOUT_CLASSIFICATION	6.041829993335074E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.99991816833039	WITHOUT_CLASSIFICATION	8.183166960999145E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.99991816833039	WITHOUT_CLASSIFICATION	8.183166960999145E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.99991816833039	WITHOUT_CLASSIFICATION	8.183166960999145E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.99991816833039	WITHOUT_CLASSIFICATION	8.183166960999145E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.99991816833039	WITHOUT_CLASSIFICATION	8.183166960999145E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.99991816833039	WITHOUT_CLASSIFICATION	8.183166960999145E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999853210356704	WITHOUT_CLASSIFICATION	1.4678964329654031E-5	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999922720501644	WITHOUT_CLASSIFICATION	7.727949835596185E-6	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999970590975908	WITHOUT_CLASSIFICATION	2.940902409197834E-6	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.999996635472202	WITHOUT_CLASSIFICATION	3.364527798030028E-6	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999994686482739	WITHOUT_CLASSIFICATION	5.313517260713692E-7	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999497420594712	WITHOUT_CLASSIFICATION	5.025794052894141E-5	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999994170784882	WITHOUT_CLASSIFICATION	5.8292151171544E-7	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.999986576761559	WITHOUT_CLASSIFICATION	1.3423238440964852E-5	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9971547670660263	WITHOUT_CLASSIFICATION	0.002845232933973709	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999617386302332	WITHOUT_CLASSIFICATION	3.8261369766897784E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999997621871851	WITHOUT_CLASSIFICATION	2.378128148978572E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999997868952408	WITHOUT_CLASSIFICATION	2.1310475906109035E-7	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999998536552119	WITHOUT_CLASSIFICATION	1.4634478809106462E-7	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999943699707733	WITHOUT_CLASSIFICATION	5.630029226796969E-6	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999984898595201	WITHOUT_CLASSIFICATION	1.5101404799069814E-6	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999855680786846	WITHOUT_CLASSIFICATION	1.443192131549915E-5	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999966212719752	WITHOUT_CLASSIFICATION	3.3787280248357343E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999990620568306	WITHOUT_CLASSIFICATION	9.379431694142072E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999990620568306	WITHOUT_CLASSIFICATION	9.379431694142072E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999990620568306	WITHOUT_CLASSIFICATION	9.379431694142072E-7	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.999992958565543	WITHOUT_CLASSIFICATION	7.041434456987892E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999990649197401	WITHOUT_CLASSIFICATION	9.350802598046228E-7	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999981750522022	WITHOUT_CLASSIFICATION	1.8249477977157909E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999699158445	WITHOUT_CLASSIFICATION	3.0084155489072525E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999699158445	WITHOUT_CLASSIFICATION	3.0084155489072525E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999699158445	WITHOUT_CLASSIFICATION	3.0084155489072525E-7	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9962540384261945	WITHOUT_CLASSIFICATION	0.0037459615738055733	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999967414742686	WITHOUT_CLASSIFICATION	3.2585257314680624E-6	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999986038186138	WITHOUT_CLASSIFICATION	1.3961813862035514E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995975042744	WITHOUT_CLASSIFICATION	4.024957256596449E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995975042744	WITHOUT_CLASSIFICATION	4.024957256596449E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999992254384495	WITHOUT_CLASSIFICATION	7.745615504998668E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999986918978489	WITHOUT_CLASSIFICATION	1.3081021511024562E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999986918978489	WITHOUT_CLASSIFICATION	1.3081021511024562E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999986918978489	WITHOUT_CLASSIFICATION	1.3081021511024562E-5	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999999660063903	WITHOUT_CLASSIFICATION	3.399360978270787E-8	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999992930955737	WITHOUT_CLASSIFICATION	7.069044263261997E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999995903389912	WITHOUT_CLASSIFICATION	4.096610087820329E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.999993138766652	WITHOUT_CLASSIFICATION	6.861233348100101E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.999993138766652	WITHOUT_CLASSIFICATION	6.861233348100101E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999931990360931	WITHOUT_CLASSIFICATION	6.800963906966587E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999946769627697	WITHOUT_CLASSIFICATION	5.323037230284499E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999946769627697	WITHOUT_CLASSIFICATION	5.323037230284499E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999937596132726	WITHOUT_CLASSIFICATION	6.240386727404026E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999996129481828	WITHOUT_CLASSIFICATION	3.8705181703230334E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999996129481828	WITHOUT_CLASSIFICATION	3.8705181703230334E-7	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9999923947885543	WITHOUT_CLASSIFICATION	7.605211445834358E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999741223410226	WITHOUT_CLASSIFICATION	2.5877658977470268E-5	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999987467953975	WITHOUT_CLASSIFICATION	1.2532046025049012E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958287494888	WITHOUT_CLASSIFICATION	4.1712505112307436E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999997769172042	WITHOUT_CLASSIFICATION	2.2308279571749306E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.999993138766652	WITHOUT_CLASSIFICATION	6.861233348100101E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999916791126607	WITHOUT_CLASSIFICATION	8.320887339256809E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999940223166941	WITHOUT_CLASSIFICATION	5.977683305883227E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999940223166941	WITHOUT_CLASSIFICATION	5.977683305883227E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999940223166941	WITHOUT_CLASSIFICATION	5.977683305883227E-6	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999831356955852	WITHOUT_CLASSIFICATION	1.6864304414824308E-5	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999994953755622	WITHOUT_CLASSIFICATION	5.046244378792071E-7	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999978107777818	WITHOUT_CLASSIFICATION	2.189222218176739E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999969856996948	WITHOUT_CLASSIFICATION	3.014300305349461E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999969856996948	WITHOUT_CLASSIFICATION	3.014300305349461E-6	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999995004254242	WITHOUT_CLASSIFICATION	4.995745758543854E-7	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999224664644641	WITHOUT_CLASSIFICATION	7.753353553585121E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999461387897867	WITHOUT_CLASSIFICATION	5.386121021329052E-5	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999998231859064	WITHOUT_CLASSIFICATION	1.7681409351651617E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999977516685958	WITHOUT_CLASSIFICATION	2.248331404181986E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999977516685958	WITHOUT_CLASSIFICATION	2.248331404181986E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.999980386200299	WITHOUT_CLASSIFICATION	1.961379970095997E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.999980386200299	WITHOUT_CLASSIFICATION	1.961379970095997E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.999998842185778	WITHOUT_CLASSIFICATION	1.1578142220665815E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999943507249213	WITHOUT_CLASSIFICATION	5.649275078724412E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999737227017242	WITHOUT_CLASSIFICATION	2.6277298275694538E-5	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999998381018858	WITHOUT_CLASSIFICATION	1.618981142321416E-7	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999993140329583	WITHOUT_CLASSIFICATION	6.859670417670213E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999725464329188	WITHOUT_CLASSIFICATION	2.7453567081154973E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999725464329188	WITHOUT_CLASSIFICATION	2.7453567081154973E-5	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9999930619737363	WITHOUT_CLASSIFICATION	6.93802626364811E-6	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999167917379	WITHOUT_CLASSIFICATION	8.320826205091299E-8	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999998442898346	WITHOUT_CLASSIFICATION	1.5571016547743396E-7	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999682433732751	WITHOUT_CLASSIFICATION	3.175662672496383E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999962931603723	WITHOUT_CLASSIFICATION	3.7068396276462206E-6	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999995696441356	WITHOUT_CLASSIFICATION	4.3035586444436315E-7	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9999941322690817	WITHOUT_CLASSIFICATION	5.867730918358026E-6	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999970860232945	WITHOUT_CLASSIFICATION	2.913976705542475E-6	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9999972791484589	WITHOUT_CLASSIFICATION	2.720851541179911E-6	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999914408415489	WITHOUT_CLASSIFICATION	8.55915845116336E-6	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999998808853521	WITHOUT_CLASSIFICATION	1.1911464784445137E-7	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999961827161	WITHOUT_CLASSIFICATION	3.81728400061985E-9	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9999992743646262	WITHOUT_CLASSIFICATION	7.256353737868268E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999893338358379	WITHOUT_CLASSIFICATION	1.066616416215204E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999893338358379	WITHOUT_CLASSIFICATION	1.066616416215204E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999893338358379	WITHOUT_CLASSIFICATION	1.066616416215204E-5	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999869792210915	WITHOUT_CLASSIFICATION	1.3020778908494863E-5	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999988076934024	WITHOUT_CLASSIFICATION	1.1923065975210484E-6	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999990364959642	WITHOUT_CLASSIFICATION	9.635040358190926E-7	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.99997077834367	WITHOUT_CLASSIFICATION	2.92216563299746E-5	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999828330892632	WITHOUT_CLASSIFICATION	1.7166910736885034E-5	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999708370577443	WITHOUT_CLASSIFICATION	2.916294225575059E-5	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999708370577443	WITHOUT_CLASSIFICATION	2.916294225575059E-5	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999952207866422	WITHOUT_CLASSIFICATION	4.779213357815805E-6	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9999861084398122	WITHOUT_CLASSIFICATION	1.3891560187800857E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.999974170510281	WITHOUT_CLASSIFICATION	2.5829489718993604E-5	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999987348506867	WITHOUT_CLASSIFICATION	1.2651493132702243E-6	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999946434630292	WITHOUT_CLASSIFICATION	5.356536970719797E-6	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999097837238202	WITHOUT_CLASSIFICATION	9.02162761798062E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999995258408768	WITHOUT_CLASSIFICATION	4.7415912320344175E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999939174430266	WITHOUT_CLASSIFICATION	6.082556973457175E-6	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999970728674749	WITHOUT_CLASSIFICATION	2.9271325251060058E-6	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999999387918282	WITHOUT_CLASSIFICATION	6.120817171482017E-8	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999309331034374	WITHOUT_CLASSIFICATION	6.906689656257195E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999895539377041	WITHOUT_CLASSIFICATION	1.0446062295808179E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9996920831314519	WITHOUT_CLASSIFICATION	3.079168685481495E-4	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9999489577067586	WITHOUT_CLASSIFICATION	5.104229324147075E-5	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999994629176175	WITHOUT_CLASSIFICATION	5.370823824118374E-7	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999926948915351	WITHOUT_CLASSIFICATION	7.305108464893813E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999928627277072	WITHOUT_CLASSIFICATION	7.1372722929394986E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999945117571821	WITHOUT_CLASSIFICATION	5.4882428179294425E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999787161069731	WITHOUT_CLASSIFICATION	2.1283893026948626E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999787161069731	WITHOUT_CLASSIFICATION	2.1283893026948626E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999787161069731	WITHOUT_CLASSIFICATION	2.1283893026948626E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999787161069731	WITHOUT_CLASSIFICATION	2.1283893026948626E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999955963140116	WITHOUT_CLASSIFICATION	4.403685988438961E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999986122203511	WITHOUT_CLASSIFICATION	1.387779648810946E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999986122203511	WITHOUT_CLASSIFICATION	1.387779648810946E-6	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999990786378942	WITHOUT_CLASSIFICATION	9.213621057213252E-7	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999986516384507	WITHOUT_CLASSIFICATION	1.3483615492411842E-6	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.999998447990332	WITHOUT_CLASSIFICATION	1.552009668003758E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999992720740912	WITHOUT_CLASSIFICATION	7.279259087722965E-7	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999969692014139	WITHOUT_CLASSIFICATION	3.0307985860538866E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999940207291849	WITHOUT_CLASSIFICATION	5.9792708152245935E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999567908673727	WITHOUT_CLASSIFICATION	4.320913262733056E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999945345749451	WITHOUT_CLASSIFICATION	5.465425054855575E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999945345749451	WITHOUT_CLASSIFICATION	5.465425054855575E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999945345749451	WITHOUT_CLASSIFICATION	5.465425054855575E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999991344324063	WITHOUT_CLASSIFICATION	8.655675936555971E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999997579232409	WITHOUT_CLASSIFICATION	2.420767590998718E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9999943087386598	WITHOUT_CLASSIFICATION	5.691261340155617E-6	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999968006365375	WITHOUT_CLASSIFICATION	3.199363462508189E-6	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999968006365375	WITHOUT_CLASSIFICATION	3.199363462508189E-6	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999993429227865	WITHOUT_CLASSIFICATION	6.570772134736577E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999949149486357	WITHOUT_CLASSIFICATION	5.085051364359994E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999986207452154	WITHOUT_CLASSIFICATION	1.3792547845448537E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999999635025295	WITHOUT_CLASSIFICATION	3.6497470496774926E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9992871270690179	WITHOUT_CLASSIFICATION	7.128729309821233E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999973926235107	WITHOUT_CLASSIFICATION	2.6073764893642313E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999968525691557	WITHOUT_CLASSIFICATION	3.1474308442908023E-6	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999985891217579	WITHOUT_CLASSIFICATION	1.410878242088219E-6	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999991476581945	WITHOUT_CLASSIFICATION	8.52341805440081E-7	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999992790701249	WITHOUT_CLASSIFICATION	7.209298751426864E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999993168192763	WITHOUT_CLASSIFICATION	6.831807235746847E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999875326412588	WITHOUT_CLASSIFICATION	1.2467358741206097E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999875326412588	WITHOUT_CLASSIFICATION	1.2467358741206097E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999583547075488	WITHOUT_CLASSIFICATION	4.16452924512023E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997386656369585	WITHOUT_CLASSIFICATION	2.613343630415832E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997386656369585	WITHOUT_CLASSIFICATION	2.613343630415832E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999973856078077	WITHOUT_CLASSIFICATION	2.6143921923000062E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999951604363728	WITHOUT_CLASSIFICATION	4.839563627172918E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999951604363728	WITHOUT_CLASSIFICATION	4.839563627172918E-6	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999887778942336	WITHOUT_CLASSIFICATION	1.1222105766497904E-5	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999993514305917	WITHOUT_CLASSIFICATION	6.485694083023099E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9999958396889161	WITHOUT_CLASSIFICATION	4.1603110838278174E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999922016818327	WITHOUT_CLASSIFICATION	7.798318167368076E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999922016818327	WITHOUT_CLASSIFICATION	7.798318167368076E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999878542903472	WITHOUT_CLASSIFICATION	1.2145709652850247E-5	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999999713579608	WITHOUT_CLASSIFICATION	2.864203920809792E-8	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9999969375132529	WITHOUT_CLASSIFICATION	3.062486747105318E-6	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.996797300680236	WITHOUT_CLASSIFICATION	0.003202699319764085	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9997893069220609	WITHOUT_CLASSIFICATION	2.1069307793917578E-4	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9997893069220609	WITHOUT_CLASSIFICATION	2.1069307793917578E-4	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9999257561929165	WITHOUT_CLASSIFICATION	7.424380708347624E-5	DEFECT
// is this an error???	DEFECT	0.9999772557674138	WITHOUT_CLASSIFICATION	2.274423258622124E-5	DEFECT
// is this an error???	DEFECT	0.9999772557674138	WITHOUT_CLASSIFICATION	2.274423258622124E-5	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9999716915633885	WITHOUT_CLASSIFICATION	2.830843661152557E-5	DEFECT
