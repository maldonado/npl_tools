// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999994800093954	WITHOUT_CLASSIFICATION	5.19990604646868E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999968439493919	WITHOUT_CLASSIFICATION	3.156050607985509E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999998488463817	WITHOUT_CLASSIFICATION	1.5115361827341127E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999987803660177	WITHOUT_CLASSIFICATION	1.2196339822637112E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.999999430944908	WITHOUT_CLASSIFICATION	5.6905509197644E-7	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999898191951	WITHOUT_CLASSIFICATION	1.0180804791996003E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999946134486242	WITHOUT_CLASSIFICATION	5.386551375814321E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999992177042477	WITHOUT_CLASSIFICATION	7.822957523189204E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999997433576077	WITHOUT_CLASSIFICATION	2.5664239242380753E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999980486786354	WITHOUT_CLASSIFICATION	1.9513213646123424E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.999999075194846	WITHOUT_CLASSIFICATION	9.248051539609521E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999969946014817	WITHOUT_CLASSIFICATION	3.005398518408496E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999971202340636	WITHOUT_CLASSIFICATION	2.87976593625181E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997226009633	WITHOUT_CLASSIFICATION	2.773990367457173E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999945471267631	WITHOUT_CLASSIFICATION	5.4528732369294025E-6	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999984233634062	WITHOUT_CLASSIFICATION	1.5766365938533458E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999987109748811	WITHOUT_CLASSIFICATION	1.2890251189657873E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999946134486242	WITHOUT_CLASSIFICATION	5.386551375814321E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999999056360739	WITHOUT_CLASSIFICATION	9.436392618237564E-8	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999991259094082	WITHOUT_CLASSIFICATION	8.740905917211967E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999999201861703	WITHOUT_CLASSIFICATION	7.98138296762468E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999929764530808	WITHOUT_CLASSIFICATION	7.023546919166847E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999929764530808	WITHOUT_CLASSIFICATION	7.023546919166847E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999988985182683	WITHOUT_CLASSIFICATION	1.1014817317434851E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999990068405257	WITHOUT_CLASSIFICATION	9.931594743496717E-7	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999929353925342	WITHOUT_CLASSIFICATION	7.064607465918622E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999919771316873	WITHOUT_CLASSIFICATION	8.022868312660693E-6	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.999996247908193	WITHOUT_CLASSIFICATION	3.7520918070440085E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999956438663514	WITHOUT_CLASSIFICATION	4.356133648641312E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999944023745226	WITHOUT_CLASSIFICATION	5.5976254773614065E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999999430178561	WITHOUT_CLASSIFICATION	5.698214390476191E-7	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999873658988859	WITHOUT_CLASSIFICATION	1.263410111405602E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9996199461492757	WITHOUT_CLASSIFICATION	3.800538507242624E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999995570763571	WITHOUT_CLASSIFICATION	4.4292364285772486E-7	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999913807422693	WITHOUT_CLASSIFICATION	8.619257730621097E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999987134301151	WITHOUT_CLASSIFICATION	1.2865698848857489E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999983500143795	WITHOUT_CLASSIFICATION	1.6499856204449661E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999998072521145	WITHOUT_CLASSIFICATION	1.9274788552760153E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999949753445113	WITHOUT_CLASSIFICATION	5.024655488786941E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999994350064826	WITHOUT_CLASSIFICATION	5.649935174228911E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999998722706677	WITHOUT_CLASSIFICATION	1.2772933242192205E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999663490712732	WITHOUT_CLASSIFICATION	3.365092872679569E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999990951404619	WITHOUT_CLASSIFICATION	9.04859538066478E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999996653722927	WITHOUT_CLASSIFICATION	3.3462770741619463E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999954125563604	WITHOUT_CLASSIFICATION	4.587443639696344E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999953329121416	WITHOUT_CLASSIFICATION	4.667087858377978E-6	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997674714038494	WITHOUT_CLASSIFICATION	2.3252859615067165E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999624640597816	WITHOUT_CLASSIFICATION	3.753594021835234E-5	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9994776312852085	WITHOUT_CLASSIFICATION	5.223687147915331E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9999142988651546	WITHOUT_CLASSIFICATION	8.57011348454975E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999995954506099	WITHOUT_CLASSIFICATION	4.0454939009215265E-7	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997674714038494	WITHOUT_CLASSIFICATION	2.3252859615067165E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.999859834201586	WITHOUT_CLASSIFICATION	1.4016579841405892E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9998094015791283	WITHOUT_CLASSIFICATION	1.9059842087173774E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9994025280072584	WITHOUT_CLASSIFICATION	5.974719927415977E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999366994295151	WITHOUT_CLASSIFICATION	6.330057048490294E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9998233265508462	WITHOUT_CLASSIFICATION	1.7667344915381993E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999626594829665	WITHOUT_CLASSIFICATION	3.734051703354286E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999980132006083	WITHOUT_CLASSIFICATION	1.9867993915621175E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999994805937835	WITHOUT_CLASSIFICATION	5.194062164551617E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999372096008	WITHOUT_CLASSIFICATION	6.279039920109021E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997993761	WITHOUT_CLASSIFICATION	2.00623900158251E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999686447095761	WITHOUT_CLASSIFICATION	3.1355290423871774E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999986332106269	WITHOUT_CLASSIFICATION	1.3667893730963415E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999961879604837	WITHOUT_CLASSIFICATION	3.8120395163267183E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999984984330342	WITHOUT_CLASSIFICATION	1.5015669657516256E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999947233011006	WITHOUT_CLASSIFICATION	5.276698899389853E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999993723923485	WITHOUT_CLASSIFICATION	6.276076515645166E-7	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9998468866972361	WITHOUT_CLASSIFICATION	1.5311330276398787E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999943075087079	WITHOUT_CLASSIFICATION	5.6924912921217545E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.999632943770131	WITHOUT_CLASSIFICATION	3.670562298690387E-4	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.999889943713432	WITHOUT_CLASSIFICATION	1.1005628656804606E-4	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999991613712758	WITHOUT_CLASSIFICATION	8.386287243261836E-7	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9999930979342618	WITHOUT_CLASSIFICATION	6.902065738280937E-6	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9999972334913351	WITHOUT_CLASSIFICATION	2.7665086649550324E-6	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.999997121310727	WITHOUT_CLASSIFICATION	2.8786892729986774E-6	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999985428724787	WITHOUT_CLASSIFICATION	1.4571275212500553E-6	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9998880120662635	WITHOUT_CLASSIFICATION	1.1198793373645613E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9974708017635946	WITHOUT_CLASSIFICATION	0.0025291982364055287	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999969946014817	WITHOUT_CLASSIFICATION	3.005398518408496E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999971202340636	WITHOUT_CLASSIFICATION	2.87976593625181E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997226009633	WITHOUT_CLASSIFICATION	2.773990367457173E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999975136616968	WITHOUT_CLASSIFICATION	2.4863383032456874E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999986561931028	WITHOUT_CLASSIFICATION	1.343806897225329E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999945471267631	WITHOUT_CLASSIFICATION	5.4528732369294025E-6	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999984233634062	WITHOUT_CLASSIFICATION	1.5766365938533458E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999987109748811	WITHOUT_CLASSIFICATION	1.2890251189657873E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9998306778350995	WITHOUT_CLASSIFICATION	1.6932216490040335E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9998306778350995	WITHOUT_CLASSIFICATION	1.6932216490040335E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9998306778350995	WITHOUT_CLASSIFICATION	1.6932216490040335E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999898191951	WITHOUT_CLASSIFICATION	1.0180804791996003E-8	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999994572733043	WITHOUT_CLASSIFICATION	5.427266956683962E-7	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999998295837028	WITHOUT_CLASSIFICATION	1.7041629722012983E-7	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999999089066324	WITHOUT_CLASSIFICATION	9.10933676133292E-8	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999999201861703	WITHOUT_CLASSIFICATION	7.98138296762468E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999988956803825	WITHOUT_CLASSIFICATION	1.1043196175141571E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999944023745226	WITHOUT_CLASSIFICATION	5.5976254773614065E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999999430178561	WITHOUT_CLASSIFICATION	5.698214390476191E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9996199461492757	WITHOUT_CLASSIFICATION	3.800538507242624E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999987134301151	WITHOUT_CLASSIFICATION	1.2865698848857489E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.999998937286567	WITHOUT_CLASSIFICATION	1.0627134330500075E-6	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999951476079241	WITHOUT_CLASSIFICATION	4.852392075936078E-6	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999998082589461	WITHOUT_CLASSIFICATION	1.9174105392402232E-7	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999998625565386	WITHOUT_CLASSIFICATION	1.374434613703228E-7	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999989369207135	WITHOUT_CLASSIFICATION	1.063079286584979E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999994350064826	WITHOUT_CLASSIFICATION	5.649935174228911E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999663490712732	WITHOUT_CLASSIFICATION	3.365092872679569E-5	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999972103836586	WITHOUT_CLASSIFICATION	2.789616341430829E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9999991056966673	WITHOUT_CLASSIFICATION	8.943033327836021E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999824341984932	WITHOUT_CLASSIFICATION	1.756580150669178E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999999295025321	WITHOUT_CLASSIFICATION	7.049746789577059E-8	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999980336011521	WITHOUT_CLASSIFICATION	1.9663988478571093E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999993180578289	WITHOUT_CLASSIFICATION	6.819421709590162E-7	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999991010422462	WITHOUT_CLASSIFICATION	8.989577538971353E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999889286340581	WITHOUT_CLASSIFICATION	1.1071365941917224E-5	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999881296084323	WITHOUT_CLASSIFICATION	1.1870391567785373E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999908293214722	WITHOUT_CLASSIFICATION	9.17067852786519E-6	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999999169473934	WITHOUT_CLASSIFICATION	8.305260660413248E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999881296084323	WITHOUT_CLASSIFICATION	1.1870391567785373E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999814350315058	WITHOUT_CLASSIFICATION	1.856496849417089E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999975654720028	WITHOUT_CLASSIFICATION	2.4345279971554436E-6	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999976452832691	WITHOUT_CLASSIFICATION	2.3547167309501914E-6	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999969480964391	WITHOUT_CLASSIFICATION	3.0519035609719493E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999881296084323	WITHOUT_CLASSIFICATION	1.1870391567785373E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999908293214722	WITHOUT_CLASSIFICATION	9.17067852786519E-6	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999951126594282	WITHOUT_CLASSIFICATION	4.887340571874954E-6	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999999560927424	WITHOUT_CLASSIFICATION	4.3907257590387844E-7	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999985953419042	WITHOUT_CLASSIFICATION	1.4046580957702138E-6	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999977623825699	WITHOUT_CLASSIFICATION	2.2376174300829464E-6	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999997473248942	WITHOUT_CLASSIFICATION	2.526751058037685E-6	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999966258594157	WITHOUT_CLASSIFICATION	3.374140584224945E-6	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999998517772761	WITHOUT_CLASSIFICATION	1.4822272388837746E-7	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999406810498984	WITHOUT_CLASSIFICATION	5.931895010152601E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9999914523195537	WITHOUT_CLASSIFICATION	8.547680446356639E-6	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9999107907736331	WITHOUT_CLASSIFICATION	8.920922636687635E-5	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9990585353956547	WITHOUT_CLASSIFICATION	9.414646043453204E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999955459521034	WITHOUT_CLASSIFICATION	4.454047896623997E-6	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999975048569362	WITHOUT_CLASSIFICATION	2.495143063847658E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999624640597816	WITHOUT_CLASSIFICATION	3.753594021835234E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999862733296	WITHOUT_CLASSIFICATION	1.3726670254307068E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999841385005551	WITHOUT_CLASSIFICATION	1.586149944484927E-5	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999836867815938	WITHOUT_CLASSIFICATION	1.631321840622966E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9997702039938019	WITHOUT_CLASSIFICATION	2.2979600619817985E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999655328925819	WITHOUT_CLASSIFICATION	3.4467107418059006E-5	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999595957262561	WITHOUT_CLASSIFICATION	4.0404273743890004E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.999976718356723	WITHOUT_CLASSIFICATION	2.328164327703985E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999862733296	WITHOUT_CLASSIFICATION	1.3726670254307068E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999841385005551	WITHOUT_CLASSIFICATION	1.586149944484927E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999968877678368	WITHOUT_CLASSIFICATION	3.1122321631784427E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999968877678368	WITHOUT_CLASSIFICATION	3.1122321631784427E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999946580110785	WITHOUT_CLASSIFICATION	5.3419889215873155E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999973034651043	WITHOUT_CLASSIFICATION	2.6965348958019187E-6	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999944811614847	WITHOUT_CLASSIFICATION	5.51883851525357E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999946580110785	WITHOUT_CLASSIFICATION	5.3419889215873155E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999973034651043	WITHOUT_CLASSIFICATION	2.6965348958019187E-6	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999994424072991	WITHOUT_CLASSIFICATION	5.575927008734951E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999988871405073	WITHOUT_CLASSIFICATION	1.1128594926499936E-6	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999991885013582	WITHOUT_CLASSIFICATION	8.114986417634653E-7	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999978232681616	WITHOUT_CLASSIFICATION	2.1767318383374405E-6	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999991885013582	WITHOUT_CLASSIFICATION	8.114986417634653E-7	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999992263313062	WITHOUT_CLASSIFICATION	7.736686937329702E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.999999243661576	WITHOUT_CLASSIFICATION	7.563384241146638E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.999999243661576	WITHOUT_CLASSIFICATION	7.563384241146638E-7	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.999996311050661	WITHOUT_CLASSIFICATION	3.6889493389810806E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999999028884824	WITHOUT_CLASSIFICATION	9.71115176210891E-8	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999938938002132	WITHOUT_CLASSIFICATION	6.106199786775073E-6	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999312547545527	WITHOUT_CLASSIFICATION	6.874524544733362E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999999705069582	WITHOUT_CLASSIFICATION	2.949304180722548E-8	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999988885589703	WITHOUT_CLASSIFICATION	1.1114410295953936E-6	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999959825223123	WITHOUT_CLASSIFICATION	4.017477687758376E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953290940164	WITHOUT_CLASSIFICATION	4.670905983496415E-6	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.999997203041201	WITHOUT_CLASSIFICATION	2.7969587990849513E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999875229791233	WITHOUT_CLASSIFICATION	1.2477020876727728E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999670380821855	WITHOUT_CLASSIFICATION	3.296191781452831E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953290940164	WITHOUT_CLASSIFICATION	4.670905983496415E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999875229791233	WITHOUT_CLASSIFICATION	1.2477020876727728E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953290940164	WITHOUT_CLASSIFICATION	4.670905983496415E-6	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.999996233077462	WITHOUT_CLASSIFICATION	3.7669225379500053E-6	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.999900591184143	WITHOUT_CLASSIFICATION	9.94088158570014E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953290940164	WITHOUT_CLASSIFICATION	4.670905983496415E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953290940164	WITHOUT_CLASSIFICATION	4.670905983496415E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953290940164	WITHOUT_CLASSIFICATION	4.670905983496415E-6	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999875570893593	WITHOUT_CLASSIFICATION	1.2442910640670956E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999932766856914	WITHOUT_CLASSIFICATION	6.7233143085981834E-6	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999983789435387	WITHOUT_CLASSIFICATION	1.6210564612580841E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.99999795469168	WITHOUT_CLASSIFICATION	2.0453083200504296E-6	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9999802781746413	WITHOUT_CLASSIFICATION	1.9721825358677507E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999962290463846	WITHOUT_CLASSIFICATION	3.770953615286377E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999998808117299	WITHOUT_CLASSIFICATION	1.1918827003693337E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999581232459412	WITHOUT_CLASSIFICATION	4.187675405863344E-5	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999581232459412	WITHOUT_CLASSIFICATION	4.187675405863344E-5	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999979526423678	WITHOUT_CLASSIFICATION	2.04735763217636E-6	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999978427626395	WITHOUT_CLASSIFICATION	2.1572373604600912E-6	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999925360542624	WITHOUT_CLASSIFICATION	7.463945737583319E-6	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999700925233915	WITHOUT_CLASSIFICATION	2.990747660855387E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999912714684732	WITHOUT_CLASSIFICATION	8.728531526812424E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999997682976042	WITHOUT_CLASSIFICATION	2.317023959464899E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.99999795469168	WITHOUT_CLASSIFICATION	2.0453083200504296E-6	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9998914312146765	WITHOUT_CLASSIFICATION	1.085687853235373E-4	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999953720877829	WITHOUT_CLASSIFICATION	4.6279122170448664E-6	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999992607005092	WITHOUT_CLASSIFICATION	7.392994909479881E-7	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999989787395989	WITHOUT_CLASSIFICATION	1.0212604012031067E-6	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999978139071521	WITHOUT_CLASSIFICATION	2.186092847879739E-6	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999998804918292	WITHOUT_CLASSIFICATION	1.195081708056482E-7	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999998281187363	WITHOUT_CLASSIFICATION	1.718812636861408E-7	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999985340633012	WITHOUT_CLASSIFICATION	1.4659366988406374E-6	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999999881336739	WITHOUT_CLASSIFICATION	1.1866326071169852E-8	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999875229791233	WITHOUT_CLASSIFICATION	1.2477020876727728E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999873511851463	WITHOUT_CLASSIFICATION	1.2648814853677504E-5	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999965922074866	WITHOUT_CLASSIFICATION	3.4077925134599534E-6	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999998822662841	WITHOUT_CLASSIFICATION	1.1773371583338522E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999998822662841	WITHOUT_CLASSIFICATION	1.1773371583338522E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999999342652324	WITHOUT_CLASSIFICATION	6.573476765123431E-8	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999875229791233	WITHOUT_CLASSIFICATION	1.2477020876727728E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999912391176882	WITHOUT_CLASSIFICATION	8.760882311780261E-6	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999587352006325	WITHOUT_CLASSIFICATION	4.1264799367404616E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.99999925744739	WITHOUT_CLASSIFICATION	7.425526098363755E-7	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999187172579	WITHOUT_CLASSIFICATION	8.128274209002158E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999993046213874	WITHOUT_CLASSIFICATION	6.95378612503577E-7	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9999957877008806	WITHOUT_CLASSIFICATION	4.212299119412764E-6	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999994628998073	WITHOUT_CLASSIFICATION	5.371001926660733E-7	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999736809593004	WITHOUT_CLASSIFICATION	2.6319040699585795E-5	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9999766809449531	WITHOUT_CLASSIFICATION	2.3319055046913515E-5	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999974809520948	WITHOUT_CLASSIFICATION	2.5190479051632927E-6	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9998281777447052	WITHOUT_CLASSIFICATION	1.7182225529483193E-4	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999993267377996	WITHOUT_CLASSIFICATION	6.732622004251709E-7	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999723476464254	WITHOUT_CLASSIFICATION	2.765235357462916E-5	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9731717397507947	WITHOUT_CLASSIFICATION	0.026828260249205337	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999981939977122	WITHOUT_CLASSIFICATION	1.8060022878042911E-6	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999983835890566	WITHOUT_CLASSIFICATION	1.6164109434064251E-6	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999947458639892	WITHOUT_CLASSIFICATION	5.254136010893142E-6	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.99999971645677	WITHOUT_CLASSIFICATION	2.8354323001827873E-7	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999994718709898	WITHOUT_CLASSIFICATION	5.281290102084216E-7	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.999966446694076	WITHOUT_CLASSIFICATION	3.3553305924085234E-5	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999982375794841	WITHOUT_CLASSIFICATION	1.762420515884676E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999875229791233	WITHOUT_CLASSIFICATION	1.2477020876727728E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999985844092668	WITHOUT_CLASSIFICATION	1.4155907331407597E-6	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.999999465397267	WITHOUT_CLASSIFICATION	5.34602732999369E-7	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9995153076045904	WITHOUT_CLASSIFICATION	4.8469239540960095E-4	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999982378975381	WITHOUT_CLASSIFICATION	1.7621024619636128E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999959369899151	WITHOUT_CLASSIFICATION	4.063010084879429E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999996717113714	WITHOUT_CLASSIFICATION	3.2828862862498213E-7	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999993351089858	WITHOUT_CLASSIFICATION	6.648910142517032E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999875229791233	WITHOUT_CLASSIFICATION	1.2477020876727728E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9997133853876257	WITHOUT_CLASSIFICATION	2.866146123743374E-4	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999990356977699	WITHOUT_CLASSIFICATION	9.64302230002176E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999990356977699	WITHOUT_CLASSIFICATION	9.64302230002176E-7	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999922469566526	WITHOUT_CLASSIFICATION	7.753043347545808E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999922469566526	WITHOUT_CLASSIFICATION	7.753043347545808E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999988584526602	WITHOUT_CLASSIFICATION	1.1415473397982815E-5	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999991871464227	WITHOUT_CLASSIFICATION	8.128535774645857E-7	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999913047071715	WITHOUT_CLASSIFICATION	8.695292828427251E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999913047071715	WITHOUT_CLASSIFICATION	8.695292828427251E-6	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999931679905664	WITHOUT_CLASSIFICATION	6.832009433682384E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9998674542398697	WITHOUT_CLASSIFICATION	1.325457601303453E-4	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999932766856914	WITHOUT_CLASSIFICATION	6.7233143085981834E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999787291528678	WITHOUT_CLASSIFICATION	2.127084713230717E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999787291528678	WITHOUT_CLASSIFICATION	2.127084713230717E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999787291528678	WITHOUT_CLASSIFICATION	2.127084713230717E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9998674542398697	WITHOUT_CLASSIFICATION	1.325457601303453E-4	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999998703837494	WITHOUT_CLASSIFICATION	1.2961625060343582E-7	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999829450304775	WITHOUT_CLASSIFICATION	1.7054969522509262E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9999403707813289	WITHOUT_CLASSIFICATION	5.9629218671015344E-5	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999630196897297	WITHOUT_CLASSIFICATION	3.6980310270315566E-5	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999995215177723	WITHOUT_CLASSIFICATION	4.784822276667774E-7	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999997886897372	WITHOUT_CLASSIFICATION	2.1131026286324897E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999998488463817	WITHOUT_CLASSIFICATION	1.5115361827341127E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999987803660177	WITHOUT_CLASSIFICATION	1.2196339822637112E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.999999430944908	WITHOUT_CLASSIFICATION	5.6905509197644E-7	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999898191951	WITHOUT_CLASSIFICATION	1.0180804791996003E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999992177042477	WITHOUT_CLASSIFICATION	7.822957523189204E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999997433576077	WITHOUT_CLASSIFICATION	2.5664239242380753E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999980486786354	WITHOUT_CLASSIFICATION	1.9513213646123424E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999969946014817	WITHOUT_CLASSIFICATION	3.005398518408496E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999971202340636	WITHOUT_CLASSIFICATION	2.87976593625181E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997226009633	WITHOUT_CLASSIFICATION	2.773990367457173E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999959704548544	WITHOUT_CLASSIFICATION	4.029545145643742E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999945471267631	WITHOUT_CLASSIFICATION	5.4528732369294025E-6	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999984233634062	WITHOUT_CLASSIFICATION	1.5766365938533458E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999987109748811	WITHOUT_CLASSIFICATION	1.2890251189657873E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999999056360739	WITHOUT_CLASSIFICATION	9.436392618237564E-8	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999991259094082	WITHOUT_CLASSIFICATION	8.740905917211967E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999995504684213	WITHOUT_CLASSIFICATION	4.495315787057783E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999996404171921	WITHOUT_CLASSIFICATION	3.5958280789740963E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999999201861703	WITHOUT_CLASSIFICATION	7.98138296762468E-8	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999988985182683	WITHOUT_CLASSIFICATION	1.1014817317434851E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999990068405257	WITHOUT_CLASSIFICATION	9.931594743496717E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999988956803825	WITHOUT_CLASSIFICATION	1.1043196175141571E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999944023745226	WITHOUT_CLASSIFICATION	5.5976254773614065E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999999430178561	WITHOUT_CLASSIFICATION	5.698214390476191E-7	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999873658988859	WITHOUT_CLASSIFICATION	1.263410111405602E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9996199461492757	WITHOUT_CLASSIFICATION	3.800538507242624E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999998108075907	WITHOUT_CLASSIFICATION	1.8919240925234884E-7	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999637598139	WITHOUT_CLASSIFICATION	3.6240186141075937E-8	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999998072521145	WITHOUT_CLASSIFICATION	1.9274788552760153E-7	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999995570763571	WITHOUT_CLASSIFICATION	4.4292364285772486E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999987134301151	WITHOUT_CLASSIFICATION	1.2865698848857489E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999913807422693	WITHOUT_CLASSIFICATION	8.619257730621097E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9997585867195155	WITHOUT_CLASSIFICATION	2.414132804844426E-4	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999985886965808	WITHOUT_CLASSIFICATION	1.4113034193033036E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999987134301151	WITHOUT_CLASSIFICATION	1.2865698848857489E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999994350064826	WITHOUT_CLASSIFICATION	5.649935174228911E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999949753445113	WITHOUT_CLASSIFICATION	5.024655488786941E-6	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999930765263884	WITHOUT_CLASSIFICATION	6.923473611625603E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999663490712732	WITHOUT_CLASSIFICATION	3.365092872679569E-5	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999917088942395	WITHOUT_CLASSIFICATION	8.291105760552467E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9997585867195155	WITHOUT_CLASSIFICATION	2.414132804844426E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999663490712732	WITHOUT_CLASSIFICATION	3.365092872679569E-5	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999968836708593	WITHOUT_CLASSIFICATION	3.1163291407632414E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999993078034195	WITHOUT_CLASSIFICATION	6.921965804624797E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999998931302219	WITHOUT_CLASSIFICATION	1.0686977817850104E-7	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999996859279107	WITHOUT_CLASSIFICATION	3.140720893275581E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999978044677859	WITHOUT_CLASSIFICATION	2.1955322141679054E-6	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9999536161877524	WITHOUT_CLASSIFICATION	4.638381224765829E-5	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999880654186941	WITHOUT_CLASSIFICATION	1.193458130581121E-5	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999991921495099	WITHOUT_CLASSIFICATION	8.078504900149926E-7	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999695340825231	WITHOUT_CLASSIFICATION	3.0465917476936503E-5	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999968621897259	WITHOUT_CLASSIFICATION	3.1378102740481276E-6	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999885840143139	WITHOUT_CLASSIFICATION	1.1415985686193923E-5	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.999912944170568	WITHOUT_CLASSIFICATION	8.705582943202642E-5	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999996562836568	WITHOUT_CLASSIFICATION	3.437163432094189E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999974777974562	WITHOUT_CLASSIFICATION	2.522202543737105E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999975071177214	WITHOUT_CLASSIFICATION	2.492882278651179E-6	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999998004941743	WITHOUT_CLASSIFICATION	1.9950582586995354E-7	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999982626860884	WITHOUT_CLASSIFICATION	1.737313911586008E-6	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999996238062752	WITHOUT_CLASSIFICATION	3.7619372493889986E-7	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999997222285079	WITHOUT_CLASSIFICATION	2.7777149209325027E-7	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999931349562943	WITHOUT_CLASSIFICATION	6.865043705644996E-6	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999928848292446	WITHOUT_CLASSIFICATION	7.115170755266077E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999999739748082	WITHOUT_CLASSIFICATION	2.602519176264091E-8	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999997832667299	WITHOUT_CLASSIFICATION	2.167332701749652E-7	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999989309548679	WITHOUT_CLASSIFICATION	1.0690451321576064E-6	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999904255296138	WITHOUT_CLASSIFICATION	9.574470386121578E-6	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9999163902441699	WITHOUT_CLASSIFICATION	8.360975583013702E-5	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999973040163755	WITHOUT_CLASSIFICATION	2.695983624365075E-6	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999995133658597	WITHOUT_CLASSIFICATION	4.866341403202334E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999992741363922	WITHOUT_CLASSIFICATION	7.258636078788421E-7	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999994904335191	WITHOUT_CLASSIFICATION	5.095664808790654E-7	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999990951404619	WITHOUT_CLASSIFICATION	9.04859538066478E-7	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999748492163402	WITHOUT_CLASSIFICATION	2.5150783659904077E-5	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999970901954661	WITHOUT_CLASSIFICATION	2.9098045338599924E-6	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.999999732627008	WITHOUT_CLASSIFICATION	2.6737299202324893E-7	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999995499103452	WITHOUT_CLASSIFICATION	4.5008965479046585E-7	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999951429689533	WITHOUT_CLASSIFICATION	4.857031046604253E-6	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9999928501362912	WITHOUT_CLASSIFICATION	7.149863708827293E-6	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999952917682373	WITHOUT_CLASSIFICATION	4.7082317626995746E-6	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.999998211597455	WITHOUT_CLASSIFICATION	1.7884025450493769E-6	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999752087562402	WITHOUT_CLASSIFICATION	2.4791243759807868E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999955435216569	WITHOUT_CLASSIFICATION	4.45647834307407E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999903189352994	WITHOUT_CLASSIFICATION	9.68106470052149E-6	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999992327025945	WITHOUT_CLASSIFICATION	7.67297405429818E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.999999501461696	WITHOUT_CLASSIFICATION	4.985383039904015E-7	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999983626158486	WITHOUT_CLASSIFICATION	1.637384151388544E-6	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999932781950062	WITHOUT_CLASSIFICATION	6.721804993884397E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999877631267294	WITHOUT_CLASSIFICATION	1.2236873270650194E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999983793340769	WITHOUT_CLASSIFICATION	1.6206659231131523E-6	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999978975250245	WITHOUT_CLASSIFICATION	2.102474975456764E-6	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999776465786	WITHOUT_CLASSIFICATION	2.2353421482050527E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.99998803535357	WITHOUT_CLASSIFICATION	1.1964646430063652E-5	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9996869580137058	WITHOUT_CLASSIFICATION	3.130419862942881E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9999786818165411	WITHOUT_CLASSIFICATION	2.1318183458768456E-5	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999918673963702	WITHOUT_CLASSIFICATION	8.132603629765971E-6	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.999989872735918	WITHOUT_CLASSIFICATION	1.0127264082022226E-5	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999999028884824	WITHOUT_CLASSIFICATION	9.71115176210891E-8	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999990490888636	WITHOUT_CLASSIFICATION	9.509111363733952E-7	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999981979934748	WITHOUT_CLASSIFICATION	1.8020065252533358E-6	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.999999954737447	WITHOUT_CLASSIFICATION	4.5262553027183543E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999993508988233	WITHOUT_CLASSIFICATION	6.491011765823281E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999992862165302	WITHOUT_CLASSIFICATION	7.137834696765358E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999960957946289	WITHOUT_CLASSIFICATION	3.904205371196738E-6	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.999987535541836	WITHOUT_CLASSIFICATION	1.2464458163954192E-5	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999872404576935	WITHOUT_CLASSIFICATION	1.2759542306521656E-5	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999998197966103	WITHOUT_CLASSIFICATION	1.8020338967034452E-7	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999858206909018	WITHOUT_CLASSIFICATION	1.4179309098214759E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999994475127572	WITHOUT_CLASSIFICATION	5.52487242902832E-7	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999962290463846	WITHOUT_CLASSIFICATION	3.770953615286377E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999998808117299	WITHOUT_CLASSIFICATION	1.1918827003693337E-7	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999997682976042	WITHOUT_CLASSIFICATION	2.317023959464899E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999960957946289	WITHOUT_CLASSIFICATION	3.904205371196738E-6	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999858206909018	WITHOUT_CLASSIFICATION	1.4179309098214759E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999994475127572	WITHOUT_CLASSIFICATION	5.52487242902832E-7	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999959245617966	WITHOUT_CLASSIFICATION	4.0754382032858395E-6	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999995974871521	WITHOUT_CLASSIFICATION	4.0251284786660335E-7	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9998870955253328	WITHOUT_CLASSIFICATION	1.1290447466707984E-4	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999895768137063	WITHOUT_CLASSIFICATION	1.042318629381024E-5	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999990676345285	WITHOUT_CLASSIFICATION	9.323654714851491E-7	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999559591521	WITHOUT_CLASSIFICATION	4.4040847960201814E-8	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999997589380678	WITHOUT_CLASSIFICATION	2.4106193220670614E-7	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.999998967888088	WITHOUT_CLASSIFICATION	1.0321119120243152E-6	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999998927547489	WITHOUT_CLASSIFICATION	1.0724525119612613E-7	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.999980022536764	WITHOUT_CLASSIFICATION	1.9977463235938888E-5	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999999068741101	WITHOUT_CLASSIFICATION	9.312588996896438E-8	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9997952637758979	WITHOUT_CLASSIFICATION	2.0473622410214633E-4	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.999999926619682	WITHOUT_CLASSIFICATION	7.338031798117779E-8	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999996408621719	WITHOUT_CLASSIFICATION	3.5913782817600877E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999996918067214	WITHOUT_CLASSIFICATION	3.081932785494827E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999995182189095	WITHOUT_CLASSIFICATION	4.81781090363077E-7	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999981446276471	WITHOUT_CLASSIFICATION	1.8553723528590923E-6	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999981808712792	WITHOUT_CLASSIFICATION	1.819128720717823E-6	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999996826889324	WITHOUT_CLASSIFICATION	3.173110677110646E-7	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.999999681458039	WITHOUT_CLASSIFICATION	3.185419611153623E-7	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.999999708629638	WITHOUT_CLASSIFICATION	2.913703619273198E-7	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.999998774977767	WITHOUT_CLASSIFICATION	1.2250222330811125E-6	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999993508988233	WITHOUT_CLASSIFICATION	6.491011765823281E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999992862165302	WITHOUT_CLASSIFICATION	7.137834696765358E-7	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999996866632171	WITHOUT_CLASSIFICATION	3.133367829248303E-7	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999997812902918	WITHOUT_CLASSIFICATION	2.1870970830203544E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999987414864805	WITHOUT_CLASSIFICATION	1.258513519518253E-6	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999963414479435	WITHOUT_CLASSIFICATION	3.658552056512463E-6	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999963974549941	WITHOUT_CLASSIFICATION	3.6025450058877243E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.999998746067399	WITHOUT_CLASSIFICATION	1.2539326009865332E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9999051858189323	WITHOUT_CLASSIFICATION	9.48141810677267E-5	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999992562683828	WITHOUT_CLASSIFICATION	7.43731617222464E-7	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999862849722598	WITHOUT_CLASSIFICATION	1.3715027740165233E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999862849722598	WITHOUT_CLASSIFICATION	1.3715027740165233E-5	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999996446138073	WITHOUT_CLASSIFICATION	3.553861926476917E-7	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.999979100159698	WITHOUT_CLASSIFICATION	2.0899840301880715E-5	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999998276735296	WITHOUT_CLASSIFICATION	1.7232647037721325E-7	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999985781411798	WITHOUT_CLASSIFICATION	1.4218588201862587E-6	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999996551538959	WITHOUT_CLASSIFICATION	3.4484610407417703E-7	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999997507727941	WITHOUT_CLASSIFICATION	2.492272059351344E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999990546316297	WITHOUT_CLASSIFICATION	9.453683703799496E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999990546316297	WITHOUT_CLASSIFICATION	9.453683703799496E-7	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999995306481734	WITHOUT_CLASSIFICATION	4.693518266964744E-7	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.999996957853737	WITHOUT_CLASSIFICATION	3.042146262998751E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999986700324822	WITHOUT_CLASSIFICATION	1.329967517855254E-6	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999917769223321	WITHOUT_CLASSIFICATION	8.223077667903051E-6	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999989317273029	WITHOUT_CLASSIFICATION	1.0682726970981514E-6	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999940211001006	WITHOUT_CLASSIFICATION	5.978899899368283E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999998862159549	WITHOUT_CLASSIFICATION	1.13784045087048E-7	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999996627514952	WITHOUT_CLASSIFICATION	3.37248504754577E-7	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999997641382651	WITHOUT_CLASSIFICATION	2.358617349461701E-7	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999996622189985	WITHOUT_CLASSIFICATION	3.37781001497455E-7	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999668029708428	WITHOUT_CLASSIFICATION	3.319702915710015E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999824010775	WITHOUT_CLASSIFICATION	1.7598922502402504E-8	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9992743287327384	WITHOUT_CLASSIFICATION	7.256712672615907E-4	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999987130093205	WITHOUT_CLASSIFICATION	1.2869906795385676E-6	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999993921433351	WITHOUT_CLASSIFICATION	6.078566648358279E-7	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999878880086678	WITHOUT_CLASSIFICATION	1.2111991332248186E-5	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999998144215765	WITHOUT_CLASSIFICATION	1.855784234654297E-7	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999999422710643	WITHOUT_CLASSIFICATION	5.7728935744243126E-8	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.999999749987999	WITHOUT_CLASSIFICATION	2.500120009856834E-7	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999992621509747	WITHOUT_CLASSIFICATION	7.378490254296697E-7	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.999999236116922	WITHOUT_CLASSIFICATION	7.638830779986039E-7	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999995998451582	WITHOUT_CLASSIFICATION	4.0015484186663517E-7	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999999877306908	WITHOUT_CLASSIFICATION	1.2269309253285972E-8	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.999991629656735	WITHOUT_CLASSIFICATION	8.370343265073556E-6	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999997665941293	WITHOUT_CLASSIFICATION	2.3340587079805596E-7	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999982521836082	WITHOUT_CLASSIFICATION	1.7478163918015626E-6	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999996262475273	WITHOUT_CLASSIFICATION	3.7375247275598695E-7	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999816517709734	WITHOUT_CLASSIFICATION	1.8348229026604384E-5	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999990291538638	WITHOUT_CLASSIFICATION	9.70846136188396E-7	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999990604572284	WITHOUT_CLASSIFICATION	9.395427716581427E-7	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999999049260466	WITHOUT_CLASSIFICATION	9.507395337861786E-8	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999972353142031	WITHOUT_CLASSIFICATION	2.7646857968680285E-6	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999782014801039	WITHOUT_CLASSIFICATION	2.17985198961825E-5	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999955521177848	WITHOUT_CLASSIFICATION	4.44788221518374E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.999918319134474	WITHOUT_CLASSIFICATION	8.168086552591581E-5	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999943401306678	WITHOUT_CLASSIFICATION	5.659869332232732E-6	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999986268613105	WITHOUT_CLASSIFICATION	1.3731386895124758E-6	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999985773286466	WITHOUT_CLASSIFICATION	1.422671353371594E-6	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999998862676146	WITHOUT_CLASSIFICATION	1.1373238535324218E-7	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999941499641891	WITHOUT_CLASSIFICATION	5.850035810921261E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999997834181984	WITHOUT_CLASSIFICATION	2.1658180150448837E-7	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999999257975354	WITHOUT_CLASSIFICATION	7.420246465350453E-8	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999992413868991	WITHOUT_CLASSIFICATION	7.586131009756842E-7	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.999999705856232	WITHOUT_CLASSIFICATION	2.9414376798797835E-7	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9989592854899675	WITHOUT_CLASSIFICATION	0.0010407145100325066	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999997834181984	WITHOUT_CLASSIFICATION	2.1658180150448837E-7	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999992413868991	WITHOUT_CLASSIFICATION	7.586131009756842E-7	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999251605956777	WITHOUT_CLASSIFICATION	7.48394043223555E-5	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999988599194556	WITHOUT_CLASSIFICATION	1.1400805444074623E-6	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999948564967951	WITHOUT_CLASSIFICATION	5.143503204864814E-6	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999944754916223	WITHOUT_CLASSIFICATION	5.524508377701519E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999941499641891	WITHOUT_CLASSIFICATION	5.850035810921261E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999941499641891	WITHOUT_CLASSIFICATION	5.850035810921261E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999997834181984	WITHOUT_CLASSIFICATION	2.1658180150448837E-7	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999996866804925	WITHOUT_CLASSIFICATION	3.1331950745917753E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999994272641031	WITHOUT_CLASSIFICATION	5.727358969813323E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999995233546574	WITHOUT_CLASSIFICATION	4.76645342615263E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999995233546574	WITHOUT_CLASSIFICATION	4.76645342615263E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999999876656185	WITHOUT_CLASSIFICATION	1.2334381502068183E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999996966395351	WITHOUT_CLASSIFICATION	3.033604647959632E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999969149613346	WITHOUT_CLASSIFICATION	3.085038665471197E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999969149613346	WITHOUT_CLASSIFICATION	3.085038665471197E-6	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999997715121991	WITHOUT_CLASSIFICATION	2.2848780098043872E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999996966395351	WITHOUT_CLASSIFICATION	3.033604647959632E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999969149613346	WITHOUT_CLASSIFICATION	3.085038665471197E-6	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999997715121991	WITHOUT_CLASSIFICATION	2.2848780098043872E-7	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999997872566817	WITHOUT_CLASSIFICATION	2.1274331830264308E-7	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999993857246021	WITHOUT_CLASSIFICATION	6.142753979010828E-7	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999998845557583	WITHOUT_CLASSIFICATION	1.1544424167682668E-7	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999997510663342	WITHOUT_CLASSIFICATION	2.4893366572425573E-7	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999995720732986	WITHOUT_CLASSIFICATION	4.279267013306755E-7	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999996003279463	WITHOUT_CLASSIFICATION	3.996720536273587E-7	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999999194932568	WITHOUT_CLASSIFICATION	8.050674313159046E-8	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999969476654358	WITHOUT_CLASSIFICATION	3.052334564248167E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.999997836261034	WITHOUT_CLASSIFICATION	2.1637389660556317E-6	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999877937792173	WITHOUT_CLASSIFICATION	1.2206220782603416E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999988361559592	WITHOUT_CLASSIFICATION	1.1638440407799406E-6	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999981900395969	WITHOUT_CLASSIFICATION	1.8099604031451667E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999999630829426	WITHOUT_CLASSIFICATION	3.6917057462924464E-8	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999999582418991	WITHOUT_CLASSIFICATION	4.1758100772021054E-8	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999980328226599	WITHOUT_CLASSIFICATION	1.9671773402140697E-6	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999998270262652	WITHOUT_CLASSIFICATION	1.7297373482452518E-7	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999998403552532	WITHOUT_CLASSIFICATION	1.5964474674596853E-7	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999995200019924	WITHOUT_CLASSIFICATION	4.799980075159873E-7	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.999999963390206	WITHOUT_CLASSIFICATION	3.6609793955521045E-8	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999979407048657	WITHOUT_CLASSIFICATION	2.0592951343884182E-6	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999906363684	WITHOUT_CLASSIFICATION	9.363631700697697E-9	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999995674405919	WITHOUT_CLASSIFICATION	4.325594080371262E-7	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999997596180392	WITHOUT_CLASSIFICATION	2.4038196075650244E-7	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999994617451716	WITHOUT_CLASSIFICATION	5.38254828462075E-7	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999993794040288	WITHOUT_CLASSIFICATION	6.205959711798588E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999999189391233	WITHOUT_CLASSIFICATION	8.106087664653796E-8	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999991282553891	WITHOUT_CLASSIFICATION	8.717446109648139E-7	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999985543250347	WITHOUT_CLASSIFICATION	1.445674965363616E-6	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999998684109654	WITHOUT_CLASSIFICATION	1.3158903451672286E-7	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999998682474044	WITHOUT_CLASSIFICATION	1.3175259564290522E-7	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999993357905644	WITHOUT_CLASSIFICATION	6.642094355104123E-7	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999980660193009	WITHOUT_CLASSIFICATION	1.9339806992006816E-6	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998900776630758	WITHOUT_CLASSIFICATION	1.0992233692426927E-4	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999931718968555	WITHOUT_CLASSIFICATION	6.828103144383279E-6	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999944499107687	WITHOUT_CLASSIFICATION	5.5500892313952375E-6	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999990071554348	WITHOUT_CLASSIFICATION	9.928445652311435E-7	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999998515643628	WITHOUT_CLASSIFICATION	1.4843563720654525E-7	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999766494659426	WITHOUT_CLASSIFICATION	2.3350534057453604E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999820308577317	WITHOUT_CLASSIFICATION	1.796914226828745E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999820308577317	WITHOUT_CLASSIFICATION	1.796914226828745E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999820308577317	WITHOUT_CLASSIFICATION	1.796914226828745E-5	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999986779127643	WITHOUT_CLASSIFICATION	1.3220872356825563E-6	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.99999782026597	WITHOUT_CLASSIFICATION	2.1797340300709382E-6	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.999993818123626	WITHOUT_CLASSIFICATION	6.18187637404425E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999943189453058	WITHOUT_CLASSIFICATION	5.681054694175098E-6	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999997280222516	WITHOUT_CLASSIFICATION	2.7197774839510044E-7	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999702808251597	WITHOUT_CLASSIFICATION	2.971917484040621E-5	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999862128319	WITHOUT_CLASSIFICATION	1.3787168076559298E-8	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999999892761443	WITHOUT_CLASSIFICATION	1.0723855702325781E-8	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999999769673039	WITHOUT_CLASSIFICATION	2.3032696103805923E-8	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999995976328727	WITHOUT_CLASSIFICATION	4.023671272969213E-7	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999999605103835	WITHOUT_CLASSIFICATION	3.948961650064817E-8	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999771074393174	WITHOUT_CLASSIFICATION	2.2892560682534675E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999993752272291	WITHOUT_CLASSIFICATION	6.247727708928217E-7	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9998979653999138	WITHOUT_CLASSIFICATION	1.020346000861347E-4	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999986789788248	WITHOUT_CLASSIFICATION	1.321021175212397E-6	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999999949797092	WITHOUT_CLASSIFICATION	5.020290858282744E-9	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999602511058415	WITHOUT_CLASSIFICATION	3.974889415852232E-5	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.999999782155406	WITHOUT_CLASSIFICATION	2.1784459404119117E-7	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999992306294967	WITHOUT_CLASSIFICATION	7.693705032645709E-7	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999852121503624	WITHOUT_CLASSIFICATION	1.478784963753794E-5	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9999093428231032	WITHOUT_CLASSIFICATION	9.065717689682856E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999985114212703	WITHOUT_CLASSIFICATION	1.4885787296690108E-6	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999570005015355	WITHOUT_CLASSIFICATION	4.2999498464577936E-5	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999447820426227	WITHOUT_CLASSIFICATION	5.5217957377223244E-5	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999999748034392	WITHOUT_CLASSIFICATION	2.5196560814452023E-8	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9998685045759951	WITHOUT_CLASSIFICATION	1.314954240049357E-4	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999998996704913	WITHOUT_CLASSIFICATION	1.0032950862348066E-7	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999995708202521	WITHOUT_CLASSIFICATION	4.291797478400651E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999998612406332	WITHOUT_CLASSIFICATION	1.3875936667822927E-7	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999997406507027	WITHOUT_CLASSIFICATION	2.59349297236954E-7	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.999983349276087	WITHOUT_CLASSIFICATION	1.6650723913063532E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999997787351491	WITHOUT_CLASSIFICATION	2.2126485081453756E-7	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9999978886659595	WITHOUT_CLASSIFICATION	2.111334040584121E-6	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.999998864717406	WITHOUT_CLASSIFICATION	1.135282594015125E-6	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999468299777547	WITHOUT_CLASSIFICATION	5.317002224526535E-5	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999999012605738	WITHOUT_CLASSIFICATION	9.873942621406949E-8	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999831035376054	WITHOUT_CLASSIFICATION	1.6896462394515813E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999856911753296	WITHOUT_CLASSIFICATION	1.4308824670400618E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999987287505319	WITHOUT_CLASSIFICATION	1.271249468129887E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999904737528903	WITHOUT_CLASSIFICATION	9.526247109666495E-6	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999505775992409	WITHOUT_CLASSIFICATION	4.9422400759154664E-5	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999644416958915	WITHOUT_CLASSIFICATION	3.555830410845756E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.999998746067399	WITHOUT_CLASSIFICATION	1.2539326009865332E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999962053368343	WITHOUT_CLASSIFICATION	3.7946631657210816E-6	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999775422363547	WITHOUT_CLASSIFICATION	2.2457763645321804E-5	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999883035925976	WITHOUT_CLASSIFICATION	1.1696407402374E-5	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9999639531004266	WITHOUT_CLASSIFICATION	3.6046899573435064E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999500195762302	WITHOUT_CLASSIFICATION	4.9980423769816946E-5	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9999986557254701	WITHOUT_CLASSIFICATION	1.3442745298975202E-6	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999997476562822	WITHOUT_CLASSIFICATION	2.5234371778164955E-7	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999988534976227	WITHOUT_CLASSIFICATION	1.1465023771849128E-6	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999663612701262	WITHOUT_CLASSIFICATION	3.363872987374614E-5	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999997205680659	WITHOUT_CLASSIFICATION	2.79431934149444E-7	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.999987761482363	WITHOUT_CLASSIFICATION	1.223851763708739E-5	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999990340641061	WITHOUT_CLASSIFICATION	9.659358939202028E-7	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.999998670508381	WITHOUT_CLASSIFICATION	1.3294916190957002E-6	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999984069672353	WITHOUT_CLASSIFICATION	1.5930327647113553E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999996406749083	WITHOUT_CLASSIFICATION	3.5932509174593836E-7	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999992667011949	WITHOUT_CLASSIFICATION	7.332988050114908E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999993533524493	WITHOUT_CLASSIFICATION	6.466475508154621E-7	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999995993051408	WITHOUT_CLASSIFICATION	4.006948592342194E-7	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999903754098015	WITHOUT_CLASSIFICATION	9.624590198427927E-6	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999981192156024	WITHOUT_CLASSIFICATION	1.880784397540532E-6	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999999150234653	WITHOUT_CLASSIFICATION	8.497653464603866E-8	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9999950337633972	WITHOUT_CLASSIFICATION	4.966236602888322E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999995006016132	WITHOUT_CLASSIFICATION	4.99398386711351E-7	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999978536894809	WITHOUT_CLASSIFICATION	2.1463105191605392E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999975457350099	WITHOUT_CLASSIFICATION	2.454264990132057E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999975457350099	WITHOUT_CLASSIFICATION	2.454264990132057E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999978481324456	WITHOUT_CLASSIFICATION	2.1518675544204044E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999978481324456	WITHOUT_CLASSIFICATION	2.1518675544204044E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999995006016132	WITHOUT_CLASSIFICATION	4.99398386711351E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999978481324456	WITHOUT_CLASSIFICATION	2.1518675544204044E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999997018468837	WITHOUT_CLASSIFICATION	2.9815311630451616E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999987648755159	WITHOUT_CLASSIFICATION	1.235124484119511E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999987648755159	WITHOUT_CLASSIFICATION	1.235124484119511E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999978567208571	WITHOUT_CLASSIFICATION	2.143279142953994E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999995560006325	WITHOUT_CLASSIFICATION	4.439993674991229E-7	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.999993716901781	WITHOUT_CLASSIFICATION	6.283098218964471E-6	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9999763032267326	WITHOUT_CLASSIFICATION	2.369677326737989E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999995816068233	WITHOUT_CLASSIFICATION	4.183931766442468E-7	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999998964610188	WITHOUT_CLASSIFICATION	1.0353898120905129E-7	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999985277954632	WITHOUT_CLASSIFICATION	1.4722045367866757E-6	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999690680937494	WITHOUT_CLASSIFICATION	3.093190625062519E-5	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999660576651965	WITHOUT_CLASSIFICATION	3.394233480344079E-5	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999976359948308	WITHOUT_CLASSIFICATION	2.364005169158967E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999990994495646	WITHOUT_CLASSIFICATION	9.005504354750856E-7	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999987034431487	WITHOUT_CLASSIFICATION	1.2965568513514616E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999976385545006	WITHOUT_CLASSIFICATION	2.36144549927843E-6	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999999126465303	WITHOUT_CLASSIFICATION	8.735346967011215E-8	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999991032374274	WITHOUT_CLASSIFICATION	8.967625727021026E-7	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999999214696472	WITHOUT_CLASSIFICATION	7.853035269795721E-8	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999998025926302	WITHOUT_CLASSIFICATION	1.9740736991220406E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9999245027514748	WITHOUT_CLASSIFICATION	7.549724852514844E-5	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9999623991327652	WITHOUT_CLASSIFICATION	3.7600867234772004E-5	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999999417751343	WITHOUT_CLASSIFICATION	5.822486570697563E-8	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999999177073755	WITHOUT_CLASSIFICATION	8.229262451417864E-8	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999367797038115	WITHOUT_CLASSIFICATION	6.32202961884768E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.999999219042675	WITHOUT_CLASSIFICATION	7.809573250630868E-7	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999993657680224	WITHOUT_CLASSIFICATION	6.342319777061272E-7	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999993657680224	WITHOUT_CLASSIFICATION	6.342319777061272E-7	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999819350390582	WITHOUT_CLASSIFICATION	1.806496094172282E-5	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.99999871038976	WITHOUT_CLASSIFICATION	1.2896102400371758E-6	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999924072575989	WITHOUT_CLASSIFICATION	7.592742401097025E-6	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999983351250483	WITHOUT_CLASSIFICATION	1.6648749516284205E-6	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999557274386306	WITHOUT_CLASSIFICATION	4.427256136952483E-5	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.999999409735203	WITHOUT_CLASSIFICATION	5.902647970745358E-7	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999974569295345	WITHOUT_CLASSIFICATION	2.5430704654146736E-6	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9999988513020166	WITHOUT_CLASSIFICATION	1.1486979834138138E-6	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.999989462754754	WITHOUT_CLASSIFICATION	1.053724524591475E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9998414297730996	WITHOUT_CLASSIFICATION	1.5857022690029648E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999995856758342	WITHOUT_CLASSIFICATION	4.143241657317138E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999721828913382	WITHOUT_CLASSIFICATION	2.7817108661860263E-5	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999870644596125	WITHOUT_CLASSIFICATION	1.2935540387520107E-5	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999473361622074	WITHOUT_CLASSIFICATION	5.2663837792485676E-5	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999989553720663	WITHOUT_CLASSIFICATION	1.044627933677753E-6	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999970240466762	WITHOUT_CLASSIFICATION	2.975953323844305E-6	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999667186013261	WITHOUT_CLASSIFICATION	3.328139867389539E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999988363926402	WITHOUT_CLASSIFICATION	1.1636073598603488E-6	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999977059065303	WITHOUT_CLASSIFICATION	2.2940934697055527E-6	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999613231689093	WITHOUT_CLASSIFICATION	3.867683109069126E-5	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999950518653913	WITHOUT_CLASSIFICATION	4.948134608700568E-6	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999842410403521	WITHOUT_CLASSIFICATION	1.575895964784403E-5	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999989926783857	WITHOUT_CLASSIFICATION	1.0073216144313362E-6	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999954916901445	WITHOUT_CLASSIFICATION	4.508309855579173E-6	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999964257040291	WITHOUT_CLASSIFICATION	3.574295970823985E-6	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999997992662842	WITHOUT_CLASSIFICATION	2.0073371579865503E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999998193994611	WITHOUT_CLASSIFICATION	1.8060053875845237E-7	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.999999430204202	WITHOUT_CLASSIFICATION	5.697957979352475E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999996253266736	WITHOUT_CLASSIFICATION	3.7467332633715707E-7	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999988301649534	WITHOUT_CLASSIFICATION	1.1698350466062495E-6	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999959525005335	WITHOUT_CLASSIFICATION	4.047499466466229E-6	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999998885129192	WITHOUT_CLASSIFICATION	1.1148708075523767E-7	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999957656634386	WITHOUT_CLASSIFICATION	4.2343365612908705E-6	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999690327486253	WITHOUT_CLASSIFICATION	3.0967251374692536E-5	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.999930523321454	WITHOUT_CLASSIFICATION	6.947667854598754E-5	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999955200223455	WITHOUT_CLASSIFICATION	4.479977654534632E-6	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999987361056315	WITHOUT_CLASSIFICATION	1.2638943684794615E-6	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999994041217515	WITHOUT_CLASSIFICATION	5.958782484845103E-7	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999391850135593	WITHOUT_CLASSIFICATION	6.081498644085722E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.999997381855003	WITHOUT_CLASSIFICATION	2.6181449970095355E-6	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999997478407097	WITHOUT_CLASSIFICATION	2.52159290349463E-7	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999993387033338	WITHOUT_CLASSIFICATION	6.612966662261334E-7	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.999999199747871	WITHOUT_CLASSIFICATION	8.002521291127879E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999998488463817	WITHOUT_CLASSIFICATION	1.5115361827341127E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999987803660177	WITHOUT_CLASSIFICATION	1.2196339822637112E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.999989462754754	WITHOUT_CLASSIFICATION	1.053724524591475E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9998414297730996	WITHOUT_CLASSIFICATION	1.5857022690029648E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999995856758342	WITHOUT_CLASSIFICATION	4.143241657317138E-7	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999927285070942	WITHOUT_CLASSIFICATION	7.271492905855532E-6	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999991286191954	WITHOUT_CLASSIFICATION	8.713808047457649E-7	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999994491723405	WITHOUT_CLASSIFICATION	5.508276593930922E-7	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999997102891421	WITHOUT_CLASSIFICATION	2.897108578621718E-7	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999966820834781	WITHOUT_CLASSIFICATION	3.3179165218008266E-6	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999994502450161	WITHOUT_CLASSIFICATION	5.497549838816965E-7	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.999988709148162	WITHOUT_CLASSIFICATION	1.1290851837987143E-5	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999736225477629	WITHOUT_CLASSIFICATION	2.6377452237047664E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999998094407874	WITHOUT_CLASSIFICATION	1.9055921258368626E-7	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.999987839424297	WITHOUT_CLASSIFICATION	1.216057570289512E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999968869484033	WITHOUT_CLASSIFICATION	3.1130515968043904E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999968869484033	WITHOUT_CLASSIFICATION	3.1130515968043904E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999986355533861	WITHOUT_CLASSIFICATION	1.3644466139302635E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9998631280211961	WITHOUT_CLASSIFICATION	1.3687197880383572E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999996632084209	WITHOUT_CLASSIFICATION	3.367915790880401E-7	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999988279517473	WITHOUT_CLASSIFICATION	1.1720482526905232E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999986544458728	WITHOUT_CLASSIFICATION	1.3455541272750073E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999455605055	WITHOUT_CLASSIFICATION	5.443949442965652E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999999697479561	WITHOUT_CLASSIFICATION	3.025204393290412E-8	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999985609159996	WITHOUT_CLASSIFICATION	1.4390840004624318E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999997180075667	WITHOUT_CLASSIFICATION	2.819924333233597E-7	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999085065391	WITHOUT_CLASSIFICATION	9.149346092173327E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999996428605034	WITHOUT_CLASSIFICATION	3.5713949665429807E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999997451601573	WITHOUT_CLASSIFICATION	2.5483984269728466E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999067497112	WITHOUT_CLASSIFICATION	9.32502888232509E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999535666580773	WITHOUT_CLASSIFICATION	4.6433341922752936E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999968532162422	WITHOUT_CLASSIFICATION	3.1467837576899536E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999964154983728	WITHOUT_CLASSIFICATION	3.5845016271632366E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.999999075194846	WITHOUT_CLASSIFICATION	9.248051539609521E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.999999430944908	WITHOUT_CLASSIFICATION	5.6905509197644E-7	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999898191951	WITHOUT_CLASSIFICATION	1.0180804791996003E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999992177042477	WITHOUT_CLASSIFICATION	7.822957523189204E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999997433576077	WITHOUT_CLASSIFICATION	2.5664239242380753E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999980486786354	WITHOUT_CLASSIFICATION	1.9513213646123424E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999969946014817	WITHOUT_CLASSIFICATION	3.005398518408496E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999971202340636	WITHOUT_CLASSIFICATION	2.87976593625181E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997226009633	WITHOUT_CLASSIFICATION	2.773990367457173E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999959704548544	WITHOUT_CLASSIFICATION	4.029545145643742E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999945471267631	WITHOUT_CLASSIFICATION	5.4528732369294025E-6	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999984233634062	WITHOUT_CLASSIFICATION	1.5766365938533458E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999987109748811	WITHOUT_CLASSIFICATION	1.2890251189657873E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999999056360739	WITHOUT_CLASSIFICATION	9.436392618237564E-8	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999991259094082	WITHOUT_CLASSIFICATION	8.740905917211967E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999999201861703	WITHOUT_CLASSIFICATION	7.98138296762468E-8	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999988985182683	WITHOUT_CLASSIFICATION	1.1014817317434851E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999990068405257	WITHOUT_CLASSIFICATION	9.931594743496717E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999988956803825	WITHOUT_CLASSIFICATION	1.1043196175141571E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999944023745226	WITHOUT_CLASSIFICATION	5.5976254773614065E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999999430178561	WITHOUT_CLASSIFICATION	5.698214390476191E-7	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999873658988859	WITHOUT_CLASSIFICATION	1.263410111405602E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999998108075907	WITHOUT_CLASSIFICATION	1.8919240925234884E-7	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999995570763571	WITHOUT_CLASSIFICATION	4.4292364285772486E-7	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999913807422693	WITHOUT_CLASSIFICATION	8.619257730621097E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9997585867195155	WITHOUT_CLASSIFICATION	2.414132804844426E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999998072521145	WITHOUT_CLASSIFICATION	1.9274788552760153E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999949753445113	WITHOUT_CLASSIFICATION	5.024655488786941E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999994350064826	WITHOUT_CLASSIFICATION	5.649935174228911E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999663490712732	WITHOUT_CLASSIFICATION	3.365092872679569E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999986355533861	WITHOUT_CLASSIFICATION	1.3644466139302635E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9998631280211961	WITHOUT_CLASSIFICATION	1.3687197880383572E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999996632084209	WITHOUT_CLASSIFICATION	3.367915790880401E-7	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999988279517473	WITHOUT_CLASSIFICATION	1.1720482526905232E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999999697479561	WITHOUT_CLASSIFICATION	3.025204393290412E-8	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999985609159996	WITHOUT_CLASSIFICATION	1.4390840004624318E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9892527777876268	WITHOUT_CLASSIFICATION	0.010747222212373246	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999998931302219	WITHOUT_CLASSIFICATION	1.0686977817850104E-7	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999996859279107	WITHOUT_CLASSIFICATION	3.140720893275581E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999996428605034	WITHOUT_CLASSIFICATION	3.5713949665429807E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999997451601573	WITHOUT_CLASSIFICATION	2.5483984269728466E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999067497112	WITHOUT_CLASSIFICATION	9.32502888232509E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999535666580773	WITHOUT_CLASSIFICATION	4.6433341922752936E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999964154983728	WITHOUT_CLASSIFICATION	3.5845016271632366E-6	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999993757888656	WITHOUT_CLASSIFICATION	6.242111344053032E-7	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999995186689707	WITHOUT_CLASSIFICATION	4.813310292394758E-7	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999968802549136	WITHOUT_CLASSIFICATION	3.1197450863801914E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999976535698768	WITHOUT_CLASSIFICATION	2.346430123167857E-6	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.999999542404859	WITHOUT_CLASSIFICATION	4.5759514094892134E-7	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999998410886878	WITHOUT_CLASSIFICATION	1.5891131217787904E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.999999312714808	WITHOUT_CLASSIFICATION	6.872851919591097E-7	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999994800093954	WITHOUT_CLASSIFICATION	5.19990604646868E-7	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999971850661217	WITHOUT_CLASSIFICATION	2.8149338782623115E-6	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999988978208748	WITHOUT_CLASSIFICATION	1.1021791251115458E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999971850661217	WITHOUT_CLASSIFICATION	2.8149338782623115E-6	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9995069704517949	WITHOUT_CLASSIFICATION	4.930295482050252E-4	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.999997856795283	WITHOUT_CLASSIFICATION	2.143204716954736E-6	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998909436695018	WITHOUT_CLASSIFICATION	1.0905633049817098E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998909436695018	WITHOUT_CLASSIFICATION	1.0905633049817098E-4	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999989598348622	WITHOUT_CLASSIFICATION	1.0401651377200867E-6	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999994978171314	WITHOUT_CLASSIFICATION	5.02182868556598E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999999340779067	WITHOUT_CLASSIFICATION	6.592209335525731E-8	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999993583580973	WITHOUT_CLASSIFICATION	6.416419027987227E-7	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9999751227577292	WITHOUT_CLASSIFICATION	2.487724227073518E-5	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999989757960349	WITHOUT_CLASSIFICATION	1.0242039650835352E-6	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999765349958818	WITHOUT_CLASSIFICATION	2.346500411821215E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.999994873009193	WITHOUT_CLASSIFICATION	5.126990806951089E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999980314105414	WITHOUT_CLASSIFICATION	1.9685894585788655E-6	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999949788955406	WITHOUT_CLASSIFICATION	5.0211044594293825E-6	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999999404338797	WITHOUT_CLASSIFICATION	5.9566120177459885E-8	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999531229102877	WITHOUT_CLASSIFICATION	4.6877089712351255E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999984636819287	WITHOUT_CLASSIFICATION	1.5363180713479184E-6	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999984636819287	WITHOUT_CLASSIFICATION	1.5363180713479184E-6	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999999613683118	WITHOUT_CLASSIFICATION	3.8631688198273053E-8	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999950518371107	WITHOUT_CLASSIFICATION	4.948162889348188E-6	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999897078453585	WITHOUT_CLASSIFICATION	1.0292154641540747E-5	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9999538165948504	WITHOUT_CLASSIFICATION	4.6183405149503744E-5	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9998497852543157	WITHOUT_CLASSIFICATION	1.502147456844122E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999919448236586	WITHOUT_CLASSIFICATION	8.055176341363066E-6	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999930300141406	WITHOUT_CLASSIFICATION	6.969985859383213E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999940364764471	WITHOUT_CLASSIFICATION	5.963523552951449E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999110040176	WITHOUT_CLASSIFICATION	8.89959823121264E-8	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999979128977062	WITHOUT_CLASSIFICATION	2.087102293813252E-6	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999914085303135	WITHOUT_CLASSIFICATION	8.591469686375569E-6	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999990935092422	WITHOUT_CLASSIFICATION	9.064907578287566E-7	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999176396992839	WITHOUT_CLASSIFICATION	8.236030071603946E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9999948412618431	WITHOUT_CLASSIFICATION	5.15873815683266E-6	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999983351250483	WITHOUT_CLASSIFICATION	1.6648749516284205E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999991444583709	WITHOUT_CLASSIFICATION	8.555416291572772E-7	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.999985211191772	WITHOUT_CLASSIFICATION	1.4788808227965318E-5	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999948191573899	WITHOUT_CLASSIFICATION	5.180842610094318E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999989429592785	WITHOUT_CLASSIFICATION	1.0570407215549002E-6	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9999974510560389	WITHOUT_CLASSIFICATION	2.5489439610547374E-6	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999983366687908	WITHOUT_CLASSIFICATION	1.6633312092795711E-6	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999484548922505	WITHOUT_CLASSIFICATION	5.1545107749641913E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999965485636375	WITHOUT_CLASSIFICATION	3.451436362494101E-6	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999995699173606	WITHOUT_CLASSIFICATION	4.300826394593029E-7	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999973864765054	WITHOUT_CLASSIFICATION	2.6135234946323477E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999829321126036	WITHOUT_CLASSIFICATION	1.7067887396439196E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999829321126036	WITHOUT_CLASSIFICATION	1.7067887396439196E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999933589788946	WITHOUT_CLASSIFICATION	6.641021105437027E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999995049196944	WITHOUT_CLASSIFICATION	4.950803056847412E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999951563839308	WITHOUT_CLASSIFICATION	4.8436160692845635E-6	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999980803913472	WITHOUT_CLASSIFICATION	1.919608652799394E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999824048723366	WITHOUT_CLASSIFICATION	1.7595127663346542E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999871401726924	WITHOUT_CLASSIFICATION	1.2859827307570335E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999967242742517	WITHOUT_CLASSIFICATION	3.275725748251981E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9999966751398582	WITHOUT_CLASSIFICATION	3.3248601416280227E-6	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999999889203863	WITHOUT_CLASSIFICATION	1.107961371251076E-8	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999982600929425	WITHOUT_CLASSIFICATION	1.7399070575561812E-6	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999995220978578	WITHOUT_CLASSIFICATION	4.779021422269364E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999977001000415	WITHOUT_CLASSIFICATION	2.2998999583866653E-6	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999999028394583	WITHOUT_CLASSIFICATION	9.71605416184594E-8	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999993322409428	WITHOUT_CLASSIFICATION	6.677590571229222E-7	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999420825659	WITHOUT_CLASSIFICATION	5.791743395348338E-8	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999922147131671	WITHOUT_CLASSIFICATION	7.785286832827432E-6	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999970320039	WITHOUT_CLASSIFICATION	2.967996068133109E-9	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9993950631449287	WITHOUT_CLASSIFICATION	6.049368550713976E-4	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9999591825947368	WITHOUT_CLASSIFICATION	4.0817405263167716E-5	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.999999405151287	WITHOUT_CLASSIFICATION	5.948487130097632E-7	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999967680694469	WITHOUT_CLASSIFICATION	3.231930552968425E-6	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999080751804	WITHOUT_CLASSIFICATION	9.192481957823627E-8	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999959704548544	WITHOUT_CLASSIFICATION	4.029545145643742E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999995504684213	WITHOUT_CLASSIFICATION	4.495315787057783E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9997585867195155	WITHOUT_CLASSIFICATION	2.414132804844426E-4	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999998410886878	WITHOUT_CLASSIFICATION	1.5891131217787904E-7	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999378305187114	WITHOUT_CLASSIFICATION	6.216948128862249E-5	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999997440624666	WITHOUT_CLASSIFICATION	2.5593753339999283E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999980486786354	WITHOUT_CLASSIFICATION	1.9513213646123424E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999989344804965	WITHOUT_CLASSIFICATION	1.0655195035374923E-6	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.99999948536722	WITHOUT_CLASSIFICATION	5.146327799466878E-7	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999998923272133	WITHOUT_CLASSIFICATION	1.0767278658299281E-7	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999983221491667	WITHOUT_CLASSIFICATION	1.6778508332041639E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9997585867195155	WITHOUT_CLASSIFICATION	2.414132804844426E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999908293214722	WITHOUT_CLASSIFICATION	9.17067852786519E-6	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999814350315058	WITHOUT_CLASSIFICATION	1.856496849417089E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999992562683828	WITHOUT_CLASSIFICATION	7.43731617222464E-7	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.999999317452231	WITHOUT_CLASSIFICATION	6.825477689309636E-7	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999979413158663	WITHOUT_CLASSIFICATION	2.058684133763863E-6	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9999943205777213	WITHOUT_CLASSIFICATION	5.679422278686278E-6	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999999250577313	WITHOUT_CLASSIFICATION	7.494226870577454E-8	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999998620294468	WITHOUT_CLASSIFICATION	1.3797055325315187E-7	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999941499641891	WITHOUT_CLASSIFICATION	5.850035810921261E-6	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999936071879924	WITHOUT_CLASSIFICATION	6.392812007562944E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999999876656185	WITHOUT_CLASSIFICATION	1.2334381502068183E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999999876656185	WITHOUT_CLASSIFICATION	1.2334381502068183E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999999876656185	WITHOUT_CLASSIFICATION	1.2334381502068183E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999969149613346	WITHOUT_CLASSIFICATION	3.085038665471197E-6	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9999992024424266	WITHOUT_CLASSIFICATION	7.975575733969759E-7	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999995523573456	WITHOUT_CLASSIFICATION	4.476426544145875E-7	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999275204354	WITHOUT_CLASSIFICATION	7.247956452749978E-8	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999969476654358	WITHOUT_CLASSIFICATION	3.052334564248167E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999995180096279	WITHOUT_CLASSIFICATION	4.819903720363624E-7	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999896352494445	WITHOUT_CLASSIFICATION	1.0364750555448619E-5	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9999994245017311	WITHOUT_CLASSIFICATION	5.75498268934032E-7	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999978938201043	WITHOUT_CLASSIFICATION	2.1061798957092464E-6	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999967211547489	WITHOUT_CLASSIFICATION	3.27884525116246E-6	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999834357449	WITHOUT_CLASSIFICATION	1.656425511689317E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999990937945143	WITHOUT_CLASSIFICATION	9.062054857720344E-7	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999861370222423	WITHOUT_CLASSIFICATION	1.3862977757679673E-5	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999986676755895	WITHOUT_CLASSIFICATION	1.3323244104252E-6	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999877069948073	WITHOUT_CLASSIFICATION	1.2293005192596611E-5	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999999205764476	WITHOUT_CLASSIFICATION	7.942355238178348E-8	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999912236620073	WITHOUT_CLASSIFICATION	8.776337992702218E-6	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999968696923374	WITHOUT_CLASSIFICATION	3.1303076626390406E-6	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999990345730874	WITHOUT_CLASSIFICATION	9.65426912695436E-7	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998810020080352	WITHOUT_CLASSIFICATION	1.1899799196471555E-4	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999983855270828	WITHOUT_CLASSIFICATION	1.614472917214778E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999820308577317	WITHOUT_CLASSIFICATION	1.796914226828745E-5	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999988821526705	WITHOUT_CLASSIFICATION	1.1178473294910652E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999994967708854	WITHOUT_CLASSIFICATION	5.032291147226696E-7	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999995145364029	WITHOUT_CLASSIFICATION	4.85463597196053E-7	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999997356679272	WITHOUT_CLASSIFICATION	2.643320727865634E-7	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999998606094525	WITHOUT_CLASSIFICATION	1.39390547513901E-7	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999998203935018	WITHOUT_CLASSIFICATION	1.7960649819551866E-7	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999850426739666	WITHOUT_CLASSIFICATION	1.4957326033474386E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.999999919701616	WITHOUT_CLASSIFICATION	8.029838412197867E-8	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999981646253582	WITHOUT_CLASSIFICATION	1.8353746417569322E-6	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999997514462874	WITHOUT_CLASSIFICATION	2.4855371265967435E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999993880116081	WITHOUT_CLASSIFICATION	6.119883918760527E-7	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999998940034439	WITHOUT_CLASSIFICATION	1.0599655612572397E-7	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999991890589222	WITHOUT_CLASSIFICATION	8.109410778836043E-7	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9999989074158389	WITHOUT_CLASSIFICATION	1.0925841610946277E-6	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.999997719242684	WITHOUT_CLASSIFICATION	2.2807573160879847E-6	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9998667425505382	WITHOUT_CLASSIFICATION	1.3325744946175394E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999978481324456	WITHOUT_CLASSIFICATION	2.1518675544204044E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999978481324456	WITHOUT_CLASSIFICATION	2.1518675544204044E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999976385545006	WITHOUT_CLASSIFICATION	2.36144549927843E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999976385545006	WITHOUT_CLASSIFICATION	2.36144549927843E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999990064198487	WITHOUT_CLASSIFICATION	9.935801511900505E-7	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999992776777115	WITHOUT_CLASSIFICATION	7.22322288494397E-7	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999999494793709	WITHOUT_CLASSIFICATION	5.0520629125706304E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.999997423111065	WITHOUT_CLASSIFICATION	2.5768889349849495E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.999997423111065	WITHOUT_CLASSIFICATION	2.5768889349849495E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.999997423111065	WITHOUT_CLASSIFICATION	2.5768889349849495E-6	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999916222979859	WITHOUT_CLASSIFICATION	8.377702014014555E-6	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999955504016739	WITHOUT_CLASSIFICATION	4.449598326240033E-6	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999721828913382	WITHOUT_CLASSIFICATION	2.7817108661860263E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999964566025846	WITHOUT_CLASSIFICATION	3.543397415479019E-6	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999887206219983	WITHOUT_CLASSIFICATION	1.1279378001629575E-5	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999993720768185	WITHOUT_CLASSIFICATION	6.279231815361264E-7	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.999995155521549	WITHOUT_CLASSIFICATION	4.844478450918485E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999523520923406	WITHOUT_CLASSIFICATION	4.764790765932666E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999523520923406	WITHOUT_CLASSIFICATION	4.764790765932666E-5	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999999073283911	WITHOUT_CLASSIFICATION	9.26716088875456E-8	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999859300604665	WITHOUT_CLASSIFICATION	1.4069939533481856E-5	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9998244376921285	WITHOUT_CLASSIFICATION	1.7556230787155064E-4	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9998948376843869	WITHOUT_CLASSIFICATION	1.051623156131023E-4	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999984487867167	WITHOUT_CLASSIFICATION	1.551213283390989E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9996439775533739	WITHOUT_CLASSIFICATION	3.560224466261361E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999949213393035	WITHOUT_CLASSIFICATION	5.078660696520876E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999968869484033	WITHOUT_CLASSIFICATION	3.1130515968043904E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999986544458728	WITHOUT_CLASSIFICATION	1.3455541272750073E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999455605055	WITHOUT_CLASSIFICATION	5.443949442965652E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999085065391	WITHOUT_CLASSIFICATION	9.149346092173327E-8	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999968532162422	WITHOUT_CLASSIFICATION	3.1467837576899536E-6	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999998033238078	WITHOUT_CLASSIFICATION	1.9667619220151185E-7	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999845844203983	WITHOUT_CLASSIFICATION	1.5415579601729456E-5	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999985579447536	WITHOUT_CLASSIFICATION	1.4420552463300193E-6	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.999999312714808	WITHOUT_CLASSIFICATION	6.872851919591097E-7	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.999931044565864	WITHOUT_CLASSIFICATION	6.895543413601946E-5	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999998448973162	WITHOUT_CLASSIFICATION	1.5510268382135856E-7	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999999613683118	WITHOUT_CLASSIFICATION	3.8631688198273053E-8	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999993698940772	WITHOUT_CLASSIFICATION	6.301059227616728E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999930083094396	WITHOUT_CLASSIFICATION	6.9916905603072E-6	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999987339980791	WITHOUT_CLASSIFICATION	1.2660019208075348E-6	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999972629121117	WITHOUT_CLASSIFICATION	2.737087888415081E-6	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999974615021036	WITHOUT_CLASSIFICATION	2.5384978964978304E-6	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999966341178448	WITHOUT_CLASSIFICATION	3.3658821551604213E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999997994283518	WITHOUT_CLASSIFICATION	2.0057164810481768E-7	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999997580581732	WITHOUT_CLASSIFICATION	2.419418268194199E-7	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999996441216306	WITHOUT_CLASSIFICATION	3.5587836949045595E-7	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999985696506469	WITHOUT_CLASSIFICATION	1.4303493530868315E-6	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999985696506469	WITHOUT_CLASSIFICATION	1.4303493530868315E-6	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999998610626295	WITHOUT_CLASSIFICATION	1.3893737046370362E-7	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999959795522924	WITHOUT_CLASSIFICATION	4.020447707623793E-6	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999712588245558	WITHOUT_CLASSIFICATION	2.8741175444141797E-5	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.999873494106573	WITHOUT_CLASSIFICATION	1.2650589342697182E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.999873494106573	WITHOUT_CLASSIFICATION	1.2650589342697182E-4	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999635357229694	WITHOUT_CLASSIFICATION	3.646427703063301E-5	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9998464975481329	WITHOUT_CLASSIFICATION	1.5350245186695354E-4	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999919795117466	WITHOUT_CLASSIFICATION	8.02048825342107E-6	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999999296860931	WITHOUT_CLASSIFICATION	7.031390698376564E-8	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999980994664762	WITHOUT_CLASSIFICATION	1.900533523802309E-6	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999996306408604	WITHOUT_CLASSIFICATION	3.693591395841117E-7	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999999879309869	WITHOUT_CLASSIFICATION	1.206901316421822E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999997907915577	WITHOUT_CLASSIFICATION	2.0920844236151606E-7	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999998549513662	WITHOUT_CLASSIFICATION	1.4504863379608877E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.999995781381768	WITHOUT_CLASSIFICATION	4.218618231956087E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999989597356095	WITHOUT_CLASSIFICATION	1.0402643904720324E-6	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999965380367191	WITHOUT_CLASSIFICATION	3.4619632809375387E-6	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999958197756099	WITHOUT_CLASSIFICATION	4.18022439007145E-6	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999552162583	WITHOUT_CLASSIFICATION	4.4783741804680995E-8	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999991100733521	WITHOUT_CLASSIFICATION	8.899266480484128E-7	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999995483212085	WITHOUT_CLASSIFICATION	4.516787914647651E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999995676975282	WITHOUT_CLASSIFICATION	4.3230247178637887E-7	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999989864858935	WITHOUT_CLASSIFICATION	1.013514106523083E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999987954557797	WITHOUT_CLASSIFICATION	1.20454422017636E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999975686330632	WITHOUT_CLASSIFICATION	2.431366936752431E-6	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999766014461366	WITHOUT_CLASSIFICATION	2.339855386343122E-5	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999995563423959	WITHOUT_CLASSIFICATION	4.4365760418454967E-7	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999992504136291	WITHOUT_CLASSIFICATION	7.495863709242204E-7	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9991155798785912	WITHOUT_CLASSIFICATION	8.844201214087285E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999810979387	WITHOUT_CLASSIFICATION	1.8902061306143242E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999810979387	WITHOUT_CLASSIFICATION	1.8902061306143242E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999810979387	WITHOUT_CLASSIFICATION	1.8902061306143242E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999810979387	WITHOUT_CLASSIFICATION	1.8902061306143242E-7	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999689638722	WITHOUT_CLASSIFICATION	3.103612785162663E-8	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999997145557128	WITHOUT_CLASSIFICATION	2.8544428716902064E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999914084245003	WITHOUT_CLASSIFICATION	8.591575499715718E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999914084245003	WITHOUT_CLASSIFICATION	8.591575499715718E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999914084245003	WITHOUT_CLASSIFICATION	8.591575499715718E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999925959653114	WITHOUT_CLASSIFICATION	7.404034688482615E-6	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999998113910741	WITHOUT_CLASSIFICATION	1.886089259609687E-7	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999958616509681	WITHOUT_CLASSIFICATION	4.138349031874517E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999953240298541	WITHOUT_CLASSIFICATION	4.675970145933199E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999953240298541	WITHOUT_CLASSIFICATION	4.675970145933199E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999989429592785	WITHOUT_CLASSIFICATION	1.0570407215549002E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999989429592785	WITHOUT_CLASSIFICATION	1.0570407215549002E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9997416545579276	WITHOUT_CLASSIFICATION	2.5834544207230524E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9997416545579276	WITHOUT_CLASSIFICATION	2.5834544207230524E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9985394783708746	WITHOUT_CLASSIFICATION	0.001460521629125342	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.999998698892319	WITHOUT_CLASSIFICATION	1.3011076810446487E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999962951162245	WITHOUT_CLASSIFICATION	3.704883775499497E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999959386449162	WITHOUT_CLASSIFICATION	4.061355083776838E-6	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999818311130243	WITHOUT_CLASSIFICATION	1.816888697572945E-5	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999983430854107	WITHOUT_CLASSIFICATION	1.6569145892156574E-6	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999956332256891	WITHOUT_CLASSIFICATION	4.366774310985384E-6	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.999977130419233	WITHOUT_CLASSIFICATION	2.2869580766974087E-5	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999847307073105	WITHOUT_CLASSIFICATION	1.5269292689533423E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.999996528813659	WITHOUT_CLASSIFICATION	3.4711863411316143E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999960376114945	WITHOUT_CLASSIFICATION	3.962388505472548E-6	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999963656027387	WITHOUT_CLASSIFICATION	3.6343972612055076E-6	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999995330237234	WITHOUT_CLASSIFICATION	4.669762766122769E-7	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.999993744231621	WITHOUT_CLASSIFICATION	6.255768379012242E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999957478184895	WITHOUT_CLASSIFICATION	4.252181510471028E-6	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999827402251251	WITHOUT_CLASSIFICATION	1.7259774874922404E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.999996783740538	WITHOUT_CLASSIFICATION	3.2162594619354787E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999970612037412	WITHOUT_CLASSIFICATION	2.9387962587500133E-6	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999978484738288	WITHOUT_CLASSIFICATION	2.151526171225596E-6	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999449926502496	WITHOUT_CLASSIFICATION	5.500734975029896E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999951229694899	WITHOUT_CLASSIFICATION	4.877030510172225E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999951229694899	WITHOUT_CLASSIFICATION	4.877030510172225E-6	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999927893272939	WITHOUT_CLASSIFICATION	7.2106727060794036E-6	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999982872812573	WITHOUT_CLASSIFICATION	1.7127187427550362E-6	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.999804782803958	WITHOUT_CLASSIFICATION	1.952171960419958E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9998338250513148	WITHOUT_CLASSIFICATION	1.6617494868524538E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9997336569891818	WITHOUT_CLASSIFICATION	2.6634301081825704E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9998778964278151	WITHOUT_CLASSIFICATION	1.2210357218496974E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9998688018273184	WITHOUT_CLASSIFICATION	1.3119817268160893E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9998358263538869	WITHOUT_CLASSIFICATION	1.641736461131902E-4	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9998526306577891	WITHOUT_CLASSIFICATION	1.473693422109468E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9998152193333845	WITHOUT_CLASSIFICATION	1.8478066661555453E-4	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9998228039855884	WITHOUT_CLASSIFICATION	1.7719601441151356E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9998356168310198	WITHOUT_CLASSIFICATION	1.6438316898018172E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.999859081221142	WITHOUT_CLASSIFICATION	1.4091877885804584E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9997325641332543	WITHOUT_CLASSIFICATION	2.674358667457883E-4	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9998017255152436	WITHOUT_CLASSIFICATION	1.9827448475634863E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9997724235359721	WITHOUT_CLASSIFICATION	2.2757646402786768E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999640978140945	WITHOUT_CLASSIFICATION	3.590218590558632E-5	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999898135081474	WITHOUT_CLASSIFICATION	1.0186491852579373E-5	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999979268621926	WITHOUT_CLASSIFICATION	2.0731378074970886E-6	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.999901802455601	WITHOUT_CLASSIFICATION	9.819754439907088E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999891739569035	WITHOUT_CLASSIFICATION	1.0826043096580793E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999891739569035	WITHOUT_CLASSIFICATION	1.0826043096580793E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999891739569035	WITHOUT_CLASSIFICATION	1.0826043096580793E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999891739569035	WITHOUT_CLASSIFICATION	1.0826043096580793E-5	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9999448453138062	WITHOUT_CLASSIFICATION	5.515468619368899E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999906011317365	WITHOUT_CLASSIFICATION	9.398868263437709E-6	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999750474711017	WITHOUT_CLASSIFICATION	2.49525288983156E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999875360067642	WITHOUT_CLASSIFICATION	1.2463993235770424E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999875360067642	WITHOUT_CLASSIFICATION	1.2463993235770424E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999987345901795	WITHOUT_CLASSIFICATION	1.2654098204896838E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999998897921076	WITHOUT_CLASSIFICATION	1.1020789238421429E-7	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999998897921076	WITHOUT_CLASSIFICATION	1.1020789238421429E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999977015437794	WITHOUT_CLASSIFICATION	2.298456220575858E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999977015437794	WITHOUT_CLASSIFICATION	2.298456220575858E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999979104797585	WITHOUT_CLASSIFICATION	2.089520241455515E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999973114469858	WITHOUT_CLASSIFICATION	2.6885530143549047E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999959449737655	WITHOUT_CLASSIFICATION	4.055026234493293E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999984288604695	WITHOUT_CLASSIFICATION	1.571139530497742E-6	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999982700876697	WITHOUT_CLASSIFICATION	1.729912330286754E-6	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999989853709322	WITHOUT_CLASSIFICATION	1.0146290676824962E-6	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999994481929748	WITHOUT_CLASSIFICATION	5.518070252538841E-7	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999945688643901	WITHOUT_CLASSIFICATION	5.431135609972769E-6	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999121607105833	WITHOUT_CLASSIFICATION	8.783928941670455E-5	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999121607105833	WITHOUT_CLASSIFICATION	8.783928941670455E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999963527534973	WITHOUT_CLASSIFICATION	3.647246502696237E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999986194967477	WITHOUT_CLASSIFICATION	1.3805032523118029E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9994119058944321	WITHOUT_CLASSIFICATION	5.88094105567963E-4	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999997494090188	WITHOUT_CLASSIFICATION	2.5059098116781177E-7	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999972778425672	WITHOUT_CLASSIFICATION	2.72215743272933E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999988738675104	WITHOUT_CLASSIFICATION	1.1261324895801336E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999988738675104	WITHOUT_CLASSIFICATION	1.1261324895801336E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999988738675104	WITHOUT_CLASSIFICATION	1.1261324895801336E-6	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999211400904	WITHOUT_CLASSIFICATION	7.885990959803244E-8	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999211400904	WITHOUT_CLASSIFICATION	7.885990959803244E-8	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999973189145371	WITHOUT_CLASSIFICATION	2.6810854627623856E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999995558838385	WITHOUT_CLASSIFICATION	4.441161614919957E-7	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999995558838385	WITHOUT_CLASSIFICATION	4.441161614919957E-7	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999998793636866	WITHOUT_CLASSIFICATION	1.206363133534487E-7	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999996916595091	WITHOUT_CLASSIFICATION	3.0834049087121134E-7	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999980803913472	WITHOUT_CLASSIFICATION	1.919608652799394E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999977425555928	WITHOUT_CLASSIFICATION	2.2574444072071803E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999886822856101	WITHOUT_CLASSIFICATION	1.1317714389844093E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999886822856101	WITHOUT_CLASSIFICATION	1.1317714389844093E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999882469587632	WITHOUT_CLASSIFICATION	1.1753041236733653E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999987891247814	WITHOUT_CLASSIFICATION	1.2108752186116144E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999783523293911	WITHOUT_CLASSIFICATION	2.164767060884385E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999837392904308	WITHOUT_CLASSIFICATION	1.626070956913001E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999883138129654	WITHOUT_CLASSIFICATION	1.1686187034676917E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999895040490198	WITHOUT_CLASSIFICATION	1.0495950980317616E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999826023101115	WITHOUT_CLASSIFICATION	1.739768988851862E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999826023101115	WITHOUT_CLASSIFICATION	1.739768988851862E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999826023101115	WITHOUT_CLASSIFICATION	1.739768988851862E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999864507827118	WITHOUT_CLASSIFICATION	1.3549217288181553E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999868154916963	WITHOUT_CLASSIFICATION	1.3184508303706437E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999938055794886	WITHOUT_CLASSIFICATION	6.194420511390042E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999938055794886	WITHOUT_CLASSIFICATION	6.194420511390042E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999946239956051	WITHOUT_CLASSIFICATION	5.376004394850334E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889844012393	WITHOUT_CLASSIFICATION	1.101559876067959E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999839566666711	WITHOUT_CLASSIFICATION	1.604333332898245E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999805344934997	WITHOUT_CLASSIFICATION	1.9465506500299002E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999864036512449	WITHOUT_CLASSIFICATION	1.3596348755035008E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999992083512312	WITHOUT_CLASSIFICATION	7.916487687277297E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999944811614847	WITHOUT_CLASSIFICATION	5.51883851525357E-6	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999897609504768	WITHOUT_CLASSIFICATION	1.0239049523277141E-5	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999983841241502	WITHOUT_CLASSIFICATION	1.6158758497838443E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999909329443812	WITHOUT_CLASSIFICATION	9.067055618732764E-6	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999993130510145	WITHOUT_CLASSIFICATION	6.869489854136768E-7	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999952480219625	WITHOUT_CLASSIFICATION	4.751978037521321E-6	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999962655677443	WITHOUT_CLASSIFICATION	3.73443225553571E-6	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.999958897224087	WITHOUT_CLASSIFICATION	4.110277591298723E-5	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999593238558546	WITHOUT_CLASSIFICATION	4.0676144145287505E-5	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999913454114239	WITHOUT_CLASSIFICATION	8.654588576027404E-6	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999968143915217	WITHOUT_CLASSIFICATION	3.18560847841167E-6	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999986204373633	WITHOUT_CLASSIFICATION	1.3795626366875139E-6	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999988532925729	WITHOUT_CLASSIFICATION	1.146707427160941E-6	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.999984926726132	WITHOUT_CLASSIFICATION	1.5073273868030875E-5	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999434053769592	WITHOUT_CLASSIFICATION	5.6594623040778346E-5	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999949062686867	WITHOUT_CLASSIFICATION	5.093731313249541E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999997035483845	WITHOUT_CLASSIFICATION	2.964516153948064E-7	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999964908512	WITHOUT_CLASSIFICATION	3.509148800030509E-6	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999999038485207	WITHOUT_CLASSIFICATION	9.615147929668152E-8	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999893013466368	WITHOUT_CLASSIFICATION	1.0698653363352151E-5	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.999999326723937	WITHOUT_CLASSIFICATION	6.732760629497473E-7	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9998769277806707	WITHOUT_CLASSIFICATION	1.230722193292435E-4	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9998810952367002	WITHOUT_CLASSIFICATION	1.1890476329986231E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999896233290801	WITHOUT_CLASSIFICATION	1.0376670919877855E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999900973265796	WITHOUT_CLASSIFICATION	9.902673420433028E-6	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999487695150847	WITHOUT_CLASSIFICATION	5.123048491522596E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999995954506099	WITHOUT_CLASSIFICATION	4.0454939009215265E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999980132006083	WITHOUT_CLASSIFICATION	1.9867993915621175E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999994805937835	WITHOUT_CLASSIFICATION	5.194062164551617E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999890136144965	WITHOUT_CLASSIFICATION	1.0986385503550871E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999372096008	WITHOUT_CLASSIFICATION	6.279039920109021E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997993761	WITHOUT_CLASSIFICATION	2.00623900158251E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999995631519403	WITHOUT_CLASSIFICATION	4.368480596931236E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999686447095761	WITHOUT_CLASSIFICATION	3.1355290423871774E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999986332106269	WITHOUT_CLASSIFICATION	1.3667893730963415E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999961879604837	WITHOUT_CLASSIFICATION	3.8120395163267183E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999984984330342	WITHOUT_CLASSIFICATION	1.5015669657516256E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999965919507021	WITHOUT_CLASSIFICATION	3.408049297812746E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999993723923485	WITHOUT_CLASSIFICATION	6.276076515645166E-7	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9998794228792739	WITHOUT_CLASSIFICATION	1.2057712072618115E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999882388924701	WITHOUT_CLASSIFICATION	1.1761107529869904E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999994080598739	WITHOUT_CLASSIFICATION	5.919401261349255E-7	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999952868124385	WITHOUT_CLASSIFICATION	4.713187561431941E-6	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999998149655003	WITHOUT_CLASSIFICATION	1.8503449981530839E-7	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999988922961017	WITHOUT_CLASSIFICATION	1.1077038982485008E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999930100096381	WITHOUT_CLASSIFICATION	6.989990361890177E-6	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999983971562216	WITHOUT_CLASSIFICATION	1.6028437784458152E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999930100096381	WITHOUT_CLASSIFICATION	6.989990361890177E-6	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.999944495952104	WITHOUT_CLASSIFICATION	5.550404789605717E-5	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999993596964722	WITHOUT_CLASSIFICATION	6.403035277483059E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999978914619576	WITHOUT_CLASSIFICATION	2.1085380423752063E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999962783428609	WITHOUT_CLASSIFICATION	3.721657139225726E-6	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999962418042714	WITHOUT_CLASSIFICATION	3.758195728673288E-6	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.999993667086377	WITHOUT_CLASSIFICATION	6.3329136229666175E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999997390986941	WITHOUT_CLASSIFICATION	2.609013059905108E-7	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999722685832405	WITHOUT_CLASSIFICATION	2.7731416759454532E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999993130510145	WITHOUT_CLASSIFICATION	6.869489854136768E-7	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999295362205498	WITHOUT_CLASSIFICATION	7.046377945021511E-5	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9997795924514259	WITHOUT_CLASSIFICATION	2.20407548574081E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999988796923197	WITHOUT_CLASSIFICATION	1.1203076803445993E-6	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999002047699	WITHOUT_CLASSIFICATION	9.979523013115667E-8	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999383475486244	WITHOUT_CLASSIFICATION	6.165245137547783E-5	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9997190050529084	WITHOUT_CLASSIFICATION	2.809949470915022E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9997265427168405	WITHOUT_CLASSIFICATION	2.7345728315951174E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999895190742721	WITHOUT_CLASSIFICATION	1.0480925727765043E-5	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999967930547246	WITHOUT_CLASSIFICATION	3.206945275527444E-6	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.999999910260204	WITHOUT_CLASSIFICATION	8.97397959510663E-8	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999999668448711	WITHOUT_CLASSIFICATION	3.315512878220677E-8	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999998673363514	WITHOUT_CLASSIFICATION	1.3266364870160713E-7	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999951828863989	WITHOUT_CLASSIFICATION	4.817113601082348E-6	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999924875363804	WITHOUT_CLASSIFICATION	7.512463619560327E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999973543528192	WITHOUT_CLASSIFICATION	2.6456471807227484E-6	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999894432441024	WITHOUT_CLASSIFICATION	1.05567558976245E-5	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.999997239587915	WITHOUT_CLASSIFICATION	2.7604120851339875E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.999958681148209	WITHOUT_CLASSIFICATION	4.13188517909373E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.999958681148209	WITHOUT_CLASSIFICATION	4.13188517909373E-5	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999623693517988	WITHOUT_CLASSIFICATION	3.763064820115634E-5	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9999241960112961	WITHOUT_CLASSIFICATION	7.58039887038856E-5	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9999923555144236	WITHOUT_CLASSIFICATION	7.64448557651171E-6	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999897801341088	WITHOUT_CLASSIFICATION	1.0219865891218735E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999996856101515	WITHOUT_CLASSIFICATION	3.1438984850216286E-6	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9998949854230935	WITHOUT_CLASSIFICATION	1.0501457690656016E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9974708017635946	WITHOUT_CLASSIFICATION	0.0025291982364055287	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999981451783764	WITHOUT_CLASSIFICATION	1.854821623532299E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999992659958561	WITHOUT_CLASSIFICATION	7.340041439055377E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999267687024476	WITHOUT_CLASSIFICATION	7.323129755245013E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999401762988812	WITHOUT_CLASSIFICATION	5.9823701118876755E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999962871549906	WITHOUT_CLASSIFICATION	3.7128450095089126E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999733205956096	WITHOUT_CLASSIFICATION	2.6679404390361803E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9998737126998357	WITHOUT_CLASSIFICATION	1.2628730016435292E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999624640597816	WITHOUT_CLASSIFICATION	3.753594021835234E-5	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999676174081236	WITHOUT_CLASSIFICATION	3.238259187645166E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999979571703006	WITHOUT_CLASSIFICATION	2.042829699438926E-6	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999694919584089	WITHOUT_CLASSIFICATION	3.050804159104443E-5	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999549843608252	WITHOUT_CLASSIFICATION	4.501563917480313E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999996856101515	WITHOUT_CLASSIFICATION	3.1438984850216286E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999979571703006	WITHOUT_CLASSIFICATION	2.042829699438926E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999981451783764	WITHOUT_CLASSIFICATION	1.854821623532299E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999992659958561	WITHOUT_CLASSIFICATION	7.340041439055377E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.999995360003704	WITHOUT_CLASSIFICATION	4.6399962959098255E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999911920822574	WITHOUT_CLASSIFICATION	8.807917742552769E-6	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999912997676834	WITHOUT_CLASSIFICATION	8.70023231659613E-6	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999940579816538	WITHOUT_CLASSIFICATION	5.94201834621602E-6	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999965122415292	WITHOUT_CLASSIFICATION	3.4877584708936026E-6	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998442485290436	WITHOUT_CLASSIFICATION	1.5575147095638325E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998442485290436	WITHOUT_CLASSIFICATION	1.5575147095638325E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999832145527763	WITHOUT_CLASSIFICATION	1.678544722373676E-5	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999953395249417	WITHOUT_CLASSIFICATION	4.660475058304592E-6	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999893715314015	WITHOUT_CLASSIFICATION	1.0628468598476014E-5	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999936586618321	WITHOUT_CLASSIFICATION	6.341338167909002E-6	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999690287030075	WITHOUT_CLASSIFICATION	3.09712969925043E-5	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999968486459238	WITHOUT_CLASSIFICATION	3.1513540762221533E-6	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999979057423684	WITHOUT_CLASSIFICATION	2.0942576316029544E-5	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999957120652914	WITHOUT_CLASSIFICATION	4.287934708602298E-6	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999974922725678	WITHOUT_CLASSIFICATION	2.5077274322056542E-6	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999833346356224	WITHOUT_CLASSIFICATION	1.6665364377533487E-5	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999965878242393	WITHOUT_CLASSIFICATION	3.412175760741052E-6	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999937451078297	WITHOUT_CLASSIFICATION	6.254892170315584E-6	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999996731347459	WITHOUT_CLASSIFICATION	3.2686525408835963E-6	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999817731272435	WITHOUT_CLASSIFICATION	1.8226872756578434E-5	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999996268106161	WITHOUT_CLASSIFICATION	3.731893839096066E-6	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999979374868684	WITHOUT_CLASSIFICATION	2.0625131316822317E-6	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999877387649725	WITHOUT_CLASSIFICATION	1.226123502746532E-5	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999978937124929	WITHOUT_CLASSIFICATION	2.1062875070059082E-6	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999928965554536	WITHOUT_CLASSIFICATION	7.10344454634699E-6	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999965180207633	WITHOUT_CLASSIFICATION	3.4819792366323795E-6	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999793004633702	WITHOUT_CLASSIFICATION	2.069953662978798E-5	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999957618278157	WITHOUT_CLASSIFICATION	4.238172184362201E-6	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999911707626272	WITHOUT_CLASSIFICATION	8.829237372792447E-6	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999961284733914	WITHOUT_CLASSIFICATION	3.871526608596137E-6	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999742715639544	WITHOUT_CLASSIFICATION	2.5728436045566393E-5	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999994732153669	WITHOUT_CLASSIFICATION	5.267846331076868E-6	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999425829905728	WITHOUT_CLASSIFICATION	5.7417009427112536E-5	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999802544532325	WITHOUT_CLASSIFICATION	1.9745546767507716E-5	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999795036963207	WITHOUT_CLASSIFICATION	2.0496303679299523E-4	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999936471521393	WITHOUT_CLASSIFICATION	6.3528478606930855E-6	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9998314535186662	WITHOUT_CLASSIFICATION	1.685464813337554E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999894849095265	WITHOUT_CLASSIFICATION	1.0515090473384782E-5	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999901011371353	WITHOUT_CLASSIFICATION	9.89886286471281E-6	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999448029922517	WITHOUT_CLASSIFICATION	5.519700774826623E-5	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999886982571061	WITHOUT_CLASSIFICATION	1.1301742893954118E-5	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999930558509784	WITHOUT_CLASSIFICATION	6.944149021533476E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999612782361696	WITHOUT_CLASSIFICATION	3.872176383042724E-5	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999920717136104	WITHOUT_CLASSIFICATION	7.928286389578957E-6	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999926059892826	WITHOUT_CLASSIFICATION	7.394010717386087E-6	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999560452189195	WITHOUT_CLASSIFICATION	4.395478108062274E-5	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999991000215165	WITHOUT_CLASSIFICATION	8.999784834988807E-6	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999917775334972	WITHOUT_CLASSIFICATION	8.222466502826015E-6	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.99995415038725	WITHOUT_CLASSIFICATION	4.58496127500002E-5	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999887496213617	WITHOUT_CLASSIFICATION	1.125037863824705E-5	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999580611111296	WITHOUT_CLASSIFICATION	4.193888887025641E-5	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997151621605811	WITHOUT_CLASSIFICATION	2.848378394189132E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999416595022719	WITHOUT_CLASSIFICATION	5.834049772826999E-5	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999958151284613	WITHOUT_CLASSIFICATION	4.184871538662682E-6	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999995006023314	WITHOUT_CLASSIFICATION	4.993976685839066E-7	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999953799976358	WITHOUT_CLASSIFICATION	4.620002364199639E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999993542258561	WITHOUT_CLASSIFICATION	6.45774143971827E-7	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999976842866698	WITHOUT_CLASSIFICATION	2.315713330143029E-6	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999994966822671	WITHOUT_CLASSIFICATION	5.033177329445062E-7	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999887635529868	WITHOUT_CLASSIFICATION	1.1236447013209933E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999938055794886	WITHOUT_CLASSIFICATION	6.194420511390042E-6	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999962871549906	WITHOUT_CLASSIFICATION	3.7128450095089126E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999995904951101	WITHOUT_CLASSIFICATION	4.0950488987638556E-7	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999995252140257	WITHOUT_CLASSIFICATION	4.7478597437498904E-7	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999978164737343	WITHOUT_CLASSIFICATION	2.1835262657094013E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999950313275157	WITHOUT_CLASSIFICATION	4.968672484386199E-6	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999963368768187	WITHOUT_CLASSIFICATION	3.6631231812621667E-6	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999827553720263	WITHOUT_CLASSIFICATION	1.724462797376531E-5	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999986426241622	WITHOUT_CLASSIFICATION	1.3573758377993056E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953290940164	WITHOUT_CLASSIFICATION	4.670905983496415E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953290940164	WITHOUT_CLASSIFICATION	4.670905983496415E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999401762988812	WITHOUT_CLASSIFICATION	5.9823701118876755E-5	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999931278248162	WITHOUT_CLASSIFICATION	6.872175183848972E-6	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999996538668651	WITHOUT_CLASSIFICATION	3.461331350253459E-7	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999929756950116	WITHOUT_CLASSIFICATION	7.024304988484798E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999914562325163	WITHOUT_CLASSIFICATION	8.543767483614736E-6	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999823650822758	WITHOUT_CLASSIFICATION	1.7634917724110587E-5	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999826058750164	WITHOUT_CLASSIFICATION	1.73941249835216E-5	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999876917417643	WITHOUT_CLASSIFICATION	1.230825823578174E-5	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999933324210418	WITHOUT_CLASSIFICATION	6.66757895814595E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953290940164	WITHOUT_CLASSIFICATION	4.670905983496415E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999873511851463	WITHOUT_CLASSIFICATION	1.2648814853677504E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999912391176882	WITHOUT_CLASSIFICATION	8.760882311780261E-6	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999956627886193	WITHOUT_CLASSIFICATION	4.337211380732026E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999997497615779	WITHOUT_CLASSIFICATION	2.5023842217154115E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999959507377053	WITHOUT_CLASSIFICATION	4.049262294678185E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.99999368629512	WITHOUT_CLASSIFICATION	6.313704880084094E-6	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999781669765513	WITHOUT_CLASSIFICATION	2.183302344862672E-5	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999975009671751	WITHOUT_CLASSIFICATION	2.4990328248713337E-6	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999943548599031	WITHOUT_CLASSIFICATION	5.645140096905724E-6	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999998369483037	WITHOUT_CLASSIFICATION	1.6305169634465004E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999401762988812	WITHOUT_CLASSIFICATION	5.9823701118876755E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953290940164	WITHOUT_CLASSIFICATION	4.670905983496415E-6	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999956627886193	WITHOUT_CLASSIFICATION	4.337211380732026E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999997497615779	WITHOUT_CLASSIFICATION	2.5023842217154115E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999959507377053	WITHOUT_CLASSIFICATION	4.049262294678185E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999982211506533	WITHOUT_CLASSIFICATION	1.778849346645265E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999862270244155	WITHOUT_CLASSIFICATION	1.3772975584368293E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9998674542398697	WITHOUT_CLASSIFICATION	1.325457601303453E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999987100137271	WITHOUT_CLASSIFICATION	1.2899862728563555E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999910027607186	WITHOUT_CLASSIFICATION	8.99723928133372E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999910027607186	WITHOUT_CLASSIFICATION	8.99723928133372E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999910027607186	WITHOUT_CLASSIFICATION	8.99723928133372E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999993883007163	WITHOUT_CLASSIFICATION	6.11699283605077E-7	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999975985434236	WITHOUT_CLASSIFICATION	2.401456576411702E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999663933451771	WITHOUT_CLASSIFICATION	3.360665482278745E-5	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.999997049778369	WITHOUT_CLASSIFICATION	2.950221631016037E-6	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999968897205374	WITHOUT_CLASSIFICATION	3.1102794627868686E-6	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999998416515764	WITHOUT_CLASSIFICATION	1.583484235238319E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9998807953851504	WITHOUT_CLASSIFICATION	1.1920461484955062E-4	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999837095609807	WITHOUT_CLASSIFICATION	1.6290439019267935E-5	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999637598139	WITHOUT_CLASSIFICATION	3.6240186141075937E-8	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999998946117113	WITHOUT_CLASSIFICATION	1.0538828858620223E-7	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999922749580312	WITHOUT_CLASSIFICATION	7.72504196873575E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999999856109882	WITHOUT_CLASSIFICATION	1.4389011658085668E-8	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.999897524121882	WITHOUT_CLASSIFICATION	1.0247587811802186E-4	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999979756903704	WITHOUT_CLASSIFICATION	2.024309629557137E-6	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999934818639699	WITHOUT_CLASSIFICATION	6.518136030075032E-6	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999914389391494	WITHOUT_CLASSIFICATION	8.56106085045861E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9999089247083711	WITHOUT_CLASSIFICATION	9.107529162897713E-5	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9999704727564619	WITHOUT_CLASSIFICATION	2.952724353817587E-5	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999997155304693	WITHOUT_CLASSIFICATION	2.844695307276266E-7	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999974964019495	WITHOUT_CLASSIFICATION	2.5035980505785086E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999997184840624	WITHOUT_CLASSIFICATION	2.815159376000071E-7	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999999053879862	WITHOUT_CLASSIFICATION	9.461201375264713E-8	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999990139661699	WITHOUT_CLASSIFICATION	9.86033830134327E-7	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999999340648418	WITHOUT_CLASSIFICATION	6.593515832789754E-8	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999998240654002	WITHOUT_CLASSIFICATION	1.75934599832867E-7	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999968621897259	WITHOUT_CLASSIFICATION	3.1378102740481276E-6	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999998281688304	WITHOUT_CLASSIFICATION	1.718311695962936E-7	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.999997621719078	WITHOUT_CLASSIFICATION	2.378280922001916E-6	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999885019154602	WITHOUT_CLASSIFICATION	1.1498084539824188E-5	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999540110755252	WITHOUT_CLASSIFICATION	4.598892447485211E-5	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999988908879146	WITHOUT_CLASSIFICATION	1.109112085399407E-6	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999986751368487	WITHOUT_CLASSIFICATION	1.3248631513152067E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999970583458839	WITHOUT_CLASSIFICATION	2.9416541161130816E-6	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9999944568401371	WITHOUT_CLASSIFICATION	5.543159862920414E-6	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999988039788786	WITHOUT_CLASSIFICATION	1.1960211213434131E-6	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999966788936441	WITHOUT_CLASSIFICATION	3.3211063558935144E-6	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999997035483845	WITHOUT_CLASSIFICATION	2.964516153948064E-7	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9996898110612285	WITHOUT_CLASSIFICATION	3.101889387716076E-4	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999997680512563	WITHOUT_CLASSIFICATION	2.3194874351972377E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999960579842962	WITHOUT_CLASSIFICATION	3.942015703799984E-6	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999983211126245	WITHOUT_CLASSIFICATION	1.67888737547054E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999910019032517	WITHOUT_CLASSIFICATION	8.99809674827887E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999980420434573	WITHOUT_CLASSIFICATION	1.9579565427306937E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999910019032517	WITHOUT_CLASSIFICATION	8.99809674827887E-6	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999998656170254	WITHOUT_CLASSIFICATION	1.3438297457033273E-7	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999985901095628	WITHOUT_CLASSIFICATION	1.4098904371637308E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999511919473285	WITHOUT_CLASSIFICATION	4.880805267144786E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999998859756654	WITHOUT_CLASSIFICATION	1.1402433462639722E-7	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999993848449575	WITHOUT_CLASSIFICATION	6.151550425228421E-7	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999999026988581	WITHOUT_CLASSIFICATION	9.730114199938336E-8	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999979519730161	WITHOUT_CLASSIFICATION	2.0480269838241494E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999993296425337	WITHOUT_CLASSIFICATION	6.70357466291919E-7	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.99999979626327	WITHOUT_CLASSIFICATION	2.0373673003318762E-7	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999996271791265	WITHOUT_CLASSIFICATION	3.728208735814573E-7	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999981861288666	WITHOUT_CLASSIFICATION	1.8138711334154717E-6	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999985981666831	WITHOUT_CLASSIFICATION	1.40183331695046E-6	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999990729162929	WITHOUT_CLASSIFICATION	9.270837071399975E-7	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999989197222572	WITHOUT_CLASSIFICATION	1.0802777427224363E-6	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.999999949839326	WITHOUT_CLASSIFICATION	5.0160673999922116E-8	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999995212602815	WITHOUT_CLASSIFICATION	4.787397185817506E-7	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999999525415492	WITHOUT_CLASSIFICATION	4.745845090268402E-8	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.999998553868105	WITHOUT_CLASSIFICATION	1.4461318950531685E-6	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999992726270263	WITHOUT_CLASSIFICATION	7.273729737180658E-7	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999995710891296	WITHOUT_CLASSIFICATION	4.2891087030702697E-7	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.999883079554347	WITHOUT_CLASSIFICATION	1.1692044565313631E-4	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999993477041141	WITHOUT_CLASSIFICATION	6.52295885887103E-7	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.999997681935914	WITHOUT_CLASSIFICATION	2.3180640859931312E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999995708202521	WITHOUT_CLASSIFICATION	4.291797478400651E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999996342177029	WITHOUT_CLASSIFICATION	3.6578229705160485E-7	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999852015393286	WITHOUT_CLASSIFICATION	1.479846067140356E-5	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999769131366	WITHOUT_CLASSIFICATION	2.3086863409177784E-8	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999996512543036	WITHOUT_CLASSIFICATION	3.4874569642500265E-7	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999996211863219	WITHOUT_CLASSIFICATION	3.788136779978181E-7	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999999245290904	WITHOUT_CLASSIFICATION	7.547090954789373E-8	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999997976668368	WITHOUT_CLASSIFICATION	2.023331631831146E-7	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.999983349276087	WITHOUT_CLASSIFICATION	1.6650723913063532E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999996847799315	WITHOUT_CLASSIFICATION	3.1522006855912986E-7	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999991680514357	WITHOUT_CLASSIFICATION	8.319485642363803E-7	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999993101796149	WITHOUT_CLASSIFICATION	6.898203851759689E-7	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999987816235543	WITHOUT_CLASSIFICATION	1.2183764457604105E-6	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999940792553212	WITHOUT_CLASSIFICATION	5.920744678735154E-6	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.999998891193185	WITHOUT_CLASSIFICATION	1.1088068150151447E-6	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999960579842962	WITHOUT_CLASSIFICATION	3.942015703799984E-6	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999999285064511	WITHOUT_CLASSIFICATION	7.149354887202563E-8	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999945977634708	WITHOUT_CLASSIFICATION	5.402236529294861E-6	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999986099541677	WITHOUT_CLASSIFICATION	1.390045832252947E-6	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999968496724518	WITHOUT_CLASSIFICATION	3.15032754822018E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999980420434573	WITHOUT_CLASSIFICATION	1.9579565427306937E-6	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999856911753296	WITHOUT_CLASSIFICATION	1.4308824670400618E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999964364187264	WITHOUT_CLASSIFICATION	3.5635812736026887E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999979943865798	WITHOUT_CLASSIFICATION	2.0056134203591406E-6	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999899553262279	WITHOUT_CLASSIFICATION	1.0044673772102602E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999938862965072	WITHOUT_CLASSIFICATION	6.113703492739349E-6	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999876632579409	WITHOUT_CLASSIFICATION	1.2336742059081619E-5	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999863879943435	WITHOUT_CLASSIFICATION	1.3612005656538591E-5	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.999992605564342	WITHOUT_CLASSIFICATION	7.39443565806613E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999975922027924	WITHOUT_CLASSIFICATION	2.4077972076782885E-6	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9999543059453424	WITHOUT_CLASSIFICATION	4.569405465772595E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999964908512	WITHOUT_CLASSIFICATION	3.509148800030509E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999644416958915	WITHOUT_CLASSIFICATION	3.555830410845756E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999995562225329	WITHOUT_CLASSIFICATION	4.437774671473889E-7	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999990817771388	WITHOUT_CLASSIFICATION	9.182228613279765E-7	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999644552523593	WITHOUT_CLASSIFICATION	3.554474764061383E-5	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999996937662006	WITHOUT_CLASSIFICATION	3.06233799468948E-7	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999985348324272	WITHOUT_CLASSIFICATION	1.4651675727542291E-6	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999997840677675	WITHOUT_CLASSIFICATION	2.1593223253181604E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.999996000980787	WITHOUT_CLASSIFICATION	3.999019213008632E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999999626859498	WITHOUT_CLASSIFICATION	3.731405014711841E-8	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.999996667037805	WITHOUT_CLASSIFICATION	3.332962194971977E-6	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.999996000980787	WITHOUT_CLASSIFICATION	3.999019213008632E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999999515570079	WITHOUT_CLASSIFICATION	4.844299207958409E-8	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999807673135263	WITHOUT_CLASSIFICATION	1.9232686473793955E-5	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.99999385792312	WITHOUT_CLASSIFICATION	6.142076879947387E-6	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999958265913497	WITHOUT_CLASSIFICATION	4.1734086502845145E-6	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999997691046407	WITHOUT_CLASSIFICATION	2.3089535922251625E-7	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999988433942905	WITHOUT_CLASSIFICATION	1.156605709543702E-6	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999279176371	WITHOUT_CLASSIFICATION	7.208236290805406E-8	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999999593193646	WITHOUT_CLASSIFICATION	4.0680635477964014E-8	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.999999039808957	WITHOUT_CLASSIFICATION	9.60191043023556E-7	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999999407902919	WITHOUT_CLASSIFICATION	5.9209708134770544E-8	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999985004730734	WITHOUT_CLASSIFICATION	1.4995269266557793E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999963803831404	WITHOUT_CLASSIFICATION	3.619616859580881E-6	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999980302767325	WITHOUT_CLASSIFICATION	1.9697232675111024E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999995772518679	WITHOUT_CLASSIFICATION	4.227481319920041E-7	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999984954260396	WITHOUT_CLASSIFICATION	1.5045739603783319E-6	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999939745753221	WITHOUT_CLASSIFICATION	6.02542467786354E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999997876782925	WITHOUT_CLASSIFICATION	2.123217075649053E-7	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999991740913703	WITHOUT_CLASSIFICATION	8.259086297480628E-7	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.999999209645199	WITHOUT_CLASSIFICATION	7.903548010722158E-7	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999989776878395	WITHOUT_CLASSIFICATION	1.022312160444066E-6	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999995002120646	WITHOUT_CLASSIFICATION	4.997879353163978E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999938055794886	WITHOUT_CLASSIFICATION	6.194420511390042E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999938055794886	WITHOUT_CLASSIFICATION	6.194420511390042E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999978914619576	WITHOUT_CLASSIFICATION	2.1085380423752063E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953290940164	WITHOUT_CLASSIFICATION	4.670905983496415E-6	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999998898580139	WITHOUT_CLASSIFICATION	1.1014198603893678E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999995111590291	WITHOUT_CLASSIFICATION	4.888409709588923E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999995111590291	WITHOUT_CLASSIFICATION	4.888409709588923E-7	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.999999219042675	WITHOUT_CLASSIFICATION	7.809573250630868E-7	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999998300596027	WITHOUT_CLASSIFICATION	1.6994039722193228E-7	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999999177261103	WITHOUT_CLASSIFICATION	8.227388971966023E-8	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999999721481859	WITHOUT_CLASSIFICATION	2.785181409647164E-8	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.999973172674453	WITHOUT_CLASSIFICATION	2.6827325547131827E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999996229191068	WITHOUT_CLASSIFICATION	3.7708089320312363E-7	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999834421144734	WITHOUT_CLASSIFICATION	1.6557885526538863E-5	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999980347964164	WITHOUT_CLASSIFICATION	1.9652035835677325E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999913018327935	WITHOUT_CLASSIFICATION	8.69816720651221E-6	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999913018327935	WITHOUT_CLASSIFICATION	8.69816720651221E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999988453850072	WITHOUT_CLASSIFICATION	1.1546149928266416E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999988453850072	WITHOUT_CLASSIFICATION	1.1546149928266416E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999904737528903	WITHOUT_CLASSIFICATION	9.526247109666495E-6	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9998929868516007	WITHOUT_CLASSIFICATION	1.0701314839930692E-4	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999979199356617	WITHOUT_CLASSIFICATION	2.080064338418678E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999992924886529	WITHOUT_CLASSIFICATION	7.075113470149369E-7	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.999990968388185	WITHOUT_CLASSIFICATION	9.031611814910946E-6	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999990114416778	WITHOUT_CLASSIFICATION	9.885583222222832E-7	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999988875835314	WITHOUT_CLASSIFICATION	1.1124164685838843E-6	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999960903830095	WITHOUT_CLASSIFICATION	3.909616990474372E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.999993986607332	WITHOUT_CLASSIFICATION	6.0133926681296324E-6	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999784907795954	WITHOUT_CLASSIFICATION	2.150922040452502E-5	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999993269118894	WITHOUT_CLASSIFICATION	6.730881105059715E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999947678983478	WITHOUT_CLASSIFICATION	5.232101652216489E-6	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999947678983478	WITHOUT_CLASSIFICATION	5.232101652216489E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999467099866676	WITHOUT_CLASSIFICATION	5.329001333242669E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999467099866676	WITHOUT_CLASSIFICATION	5.329001333242669E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999994256598359	WITHOUT_CLASSIFICATION	5.743401641463792E-7	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9999971719049257	WITHOUT_CLASSIFICATION	2.8280950744038672E-6	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999388194790438	WITHOUT_CLASSIFICATION	6.118052095617434E-5	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999798250118866	WITHOUT_CLASSIFICATION	2.0174988113387733E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999988217746342	WITHOUT_CLASSIFICATION	1.1782253658684743E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999988221528225	WITHOUT_CLASSIFICATION	1.1778471775145756E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999275204354	WITHOUT_CLASSIFICATION	7.247956452749978E-8	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999992724437493	WITHOUT_CLASSIFICATION	7.275562507915859E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999992724437493	WITHOUT_CLASSIFICATION	7.275562507915859E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.999998865184743	WITHOUT_CLASSIFICATION	1.1348152569748214E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.999998865184743	WITHOUT_CLASSIFICATION	1.1348152569748214E-6	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999950493276424	WITHOUT_CLASSIFICATION	4.950672357587423E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999994662516211	WITHOUT_CLASSIFICATION	5.337483788793867E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999862344404159	WITHOUT_CLASSIFICATION	1.3765559584201661E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999862344404159	WITHOUT_CLASSIFICATION	1.3765559584201661E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999862344404159	WITHOUT_CLASSIFICATION	1.3765559584201661E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999998287439315	WITHOUT_CLASSIFICATION	1.712560685296144E-7	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999990202008708	WITHOUT_CLASSIFICATION	9.797991290726333E-7	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999836508743702	WITHOUT_CLASSIFICATION	1.634912562977132E-5	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999984599978085	WITHOUT_CLASSIFICATION	1.540002191623063E-6	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999880512522447	WITHOUT_CLASSIFICATION	1.1948747755471337E-5	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999437143228722	WITHOUT_CLASSIFICATION	5.62856771279226E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999944548071508	WITHOUT_CLASSIFICATION	5.5451928492083215E-6	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999996221207447	WITHOUT_CLASSIFICATION	3.7787925531878455E-7	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.999999061752298	WITHOUT_CLASSIFICATION	9.382477018654813E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999994019557562	WITHOUT_CLASSIFICATION	5.980442437970153E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999971755786634	WITHOUT_CLASSIFICATION	2.824421336555642E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999988300900232	WITHOUT_CLASSIFICATION	1.1699099768286223E-6	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999990937945143	WITHOUT_CLASSIFICATION	9.062054857720344E-7	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.999996471470917	WITHOUT_CLASSIFICATION	3.5285290830659486E-6	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999998070994782	WITHOUT_CLASSIFICATION	1.929005217234887E-7	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999996024751658	WITHOUT_CLASSIFICATION	3.97524834170195E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999603513804147	WITHOUT_CLASSIFICATION	3.964861958522083E-5	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999956653089739	WITHOUT_CLASSIFICATION	4.334691026164869E-6	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999976463313446	WITHOUT_CLASSIFICATION	2.353668655358516E-6	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999978748256484	WITHOUT_CLASSIFICATION	2.125174351580055E-6	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999980263543559	WITHOUT_CLASSIFICATION	1.9736456440431364E-6	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999923637674727	WITHOUT_CLASSIFICATION	7.636232527337716E-6	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.999996306503306	WITHOUT_CLASSIFICATION	3.6934966939616853E-6	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999935782285375	WITHOUT_CLASSIFICATION	6.421771462489796E-6	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999946940456129	WITHOUT_CLASSIFICATION	5.3059543870369225E-6	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999914700566648	WITHOUT_CLASSIFICATION	8.529943335317893E-6	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9997996338218406	WITHOUT_CLASSIFICATION	2.003661781595069E-4	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999976877781332	WITHOUT_CLASSIFICATION	2.3122218667310775E-6	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9996662281063247	WITHOUT_CLASSIFICATION	3.337718936752716E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998810020080352	WITHOUT_CLASSIFICATION	1.1899799196471555E-4	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.999999106345843	WITHOUT_CLASSIFICATION	8.936541569935591E-7	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.999947685854305	WITHOUT_CLASSIFICATION	5.231414569508307E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999832514908845	WITHOUT_CLASSIFICATION	1.674850911548133E-5	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999934944657326	WITHOUT_CLASSIFICATION	6.505534267320307E-6	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999747337852166	WITHOUT_CLASSIFICATION	2.526621478334452E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999985586307854	WITHOUT_CLASSIFICATION	1.4413692146904943E-6	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999919953217501	WITHOUT_CLASSIFICATION	8.0046782499384E-6	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999956750467959	WITHOUT_CLASSIFICATION	4.324953204145967E-6	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999974033558843	WITHOUT_CLASSIFICATION	2.5966441157504105E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999994967708854	WITHOUT_CLASSIFICATION	5.032291147226696E-7	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999970248053425	WITHOUT_CLASSIFICATION	2.9751946574638402E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999995145364029	WITHOUT_CLASSIFICATION	4.85463597196053E-7	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9975697716605909	WITHOUT_CLASSIFICATION	0.002430228339409179	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999998538401488	WITHOUT_CLASSIFICATION	1.46159851222282E-7	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999982038343069	WITHOUT_CLASSIFICATION	1.796165693128318E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999998666145496	WITHOUT_CLASSIFICATION	1.3338545035698163E-7	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999993059032485	WITHOUT_CLASSIFICATION	6.940967514456339E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999971235390032	WITHOUT_CLASSIFICATION	2.876460996725943E-6	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999944146436968	WITHOUT_CLASSIFICATION	5.585356303321991E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999922536263098	WITHOUT_CLASSIFICATION	7.74637369008393E-6	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999992902312469	WITHOUT_CLASSIFICATION	7.097687531612259E-7	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.999999947456273	WITHOUT_CLASSIFICATION	5.254372710060062E-8	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999988133687087	WITHOUT_CLASSIFICATION	1.1866312912968085E-6	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999988157279074	WITHOUT_CLASSIFICATION	1.1842720925642112E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.999999410827707	WITHOUT_CLASSIFICATION	5.891722928951842E-7	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999992847968585	WITHOUT_CLASSIFICATION	7.152031415250556E-7	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9975697716605909	WITHOUT_CLASSIFICATION	0.002430228339409179	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9975697716605909	WITHOUT_CLASSIFICATION	0.002430228339409179	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999975816246108	WITHOUT_CLASSIFICATION	2.418375389044343E-6	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999997465675098	WITHOUT_CLASSIFICATION	2.5343249025404556E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999993880116081	WITHOUT_CLASSIFICATION	6.119883918760527E-7	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.999998177800084	WITHOUT_CLASSIFICATION	1.822199916006548E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.999998177800084	WITHOUT_CLASSIFICATION	1.822199916006548E-6	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999985810076882	WITHOUT_CLASSIFICATION	1.418992311789919E-6	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999532050706	WITHOUT_CLASSIFICATION	4.6794929374830095E-8	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999999311456732	WITHOUT_CLASSIFICATION	6.885432684075616E-8	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9999975874856084	WITHOUT_CLASSIFICATION	2.4125143915641443E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999889835837419	WITHOUT_CLASSIFICATION	1.1016416258146823E-5	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999989363860666	WITHOUT_CLASSIFICATION	1.0636139334533982E-6	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999998195000402	WITHOUT_CLASSIFICATION	1.8049995985073495E-7	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999939995875989	WITHOUT_CLASSIFICATION	6.00041240103989E-6	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999917869826765	WITHOUT_CLASSIFICATION	8.213017323453774E-6	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999747594555225	WITHOUT_CLASSIFICATION	2.524054447753548E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999949020362101	WITHOUT_CLASSIFICATION	5.097963789865616E-6	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.999998911718866	WITHOUT_CLASSIFICATION	1.088281133977811E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999889835837419	WITHOUT_CLASSIFICATION	1.1016416258146823E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999913018327935	WITHOUT_CLASSIFICATION	8.69816720651221E-6	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999913018327935	WITHOUT_CLASSIFICATION	8.69816720651221E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999564157581159	WITHOUT_CLASSIFICATION	4.3584241884196864E-5	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999933082381276	WITHOUT_CLASSIFICATION	6.691761872502086E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999984242998472	WITHOUT_CLASSIFICATION	1.575700152856148E-6	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999977900794488	WITHOUT_CLASSIFICATION	2.2099205512916537E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9997397471771184	WITHOUT_CLASSIFICATION	2.6025282288153655E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.999968408826649	WITHOUT_CLASSIFICATION	3.159117335105955E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.999968408826649	WITHOUT_CLASSIFICATION	3.159117335105955E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999892731537275	WITHOUT_CLASSIFICATION	1.0726846272408926E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9998885039786819	WITHOUT_CLASSIFICATION	1.1149602131819022E-4	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999944108367259	WITHOUT_CLASSIFICATION	5.58916327410158E-6	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9996952394252135	WITHOUT_CLASSIFICATION	3.047605747864877E-4	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.999883002627252	WITHOUT_CLASSIFICATION	1.1699737274786823E-4	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999916084141983	WITHOUT_CLASSIFICATION	8.391585801663034E-6	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999618315828163	WITHOUT_CLASSIFICATION	3.816841718374937E-5	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999378164434972	WITHOUT_CLASSIFICATION	6.218355650277282E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999995954506099	WITHOUT_CLASSIFICATION	4.0454939009215265E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999980132006083	WITHOUT_CLASSIFICATION	1.9867993915621175E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999994805937835	WITHOUT_CLASSIFICATION	5.194062164551617E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999890136144965	WITHOUT_CLASSIFICATION	1.0986385503550871E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999372096008	WITHOUT_CLASSIFICATION	6.279039920109021E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997993761	WITHOUT_CLASSIFICATION	2.00623900158251E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999995631519403	WITHOUT_CLASSIFICATION	4.368480596931236E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999686447095761	WITHOUT_CLASSIFICATION	3.1355290423871774E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999998037473822	WITHOUT_CLASSIFICATION	1.9625261792585655E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999986332106269	WITHOUT_CLASSIFICATION	1.3667893730963415E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999961879604837	WITHOUT_CLASSIFICATION	3.8120395163267183E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999984984330342	WITHOUT_CLASSIFICATION	1.5015669657516256E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999965919507021	WITHOUT_CLASSIFICATION	3.408049297812746E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999993723923485	WITHOUT_CLASSIFICATION	6.276076515645166E-7	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.999999125317159	WITHOUT_CLASSIFICATION	8.74682840930017E-7	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999922994004833	WITHOUT_CLASSIFICATION	7.70059951677795E-6	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999955176437598	WITHOUT_CLASSIFICATION	4.482356240168693E-6	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999987767453844	WITHOUT_CLASSIFICATION	1.2232546156598482E-6	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999588237070639	WITHOUT_CLASSIFICATION	4.117629293619426E-5	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999677843060044	WITHOUT_CLASSIFICATION	3.221569399553146E-5	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999995001534203	WITHOUT_CLASSIFICATION	4.998465797073023E-7	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999694100563915	WITHOUT_CLASSIFICATION	3.058994360845049E-5	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.999904391492533	WITHOUT_CLASSIFICATION	9.56085074670507E-5	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999831506669665	WITHOUT_CLASSIFICATION	1.6849333033516523E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.999999226573854	WITHOUT_CLASSIFICATION	7.734261459904259E-7	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.999999226573854	WITHOUT_CLASSIFICATION	7.734261459904259E-7	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999893490835021	WITHOUT_CLASSIFICATION	1.0650916497878516E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999990064198487	WITHOUT_CLASSIFICATION	9.935801511900505E-7	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999967470013116	WITHOUT_CLASSIFICATION	3.2529986884215695E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999784251055192	WITHOUT_CLASSIFICATION	2.1574894480929413E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999784251055192	WITHOUT_CLASSIFICATION	2.1574894480929413E-5	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999984961784213	WITHOUT_CLASSIFICATION	1.5038215787782893E-6	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999997160288894	WITHOUT_CLASSIFICATION	2.8397111062162025E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.999997423111065	WITHOUT_CLASSIFICATION	2.5768889349849495E-6	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999463872324578	WITHOUT_CLASSIFICATION	5.36127675422797E-5	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999486292499203	WITHOUT_CLASSIFICATION	5.137075007974425E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999890136144965	WITHOUT_CLASSIFICATION	1.0986385503550871E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999990720416324	WITHOUT_CLASSIFICATION	9.2795836761653E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997993761	WITHOUT_CLASSIFICATION	2.00623900158251E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999686447095761	WITHOUT_CLASSIFICATION	3.1355290423871774E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999961879604837	WITHOUT_CLASSIFICATION	3.8120395163267183E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999984984330342	WITHOUT_CLASSIFICATION	1.5015669657516256E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999947233011006	WITHOUT_CLASSIFICATION	5.276698899389853E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999993723923485	WITHOUT_CLASSIFICATION	6.276076515645166E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999624640597816	WITHOUT_CLASSIFICATION	3.753594021835234E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999467099866676	WITHOUT_CLASSIFICATION	5.329001333242669E-5	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999841353381116	WITHOUT_CLASSIFICATION	1.586466188842944E-5	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999119099218376	WITHOUT_CLASSIFICATION	8.809007816244458E-5	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999949833447319	WITHOUT_CLASSIFICATION	5.0166552681706565E-6	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999315096500333	WITHOUT_CLASSIFICATION	6.849034996668229E-5	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9999595884507294	WITHOUT_CLASSIFICATION	4.041154927063131E-5	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999994384731676	WITHOUT_CLASSIFICATION	5.615268323620996E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9994542416724528	WITHOUT_CLASSIFICATION	5.457583275472774E-4	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.99993849861246	WITHOUT_CLASSIFICATION	6.150138753996409E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999986107159071	WITHOUT_CLASSIFICATION	1.3892840928747746E-6	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999667019270395	WITHOUT_CLASSIFICATION	3.329807296043897E-5	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999752146259845	WITHOUT_CLASSIFICATION	2.4785374015493585E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998338094847304	WITHOUT_CLASSIFICATION	1.6619051526960038E-4	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9997909199693733	WITHOUT_CLASSIFICATION	2.0908003062660203E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999866993457535	WITHOUT_CLASSIFICATION	1.3300654246597222E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999989455474446	WITHOUT_CLASSIFICATION	1.0544525553849618E-6	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999914502969026	WITHOUT_CLASSIFICATION	8.549703097297406E-6	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9998594798579653	WITHOUT_CLASSIFICATION	1.405201420346655E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999964566025846	WITHOUT_CLASSIFICATION	3.543397415479019E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999993389313363	WITHOUT_CLASSIFICATION	6.610686637158011E-7	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999993389313363	WITHOUT_CLASSIFICATION	6.610686637158011E-7	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999972572268631	WITHOUT_CLASSIFICATION	2.7427731368777436E-6	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.999854039071004	WITHOUT_CLASSIFICATION	1.459609289960031E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999523520923406	WITHOUT_CLASSIFICATION	4.764790765932666E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999523520923406	WITHOUT_CLASSIFICATION	4.764790765932666E-5	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999923084152066	WITHOUT_CLASSIFICATION	7.691584793375457E-6	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.999999199217994	WITHOUT_CLASSIFICATION	8.007820060276535E-7	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999997418283925	WITHOUT_CLASSIFICATION	2.581716075262112E-7	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999998453271561	WITHOUT_CLASSIFICATION	1.546728438223254E-7	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999930864565019	WITHOUT_CLASSIFICATION	6.913543498146073E-6	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999976684302018	WITHOUT_CLASSIFICATION	2.3315697982544938E-6	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999869904422074	WITHOUT_CLASSIFICATION	1.3009557792528895E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999949437917874	WITHOUT_CLASSIFICATION	5.056208212642869E-6	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999915860786207	WITHOUT_CLASSIFICATION	8.413921379270022E-6	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999984068380844	WITHOUT_CLASSIFICATION	1.5931619156081657E-6	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999188039515352	WITHOUT_CLASSIFICATION	8.119604846475047E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999866993457535	WITHOUT_CLASSIFICATION	1.3300654246597222E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9995984493317774	WITHOUT_CLASSIFICATION	4.015506682226306E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999401762988812	WITHOUT_CLASSIFICATION	5.9823701118876755E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999962871549906	WITHOUT_CLASSIFICATION	3.7128450095089126E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.999995142681518	WITHOUT_CLASSIFICATION	4.857318482068164E-6	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9999992359132082	WITHOUT_CLASSIFICATION	7.640867917708995E-7	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999967517902019	WITHOUT_CLASSIFICATION	3.2482097980118185E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999996072328419	WITHOUT_CLASSIFICATION	3.9276715815790886E-7	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999881828833799	WITHOUT_CLASSIFICATION	1.181711662016803E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999881828833799	WITHOUT_CLASSIFICATION	1.181711662016803E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999929709543411	WITHOUT_CLASSIFICATION	7.0290456588468595E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999902329983883	WITHOUT_CLASSIFICATION	9.767001611763987E-6	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999949437917874	WITHOUT_CLASSIFICATION	5.056208212642869E-6	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999949437917874	WITHOUT_CLASSIFICATION	5.056208212642869E-6	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999977958445689	WITHOUT_CLASSIFICATION	2.204155431086878E-6	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9999747331271626	WITHOUT_CLASSIFICATION	2.5266872837496542E-5	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999992708333779	WITHOUT_CLASSIFICATION	7.291666220423566E-7	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999948683059265	WITHOUT_CLASSIFICATION	5.131694073508201E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999951459840758	WITHOUT_CLASSIFICATION	4.854015924266566E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999996404652206	WITHOUT_CLASSIFICATION	3.5953477936194953E-7	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999996488178499	WITHOUT_CLASSIFICATION	3.5118215018260994E-7	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.99999581025117	WITHOUT_CLASSIFICATION	4.189748829973762E-6	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999993449438416	WITHOUT_CLASSIFICATION	6.550561584334352E-7	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999320082062256	WITHOUT_CLASSIFICATION	6.799179377434165E-5	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999992618635124	WITHOUT_CLASSIFICATION	7.381364876873964E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999999865726107	WITHOUT_CLASSIFICATION	1.342738930078681E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999999865726107	WITHOUT_CLASSIFICATION	1.342738930078681E-7	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999875216963806	WITHOUT_CLASSIFICATION	1.2478303619360417E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999925808860219	WITHOUT_CLASSIFICATION	7.4191139780289655E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999925808860219	WITHOUT_CLASSIFICATION	7.4191139780289655E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.999990449511618	WITHOUT_CLASSIFICATION	9.550488382017038E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.999990449511618	WITHOUT_CLASSIFICATION	9.550488382017038E-6	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999957265347583	WITHOUT_CLASSIFICATION	4.273465241641184E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999998378819622	WITHOUT_CLASSIFICATION	1.6211803766599313E-7	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999998378819622	WITHOUT_CLASSIFICATION	1.6211803766599313E-7	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999993083101564	WITHOUT_CLASSIFICATION	6.916898437182354E-7	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999942237761232	WITHOUT_CLASSIFICATION	5.776223876748727E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999267687024476	WITHOUT_CLASSIFICATION	7.323129755245013E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999919448236586	WITHOUT_CLASSIFICATION	8.055176341363066E-6	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999993698940772	WITHOUT_CLASSIFICATION	6.301059227616728E-7	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.999999130638388	WITHOUT_CLASSIFICATION	8.693616120980019E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999930083094396	WITHOUT_CLASSIFICATION	6.9916905603072E-6	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999600507305559	WITHOUT_CLASSIFICATION	3.994926944408363E-5	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999963051405019	WITHOUT_CLASSIFICATION	3.694859498184196E-6	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999978894140301	WITHOUT_CLASSIFICATION	2.1105859699199582E-6	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.999999822620906	WITHOUT_CLASSIFICATION	1.7737909392585692E-7	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999946970439492	WITHOUT_CLASSIFICATION	5.302956050834825E-6	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999987726074339	WITHOUT_CLASSIFICATION	1.227392566103803E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999942237761232	WITHOUT_CLASSIFICATION	5.776223876748727E-6	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999998345535988	WITHOUT_CLASSIFICATION	1.6544640123128064E-7	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999987339980791	WITHOUT_CLASSIFICATION	1.2660019208075348E-6	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999974985534001	WITHOUT_CLASSIFICATION	2.5014465998252155E-6	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.999997731954334	WITHOUT_CLASSIFICATION	2.268045666092125E-6	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999998640835158	WITHOUT_CLASSIFICATION	1.359164842688619E-7	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999976393690843	WITHOUT_CLASSIFICATION	2.3606309156757908E-6	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999959064253193	WITHOUT_CLASSIFICATION	4.093574680660261E-6	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.999995421761879	WITHOUT_CLASSIFICATION	4.578238121008745E-6	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999440780032482	WITHOUT_CLASSIFICATION	5.5921996751828335E-5	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999891466128977	WITHOUT_CLASSIFICATION	1.0853387102313036E-5	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999121525647662	WITHOUT_CLASSIFICATION	8.784743523383542E-5	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9998787354968448	WITHOUT_CLASSIFICATION	1.2126450315510036E-4	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999993098506821	WITHOUT_CLASSIFICATION	6.901493179565627E-7	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999696106641509	WITHOUT_CLASSIFICATION	3.038933584911353E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999993675350073	WITHOUT_CLASSIFICATION	6.324649926620907E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999822391745212	WITHOUT_CLASSIFICATION	1.7760825478736052E-5	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999975254687068	WITHOUT_CLASSIFICATION	2.4745312931395793E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999937518362472	WITHOUT_CLASSIFICATION	6.248163752864377E-6	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999996514831857	WITHOUT_CLASSIFICATION	3.4851681437234206E-7	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999996619377554	WITHOUT_CLASSIFICATION	3.3806224466733315E-7	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999994222908675	WITHOUT_CLASSIFICATION	5.777091326232164E-7	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999886080537288	WITHOUT_CLASSIFICATION	1.1391946271101857E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999997994283518	WITHOUT_CLASSIFICATION	2.0057164810481768E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999991511494869	WITHOUT_CLASSIFICATION	8.488505131377689E-7	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9999952323470447	WITHOUT_CLASSIFICATION	4.76765295521374E-6	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999997700150492	WITHOUT_CLASSIFICATION	2.2998495085396507E-7	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999938646088726	WITHOUT_CLASSIFICATION	6.1353911273623356E-6	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999961677207718	WITHOUT_CLASSIFICATION	3.832279228099639E-6	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999998844394712	WITHOUT_CLASSIFICATION	1.1556052879424938E-7	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9999961110600281	WITHOUT_CLASSIFICATION	3.888939971916012E-6	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999947942167685	WITHOUT_CLASSIFICATION	5.205783231405449E-6	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999999426954775	WITHOUT_CLASSIFICATION	5.73045225404208E-8	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999994840546976	WITHOUT_CLASSIFICATION	5.159453023180943E-7	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999998292435918	WITHOUT_CLASSIFICATION	1.7075640822830685E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999950540184144	WITHOUT_CLASSIFICATION	4.94598158551286E-6	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999903361726327	WITHOUT_CLASSIFICATION	9.663827367284385E-6	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999999540221505	WITHOUT_CLASSIFICATION	4.597784952067426E-8	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999991511494869	WITHOUT_CLASSIFICATION	8.488505131377689E-7	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999110040176	WITHOUT_CLASSIFICATION	8.89959823121264E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999988416145462	WITHOUT_CLASSIFICATION	1.15838545380084E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999988416145462	WITHOUT_CLASSIFICATION	1.15838545380084E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999980248546155	WITHOUT_CLASSIFICATION	1.9751453845105832E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999980248546155	WITHOUT_CLASSIFICATION	1.9751453845105832E-6	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9999829836961038	WITHOUT_CLASSIFICATION	1.7016303896153435E-5	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999989758242139	WITHOUT_CLASSIFICATION	1.024175786064476E-6	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999994914624815	WITHOUT_CLASSIFICATION	5.08537518590833E-7	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999917686020746	WITHOUT_CLASSIFICATION	8.231397925341127E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999722006144359	WITHOUT_CLASSIFICATION	2.779938556400318E-5	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999718396882458	WITHOUT_CLASSIFICATION	2.8160311754297563E-5	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999371606604196	WITHOUT_CLASSIFICATION	6.283933958036894E-5	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999995206300389	WITHOUT_CLASSIFICATION	4.793699610685813E-7	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999950491153482	WITHOUT_CLASSIFICATION	4.95088465171683E-6	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.999994615839562	WITHOUT_CLASSIFICATION	5.384160438029433E-6	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999499537681966	WITHOUT_CLASSIFICATION	5.0046231803400966E-5	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999975629577783	WITHOUT_CLASSIFICATION	2.437042221654662E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999994920742553	WITHOUT_CLASSIFICATION	5.079257446469687E-7	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999979390073646	WITHOUT_CLASSIFICATION	2.06099263542286E-6	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999842819875863	WITHOUT_CLASSIFICATION	1.571801241378589E-5	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.999998403601372	WITHOUT_CLASSIFICATION	1.596398627862596E-6	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.999998138070524	WITHOUT_CLASSIFICATION	1.8619294759512229E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.999995142681518	WITHOUT_CLASSIFICATION	4.857318482068164E-6	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999972319410492	WITHOUT_CLASSIFICATION	2.768058950935537E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999996501080874	WITHOUT_CLASSIFICATION	3.4989191266442314E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999624640597816	WITHOUT_CLASSIFICATION	3.753594021835234E-5	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999996501080874	WITHOUT_CLASSIFICATION	3.4989191266442314E-7	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9998191109033038	WITHOUT_CLASSIFICATION	1.8088909669634835E-4	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9997532925917699	WITHOUT_CLASSIFICATION	2.467074082300769E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9998603712909602	WITHOUT_CLASSIFICATION	1.3962870903990764E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999712588245558	WITHOUT_CLASSIFICATION	2.8741175444141797E-5	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.999998585635003	WITHOUT_CLASSIFICATION	1.4143649969499566E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999810400891533	WITHOUT_CLASSIFICATION	1.8959910846655647E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999810400891533	WITHOUT_CLASSIFICATION	1.8959910846655647E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999794227873461	WITHOUT_CLASSIFICATION	2.0577212653974507E-5	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999995343518946	WITHOUT_CLASSIFICATION	4.656481053537371E-7	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999998856023543	WITHOUT_CLASSIFICATION	1.1439764563359199E-7	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999901863290448	WITHOUT_CLASSIFICATION	9.813670955172956E-6	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999971560865315	WITHOUT_CLASSIFICATION	2.843913468489854E-6	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.999996979953803	WITHOUT_CLASSIFICATION	3.0200461969298577E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.999998585635003	WITHOUT_CLASSIFICATION	1.4143649969499566E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999810400891533	WITHOUT_CLASSIFICATION	1.8959910846655647E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999810400891533	WITHOUT_CLASSIFICATION	1.8959910846655647E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999794227873461	WITHOUT_CLASSIFICATION	2.0577212653974507E-5	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999983007385754	WITHOUT_CLASSIFICATION	1.699261424527355E-6	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999920935924814	WITHOUT_CLASSIFICATION	7.906407518614303E-6	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999925270368645	WITHOUT_CLASSIFICATION	7.4729631355091965E-6	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.999998391938688	WITHOUT_CLASSIFICATION	1.6080613120222945E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999710342286826	WITHOUT_CLASSIFICATION	2.896577131737442E-5	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9999991778349004	WITHOUT_CLASSIFICATION	8.221650996533369E-7	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999988110614264	WITHOUT_CLASSIFICATION	1.1889385735379498E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999948054649846	WITHOUT_CLASSIFICATION	5.194535015313332E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999948054649846	WITHOUT_CLASSIFICATION	5.194535015313332E-6	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999968178058115	WITHOUT_CLASSIFICATION	3.182194188430946E-6	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.999999367391664	WITHOUT_CLASSIFICATION	6.326083360376163E-7	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999715217508154	WITHOUT_CLASSIFICATION	2.8478249184613926E-5	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9999931555402127	WITHOUT_CLASSIFICATION	6.844459787307203E-6	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999815028167226	WITHOUT_CLASSIFICATION	1.8497183277468203E-5	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999859213094604	WITHOUT_CLASSIFICATION	1.4078690539522829E-5	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999993359956189	WITHOUT_CLASSIFICATION	6.640043811971312E-7	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999957526039923	WITHOUT_CLASSIFICATION	4.247396007629463E-6	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999643123073496	WITHOUT_CLASSIFICATION	3.5687692650364804E-5	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.999997968874594	WITHOUT_CLASSIFICATION	2.0311254059510576E-6	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999906709784343	WITHOUT_CLASSIFICATION	9.329021565773932E-6	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999931184386283	WITHOUT_CLASSIFICATION	6.881561371764146E-6	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999993566776764	WITHOUT_CLASSIFICATION	6.433223236111415E-7	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9999874331296755	WITHOUT_CLASSIFICATION	1.2566870324453505E-5	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999947060238846	WITHOUT_CLASSIFICATION	5.2939761153976315E-6	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999893925842059	WITHOUT_CLASSIFICATION	1.0607415794138412E-5	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999797517458175	WITHOUT_CLASSIFICATION	2.024825418247335E-5	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999995160688623	WITHOUT_CLASSIFICATION	4.839311376240118E-7	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999779318611085	WITHOUT_CLASSIFICATION	2.2068138891449258E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999993823455796	WITHOUT_CLASSIFICATION	6.176544204508443E-7	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.999999142296699	WITHOUT_CLASSIFICATION	8.577033009755891E-7	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999983706790085	WITHOUT_CLASSIFICATION	1.6293209914551415E-6	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999993685588402	WITHOUT_CLASSIFICATION	6.314411597589806E-7	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999938677748836	WITHOUT_CLASSIFICATION	6.132225116368809E-6	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999992081200562	WITHOUT_CLASSIFICATION	7.918799438259637E-7	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999996107091969	WITHOUT_CLASSIFICATION	3.892908030903973E-7	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999998940973185	WITHOUT_CLASSIFICATION	1.0590268143921596E-7	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999779009484667	WITHOUT_CLASSIFICATION	2.2099051533265336E-5	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999999466418411	WITHOUT_CLASSIFICATION	5.335815883428043E-8	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999977873389748	WITHOUT_CLASSIFICATION	2.2126610252262213E-6	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999985748867392	WITHOUT_CLASSIFICATION	1.4251132607821178E-6	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999991589376579	WITHOUT_CLASSIFICATION	8.410623421355709E-7	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999549002325925	WITHOUT_CLASSIFICATION	4.509976740763461E-5	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999981631016519	WITHOUT_CLASSIFICATION	1.836898348092715E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999983748267048	WITHOUT_CLASSIFICATION	1.6251732952422702E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999983748267048	WITHOUT_CLASSIFICATION	1.6251732952422702E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999980894454947	WITHOUT_CLASSIFICATION	1.9105545052612038E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999963531124917	WITHOUT_CLASSIFICATION	3.6468875083511E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999856379446175	WITHOUT_CLASSIFICATION	1.4362055382440344E-5	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999926622920181	WITHOUT_CLASSIFICATION	7.337707981884167E-6	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999677899331573	WITHOUT_CLASSIFICATION	3.22100668426917E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999943193245071	WITHOUT_CLASSIFICATION	5.6806754928503424E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999994011735238	WITHOUT_CLASSIFICATION	5.988264761854868E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999849484883876	WITHOUT_CLASSIFICATION	1.5051511612478907E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9999607729937974	WITHOUT_CLASSIFICATION	3.922700620260074E-5	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999969006478502	WITHOUT_CLASSIFICATION	3.0993521497342347E-6	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999998603690107	WITHOUT_CLASSIFICATION	1.3963098938915057E-7	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999989011209943	WITHOUT_CLASSIFICATION	1.0988790057246193E-6	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999743997522452	WITHOUT_CLASSIFICATION	2.5600247754728238E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999933115913414	WITHOUT_CLASSIFICATION	6.688408658557645E-6	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9999292748136737	WITHOUT_CLASSIFICATION	7.07251863263399E-5	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999940273284315	WITHOUT_CLASSIFICATION	5.972671568520598E-6	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.99999759061027	WITHOUT_CLASSIFICATION	2.4093897298529136E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999981670986743	WITHOUT_CLASSIFICATION	1.8329013256327953E-6	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999984038026839	WITHOUT_CLASSIFICATION	1.596197316130409E-6	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.999996430826393	WITHOUT_CLASSIFICATION	3.5691736068990368E-6	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999990644526444	WITHOUT_CLASSIFICATION	9.355473555576274E-7	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999998026076209	WITHOUT_CLASSIFICATION	1.973923791138287E-7	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999552401466006	WITHOUT_CLASSIFICATION	4.4759853399320404E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999989597356095	WITHOUT_CLASSIFICATION	1.0402643904720324E-6	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999982035826898	WITHOUT_CLASSIFICATION	1.7964173101871892E-6	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999987697383739	WITHOUT_CLASSIFICATION	1.2302616261506008E-6	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999969173439432	WITHOUT_CLASSIFICATION	3.082656056675032E-6	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999953927677129	WITHOUT_CLASSIFICATION	4.607232287107006E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999812460651215	WITHOUT_CLASSIFICATION	1.875393487844114E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999882398837491	WITHOUT_CLASSIFICATION	1.1760116250881064E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999783436567424	WITHOUT_CLASSIFICATION	2.1656343257523402E-5	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999985331240823	WITHOUT_CLASSIFICATION	1.4668759178139073E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999982427578816	WITHOUT_CLASSIFICATION	1.7572421183722549E-6	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999991263292315	WITHOUT_CLASSIFICATION	8.736707685117406E-7	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999887882510238	WITHOUT_CLASSIFICATION	1.1211748976158544E-5	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999987135544561	WITHOUT_CLASSIFICATION	1.2864455438027763E-6	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999756499660126	WITHOUT_CLASSIFICATION	2.4350033987426587E-5	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999998191071189	WITHOUT_CLASSIFICATION	1.8089288123891252E-7	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9998873284354817	WITHOUT_CLASSIFICATION	1.1267156451824718E-4	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999933566074064	WITHOUT_CLASSIFICATION	6.643392593637131E-6	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999992587124328	WITHOUT_CLASSIFICATION	7.412875671878056E-7	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999995275819678	WITHOUT_CLASSIFICATION	4.724180322675462E-7	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999993938701852	WITHOUT_CLASSIFICATION	6.061298148265601E-7	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999997569922008	WITHOUT_CLASSIFICATION	2.430077992024127E-7	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999799404910786	WITHOUT_CLASSIFICATION	2.0059508921366616E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999985643805898	WITHOUT_CLASSIFICATION	1.4356194102298273E-6	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999997521571805	WITHOUT_CLASSIFICATION	2.478428194986741E-7	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999985643805898	WITHOUT_CLASSIFICATION	1.4356194102298273E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999238648471839	WITHOUT_CLASSIFICATION	7.613515281612332E-5	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.99997041620716	WITHOUT_CLASSIFICATION	2.9583792839979427E-5	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999999108157549	WITHOUT_CLASSIFICATION	8.918424507937853E-8	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999970601778115	WITHOUT_CLASSIFICATION	2.939822188554518E-6	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999998632760658	WITHOUT_CLASSIFICATION	1.367239340629439E-7	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999998694217814	WITHOUT_CLASSIFICATION	1.3057821860458455E-7	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999947083736508	WITHOUT_CLASSIFICATION	5.291626349174699E-6	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9990447144903818	WITHOUT_CLASSIFICATION	9.55285509618283E-4	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999942359273907	WITHOUT_CLASSIFICATION	5.764072609349709E-6	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.999995804937695	WITHOUT_CLASSIFICATION	4.1950623049482995E-6	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999997189036576	WITHOUT_CLASSIFICATION	2.8109634234378125E-7	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999515731254717	WITHOUT_CLASSIFICATION	4.842687452838376E-5	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999908560414047	WITHOUT_CLASSIFICATION	9.143958595283879E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9999361764464677	WITHOUT_CLASSIFICATION	6.382355353237254E-5	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999885397957586	WITHOUT_CLASSIFICATION	1.1460204241269581E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999991100733521	WITHOUT_CLASSIFICATION	8.899266480484128E-7	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999743784998951	WITHOUT_CLASSIFICATION	2.5621500104948848E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9999671829820196	WITHOUT_CLASSIFICATION	3.2817017980479696E-5	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999482132906325	WITHOUT_CLASSIFICATION	5.178670936747662E-5	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999951045578624	WITHOUT_CLASSIFICATION	4.895442137492686E-6	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999891200913894	WITHOUT_CLASSIFICATION	1.0879908610669861E-5	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999989446506933	WITHOUT_CLASSIFICATION	1.0553493067692419E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999985228445866	WITHOUT_CLASSIFICATION	1.4771554133417337E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999947083736508	WITHOUT_CLASSIFICATION	5.291626349174699E-6	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999967462178182	WITHOUT_CLASSIFICATION	3.2537821816670615E-6	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999996654199915	WITHOUT_CLASSIFICATION	3.3458000839871254E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999996654199915	WITHOUT_CLASSIFICATION	3.3458000839871254E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999995676975282	WITHOUT_CLASSIFICATION	4.3230247178637887E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999993007628054	WITHOUT_CLASSIFICATION	6.992371944769694E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999993007628054	WITHOUT_CLASSIFICATION	6.992371944769694E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999997632125658	WITHOUT_CLASSIFICATION	2.3678743420135567E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999997632125658	WITHOUT_CLASSIFICATION	2.3678743420135567E-7	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9999787305922914	WITHOUT_CLASSIFICATION	2.1269407708730237E-5	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999862904654311	WITHOUT_CLASSIFICATION	1.3709534569002667E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999989864858935	WITHOUT_CLASSIFICATION	1.013514106523083E-6	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999647214720385	WITHOUT_CLASSIFICATION	3.527852796143273E-5	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999970265870409	WITHOUT_CLASSIFICATION	2.973412959114195E-6	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999992702652356	WITHOUT_CLASSIFICATION	7.297347643627731E-7	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9999909359444876	WITHOUT_CLASSIFICATION	9.064055512383639E-6	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999995011776682	WITHOUT_CLASSIFICATION	4.988223318333365E-7	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999962054583093	WITHOUT_CLASSIFICATION	3.7945416907281897E-6	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999991917701146	WITHOUT_CLASSIFICATION	8.082298853077055E-7	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999997487119805	WITHOUT_CLASSIFICATION	2.512880194995684E-7	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999964043442389	WITHOUT_CLASSIFICATION	3.595655761151298E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999987954557797	WITHOUT_CLASSIFICATION	1.20454422017636E-6	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999990960397985	WITHOUT_CLASSIFICATION	9.03960201450116E-7	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999994516116804	WITHOUT_CLASSIFICATION	5.48388319726494E-7	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999984777158278	WITHOUT_CLASSIFICATION	1.5222841721324332E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999975586203785	WITHOUT_CLASSIFICATION	2.441379621483181E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999785047769791	WITHOUT_CLASSIFICATION	2.1495223020801954E-5	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999785047769791	WITHOUT_CLASSIFICATION	2.1495223020801954E-5	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999975686330632	WITHOUT_CLASSIFICATION	2.431366936752431E-6	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9992940503320498	WITHOUT_CLASSIFICATION	7.05949667950224E-4	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999961804888798	WITHOUT_CLASSIFICATION	3.819511120153317E-6	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999963641738377	WITHOUT_CLASSIFICATION	3.6358261621779195E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999999666321666	WITHOUT_CLASSIFICATION	3.33678334065482E-8	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999993082427343	WITHOUT_CLASSIFICATION	6.917572656340155E-7	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999994208453408	WITHOUT_CLASSIFICATION	5.791546591461245E-7	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999968091995218	WITHOUT_CLASSIFICATION	3.190800478231156E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.999996694382486	WITHOUT_CLASSIFICATION	3.3056175141262142E-6	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999996311084189	WITHOUT_CLASSIFICATION	3.688915809849269E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999994799483363	WITHOUT_CLASSIFICATION	5.200516637192986E-7	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999861614943595	WITHOUT_CLASSIFICATION	1.3838505640502659E-5	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999941747535872	WITHOUT_CLASSIFICATION	5.825246412882801E-6	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999997156219734	WITHOUT_CLASSIFICATION	2.843780264969402E-7	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999967390601368	WITHOUT_CLASSIFICATION	3.260939863221258E-6	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.999996890416814	WITHOUT_CLASSIFICATION	3.1095831859499616E-6	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999402816410261	WITHOUT_CLASSIFICATION	5.971835897381073E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999178066552229	WITHOUT_CLASSIFICATION	8.219334477716281E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9998954621101094	WITHOUT_CLASSIFICATION	1.045378898906466E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999860720523394	WITHOUT_CLASSIFICATION	1.392794766077617E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999945162956598	WITHOUT_CLASSIFICATION	5.483704340098416E-6	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999983060691982	WITHOUT_CLASSIFICATION	1.6939308018317476E-6	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.999962470600599	WITHOUT_CLASSIFICATION	3.752939940108791E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999999764770647	WITHOUT_CLASSIFICATION	2.3522935260613096E-8	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999999689450124	WITHOUT_CLASSIFICATION	3.1054987565495106E-8	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999999843740084	WITHOUT_CLASSIFICATION	1.5625991636396044E-8	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999999791254648	WITHOUT_CLASSIFICATION	2.0874535231148413E-8	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999997927172256	WITHOUT_CLASSIFICATION	2.0728277445315862E-7	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999967866494932	WITHOUT_CLASSIFICATION	3.2133505067638618E-6	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999182841709883	WITHOUT_CLASSIFICATION	8.171582901178775E-5	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999715041390703	WITHOUT_CLASSIFICATION	2.8495860929618517E-5	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999971877374073	WITHOUT_CLASSIFICATION	2.8122625927666622E-6	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9996262042574113	WITHOUT_CLASSIFICATION	3.7379574258873834E-4	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999990282224952	WITHOUT_CLASSIFICATION	9.71777504865292E-7	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999928220685527	WITHOUT_CLASSIFICATION	7.1779314472575655E-6	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999915741667276	WITHOUT_CLASSIFICATION	8.425833272436714E-6	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.999996321902952	WITHOUT_CLASSIFICATION	3.6780970481032426E-6	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999890305694205	WITHOUT_CLASSIFICATION	1.0969430579649451E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999962875548153	WITHOUT_CLASSIFICATION	3.7124451845804524E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999810979387	WITHOUT_CLASSIFICATION	1.8902061306143242E-7	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999995809321923	WITHOUT_CLASSIFICATION	4.190678076181104E-7	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999991066510818	WITHOUT_CLASSIFICATION	8.933489182305415E-7	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.999999224430184	WITHOUT_CLASSIFICATION	7.755698159905661E-7	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999994353306679	WITHOUT_CLASSIFICATION	5.646693320036284E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999904382610745	WITHOUT_CLASSIFICATION	9.561738925501852E-6	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999689638722	WITHOUT_CLASSIFICATION	3.103612785162663E-8	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999993957318716	WITHOUT_CLASSIFICATION	6.042681284467306E-7	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999994353306679	WITHOUT_CLASSIFICATION	5.646693320036284E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999991732375819	WITHOUT_CLASSIFICATION	8.267624181920918E-7	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999981964468846	WITHOUT_CLASSIFICATION	1.8035531154623864E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999917131227899	WITHOUT_CLASSIFICATION	8.286877210103264E-6	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999893735798262	WITHOUT_CLASSIFICATION	1.0626420173877973E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999967256681729	WITHOUT_CLASSIFICATION	3.274331827161031E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999904382610745	WITHOUT_CLASSIFICATION	9.561738925501852E-6	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999993957318716	WITHOUT_CLASSIFICATION	6.042681284467306E-7	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9998757988384915	WITHOUT_CLASSIFICATION	1.2420116150850392E-4	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999997145557128	WITHOUT_CLASSIFICATION	2.8544428716902064E-7	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999496344693806	WITHOUT_CLASSIFICATION	5.0365530619508154E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999996834451635	WITHOUT_CLASSIFICATION	3.165548364449804E-7	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856221111827	WITHOUT_CLASSIFICATION	1.4377888817181515E-5	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999088130795933	WITHOUT_CLASSIFICATION	9.118692040670306E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.999995863087768	WITHOUT_CLASSIFICATION	4.136912232010272E-6	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999985179297927	WITHOUT_CLASSIFICATION	1.4820702073548164E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999914084245003	WITHOUT_CLASSIFICATION	8.591575499715718E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999914084245003	WITHOUT_CLASSIFICATION	8.591575499715718E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999971477955784	WITHOUT_CLASSIFICATION	2.852204421652998E-6	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999872954166671	WITHOUT_CLASSIFICATION	1.2704583333001078E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999995417153726	WITHOUT_CLASSIFICATION	4.5828462741358517E-7	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999997267442912	WITHOUT_CLASSIFICATION	2.7325570877670263E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999995954506099	WITHOUT_CLASSIFICATION	4.0454939009215265E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999980132006083	WITHOUT_CLASSIFICATION	1.9867993915621175E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999994805937835	WITHOUT_CLASSIFICATION	5.194062164551617E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999994805937835	WITHOUT_CLASSIFICATION	5.194062164551617E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999890136144965	WITHOUT_CLASSIFICATION	1.0986385503550871E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999990720416324	WITHOUT_CLASSIFICATION	9.2795836761653E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999990720416324	WITHOUT_CLASSIFICATION	9.2795836761653E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999372096008	WITHOUT_CLASSIFICATION	6.279039920109021E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997993761	WITHOUT_CLASSIFICATION	2.00623900158251E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997993761	WITHOUT_CLASSIFICATION	2.00623900158251E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999995631519403	WITHOUT_CLASSIFICATION	4.368480596931236E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999686447095761	WITHOUT_CLASSIFICATION	3.1355290423871774E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999998037473822	WITHOUT_CLASSIFICATION	1.9625261792585655E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999986332106269	WITHOUT_CLASSIFICATION	1.3667893730963415E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999961879604837	WITHOUT_CLASSIFICATION	3.8120395163267183E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999984984330342	WITHOUT_CLASSIFICATION	1.5015669657516256E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999965919507021	WITHOUT_CLASSIFICATION	3.408049297812746E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999993723923485	WITHOUT_CLASSIFICATION	6.276076515645166E-7	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999986107159071	WITHOUT_CLASSIFICATION	1.3892840928747746E-6	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999667019270395	WITHOUT_CLASSIFICATION	3.329807296043897E-5	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999942064560388	WITHOUT_CLASSIFICATION	5.793543961241077E-6	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998355615161362	WITHOUT_CLASSIFICATION	1.6443848386392436E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999778993906856	WITHOUT_CLASSIFICATION	2.2100609314437764E-5	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999661634594235	WITHOUT_CLASSIFICATION	3.3836540576586525E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999979375816795	WITHOUT_CLASSIFICATION	2.062418320412598E-6	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999689660430854	WITHOUT_CLASSIFICATION	3.1033956914553665E-5	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999995094223028	WITHOUT_CLASSIFICATION	4.905776973279812E-7	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999998966321043	WITHOUT_CLASSIFICATION	1.0336789569563051E-7	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999996897993362	WITHOUT_CLASSIFICATION	3.1020066382620884E-7	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9985837519115586	WITHOUT_CLASSIFICATION	0.0014162480884413512	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999958616509681	WITHOUT_CLASSIFICATION	4.138349031874517E-6	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9990888543510194	WITHOUT_CLASSIFICATION	9.111456489807769E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9997362847864701	WITHOUT_CLASSIFICATION	2.637152135298845E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999964654029618	WITHOUT_CLASSIFICATION	3.5345970381563344E-6	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9990994485288304	WITHOUT_CLASSIFICATION	9.00551471169641E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9995509614617094	WITHOUT_CLASSIFICATION	4.49038538290514E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9981616235416124	WITHOUT_CLASSIFICATION	0.0018383764583876398	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9994753956181885	WITHOUT_CLASSIFICATION	5.246043818115669E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999900251809142	WITHOUT_CLASSIFICATION	9.974819085812039E-6	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999837387082463	WITHOUT_CLASSIFICATION	1.6261291753665707E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999940279934043	WITHOUT_CLASSIFICATION	5.972006595654979E-6	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9996829832241979	WITHOUT_CLASSIFICATION	3.1701677580211557E-4	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.999711989268087	WITHOUT_CLASSIFICATION	2.8801073191301636E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999686447095761	WITHOUT_CLASSIFICATION	3.1355290423871774E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999998037473822	WITHOUT_CLASSIFICATION	1.9625261792585655E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999986332106269	WITHOUT_CLASSIFICATION	1.3667893730963415E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999984984330342	WITHOUT_CLASSIFICATION	1.5015669657516256E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999947233011006	WITHOUT_CLASSIFICATION	5.276698899389853E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999993723923485	WITHOUT_CLASSIFICATION	6.276076515645166E-7	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999986107159071	WITHOUT_CLASSIFICATION	1.3892840928747746E-6	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999667019270395	WITHOUT_CLASSIFICATION	3.329807296043897E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999948054649846	WITHOUT_CLASSIFICATION	5.194535015313332E-6	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999882102192854	WITHOUT_CLASSIFICATION	1.1789780714607566E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999791153399633	WITHOUT_CLASSIFICATION	2.0884660036694905E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9996806280912299	WITHOUT_CLASSIFICATION	3.193719087700902E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9997454655735747	WITHOUT_CLASSIFICATION	2.5453442642529525E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.999955382193865	WITHOUT_CLASSIFICATION	4.4617806134910856E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999781224173022	WITHOUT_CLASSIFICATION	2.1877582697711843E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999781224173022	WITHOUT_CLASSIFICATION	2.1877582697711843E-5	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.999538168441918	WITHOUT_CLASSIFICATION	4.6183155808190925E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999542026815209	WITHOUT_CLASSIFICATION	4.579731847900213E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9998061555270894	WITHOUT_CLASSIFICATION	1.9384447291051732E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999987259841383	WITHOUT_CLASSIFICATION	1.2740158616356163E-6	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999987259841383	WITHOUT_CLASSIFICATION	1.2740158616356163E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999924884024602	WITHOUT_CLASSIFICATION	7.51159753979728E-6	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999914187995684	WITHOUT_CLASSIFICATION	8.581200431514625E-6	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999996926046367	WITHOUT_CLASSIFICATION	3.073953631682205E-7	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999972757090448	WITHOUT_CLASSIFICATION	2.7242909550934724E-6	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.999999103138037	WITHOUT_CLASSIFICATION	8.968619630062624E-7	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999978655403283	WITHOUT_CLASSIFICATION	2.1344596717341933E-6	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999904359604679	WITHOUT_CLASSIFICATION	9.564039532125197E-6	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.999994265778293	WITHOUT_CLASSIFICATION	5.734221707106587E-6	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999776291354906	WITHOUT_CLASSIFICATION	2.2370864509409363E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.999968335113371	WITHOUT_CLASSIFICATION	3.166488662897462E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999958969053581	WITHOUT_CLASSIFICATION	4.103094641978147E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999958969053581	WITHOUT_CLASSIFICATION	4.103094641978147E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9997416545579276	WITHOUT_CLASSIFICATION	2.5834544207230524E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999968306777943	WITHOUT_CLASSIFICATION	3.169322205696932E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999968306777943	WITHOUT_CLASSIFICATION	3.169322205696932E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999968306777943	WITHOUT_CLASSIFICATION	3.169322205696932E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9985394783708746	WITHOUT_CLASSIFICATION	0.001460521629125342	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9985394783708746	WITHOUT_CLASSIFICATION	0.001460521629125342	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999881389911063	WITHOUT_CLASSIFICATION	1.186100889368569E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999881389911063	WITHOUT_CLASSIFICATION	1.186100889368569E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999881389911063	WITHOUT_CLASSIFICATION	1.186100889368569E-5	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999909776536858	WITHOUT_CLASSIFICATION	9.022346314175482E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999909776536858	WITHOUT_CLASSIFICATION	9.022346314175482E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999909776536858	WITHOUT_CLASSIFICATION	9.022346314175482E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999957948337255	WITHOUT_CLASSIFICATION	4.205166274442217E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999957948337255	WITHOUT_CLASSIFICATION	4.205166274442217E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999978503245655	WITHOUT_CLASSIFICATION	2.1496754346197096E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999978503245655	WITHOUT_CLASSIFICATION	2.1496754346197096E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999964357528329	WITHOUT_CLASSIFICATION	3.5642471671459868E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999964357528329	WITHOUT_CLASSIFICATION	3.5642471671459868E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999991444583709	WITHOUT_CLASSIFICATION	8.555416291572772E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999991444583709	WITHOUT_CLASSIFICATION	8.555416291572772E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.999995070206969	WITHOUT_CLASSIFICATION	4.9297930310518E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.999995070206969	WITHOUT_CLASSIFICATION	4.9297930310518E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999966853004238	WITHOUT_CLASSIFICATION	3.31469957614178E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999966853004238	WITHOUT_CLASSIFICATION	3.31469957614178E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999986880922906	WITHOUT_CLASSIFICATION	1.3119077093593103E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999986880922906	WITHOUT_CLASSIFICATION	1.3119077093593103E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999957948337255	WITHOUT_CLASSIFICATION	4.205166274442217E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999978503245655	WITHOUT_CLASSIFICATION	2.1496754346197096E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999964357528329	WITHOUT_CLASSIFICATION	3.5642471671459868E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.999995070206969	WITHOUT_CLASSIFICATION	4.9297930310518E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999966853004238	WITHOUT_CLASSIFICATION	3.31469957614178E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999986880922906	WITHOUT_CLASSIFICATION	1.3119077093593103E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999971231602899	WITHOUT_CLASSIFICATION	2.876839710202702E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999951421471577	WITHOUT_CLASSIFICATION	4.857852842309946E-6	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999397958613763	WITHOUT_CLASSIFICATION	6.02041386236543E-5	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9990714914001876	WITHOUT_CLASSIFICATION	9.28508599812488E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999952916228426	WITHOUT_CLASSIFICATION	4.708377157397914E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999969627565541	WITHOUT_CLASSIFICATION	3.037243445851825E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999595036954032	WITHOUT_CLASSIFICATION	4.049630459684313E-5	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999928330499613	WITHOUT_CLASSIFICATION	7.166950038685018E-6	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999981012706659	WITHOUT_CLASSIFICATION	1.8987293341770149E-6	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999985831590871	WITHOUT_CLASSIFICATION	1.4168409128471972E-6	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999956249884425	WITHOUT_CLASSIFICATION	4.375011557507572E-6	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999965033806943	WITHOUT_CLASSIFICATION	3.496619305546854E-6	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999966386039851	WITHOUT_CLASSIFICATION	3.3613960148049734E-6	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999927427796995	WITHOUT_CLASSIFICATION	7.257220300442016E-6	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999966957102414	WITHOUT_CLASSIFICATION	3.30428975861982E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999962951162245	WITHOUT_CLASSIFICATION	3.704883775499497E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.999998002464273	WITHOUT_CLASSIFICATION	1.9975357271221032E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999848278598988	WITHOUT_CLASSIFICATION	1.5172140101039673E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999959386449162	WITHOUT_CLASSIFICATION	4.061355083776838E-6	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999916917518012	WITHOUT_CLASSIFICATION	8.308248198729755E-6	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999906915327135	WITHOUT_CLASSIFICATION	9.308467286448132E-6	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999994767280477	WITHOUT_CLASSIFICATION	5.232719523142271E-7	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999941257818759	WITHOUT_CLASSIFICATION	5.874218124049671E-6	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999886843945544	WITHOUT_CLASSIFICATION	1.1315605445640809E-5	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999955156506035	WITHOUT_CLASSIFICATION	4.48434939653984E-6	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.999996949113318	WITHOUT_CLASSIFICATION	3.0508866820385146E-6	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999963177051031	WITHOUT_CLASSIFICATION	3.6822948968738005E-6	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999878518540348	WITHOUT_CLASSIFICATION	1.2148145965288533E-5	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999983430854107	WITHOUT_CLASSIFICATION	1.6569145892156574E-6	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999781052405949	WITHOUT_CLASSIFICATION	2.1894759405055936E-5	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999774475658507	WITHOUT_CLASSIFICATION	2.255243414930656E-5	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999956332256891	WITHOUT_CLASSIFICATION	4.366774310985384E-6	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999995653730297	WITHOUT_CLASSIFICATION	4.3462697027217126E-7	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999995653730297	WITHOUT_CLASSIFICATION	4.3462697027217126E-7	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999849227998275	WITHOUT_CLASSIFICATION	1.5077200172399564E-5	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999985926261751	WITHOUT_CLASSIFICATION	1.4073738249506784E-6	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999943533224576	WITHOUT_CLASSIFICATION	5.64667754240872E-6	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999996772429738	WITHOUT_CLASSIFICATION	3.227570263260099E-7	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.999977130419233	WITHOUT_CLASSIFICATION	2.2869580766974087E-5	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999852773790489	WITHOUT_CLASSIFICATION	1.4722620951216258E-5	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999998968331897	WITHOUT_CLASSIFICATION	1.0316681035697129E-7	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999690297453788	WITHOUT_CLASSIFICATION	3.097025462126041E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999972318418157	WITHOUT_CLASSIFICATION	2.7681581842499717E-6	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999997856036298	WITHOUT_CLASSIFICATION	2.1439637024064974E-7	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999961325375226	WITHOUT_CLASSIFICATION	3.867462477386523E-6	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999870527142679	WITHOUT_CLASSIFICATION	1.2947285732015466E-5	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999951229694899	WITHOUT_CLASSIFICATION	4.877030510172225E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999951229694899	WITHOUT_CLASSIFICATION	4.877030510172225E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.999996528813659	WITHOUT_CLASSIFICATION	3.4711863411316143E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.999996528813659	WITHOUT_CLASSIFICATION	3.4711863411316143E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.999996528813659	WITHOUT_CLASSIFICATION	3.4711863411316143E-6	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999972128060967	WITHOUT_CLASSIFICATION	2.7871939033166266E-6	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999889537411875	WITHOUT_CLASSIFICATION	1.1046258812609545E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999960376114945	WITHOUT_CLASSIFICATION	3.962388505472548E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999960376114945	WITHOUT_CLASSIFICATION	3.962388505472548E-6	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999992058003921	WITHOUT_CLASSIFICATION	7.941996079154919E-7	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999963021763918	WITHOUT_CLASSIFICATION	3.697823608253491E-6	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999990389977372	WITHOUT_CLASSIFICATION	9.6100226276246E-7	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999734135717854	WITHOUT_CLASSIFICATION	2.6586428214656885E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999995437530551	WITHOUT_CLASSIFICATION	4.5624694478541956E-7	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999935432099935	WITHOUT_CLASSIFICATION	6.456790006482512E-6	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999872378024013	WITHOUT_CLASSIFICATION	1.2762197598613208E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999992409597938	WITHOUT_CLASSIFICATION	7.590402063149714E-7	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999780939719032	WITHOUT_CLASSIFICATION	2.1906028096790827E-5	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999937544970752	WITHOUT_CLASSIFICATION	6.245502924843301E-6	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999970027610847	WITHOUT_CLASSIFICATION	2.9972389152723466E-6	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999936230029884	WITHOUT_CLASSIFICATION	6.37699701164133E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999978625793718	WITHOUT_CLASSIFICATION	2.137420628190897E-6	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999876695679667	WITHOUT_CLASSIFICATION	1.2330432033412018E-5	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999869848376753	WITHOUT_CLASSIFICATION	1.30151623246233E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999959811786032	WITHOUT_CLASSIFICATION	4.0188213967987695E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999972088566002	WITHOUT_CLASSIFICATION	2.7911433997770513E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.999996274878846	WITHOUT_CLASSIFICATION	3.725121153997914E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999961311839815	WITHOUT_CLASSIFICATION	3.868816018597193E-6	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.999999776111955	WITHOUT_CLASSIFICATION	2.238880449363609E-7	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999937155101553	WITHOUT_CLASSIFICATION	6.284489844837101E-6	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.999993744231621	WITHOUT_CLASSIFICATION	6.255768379012242E-6	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9998843731776449	WITHOUT_CLASSIFICATION	1.1562682235516044E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.999996783740538	WITHOUT_CLASSIFICATION	3.2162594619354787E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.999996783740538	WITHOUT_CLASSIFICATION	3.2162594619354787E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.999996783740538	WITHOUT_CLASSIFICATION	3.2162594619354787E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999970612037412	WITHOUT_CLASSIFICATION	2.9387962587500133E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999970612037412	WITHOUT_CLASSIFICATION	2.9387962587500133E-6	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999978484738288	WITHOUT_CLASSIFICATION	2.151526171225596E-6	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999898164276524	WITHOUT_CLASSIFICATION	1.018357234756553E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999898164276524	WITHOUT_CLASSIFICATION	1.018357234756553E-5	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999958035006771	WITHOUT_CLASSIFICATION	4.196499322901601E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.999828195555516	WITHOUT_CLASSIFICATION	1.71804444483884E-4	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999978484738288	WITHOUT_CLASSIFICATION	2.151526171225596E-6	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999499215288373	WITHOUT_CLASSIFICATION	5.007847116260493E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999978484738288	WITHOUT_CLASSIFICATION	2.151526171225596E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999312992228333	WITHOUT_CLASSIFICATION	6.870077716666947E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999312992228333	WITHOUT_CLASSIFICATION	6.870077716666947E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999951229694899	WITHOUT_CLASSIFICATION	4.877030510172225E-6	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9998841076702782	WITHOUT_CLASSIFICATION	1.1589232972165424E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9998194573899319	WITHOUT_CLASSIFICATION	1.8054261006817283E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9998487894480708	WITHOUT_CLASSIFICATION	1.5121055192933964E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9998583182190097	WITHOUT_CLASSIFICATION	1.4168178099018344E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9998914920332707	WITHOUT_CLASSIFICATION	1.0850796672934798E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9998430386815524	WITHOUT_CLASSIFICATION	1.5696131844750502E-4	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.99983517317914	WITHOUT_CLASSIFICATION	1.648268208599745E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9998181648636424	WITHOUT_CLASSIFICATION	1.8183513635758135E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9998089862340563	WITHOUT_CLASSIFICATION	1.9101376594365233E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9998202134918043	WITHOUT_CLASSIFICATION	1.7978650819571633E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9998429546729714	WITHOUT_CLASSIFICATION	1.570453270287548E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9997953624573368	WITHOUT_CLASSIFICATION	2.0463754266313326E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9998060341078459	WITHOUT_CLASSIFICATION	1.9396589215421735E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9998524804912254	WITHOUT_CLASSIFICATION	1.4751950877456077E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.999778864317554	WITHOUT_CLASSIFICATION	2.2113568244596418E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9998394557813284	WITHOUT_CLASSIFICATION	1.605442186715841E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9998612665422503	WITHOUT_CLASSIFICATION	1.3873345774963845E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9998190963579795	WITHOUT_CLASSIFICATION	1.8090364202050864E-4	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9998522134278379	WITHOUT_CLASSIFICATION	1.4778657216208796E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9997915464071562	WITHOUT_CLASSIFICATION	2.0845359284389186E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9998294153118285	WITHOUT_CLASSIFICATION	1.7058468817144872E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9997822164021802	WITHOUT_CLASSIFICATION	2.1778359781978905E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9997934033573438	WITHOUT_CLASSIFICATION	2.0659664265624E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9998324111677115	WITHOUT_CLASSIFICATION	1.6758883228853655E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9998137537844245	WITHOUT_CLASSIFICATION	1.8624621557556463E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9998620335163378	WITHOUT_CLASSIFICATION	1.3796648366223605E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9998670163783502	WITHOUT_CLASSIFICATION	1.3298362164992087E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9998677278406124	WITHOUT_CLASSIFICATION	1.3227215938759507E-4	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9998735514853149	WITHOUT_CLASSIFICATION	1.264485146850434E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9998434548188468	WITHOUT_CLASSIFICATION	1.5654518115306167E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9998715667790469	WITHOUT_CLASSIFICATION	1.284332209531689E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9998752082218584	WITHOUT_CLASSIFICATION	1.2479177814162093E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9999031030424927	WITHOUT_CLASSIFICATION	9.689695750723702E-5	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.999845139345383	WITHOUT_CLASSIFICATION	1.5486065461701326E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9998535650377617	WITHOUT_CLASSIFICATION	1.4643496223820052E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.999818943577485	WITHOUT_CLASSIFICATION	1.8105642251489668E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9998360405644662	WITHOUT_CLASSIFICATION	1.6395943553379328E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9997594446707715	WITHOUT_CLASSIFICATION	2.4055532922848846E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9998638244935475	WITHOUT_CLASSIFICATION	1.3617550645244478E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9998908344590742	WITHOUT_CLASSIFICATION	1.091655409258098E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9998348161404716	WITHOUT_CLASSIFICATION	1.6518385952838486E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9998351580056704	WITHOUT_CLASSIFICATION	1.6484199432966322E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9998245601851556	WITHOUT_CLASSIFICATION	1.7543981484436863E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9998207536166557	WITHOUT_CLASSIFICATION	1.7924638334442392E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9997873394513861	WITHOUT_CLASSIFICATION	2.126605486138561E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9998452093714888	WITHOUT_CLASSIFICATION	1.5479062851125842E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9998402170899762	WITHOUT_CLASSIFICATION	1.597829100238973E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9998016422997411	WITHOUT_CLASSIFICATION	1.9835770025891674E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9998293730038531	WITHOUT_CLASSIFICATION	1.706269961468133E-4	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9998556520315086	WITHOUT_CLASSIFICATION	1.4434796849139338E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9998403538121088	WITHOUT_CLASSIFICATION	1.59646187891251E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9997634023817059	WITHOUT_CLASSIFICATION	2.3659761829411855E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9998127781251102	WITHOUT_CLASSIFICATION	1.8722187488983267E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9997967133085315	WITHOUT_CLASSIFICATION	2.032866914684508E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9998256718447165	WITHOUT_CLASSIFICATION	1.7432815528353268E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9998651329896961	WITHOUT_CLASSIFICATION	1.348670103037888E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9998828516703727	WITHOUT_CLASSIFICATION	1.1714832962739992E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9998678168445347	WITHOUT_CLASSIFICATION	1.3218315546531675E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9998194897986691	WITHOUT_CLASSIFICATION	1.805102013308611E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9998058894446348	WITHOUT_CLASSIFICATION	1.9411055536529867E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9997735120369847	WITHOUT_CLASSIFICATION	2.2648796301532576E-4	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9997623729842282	WITHOUT_CLASSIFICATION	2.376270157718524E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9998036341166897	WITHOUT_CLASSIFICATION	1.963658833103783E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9997827164503739	WITHOUT_CLASSIFICATION	2.1728354962626946E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9998296061786446	WITHOUT_CLASSIFICATION	1.7039382135538005E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9998137368931365	WITHOUT_CLASSIFICATION	1.862631068634387E-4	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9998165094332073	WITHOUT_CLASSIFICATION	1.834905667925829E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9998173278880055	WITHOUT_CLASSIFICATION	1.826721119945194E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9997898447834359	WITHOUT_CLASSIFICATION	2.1015521656414656E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.999784199248885	WITHOUT_CLASSIFICATION	2.158007511151609E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9997964603100312	WITHOUT_CLASSIFICATION	2.035396899687267E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9997735057741337	WITHOUT_CLASSIFICATION	2.2649422586629308E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9998748153512171	WITHOUT_CLASSIFICATION	1.251846487827801E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9998618671296511	WITHOUT_CLASSIFICATION	1.381328703489768E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9998657776572053	WITHOUT_CLASSIFICATION	1.342223427946662E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9997999112924539	WITHOUT_CLASSIFICATION	2.0008870754611614E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9998054820866927	WITHOUT_CLASSIFICATION	1.9451791330727387E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9998369587097107	WITHOUT_CLASSIFICATION	1.6304129028929263E-4	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9998929732554966	WITHOUT_CLASSIFICATION	1.0702674450337026E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.999797538098776	WITHOUT_CLASSIFICATION	2.024619012240162E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999792715287829	WITHOUT_CLASSIFICATION	2.0728471217122958E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999960614171989	WITHOUT_CLASSIFICATION	3.938582801210935E-6	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999912624921677	WITHOUT_CLASSIFICATION	8.737507832244441E-6	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999911905074317	WITHOUT_CLASSIFICATION	8.809492568300751E-6	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.999999401835927	WITHOUT_CLASSIFICATION	5.981640730517752E-7	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999986850763101	WITHOUT_CLASSIFICATION	1.314923689947844E-6	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999809731944833	WITHOUT_CLASSIFICATION	1.9026805516695105E-5	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999958621442557	WITHOUT_CLASSIFICATION	4.137855744338277E-6	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.999997200174011	WITHOUT_CLASSIFICATION	2.799825988930645E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999973920100452	WITHOUT_CLASSIFICATION	2.6079899548720052E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999852773790489	WITHOUT_CLASSIFICATION	1.4722620951216258E-5	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999972128060967	WITHOUT_CLASSIFICATION	2.7871939033166266E-6	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999889537411875	WITHOUT_CLASSIFICATION	1.1046258812609545E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999960376114945	WITHOUT_CLASSIFICATION	3.962388505472548E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.999996274878846	WITHOUT_CLASSIFICATION	3.725121153997914E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999961311839815	WITHOUT_CLASSIFICATION	3.868816018597193E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999957478184895	WITHOUT_CLASSIFICATION	4.252181510471028E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999970612037412	WITHOUT_CLASSIFICATION	2.9387962587500133E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999951229694899	WITHOUT_CLASSIFICATION	4.877030510172225E-6	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999924851309566	WITHOUT_CLASSIFICATION	7.514869043443306E-6	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999952635563938	WITHOUT_CLASSIFICATION	4.736443606121665E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999975253589555	WITHOUT_CLASSIFICATION	2.474641044598874E-6	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999741238027547	WITHOUT_CLASSIFICATION	2.5876197245269296E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999809288450012	WITHOUT_CLASSIFICATION	1.9071154998730865E-5	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999827191125465	WITHOUT_CLASSIFICATION	1.7280887453462575E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999982414770928	WITHOUT_CLASSIFICATION	1.7585229071032914E-6	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999993763040353	WITHOUT_CLASSIFICATION	6.236959646434528E-7	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999848278598988	WITHOUT_CLASSIFICATION	1.5172140101039673E-5	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999793549616728	WITHOUT_CLASSIFICATION	2.0645038327223393E-5	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999971034350946	WITHOUT_CLASSIFICATION	2.896564905405613E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999977561525348	WITHOUT_CLASSIFICATION	2.2438474651496632E-6	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999965821683843	WITHOUT_CLASSIFICATION	3.417831615713846E-6	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999959700126754	WITHOUT_CLASSIFICATION	4.0299873246746335E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999949288795172	WITHOUT_CLASSIFICATION	5.071120482788172E-6	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999899660994751	WITHOUT_CLASSIFICATION	1.0033900524905967E-5	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999977586977682	WITHOUT_CLASSIFICATION	2.2413022318407003E-6	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999996936923023	WITHOUT_CLASSIFICATION	3.063076976543228E-7	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999999117042874	WITHOUT_CLASSIFICATION	8.829571265983855E-8	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999873115175023	WITHOUT_CLASSIFICATION	1.2688482497727932E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999802642906144	WITHOUT_CLASSIFICATION	1.9735709385697546E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.999990764831768	WITHOUT_CLASSIFICATION	9.235168231977716E-6	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999954713659664	WITHOUT_CLASSIFICATION	4.528634033537424E-6	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999972782274607	WITHOUT_CLASSIFICATION	2.721772539433591E-6	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999600229683903	WITHOUT_CLASSIFICATION	3.997703160965523E-5	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999971725406805	WITHOUT_CLASSIFICATION	2.827459319350802E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999897911761522	WITHOUT_CLASSIFICATION	1.0208823847816083E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999998541666619	WITHOUT_CLASSIFICATION	1.4583333796495064E-7	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999865323435416	WITHOUT_CLASSIFICATION	1.3467656458288673E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999933896534402	WITHOUT_CLASSIFICATION	6.610346559885556E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999612190650838	WITHOUT_CLASSIFICATION	3.878093491607238E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999906011317365	WITHOUT_CLASSIFICATION	9.398868263437709E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999906011317365	WITHOUT_CLASSIFICATION	9.398868263437709E-6	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999965485636375	WITHOUT_CLASSIFICATION	3.451436362494101E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.999943994282459	WITHOUT_CLASSIFICATION	5.6005717541006724E-5	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999866790589268	WITHOUT_CLASSIFICATION	1.3320941073142681E-5	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999940260563802	WITHOUT_CLASSIFICATION	5.973943619705822E-6	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.999970926991503	WITHOUT_CLASSIFICATION	2.907300849693416E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999917043116359	WITHOUT_CLASSIFICATION	8.295688364123722E-6	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.999951912620486	WITHOUT_CLASSIFICATION	4.808737951402871E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999987345901795	WITHOUT_CLASSIFICATION	1.2654098204896838E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999564743671197	WITHOUT_CLASSIFICATION	4.352563288043191E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.99999991095009	WITHOUT_CLASSIFICATION	8.904990997612374E-8	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999977015437794	WITHOUT_CLASSIFICATION	2.298456220575858E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999959446719615	WITHOUT_CLASSIFICATION	4.0553280384809735E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999968851387883	WITHOUT_CLASSIFICATION	3.1148612117240205E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999977763126333	WITHOUT_CLASSIFICATION	2.223687366753095E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999979104797585	WITHOUT_CLASSIFICATION	2.089520241455515E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999973114469858	WITHOUT_CLASSIFICATION	2.6885530143549047E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999988569088544	WITHOUT_CLASSIFICATION	1.1430911456246625E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999221208488723	WITHOUT_CLASSIFICATION	7.787915112770839E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999992538310687	WITHOUT_CLASSIFICATION	7.461689313522807E-7	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999938474807485	WITHOUT_CLASSIFICATION	6.15251925150124E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999959449737655	WITHOUT_CLASSIFICATION	4.055026234493293E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999985891655452	WITHOUT_CLASSIFICATION	1.4108344548189508E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999968408591214	WITHOUT_CLASSIFICATION	3.1591408785489928E-6	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999999668681627	WITHOUT_CLASSIFICATION	3.3131837304518514E-7	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999989909760814	WITHOUT_CLASSIFICATION	1.0090239186507967E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999984288604695	WITHOUT_CLASSIFICATION	1.571139530497742E-6	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.999999283128489	WITHOUT_CLASSIFICATION	7.168715110097309E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999982700876697	WITHOUT_CLASSIFICATION	1.729912330286754E-6	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.999999308520253	WITHOUT_CLASSIFICATION	6.914797470379693E-7	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999986468979576	WITHOUT_CLASSIFICATION	1.3531020424066093E-6	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999856234632256	WITHOUT_CLASSIFICATION	1.4376536774372117E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999994481929748	WITHOUT_CLASSIFICATION	5.518070252538841E-7	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999998643540023	WITHOUT_CLASSIFICATION	1.3564599775168969E-7	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.999999836253862	WITHOUT_CLASSIFICATION	1.63746138067046E-7	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999980695313264	WITHOUT_CLASSIFICATION	1.9304686735288037E-6	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999995848024268	WITHOUT_CLASSIFICATION	4.151975731501859E-7	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999973263143208	WITHOUT_CLASSIFICATION	2.673685679298333E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999984108754021	WITHOUT_CLASSIFICATION	1.5891245980357277E-6	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999996908727298	WITHOUT_CLASSIFICATION	3.0912727019413774E-7	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999997494090188	WITHOUT_CLASSIFICATION	2.5059098116781177E-7	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999916489994908	WITHOUT_CLASSIFICATION	8.351000509320512E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999972778425672	WITHOUT_CLASSIFICATION	2.72215743272933E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999909852867229	WITHOUT_CLASSIFICATION	9.014713277147982E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999957855511585	WITHOUT_CLASSIFICATION	4.214448841468045E-6	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999995372351312	WITHOUT_CLASSIFICATION	4.6276486877053044E-7	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999986787278866	WITHOUT_CLASSIFICATION	1.3212721133362282E-6	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999956157846153	WITHOUT_CLASSIFICATION	4.384215384749081E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999996643312006	WITHOUT_CLASSIFICATION	3.356687993825192E-7	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999953194235813	WITHOUT_CLASSIFICATION	4.680576418641929E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999979984818825	WITHOUT_CLASSIFICATION	2.001518117504755E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9989258022117941	WITHOUT_CLASSIFICATION	0.0010741977882059563	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999939408483384	WITHOUT_CLASSIFICATION	6.059151661553234E-6	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999929713215312	WITHOUT_CLASSIFICATION	7.028678468899299E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999988738675104	WITHOUT_CLASSIFICATION	1.1261324895801336E-6	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999821883125459	WITHOUT_CLASSIFICATION	1.7811687453999707E-5	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999982705118245	WITHOUT_CLASSIFICATION	1.7294881755277633E-6	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999976325358858	WITHOUT_CLASSIFICATION	2.3674641141686115E-6	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999988773544237	WITHOUT_CLASSIFICATION	1.1226455762926624E-6	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999995699173606	WITHOUT_CLASSIFICATION	4.300826394593029E-7	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999989859177434	WITHOUT_CLASSIFICATION	1.014082256686188E-6	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.999999904529196	WITHOUT_CLASSIFICATION	9.54708041183825E-8	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999987590997786	WITHOUT_CLASSIFICATION	1.240900221432401E-6	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999988118602028	WITHOUT_CLASSIFICATION	1.1881397972598243E-6	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999998718625257	WITHOUT_CLASSIFICATION	1.2813747434596953E-7	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999989939214924	WITHOUT_CLASSIFICATION	1.006078507599146E-6	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.999999262637965	WITHOUT_CLASSIFICATION	7.373620349838565E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.999993576525489	WITHOUT_CLASSIFICATION	6.423474510923875E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999918976286566	WITHOUT_CLASSIFICATION	8.102371343474596E-6	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999992843217375	WITHOUT_CLASSIFICATION	7.156782625596257E-7	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999998061576421	WITHOUT_CLASSIFICATION	1.9384235792592387E-7	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999973189145371	WITHOUT_CLASSIFICATION	2.6810854627623856E-6	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999868456679609	WITHOUT_CLASSIFICATION	1.3154332039195719E-5	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999914277309382	WITHOUT_CLASSIFICATION	8.57226906180541E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.999998850695633	WITHOUT_CLASSIFICATION	1.1493043669412396E-6	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999822515366058	WITHOUT_CLASSIFICATION	1.7748463394207724E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9999598988333179	WITHOUT_CLASSIFICATION	4.010116668201397E-5	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.999998162141935	WITHOUT_CLASSIFICATION	1.837858064964388E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999988066180906	WITHOUT_CLASSIFICATION	1.193381909431494E-6	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999993867869248	WITHOUT_CLASSIFICATION	6.132130751154228E-7	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999984800320333	WITHOUT_CLASSIFICATION	1.5199679666250446E-6	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999999268599132	WITHOUT_CLASSIFICATION	7.314008680663158E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999972974107648	WITHOUT_CLASSIFICATION	2.702589235147515E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999995049196944	WITHOUT_CLASSIFICATION	4.950803056847412E-7	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999973919861932	WITHOUT_CLASSIFICATION	2.6080138068583393E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999998793636866	WITHOUT_CLASSIFICATION	1.206363133534487E-7	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999988137209793	WITHOUT_CLASSIFICATION	1.186279020783987E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9997327096514195	WITHOUT_CLASSIFICATION	2.6729034858059055E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999906895823766	WITHOUT_CLASSIFICATION	9.310417623417572E-6	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999995301805953	WITHOUT_CLASSIFICATION	4.6981940479708E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999875360067642	WITHOUT_CLASSIFICATION	1.2463993235770424E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999983741537195	WITHOUT_CLASSIFICATION	1.6258462805722588E-6	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999993332033242	WITHOUT_CLASSIFICATION	6.667966757423536E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999967801696314	WITHOUT_CLASSIFICATION	3.219830368582548E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999792981417952	WITHOUT_CLASSIFICATION	2.070185820471407E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999970129618286	WITHOUT_CLASSIFICATION	2.9870381713129317E-6	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999980553894553	WITHOUT_CLASSIFICATION	1.9446105447046722E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.999999000058495	WITHOUT_CLASSIFICATION	9.999415050575252E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999991493578684	WITHOUT_CLASSIFICATION	8.506421316133646E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999987119704472	WITHOUT_CLASSIFICATION	1.2880295528023416E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997013255428	WITHOUT_CLASSIFICATION	2.986744572165645E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9997948544590445	WITHOUT_CLASSIFICATION	2.051455409555674E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999664408355763	WITHOUT_CLASSIFICATION	3.355916442380472E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999837579845625	WITHOUT_CLASSIFICATION	1.6242015437565713E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999793115566586	WITHOUT_CLASSIFICATION	2.0688443341348668E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999977425555928	WITHOUT_CLASSIFICATION	2.2574444072071803E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999892260410561	WITHOUT_CLASSIFICATION	1.0773958943949599E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999812165693901	WITHOUT_CLASSIFICATION	1.8783430609864196E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999896162608126	WITHOUT_CLASSIFICATION	1.0383739187451312E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999978950357565	WITHOUT_CLASSIFICATION	2.10496424349435E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982546409726	WITHOUT_CLASSIFICATION	1.7453590274139734E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999796812167315	WITHOUT_CLASSIFICATION	2.0318783268543864E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999828087596921	WITHOUT_CLASSIFICATION	1.7191240307870583E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902207737743	WITHOUT_CLASSIFICATION	9.77922622567475E-6	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999978798273245	WITHOUT_CLASSIFICATION	2.120172675501512E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999819545038944	WITHOUT_CLASSIFICATION	1.8045496105728636E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999789857423771	WITHOUT_CLASSIFICATION	2.1014257622797013E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999987891247814	WITHOUT_CLASSIFICATION	1.2108752186116144E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999808271294008	WITHOUT_CLASSIFICATION	1.917287059911066E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999783523293911	WITHOUT_CLASSIFICATION	2.164767060884385E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999805265068754	WITHOUT_CLASSIFICATION	1.9473493124659435E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999837392904308	WITHOUT_CLASSIFICATION	1.626070956913001E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986399966376	WITHOUT_CLASSIFICATION	1.3600033624106073E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999866311208931	WITHOUT_CLASSIFICATION	1.3368879106768814E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999762659296536	WITHOUT_CLASSIFICATION	2.3734070346403477E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999801819905664	WITHOUT_CLASSIFICATION	1.9818009433701073E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999861325015089	WITHOUT_CLASSIFICATION	1.3867498491005469E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999854475580372	WITHOUT_CLASSIFICATION	1.4552441962785175E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999896975540784	WITHOUT_CLASSIFICATION	1.0302445921543442E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999783523293911	WITHOUT_CLASSIFICATION	2.164767060884385E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999896975540784	WITHOUT_CLASSIFICATION	1.0302445921543442E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999895040490198	WITHOUT_CLASSIFICATION	1.0495950980317616E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999869298038974	WITHOUT_CLASSIFICATION	1.3070196102676686E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999841234044405	WITHOUT_CLASSIFICATION	1.587659555945948E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875927077392	WITHOUT_CLASSIFICATION	1.2407292260907903E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999881553517668	WITHOUT_CLASSIFICATION	1.1844648233219498E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875878515315	WITHOUT_CLASSIFICATION	1.241214846840867E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999826023101115	WITHOUT_CLASSIFICATION	1.739768988851862E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999826023101115	WITHOUT_CLASSIFICATION	1.739768988851862E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999856434107282	WITHOUT_CLASSIFICATION	1.435658927170894E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889808506441	WITHOUT_CLASSIFICATION	1.1019149355784294E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999884611002255	WITHOUT_CLASSIFICATION	1.1538899774365897E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999825329279094	WITHOUT_CLASSIFICATION	1.7467072090566265E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999847332926772	WITHOUT_CLASSIFICATION	1.5266707322741328E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999977701844907	WITHOUT_CLASSIFICATION	2.229815509302267E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99998653204202	WITHOUT_CLASSIFICATION	1.3467957979979215E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999783523293911	WITHOUT_CLASSIFICATION	2.164767060884385E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999868154916963	WITHOUT_CLASSIFICATION	1.3184508303706437E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999909713053963	WITHOUT_CLASSIFICATION	9.028694603787839E-6	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999847958951648	WITHOUT_CLASSIFICATION	1.5204104835260694E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999879711277775	WITHOUT_CLASSIFICATION	1.2028872222463305E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999896873730604	WITHOUT_CLASSIFICATION	1.0312626939638757E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999864838001056	WITHOUT_CLASSIFICATION	1.3516199894443406E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999980776103279	WITHOUT_CLASSIFICATION	1.922389672100142E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999839566666711	WITHOUT_CLASSIFICATION	1.604333332898245E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999830095489146	WITHOUT_CLASSIFICATION	1.6990451085398562E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999830095489146	WITHOUT_CLASSIFICATION	1.6990451085398562E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999828708879227	WITHOUT_CLASSIFICATION	1.712911207719004E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999828708879227	WITHOUT_CLASSIFICATION	1.712911207719004E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999805344934997	WITHOUT_CLASSIFICATION	1.9465506500299002E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999864036512449	WITHOUT_CLASSIFICATION	1.3596348755035008E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999783523293911	WITHOUT_CLASSIFICATION	2.164767060884385E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999805265068754	WITHOUT_CLASSIFICATION	1.9473493124659435E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999826023101115	WITHOUT_CLASSIFICATION	1.739768988851862E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999980776103279	WITHOUT_CLASSIFICATION	1.922389672100142E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999830095489146	WITHOUT_CLASSIFICATION	1.6990451085398562E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999828708879227	WITHOUT_CLASSIFICATION	1.712911207719004E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999864036512449	WITHOUT_CLASSIFICATION	1.3596348755035008E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999850371703858	WITHOUT_CLASSIFICATION	1.4962829614234352E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999908923399276	WITHOUT_CLASSIFICATION	9.107660072416307E-6	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999886139530607	WITHOUT_CLASSIFICATION	1.1386046939293937E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99998935883204	WITHOUT_CLASSIFICATION	1.064116795999493E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999877858698973	WITHOUT_CLASSIFICATION	1.2214130102728043E-5	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999893319677868	WITHOUT_CLASSIFICATION	1.0668032213283282E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999707059724687	WITHOUT_CLASSIFICATION	2.929402753121064E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999826023101115	WITHOUT_CLASSIFICATION	1.739768988851862E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999871401726924	WITHOUT_CLASSIFICATION	1.2859827307570335E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999707059724687	WITHOUT_CLASSIFICATION	2.929402753121064E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999848694459288	WITHOUT_CLASSIFICATION	1.5130554071342153E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999875486212385	WITHOUT_CLASSIFICATION	1.2451378761351479E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863249386998	WITHOUT_CLASSIFICATION	1.367506130034675E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999892418171997	WITHOUT_CLASSIFICATION	1.0758182800330351E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999887467276372	WITHOUT_CLASSIFICATION	1.1253272362770789E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999831389674579	WITHOUT_CLASSIFICATION	1.686103254207723E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999888178334049	WITHOUT_CLASSIFICATION	1.1182166595202998E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999892731537275	WITHOUT_CLASSIFICATION	1.0726846272408926E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999827314959985	WITHOUT_CLASSIFICATION	1.7268504001430886E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999737943264566	WITHOUT_CLASSIFICATION	2.6205673543337807E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999864530908793	WITHOUT_CLASSIFICATION	1.3546909120705416E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999839943173076	WITHOUT_CLASSIFICATION	1.600568269249398E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875323947911	WITHOUT_CLASSIFICATION	1.2467605208928272E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999663530947064	WITHOUT_CLASSIFICATION	3.3646905293593585E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999642832672159	WITHOUT_CLASSIFICATION	3.5716732784001984E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999866177611223	WITHOUT_CLASSIFICATION	1.3382238877664726E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999824538405846	WITHOUT_CLASSIFICATION	1.754615941535498E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999666307218447	WITHOUT_CLASSIFICATION	3.3369278155226E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999713916684542	WITHOUT_CLASSIFICATION	2.860833154587898E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999701569241154	WITHOUT_CLASSIFICATION	2.9843075884583396E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999938474807485	WITHOUT_CLASSIFICATION	6.15251925150124E-6	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999987726074339	WITHOUT_CLASSIFICATION	1.227392566103803E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856221111827	WITHOUT_CLASSIFICATION	1.4377888817181515E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999883588441438	WITHOUT_CLASSIFICATION	1.16411558561899E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999864530908793	WITHOUT_CLASSIFICATION	1.3546909120705416E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999860899387035	WITHOUT_CLASSIFICATION	1.3910061296489481E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999872022121546	WITHOUT_CLASSIFICATION	1.2797787845331015E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999899510118191	WITHOUT_CLASSIFICATION	1.0048988180840418E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999986665842326	WITHOUT_CLASSIFICATION	1.3334157674004597E-6	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999987183971194	WITHOUT_CLASSIFICATION	1.2816028805693082E-6	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.999998985420609	WITHOUT_CLASSIFICATION	1.0145793909276641E-6	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999989695540565	WITHOUT_CLASSIFICATION	1.0304459434425461E-6	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999990213352898	WITHOUT_CLASSIFICATION	9.786647101655811E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999988372541951	WITHOUT_CLASSIFICATION	1.1627458048304695E-6	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999966096642963	WITHOUT_CLASSIFICATION	3.3903357036607174E-6	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999986718210743	WITHOUT_CLASSIFICATION	1.3281789257901654E-6	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999961272954182	WITHOUT_CLASSIFICATION	3.872704581766237E-6	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999992402076373	WITHOUT_CLASSIFICATION	7.597923627822243E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999826870728682	WITHOUT_CLASSIFICATION	1.731292713176915E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999970129618286	WITHOUT_CLASSIFICATION	2.9870381713129317E-6	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999630053360303	WITHOUT_CLASSIFICATION	3.6994663969647816E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999977471669382	WITHOUT_CLASSIFICATION	2.2528330617301977E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999864376819748	WITHOUT_CLASSIFICATION	1.356231802518489E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999983870661836	WITHOUT_CLASSIFICATION	1.6129338164679922E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999990863282043	WITHOUT_CLASSIFICATION	9.136717956626611E-7	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.999999491733065	WITHOUT_CLASSIFICATION	5.082669348950382E-7	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999985357940704	WITHOUT_CLASSIFICATION	1.4642059295906735E-6	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999990591911149	WITHOUT_CLASSIFICATION	9.408088850833138E-7	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.999987607718061	WITHOUT_CLASSIFICATION	1.239228193914848E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999897911761522	WITHOUT_CLASSIFICATION	1.0208823847816083E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999998541666619	WITHOUT_CLASSIFICATION	1.4583333796495064E-7	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999865323435416	WITHOUT_CLASSIFICATION	1.3467656458288673E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999933896534402	WITHOUT_CLASSIFICATION	6.610346559885556E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999612190650838	WITHOUT_CLASSIFICATION	3.878093491607238E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999906011317365	WITHOUT_CLASSIFICATION	9.398868263437709E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.999943994282459	WITHOUT_CLASSIFICATION	5.6005717541006724E-5	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999866790589268	WITHOUT_CLASSIFICATION	1.3320941073142681E-5	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999940260563802	WITHOUT_CLASSIFICATION	5.973943619705822E-6	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.999970926991503	WITHOUT_CLASSIFICATION	2.907300849693416E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999917043116359	WITHOUT_CLASSIFICATION	8.295688364123722E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999973864765054	WITHOUT_CLASSIFICATION	2.6135234946323477E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999875360067642	WITHOUT_CLASSIFICATION	1.2463993235770424E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.99999991095009	WITHOUT_CLASSIFICATION	8.904990997612374E-8	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999959446719615	WITHOUT_CLASSIFICATION	4.0553280384809735E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999988569088544	WITHOUT_CLASSIFICATION	1.1430911456246625E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999221208488723	WITHOUT_CLASSIFICATION	7.787915112770839E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999992538310687	WITHOUT_CLASSIFICATION	7.461689313522807E-7	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999564743671197	WITHOUT_CLASSIFICATION	4.352563288043191E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999977015437794	WITHOUT_CLASSIFICATION	2.298456220575858E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999938474807485	WITHOUT_CLASSIFICATION	6.15251925150124E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999977763126333	WITHOUT_CLASSIFICATION	2.223687366753095E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999971725406805	WITHOUT_CLASSIFICATION	2.827459319350802E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999968851387883	WITHOUT_CLASSIFICATION	3.1148612117240205E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999968408591214	WITHOUT_CLASSIFICATION	3.1591408785489928E-6	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999999668681627	WITHOUT_CLASSIFICATION	3.3131837304518514E-7	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999989909760814	WITHOUT_CLASSIFICATION	1.0090239186507967E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999970129618286	WITHOUT_CLASSIFICATION	2.9870381713129317E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999885745273429	WITHOUT_CLASSIFICATION	1.142547265717669E-5	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999919189893	WITHOUT_CLASSIFICATION	8.081010766797941E-9	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.999999283128489	WITHOUT_CLASSIFICATION	7.168715110097309E-7	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.999999308520253	WITHOUT_CLASSIFICATION	6.914797470379693E-7	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999989853709322	WITHOUT_CLASSIFICATION	1.0146290676824962E-6	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999986468979576	WITHOUT_CLASSIFICATION	1.3531020424066093E-6	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999856234632256	WITHOUT_CLASSIFICATION	1.4376536774372117E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999998643540023	WITHOUT_CLASSIFICATION	1.3564599775168969E-7	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999945688643901	WITHOUT_CLASSIFICATION	5.431135609972769E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.999999836253862	WITHOUT_CLASSIFICATION	1.63746138067046E-7	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999980695313264	WITHOUT_CLASSIFICATION	1.9304686735288037E-6	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999995848024268	WITHOUT_CLASSIFICATION	4.151975731501859E-7	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999963527534973	WITHOUT_CLASSIFICATION	3.647246502696237E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999973263143208	WITHOUT_CLASSIFICATION	2.673685679298333E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9994119058944321	WITHOUT_CLASSIFICATION	5.88094105567963E-4	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999916489994908	WITHOUT_CLASSIFICATION	8.351000509320512E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999984108754021	WITHOUT_CLASSIFICATION	1.5891245980357277E-6	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999996908727298	WITHOUT_CLASSIFICATION	3.0912727019413774E-7	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999909852867229	WITHOUT_CLASSIFICATION	9.014713277147982E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999957855511585	WITHOUT_CLASSIFICATION	4.214448841468045E-6	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999995372351312	WITHOUT_CLASSIFICATION	4.6276486877053044E-7	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999933589788946	WITHOUT_CLASSIFICATION	6.641021105437027E-6	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999986787278866	WITHOUT_CLASSIFICATION	1.3212721133362282E-6	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999956157846153	WITHOUT_CLASSIFICATION	4.384215384749081E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999996643312006	WITHOUT_CLASSIFICATION	3.356687993825192E-7	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999953194235813	WITHOUT_CLASSIFICATION	4.680576418641929E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999979984818825	WITHOUT_CLASSIFICATION	2.001518117504755E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9989258022117941	WITHOUT_CLASSIFICATION	0.0010741977882059563	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999939408483384	WITHOUT_CLASSIFICATION	6.059151661553234E-6	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999929713215312	WITHOUT_CLASSIFICATION	7.028678468899299E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999988738675104	WITHOUT_CLASSIFICATION	1.1261324895801336E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999988738675104	WITHOUT_CLASSIFICATION	1.1261324895801336E-6	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999821883125459	WITHOUT_CLASSIFICATION	1.7811687453999707E-5	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999982705118245	WITHOUT_CLASSIFICATION	1.7294881755277633E-6	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999976325358858	WITHOUT_CLASSIFICATION	2.3674641141686115E-6	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999988773544237	WITHOUT_CLASSIFICATION	1.1226455762926624E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999989859177434	WITHOUT_CLASSIFICATION	1.014082256686188E-6	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.999999904529196	WITHOUT_CLASSIFICATION	9.54708041183825E-8	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999987590997786	WITHOUT_CLASSIFICATION	1.240900221432401E-6	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999988118602028	WITHOUT_CLASSIFICATION	1.1881397972598243E-6	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999989939214924	WITHOUT_CLASSIFICATION	1.006078507599146E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999951563839308	WITHOUT_CLASSIFICATION	4.8436160692845635E-6	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.999999262637965	WITHOUT_CLASSIFICATION	7.373620349838565E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.999993576525489	WITHOUT_CLASSIFICATION	6.423474510923875E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999918976286566	WITHOUT_CLASSIFICATION	8.102371343474596E-6	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999992843217375	WITHOUT_CLASSIFICATION	7.156782625596257E-7	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999998061576421	WITHOUT_CLASSIFICATION	1.9384235792592387E-7	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999868456679609	WITHOUT_CLASSIFICATION	1.3154332039195719E-5	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999914277309382	WITHOUT_CLASSIFICATION	8.57226906180541E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.999998850695633	WITHOUT_CLASSIFICATION	1.1493043669412396E-6	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999822515366058	WITHOUT_CLASSIFICATION	1.7748463394207724E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9999598988333179	WITHOUT_CLASSIFICATION	4.010116668201397E-5	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.999998162141935	WITHOUT_CLASSIFICATION	1.837858064964388E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999988066180906	WITHOUT_CLASSIFICATION	1.193381909431494E-6	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999993867869248	WITHOUT_CLASSIFICATION	6.132130751154228E-7	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999984800320333	WITHOUT_CLASSIFICATION	1.5199679666250446E-6	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999999268599132	WITHOUT_CLASSIFICATION	7.314008680663158E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999972974107648	WITHOUT_CLASSIFICATION	2.702589235147515E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999973919861932	WITHOUT_CLASSIFICATION	2.6080138068583393E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999988137209793	WITHOUT_CLASSIFICATION	1.186279020783987E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9997327096514195	WITHOUT_CLASSIFICATION	2.6729034858059055E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999906895823766	WITHOUT_CLASSIFICATION	9.310417623417572E-6	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999995301805953	WITHOUT_CLASSIFICATION	4.6981940479708E-7	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999824048723366	WITHOUT_CLASSIFICATION	1.7595127663346542E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999097339106928	WITHOUT_CLASSIFICATION	9.026608930723303E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999999041843155	WITHOUT_CLASSIFICATION	9.581568449969676E-8	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999983741537195	WITHOUT_CLASSIFICATION	1.6258462805722588E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.999999709351032	WITHOUT_CLASSIFICATION	2.906489680334839E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999993332033242	WITHOUT_CLASSIFICATION	6.667966757423536E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999967801696314	WITHOUT_CLASSIFICATION	3.219830368582548E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999792981417952	WITHOUT_CLASSIFICATION	2.070185820471407E-5	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999996916595091	WITHOUT_CLASSIFICATION	3.0834049087121134E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999980553894553	WITHOUT_CLASSIFICATION	1.9446105447046722E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.999999000058495	WITHOUT_CLASSIFICATION	9.999415050575252E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999991493578684	WITHOUT_CLASSIFICATION	8.506421316133646E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999987119704472	WITHOUT_CLASSIFICATION	1.2880295528023416E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997013255428	WITHOUT_CLASSIFICATION	2.986744572165645E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9997948544590445	WITHOUT_CLASSIFICATION	2.051455409555674E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999664408355763	WITHOUT_CLASSIFICATION	3.355916442380472E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999837579845625	WITHOUT_CLASSIFICATION	1.6242015437565713E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999793115566586	WITHOUT_CLASSIFICATION	2.0688443341348668E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999892260410561	WITHOUT_CLASSIFICATION	1.0773958943949599E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999812165693901	WITHOUT_CLASSIFICATION	1.8783430609864196E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999896162608126	WITHOUT_CLASSIFICATION	1.0383739187451312E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999978950357565	WITHOUT_CLASSIFICATION	2.10496424349435E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806598875232	WITHOUT_CLASSIFICATION	1.9340112476860187E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999982546409726	WITHOUT_CLASSIFICATION	1.7453590274139734E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999796812167315	WITHOUT_CLASSIFICATION	2.0318783268543864E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999828087596921	WITHOUT_CLASSIFICATION	1.7191240307870583E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902207737743	WITHOUT_CLASSIFICATION	9.77922622567475E-6	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999978798273245	WITHOUT_CLASSIFICATION	2.120172675501512E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999819545038944	WITHOUT_CLASSIFICATION	1.8045496105728636E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999789857423771	WITHOUT_CLASSIFICATION	2.1014257622797013E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999882469587632	WITHOUT_CLASSIFICATION	1.1753041236733653E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999808271294008	WITHOUT_CLASSIFICATION	1.917287059911066E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999783523293911	WITHOUT_CLASSIFICATION	2.164767060884385E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999805265068754	WITHOUT_CLASSIFICATION	1.9473493124659435E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986399966376	WITHOUT_CLASSIFICATION	1.3600033624106073E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999866311208931	WITHOUT_CLASSIFICATION	1.3368879106768814E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999762659296536	WITHOUT_CLASSIFICATION	2.3734070346403477E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999801819905664	WITHOUT_CLASSIFICATION	1.9818009433701073E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999861325015089	WITHOUT_CLASSIFICATION	1.3867498491005469E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999883138129654	WITHOUT_CLASSIFICATION	1.1686187034676917E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999854475580372	WITHOUT_CLASSIFICATION	1.4552441962785175E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999896975540784	WITHOUT_CLASSIFICATION	1.0302445921543442E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999869298038974	WITHOUT_CLASSIFICATION	1.3070196102676686E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999826023101115	WITHOUT_CLASSIFICATION	1.739768988851862E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999826023101115	WITHOUT_CLASSIFICATION	1.739768988851862E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889808506441	WITHOUT_CLASSIFICATION	1.1019149355784294E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999896975540784	WITHOUT_CLASSIFICATION	1.0302445921543442E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999841234044405	WITHOUT_CLASSIFICATION	1.587659555945948E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875927077392	WITHOUT_CLASSIFICATION	1.2407292260907903E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999881553517668	WITHOUT_CLASSIFICATION	1.1844648233219498E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875878515315	WITHOUT_CLASSIFICATION	1.241214846840867E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999826023101115	WITHOUT_CLASSIFICATION	1.739768988851862E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999856434107282	WITHOUT_CLASSIFICATION	1.435658927170894E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999884611002255	WITHOUT_CLASSIFICATION	1.1538899774365897E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999825329279094	WITHOUT_CLASSIFICATION	1.7467072090566265E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999847332926772	WITHOUT_CLASSIFICATION	1.5266707322741328E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999977701844907	WITHOUT_CLASSIFICATION	2.229815509302267E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99998653204202	WITHOUT_CLASSIFICATION	1.3467957979979215E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999864507827118	WITHOUT_CLASSIFICATION	1.3549217288181553E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889844012393	WITHOUT_CLASSIFICATION	1.101559876067959E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999909713053963	WITHOUT_CLASSIFICATION	9.028694603787839E-6	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999847958951648	WITHOUT_CLASSIFICATION	1.5204104835260694E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999896873730604	WITHOUT_CLASSIFICATION	1.0312626939638757E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999783523293911	WITHOUT_CLASSIFICATION	2.164767060884385E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999783523293911	WITHOUT_CLASSIFICATION	2.164767060884385E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999879711277775	WITHOUT_CLASSIFICATION	1.2028872222463305E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999864838001056	WITHOUT_CLASSIFICATION	1.3516199894443406E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999980776103279	WITHOUT_CLASSIFICATION	1.922389672100142E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999830095489146	WITHOUT_CLASSIFICATION	1.6990451085398562E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999830095489146	WITHOUT_CLASSIFICATION	1.6990451085398562E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999828708879227	WITHOUT_CLASSIFICATION	1.712911207719004E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999828708879227	WITHOUT_CLASSIFICATION	1.712911207719004E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999805344934997	WITHOUT_CLASSIFICATION	1.9465506500299002E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999805344934997	WITHOUT_CLASSIFICATION	1.9465506500299002E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999864036512449	WITHOUT_CLASSIFICATION	1.3596348755035008E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999850371703858	WITHOUT_CLASSIFICATION	1.4962829614234352E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999805265068754	WITHOUT_CLASSIFICATION	1.9473493124659435E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999826023101115	WITHOUT_CLASSIFICATION	1.739768988851862E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999980776103279	WITHOUT_CLASSIFICATION	1.922389672100142E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999830095489146	WITHOUT_CLASSIFICATION	1.6990451085398562E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999828708879227	WITHOUT_CLASSIFICATION	1.712911207719004E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999908923399276	WITHOUT_CLASSIFICATION	9.107660072416307E-6	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999886139530607	WITHOUT_CLASSIFICATION	1.1386046939293937E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99998935883204	WITHOUT_CLASSIFICATION	1.064116795999493E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999877858698973	WITHOUT_CLASSIFICATION	1.2214130102728043E-5	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999893319677868	WITHOUT_CLASSIFICATION	1.0668032213283282E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999871401726924	WITHOUT_CLASSIFICATION	1.2859827307570335E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999871401726924	WITHOUT_CLASSIFICATION	1.2859827307570335E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999707059724687	WITHOUT_CLASSIFICATION	2.929402753121064E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999848694459288	WITHOUT_CLASSIFICATION	1.5130554071342153E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999875486212385	WITHOUT_CLASSIFICATION	1.2451378761351479E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863249386998	WITHOUT_CLASSIFICATION	1.367506130034675E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999892418171997	WITHOUT_CLASSIFICATION	1.0758182800330351E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781434447268	WITHOUT_CLASSIFICATION	2.185655527316507E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999826023101115	WITHOUT_CLASSIFICATION	1.739768988851862E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999707059724687	WITHOUT_CLASSIFICATION	2.929402753121064E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999887467276372	WITHOUT_CLASSIFICATION	1.1253272362770789E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999831389674579	WITHOUT_CLASSIFICATION	1.686103254207723E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999888178334049	WITHOUT_CLASSIFICATION	1.1182166595202998E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999827314959985	WITHOUT_CLASSIFICATION	1.7268504001430886E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999737943264566	WITHOUT_CLASSIFICATION	2.6205673543337807E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999864530908793	WITHOUT_CLASSIFICATION	1.3546909120705416E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999839943173076	WITHOUT_CLASSIFICATION	1.600568269249398E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875323947911	WITHOUT_CLASSIFICATION	1.2467605208928272E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999663530947064	WITHOUT_CLASSIFICATION	3.3646905293593585E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999642832672159	WITHOUT_CLASSIFICATION	3.5716732784001984E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999866177611223	WITHOUT_CLASSIFICATION	1.3382238877664726E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999824538405846	WITHOUT_CLASSIFICATION	1.754615941535498E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999666307218447	WITHOUT_CLASSIFICATION	3.3369278155226E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999713916684542	WITHOUT_CLASSIFICATION	2.860833154587898E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999701569241154	WITHOUT_CLASSIFICATION	2.9843075884583396E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999849484883876	WITHOUT_CLASSIFICATION	1.5051511612478907E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999883588441438	WITHOUT_CLASSIFICATION	1.16411558561899E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999864530908793	WITHOUT_CLASSIFICATION	1.3546909120705416E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999860899387035	WITHOUT_CLASSIFICATION	1.3910061296489481E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999872022121546	WITHOUT_CLASSIFICATION	1.2797787845331015E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999899510118191	WITHOUT_CLASSIFICATION	1.0048988180840418E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999885745273429	WITHOUT_CLASSIFICATION	1.142547265717669E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999986665842326	WITHOUT_CLASSIFICATION	1.3334157674004597E-6	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999987183971194	WITHOUT_CLASSIFICATION	1.2816028805693082E-6	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.999998985420609	WITHOUT_CLASSIFICATION	1.0145793909276641E-6	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999989695540565	WITHOUT_CLASSIFICATION	1.0304459434425461E-6	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999990213352898	WITHOUT_CLASSIFICATION	9.786647101655811E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999988372541951	WITHOUT_CLASSIFICATION	1.1627458048304695E-6	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999966096642963	WITHOUT_CLASSIFICATION	3.3903357036607174E-6	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999986718210743	WITHOUT_CLASSIFICATION	1.3281789257901654E-6	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999961272954182	WITHOUT_CLASSIFICATION	3.872704581766237E-6	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999992402076373	WITHOUT_CLASSIFICATION	7.597923627822243E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999826870728682	WITHOUT_CLASSIFICATION	1.731292713176915E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999970129618286	WITHOUT_CLASSIFICATION	2.9870381713129317E-6	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999630053360303	WITHOUT_CLASSIFICATION	3.6994663969647816E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999977471669382	WITHOUT_CLASSIFICATION	2.2528330617301977E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999864376819748	WITHOUT_CLASSIFICATION	1.356231802518489E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999983870661836	WITHOUT_CLASSIFICATION	1.6129338164679922E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999938474807485	WITHOUT_CLASSIFICATION	6.15251925150124E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999990863282043	WITHOUT_CLASSIFICATION	9.136717956626611E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999990863282043	WITHOUT_CLASSIFICATION	9.136717956626611E-7	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999985357940704	WITHOUT_CLASSIFICATION	1.4642059295906735E-6	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999990591911149	WITHOUT_CLASSIFICATION	9.408088850833138E-7	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999919189893	WITHOUT_CLASSIFICATION	8.081010766797941E-9	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999978886856905	WITHOUT_CLASSIFICATION	2.111314309411997E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999978886856905	WITHOUT_CLASSIFICATION	2.111314309411997E-6	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.999562523982838	WITHOUT_CLASSIFICATION	4.3747601716204453E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9998141945701088	WITHOUT_CLASSIFICATION	1.8580542989122224E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999999990756976	WITHOUT_CLASSIFICATION	9.243024306292561E-10	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999991067690407	WITHOUT_CLASSIFICATION	8.932309592790858E-7	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9999562976987726	WITHOUT_CLASSIFICATION	4.370230122734769E-5	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999998658050977	WITHOUT_CLASSIFICATION	1.341949021761509E-7	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999992645016268	WITHOUT_CLASSIFICATION	7.354983731543085E-7	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999970165161097	WITHOUT_CLASSIFICATION	2.983483890313681E-6	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9999896768781095	WITHOUT_CLASSIFICATION	1.0323121890535806E-5	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.999993963529808	WITHOUT_CLASSIFICATION	6.036470192063778E-6	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999983993728807	WITHOUT_CLASSIFICATION	1.6006271193737097E-6	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999815371489627	WITHOUT_CLASSIFICATION	1.846285103732651E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999926273223113	WITHOUT_CLASSIFICATION	7.372677688683354E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999987475011974	WITHOUT_CLASSIFICATION	1.2524988025535853E-6	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.999999722417008	WITHOUT_CLASSIFICATION	2.7758299210368925E-7	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999996969033134	WITHOUT_CLASSIFICATION	3.030966866077479E-7	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9999983844333454	WITHOUT_CLASSIFICATION	1.6155666546075689E-6	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999923845377335	WITHOUT_CLASSIFICATION	7.61546226654232E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999959524294092	WITHOUT_CLASSIFICATION	4.047570590885476E-6	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999984833505607	WITHOUT_CLASSIFICATION	1.516649439313887E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999994912681224	WITHOUT_CLASSIFICATION	5.087318775988239E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999989202352912	WITHOUT_CLASSIFICATION	1.0797647087475003E-6	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999713652628938	WITHOUT_CLASSIFICATION	2.863473710621507E-5	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.999981588815911	WITHOUT_CLASSIFICATION	1.841118408893635E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999982622101702	WITHOUT_CLASSIFICATION	1.7377898298248654E-6	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.999998709361766	WITHOUT_CLASSIFICATION	1.2906382339153303E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999975928119048	WITHOUT_CLASSIFICATION	2.4071880951591847E-6	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999968021706369	WITHOUT_CLASSIFICATION	3.197829363140908E-6	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999995614000038	WITHOUT_CLASSIFICATION	4.385999961474701E-7	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999998962969946	WITHOUT_CLASSIFICATION	1.0370300531226466E-7	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999998962969946	WITHOUT_CLASSIFICATION	1.0370300531226466E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997196248771	WITHOUT_CLASSIFICATION	2.8037512291142557E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997196248771	WITHOUT_CLASSIFICATION	2.8037512291142557E-7	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.999999494907443	WITHOUT_CLASSIFICATION	5.0509255703219E-7	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999999526215438	WITHOUT_CLASSIFICATION	4.737845610494057E-8	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999924207481	WITHOUT_CLASSIFICATION	7.579251903094508E-9	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999422861970473	WITHOUT_CLASSIFICATION	5.7713802952805016E-5	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999954351815907	WITHOUT_CLASSIFICATION	4.564818409283932E-6	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999856535301135	WITHOUT_CLASSIFICATION	1.4346469886455466E-5	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999676009540626	WITHOUT_CLASSIFICATION	3.239904593747502E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999452335475071	WITHOUT_CLASSIFICATION	5.476645249289467E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999982219690551	WITHOUT_CLASSIFICATION	1.7780309449456993E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999987279823229	WITHOUT_CLASSIFICATION	1.2720176770594606E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999987279823229	WITHOUT_CLASSIFICATION	1.2720176770594606E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999999078925845	WITHOUT_CLASSIFICATION	9.210741547131276E-8	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999999078925845	WITHOUT_CLASSIFICATION	9.210741547131276E-8	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999991379361531	WITHOUT_CLASSIFICATION	8.620638469416058E-7	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.999999611117537	WITHOUT_CLASSIFICATION	3.8888246306426197E-7	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.999999561710559	WITHOUT_CLASSIFICATION	4.382894409718209E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999999497855703	WITHOUT_CLASSIFICATION	5.0214429790989525E-8	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999875070610267	WITHOUT_CLASSIFICATION	1.2492938973230952E-5	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999997172404423	WITHOUT_CLASSIFICATION	2.827595576880581E-7	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999999516571522	WITHOUT_CLASSIFICATION	4.834284788108967E-8	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.999997193750965	WITHOUT_CLASSIFICATION	2.806249034998393E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9999998280883869	WITHOUT_CLASSIFICATION	1.7191161311885242E-7	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999995223983784	WITHOUT_CLASSIFICATION	4.776016215888002E-7	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.999965161637628	WITHOUT_CLASSIFICATION	3.483836237196887E-5	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999994563136281	WITHOUT_CLASSIFICATION	5.436863719254397E-7	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999935036799534	WITHOUT_CLASSIFICATION	6.49632004659178E-6	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999996282234493	WITHOUT_CLASSIFICATION	3.717765506602655E-7	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999994857959865	WITHOUT_CLASSIFICATION	5.142040135509322E-7	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999792733971258	WITHOUT_CLASSIFICATION	2.0726602874178376E-5	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999767836910788	WITHOUT_CLASSIFICATION	2.3216308921207384E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999969672730682	WITHOUT_CLASSIFICATION	3.03272693188782E-6	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999988858268406	WITHOUT_CLASSIFICATION	1.1141731594138908E-6	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999519593121771	WITHOUT_CLASSIFICATION	4.80406878230751E-5	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9999990246742755	WITHOUT_CLASSIFICATION	9.753257245498505E-7	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999936121462191	WITHOUT_CLASSIFICATION	6.387853780895013E-6	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999981820515803	WITHOUT_CLASSIFICATION	1.8179484196392028E-6	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999978327772994	WITHOUT_CLASSIFICATION	2.1672227006075267E-6	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999998558686704	WITHOUT_CLASSIFICATION	1.4413132977293092E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999981419663205	WITHOUT_CLASSIFICATION	1.8580336794784234E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999801138422838	WITHOUT_CLASSIFICATION	1.9886157716272265E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999966514496108	WITHOUT_CLASSIFICATION	3.348550389180046E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999966514496108	WITHOUT_CLASSIFICATION	3.348550389180046E-6	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.999998110217778	WITHOUT_CLASSIFICATION	1.8897822219916942E-6	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999999009281612	WITHOUT_CLASSIFICATION	9.907183884758592E-8	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999996060029847	WITHOUT_CLASSIFICATION	3.939970152616592E-7	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999993875567298	WITHOUT_CLASSIFICATION	6.124432703333913E-7	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999976125559058	WITHOUT_CLASSIFICATION	2.387444094312006E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999963829281341	WITHOUT_CLASSIFICATION	3.617071866022225E-6	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999890148457478	WITHOUT_CLASSIFICATION	1.0985154252142013E-5	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999994287418033	WITHOUT_CLASSIFICATION	5.712581966917924E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997196248771	WITHOUT_CLASSIFICATION	2.8037512291142557E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997196248771	WITHOUT_CLASSIFICATION	2.8037512291142557E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997196248771	WITHOUT_CLASSIFICATION	2.8037512291142557E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999981419663205	WITHOUT_CLASSIFICATION	1.8580336794784234E-6	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999982600929425	WITHOUT_CLASSIFICATION	1.7399070575561812E-6	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999978160308807	WITHOUT_CLASSIFICATION	2.1839691193520024E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999437589090677	WITHOUT_CLASSIFICATION	5.624109093221006E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9999997693434451	WITHOUT_CLASSIFICATION	2.3065655488692036E-7	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999963967619078	WITHOUT_CLASSIFICATION	3.603238092326025E-6	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999985634305111	WITHOUT_CLASSIFICATION	1.4365694888614276E-6	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999998958859436	WITHOUT_CLASSIFICATION	1.0411405640963431E-7	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999987048194163	WITHOUT_CLASSIFICATION	1.2951805836594642E-6	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999996836669376	WITHOUT_CLASSIFICATION	3.1633306229944453E-7	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999995392689939	WITHOUT_CLASSIFICATION	4.607310061075263E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999996477093714	WITHOUT_CLASSIFICATION	3.5229062857595613E-7	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999998220813231	WITHOUT_CLASSIFICATION	1.7791867691833275E-7	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999877868532981	WITHOUT_CLASSIFICATION	1.2213146701816522E-5	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999992573707415	WITHOUT_CLASSIFICATION	7.426292586143326E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999906923387328	WITHOUT_CLASSIFICATION	9.307661267140408E-6	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999918647327696	WITHOUT_CLASSIFICATION	8.13526723046256E-6	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9999993368288032	WITHOUT_CLASSIFICATION	6.631711967384719E-7	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999992407639606	WITHOUT_CLASSIFICATION	7.592360393312152E-7	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.99999862164169	WITHOUT_CLASSIFICATION	1.3783583100397165E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.999997923350035	WITHOUT_CLASSIFICATION	2.0766499649716405E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999983209213628	WITHOUT_CLASSIFICATION	1.6790786372379502E-6	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999998284291787	WITHOUT_CLASSIFICATION	1.7157082129395686E-7	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999998445177005	WITHOUT_CLASSIFICATION	1.554822994359596E-7	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999973361891741	WITHOUT_CLASSIFICATION	2.6638108258310698E-6	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999997579830933	WITHOUT_CLASSIFICATION	2.420169067115104E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997196248771	WITHOUT_CLASSIFICATION	2.8037512291142557E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999998958859436	WITHOUT_CLASSIFICATION	1.0411405640963431E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999906923387328	WITHOUT_CLASSIFICATION	9.307661267140408E-6	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999996878277394	WITHOUT_CLASSIFICATION	3.121722605743154E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999997764919083	WITHOUT_CLASSIFICATION	2.2350809180488578E-7	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999979575859409	WITHOUT_CLASSIFICATION	2.0424140591417022E-6	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9999475786610176	WITHOUT_CLASSIFICATION	5.242133898242492E-5	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999961635484063	WITHOUT_CLASSIFICATION	3.836451593754786E-6	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999694955398283	WITHOUT_CLASSIFICATION	3.050446017165099E-5	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999852534345689	WITHOUT_CLASSIFICATION	1.474656543105275E-5	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.999999812877363	WITHOUT_CLASSIFICATION	1.8712263700951724E-7	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9999929299802802	WITHOUT_CLASSIFICATION	7.070019719770146E-6	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999998410050707	WITHOUT_CLASSIFICATION	1.5899492924379398E-7	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999932187409664	WITHOUT_CLASSIFICATION	6.781259033644202E-6	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999932187409664	WITHOUT_CLASSIFICATION	6.781259033644202E-6	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999982234273435	WITHOUT_CLASSIFICATION	1.776572656520653E-6	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999972966612856	WITHOUT_CLASSIFICATION	2.7033387144328775E-6	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999998161215851	WITHOUT_CLASSIFICATION	1.8387841490829957E-7	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999988118746164	WITHOUT_CLASSIFICATION	1.1881253837047382E-6	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999998936540361	WITHOUT_CLASSIFICATION	1.0634596382844123E-7	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999981278922428	WITHOUT_CLASSIFICATION	1.8721077572032639E-6	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999996963519586	WITHOUT_CLASSIFICATION	3.036480414355078E-7	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999998001133873	WITHOUT_CLASSIFICATION	1.998866127801238E-7	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999995279076511	WITHOUT_CLASSIFICATION	4.720923488228146E-7	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999944478396318	WITHOUT_CLASSIFICATION	5.552160368269141E-6	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999991818497064	WITHOUT_CLASSIFICATION	8.18150293587496E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999999078925845	WITHOUT_CLASSIFICATION	9.210741547131276E-8	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999999516571522	WITHOUT_CLASSIFICATION	4.834284788108967E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999906923387328	WITHOUT_CLASSIFICATION	9.307661267140408E-6	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999998936540361	WITHOUT_CLASSIFICATION	1.0634596382844123E-7	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999981278922428	WITHOUT_CLASSIFICATION	1.8721077572032639E-6	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999999030603512	WITHOUT_CLASSIFICATION	9.693964878472125E-8	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999999400459271	WITHOUT_CLASSIFICATION	5.995407286237979E-8	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999948372344186	WITHOUT_CLASSIFICATION	5.162765581361987E-6	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9999971663887702	WITHOUT_CLASSIFICATION	2.833611229792949E-6	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999887106647309	WITHOUT_CLASSIFICATION	1.1289335268958998E-5	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999987203223083	WITHOUT_CLASSIFICATION	1.2796776917107151E-6	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9999651362814074	WITHOUT_CLASSIFICATION	3.4863718592633736E-5	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999728679814059	WITHOUT_CLASSIFICATION	2.7132018594026984E-5	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999999355646743	WITHOUT_CLASSIFICATION	6.443532577101409E-8	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999956100779025	WITHOUT_CLASSIFICATION	4.389922097521156E-6	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999994170108109	WITHOUT_CLASSIFICATION	5.829891891564394E-7	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999999124240219	WITHOUT_CLASSIFICATION	8.757597804173247E-8	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9998972910207647	WITHOUT_CLASSIFICATION	1.0270897923521954E-4	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999996417072874	WITHOUT_CLASSIFICATION	3.582927127177352E-7	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999965376809766	WITHOUT_CLASSIFICATION	3.462319023414767E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999997640209651	WITHOUT_CLASSIFICATION	2.3597903480265429E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9998972910207647	WITHOUT_CLASSIFICATION	1.0270897923521954E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9998972910207647	WITHOUT_CLASSIFICATION	1.0270897923521954E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9998972910207647	WITHOUT_CLASSIFICATION	1.0270897923521954E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999980561289836	WITHOUT_CLASSIFICATION	1.94387101638526E-6	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999986308910068	WITHOUT_CLASSIFICATION	1.3691089930851512E-6	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999996349446193	WITHOUT_CLASSIFICATION	3.650553807816216E-7	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999997518952496	WITHOUT_CLASSIFICATION	2.481047503686728E-7	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999981332701373	WITHOUT_CLASSIFICATION	1.8667298626165123E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999996823695134	WITHOUT_CLASSIFICATION	3.176304865765361E-7	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999964835176013	WITHOUT_CLASSIFICATION	3.5164823987652972E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999990814011506	WITHOUT_CLASSIFICATION	9.185988493946193E-7	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999999704790101	WITHOUT_CLASSIFICATION	2.9520989851336384E-8	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999970840092537	WITHOUT_CLASSIFICATION	2.9159907462848083E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9998216242402703	WITHOUT_CLASSIFICATION	1.7837575972969708E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999996295048643	WITHOUT_CLASSIFICATION	3.7049513567267537E-7	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999988279517473	WITHOUT_CLASSIFICATION	1.1720482526905232E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999990863282043	WITHOUT_CLASSIFICATION	9.136717956626611E-7	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999996867892424	WITHOUT_CLASSIFICATION	3.1321075756329504E-7	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999901032267262	WITHOUT_CLASSIFICATION	9.896773273799649E-6	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999999622928406	WITHOUT_CLASSIFICATION	3.770715941157589E-8	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999988612660842	WITHOUT_CLASSIFICATION	1.1387339158316556E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999983261028611	WITHOUT_CLASSIFICATION	1.6738971388610172E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999983261028611	WITHOUT_CLASSIFICATION	1.6738971388610172E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999982878738347	WITHOUT_CLASSIFICATION	1.7121261653206827E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999973152298441	WITHOUT_CLASSIFICATION	2.6847701558639757E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999982878738347	WITHOUT_CLASSIFICATION	1.7121261653206827E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999957085751647	WITHOUT_CLASSIFICATION	4.291424835251003E-6	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999970818806179	WITHOUT_CLASSIFICATION	2.91811938217154E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999957826140804	WITHOUT_CLASSIFICATION	4.217385919553337E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999980367351016	WITHOUT_CLASSIFICATION	1.9632648983504034E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999980367351016	WITHOUT_CLASSIFICATION	1.9632648983504034E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999961695403516	WITHOUT_CLASSIFICATION	3.830459648259387E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999961695403516	WITHOUT_CLASSIFICATION	3.830459648259387E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999962356263765	WITHOUT_CLASSIFICATION	3.764373623606827E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999962356263765	WITHOUT_CLASSIFICATION	3.764373623606827E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996184083645	WITHOUT_CLASSIFICATION	3.8159163554354837E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996184083645	WITHOUT_CLASSIFICATION	3.8159163554354837E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996184083645	WITHOUT_CLASSIFICATION	3.8159163554354837E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999830229167467	WITHOUT_CLASSIFICATION	1.6977083253314938E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996184083645	WITHOUT_CLASSIFICATION	3.8159163554354837E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996184083645	WITHOUT_CLASSIFICATION	3.8159163554354837E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999975334305903	WITHOUT_CLASSIFICATION	2.466569409691674E-6	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999964138753998	WITHOUT_CLASSIFICATION	3.5861246000809392E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999977305964127	WITHOUT_CLASSIFICATION	2.269403587302119E-6	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999997896556073	WITHOUT_CLASSIFICATION	2.1034439278125262E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999998062507347	WITHOUT_CLASSIFICATION	1.937492653169521E-7	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999989143146175	WITHOUT_CLASSIFICATION	1.0856853824671988E-6	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999461349004833	WITHOUT_CLASSIFICATION	5.3865099516533374E-5	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999991962332768	WITHOUT_CLASSIFICATION	8.037667231923284E-7	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9999979841658769	WITHOUT_CLASSIFICATION	2.015834123089496E-6	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999998458129488	WITHOUT_CLASSIFICATION	1.5418705116976814E-7	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999958970493191	WITHOUT_CLASSIFICATION	4.102950680895674E-6	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999996783850401	WITHOUT_CLASSIFICATION	3.216149598643308E-7	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999999516860762	WITHOUT_CLASSIFICATION	4.831392370300581E-8	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999993262976036	WITHOUT_CLASSIFICATION	6.737023964807731E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999984536797357	WITHOUT_CLASSIFICATION	1.5463202643211711E-6	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.999999785588905	WITHOUT_CLASSIFICATION	2.1441109513348133E-7	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999997829694426	WITHOUT_CLASSIFICATION	2.1703055742970854E-7	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999996177384637	WITHOUT_CLASSIFICATION	3.8226153630274365E-7	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999986512592247	WITHOUT_CLASSIFICATION	1.3487407753322664E-6	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999996933870984	WITHOUT_CLASSIFICATION	3.0661290163545736E-7	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999992679196861	WITHOUT_CLASSIFICATION	7.32080313938956E-7	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999641000829534	WITHOUT_CLASSIFICATION	3.589991704645075E-5	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999641000829534	WITHOUT_CLASSIFICATION	3.589991704645075E-5	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9999640731097227	WITHOUT_CLASSIFICATION	3.5926890277325176E-5	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9999640731097227	WITHOUT_CLASSIFICATION	3.5926890277325176E-5	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999999028394583	WITHOUT_CLASSIFICATION	9.71605416184594E-8	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999982661656219	WITHOUT_CLASSIFICATION	1.733834377976741E-6	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999993959197241	WITHOUT_CLASSIFICATION	6.04080275898977E-7	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999994789634746	WITHOUT_CLASSIFICATION	5.210365254002908E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999967216707059	WITHOUT_CLASSIFICATION	3.278329294119719E-6	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999928884909906	WITHOUT_CLASSIFICATION	7.111509009498211E-6	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999995851906592	WITHOUT_CLASSIFICATION	4.14809340726877E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9999316983101573	WITHOUT_CLASSIFICATION	6.8301689842749E-5	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999988313115273	WITHOUT_CLASSIFICATION	1.1686884726593686E-6	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.999993208922354	WITHOUT_CLASSIFICATION	6.791077646031702E-6	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999997288600857	WITHOUT_CLASSIFICATION	2.7113991432678344E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999992336119449	WITHOUT_CLASSIFICATION	7.663880552404226E-7	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999976051426731	WITHOUT_CLASSIFICATION	2.3948573268740877E-6	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999998270603536	WITHOUT_CLASSIFICATION	1.7293964624829341E-7	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999969302478199	WITHOUT_CLASSIFICATION	3.069752180102191E-6	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999993608378624	WITHOUT_CLASSIFICATION	6.391621375894216E-7	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999998869386297	WITHOUT_CLASSIFICATION	1.1306137022507532E-7	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.999998767840813	WITHOUT_CLASSIFICATION	1.2321591869235257E-6	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999955598511108	WITHOUT_CLASSIFICATION	4.4401488892858565E-6	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9999983804439043	WITHOUT_CLASSIFICATION	1.6195560956963485E-6	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.999999923914438	WITHOUT_CLASSIFICATION	7.608556186386588E-8	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999997070406449	WITHOUT_CLASSIFICATION	2.929593551350435E-7	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999974730663991	WITHOUT_CLASSIFICATION	2.5269336009657364E-6	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9999903333418277	WITHOUT_CLASSIFICATION	9.666658172249547E-6	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999997917497755	WITHOUT_CLASSIFICATION	2.0825022444898728E-7	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999389668821618	WITHOUT_CLASSIFICATION	6.103311783817988E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999963592817959	WITHOUT_CLASSIFICATION	3.6407182042565435E-6	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.999915313624568	WITHOUT_CLASSIFICATION	8.468637543198453E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999991295348708	WITHOUT_CLASSIFICATION	8.704651291600875E-7	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999724103701048	WITHOUT_CLASSIFICATION	2.758962989526668E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999995954506099	WITHOUT_CLASSIFICATION	4.0454939009215265E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999980132006083	WITHOUT_CLASSIFICATION	1.9867993915621175E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999994805937835	WITHOUT_CLASSIFICATION	5.194062164551617E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999890136144965	WITHOUT_CLASSIFICATION	1.0986385503550871E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999372096008	WITHOUT_CLASSIFICATION	6.279039920109021E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997993761	WITHOUT_CLASSIFICATION	2.00623900158251E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999686447095761	WITHOUT_CLASSIFICATION	3.1355290423871774E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999998037473822	WITHOUT_CLASSIFICATION	1.9625261792585655E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999986332106269	WITHOUT_CLASSIFICATION	1.3667893730963415E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999961879604837	WITHOUT_CLASSIFICATION	3.8120395163267183E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999984984330342	WITHOUT_CLASSIFICATION	1.5015669657516256E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999947233011006	WITHOUT_CLASSIFICATION	5.276698899389853E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999993723923485	WITHOUT_CLASSIFICATION	6.276076515645166E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999624640597816	WITHOUT_CLASSIFICATION	3.753594021835234E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999978886856905	WITHOUT_CLASSIFICATION	2.111314309411997E-6	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999953658681194	WITHOUT_CLASSIFICATION	4.634131880590129E-6	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999998822502622	WITHOUT_CLASSIFICATION	1.1774973789603811E-7	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999829386046347	WITHOUT_CLASSIFICATION	1.706139536525121E-5	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999926681113783	WITHOUT_CLASSIFICATION	7.331888621653076E-6	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999953217677281	WITHOUT_CLASSIFICATION	4.6782322719966116E-6	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999962195873837	WITHOUT_CLASSIFICATION	3.780412616271947E-6	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999999205044253	WITHOUT_CLASSIFICATION	7.949557466342711E-8	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999998069922394	WITHOUT_CLASSIFICATION	1.9300776049973417E-7	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.999986306680303	WITHOUT_CLASSIFICATION	1.3693319697130408E-5	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999797115061168	WITHOUT_CLASSIFICATION	2.028849388327738E-5	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999101064181055	WITHOUT_CLASSIFICATION	8.989358189449987E-5	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999599259544414	WITHOUT_CLASSIFICATION	4.007404555866263E-5	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9998878518511568	WITHOUT_CLASSIFICATION	1.1214814884314005E-4	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999078996982391	WITHOUT_CLASSIFICATION	9.210030176086554E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999619482578855	WITHOUT_CLASSIFICATION	3.80517421144487E-5	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999988977777325	WITHOUT_CLASSIFICATION	1.1022222673810357E-6	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.999922137861775	WITHOUT_CLASSIFICATION	7.786213822507602E-5	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.999974142852811	WITHOUT_CLASSIFICATION	2.5857147188999473E-5	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999997898289357	WITHOUT_CLASSIFICATION	2.1017106420329135E-7	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.999997875585959	WITHOUT_CLASSIFICATION	2.1244140409448217E-6	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9997526427642971	WITHOUT_CLASSIFICATION	2.4735723570300336E-4	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.999999858132228	WITHOUT_CLASSIFICATION	1.4186777201171182E-7	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999998405094407	WITHOUT_CLASSIFICATION	1.59490559380095E-7	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9989375843515879	WITHOUT_CLASSIFICATION	0.0010624156484122273	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9999776221722304	WITHOUT_CLASSIFICATION	2.2377827769578017E-5	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.999999517132821	WITHOUT_CLASSIFICATION	4.828671790247198E-7	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999999522366113	WITHOUT_CLASSIFICATION	4.776338860401621E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999996120045126	WITHOUT_CLASSIFICATION	3.879954874080901E-7	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999910018974392	WITHOUT_CLASSIFICATION	8.998102560843918E-6	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999965199267815	WITHOUT_CLASSIFICATION	3.480073218348283E-6	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999994272828121	WITHOUT_CLASSIFICATION	5.727171878557613E-7	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999800516547616	WITHOUT_CLASSIFICATION	1.9948345238400614E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999998103490673	WITHOUT_CLASSIFICATION	1.896509328299116E-7	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999999252758623	WITHOUT_CLASSIFICATION	7.472413773104684E-8	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999983937734556	WITHOUT_CLASSIFICATION	1.6062265444747314E-6	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999993942733084	WITHOUT_CLASSIFICATION	6.05726691496095E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999994562761672	WITHOUT_CLASSIFICATION	5.437238328458281E-7	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999989914191308	WITHOUT_CLASSIFICATION	1.0085808692266424E-6	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999983693903638	WITHOUT_CLASSIFICATION	1.6306096362775527E-6	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999997730728128	WITHOUT_CLASSIFICATION	2.2692718718481986E-7	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999990091912779	WITHOUT_CLASSIFICATION	9.9080872208419E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999998452669759	WITHOUT_CLASSIFICATION	1.5473302399333535E-7	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999964490279691	WITHOUT_CLASSIFICATION	3.5509720308650946E-6	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999999757517499	WITHOUT_CLASSIFICATION	2.424825009205173E-8	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.999995231407386	WITHOUT_CLASSIFICATION	4.76859261404068E-6	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999947641547293	WITHOUT_CLASSIFICATION	5.235845270710608E-6	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999997572664703	WITHOUT_CLASSIFICATION	2.427335297467658E-7	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999993595681814	WITHOUT_CLASSIFICATION	6.404318186878183E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9999369967500652	WITHOUT_CLASSIFICATION	6.300324993479231E-5	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999984304707668	WITHOUT_CLASSIFICATION	1.569529233326815E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999954581348001	WITHOUT_CLASSIFICATION	4.541865199882835E-6	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999972125111589	WITHOUT_CLASSIFICATION	2.7874888410985536E-6	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999986965940033	WITHOUT_CLASSIFICATION	1.3034059966932906E-6	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999992990518525	WITHOUT_CLASSIFICATION	7.009481475948962E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999986023073091	WITHOUT_CLASSIFICATION	1.3976926909768328E-6	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999986023073091	WITHOUT_CLASSIFICATION	1.3976926909768328E-6	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999999488972756	WITHOUT_CLASSIFICATION	5.11027243336615E-8	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999997970811352	WITHOUT_CLASSIFICATION	2.0291886488636585E-7	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999991833277084	WITHOUT_CLASSIFICATION	8.166722916325874E-7	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999997106624708	WITHOUT_CLASSIFICATION	2.8933752912030124E-7	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999991009629993	WITHOUT_CLASSIFICATION	8.990370006313189E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999991237006142	WITHOUT_CLASSIFICATION	8.762993857681412E-7	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999993549809989	WITHOUT_CLASSIFICATION	6.450190010227956E-7	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999990335364928	WITHOUT_CLASSIFICATION	9.664635072543545E-7	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999999851932745	WITHOUT_CLASSIFICATION	1.4806725664444965E-8	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.999999502840666	WITHOUT_CLASSIFICATION	4.971593340874961E-7	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999993000824329	WITHOUT_CLASSIFICATION	6.999175671428081E-7	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9999990719599571	WITHOUT_CLASSIFICATION	9.2804004282438E-7	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999980430624046	WITHOUT_CLASSIFICATION	1.956937595422918E-6	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999969927670729	WITHOUT_CLASSIFICATION	3.007232927178328E-6	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999996501256405	WITHOUT_CLASSIFICATION	3.498743594148274E-7	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.999999307031362	WITHOUT_CLASSIFICATION	6.929686379677451E-7	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999962461846501	WITHOUT_CLASSIFICATION	3.7538153499614837E-6	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999123682609	WITHOUT_CLASSIFICATION	8.76317390751592E-8	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999963727476862	WITHOUT_CLASSIFICATION	3.6272523138967895E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9999687654026672	WITHOUT_CLASSIFICATION	3.1234597332792664E-5	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999999937127404	WITHOUT_CLASSIFICATION	6.287259509440315E-9	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999992717336751	WITHOUT_CLASSIFICATION	7.282663249394803E-7	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999764518848917	WITHOUT_CLASSIFICATION	2.3548115108381962E-5	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999995861070395	WITHOUT_CLASSIFICATION	4.1389296047247556E-7	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999996386887545	WITHOUT_CLASSIFICATION	3.613112454779616E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999978914619576	WITHOUT_CLASSIFICATION	2.1085380423752063E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999946239956051	WITHOUT_CLASSIFICATION	5.376004394850334E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996184083645	WITHOUT_CLASSIFICATION	3.8159163554354837E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996184083645	WITHOUT_CLASSIFICATION	3.8159163554354837E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996184083645	WITHOUT_CLASSIFICATION	3.8159163554354837E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996184083645	WITHOUT_CLASSIFICATION	3.8159163554354837E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999978924378036	WITHOUT_CLASSIFICATION	2.1075621964228105E-6	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999998817701133	WITHOUT_CLASSIFICATION	1.1822988668280982E-7	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999998923613358	WITHOUT_CLASSIFICATION	1.0763866413778655E-7	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9999961904223874	WITHOUT_CLASSIFICATION	3.809577612675833E-6	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999993745810016	WITHOUT_CLASSIFICATION	6.254189983149805E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999976924238952	WITHOUT_CLASSIFICATION	2.307576104780621E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.99999191094728	WITHOUT_CLASSIFICATION	8.089052719975856E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999995607005561	WITHOUT_CLASSIFICATION	4.39299443916941E-7	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999997472195548	WITHOUT_CLASSIFICATION	2.527804452498611E-7	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999988667877929	WITHOUT_CLASSIFICATION	1.1332122071279258E-6	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999998729342304	WITHOUT_CLASSIFICATION	1.270657696056421E-7	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999992038186396	WITHOUT_CLASSIFICATION	7.961813603612929E-7	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999781866145612	WITHOUT_CLASSIFICATION	2.1813385438855565E-5	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999983008691231	WITHOUT_CLASSIFICATION	1.6991308769114254E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999878769758788	WITHOUT_CLASSIFICATION	1.2123024121321737E-5	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999911052563409	WITHOUT_CLASSIFICATION	8.89474365904135E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999983261028611	WITHOUT_CLASSIFICATION	1.6738971388610172E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999983261028611	WITHOUT_CLASSIFICATION	1.6738971388610172E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999982878738347	WITHOUT_CLASSIFICATION	1.7121261653206827E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999982878738347	WITHOUT_CLASSIFICATION	1.7121261653206827E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999977001000415	WITHOUT_CLASSIFICATION	2.2998999583866653E-6	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999989966626216	WITHOUT_CLASSIFICATION	1.0033373783529796E-6	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999989801275313	WITHOUT_CLASSIFICATION	1.0198724687328303E-6	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999983447124002	WITHOUT_CLASSIFICATION	1.6552875997178541E-6	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.999994349128425	WITHOUT_CLASSIFICATION	5.650871575069547E-6	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999758789156827	WITHOUT_CLASSIFICATION	2.4121084317255653E-5	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999998117789168	WITHOUT_CLASSIFICATION	1.8822108318450888E-7	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999997256437927	WITHOUT_CLASSIFICATION	2.743562072534183E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999900973265796	WITHOUT_CLASSIFICATION	9.902673420433028E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999900973265796	WITHOUT_CLASSIFICATION	9.902673420433028E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999999865726107	WITHOUT_CLASSIFICATION	1.342738930078681E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999999865726107	WITHOUT_CLASSIFICATION	1.342738930078681E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999997640209651	WITHOUT_CLASSIFICATION	2.3597903480265429E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999970818806179	WITHOUT_CLASSIFICATION	2.91811938217154E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999957085751647	WITHOUT_CLASSIFICATION	4.291424835251003E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999957826140804	WITHOUT_CLASSIFICATION	4.217385919553337E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999980367351016	WITHOUT_CLASSIFICATION	1.9632648983504034E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999980367351016	WITHOUT_CLASSIFICATION	1.9632648983504034E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999961695403516	WITHOUT_CLASSIFICATION	3.830459648259387E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999961695403516	WITHOUT_CLASSIFICATION	3.830459648259387E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999962356263765	WITHOUT_CLASSIFICATION	3.764373623606827E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999962356263765	WITHOUT_CLASSIFICATION	3.764373623606827E-6	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999895537840957	WITHOUT_CLASSIFICATION	1.0446215904335954E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999981512727494	WITHOUT_CLASSIFICATION	1.8487272505356852E-6	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999278763305361	WITHOUT_CLASSIFICATION	7.212366946388141E-5	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999957774785696	WITHOUT_CLASSIFICATION	4.222521430434015E-6	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999997586022562	WITHOUT_CLASSIFICATION	2.4139774377001076E-7	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999983992339249	WITHOUT_CLASSIFICATION	1.600766075152928E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999973103602842	WITHOUT_CLASSIFICATION	2.6896397158499707E-6	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999965169797931	WITHOUT_CLASSIFICATION	3.4830202069621466E-6	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999941367759325	WITHOUT_CLASSIFICATION	5.863224067459414E-6	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999998547077285	WITHOUT_CLASSIFICATION	1.4529227151803202E-7	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999994248048636	WITHOUT_CLASSIFICATION	5.751951363640534E-7	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.999999053659619	WITHOUT_CLASSIFICATION	9.463403809859251E-7	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999994846901529	WITHOUT_CLASSIFICATION	5.153098471034821E-7	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999997613412589	WITHOUT_CLASSIFICATION	2.3865874108986197E-7	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999999760909606	WITHOUT_CLASSIFICATION	2.3909039377166012E-8	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999981133349295	WITHOUT_CLASSIFICATION	1.8866650705347762E-6	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999975831075456	WITHOUT_CLASSIFICATION	2.416892454358296E-6	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999960125471927	WITHOUT_CLASSIFICATION	3.9874528072039265E-6	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999616404159	WITHOUT_CLASSIFICATION	3.835958398223026E-8	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999924225298179	WITHOUT_CLASSIFICATION	7.577470182130261E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999998511454642	WITHOUT_CLASSIFICATION	1.4885453584361048E-7	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999750084031068	WITHOUT_CLASSIFICATION	2.4991596893192162E-5	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999833219457172	WITHOUT_CLASSIFICATION	1.667805428280674E-5	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999995423330168	WITHOUT_CLASSIFICATION	4.5766698314222256E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.999999553153364	WITHOUT_CLASSIFICATION	4.468466359644519E-7	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999981962593106	WITHOUT_CLASSIFICATION	1.8037406893538138E-6	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9999998969720234	WITHOUT_CLASSIFICATION	1.0302797651072383E-7	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999984731169114	WITHOUT_CLASSIFICATION	1.5268830885529742E-6	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9999919273196587	WITHOUT_CLASSIFICATION	8.072680341215859E-6	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9999998981235505	WITHOUT_CLASSIFICATION	1.0187644941820188E-7	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999996647097504	WITHOUT_CLASSIFICATION	3.3529024956654655E-7	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999982201528221	WITHOUT_CLASSIFICATION	1.7798471779453894E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999981307972651	WITHOUT_CLASSIFICATION	1.8692027349513446E-6	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.999999738941284	WITHOUT_CLASSIFICATION	2.610587160142661E-7	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999957003038024	WITHOUT_CLASSIFICATION	4.299696197673303E-6	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999998294831007	WITHOUT_CLASSIFICATION	1.7051689934806299E-7	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999997763595798	WITHOUT_CLASSIFICATION	2.2364042012083698E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999993736084581	WITHOUT_CLASSIFICATION	6.263915419751532E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999996422981419	WITHOUT_CLASSIFICATION	3.5770185815786613E-7	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999994646598485	WITHOUT_CLASSIFICATION	5.353401516038156E-7	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999697000133014	WITHOUT_CLASSIFICATION	3.029998669854938E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999996392746594	WITHOUT_CLASSIFICATION	3.607253405453261E-7	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999984749007834	WITHOUT_CLASSIFICATION	1.525099216606116E-6	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.999995214037764	WITHOUT_CLASSIFICATION	4.7859622359099835E-6	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999711280578	WITHOUT_CLASSIFICATION	2.8871942257484556E-8	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999996963073938	WITHOUT_CLASSIFICATION	3.0369260616711395E-7	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9998652138066577	WITHOUT_CLASSIFICATION	1.3478619334222078E-4	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.999996171314856	WITHOUT_CLASSIFICATION	3.828685144078838E-6	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999995255911285	WITHOUT_CLASSIFICATION	4.744088715400569E-7	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999965144685614	WITHOUT_CLASSIFICATION	3.4855314386558778E-6	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999990044137792	WITHOUT_CLASSIFICATION	9.955862208569867E-7	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999987391784516	WITHOUT_CLASSIFICATION	1.2608215483320349E-6	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9994076321946738	WITHOUT_CLASSIFICATION	5.923678053261495E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9999662941691069	WITHOUT_CLASSIFICATION	3.3705830893218713E-5	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9999008556064013	WITHOUT_CLASSIFICATION	9.914439359865382E-5	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999997837818945	WITHOUT_CLASSIFICATION	2.1621810538664436E-7	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999947027617191	WITHOUT_CLASSIFICATION	5.297238280844545E-6	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999992139116582	WITHOUT_CLASSIFICATION	7.860883418464645E-7	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999995011995884	WITHOUT_CLASSIFICATION	4.988004115710575E-7	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999991064641084	WITHOUT_CLASSIFICATION	8.935358916067772E-7	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999987455907114	WITHOUT_CLASSIFICATION	1.254409288517188E-6	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999999264706385	WITHOUT_CLASSIFICATION	7.352936148735728E-8	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999989338051595	WITHOUT_CLASSIFICATION	1.0661948405609528E-6	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999992637882713	WITHOUT_CLASSIFICATION	7.362117286255107E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999976873970607	WITHOUT_CLASSIFICATION	2.3126029393787964E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999986270278455	WITHOUT_CLASSIFICATION	1.3729721545839016E-6	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999999096408011	WITHOUT_CLASSIFICATION	9.035919886596783E-8	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999997072954567	WITHOUT_CLASSIFICATION	2.927045433172982E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997993761	WITHOUT_CLASSIFICATION	2.00623900158251E-7	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999996927181575	WITHOUT_CLASSIFICATION	3.072818425434059E-7	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999978147329409	WITHOUT_CLASSIFICATION	2.1852670591148027E-6	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999928479845	WITHOUT_CLASSIFICATION	7.15201551551475E-9	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999981444979231	WITHOUT_CLASSIFICATION	1.8555020768864263E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.999983413144227	WITHOUT_CLASSIFICATION	1.6586855772949703E-5	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999900479355829	WITHOUT_CLASSIFICATION	9.952064417158938E-6	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999985115877403	WITHOUT_CLASSIFICATION	1.4884122597040789E-6	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999991578774317	WITHOUT_CLASSIFICATION	8.42122568264033E-7	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999992447177999	WITHOUT_CLASSIFICATION	7.552822000857173E-7	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9999191782784501	WITHOUT_CLASSIFICATION	8.082172154983341E-5	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999993489150609	WITHOUT_CLASSIFICATION	6.510849390271828E-7	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999906870268609	WITHOUT_CLASSIFICATION	9.312973139043797E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999686447095761	WITHOUT_CLASSIFICATION	3.1355290423871774E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.99998231103123	WITHOUT_CLASSIFICATION	1.768896876990401E-5	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999795153944369	WITHOUT_CLASSIFICATION	2.0484605563118895E-5	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9997743166842031	WITHOUT_CLASSIFICATION	2.2568331579686664E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999997231336406	WITHOUT_CLASSIFICATION	2.768663593875046E-7	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999987289265201	WITHOUT_CLASSIFICATION	1.271073479982508E-6	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9994025865437637	WITHOUT_CLASSIFICATION	5.974134562363901E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999770708760465	WITHOUT_CLASSIFICATION	2.2929123953513778E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999993401182323	WITHOUT_CLASSIFICATION	6.598817677069296E-7	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999862731054523	WITHOUT_CLASSIFICATION	1.3726894547664718E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999990328933619	WITHOUT_CLASSIFICATION	9.671066380991062E-7	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999653651698359	WITHOUT_CLASSIFICATION	3.46348301640236E-5	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9998553518726077	WITHOUT_CLASSIFICATION	1.4464812739233465E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999951086402461	WITHOUT_CLASSIFICATION	4.891359753978231E-6	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999993559323387	WITHOUT_CLASSIFICATION	6.440676612752547E-7	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999937429151724	WITHOUT_CLASSIFICATION	6.257084827588228E-6	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999971743982194	WITHOUT_CLASSIFICATION	2.8256017805646607E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999979946113029	WITHOUT_CLASSIFICATION	2.0053886970505643E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999972349064499	WITHOUT_CLASSIFICATION	2.765093550096191E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999732004679506	WITHOUT_CLASSIFICATION	2.6799532049385078E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999732004679506	WITHOUT_CLASSIFICATION	2.6799532049385078E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999988156464138	WITHOUT_CLASSIFICATION	1.184353586160212E-6	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999660339587126	WITHOUT_CLASSIFICATION	3.3966041287381486E-5	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999990954846985	WITHOUT_CLASSIFICATION	9.045153016322698E-7	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999966219262003	WITHOUT_CLASSIFICATION	3.3780737997709823E-6	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999971772847698	WITHOUT_CLASSIFICATION	2.822715230247913E-6	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999992711713184	WITHOUT_CLASSIFICATION	7.288286816550793E-7	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999958851177421	WITHOUT_CLASSIFICATION	4.114882258005713E-6	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999980266311868	WITHOUT_CLASSIFICATION	1.9733688132814367E-6	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999995865790717	WITHOUT_CLASSIFICATION	4.134209283159724E-7	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.999999948427162	WITHOUT_CLASSIFICATION	5.157283808723422E-8	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999979461997724	WITHOUT_CLASSIFICATION	2.0538002275707704E-6	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999981351421157	WITHOUT_CLASSIFICATION	1.864857884217436E-6	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999935496970633	WITHOUT_CLASSIFICATION	6.450302936727961E-6	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999993116630922	WITHOUT_CLASSIFICATION	6.883369078528787E-7	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999676529190694	WITHOUT_CLASSIFICATION	3.2347080930609776E-5	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999966863632099	WITHOUT_CLASSIFICATION	3.3136367901404298E-6	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999995554078568	WITHOUT_CLASSIFICATION	4.4459214328443936E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999671278634006	WITHOUT_CLASSIFICATION	3.28721365994397E-5	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999987065263288	WITHOUT_CLASSIFICATION	1.2934736712192325E-6	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.999998373010304	WITHOUT_CLASSIFICATION	1.6269896960144416E-6	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.999999669277314	WITHOUT_CLASSIFICATION	3.307226859611461E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999846489089972	WITHOUT_CLASSIFICATION	1.5351091002745865E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999956339583798	WITHOUT_CLASSIFICATION	4.366041620187704E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999998416506473	WITHOUT_CLASSIFICATION	1.583493527097937E-7	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.999997262282331	WITHOUT_CLASSIFICATION	2.737717668972833E-6	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999996894763183	WITHOUT_CLASSIFICATION	3.1052368154964176E-7	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999956561926738	WITHOUT_CLASSIFICATION	4.343807326189579E-6	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999995293193485	WITHOUT_CLASSIFICATION	4.7068065139670005E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.999999042266416	WITHOUT_CLASSIFICATION	9.577335840354138E-7	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999839789606643	WITHOUT_CLASSIFICATION	1.6021039335664864E-5	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999843386775888	WITHOUT_CLASSIFICATION	1.5661322411128727E-5	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999965977216067	WITHOUT_CLASSIFICATION	3.402278393254701E-6	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999866498677139	WITHOUT_CLASSIFICATION	1.3350132286067265E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999865707286991	WITHOUT_CLASSIFICATION	1.3429271300812261E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999869451017438	WITHOUT_CLASSIFICATION	1.3054898256239644E-5	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999808831461304	WITHOUT_CLASSIFICATION	1.911685386952809E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9997488153446011	WITHOUT_CLASSIFICATION	2.5118465539893835E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.999999042266416	WITHOUT_CLASSIFICATION	9.577335840354138E-7	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999999395657966	WITHOUT_CLASSIFICATION	6.043420339882373E-8	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999999781541863	WITHOUT_CLASSIFICATION	2.1845813650131366E-8	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999959360965235	WITHOUT_CLASSIFICATION	4.063903476432906E-6	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9999991522196854	WITHOUT_CLASSIFICATION	8.477803145547609E-7	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999865383951523	WITHOUT_CLASSIFICATION	1.3461604847795983E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999703803322033	WITHOUT_CLASSIFICATION	2.9619667796597187E-5	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.999999368517148	WITHOUT_CLASSIFICATION	6.314828520071723E-7	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999149252639116	WITHOUT_CLASSIFICATION	8.507473608833507E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999876622053584	WITHOUT_CLASSIFICATION	1.2337794641529101E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999939280942808	WITHOUT_CLASSIFICATION	6.0719057192345175E-6	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999952477304396	WITHOUT_CLASSIFICATION	4.752269560379048E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.999990034836178	WITHOUT_CLASSIFICATION	9.965163821993069E-6	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999987756849952	WITHOUT_CLASSIFICATION	1.2243150048269243E-6	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9998691779396123	WITHOUT_CLASSIFICATION	1.3082206038774158E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999942393762801	WITHOUT_CLASSIFICATION	5.760623719922151E-6	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9996906390515552	WITHOUT_CLASSIFICATION	3.093609484447686E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9996906390515552	WITHOUT_CLASSIFICATION	3.093609484447686E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9999896251379728	WITHOUT_CLASSIFICATION	1.0374862027181244E-5	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9999896822049988	WITHOUT_CLASSIFICATION	1.0317795001151148E-5	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999994643812247	WITHOUT_CLASSIFICATION	5.356187753722975E-7	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9999978277050449	WITHOUT_CLASSIFICATION	2.172294955248926E-6	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999994996596389	WITHOUT_CLASSIFICATION	5.003403611914916E-7	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999743211911377	WITHOUT_CLASSIFICATION	2.5678808862288116E-5	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999999284747464	WITHOUT_CLASSIFICATION	7.152525360407009E-8	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.999994612605837	WITHOUT_CLASSIFICATION	5.387394162945307E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999997720284819	WITHOUT_CLASSIFICATION	2.2797151818166707E-7	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999997249593188	WITHOUT_CLASSIFICATION	2.7504068124057164E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999956938500784	WITHOUT_CLASSIFICATION	4.3061499216255265E-6	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.999392891890919	WITHOUT_CLASSIFICATION	6.071081090810155E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.999998402763283	WITHOUT_CLASSIFICATION	1.5972367169688288E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999973152298441	WITHOUT_CLASSIFICATION	2.6847701558639757E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999973152298441	WITHOUT_CLASSIFICATION	2.6847701558639757E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999994643812247	WITHOUT_CLASSIFICATION	5.356187753722975E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999956938500784	WITHOUT_CLASSIFICATION	4.3061499216255265E-6	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.999995597414	WITHOUT_CLASSIFICATION	4.402585999968572E-6	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.999977959459182	WITHOUT_CLASSIFICATION	2.2040540817925066E-5	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999907598034977	WITHOUT_CLASSIFICATION	9.240196502256974E-6	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9999998246914367	WITHOUT_CLASSIFICATION	1.7530856337320907E-7	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999992365444514	WITHOUT_CLASSIFICATION	7.634555485520462E-7	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999978273481501	WITHOUT_CLASSIFICATION	2.1726518498927377E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999993907744525	WITHOUT_CLASSIFICATION	6.092255474826987E-7	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999848424285466	WITHOUT_CLASSIFICATION	1.5157571453469137E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999989342768487	WITHOUT_CLASSIFICATION	1.065723151337504E-6	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999984235744124	WITHOUT_CLASSIFICATION	1.5764255876588299E-6	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999479629053964	WITHOUT_CLASSIFICATION	5.203709460350521E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9999189737798047	WITHOUT_CLASSIFICATION	8.102622019533663E-5	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999978336049747	WITHOUT_CLASSIFICATION	2.1663950252042147E-6	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999010828645833	WITHOUT_CLASSIFICATION	9.89171354165521E-5	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999990023084502	WITHOUT_CLASSIFICATION	9.976915497720734E-7	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999993005363269	WITHOUT_CLASSIFICATION	6.994636731328053E-7	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999849299981382	WITHOUT_CLASSIFICATION	1.5070001861885344E-5	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999970029950315	WITHOUT_CLASSIFICATION	2.997004968469291E-6	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999960284035084	WITHOUT_CLASSIFICATION	3.971596491525341E-6	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999973425548958	WITHOUT_CLASSIFICATION	2.657445104179622E-6	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9999971067058693	WITHOUT_CLASSIFICATION	2.893294130685669E-6	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999975748249713	WITHOUT_CLASSIFICATION	2.4251750286735845E-6	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9999406617567029	WITHOUT_CLASSIFICATION	5.93382432969694E-5	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999443914859445	WITHOUT_CLASSIFICATION	5.560851405540927E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999990166685061	WITHOUT_CLASSIFICATION	9.8333149392736E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999985228445866	WITHOUT_CLASSIFICATION	1.4771554133417337E-6	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999979708887765	WITHOUT_CLASSIFICATION	2.029111223555946E-6	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999797020945415	WITHOUT_CLASSIFICATION	2.0297905458485234E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.999999796314019	WITHOUT_CLASSIFICATION	2.0368598099609857E-7	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.999998498925653	WITHOUT_CLASSIFICATION	1.501074347046833E-6	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9999998059371393	WITHOUT_CLASSIFICATION	1.940628605835025E-7	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.999973294172445	WITHOUT_CLASSIFICATION	2.6705827555080712E-5	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999996578272907	WITHOUT_CLASSIFICATION	3.4217270922103286E-7	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999994615507735	WITHOUT_CLASSIFICATION	5.38449226498819E-7	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999997906725371	WITHOUT_CLASSIFICATION	2.0932746286313792E-7	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999942187854807	WITHOUT_CLASSIFICATION	5.781214519295384E-6	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999971535539307	WITHOUT_CLASSIFICATION	2.846446069383475E-6	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999983785353066	WITHOUT_CLASSIFICATION	1.6214646933945382E-6	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999987627947545	WITHOUT_CLASSIFICATION	1.237205245501227E-6	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999991769293306	WITHOUT_CLASSIFICATION	8.230706693644317E-7	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999988681304556	WITHOUT_CLASSIFICATION	1.131869544453832E-6	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999983658911671	WITHOUT_CLASSIFICATION	1.634108832997313E-6	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999963900412825	WITHOUT_CLASSIFICATION	3.609958717584009E-6	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.999996615291002	WITHOUT_CLASSIFICATION	3.3847089979773925E-6	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999414007357811	WITHOUT_CLASSIFICATION	5.859926421890631E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999860281687305	WITHOUT_CLASSIFICATION	1.3971831269593344E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.99988974606782	WITHOUT_CLASSIFICATION	1.1025393218000548E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999998037473822	WITHOUT_CLASSIFICATION	1.9625261792585655E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999986332106269	WITHOUT_CLASSIFICATION	1.3667893730963415E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999961879604837	WITHOUT_CLASSIFICATION	3.8120395163267183E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999984984330342	WITHOUT_CLASSIFICATION	1.5015669657516256E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999963629023206	WITHOUT_CLASSIFICATION	3.6370976794003417E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999943468601951	WITHOUT_CLASSIFICATION	5.65313980491964E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999947233011006	WITHOUT_CLASSIFICATION	5.276698899389853E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999993723923485	WITHOUT_CLASSIFICATION	6.276076515645166E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999946134486242	WITHOUT_CLASSIFICATION	5.386551375814321E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999624640597816	WITHOUT_CLASSIFICATION	3.753594021835234E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999976385545006	WITHOUT_CLASSIFICATION	2.36144549927843E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999986355533861	WITHOUT_CLASSIFICATION	1.3644466139302635E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9998631280211961	WITHOUT_CLASSIFICATION	1.3687197880383572E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999996632084209	WITHOUT_CLASSIFICATION	3.367915790880401E-7	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999988279517473	WITHOUT_CLASSIFICATION	1.1720482526905232E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999986544458728	WITHOUT_CLASSIFICATION	1.3455541272750073E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999455605055	WITHOUT_CLASSIFICATION	5.443949442965652E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999999697479561	WITHOUT_CLASSIFICATION	3.025204393290412E-8	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999985609159996	WITHOUT_CLASSIFICATION	1.4390840004624318E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999990715748197	WITHOUT_CLASSIFICATION	9.284251802515749E-7	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9998645295978473	WITHOUT_CLASSIFICATION	1.3547040215267778E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.999665154256541	WITHOUT_CLASSIFICATION	3.348457434588915E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9997450926594795	WITHOUT_CLASSIFICATION	2.549073405204746E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999258007292637	WITHOUT_CLASSIFICATION	7.419927073625972E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999258007292637	WITHOUT_CLASSIFICATION	7.419927073625972E-5	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9997675104611585	WITHOUT_CLASSIFICATION	2.324895388414991E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999623534753114	WITHOUT_CLASSIFICATION	3.7646524688663135E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999968427707736	WITHOUT_CLASSIFICATION	3.157229226358908E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999929764530808	WITHOUT_CLASSIFICATION	7.023546919166847E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999929764530808	WITHOUT_CLASSIFICATION	7.023546919166847E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999929764530808	WITHOUT_CLASSIFICATION	7.023546919166847E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999964817652529	WITHOUT_CLASSIFICATION	3.518234747035156E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999995954506099	WITHOUT_CLASSIFICATION	4.0454939009215265E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999980132006083	WITHOUT_CLASSIFICATION	1.9867993915621175E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999994805937835	WITHOUT_CLASSIFICATION	5.194062164551617E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999890136144965	WITHOUT_CLASSIFICATION	1.0986385503550871E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999372096008	WITHOUT_CLASSIFICATION	6.279039920109021E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999997202599793	WITHOUT_CLASSIFICATION	2.7974002071076023E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999985228445866	WITHOUT_CLASSIFICATION	1.4771554133417337E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999997993761	WITHOUT_CLASSIFICATION	2.00623900158251E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999686447095761	WITHOUT_CLASSIFICATION	3.1355290423871774E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999998037473822	WITHOUT_CLASSIFICATION	1.9625261792585655E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999986332106269	WITHOUT_CLASSIFICATION	1.3667893730963415E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999961879604837	WITHOUT_CLASSIFICATION	3.8120395163267183E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999984984330342	WITHOUT_CLASSIFICATION	1.5015669657516256E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999993723923485	WITHOUT_CLASSIFICATION	6.276076515645166E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999986355533861	WITHOUT_CLASSIFICATION	1.3644466139302635E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9998631280211961	WITHOUT_CLASSIFICATION	1.3687197880383572E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999996632084209	WITHOUT_CLASSIFICATION	3.367915790880401E-7	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999085065391	WITHOUT_CLASSIFICATION	9.149346092173327E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999996428605034	WITHOUT_CLASSIFICATION	3.5713949665429807E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999997451601573	WITHOUT_CLASSIFICATION	2.5483984269728466E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999067497112	WITHOUT_CLASSIFICATION	9.32502888232509E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999535666580773	WITHOUT_CLASSIFICATION	4.6433341922752936E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999968532162422	WITHOUT_CLASSIFICATION	3.1467837576899536E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999964154983728	WITHOUT_CLASSIFICATION	3.5845016271632366E-6	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999997038272017	WITHOUT_CLASSIFICATION	2.9617279821508837E-7	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9998569686135297	WITHOUT_CLASSIFICATION	1.4303138647022286E-4	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9997439426845534	WITHOUT_CLASSIFICATION	2.560573154467306E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9999901477437283	WITHOUT_CLASSIFICATION	9.852256271759227E-6	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999919689702186	WITHOUT_CLASSIFICATION	8.031029781473016E-6	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999970374366127	WITHOUT_CLASSIFICATION	2.9625633871715073E-6	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999984798756809	WITHOUT_CLASSIFICATION	1.520124319116602E-6	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9997426741524749	WITHOUT_CLASSIFICATION	2.573258475251582E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9997797851880951	WITHOUT_CLASSIFICATION	2.2021481190496748E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.999222574289339	WITHOUT_CLASSIFICATION	7.774257106608958E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9996693751416046	WITHOUT_CLASSIFICATION	3.306248583954014E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9997689193360367	WITHOUT_CLASSIFICATION	2.3108066396335816E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999998931302219	WITHOUT_CLASSIFICATION	1.0686977817850104E-7	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999996859279107	WITHOUT_CLASSIFICATION	3.140720893275581E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999976385545006	WITHOUT_CLASSIFICATION	2.36144549927843E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999455605055	WITHOUT_CLASSIFICATION	5.443949442965652E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999999697479561	WITHOUT_CLASSIFICATION	3.025204393290412E-8	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999985609159996	WITHOUT_CLASSIFICATION	1.4390840004624318E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999996428605034	WITHOUT_CLASSIFICATION	3.5713949665429807E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999997451601573	WITHOUT_CLASSIFICATION	2.5483984269728466E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999067497112	WITHOUT_CLASSIFICATION	9.32502888232509E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999535666580773	WITHOUT_CLASSIFICATION	4.6433341922752936E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999968532162422	WITHOUT_CLASSIFICATION	3.1467837576899536E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999968802549136	WITHOUT_CLASSIFICATION	3.1197450863801914E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999976535698768	WITHOUT_CLASSIFICATION	2.346430123167857E-6	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.999999542404859	WITHOUT_CLASSIFICATION	4.5759514094892134E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999959524294092	WITHOUT_CLASSIFICATION	4.047570590885476E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999959524294092	WITHOUT_CLASSIFICATION	4.047570590885476E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999959524294092	WITHOUT_CLASSIFICATION	4.047570590885476E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999959524294092	WITHOUT_CLASSIFICATION	4.047570590885476E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999959524294092	WITHOUT_CLASSIFICATION	4.047570590885476E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999982622101702	WITHOUT_CLASSIFICATION	1.7377898298248654E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997196248771	WITHOUT_CLASSIFICATION	2.8037512291142557E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997196248771	WITHOUT_CLASSIFICATION	2.8037512291142557E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997196248771	WITHOUT_CLASSIFICATION	2.8037512291142557E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997196248771	WITHOUT_CLASSIFICATION	2.8037512291142557E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997196248771	WITHOUT_CLASSIFICATION	2.8037512291142557E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997196248771	WITHOUT_CLASSIFICATION	2.8037512291142557E-7	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999984283568344	WITHOUT_CLASSIFICATION	1.5716431655881321E-6	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999944145279325	WITHOUT_CLASSIFICATION	5.585472067512323E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999978572623445	WITHOUT_CLASSIFICATION	2.142737655567035E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989135960063	WITHOUT_CLASSIFICATION	1.0864039936496582E-6	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999994695330501	WITHOUT_CLASSIFICATION	5.304669499453486E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999941437840452	WITHOUT_CLASSIFICATION	5.8562159547932565E-6	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999995328769574	WITHOUT_CLASSIFICATION	4.671230425164096E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999900973265796	WITHOUT_CLASSIFICATION	9.902673420433028E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999900973265796	WITHOUT_CLASSIFICATION	9.902673420433028E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999900973265796	WITHOUT_CLASSIFICATION	9.902673420433028E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999801138422838	WITHOUT_CLASSIFICATION	1.9886157716272265E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.999976718356723	WITHOUT_CLASSIFICATION	2.328164327703985E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999994963451215	WITHOUT_CLASSIFICATION	5.036548784359441E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999988871405073	WITHOUT_CLASSIFICATION	1.1128594926499936E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999988871405073	WITHOUT_CLASSIFICATION	1.1128594926499936E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999906923387328	WITHOUT_CLASSIFICATION	9.307661267140408E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999988871405073	WITHOUT_CLASSIFICATION	1.1128594926499936E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.999997923350035	WITHOUT_CLASSIFICATION	2.0766499649716405E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999983209213628	WITHOUT_CLASSIFICATION	1.6790786372379502E-6	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999998284291787	WITHOUT_CLASSIFICATION	1.7157082129395686E-7	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999727827219342	WITHOUT_CLASSIFICATION	2.7217278065836653E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999727827219342	WITHOUT_CLASSIFICATION	2.7217278065836653E-5	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999989576580458	WITHOUT_CLASSIFICATION	1.0423419541322914E-6	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999989981454921	WITHOUT_CLASSIFICATION	1.0018545078620501E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999875229791233	WITHOUT_CLASSIFICATION	1.2477020876727728E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999875229791233	WITHOUT_CLASSIFICATION	1.2477020876727728E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999875229791233	WITHOUT_CLASSIFICATION	1.2477020876727728E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9999998872638215	WITHOUT_CLASSIFICATION	1.1273617851103881E-7	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9931828566249127	WITHOUT_CLASSIFICATION	0.006817143375087262	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.999999958233465	WITHOUT_CLASSIFICATION	4.176653497104063E-8	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.99999880934558	WITHOUT_CLASSIFICATION	1.1906544199248382E-6	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999928572367892	WITHOUT_CLASSIFICATION	7.142763210798584E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999997042156751	WITHOUT_CLASSIFICATION	2.9578432498028445E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999953329121416	WITHOUT_CLASSIFICATION	4.667087858377978E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999968084019942	WITHOUT_CLASSIFICATION	3.191598005906493E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999953329121416	WITHOUT_CLASSIFICATION	4.667087858377978E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999964817652529	WITHOUT_CLASSIFICATION	3.518234747035156E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999929764530808	WITHOUT_CLASSIFICATION	7.023546919166847E-6	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999866398515	WITHOUT_CLASSIFICATION	1.3360148511500675E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999999300952711	WITHOUT_CLASSIFICATION	6.990472881701485E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999968439493919	WITHOUT_CLASSIFICATION	3.156050607985509E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999997135599195	WITHOUT_CLASSIFICATION	2.8644008056966554E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999964817652529	WITHOUT_CLASSIFICATION	3.518234747035156E-6	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999999362073747	WITHOUT_CLASSIFICATION	6.37926252812119E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999994920457244	WITHOUT_CLASSIFICATION	5.079542756138079E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996184083645	WITHOUT_CLASSIFICATION	3.8159163554354837E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999998062507347	WITHOUT_CLASSIFICATION	1.937492653169521E-7	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999871794578716	WITHOUT_CLASSIFICATION	1.2820542128239521E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999871794578716	WITHOUT_CLASSIFICATION	1.2820542128239521E-5	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999918718707331	WITHOUT_CLASSIFICATION	8.128129266816033E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999993748338665	WITHOUT_CLASSIFICATION	6.251661335697194E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999983377686333	WITHOUT_CLASSIFICATION	1.6622313666015086E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999969633541463	WITHOUT_CLASSIFICATION	3.0366458535980485E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999991019737743	WITHOUT_CLASSIFICATION	8.980262256557287E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999991971747394	WITHOUT_CLASSIFICATION	8.028252606138128E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999996543213215	WITHOUT_CLASSIFICATION	3.4567867848617767E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999554433059206	WITHOUT_CLASSIFICATION	4.455669407935786E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999884163210412	WITHOUT_CLASSIFICATION	1.1583678958896013E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.999933571905267	WITHOUT_CLASSIFICATION	6.642809473307801E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999632289994678	WITHOUT_CLASSIFICATION	3.6771000532208884E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.999931660498504	WITHOUT_CLASSIFICATION	6.833950149601969E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999994057612038	WITHOUT_CLASSIFICATION	5.94238796118802E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999334583115428	WITHOUT_CLASSIFICATION	6.65416884572012E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999604767164038	WITHOUT_CLASSIFICATION	3.952328359618139E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999998348001327	WITHOUT_CLASSIFICATION	1.6519986733279974E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999996710523898	WITHOUT_CLASSIFICATION	3.289476101606688E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999977026523881	WITHOUT_CLASSIFICATION	2.2973476118644374E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999980834562697	WITHOUT_CLASSIFICATION	1.916543730393183E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999897329160369	WITHOUT_CLASSIFICATION	1.0267083963139442E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999988596137839	WITHOUT_CLASSIFICATION	1.1403862161514318E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999987100137271	WITHOUT_CLASSIFICATION	1.2899862728563555E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999998348001327	WITHOUT_CLASSIFICATION	1.6519986733279974E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999989133767698	WITHOUT_CLASSIFICATION	1.086623230132133E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999833194008	WITHOUT_CLASSIFICATION	1.6680599194207622E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999986974720928	WITHOUT_CLASSIFICATION	1.3025279072949072E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999967953207893	WITHOUT_CLASSIFICATION	3.2046792107546023E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999997448003629	WITHOUT_CLASSIFICATION	2.551996370525671E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999990882920318	WITHOUT_CLASSIFICATION	9.117079681394957E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999961848221417	WITHOUT_CLASSIFICATION	3.815177858365309E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999989464103985	WITHOUT_CLASSIFICATION	1.0535896014732655E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999998628298448	WITHOUT_CLASSIFICATION	1.3717015520783858E-7	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999980840835252	WITHOUT_CLASSIFICATION	1.9159164747669743E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999980840835252	WITHOUT_CLASSIFICATION	1.9159164747669743E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999988596137839	WITHOUT_CLASSIFICATION	1.1403862161514318E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999998868868875	WITHOUT_CLASSIFICATION	1.1311311259519176E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.999999947677469	WITHOUT_CLASSIFICATION	5.2322530982763565E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999996365074951	WITHOUT_CLASSIFICATION	3.6349250477836035E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.999999652573465	WITHOUT_CLASSIFICATION	3.4742653496629715E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999729078306323	WITHOUT_CLASSIFICATION	2.7092169367702667E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999826270555471	WITHOUT_CLASSIFICATION	1.7372944452994363E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999918613121003	WITHOUT_CLASSIFICATION	8.138687899726894E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999986915651469	WITHOUT_CLASSIFICATION	1.3084348530954479E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999556041519068	WITHOUT_CLASSIFICATION	4.439584809321282E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999694204737899	WITHOUT_CLASSIFICATION	3.057952621006042E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999994284966335	WITHOUT_CLASSIFICATION	5.715033664879042E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.999977810258302	WITHOUT_CLASSIFICATION	2.2189741697934705E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999649408795678	WITHOUT_CLASSIFICATION	3.505912043212335E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999997479574714	WITHOUT_CLASSIFICATION	2.5204252859646677E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999997202599793	WITHOUT_CLASSIFICATION	2.7974002071076023E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999516841606	WITHOUT_CLASSIFICATION	4.8315839443436246E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999996988812171	WITHOUT_CLASSIFICATION	3.0111878288394126E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999686175429955	WITHOUT_CLASSIFICATION	3.1382457004567475E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999554963904219	WITHOUT_CLASSIFICATION	4.450360957815035E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999516841606	WITHOUT_CLASSIFICATION	4.8315839443436246E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999987401201891	WITHOUT_CLASSIFICATION	1.2598798109593265E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999997349089457	WITHOUT_CLASSIFICATION	2.650910544120932E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999992599337095	WITHOUT_CLASSIFICATION	7.400662904466966E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999976622169859	WITHOUT_CLASSIFICATION	2.3377830140375463E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999979443032219	WITHOUT_CLASSIFICATION	2.0556967781519205E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999511919473285	WITHOUT_CLASSIFICATION	4.880805267144786E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999511919473285	WITHOUT_CLASSIFICATION	4.880805267144786E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999511919473285	WITHOUT_CLASSIFICATION	4.880805267144786E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999511919473285	WITHOUT_CLASSIFICATION	4.880805267144786E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999511919473285	WITHOUT_CLASSIFICATION	4.880805267144786E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999511919473285	WITHOUT_CLASSIFICATION	4.880805267144786E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999910364169158	WITHOUT_CLASSIFICATION	8.963583084178804E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999973358440402	WITHOUT_CLASSIFICATION	2.6641559599423316E-6	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999984544405741	WITHOUT_CLASSIFICATION	1.545559425930105E-6	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999924993133401	WITHOUT_CLASSIFICATION	7.500686659996705E-6	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999999160200967	WITHOUT_CLASSIFICATION	8.39799032027112E-8	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999466135501943	WITHOUT_CLASSIFICATION	5.338644980562825E-5	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999997898289357	WITHOUT_CLASSIFICATION	2.1017106420329135E-7	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999969414911161	WITHOUT_CLASSIFICATION	3.0585088839939827E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9997680013895389	WITHOUT_CLASSIFICATION	2.3199861046109964E-4	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999885969587363	WITHOUT_CLASSIFICATION	1.1403041263665456E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.999999959988745	WITHOUT_CLASSIFICATION	4.001125489464962E-8	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.99999795469168	WITHOUT_CLASSIFICATION	2.0453083200504296E-6	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999999638582934	WITHOUT_CLASSIFICATION	3.614170662782367E-8	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999806319371823	WITHOUT_CLASSIFICATION	1.9368062817685547E-5	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999999193668441	WITHOUT_CLASSIFICATION	8.063315592698469E-8	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999737427393702	WITHOUT_CLASSIFICATION	2.625726062982131E-5	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999997444642413	WITHOUT_CLASSIFICATION	2.555357586955815E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999858703787078	WITHOUT_CLASSIFICATION	1.4129621292097078E-5	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999858703787078	WITHOUT_CLASSIFICATION	1.4129621292097078E-5	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999858703787078	WITHOUT_CLASSIFICATION	1.4129621292097078E-5	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999764518848917	WITHOUT_CLASSIFICATION	2.3548115108381962E-5	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999581232459412	WITHOUT_CLASSIFICATION	4.187675405863344E-5	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999984899762345	WITHOUT_CLASSIFICATION	1.5100237653909748E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999995954506099	WITHOUT_CLASSIFICATION	4.0454939009215265E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999995954506099	WITHOUT_CLASSIFICATION	4.0454939009215265E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999995954506099	WITHOUT_CLASSIFICATION	4.0454939009215265E-7	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.994336314647993	WITHOUT_CLASSIFICATION	0.005663685352006992	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999980132006083	WITHOUT_CLASSIFICATION	1.9867993915621175E-6	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999999662001229	WITHOUT_CLASSIFICATION	3.379987702302663E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999994805937835	WITHOUT_CLASSIFICATION	5.194062164551617E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999994805937835	WITHOUT_CLASSIFICATION	5.194062164551617E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.999999553153364	WITHOUT_CLASSIFICATION	4.468466359644519E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999890136144965	WITHOUT_CLASSIFICATION	1.0986385503550871E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999890136144965	WITHOUT_CLASSIFICATION	1.0986385503550871E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999890136144965	WITHOUT_CLASSIFICATION	1.0986385503550871E-5	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999999428168038	WITHOUT_CLASSIFICATION	5.718319619953546E-8	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999990720416324	WITHOUT_CLASSIFICATION	9.2795836761653E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999993352269079	WITHOUT_CLASSIFICATION	6.647730921299272E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999953329121416	WITHOUT_CLASSIFICATION	4.667087858377978E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999953329121416	WITHOUT_CLASSIFICATION	4.667087858377978E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999954125563604	WITHOUT_CLASSIFICATION	4.587443639696344E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999372096008	WITHOUT_CLASSIFICATION	6.279039920109021E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.99999372096008	WITHOUT_CLASSIFICATION	6.279039920109021E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999981307972651	WITHOUT_CLASSIFICATION	1.8692027349513446E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999998037473822	WITHOUT_CLASSIFICATION	1.9625261792585655E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999998037473822	WITHOUT_CLASSIFICATION	1.9625261792585655E-7	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9999918723916577	WITHOUT_CLASSIFICATION	8.127608342341783E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999986332106269	WITHOUT_CLASSIFICATION	1.3667893730963415E-5	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.999998891340732	WITHOUT_CLASSIFICATION	1.1086592679274145E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999961879604837	WITHOUT_CLASSIFICATION	3.8120395163267183E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999999493844361	WITHOUT_CLASSIFICATION	5.0615563828019676E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999953329121416	WITHOUT_CLASSIFICATION	4.667087858377978E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999929764530808	WITHOUT_CLASSIFICATION	7.023546919166847E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999947233011006	WITHOUT_CLASSIFICATION	5.276698899389853E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999947233011006	WITHOUT_CLASSIFICATION	5.276698899389853E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999947233011006	WITHOUT_CLASSIFICATION	5.276698899389853E-6	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999730122695096	WITHOUT_CLASSIFICATION	2.6987730490463523E-5	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999993356967971	WITHOUT_CLASSIFICATION	6.643032027962113E-7	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999989989060325	WITHOUT_CLASSIFICATION	1.001093967494259E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999969083639902	WITHOUT_CLASSIFICATION	3.0916360097776388E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999969083639902	WITHOUT_CLASSIFICATION	3.0916360097776388E-6	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999999106561812	WITHOUT_CLASSIFICATION	8.934381878291925E-8	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999700925233915	WITHOUT_CLASSIFICATION	2.990747660855387E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999936818984734	WITHOUT_CLASSIFICATION	6.318101526597953E-6	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999999992626869	WITHOUT_CLASSIFICATION	7.373131120816631E-10	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999979946113029	WITHOUT_CLASSIFICATION	2.0053886970505643E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999979946113029	WITHOUT_CLASSIFICATION	2.0053886970505643E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999930100096381	WITHOUT_CLASSIFICATION	6.989990361890177E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999930100096381	WITHOUT_CLASSIFICATION	6.989990361890177E-6	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999988156464138	WITHOUT_CLASSIFICATION	1.184353586160212E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999978914619576	WITHOUT_CLASSIFICATION	2.1085380423752063E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999842942834066	WITHOUT_CLASSIFICATION	1.5705716593355248E-5	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999998544298758	WITHOUT_CLASSIFICATION	1.4557012419653933E-7	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999996740164026	WITHOUT_CLASSIFICATION	3.259835974029395E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999515757105166	WITHOUT_CLASSIFICATION	4.842428948340586E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999515757105166	WITHOUT_CLASSIFICATION	4.842428948340586E-5	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9999928928171387	WITHOUT_CLASSIFICATION	7.107182861313116E-6	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999975500950542	WITHOUT_CLASSIFICATION	2.449904945799859E-6	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999998371178684	WITHOUT_CLASSIFICATION	1.6288213154849805E-7	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999683188251413	WITHOUT_CLASSIFICATION	3.168117485882644E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.999999042266416	WITHOUT_CLASSIFICATION	9.577335840354138E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999999342652324	WITHOUT_CLASSIFICATION	6.573476765123431E-8	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9999981661143192	WITHOUT_CLASSIFICATION	1.8338856807188215E-6	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999996674674229	WITHOUT_CLASSIFICATION	3.325325771518153E-7	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9999896251379728	WITHOUT_CLASSIFICATION	1.0374862027181244E-5	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999945765621829	WITHOUT_CLASSIFICATION	5.423437816986011E-6	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.999999905016937	WITHOUT_CLASSIFICATION	9.498306298394877E-8	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999723343422	WITHOUT_CLASSIFICATION	2.7665657782103336E-8	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9999959754562819	WITHOUT_CLASSIFICATION	4.024543717979558E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999938055794886	WITHOUT_CLASSIFICATION	6.194420511390042E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999938055794886	WITHOUT_CLASSIFICATION	6.194420511390042E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999938055794886	WITHOUT_CLASSIFICATION	6.194420511390042E-6	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999959404090208	WITHOUT_CLASSIFICATION	4.059590979108733E-6	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999988062973069	WITHOUT_CLASSIFICATION	1.193702693166104E-6	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999992426899093	WITHOUT_CLASSIFICATION	7.573100907743741E-7	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.999995597414	WITHOUT_CLASSIFICATION	4.402585999968572E-6	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999917427626615	WITHOUT_CLASSIFICATION	8.257237338557174E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999783600081519	WITHOUT_CLASSIFICATION	2.1639991848108894E-5	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999783600081519	WITHOUT_CLASSIFICATION	2.1639991848108894E-5	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999992006227396	WITHOUT_CLASSIFICATION	7.993772604800283E-7	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9999375387879215	WITHOUT_CLASSIFICATION	6.246121207847164E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999951828863989	WITHOUT_CLASSIFICATION	4.817113601082348E-6	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999986168811541	WITHOUT_CLASSIFICATION	1.3831188459268343E-6	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999945412018443	WITHOUT_CLASSIFICATION	5.45879815575258E-6	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999056594826949	WITHOUT_CLASSIFICATION	9.434051730502275E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999946886785372	WITHOUT_CLASSIFICATION	5.311321462822039E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999793903921417	WITHOUT_CLASSIFICATION	2.0609607858267222E-5	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999887501929013	WITHOUT_CLASSIFICATION	1.1249807098575134E-5	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999999979749339	WITHOUT_CLASSIFICATION	2.0250661191330812E-9	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999836129557941	WITHOUT_CLASSIFICATION	1.6387044205860812E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999913047071715	WITHOUT_CLASSIFICATION	8.695292828427251E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9998306778350995	WITHOUT_CLASSIFICATION	1.6932216490040335E-4	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9996719465698091	WITHOUT_CLASSIFICATION	3.280534301909064E-4	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999995360631785	WITHOUT_CLASSIFICATION	4.639368214958779E-7	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999906907658412	WITHOUT_CLASSIFICATION	9.309234158699461E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999970693276757	WITHOUT_CLASSIFICATION	2.930672324373624E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999980198662802	WITHOUT_CLASSIFICATION	1.9801337197318275E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999910027607186	WITHOUT_CLASSIFICATION	8.99723928133372E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999910027607186	WITHOUT_CLASSIFICATION	8.99723928133372E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999910027607186	WITHOUT_CLASSIFICATION	8.99723928133372E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999910027607186	WITHOUT_CLASSIFICATION	8.99723928133372E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999980124048661	WITHOUT_CLASSIFICATION	1.98759513385323E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999998833313886	WITHOUT_CLASSIFICATION	1.1666861139184038E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999998833313886	WITHOUT_CLASSIFICATION	1.1666861139184038E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999998718625257	WITHOUT_CLASSIFICATION	1.2813747434596953E-7	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999097339106928	WITHOUT_CLASSIFICATION	9.026608930723303E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999999041843155	WITHOUT_CLASSIFICATION	9.581568449969676E-8	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.999999709351032	WITHOUT_CLASSIFICATION	2.906489680334839E-7	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999996262012331	WITHOUT_CLASSIFICATION	3.7379876690438404E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999992177042477	WITHOUT_CLASSIFICATION	7.822957523189204E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9998807953851504	WITHOUT_CLASSIFICATION	1.1920461484955062E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999973152298441	WITHOUT_CLASSIFICATION	2.6847701558639757E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999973152298441	WITHOUT_CLASSIFICATION	2.6847701558639757E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999973152298441	WITHOUT_CLASSIFICATION	2.6847701558639757E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999991137772111	WITHOUT_CLASSIFICATION	8.862227888694944E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999995504684213	WITHOUT_CLASSIFICATION	4.495315787057783E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9999209518294025	WITHOUT_CLASSIFICATION	7.904817059738127E-5	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999996404171921	WITHOUT_CLASSIFICATION	3.5958280789740963E-6	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999996404171921	WITHOUT_CLASSIFICATION	3.5958280789740963E-6	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999991786954509	WITHOUT_CLASSIFICATION	8.213045490539391E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999990068405257	WITHOUT_CLASSIFICATION	9.931594743496717E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999988956803825	WITHOUT_CLASSIFICATION	1.1043196175141571E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.999999430178561	WITHOUT_CLASSIFICATION	5.698214390476191E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9996199461492757	WITHOUT_CLASSIFICATION	3.800538507242624E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999998108075907	WITHOUT_CLASSIFICATION	1.8919240925234884E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999987134301151	WITHOUT_CLASSIFICATION	1.2865698848857489E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999996739867805	WITHOUT_CLASSIFICATION	3.2601321953616695E-7	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999998862483986	WITHOUT_CLASSIFICATION	1.1375160142671537E-7	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999997914122234	WITHOUT_CLASSIFICATION	2.0858777668368412E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999996212549372	WITHOUT_CLASSIFICATION	3.7874506269919463E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999401762988812	WITHOUT_CLASSIFICATION	5.9823701118876755E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999401762988812	WITHOUT_CLASSIFICATION	5.9823701118876755E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999476834069745	WITHOUT_CLASSIFICATION	5.231659302554625E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999267687024476	WITHOUT_CLASSIFICATION	7.323129755245013E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999267687024476	WITHOUT_CLASSIFICATION	7.323129755245013E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999733376994293	WITHOUT_CLASSIFICATION	2.666230057061471E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999975807295842	WITHOUT_CLASSIFICATION	2.4192704158677385E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999975807295842	WITHOUT_CLASSIFICATION	2.4192704158677385E-6	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999906122323626	WITHOUT_CLASSIFICATION	9.38776763728773E-6	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999999240357467	WITHOUT_CLASSIFICATION	7.59642533035996E-8	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.999961811667244	WITHOUT_CLASSIFICATION	3.81883327559676E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999946134486242	WITHOUT_CLASSIFICATION	5.386551375814321E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999946134486242	WITHOUT_CLASSIFICATION	5.386551375814321E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999954964286886	WITHOUT_CLASSIFICATION	4.503571311415814E-6	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999998113208436	WITHOUT_CLASSIFICATION	1.8867915634261355E-7	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9999894783610714	WITHOUT_CLASSIFICATION	1.0521638928483632E-5	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9932486303090968	WITHOUT_CLASSIFICATION	0.006751369690903233	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999363092593178	WITHOUT_CLASSIFICATION	6.369074068215081E-5	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999363092593178	WITHOUT_CLASSIFICATION	6.369074068215081E-5	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9618763741671676	WITHOUT_CLASSIFICATION	0.03812362583283242	DEFECT
// is this an error???	DEFECT	0.9999607190556649	WITHOUT_CLASSIFICATION	3.928094433521187E-5	DEFECT
// is this an error???	DEFECT	0.9999607190556649	WITHOUT_CLASSIFICATION	3.928094433521187E-5	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9999768696550827	WITHOUT_CLASSIFICATION	2.3130344917312536E-5	DEFECT
