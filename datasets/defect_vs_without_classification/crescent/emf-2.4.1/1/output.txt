// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999979849206897	WITHOUT_CLASSIFICATION	2.0150793103064626E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9990393047518237	WITHOUT_CLASSIFICATION	9.606952481762662E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999977812267611	WITHOUT_CLASSIFICATION	2.2187732388371455E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999986452524658	WITHOUT_CLASSIFICATION	1.3547475340883282E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999685090768476	WITHOUT_CLASSIFICATION	3.149092315234462E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999995522441666	WITHOUT_CLASSIFICATION	4.4775583345595334E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9988429550328038	WITHOUT_CLASSIFICATION	0.0011570449671961542	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999794874845065	WITHOUT_CLASSIFICATION	2.051251549348932E-5	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999950265534948	WITHOUT_CLASSIFICATION	4.97344650516565E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999847764541433	WITHOUT_CLASSIFICATION	1.5223545856781955E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999991855107305	WITHOUT_CLASSIFICATION	8.14489269513249E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999964722186113	WITHOUT_CLASSIFICATION	3.5277813886115694E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999914886204203	WITHOUT_CLASSIFICATION	8.511379579705274E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999987306689551	WITHOUT_CLASSIFICATION	1.2693310449024118E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.999994121903475	WITHOUT_CLASSIFICATION	5.8780965249091935E-6	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999969971881794	WITHOUT_CLASSIFICATION	3.00281182055701E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999891074101068	WITHOUT_CLASSIFICATION	1.089258989322337E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9988429550328038	WITHOUT_CLASSIFICATION	0.0011570449671961542	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999952564299639	WITHOUT_CLASSIFICATION	4.743570036135559E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999915620456624	WITHOUT_CLASSIFICATION	8.437954337547084E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999994090099403	WITHOUT_CLASSIFICATION	5.909900596483568E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9989200665510433	WITHOUT_CLASSIFICATION	0.0010799334489567088	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9989200665510433	WITHOUT_CLASSIFICATION	0.0010799334489567088	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999988179644821	WITHOUT_CLASSIFICATION	1.1820355179906057E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999974095129793	WITHOUT_CLASSIFICATION	2.590487020645268E-6	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999928567508954	WITHOUT_CLASSIFICATION	7.14324910465586E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999927211460826	WITHOUT_CLASSIFICATION	7.278853917403212E-6	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999954973824902	WITHOUT_CLASSIFICATION	4.502617509928335E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999962799394148	WITHOUT_CLASSIFICATION	3.7200605852091505E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999759990700238	WITHOUT_CLASSIFICATION	2.4000929976260778E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999941384655282	WITHOUT_CLASSIFICATION	5.861534471871063E-6	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999981362053475	WITHOUT_CLASSIFICATION	1.8637946524967125E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9999520504680984	WITHOUT_CLASSIFICATION	4.794953190153644E-5	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999976968534455	WITHOUT_CLASSIFICATION	2.3031465545092558E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.999994433719764	WITHOUT_CLASSIFICATION	5.566280235896929E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999987622386098	WITHOUT_CLASSIFICATION	1.2377613901563699E-6	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999739609356632	WITHOUT_CLASSIFICATION	2.603906433682125E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999954088052325	WITHOUT_CLASSIFICATION	4.591194767536271E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999717052152141	WITHOUT_CLASSIFICATION	2.82947847859386E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999898092953065	WITHOUT_CLASSIFICATION	1.0190704693625736E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999973908559435	WITHOUT_CLASSIFICATION	2.6091440565015996E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999474627165956	WITHOUT_CLASSIFICATION	5.2537283404329445E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999879149659067	WITHOUT_CLASSIFICATION	1.2085034093346394E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999879955670271	WITHOUT_CLASSIFICATION	1.2004432972800593E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9990393047518237	WITHOUT_CLASSIFICATION	9.606952481762662E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990043330927507	WITHOUT_CLASSIFICATION	9.956669072492869E-4	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997888135775324	WITHOUT_CLASSIFICATION	2.1118642246751007E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999978990482071	WITHOUT_CLASSIFICATION	2.1009517929016778E-5	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9997997314169063	WITHOUT_CLASSIFICATION	2.0026858309365095E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.999601464517406	WITHOUT_CLASSIFICATION	3.9853548259401303E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999279448571	WITHOUT_CLASSIFICATION	7.205514289767002E-7	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997888135775324	WITHOUT_CLASSIFICATION	2.1118642246751007E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9999322960705133	WITHOUT_CLASSIFICATION	6.770392948673457E-5	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9998518891170252	WITHOUT_CLASSIFICATION	1.4811088297489387E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9997866968368692	WITHOUT_CLASSIFICATION	2.133031631307979E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9998598606406403	WITHOUT_CLASSIFICATION	1.401393593596604E-4	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9998985022213911	WITHOUT_CLASSIFICATION	1.0149777860886325E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999109390238012	WITHOUT_CLASSIFICATION	8.906097619876878E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999730796565695	WITHOUT_CLASSIFICATION	2.6920343430467373E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999957089319609	WITHOUT_CLASSIFICATION	4.29106803903943E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999931791116363	WITHOUT_CLASSIFICATION	6.820888363633913E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999903823296814	WITHOUT_CLASSIFICATION	9.617670318581003E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9998299644065272	WITHOUT_CLASSIFICATION	1.7003559347282955E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999873408303745	WITHOUT_CLASSIFICATION	1.265916962544645E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988677289638	WITHOUT_CLASSIFICATION	1.1322710360811687E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999860978174452	WITHOUT_CLASSIFICATION	1.3902182554906296E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999942500002807	WITHOUT_CLASSIFICATION	5.749999719320975E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999820059353567	WITHOUT_CLASSIFICATION	1.79940646432828E-5	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9996339694788551	WITHOUT_CLASSIFICATION	3.6603052114485664E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999906194075573	WITHOUT_CLASSIFICATION	9.380592442669397E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9997672677395879	WITHOUT_CLASSIFICATION	2.327322604121625E-4	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9999277006559181	WITHOUT_CLASSIFICATION	7.229934408187487E-5	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999997719705537	WITHOUT_CLASSIFICATION	2.2802944636932012E-7	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9999971147209843	WITHOUT_CLASSIFICATION	2.885279015666999E-6	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9999778416337163	WITHOUT_CLASSIFICATION	2.215836628372185E-5	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999944321052454	WITHOUT_CLASSIFICATION	5.5678947546611125E-6	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999857368102367	WITHOUT_CLASSIFICATION	1.4263189763283516E-5	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9998146232912709	WITHOUT_CLASSIFICATION	1.853767087290097E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9939540886178106	WITHOUT_CLASSIFICATION	0.006045911382189256	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999964722186113	WITHOUT_CLASSIFICATION	3.5277813886115694E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999914886204203	WITHOUT_CLASSIFICATION	8.511379579705274E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999987306689551	WITHOUT_CLASSIFICATION	1.2693310449024118E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999658715246428	WITHOUT_CLASSIFICATION	3.4128475357240416E-5	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999919112867437	WITHOUT_CLASSIFICATION	8.088713256224222E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.999994121903475	WITHOUT_CLASSIFICATION	5.8780965249091935E-6	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999969971881794	WITHOUT_CLASSIFICATION	3.00281182055701E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999891074101068	WITHOUT_CLASSIFICATION	1.089258989322337E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9998506958126677	WITHOUT_CLASSIFICATION	1.4930418733227264E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9998506958126677	WITHOUT_CLASSIFICATION	1.4930418733227264E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9998506958126677	WITHOUT_CLASSIFICATION	1.4930418733227264E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999995522441666	WITHOUT_CLASSIFICATION	4.4775583345595334E-7	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999978190482529	WITHOUT_CLASSIFICATION	2.1809517470347706E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999985672898292	WITHOUT_CLASSIFICATION	1.4327101708353493E-6	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999992519291362	WITHOUT_CLASSIFICATION	7.480708638539391E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999994090099403	WITHOUT_CLASSIFICATION	5.909900596483568E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999780122567318	WITHOUT_CLASSIFICATION	2.1987743268190818E-5	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999759990700238	WITHOUT_CLASSIFICATION	2.4000929976260778E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999941384655282	WITHOUT_CLASSIFICATION	5.861534471871063E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9999520504680984	WITHOUT_CLASSIFICATION	4.794953190153644E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999987622386098	WITHOUT_CLASSIFICATION	1.2377613901563699E-6	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.999994049270406	WITHOUT_CLASSIFICATION	5.950729593955099E-6	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.999971531905715	WITHOUT_CLASSIFICATION	2.8468094284902618E-5	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999945431885389	WITHOUT_CLASSIFICATION	5.456811461138728E-6	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999982647318181	WITHOUT_CLASSIFICATION	1.7352681819428646E-6	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999679911647714	WITHOUT_CLASSIFICATION	3.200883522854794E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999898092953065	WITHOUT_CLASSIFICATION	1.0190704693625736E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999474627165956	WITHOUT_CLASSIFICATION	5.2537283404329445E-5	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999943534767508	WITHOUT_CLASSIFICATION	5.646523249194443E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9999956497024559	WITHOUT_CLASSIFICATION	4.350297544020232E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999861601188107	WITHOUT_CLASSIFICATION	1.3839881189382516E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999985597418763	WITHOUT_CLASSIFICATION	1.4402581236944959E-6	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999825744562729	WITHOUT_CLASSIFICATION	1.7425543727164045E-5	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999972710325845	WITHOUT_CLASSIFICATION	2.728967415437255E-6	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999932657966389	WITHOUT_CLASSIFICATION	6.73420336107313E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999912375201989	WITHOUT_CLASSIFICATION	8.762479801065844E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999876609363186	WITHOUT_CLASSIFICATION	1.2339063681444444E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999908260673726	WITHOUT_CLASSIFICATION	9.173932627422003E-6	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999997286457204	WITHOUT_CLASSIFICATION	2.7135427960536707E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999876609363186	WITHOUT_CLASSIFICATION	1.2339063681444444E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.999985766114264	WITHOUT_CLASSIFICATION	1.4233885736026908E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999849080275705	WITHOUT_CLASSIFICATION	1.5091972429416006E-5	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999907148328815	WITHOUT_CLASSIFICATION	9.285167118531885E-6	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999909770821115	WITHOUT_CLASSIFICATION	9.022917888519867E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999876609363186	WITHOUT_CLASSIFICATION	1.2339063681444444E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999908260673726	WITHOUT_CLASSIFICATION	9.173932627422003E-6	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999915344546032	WITHOUT_CLASSIFICATION	8.465545396845514E-6	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999984015855782	WITHOUT_CLASSIFICATION	1.5984144218454697E-6	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999857653489591	WITHOUT_CLASSIFICATION	1.4234651040763973E-5	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999905164767583	WITHOUT_CLASSIFICATION	9.483523241732954E-6	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999900196083435	WITHOUT_CLASSIFICATION	9.980391656478348E-6	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999958145851702	WITHOUT_CLASSIFICATION	4.185414829830608E-6	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999969415955776	WITHOUT_CLASSIFICATION	3.058404422271389E-6	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.999059405391425	WITHOUT_CLASSIFICATION	9.405946085749848E-4	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9999838403283144	WITHOUT_CLASSIFICATION	1.6159671685482152E-5	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9999922397266477	WITHOUT_CLASSIFICATION	7.760273352214868E-6	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9954312925070876	WITHOUT_CLASSIFICATION	0.004568707492912436	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999842371522145	WITHOUT_CLASSIFICATION	1.576284778554837E-5	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999905008637637	WITHOUT_CLASSIFICATION	9.49913623633166E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999978990482071	WITHOUT_CLASSIFICATION	2.1009517929016778E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999986117865924	WITHOUT_CLASSIFICATION	1.3882134074671723E-6	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999822613343524	WITHOUT_CLASSIFICATION	1.7738665647603276E-5	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999310676413374	WITHOUT_CLASSIFICATION	6.89323586625402E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9999056553030924	WITHOUT_CLASSIFICATION	9.434469690761376E-5	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999337890979587	WITHOUT_CLASSIFICATION	6.621090204130961E-5	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9997199022046394	WITHOUT_CLASSIFICATION	2.80097795360595E-4	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999759599472291	WITHOUT_CLASSIFICATION	2.4040052770986383E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999986117865924	WITHOUT_CLASSIFICATION	1.3882134074671723E-6	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999822613343524	WITHOUT_CLASSIFICATION	1.7738665647603276E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999895548002565	WITHOUT_CLASSIFICATION	1.044519974346512E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999895548002565	WITHOUT_CLASSIFICATION	1.044519974346512E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.999998842291581	WITHOUT_CLASSIFICATION	1.15770841899498E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999987954235462	WITHOUT_CLASSIFICATION	1.2045764538232113E-6	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999986766009342	WITHOUT_CLASSIFICATION	1.3233990658091352E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.999998842291581	WITHOUT_CLASSIFICATION	1.15770841899498E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999987954235462	WITHOUT_CLASSIFICATION	1.2045764538232113E-6	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999986026600873	WITHOUT_CLASSIFICATION	1.3973399126169221E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999983014401497	WITHOUT_CLASSIFICATION	1.698559850391528E-6	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.99999620929091	WITHOUT_CLASSIFICATION	3.7907090899392916E-6	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999379754807524	WITHOUT_CLASSIFICATION	6.202451924768118E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.99999620929091	WITHOUT_CLASSIFICATION	3.7907090899392916E-6	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.999996934510112	WITHOUT_CLASSIFICATION	3.065489888023362E-6	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999987801704672	WITHOUT_CLASSIFICATION	1.219829532880814E-6	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999987801704672	WITHOUT_CLASSIFICATION	1.219829532880814E-6	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999957028416121	WITHOUT_CLASSIFICATION	4.297158387943308E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999998857482032	WITHOUT_CLASSIFICATION	1.1425179677025882E-7	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999969537255229	WITHOUT_CLASSIFICATION	3.0462744771428487E-6	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999935300939109	WITHOUT_CLASSIFICATION	6.4699060891292175E-6	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999998080631023	WITHOUT_CLASSIFICATION	1.9193689770228053E-7	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999874640989886	WITHOUT_CLASSIFICATION	1.253590101125386E-5	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999979798112147	WITHOUT_CLASSIFICATION	2.0201887852872484E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999992377395043	WITHOUT_CLASSIFICATION	7.622604957022557E-6	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999993035534789	WITHOUT_CLASSIFICATION	6.964465211718652E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999953534055143	WITHOUT_CLASSIFICATION	4.6465944857284804E-6	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999950068197381	WITHOUT_CLASSIFICATION	4.993180261870268E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999992377395043	WITHOUT_CLASSIFICATION	7.622604957022557E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999953534055143	WITHOUT_CLASSIFICATION	4.6465944857284804E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999992377395043	WITHOUT_CLASSIFICATION	7.622604957022557E-6	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999947759436031	WITHOUT_CLASSIFICATION	5.22405639693565E-6	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999938068699497	WITHOUT_CLASSIFICATION	6.193130050306355E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999992377395043	WITHOUT_CLASSIFICATION	7.622604957022557E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999992377395043	WITHOUT_CLASSIFICATION	7.622604957022557E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999992377395043	WITHOUT_CLASSIFICATION	7.622604957022557E-6	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999962829912429	WITHOUT_CLASSIFICATION	3.7170087572086306E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999938810431938	WITHOUT_CLASSIFICATION	6.11895680624836E-6	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999979412781075	WITHOUT_CLASSIFICATION	2.0587218924445103E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999997093095473	WITHOUT_CLASSIFICATION	2.9069045276467627E-7	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9999853407885375	WITHOUT_CLASSIFICATION	1.4659211462394961E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999974895281194	WITHOUT_CLASSIFICATION	2.5104718806315346E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999940298388014	WITHOUT_CLASSIFICATION	5.970161198652132E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999934198793	WITHOUT_CLASSIFICATION	6.580120665537422E-9	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999934198793	WITHOUT_CLASSIFICATION	6.580120665537422E-9	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999998772845956	WITHOUT_CLASSIFICATION	1.2271540440176364E-7	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999998824268898	WITHOUT_CLASSIFICATION	1.1757311031489913E-7	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999977186832676	WITHOUT_CLASSIFICATION	2.281316732450672E-6	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.999958049234182	WITHOUT_CLASSIFICATION	4.1950765817953665E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999973187211662	WITHOUT_CLASSIFICATION	2.681278833869982E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999960267243307	WITHOUT_CLASSIFICATION	3.973275669208099E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999997093095473	WITHOUT_CLASSIFICATION	2.9069045276467627E-7	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999994368137586	WITHOUT_CLASSIFICATION	5.631862414762905E-7	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999954955503275	WITHOUT_CLASSIFICATION	4.504449672434274E-6	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999997009175229	WITHOUT_CLASSIFICATION	2.990824771623067E-7	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999735324066741	WITHOUT_CLASSIFICATION	2.6467593326030565E-5	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999809322251035	WITHOUT_CLASSIFICATION	1.906777489636675E-5	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999991610679295	WITHOUT_CLASSIFICATION	8.389320704416293E-7	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999981584070735	WITHOUT_CLASSIFICATION	1.8415929265326537E-6	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999962158359804	WITHOUT_CLASSIFICATION	3.7841640194822414E-6	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999999962402845	WITHOUT_CLASSIFICATION	3.759715448223291E-9	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999953534055143	WITHOUT_CLASSIFICATION	4.6465944857284804E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999170080594084	WITHOUT_CLASSIFICATION	8.299194059159327E-5	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.999999131310544	WITHOUT_CLASSIFICATION	8.68689456158834E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999994206098303	WITHOUT_CLASSIFICATION	5.793901696646263E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999994206098303	WITHOUT_CLASSIFICATION	5.793901696646263E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999994901712426	WITHOUT_CLASSIFICATION	5.098287574234796E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999953534055143	WITHOUT_CLASSIFICATION	4.6465944857284804E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999870194984491	WITHOUT_CLASSIFICATION	1.2980501550900634E-5	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999889071789761	WITHOUT_CLASSIFICATION	1.1092821023908298E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999990765498653	WITHOUT_CLASSIFICATION	9.234501347566704E-7	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999484000217	WITHOUT_CLASSIFICATION	5.1599978256076554E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999964125638569	WITHOUT_CLASSIFICATION	3.5874361430612444E-6	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9999981680939056	WITHOUT_CLASSIFICATION	1.8319060943135924E-6	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999987779022169	WITHOUT_CLASSIFICATION	1.2220977831178784E-6	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999969743730402	WITHOUT_CLASSIFICATION	3.0256269596931914E-6	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9999922481298251	WITHOUT_CLASSIFICATION	7.751870174793582E-6	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999988797185949	WITHOUT_CLASSIFICATION	1.1202814051235263E-6	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999752082088061	WITHOUT_CLASSIFICATION	2.4791791193887665E-5	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999894839391329	WITHOUT_CLASSIFICATION	1.051606086710775E-5	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999995771982987	WITHOUT_CLASSIFICATION	4.2280170131896834E-7	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9999911878602136	WITHOUT_CLASSIFICATION	8.812139786449785E-6	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999999800158009	WITHOUT_CLASSIFICATION	1.9984198995291115E-8	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999984742358468	WITHOUT_CLASSIFICATION	1.5257641531595392E-6	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999996845840723	WITHOUT_CLASSIFICATION	3.1541592777227345E-7	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999991246036286	WITHOUT_CLASSIFICATION	8.753963713497961E-7	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999993534745495	WITHOUT_CLASSIFICATION	6.465254505191478E-7	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999964708915315	WITHOUT_CLASSIFICATION	3.529108468482186E-6	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999993188461024	WITHOUT_CLASSIFICATION	6.811538975122084E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999953534055143	WITHOUT_CLASSIFICATION	4.6465944857284804E-6	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.999997668038701	WITHOUT_CLASSIFICATION	2.331961298895565E-6	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999967737007842	WITHOUT_CLASSIFICATION	3.226299215766169E-6	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999995843107853	WITHOUT_CLASSIFICATION	4.1568921460724395E-7	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999992972719667	WITHOUT_CLASSIFICATION	7.027280332453679E-7	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999980789436652	WITHOUT_CLASSIFICATION	1.921056334792494E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999967661805266	WITHOUT_CLASSIFICATION	3.233819473495067E-6	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998647369478	WITHOUT_CLASSIFICATION	1.3526305220243994E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999953534055143	WITHOUT_CLASSIFICATION	4.6465944857284804E-6	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.999996748085051	WITHOUT_CLASSIFICATION	3.2519149489057477E-6	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999990018254299	WITHOUT_CLASSIFICATION	9.98174570089779E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999990018254299	WITHOUT_CLASSIFICATION	9.98174570089779E-7	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999800755189768	WITHOUT_CLASSIFICATION	1.9924481023161682E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999800755189768	WITHOUT_CLASSIFICATION	1.9924481023161682E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999982901165437	WITHOUT_CLASSIFICATION	1.7098834562669844E-6	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999992472250692	WITHOUT_CLASSIFICATION	7.527749309122052E-7	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.999964722528253	WITHOUT_CLASSIFICATION	3.527747174704746E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.999964722528253	WITHOUT_CLASSIFICATION	3.527747174704746E-5	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.999974903751884	WITHOUT_CLASSIFICATION	2.5096248115906687E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999747131502977	WITHOUT_CLASSIFICATION	2.5286849702286367E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999938810431938	WITHOUT_CLASSIFICATION	6.11895680624836E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999993258181101	WITHOUT_CLASSIFICATION	6.741818898227182E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999993258181101	WITHOUT_CLASSIFICATION	6.741818898227182E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999993258181101	WITHOUT_CLASSIFICATION	6.741818898227182E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999747131502977	WITHOUT_CLASSIFICATION	2.5286849702286367E-5	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999991597554171	WITHOUT_CLASSIFICATION	8.402445829013282E-7	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9998692479252619	WITHOUT_CLASSIFICATION	1.307520747380923E-4	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.999996698325189	WITHOUT_CLASSIFICATION	3.301674810945219E-6	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999168115345458	WITHOUT_CLASSIFICATION	8.31884654542328E-5	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999997606272589	WITHOUT_CLASSIFICATION	2.3937274109431034E-7	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999991793964615	WITHOUT_CLASSIFICATION	8.206035384756647E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999977812267611	WITHOUT_CLASSIFICATION	2.2187732388371455E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999986452524658	WITHOUT_CLASSIFICATION	1.3547475340883282E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999685090768476	WITHOUT_CLASSIFICATION	3.149092315234462E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999995522441666	WITHOUT_CLASSIFICATION	4.4775583345595334E-7	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999794874845065	WITHOUT_CLASSIFICATION	2.051251549348932E-5	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999950265534948	WITHOUT_CLASSIFICATION	4.97344650516565E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999847764541433	WITHOUT_CLASSIFICATION	1.5223545856781955E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999964722186113	WITHOUT_CLASSIFICATION	3.5277813886115694E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999914886204203	WITHOUT_CLASSIFICATION	8.511379579705274E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999987306689551	WITHOUT_CLASSIFICATION	1.2693310449024118E-6	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999893036447968	WITHOUT_CLASSIFICATION	1.0696355203280265E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.999994121903475	WITHOUT_CLASSIFICATION	5.8780965249091935E-6	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999969971881794	WITHOUT_CLASSIFICATION	3.00281182055701E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999891074101068	WITHOUT_CLASSIFICATION	1.089258989322337E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999952564299639	WITHOUT_CLASSIFICATION	4.743570036135559E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999915620456624	WITHOUT_CLASSIFICATION	8.437954337547084E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999965157232573	WITHOUT_CLASSIFICATION	3.484276742615436E-6	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999991445445696	WITHOUT_CLASSIFICATION	8.554554305312268E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999994090099403	WITHOUT_CLASSIFICATION	5.909900596483568E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999988179644821	WITHOUT_CLASSIFICATION	1.1820355179906057E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999974095129793	WITHOUT_CLASSIFICATION	2.590487020645268E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999780122567318	WITHOUT_CLASSIFICATION	2.1987743268190818E-5	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999759990700238	WITHOUT_CLASSIFICATION	2.4000929976260778E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999941384655282	WITHOUT_CLASSIFICATION	5.861534471871063E-6	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999981362053475	WITHOUT_CLASSIFICATION	1.8637946524967125E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9999520504680984	WITHOUT_CLASSIFICATION	4.794953190153644E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999852862987684	WITHOUT_CLASSIFICATION	1.4713701231558788E-5	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.999998788132727	WITHOUT_CLASSIFICATION	1.2118672730230454E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999954088052325	WITHOUT_CLASSIFICATION	4.591194767536271E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999976968534455	WITHOUT_CLASSIFICATION	2.3031465545092558E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999987622386098	WITHOUT_CLASSIFICATION	1.2377613901563699E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.999994433719764	WITHOUT_CLASSIFICATION	5.566280235896929E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999922279875554	WITHOUT_CLASSIFICATION	7.772012444685076E-6	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999971808368517	WITHOUT_CLASSIFICATION	2.819163148300224E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999987622386098	WITHOUT_CLASSIFICATION	1.2377613901563699E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999898092953065	WITHOUT_CLASSIFICATION	1.0190704693625736E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999717052152141	WITHOUT_CLASSIFICATION	2.82947847859386E-5	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999989850777169	WITHOUT_CLASSIFICATION	1.0149222831183399E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999474627165956	WITHOUT_CLASSIFICATION	5.2537283404329445E-5	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999647435237207	WITHOUT_CLASSIFICATION	3.525647627934093E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999922279875554	WITHOUT_CLASSIFICATION	7.772012444685076E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999474627165956	WITHOUT_CLASSIFICATION	5.2537283404329445E-5	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999897180638071	WITHOUT_CLASSIFICATION	1.0281936192788376E-5	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999989601704841	WITHOUT_CLASSIFICATION	1.0398295159325272E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.999992472490035	WITHOUT_CLASSIFICATION	7.527509965064555E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999992645911724	WITHOUT_CLASSIFICATION	7.354088276166272E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.999973742579165	WITHOUT_CLASSIFICATION	2.6257420835014226E-5	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9999915025151339	WITHOUT_CLASSIFICATION	8.497484866142767E-6	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.999992977252436	WITHOUT_CLASSIFICATION	7.0227475640536475E-6	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.999996741269948	WITHOUT_CLASSIFICATION	3.258730051919786E-6	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999912131740123	WITHOUT_CLASSIFICATION	8.786825987779384E-6	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999968248896017	WITHOUT_CLASSIFICATION	3.175110398136873E-6	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9997306921402388	WITHOUT_CLASSIFICATION	2.6930785976116487E-4	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9992914107206831	WITHOUT_CLASSIFICATION	7.085892793169667E-4	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999941426214779	WITHOUT_CLASSIFICATION	5.857378522108807E-6	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999983173398269	WITHOUT_CLASSIFICATION	1.6826601730356822E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999977067355388	WITHOUT_CLASSIFICATION	2.2932644612414915E-6	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999997707991458	WITHOUT_CLASSIFICATION	2.29200854226543E-7	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999994397631768	WITHOUT_CLASSIFICATION	5.602368231000942E-7	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999991341382845	WITHOUT_CLASSIFICATION	8.658617156365118E-7	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999983007653515	WITHOUT_CLASSIFICATION	1.6992346484497756E-6	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999925714633582	WITHOUT_CLASSIFICATION	7.428536641853342E-6	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999952613400811	WITHOUT_CLASSIFICATION	4.738659918919644E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999995686729248	WITHOUT_CLASSIFICATION	4.313270751966197E-7	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999995688118481	WITHOUT_CLASSIFICATION	4.311881518690291E-7	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999992837466846	WITHOUT_CLASSIFICATION	7.162533154041843E-7	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999973181181793	WITHOUT_CLASSIFICATION	2.681881820779097E-6	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9999944878420527	WITHOUT_CLASSIFICATION	5.512157947317439E-6	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999762848342685	WITHOUT_CLASSIFICATION	2.3715165731536444E-5	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999974006428395	WITHOUT_CLASSIFICATION	2.599357160409874E-6	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999870324711796	WITHOUT_CLASSIFICATION	1.2967528820427252E-5	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.999998101183425	WITHOUT_CLASSIFICATION	1.8988165749998827E-6	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999879149659067	WITHOUT_CLASSIFICATION	1.2085034093346394E-5	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999825742477543	WITHOUT_CLASSIFICATION	1.742575224565032E-5	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999953082068419	WITHOUT_CLASSIFICATION	4.691793158052194E-6	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999971763908874	WITHOUT_CLASSIFICATION	2.8236091126273642E-6	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999985307503516	WITHOUT_CLASSIFICATION	1.4692496482933723E-6	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999992550661027	WITHOUT_CLASSIFICATION	7.449338974261393E-7	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9999835280929864	WITHOUT_CLASSIFICATION	1.647190701360772E-5	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999619952852441	WITHOUT_CLASSIFICATION	3.800471475586304E-5	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9998782052834926	WITHOUT_CLASSIFICATION	1.2179471650738183E-4	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999685070284459	WITHOUT_CLASSIFICATION	3.149297155420501E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999050438634992	WITHOUT_CLASSIFICATION	9.495613650083145E-5	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999648020501228	WITHOUT_CLASSIFICATION	3.519794987712289E-5	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999992827654861	WITHOUT_CLASSIFICATION	7.172345137939121E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999954409662314	WITHOUT_CLASSIFICATION	4.559033768671336E-6	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999747687014829	WITHOUT_CLASSIFICATION	2.5231298517107697E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999932882734017	WITHOUT_CLASSIFICATION	6.711726598260694E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.999901598306907	WITHOUT_CLASSIFICATION	9.840169309301193E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999969653120104	WITHOUT_CLASSIFICATION	3.0346879897164555E-6	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999545556405681	WITHOUT_CLASSIFICATION	4.544435943185107E-5	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999401787294	WITHOUT_CLASSIFICATION	5.982127055919257E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999800121594042	WITHOUT_CLASSIFICATION	1.9987840595784328E-5	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9997761351013931	WITHOUT_CLASSIFICATION	2.2386489860700318E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9999723913730137	WITHOUT_CLASSIFICATION	2.7608626986251445E-5	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999526059311105	WITHOUT_CLASSIFICATION	4.739406888948389E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999511914810718	WITHOUT_CLASSIFICATION	4.8808518928173E-5	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999998857482032	WITHOUT_CLASSIFICATION	1.1425179677025882E-7	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.999998868562409	WITHOUT_CLASSIFICATION	1.131437590948014E-6	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999924110203351	WITHOUT_CLASSIFICATION	7.588979664971108E-6	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999987086610677	WITHOUT_CLASSIFICATION	1.2913389323482034E-6	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999918994563898	WITHOUT_CLASSIFICATION	8.100543610200684E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999866314291703	WITHOUT_CLASSIFICATION	1.3368570829681636E-5	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999994070212983	WITHOUT_CLASSIFICATION	5.929787017087216E-7	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9999949620680034	WITHOUT_CLASSIFICATION	5.037931996566915E-6	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.999970399558774	WITHOUT_CLASSIFICATION	2.960044122604584E-5	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999963407023048	WITHOUT_CLASSIFICATION	3.6592976952043828E-6	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999615794990001	WITHOUT_CLASSIFICATION	3.8420500999834E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999969822179434	WITHOUT_CLASSIFICATION	3.017782056630892E-6	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999974895281194	WITHOUT_CLASSIFICATION	2.5104718806315346E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999940298388014	WITHOUT_CLASSIFICATION	5.970161198652132E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999960267243307	WITHOUT_CLASSIFICATION	3.973275669208099E-6	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999994070212983	WITHOUT_CLASSIFICATION	5.929787017087216E-7	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999615794990001	WITHOUT_CLASSIFICATION	3.8420500999834E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999969822179434	WITHOUT_CLASSIFICATION	3.017782056630892E-6	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.999999767414584	WITHOUT_CLASSIFICATION	2.3258541606144913E-7	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999949072355988	WITHOUT_CLASSIFICATION	5.092764401103438E-6	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999482546820285	WITHOUT_CLASSIFICATION	5.174531797133722E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999814783589146	WITHOUT_CLASSIFICATION	1.8521641085383717E-5	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999906957729005	WITHOUT_CLASSIFICATION	9.304227099548034E-6	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999984729202788	WITHOUT_CLASSIFICATION	1.5270797212014685E-6	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999987944620041	WITHOUT_CLASSIFICATION	1.2055379958727571E-6	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999982566519386	WITHOUT_CLASSIFICATION	1.7433480613556019E-6	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999968632264347	WITHOUT_CLASSIFICATION	3.1367735653174047E-6	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.999992769644636	WITHOUT_CLASSIFICATION	7.23035536401184E-6	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999995953519515	WITHOUT_CLASSIFICATION	4.046480484532384E-7	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9999993482259255	WITHOUT_CLASSIFICATION	6.517740744695723E-7	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999997613434992	WITHOUT_CLASSIFICATION	2.386565007621553E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999985630659031	WITHOUT_CLASSIFICATION	1.436934096972295E-6	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999995248855686	WITHOUT_CLASSIFICATION	4.7511443138112327E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999996994930073	WITHOUT_CLASSIFICATION	3.005069927286569E-7	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999984842110403	WITHOUT_CLASSIFICATION	1.5157889597191808E-6	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999935780745025	WITHOUT_CLASSIFICATION	6.421925497396061E-6	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999981071586016	WITHOUT_CLASSIFICATION	1.8928413983507821E-6	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999737752111976	WITHOUT_CLASSIFICATION	2.6224788802406536E-5	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999980128247418	WITHOUT_CLASSIFICATION	1.9871752581396643E-6	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999997615509578	WITHOUT_CLASSIFICATION	2.3844904212634226E-7	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999918994563898	WITHOUT_CLASSIFICATION	8.100543610200684E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999866314291703	WITHOUT_CLASSIFICATION	1.3368570829681636E-5	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999946324634805	WITHOUT_CLASSIFICATION	5.367536519467159E-6	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999999695185179	WITHOUT_CLASSIFICATION	3.048148215405205E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999873512066985	WITHOUT_CLASSIFICATION	1.2648793301586053E-5	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999892618777905	WITHOUT_CLASSIFICATION	1.0738122209435517E-5	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999996202969604	WITHOUT_CLASSIFICATION	3.797030396083989E-7	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999909606539452	WITHOUT_CLASSIFICATION	9.039346054687614E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9999285030770252	WITHOUT_CLASSIFICATION	7.149692297480828E-5	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999941710655156	WITHOUT_CLASSIFICATION	5.828934484352846E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999980303233394	WITHOUT_CLASSIFICATION	1.9696766606267353E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999980303233394	WITHOUT_CLASSIFICATION	1.9696766606267353E-6	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999998828447343	WITHOUT_CLASSIFICATION	1.1715526569109528E-7	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.999996777060587	WITHOUT_CLASSIFICATION	3.2229394129677787E-6	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999998884571942	WITHOUT_CLASSIFICATION	1.1154280565724581E-7	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999989440188575	WITHOUT_CLASSIFICATION	1.055981142561585E-6	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999998557568033	WITHOUT_CLASSIFICATION	1.4424319669482504E-7	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999909964061549	WITHOUT_CLASSIFICATION	9.003593845085141E-6	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999925650153315	WITHOUT_CLASSIFICATION	7.43498466856184E-6	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999925650153315	WITHOUT_CLASSIFICATION	7.43498466856184E-6	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999995657349757	WITHOUT_CLASSIFICATION	4.342650242120365E-7	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999946580079647	WITHOUT_CLASSIFICATION	5.34199203521857E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999943301243692	WITHOUT_CLASSIFICATION	5.66987563085772E-6	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999849161187058	WITHOUT_CLASSIFICATION	1.5083881294168531E-5	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999952150628248	WITHOUT_CLASSIFICATION	4.784937175059566E-6	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999944821745181	WITHOUT_CLASSIFICATION	5.51782548181173E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999996154843925	WITHOUT_CLASSIFICATION	3.8451560751993524E-7	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999986422805822	WITHOUT_CLASSIFICATION	1.3577194178950504E-6	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999913553786864	WITHOUT_CLASSIFICATION	8.644621313633655E-6	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999999305553706	WITHOUT_CLASSIFICATION	6.944462936159616E-8	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999992422291529	WITHOUT_CLASSIFICATION	7.577708469829517E-7	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.999999849167246	WITHOUT_CLASSIFICATION	1.5083275393387396E-7	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999526028890855	WITHOUT_CLASSIFICATION	4.7397110914456155E-5	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999990888357143	WITHOUT_CLASSIFICATION	9.111642856078002E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999990664585469	WITHOUT_CLASSIFICATION	9.335414531200882E-7	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.999992130007628	WITHOUT_CLASSIFICATION	7.869992371998067E-6	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999976140079708	WITHOUT_CLASSIFICATION	2.3859920292981263E-6	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.99999953170103	WITHOUT_CLASSIFICATION	4.682989699624118E-7	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999993065126214	WITHOUT_CLASSIFICATION	6.93487378735675E-7	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.999997458435449	WITHOUT_CLASSIFICATION	2.5415645510771577E-6	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999987940870895	WITHOUT_CLASSIFICATION	1.2059129104666792E-6	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999942866100299	WITHOUT_CLASSIFICATION	5.713389970054205E-6	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999995568605136	WITHOUT_CLASSIFICATION	4.431394864332059E-7	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999803062840643	WITHOUT_CLASSIFICATION	1.9693715935633222E-5	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999928305890063	WITHOUT_CLASSIFICATION	7.169410993692421E-6	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999556636879424	WITHOUT_CLASSIFICATION	4.433631205770648E-5	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999986348013464	WITHOUT_CLASSIFICATION	1.3651986535568045E-6	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999970639196873	WITHOUT_CLASSIFICATION	2.9360803126783454E-6	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.999997766252049	WITHOUT_CLASSIFICATION	2.2337479509572713E-6	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999413732419536	WITHOUT_CLASSIFICATION	5.8626758046343284E-5	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999967265464565	WITHOUT_CLASSIFICATION	3.273453543577492E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999897695277449	WITHOUT_CLASSIFICATION	1.0230472255141746E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999970781815437	WITHOUT_CLASSIFICATION	2.9218184563425716E-6	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999873175147231	WITHOUT_CLASSIFICATION	1.2682485276955464E-5	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.99999952933209	WITHOUT_CLASSIFICATION	4.7066791006161297E-7	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999742342189326	WITHOUT_CLASSIFICATION	2.576578106746686E-5	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999982691104168	WITHOUT_CLASSIFICATION	1.7308895832131567E-6	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999959091588594	WITHOUT_CLASSIFICATION	4.090841140675452E-6	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999982570632985	WITHOUT_CLASSIFICATION	1.7429367016061168E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999975029570854	WITHOUT_CLASSIFICATION	2.4970429144830235E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999955597972372	WITHOUT_CLASSIFICATION	4.440202762751571E-6	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999985212831692	WITHOUT_CLASSIFICATION	1.478716830827734E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999885922362007	WITHOUT_CLASSIFICATION	1.1407763799163617E-5	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999922746662199	WITHOUT_CLASSIFICATION	7.725333780026648E-6	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999972686474454	WITHOUT_CLASSIFICATION	2.7313525545432106E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999955597972372	WITHOUT_CLASSIFICATION	4.440202762751571E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999885922362007	WITHOUT_CLASSIFICATION	1.1407763799163617E-5	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999883463307678	WITHOUT_CLASSIFICATION	1.1653669232296048E-5	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999762644688898	WITHOUT_CLASSIFICATION	2.3735531110284985E-5	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999895446883064	WITHOUT_CLASSIFICATION	1.0455311693695557E-5	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999940924509082	WITHOUT_CLASSIFICATION	5.90754909182057E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999975029570854	WITHOUT_CLASSIFICATION	2.4970429144830235E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999975029570854	WITHOUT_CLASSIFICATION	2.4970429144830235E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999955597972372	WITHOUT_CLASSIFICATION	4.440202762751571E-6	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999980482695394	WITHOUT_CLASSIFICATION	1.951730460580489E-6	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999937638765015	WITHOUT_CLASSIFICATION	6.236123498389194E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999985896535453	WITHOUT_CLASSIFICATION	1.4103464547768495E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999985896535453	WITHOUT_CLASSIFICATION	1.4103464547768495E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999933357990437	WITHOUT_CLASSIFICATION	6.664200956231496E-6	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999976720774433	WITHOUT_CLASSIFICATION	2.32792255667009E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999991680704152	WITHOUT_CLASSIFICATION	8.319295848243454E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999991680704152	WITHOUT_CLASSIFICATION	8.319295848243454E-7	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999658483222327	WITHOUT_CLASSIFICATION	3.415167776727981E-5	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999976720774433	WITHOUT_CLASSIFICATION	2.32792255667009E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999991680704152	WITHOUT_CLASSIFICATION	8.319295848243454E-7	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999658483222327	WITHOUT_CLASSIFICATION	3.415167776727981E-5	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999994013278823	WITHOUT_CLASSIFICATION	5.986721177264286E-7	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999983703798914	WITHOUT_CLASSIFICATION	1.6296201086148067E-6	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999991110479236	WITHOUT_CLASSIFICATION	8.889520764018548E-7	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999950677383003	WITHOUT_CLASSIFICATION	4.932261699675686E-6	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999905458997204	WITHOUT_CLASSIFICATION	9.454100279651925E-6	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999901725755009	WITHOUT_CLASSIFICATION	9.827424498993978E-6	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999972050243898	WITHOUT_CLASSIFICATION	2.7949756101033835E-6	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999927147821194	WITHOUT_CLASSIFICATION	7.285217880654541E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9999983023891238	WITHOUT_CLASSIFICATION	1.697610876105627E-6	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999950420224525	WITHOUT_CLASSIFICATION	4.957977547519103E-6	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999957843080621	WITHOUT_CLASSIFICATION	4.2156919379141205E-6	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999991422081389	WITHOUT_CLASSIFICATION	8.577918612090611E-7	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.999998198262168	WITHOUT_CLASSIFICATION	1.8017378319743996E-6	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999973694444358	WITHOUT_CLASSIFICATION	2.630555564051429E-6	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999752821055202	WITHOUT_CLASSIFICATION	2.4717894479771126E-5	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.999999178969658	WITHOUT_CLASSIFICATION	8.210303419967198E-7	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999989486080036	WITHOUT_CLASSIFICATION	1.0513919963624278E-6	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999996493937886	WITHOUT_CLASSIFICATION	3.5060621144865663E-7	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999996535770241	WITHOUT_CLASSIFICATION	3.46422975881245E-7	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999947606846441	WITHOUT_CLASSIFICATION	5.239315355912217E-6	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999998055490558	WITHOUT_CLASSIFICATION	1.944509442715357E-7	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.999999693131615	WITHOUT_CLASSIFICATION	3.0686838494133917E-7	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.999999758360995	WITHOUT_CLASSIFICATION	2.416390050259427E-7	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999997254586471	WITHOUT_CLASSIFICATION	2.745413529723987E-7	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.999999717298066	WITHOUT_CLASSIFICATION	2.827019339758744E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999976830903381	WITHOUT_CLASSIFICATION	2.3169096620071357E-6	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999985430726145	WITHOUT_CLASSIFICATION	1.4569273854671735E-6	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999965845057833	WITHOUT_CLASSIFICATION	3.4154942167672576E-6	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999998300880996	WITHOUT_CLASSIFICATION	1.699119004603414E-7	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999997558294483	WITHOUT_CLASSIFICATION	2.441705516098202E-7	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999977175677247	WITHOUT_CLASSIFICATION	2.2824322752974744E-6	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.999999016300872	WITHOUT_CLASSIFICATION	9.836991279809238E-7	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999932491453936	WITHOUT_CLASSIFICATION	6.7508546063501676E-6	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999990706001075	WITHOUT_CLASSIFICATION	9.293998926067065E-7	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999994208988574	WITHOUT_CLASSIFICATION	5.791011425278447E-7	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999996897028944	WITHOUT_CLASSIFICATION	3.1029710549258433E-7	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999997298429588	WITHOUT_CLASSIFICATION	2.7015704123558373E-7	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999974139901215	WITHOUT_CLASSIFICATION	2.586009878360378E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999976036665141	WITHOUT_CLASSIFICATION	2.3963334858485827E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999976036665141	WITHOUT_CLASSIFICATION	2.3963334858485827E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999976036665141	WITHOUT_CLASSIFICATION	2.3963334858485827E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.99999941057351	WITHOUT_CLASSIFICATION	5.894264898945271E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999957313542679	WITHOUT_CLASSIFICATION	4.268645732092214E-6	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999989277207179	WITHOUT_CLASSIFICATION	1.0722792821260657E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.999998264972685	WITHOUT_CLASSIFICATION	1.7350273151285718E-6	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999981200754048	WITHOUT_CLASSIFICATION	1.8799245951956694E-6	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999644609176649	WITHOUT_CLASSIFICATION	3.553908233504428E-5	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999001747204	WITHOUT_CLASSIFICATION	9.98252796529759E-8	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999999028961619	WITHOUT_CLASSIFICATION	9.71038380879629E-8	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999993128043042	WITHOUT_CLASSIFICATION	6.871956957895174E-7	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999987753180607	WITHOUT_CLASSIFICATION	1.2246819393299838E-6	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999988441021435	WITHOUT_CLASSIFICATION	1.155897856460817E-6	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999963896410102	WITHOUT_CLASSIFICATION	3.6103589897253228E-6	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.999998342574791	WITHOUT_CLASSIFICATION	1.6574252090070914E-6	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999963992757734	WITHOUT_CLASSIFICATION	3.6007242265461818E-6	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999957192882877	WITHOUT_CLASSIFICATION	4.280711712318618E-6	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999999277298884	WITHOUT_CLASSIFICATION	7.22701115781339E-8	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999968742513052	WITHOUT_CLASSIFICATION	3.125748694789635E-6	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999996038225407	WITHOUT_CLASSIFICATION	3.961774593388704E-7	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999991368026938	WITHOUT_CLASSIFICATION	8.631973061603763E-7	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999990682741392	WITHOUT_CLASSIFICATION	9.317258608431319E-7	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9999993295749537	WITHOUT_CLASSIFICATION	6.70425046190567E-7	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999980201680906	WITHOUT_CLASSIFICATION	1.9798319093169124E-6	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.999996998903763	WITHOUT_CLASSIFICATION	3.001096236902872E-6	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999990773058662	WITHOUT_CLASSIFICATION	9.226941336273398E-7	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999998454122254	WITHOUT_CLASSIFICATION	1.545877744836479E-7	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999969595155156	WITHOUT_CLASSIFICATION	3.0404844845271806E-6	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999998751706611	WITHOUT_CLASSIFICATION	1.248293388149441E-7	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999970963242549	WITHOUT_CLASSIFICATION	2.9036757451241643E-6	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999996288129286	WITHOUT_CLASSIFICATION	3.711870713408982E-7	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999995278790977	WITHOUT_CLASSIFICATION	4.7212090220872185E-7	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999571874268307	WITHOUT_CLASSIFICATION	4.281257316929793E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999994963875066	WITHOUT_CLASSIFICATION	5.036124933144172E-7	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9999930452851151	WITHOUT_CLASSIFICATION	6.954714884815566E-6	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.999999921737023	WITHOUT_CLASSIFICATION	7.826297699872964E-8	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999903664587738	WITHOUT_CLASSIFICATION	9.633541226224073E-6	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.999998451499274	WITHOUT_CLASSIFICATION	1.5485007259633092E-6	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999992568584412	WITHOUT_CLASSIFICATION	7.431415587502124E-7	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999984172434647	WITHOUT_CLASSIFICATION	1.582756535262462E-6	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999944504072752	WITHOUT_CLASSIFICATION	5.549592724804325E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999949698612294	WITHOUT_CLASSIFICATION	5.03013877056726E-6	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999983857388194	WITHOUT_CLASSIFICATION	1.6142611806372931E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999939510375215	WITHOUT_CLASSIFICATION	6.0489624784603985E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999909606539452	WITHOUT_CLASSIFICATION	9.039346054687614E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999998396410885	WITHOUT_CLASSIFICATION	1.603589115605618E-7	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999921990631808	WITHOUT_CLASSIFICATION	7.800936819186014E-6	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999996482736516	WITHOUT_CLASSIFICATION	3.517263483712574E-7	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9999971583808334	WITHOUT_CLASSIFICATION	2.8416191666370813E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999977119863769	WITHOUT_CLASSIFICATION	2.288013623073352E-6	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9999971214199851	WITHOUT_CLASSIFICATION	2.8785800148722703E-6	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999995811974477	WITHOUT_CLASSIFICATION	4.1880255222750083E-7	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.999994853626111	WITHOUT_CLASSIFICATION	5.146373888979179E-6	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999434827364128	WITHOUT_CLASSIFICATION	5.651726358732687E-5	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.999999073958235	WITHOUT_CLASSIFICATION	9.260417650847861E-7	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999934460993033	WITHOUT_CLASSIFICATION	6.553900696741253E-6	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999982353849838	WITHOUT_CLASSIFICATION	1.764615016147159E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999950376039126	WITHOUT_CLASSIFICATION	4.962396087356393E-6	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999913849773088	WITHOUT_CLASSIFICATION	8.615022691245008E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999968407060316	WITHOUT_CLASSIFICATION	3.159293968320136E-6	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999923373139937	WITHOUT_CLASSIFICATION	7.66268600618772E-6	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999989996912224	WITHOUT_CLASSIFICATION	1.0003087775902803E-6	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999986689467619	WITHOUT_CLASSIFICATION	1.3310532380493067E-6	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999881156717099	WITHOUT_CLASSIFICATION	1.1884328290073515E-5	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.999998575799462	WITHOUT_CLASSIFICATION	1.4242005379852556E-6	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999974563007445	WITHOUT_CLASSIFICATION	2.5436992553524464E-6	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9999994768740479	WITHOUT_CLASSIFICATION	5.231259521959519E-7	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999955661872799	WITHOUT_CLASSIFICATION	4.4338127201059335E-6	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999702481121227	WITHOUT_CLASSIFICATION	2.9751887877286274E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999909920183335	WITHOUT_CLASSIFICATION	9.0079816665781E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999909920183335	WITHOUT_CLASSIFICATION	9.0079816665781E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999668319112764	WITHOUT_CLASSIFICATION	3.3168088723592904E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999668319112764	WITHOUT_CLASSIFICATION	3.3168088723592904E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999955661872799	WITHOUT_CLASSIFICATION	4.4338127201059335E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999668319112764	WITHOUT_CLASSIFICATION	3.3168088723592904E-5	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.999997310742541	WITHOUT_CLASSIFICATION	2.6892574589787833E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999885283519185	WITHOUT_CLASSIFICATION	1.1471648081328936E-5	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999885283519185	WITHOUT_CLASSIFICATION	1.1471648081328936E-5	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999831891214587	WITHOUT_CLASSIFICATION	1.6810878541240777E-5	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999982284759985	WITHOUT_CLASSIFICATION	1.7715240015332407E-6	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999990974819881	WITHOUT_CLASSIFICATION	9.025180119249162E-7	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9999679787483554	WITHOUT_CLASSIFICATION	3.2021251644588546E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999975668052048	WITHOUT_CLASSIFICATION	2.4331947952987E-6	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999981908688386	WITHOUT_CLASSIFICATION	1.8091311613973432E-6	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999988489326573	WITHOUT_CLASSIFICATION	1.1510673426610658E-6	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9987438902058536	WITHOUT_CLASSIFICATION	0.0012561097941463442	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9987351274833822	WITHOUT_CLASSIFICATION	0.0012648725166177822	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999153853097793	WITHOUT_CLASSIFICATION	8.461469022068696E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999945844663279	WITHOUT_CLASSIFICATION	5.415533672076088E-6	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999979301761406	WITHOUT_CLASSIFICATION	2.0698238593868682E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999970717529839	WITHOUT_CLASSIFICATION	2.928247015977477E-6	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999988515277339	WITHOUT_CLASSIFICATION	1.1484722661287845E-6	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.999985294426779	WITHOUT_CLASSIFICATION	1.4705573221100075E-5	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999994617324313	WITHOUT_CLASSIFICATION	5.382675687750016E-7	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999995129142983	WITHOUT_CLASSIFICATION	4.870857016286157E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9999908550019958	WITHOUT_CLASSIFICATION	9.14499800421659E-6	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9999954721118959	WITHOUT_CLASSIFICATION	4.527888104151946E-6	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999980298644844	WITHOUT_CLASSIFICATION	1.9701355156649507E-6	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999993379741436	WITHOUT_CLASSIFICATION	6.620258562779807E-7	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999796710147149	WITHOUT_CLASSIFICATION	2.0328985285185992E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999989337482689	WITHOUT_CLASSIFICATION	1.0662517311373028E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.999998015712051	WITHOUT_CLASSIFICATION	1.984287949043429E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.999998015712051	WITHOUT_CLASSIFICATION	1.984287949043429E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999995356024304	WITHOUT_CLASSIFICATION	4.6439756960502767E-7	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999956830594	WITHOUT_CLASSIFICATION	4.316940600057351E-6	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999993212165587	WITHOUT_CLASSIFICATION	6.787834413778824E-7	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999995311207672	WITHOUT_CLASSIFICATION	4.688792327887485E-6	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999998838913052	WITHOUT_CLASSIFICATION	1.1610869475138956E-7	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999942502584379	WITHOUT_CLASSIFICATION	5.749741562142338E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999836820924087	WITHOUT_CLASSIFICATION	1.6317907591334576E-5	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9999980327776977	WITHOUT_CLASSIFICATION	1.967222302273727E-6	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999941530879802	WITHOUT_CLASSIFICATION	5.846912019672929E-6	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9998981780927159	WITHOUT_CLASSIFICATION	1.0182190728416288E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999991346620243	WITHOUT_CLASSIFICATION	8.653379757903804E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999971965010266	WITHOUT_CLASSIFICATION	2.8034989734463994E-6	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999992609346584	WITHOUT_CLASSIFICATION	7.390653417009075E-7	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999936899187686	WITHOUT_CLASSIFICATION	6.310081231459465E-6	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999979818233495	WITHOUT_CLASSIFICATION	2.0181766504645237E-6	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999880590742154	WITHOUT_CLASSIFICATION	1.194092578454669E-5	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999464683551411	WITHOUT_CLASSIFICATION	5.3531644858848204E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999911213948184	WITHOUT_CLASSIFICATION	8.878605181715584E-6	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999936634155236	WITHOUT_CLASSIFICATION	6.3365844764456965E-6	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999976037192195	WITHOUT_CLASSIFICATION	2.3962807805744654E-6	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999991754241844	WITHOUT_CLASSIFICATION	8.245758157381976E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999968888718893	WITHOUT_CLASSIFICATION	3.1111281106170295E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999991071968972	WITHOUT_CLASSIFICATION	8.928031028029416E-7	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999970531274937	WITHOUT_CLASSIFICATION	2.9468725063559043E-6	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999461116090261	WITHOUT_CLASSIFICATION	5.388839097383403E-5	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999944000873026	WITHOUT_CLASSIFICATION	5.599912697444259E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999971636730592	WITHOUT_CLASSIFICATION	2.836326940781137E-6	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999982770194744	WITHOUT_CLASSIFICATION	1.7229805255403804E-6	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999994260103933	WITHOUT_CLASSIFICATION	5.739896068563196E-7	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999982158687468	WITHOUT_CLASSIFICATION	1.7841312532422412E-6	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999896983296842	WITHOUT_CLASSIFICATION	1.0301670315736017E-5	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999995489255417	WITHOUT_CLASSIFICATION	4.5107445833947535E-7	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999985332703198	WITHOUT_CLASSIFICATION	1.46672968020926E-6	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.999992901654126	WITHOUT_CLASSIFICATION	7.09834587404723E-6	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9999710662770827	WITHOUT_CLASSIFICATION	2.8933722917387647E-5	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999901149832142	WITHOUT_CLASSIFICATION	9.885016785799714E-6	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999977914420632	WITHOUT_CLASSIFICATION	2.208557936771685E-6	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999959580569102	WITHOUT_CLASSIFICATION	4.04194308985417E-6	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999709196973736	WITHOUT_CLASSIFICATION	2.9080302626367514E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9999627718174525	WITHOUT_CLASSIFICATION	3.722818254737794E-5	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999985404782576	WITHOUT_CLASSIFICATION	1.4595217423420375E-6	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999988795748976	WITHOUT_CLASSIFICATION	1.120425102342824E-6	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999985662012381	WITHOUT_CLASSIFICATION	1.4337987619714752E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999977812267611	WITHOUT_CLASSIFICATION	2.2187732388371455E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999986452524658	WITHOUT_CLASSIFICATION	1.3547475340883282E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999941530879802	WITHOUT_CLASSIFICATION	5.846912019672929E-6	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9998981780927159	WITHOUT_CLASSIFICATION	1.0182190728416288E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999991346620243	WITHOUT_CLASSIFICATION	8.653379757903804E-7	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999456934236572	WITHOUT_CLASSIFICATION	5.430657634267621E-5	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999749084658272	WITHOUT_CLASSIFICATION	2.5091534172792487E-5	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.999984357331897	WITHOUT_CLASSIFICATION	1.5642668102991665E-5	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999976563190883	WITHOUT_CLASSIFICATION	2.343680911793356E-6	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999851628718137	WITHOUT_CLASSIFICATION	1.4837128186260952E-5	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999988097297956	WITHOUT_CLASSIFICATION	1.1902702043177078E-6	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999984642105558	WITHOUT_CLASSIFICATION	1.5357894442583783E-6	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999408895284919	WITHOUT_CLASSIFICATION	5.9110471508111473E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999987389933972	WITHOUT_CLASSIFICATION	1.261006602754781E-6	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999948117440284	WITHOUT_CLASSIFICATION	5.188255971565308E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999926295691707	WITHOUT_CLASSIFICATION	7.37043082932265E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999926295691707	WITHOUT_CLASSIFICATION	7.37043082932265E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999903994971406	WITHOUT_CLASSIFICATION	9.600502859305634E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999751672341349	WITHOUT_CLASSIFICATION	2.483276586508157E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999804939516113	WITHOUT_CLASSIFICATION	1.950604838875902E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999850827068879	WITHOUT_CLASSIFICATION	1.4917293112168422E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999901534655048	WITHOUT_CLASSIFICATION	9.846534495239779E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999947460451937	WITHOUT_CLASSIFICATION	5.2539548063811044E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999980864041902	WITHOUT_CLASSIFICATION	1.913595809865032E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999976905452311	WITHOUT_CLASSIFICATION	2.30945476889263E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999978697793841	WITHOUT_CLASSIFICATION	2.130220615958955E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999988344983095	WITHOUT_CLASSIFICATION	1.165501690492323E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999986257574855	WITHOUT_CLASSIFICATION	1.374242514371373E-6	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999918203840302	WITHOUT_CLASSIFICATION	8.179615969801471E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999970408653667	WITHOUT_CLASSIFICATION	2.9591346334613745E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999749063412752	WITHOUT_CLASSIFICATION	2.5093658724872306E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999894606748344	WITHOUT_CLASSIFICATION	1.0539325165490262E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999954224856719	WITHOUT_CLASSIFICATION	4.577514328087239E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999991855107305	WITHOUT_CLASSIFICATION	8.14489269513249E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999685090768476	WITHOUT_CLASSIFICATION	3.149092315234462E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999995522441666	WITHOUT_CLASSIFICATION	4.4775583345595334E-7	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999794874845065	WITHOUT_CLASSIFICATION	2.051251549348932E-5	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999950265534948	WITHOUT_CLASSIFICATION	4.97344650516565E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999847764541433	WITHOUT_CLASSIFICATION	1.5223545856781955E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999964722186113	WITHOUT_CLASSIFICATION	3.5277813886115694E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999914886204203	WITHOUT_CLASSIFICATION	8.511379579705274E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999987306689551	WITHOUT_CLASSIFICATION	1.2693310449024118E-6	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999893036447968	WITHOUT_CLASSIFICATION	1.0696355203280265E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.999994121903475	WITHOUT_CLASSIFICATION	5.8780965249091935E-6	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999969971881794	WITHOUT_CLASSIFICATION	3.00281182055701E-6	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999891074101068	WITHOUT_CLASSIFICATION	1.089258989322337E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999952564299639	WITHOUT_CLASSIFICATION	4.743570036135559E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999915620456624	WITHOUT_CLASSIFICATION	8.437954337547084E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999994090099403	WITHOUT_CLASSIFICATION	5.909900596483568E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999988179644821	WITHOUT_CLASSIFICATION	1.1820355179906057E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999974095129793	WITHOUT_CLASSIFICATION	2.590487020645268E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999780122567318	WITHOUT_CLASSIFICATION	2.1987743268190818E-5	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999759990700238	WITHOUT_CLASSIFICATION	2.4000929976260778E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999941384655282	WITHOUT_CLASSIFICATION	5.861534471871063E-6	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999981362053475	WITHOUT_CLASSIFICATION	1.8637946524967125E-6	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999852862987684	WITHOUT_CLASSIFICATION	1.4713701231558788E-5	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999976968534455	WITHOUT_CLASSIFICATION	2.3031465545092558E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.999994433719764	WITHOUT_CLASSIFICATION	5.566280235896929E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999922279875554	WITHOUT_CLASSIFICATION	7.772012444685076E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999954088052325	WITHOUT_CLASSIFICATION	4.591194767536271E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999717052152141	WITHOUT_CLASSIFICATION	2.82947847859386E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999898092953065	WITHOUT_CLASSIFICATION	1.0190704693625736E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999474627165956	WITHOUT_CLASSIFICATION	5.2537283404329445E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999903994971406	WITHOUT_CLASSIFICATION	9.600502859305634E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999751672341349	WITHOUT_CLASSIFICATION	2.483276586508157E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999804939516113	WITHOUT_CLASSIFICATION	1.950604838875902E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999850827068879	WITHOUT_CLASSIFICATION	1.4917293112168422E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999980864041902	WITHOUT_CLASSIFICATION	1.913595809865032E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999976905452311	WITHOUT_CLASSIFICATION	2.30945476889263E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9999090661188074	WITHOUT_CLASSIFICATION	9.093388119267263E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.999992472490035	WITHOUT_CLASSIFICATION	7.527509965064555E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999992645911724	WITHOUT_CLASSIFICATION	7.354088276166272E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999986257574855	WITHOUT_CLASSIFICATION	1.374242514371373E-6	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999918203840302	WITHOUT_CLASSIFICATION	8.179615969801471E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999970408653667	WITHOUT_CLASSIFICATION	2.9591346334613745E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999749063412752	WITHOUT_CLASSIFICATION	2.5093658724872306E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999954224856719	WITHOUT_CLASSIFICATION	4.577514328087239E-6	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999994207061187	WITHOUT_CLASSIFICATION	5.792938812693083E-7	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.999999727185518	WITHOUT_CLASSIFICATION	2.728144820017294E-7	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999991830568943	WITHOUT_CLASSIFICATION	8.169431058384641E-7	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.999999604509898	WITHOUT_CLASSIFICATION	3.9549010199029925E-7	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999995675256083	WITHOUT_CLASSIFICATION	4.324743917808001E-7	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999996161101877	WITHOUT_CLASSIFICATION	3.838898122855641E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999975063283899	WITHOUT_CLASSIFICATION	2.493671610093889E-6	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999979849206897	WITHOUT_CLASSIFICATION	2.0150793103064626E-6	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999933796111851	WITHOUT_CLASSIFICATION	6.6203888149071685E-6	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999979260918694	WITHOUT_CLASSIFICATION	2.0739081305048784E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999933796111851	WITHOUT_CLASSIFICATION	6.6203888149071685E-6	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9999981004583246	WITHOUT_CLASSIFICATION	1.8995416753735825E-6	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999990980427417	WITHOUT_CLASSIFICATION	9.019572582075319E-7	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999700000075721	WITHOUT_CLASSIFICATION	2.9999992427839536E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999700000075721	WITHOUT_CLASSIFICATION	2.9999992427839536E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999982191400543	WITHOUT_CLASSIFICATION	1.7808599457222938E-6	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999990814330825	WITHOUT_CLASSIFICATION	9.185669173756561E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.999999727922312	WITHOUT_CLASSIFICATION	2.7207768807595277E-7	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999972261603034	WITHOUT_CLASSIFICATION	2.7738396966268603E-6	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9999991027724096	WITHOUT_CLASSIFICATION	8.972275904941117E-7	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999996433895607	WITHOUT_CLASSIFICATION	3.5661043940283555E-7	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999910838326156	WITHOUT_CLASSIFICATION	8.91616738437872E-6	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999955380321135	WITHOUT_CLASSIFICATION	4.461967886589241E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999936523203959	WITHOUT_CLASSIFICATION	6.347679604111648E-6	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999927650296084	WITHOUT_CLASSIFICATION	7.234970391467721E-6	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999995605680281	WITHOUT_CLASSIFICATION	4.394319719086239E-7	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999699767083675	WITHOUT_CLASSIFICATION	3.0023291632501443E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999993862790946	WITHOUT_CLASSIFICATION	6.137209054853842E-7	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999993862790946	WITHOUT_CLASSIFICATION	6.137209054853842E-7	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999997693755142	WITHOUT_CLASSIFICATION	2.3062448583113017E-7	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999995100707242	WITHOUT_CLASSIFICATION	4.89929275738157E-7	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999829950100271	WITHOUT_CLASSIFICATION	1.70049899728583E-5	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9999947791873673	WITHOUT_CLASSIFICATION	5.220812632717665E-6	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999927603495655	WITHOUT_CLASSIFICATION	7.239650434425521E-6	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999484113173006	WITHOUT_CLASSIFICATION	5.158868269944325E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999958734908871	WITHOUT_CLASSIFICATION	4.126509112829545E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999989379306475	WITHOUT_CLASSIFICATION	1.062069352451552E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999959194114088	WITHOUT_CLASSIFICATION	4.080588591294766E-6	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999900350773047	WITHOUT_CLASSIFICATION	9.964922695359942E-6	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999755698976202	WITHOUT_CLASSIFICATION	2.4430102379795012E-5	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999918814498416	WITHOUT_CLASSIFICATION	8.118550158307458E-6	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999961497492504	WITHOUT_CLASSIFICATION	3.8502507495505945E-6	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9999995897360385	WITHOUT_CLASSIFICATION	4.102639614305035E-7	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999995311207672	WITHOUT_CLASSIFICATION	4.688792327887485E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999989510280023	WITHOUT_CLASSIFICATION	1.0489719976882797E-6	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999994659247409	WITHOUT_CLASSIFICATION	5.340752591619975E-7	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999716884249018	WITHOUT_CLASSIFICATION	2.8311575098140124E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999863408190941	WITHOUT_CLASSIFICATION	1.3659180905918657E-5	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9998818533396723	WITHOUT_CLASSIFICATION	1.1814666032774256E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999784904888152	WITHOUT_CLASSIFICATION	2.1509511184823827E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999865257330177	WITHOUT_CLASSIFICATION	1.3474266982262854E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9998559489408836	WITHOUT_CLASSIFICATION	1.4405105911634647E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999952720129552	WITHOUT_CLASSIFICATION	4.727987044749135E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999468703678973	WITHOUT_CLASSIFICATION	5.312963210281606E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.999977467618611	WITHOUT_CLASSIFICATION	2.2532381389101975E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.999977467618611	WITHOUT_CLASSIFICATION	2.2532381389101975E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999967389888632	WITHOUT_CLASSIFICATION	3.2610111367320765E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999991486839747	WITHOUT_CLASSIFICATION	8.513160253385133E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999947680808646	WITHOUT_CLASSIFICATION	5.231919135323371E-6	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876718180872	WITHOUT_CLASSIFICATION	1.2328181912694641E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999914487700984	WITHOUT_CLASSIFICATION	8.55122990163176E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988028617632	WITHOUT_CLASSIFICATION	1.1971382368064306E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999910851238869	WITHOUT_CLASSIFICATION	8.914876113007325E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.999999091221301	WITHOUT_CLASSIFICATION	9.08778699009327E-7	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999997079140376	WITHOUT_CLASSIFICATION	2.9208596245700427E-7	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.999982411506862	WITHOUT_CLASSIFICATION	1.758849313796654E-5	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999943555117	WITHOUT_CLASSIFICATION	5.644488299948232E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999931957352544	WITHOUT_CLASSIFICATION	6.80426474554904E-6	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999985021577859	WITHOUT_CLASSIFICATION	1.4978422142515911E-6	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999986097776847	WITHOUT_CLASSIFICATION	1.3902223152757029E-6	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.999999916909705	WITHOUT_CLASSIFICATION	8.309029500139059E-8	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999740666544231	WITHOUT_CLASSIFICATION	2.5933345576843987E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999978180700967	WITHOUT_CLASSIFICATION	2.181929903237261E-6	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9999209086410694	WITHOUT_CLASSIFICATION	7.90913589306013E-5	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9999859733163191	WITHOUT_CLASSIFICATION	1.4026683680806524E-5	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999986093895388	WITHOUT_CLASSIFICATION	1.390610461180042E-6	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999957663470727	WITHOUT_CLASSIFICATION	4.23365292734423E-6	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999200375763	WITHOUT_CLASSIFICATION	7.996242364344036E-8	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999893036447968	WITHOUT_CLASSIFICATION	1.0696355203280265E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999965157232573	WITHOUT_CLASSIFICATION	3.484276742615436E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999922279875554	WITHOUT_CLASSIFICATION	7.772012444685076E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999996161101877	WITHOUT_CLASSIFICATION	3.838898122855641E-7	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999963925321651	WITHOUT_CLASSIFICATION	3.607467834884966E-6	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999992188307797	WITHOUT_CLASSIFICATION	7.811692202746768E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999847764541433	WITHOUT_CLASSIFICATION	1.5223545856781955E-5	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999940474689264	WITHOUT_CLASSIFICATION	5.952531073568988E-6	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999936020517277	WITHOUT_CLASSIFICATION	6.397948272286802E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999950071637717	WITHOUT_CLASSIFICATION	4.992836228384963E-6	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999966394592879	WITHOUT_CLASSIFICATION	3.3605407121893607E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999922279875554	WITHOUT_CLASSIFICATION	7.772012444685076E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999908260673726	WITHOUT_CLASSIFICATION	9.173932627422003E-6	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.999985766114264	WITHOUT_CLASSIFICATION	1.4233885736026908E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999941710655156	WITHOUT_CLASSIFICATION	5.828934484352846E-6	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.999998253577923	WITHOUT_CLASSIFICATION	1.7464220770091787E-6	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999994859746499	WITHOUT_CLASSIFICATION	5.140253501165042E-7	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9999936288455901	WITHOUT_CLASSIFICATION	6.371154409877158E-6	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999995857556264	WITHOUT_CLASSIFICATION	4.1424437359742787E-7	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999961347225682	WITHOUT_CLASSIFICATION	3.865277431772339E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999975029570854	WITHOUT_CLASSIFICATION	2.4970429144830235E-6	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999981591378245	WITHOUT_CLASSIFICATION	1.8408621755985852E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999933357990437	WITHOUT_CLASSIFICATION	6.664200956231496E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999933357990437	WITHOUT_CLASSIFICATION	6.664200956231496E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999933357990437	WITHOUT_CLASSIFICATION	6.664200956231496E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999991680704152	WITHOUT_CLASSIFICATION	8.319295848243454E-7	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9999999152409621	WITHOUT_CLASSIFICATION	8.475903784845197E-8	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999937053929837	WITHOUT_CLASSIFICATION	6.294607016334562E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999969780396101	WITHOUT_CLASSIFICATION	3.0219603898444747E-6	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999927147821194	WITHOUT_CLASSIFICATION	7.285217880654541E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.99999879360068	WITHOUT_CLASSIFICATION	1.2063993200058306E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999879119442447	WITHOUT_CLASSIFICATION	1.2088055755140808E-5	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9999995766680458	WITHOUT_CLASSIFICATION	4.233319541710481E-7	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999970441613062	WITHOUT_CLASSIFICATION	2.9558386938700526E-6	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999973842809299	WITHOUT_CLASSIFICATION	2.6157190701364436E-6	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999670581966	WITHOUT_CLASSIFICATION	3.294180346118508E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999763900171734	WITHOUT_CLASSIFICATION	2.360998282654936E-5	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9998949600231855	WITHOUT_CLASSIFICATION	1.0503997681462982E-4	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.999999744965034	WITHOUT_CLASSIFICATION	2.5503496603910803E-7	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999997472580614	WITHOUT_CLASSIFICATION	2.527419385604612E-7	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999998994036206	WITHOUT_CLASSIFICATION	1.005963794499534E-7	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999657341644133	WITHOUT_CLASSIFICATION	3.426583558671947E-5	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999839614473407	WITHOUT_CLASSIFICATION	1.603855265924638E-5	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.999999708899526	WITHOUT_CLASSIFICATION	2.911004739328998E-7	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.999907830681793	WITHOUT_CLASSIFICATION	9.216931820694702E-5	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999999705607214	WITHOUT_CLASSIFICATION	2.9439278664776457E-8	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999976036665141	WITHOUT_CLASSIFICATION	2.3963334858485827E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999975944479035	WITHOUT_CLASSIFICATION	2.405552096523098E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999961408552149	WITHOUT_CLASSIFICATION	3.859144785048034E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999976043484942	WITHOUT_CLASSIFICATION	2.3956515057703917E-6	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999978228166401	WITHOUT_CLASSIFICATION	2.1771833598093366E-6	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999999090425661	WITHOUT_CLASSIFICATION	9.095743392195331E-8	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999992995362351	WITHOUT_CLASSIFICATION	7.004637647874579E-7	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999983305948565	WITHOUT_CLASSIFICATION	1.6694051434854138E-6	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999997215908797	WITHOUT_CLASSIFICATION	2.784091203368298E-7	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999991627198086	WITHOUT_CLASSIFICATION	8.372801912923687E-7	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999989733662168	WITHOUT_CLASSIFICATION	1.0266337832392765E-6	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999951988053138	WITHOUT_CLASSIFICATION	4.801194686109311E-6	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999997401149747	WITHOUT_CLASSIFICATION	2.598850253571716E-7	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999740753834728	WITHOUT_CLASSIFICATION	2.5924616527109233E-5	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9999998898655073	WITHOUT_CLASSIFICATION	1.1013449265147513E-7	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999996145847637	WITHOUT_CLASSIFICATION	3.85415236307628E-7	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999996788439133	WITHOUT_CLASSIFICATION	3.2115608675504675E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999668319112764	WITHOUT_CLASSIFICATION	3.3168088723592904E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999668319112764	WITHOUT_CLASSIFICATION	3.3168088723592904E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999970717529839	WITHOUT_CLASSIFICATION	2.928247015977477E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999970717529839	WITHOUT_CLASSIFICATION	2.928247015977477E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999986493301026	WITHOUT_CLASSIFICATION	1.3506698972652526E-6	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999988949527402	WITHOUT_CLASSIFICATION	1.1050472597961144E-6	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999998891774208	WITHOUT_CLASSIFICATION	1.108225791948513E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999898438675526	WITHOUT_CLASSIFICATION	1.0156132447371056E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999898438675526	WITHOUT_CLASSIFICATION	1.0156132447371056E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999898438675526	WITHOUT_CLASSIFICATION	1.0156132447371056E-5	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999995689652362	WITHOUT_CLASSIFICATION	4.310347637295118E-7	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999991056476236	WITHOUT_CLASSIFICATION	8.943523764032166E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999971965010266	WITHOUT_CLASSIFICATION	2.8034989734463994E-6	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999976075410043	WITHOUT_CLASSIFICATION	2.3924589956530632E-6	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.999976772245014	WITHOUT_CLASSIFICATION	2.3227754986009416E-5	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999540206866923	WITHOUT_CLASSIFICATION	4.597931330768507E-5	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999693731019682	WITHOUT_CLASSIFICATION	3.062689803182268E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999863506425475	WITHOUT_CLASSIFICATION	1.3649357452542669E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999863506425475	WITHOUT_CLASSIFICATION	1.3649357452542669E-5	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999984503136538	WITHOUT_CLASSIFICATION	1.5496863461916863E-6	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999616823557445	WITHOUT_CLASSIFICATION	3.831764425564111E-5	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9994763066640577	WITHOUT_CLASSIFICATION	5.236933359422777E-4	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999990244291035	WITHOUT_CLASSIFICATION	9.75570896584194E-7	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999979638867572	WITHOUT_CLASSIFICATION	2.0361132427970727E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9995571182649913	WITHOUT_CLASSIFICATION	4.4288173500865095E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999867420558441	WITHOUT_CLASSIFICATION	1.3257944155834375E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999926295691707	WITHOUT_CLASSIFICATION	7.37043082932265E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999901534655048	WITHOUT_CLASSIFICATION	9.846534495239779E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999947460451937	WITHOUT_CLASSIFICATION	5.2539548063811044E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999988344983095	WITHOUT_CLASSIFICATION	1.165501690492323E-6	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999894606748344	WITHOUT_CLASSIFICATION	1.0539325165490262E-5	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999888321383997	WITHOUT_CLASSIFICATION	1.1167861600338349E-5	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999904459646324	WITHOUT_CLASSIFICATION	9.554035367621324E-6	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.999998032647573	WITHOUT_CLASSIFICATION	1.967352426978864E-6	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999975063283899	WITHOUT_CLASSIFICATION	2.493671610093889E-6	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9981029550009152	WITHOUT_CLASSIFICATION	0.0018970449990848301	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999911223960313	WITHOUT_CLASSIFICATION	8.87760396867202E-6	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999997693755142	WITHOUT_CLASSIFICATION	2.3062448583113017E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999967586327947	WITHOUT_CLASSIFICATION	3.2413672052642073E-6	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999981045621328	WITHOUT_CLASSIFICATION	1.8954378671420253E-6	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999977371728904	WITHOUT_CLASSIFICATION	2.262827109507697E-6	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999994584209347	WITHOUT_CLASSIFICATION	5.415790652226711E-7	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999999634781265	WITHOUT_CLASSIFICATION	3.6521873644659455E-8	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999996787533735	WITHOUT_CLASSIFICATION	3.212466265215764E-7	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999917705266663	WITHOUT_CLASSIFICATION	8.229473333809138E-6	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999950044184781	WITHOUT_CLASSIFICATION	4.9955815218423136E-6	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999982924637275	WITHOUT_CLASSIFICATION	1.7075362724559219E-6	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999968446340219	WITHOUT_CLASSIFICATION	3.1553659780541092E-6	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999968446340219	WITHOUT_CLASSIFICATION	3.1553659780541092E-6	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999979364638842	WITHOUT_CLASSIFICATION	2.063536115812884E-6	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999964198444806	WITHOUT_CLASSIFICATION	3.58015551938731E-6	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999769580728742	WITHOUT_CLASSIFICATION	2.3041927125747253E-5	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999839127761261	WITHOUT_CLASSIFICATION	1.6087223873910208E-5	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999839127761261	WITHOUT_CLASSIFICATION	1.6087223873910208E-5	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999976470881017	WITHOUT_CLASSIFICATION	2.35291189835245E-6	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9999965951731783	WITHOUT_CLASSIFICATION	3.4048268216928155E-6	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9998821343129679	WITHOUT_CLASSIFICATION	1.1786568703211589E-4	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999995261743213	WITHOUT_CLASSIFICATION	4.738256786999529E-7	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.999996894291741	WITHOUT_CLASSIFICATION	3.1057082591178458E-6	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999992600471379	WITHOUT_CLASSIFICATION	7.399528620461355E-7	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999997095409292	WITHOUT_CLASSIFICATION	2.9045907077515774E-7	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999988506078499	WITHOUT_CLASSIFICATION	1.1493921501396851E-6	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999997481129708	WITHOUT_CLASSIFICATION	2.5188702920461646E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9997943590857055	WITHOUT_CLASSIFICATION	2.0564091429458111E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999997312793385	WITHOUT_CLASSIFICATION	2.687206615755562E-7	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999994046325724	WITHOUT_CLASSIFICATION	5.953674276456369E-7	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999898397348661	WITHOUT_CLASSIFICATION	1.0160265133806858E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.999999819994405	WITHOUT_CLASSIFICATION	1.800055949109652E-7	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.999995190601661	WITHOUT_CLASSIFICATION	4.809398338978559E-6	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999968145311715	WITHOUT_CLASSIFICATION	3.1854688285533626E-6	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999953210894262	WITHOUT_CLASSIFICATION	4.678910573748508E-6	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999989643044765	WITHOUT_CLASSIFICATION	1.0356955234750593E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999952922796751	WITHOUT_CLASSIFICATION	4.707720324846294E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999991254532005	WITHOUT_CLASSIFICATION	8.745467995557425E-7	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999986103298525	WITHOUT_CLASSIFICATION	1.3896701474942529E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999935975433563	WITHOUT_CLASSIFICATION	6.4024566437838185E-6	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999989452545551	WITHOUT_CLASSIFICATION	1.0547454448668047E-6	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9996690319685348	WITHOUT_CLASSIFICATION	3.309680314652462E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999973365130811	WITHOUT_CLASSIFICATION	2.663486918973371E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999973365130811	WITHOUT_CLASSIFICATION	2.663486918973371E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999973365130811	WITHOUT_CLASSIFICATION	2.663486918973371E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999973365130811	WITHOUT_CLASSIFICATION	2.663486918973371E-6	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999992898802029	WITHOUT_CLASSIFICATION	7.101197970224986E-7	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999471953851647	WITHOUT_CLASSIFICATION	5.28046148352424E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999735670695978	WITHOUT_CLASSIFICATION	2.6432930402199064E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999735670695978	WITHOUT_CLASSIFICATION	2.6432930402199064E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999735670695978	WITHOUT_CLASSIFICATION	2.6432930402199064E-5	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999966759267583	WITHOUT_CLASSIFICATION	3.3240732417178616E-6	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999992582722392	WITHOUT_CLASSIFICATION	7.41727760848608E-7	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999743814032326	WITHOUT_CLASSIFICATION	2.561859676734771E-5	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999995154046263	WITHOUT_CLASSIFICATION	4.84595373741913E-7	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999995154046263	WITHOUT_CLASSIFICATION	4.84595373741913E-7	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999863408190941	WITHOUT_CLASSIFICATION	1.3659180905918657E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999863408190941	WITHOUT_CLASSIFICATION	1.3659180905918657E-5	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9999953420265535	WITHOUT_CLASSIFICATION	4.657973446556898E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9999953420265535	WITHOUT_CLASSIFICATION	4.657973446556898E-6	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999590419489489	WITHOUT_CLASSIFICATION	4.09580510510901E-5	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999910344084545	WITHOUT_CLASSIFICATION	8.96559154550384E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999188087791359	WITHOUT_CLASSIFICATION	8.11912208641623E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999723033130014	WITHOUT_CLASSIFICATION	2.7696686998720682E-5	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999191589195593	WITHOUT_CLASSIFICATION	8.084108044074072E-5	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999887819523607	WITHOUT_CLASSIFICATION	1.1218047639194437E-5	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9998505578380616	WITHOUT_CLASSIFICATION	1.4944216193836724E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9992155443885934	WITHOUT_CLASSIFICATION	7.84455611406638E-4	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999968982353905	WITHOUT_CLASSIFICATION	3.1017646095474958E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997908402105711	WITHOUT_CLASSIFICATION	2.091597894288766E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999032678893706	WITHOUT_CLASSIFICATION	9.673211062950493E-5	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999696294532063	WITHOUT_CLASSIFICATION	3.037054679367374E-5	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.999994134209399	WITHOUT_CLASSIFICATION	5.865790601090939E-6	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9998883993728156	WITHOUT_CLASSIFICATION	1.1160062718446352E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999096878500467	WITHOUT_CLASSIFICATION	9.031214995319737E-5	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999757425549796	WITHOUT_CLASSIFICATION	2.4257445020371643E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999593827712507	WITHOUT_CLASSIFICATION	4.0617228749276005E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.999971334029703	WITHOUT_CLASSIFICATION	2.8665970297116787E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9998938534193788	WITHOUT_CLASSIFICATION	1.0614658062121668E-4	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9998340591635461	WITHOUT_CLASSIFICATION	1.6594083645388245E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998107197072001	WITHOUT_CLASSIFICATION	1.892802927999172E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998107197072001	WITHOUT_CLASSIFICATION	1.892802927999172E-4	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9997488536207645	WITHOUT_CLASSIFICATION	2.5114637923551533E-4	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999993718455316	WITHOUT_CLASSIFICATION	6.281544684151271E-7	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9966895295416793	WITHOUT_CLASSIFICATION	0.003310470458320635	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9972799417913636	WITHOUT_CLASSIFICATION	0.0027200582086363357	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.996054445329167	WITHOUT_CLASSIFICATION	0.003945554670833068	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9975336050854069	WITHOUT_CLASSIFICATION	0.002466394914593074	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9974472124291811	WITHOUT_CLASSIFICATION	0.002552787570818983	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9971153107686821	WITHOUT_CLASSIFICATION	0.0028846892313178244	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9967159526281187	WITHOUT_CLASSIFICATION	0.0032840473718813265	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9970801300777364	WITHOUT_CLASSIFICATION	0.0029198699222635583	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9971440821007828	WITHOUT_CLASSIFICATION	0.0028559178992172674	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9960394858676653	WITHOUT_CLASSIFICATION	0.003960514132334614	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9973429556409051	WITHOUT_CLASSIFICATION	0.002657044359094859	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9966758808498025	WITHOUT_CLASSIFICATION	0.0033241191501975006	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9971942579682087	WITHOUT_CLASSIFICATION	0.002805742031791287	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9962799639045786	WITHOUT_CLASSIFICATION	0.003720036095421418	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999052969713921	WITHOUT_CLASSIFICATION	9.47030286079454E-5	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999328250809841	WITHOUT_CLASSIFICATION	6.717491901589186E-5	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999933572818371	WITHOUT_CLASSIFICATION	6.642718162909242E-6	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999982940835	WITHOUT_CLASSIFICATION	1.7059164999804325E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999395307854352	WITHOUT_CLASSIFICATION	6.046921456469284E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999395307854352	WITHOUT_CLASSIFICATION	6.046921456469284E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999395307854352	WITHOUT_CLASSIFICATION	6.046921456469284E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999395307854352	WITHOUT_CLASSIFICATION	6.046921456469284E-5	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9999991317040772	WITHOUT_CLASSIFICATION	8.682959228601651E-7	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999498402621783	WITHOUT_CLASSIFICATION	5.015973782177437E-5	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999998063426061	WITHOUT_CLASSIFICATION	1.9365739398587488E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999589449562111	WITHOUT_CLASSIFICATION	4.1055043788817975E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999589449562111	WITHOUT_CLASSIFICATION	4.1055043788817975E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999903273289195	WITHOUT_CLASSIFICATION	9.672671080609343E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999989656901074	WITHOUT_CLASSIFICATION	1.0343098927094814E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999989656901074	WITHOUT_CLASSIFICATION	1.0343098927094814E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.999919448257221	WITHOUT_CLASSIFICATION	8.055174277905321E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.999919448257221	WITHOUT_CLASSIFICATION	8.055174277905321E-5	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999765457144655	WITHOUT_CLASSIFICATION	2.3454285534512202E-5	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999799808119956	WITHOUT_CLASSIFICATION	2.001918800436178E-5	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999880337507178	WITHOUT_CLASSIFICATION	1.196624928237377E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999758132265736	WITHOUT_CLASSIFICATION	2.418677342637029E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999693928555102	WITHOUT_CLASSIFICATION	3.0607144489768566E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999909758466509	WITHOUT_CLASSIFICATION	9.024153349202738E-6	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999981906434439	WITHOUT_CLASSIFICATION	1.8093565562438203E-6	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999965191639976	WITHOUT_CLASSIFICATION	3.4808360023710993E-6	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999994862625028	WITHOUT_CLASSIFICATION	5.137374971774374E-7	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999994862625028	WITHOUT_CLASSIFICATION	5.137374971774374E-7	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.999991312552263	WITHOUT_CLASSIFICATION	8.687447736985073E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999958714559013	WITHOUT_CLASSIFICATION	4.128544098763075E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999982247525595	WITHOUT_CLASSIFICATION	1.7752474405953455E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999987450405452	WITHOUT_CLASSIFICATION	1.254959454693798E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999709829747092	WITHOUT_CLASSIFICATION	2.9017025290826637E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999932036835518	WITHOUT_CLASSIFICATION	6.796316448164408E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999932036835518	WITHOUT_CLASSIFICATION	6.796316448164408E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999932036835518	WITHOUT_CLASSIFICATION	6.796316448164408E-6	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999986357509657	WITHOUT_CLASSIFICATION	1.3642490342304544E-6	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999986357509657	WITHOUT_CLASSIFICATION	1.3642490342304544E-6	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999989725123534	WITHOUT_CLASSIFICATION	1.0274876466397252E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999992321011264	WITHOUT_CLASSIFICATION	7.67898873528413E-7	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999992321011264	WITHOUT_CLASSIFICATION	7.67898873528413E-7	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999985546891887	WITHOUT_CLASSIFICATION	1.4453108112958742E-6	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999994831877965	WITHOUT_CLASSIFICATION	5.168122034268617E-7	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876718180872	WITHOUT_CLASSIFICATION	1.2328181912694641E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999880498171314	WITHOUT_CLASSIFICATION	1.1950182868577102E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999881814912811	WITHOUT_CLASSIFICATION	1.1818508718866456E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999881814912811	WITHOUT_CLASSIFICATION	1.1818508718866456E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999878597013658	WITHOUT_CLASSIFICATION	1.2140298634175735E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999987310740713	WITHOUT_CLASSIFICATION	1.2689259286908587E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999870648970622	WITHOUT_CLASSIFICATION	1.293510293788564E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999881899339561	WITHOUT_CLASSIFICATION	1.1810066043968409E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892930136894	WITHOUT_CLASSIFICATION	1.070698631059518E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892891973426	WITHOUT_CLASSIFICATION	1.0710802657340801E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880806601696	WITHOUT_CLASSIFICATION	1.1919339830399187E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880806601696	WITHOUT_CLASSIFICATION	1.1919339830399187E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880806601696	WITHOUT_CLASSIFICATION	1.1919339830399187E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999988431339715	WITHOUT_CLASSIFICATION	1.1568660284899112E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876064666153	WITHOUT_CLASSIFICATION	1.2393533384733047E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999856482827789	WITHOUT_CLASSIFICATION	1.4351717221091487E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999856482827789	WITHOUT_CLASSIFICATION	1.4351717221091487E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9998561345150961	WITHOUT_CLASSIFICATION	1.438654849037788E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988545773373	WITHOUT_CLASSIFICATION	1.1454226627044065E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999867495277998	WITHOUT_CLASSIFICATION	1.3250472200268755E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999872480486649	WITHOUT_CLASSIFICATION	1.2751951335039342E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999868581893305	WITHOUT_CLASSIFICATION	1.3141810669533987E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999957513636255	WITHOUT_CLASSIFICATION	4.248636374496639E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999986766009342	WITHOUT_CLASSIFICATION	1.3233990658091352E-6	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999978385176719	WITHOUT_CLASSIFICATION	2.1614823281022198E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999943219488476	WITHOUT_CLASSIFICATION	5.67805115239195E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999947281751939	WITHOUT_CLASSIFICATION	5.271824806127009E-6	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999983978931734	WITHOUT_CLASSIFICATION	1.602106826678474E-6	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999768972456984	WITHOUT_CLASSIFICATION	2.310275430162959E-5	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999921835589882	WITHOUT_CLASSIFICATION	7.816441011748412E-6	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999065595082623	WITHOUT_CLASSIFICATION	9.344049173758117E-5	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9996279961517289	WITHOUT_CLASSIFICATION	3.72003848271005E-4	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999720876158856	WITHOUT_CLASSIFICATION	2.7912384114342892E-5	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999906010064378	WITHOUT_CLASSIFICATION	9.398993562243786E-6	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999597730397741	WITHOUT_CLASSIFICATION	4.0226960225790005E-5	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999991138336622	WITHOUT_CLASSIFICATION	8.86166337776267E-7	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999948389575245	WITHOUT_CLASSIFICATION	5.161042475499523E-6	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9996369955348023	WITHOUT_CLASSIFICATION	3.630044651976323E-4	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999882200694136	WITHOUT_CLASSIFICATION	1.1779930586497098E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999981187493543	WITHOUT_CLASSIFICATION	1.8812506456392383E-6	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999879528507143	WITHOUT_CLASSIFICATION	1.2047149285611035E-5	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999981142389373	WITHOUT_CLASSIFICATION	1.885761062842658E-6	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999878039776564	WITHOUT_CLASSIFICATION	1.2196022343576684E-5	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999991467648611	WITHOUT_CLASSIFICATION	8.532351388272607E-7	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9998385274331473	WITHOUT_CLASSIFICATION	1.6147256685270615E-4	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9998451325452936	WITHOUT_CLASSIFICATION	1.5486745470642336E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9998779283540106	WITHOUT_CLASSIFICATION	1.220716459894652E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999989092213665	WITHOUT_CLASSIFICATION	1.0907786335091086E-6	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998973810766352	WITHOUT_CLASSIFICATION	1.0261892336485962E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999279448571	WITHOUT_CLASSIFICATION	7.205514289767002E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999730796565695	WITHOUT_CLASSIFICATION	2.6920343430467373E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999957089319609	WITHOUT_CLASSIFICATION	4.29106803903943E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9998803271713276	WITHOUT_CLASSIFICATION	1.196728286723579E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999931791116363	WITHOUT_CLASSIFICATION	6.820888363633913E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999903823296814	WITHOUT_CLASSIFICATION	9.617670318581003E-6	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999917944233441	WITHOUT_CLASSIFICATION	8.205576655854285E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9998299644065272	WITHOUT_CLASSIFICATION	1.7003559347282955E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999873408303745	WITHOUT_CLASSIFICATION	1.265916962544645E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988677289638	WITHOUT_CLASSIFICATION	1.1322710360811687E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999860978174452	WITHOUT_CLASSIFICATION	1.3902182554906296E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999832198146966	WITHOUT_CLASSIFICATION	1.678018530346352E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999820059353567	WITHOUT_CLASSIFICATION	1.79940646432828E-5	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9996476859723307	WITHOUT_CLASSIFICATION	3.523140276693223E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999677534011796	WITHOUT_CLASSIFICATION	3.224659882040946E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.999998033780878	WITHOUT_CLASSIFICATION	1.966219121906692E-6	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.999994315868511	WITHOUT_CLASSIFICATION	5.684131489053694E-6	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999988775736197	WITHOUT_CLASSIFICATION	1.1224263803744515E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999943768251954	WITHOUT_CLASSIFICATION	5.6231748045149404E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999582829545138	WITHOUT_CLASSIFICATION	4.171704548610662E-5	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999961092365693	WITHOUT_CLASSIFICATION	3.890763430658781E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999582829545138	WITHOUT_CLASSIFICATION	4.171704548610662E-5	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.999955565921639	WITHOUT_CLASSIFICATION	4.44340783609948E-5	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999988798083917	WITHOUT_CLASSIFICATION	1.1201916082044125E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.999993591542765	WITHOUT_CLASSIFICATION	6.408457234972294E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999973619427872	WITHOUT_CLASSIFICATION	2.63805721278604E-6	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999937578992023	WITHOUT_CLASSIFICATION	6.242100797698091E-6	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999806982949012	WITHOUT_CLASSIFICATION	1.9301705098747852E-5	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.999989718458525	WITHOUT_CLASSIFICATION	1.02815414749117E-5	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9998072329445141	WITHOUT_CLASSIFICATION	1.927670554858889E-4	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999983978931734	WITHOUT_CLASSIFICATION	1.602106826678474E-6	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9995752615908122	WITHOUT_CLASSIFICATION	4.2473840918772583E-4	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.999681951687554	WITHOUT_CLASSIFICATION	3.180483124460502E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999986153194041	WITHOUT_CLASSIFICATION	1.3846805959158373E-6	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999975621128108	WITHOUT_CLASSIFICATION	2.437887189281228E-6	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9998438376401104	WITHOUT_CLASSIFICATION	1.5616235988970135E-4	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998418875053432	WITHOUT_CLASSIFICATION	1.5811249465675254E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9996419404924378	WITHOUT_CLASSIFICATION	3.5805950756213857E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999661779060243	WITHOUT_CLASSIFICATION	3.382209397574562E-5	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999922412564923	WITHOUT_CLASSIFICATION	7.758743507670281E-6	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999983871968045	WITHOUT_CLASSIFICATION	1.612803195591403E-6	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999992359279213	WITHOUT_CLASSIFICATION	7.640720787106812E-7	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999998076835537	WITHOUT_CLASSIFICATION	1.9231644639337834E-7	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.999982047037709	WITHOUT_CLASSIFICATION	1.7952962291065337E-5	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999818254853645	WITHOUT_CLASSIFICATION	1.817451463550457E-5	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999876071235914	WITHOUT_CLASSIFICATION	1.239287640868347E-5	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999871074830818	WITHOUT_CLASSIFICATION	1.2892516918023842E-5	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.999993345827473	WITHOUT_CLASSIFICATION	6.654172527018215E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9988641683830092	WITHOUT_CLASSIFICATION	0.00113583161699078	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9988641683830092	WITHOUT_CLASSIFICATION	0.00113583161699078	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9997792951388914	WITHOUT_CLASSIFICATION	2.2070486110849598E-4	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.999990348225878	WITHOUT_CLASSIFICATION	9.651774122121246E-6	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9999959339656354	WITHOUT_CLASSIFICATION	4.066034364563371E-6	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999968128943937	WITHOUT_CLASSIFICATION	3.1871056063625358E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999729903075453	WITHOUT_CLASSIFICATION	2.7009692454814617E-5	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9993859719470025	WITHOUT_CLASSIFICATION	6.140280529974575E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9939540886178106	WITHOUT_CLASSIFICATION	0.006045911382189256	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999879367535833	WITHOUT_CLASSIFICATION	1.2063246416599029E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999603897248802	WITHOUT_CLASSIFICATION	3.961027511987637E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999968651232951	WITHOUT_CLASSIFICATION	3.1348767049026474E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9974381571857358	WITHOUT_CLASSIFICATION	0.002561842814264187	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9998218555981017	WITHOUT_CLASSIFICATION	1.7814440189836754E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9995287091908509	WITHOUT_CLASSIFICATION	4.7129080914909985E-4	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9997612805958885	WITHOUT_CLASSIFICATION	2.3871940411150143E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999978990482071	WITHOUT_CLASSIFICATION	2.1009517929016778E-5	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9995649257497426	WITHOUT_CLASSIFICATION	4.35074250257398E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999803590191323	WITHOUT_CLASSIFICATION	1.964098086770754E-5	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999251822247494	WITHOUT_CLASSIFICATION	7.48177752506899E-5	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999607057169836	WITHOUT_CLASSIFICATION	3.929428301632808E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999729903075453	WITHOUT_CLASSIFICATION	2.7009692454814617E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999803590191323	WITHOUT_CLASSIFICATION	1.964098086770754E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999879367535833	WITHOUT_CLASSIFICATION	1.2063246416599029E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999603897248802	WITHOUT_CLASSIFICATION	3.961027511987637E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999756143207466	WITHOUT_CLASSIFICATION	2.4385679253549804E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999258790041249	WITHOUT_CLASSIFICATION	7.412099587515036E-5	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999680468807605	WITHOUT_CLASSIFICATION	3.195311923955498E-5	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999441199326534	WITHOUT_CLASSIFICATION	5.588006734654029E-5	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998590775079917	WITHOUT_CLASSIFICATION	1.409224920082014E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9983336342378122	WITHOUT_CLASSIFICATION	0.0016663657621878054	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9983336342378122	WITHOUT_CLASSIFICATION	0.0016663657621878054	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9998043491086545	WITHOUT_CLASSIFICATION	1.95650891345652E-4	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999875871030228	WITHOUT_CLASSIFICATION	1.2412896977208652E-4	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999042106159222	WITHOUT_CLASSIFICATION	9.578938407790648E-5	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999912822242071	WITHOUT_CLASSIFICATION	8.717775792899764E-5	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996807237364924	WITHOUT_CLASSIFICATION	3.1927626350766654E-4	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9998860290188321	WITHOUT_CLASSIFICATION	1.1397098116799151E-4	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997068467556492	WITHOUT_CLASSIFICATION	2.931532443507737E-4	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999199566017714	WITHOUT_CLASSIFICATION	8.004339822861669E-5	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999032756579681	WITHOUT_CLASSIFICATION	9.672434203181822E-5	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997512013730887	WITHOUT_CLASSIFICATION	2.4879862691124725E-4	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999320695040514	WITHOUT_CLASSIFICATION	6.793049594861037E-5	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998754987026565	WITHOUT_CLASSIFICATION	1.2450129734348065E-4	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9998492325665822	WITHOUT_CLASSIFICATION	1.5076743341785792E-4	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999585051657537	WITHOUT_CLASSIFICATION	4.149483424630528E-4	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998866912854163	WITHOUT_CLASSIFICATION	1.1330871458367379E-4	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9998935772834449	WITHOUT_CLASSIFICATION	1.0642271655525051E-4	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999719614117514	WITHOUT_CLASSIFICATION	2.8038588248611133E-4	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999247114174391	WITHOUT_CLASSIFICATION	7.528858256090112E-5	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998848744737239	WITHOUT_CLASSIFICATION	1.1512552627607088E-4	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9998543510583819	WITHOUT_CLASSIFICATION	1.4564894161808994E-4	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996162916182071	WITHOUT_CLASSIFICATION	3.837083817929206E-4	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998952242693047	WITHOUT_CLASSIFICATION	1.0477573069526163E-4	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998978067645106	WITHOUT_CLASSIFICATION	1.0219323548952285E-4	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9998675728304803	WITHOUT_CLASSIFICATION	1.3242716951972647E-4	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996593841043172	WITHOUT_CLASSIFICATION	3.406158956827711E-4	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999069940540823	WITHOUT_CLASSIFICATION	9.300594591760376E-5	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999391914418231	WITHOUT_CLASSIFICATION	6.080855817679146E-5	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9998945453645439	WITHOUT_CLASSIFICATION	1.05454635456068E-4	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999082356301809	WITHOUT_CLASSIFICATION	9.176436981899345E-5	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998149204532178	WITHOUT_CLASSIFICATION	1.8507954678215546E-4	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9996827534093339	WITHOUT_CLASSIFICATION	3.1724659066606687E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998345992676462	WITHOUT_CLASSIFICATION	1.654007323537751E-4	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9998696205577472	WITHOUT_CLASSIFICATION	1.3037944225272638E-4	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996411515052068	WITHOUT_CLASSIFICATION	3.588484947931496E-4	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999020143022194	WITHOUT_CLASSIFICATION	9.798569778063784E-5	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999841640935678	WITHOUT_CLASSIFICATION	1.5835906432203078E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.99956416345669	WITHOUT_CLASSIFICATION	4.358365433100043E-4	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998809855983896	WITHOUT_CLASSIFICATION	1.1901440161039081E-4	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9998470171207618	WITHOUT_CLASSIFICATION	1.5298287923804494E-4	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995969753804329	WITHOUT_CLASSIFICATION	4.030246195671948E-4	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998899482154003	WITHOUT_CLASSIFICATION	1.100517845997352E-4	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9998609045630739	WITHOUT_CLASSIFICATION	1.3909543692611944E-4	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996171679762937	WITHOUT_CLASSIFICATION	3.8283202370623153E-4	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999611335488171	WITHOUT_CLASSIFICATION	3.886645118293634E-5	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9998892351277109	WITHOUT_CLASSIFICATION	1.1076487228912403E-4	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998967891601409	WITHOUT_CLASSIFICATION	1.0321083985915795E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999718228233068	WITHOUT_CLASSIFICATION	2.817717669325847E-5	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999662189491061	WITHOUT_CLASSIFICATION	3.3781050893886464E-5	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999737221517294	WITHOUT_CLASSIFICATION	2.627784827054672E-5	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999964205522917	WITHOUT_CLASSIFICATION	3.5794477083201457E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999958741506704	WITHOUT_CLASSIFICATION	4.125849329580032E-6	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999931615174648	WITHOUT_CLASSIFICATION	6.838482535272202E-6	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999991954251847	WITHOUT_CLASSIFICATION	8.045748153085045E-7	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999824381192323	WITHOUT_CLASSIFICATION	1.756188076777819E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999856482827789	WITHOUT_CLASSIFICATION	1.4351717221091487E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9998218555981017	WITHOUT_CLASSIFICATION	1.7814440189836754E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999930632991365	WITHOUT_CLASSIFICATION	6.93670086341964E-6	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999934628998827	WITHOUT_CLASSIFICATION	6.537100117298401E-6	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999635376924803	WITHOUT_CLASSIFICATION	3.6462307519839614E-5	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999164690146559	WITHOUT_CLASSIFICATION	8.353098534411057E-5	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999812911452569	WITHOUT_CLASSIFICATION	1.8708854743075568E-5	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9996756333442792	WITHOUT_CLASSIFICATION	3.243666557208168E-4	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999827063423191	WITHOUT_CLASSIFICATION	1.7293657680913848E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999992377395043	WITHOUT_CLASSIFICATION	7.622604957022557E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999992377395043	WITHOUT_CLASSIFICATION	7.622604957022557E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9974381571857358	WITHOUT_CLASSIFICATION	0.002561842814264187	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999058957696118	WITHOUT_CLASSIFICATION	9.410423038835013E-5	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999867830936849	WITHOUT_CLASSIFICATION	1.3216906315024493E-5	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999011365296799	WITHOUT_CLASSIFICATION	9.886347031999267E-5	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999061006914668	WITHOUT_CLASSIFICATION	9.389930853320554E-5	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999870364314325	WITHOUT_CLASSIFICATION	1.2963568567507378E-4	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998845581351474	WITHOUT_CLASSIFICATION	1.1544186485262511E-4	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999429185012284	WITHOUT_CLASSIFICATION	5.7081498771586266E-5	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999952650691134	WITHOUT_CLASSIFICATION	4.734930886574435E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999992377395043	WITHOUT_CLASSIFICATION	7.622604957022557E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999170080594084	WITHOUT_CLASSIFICATION	8.299194059159327E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999870194984491	WITHOUT_CLASSIFICATION	1.2980501550900634E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999701395324536	WITHOUT_CLASSIFICATION	2.986046754632706E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999798274654045	WITHOUT_CLASSIFICATION	2.0172534595422986E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999894824019621	WITHOUT_CLASSIFICATION	1.0517598038006033E-5	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999875336714882	WITHOUT_CLASSIFICATION	1.2466328511672188E-5	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.999998052958426	WITHOUT_CLASSIFICATION	1.9470415740550283E-6	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999911756883871	WITHOUT_CLASSIFICATION	8.824311612959222E-6	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999851060058191	WITHOUT_CLASSIFICATION	1.4893994180740138E-5	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999962666035358	WITHOUT_CLASSIFICATION	3.733396464149925E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9974381571857358	WITHOUT_CLASSIFICATION	0.002561842814264187	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999992377395043	WITHOUT_CLASSIFICATION	7.622604957022557E-6	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999701395324536	WITHOUT_CLASSIFICATION	2.986046754632706E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999798274654045	WITHOUT_CLASSIFICATION	2.0172534595422986E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999894824019621	WITHOUT_CLASSIFICATION	1.0517598038006033E-5	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999945848982434	WITHOUT_CLASSIFICATION	5.415101756489232E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.999926088488183	WITHOUT_CLASSIFICATION	7.391151181705435E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999747131502977	WITHOUT_CLASSIFICATION	2.5286849702286367E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999454905517757	WITHOUT_CLASSIFICATION	5.450944822423973E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999422735295269	WITHOUT_CLASSIFICATION	5.772647047310858E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999422735295269	WITHOUT_CLASSIFICATION	5.772647047310858E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999422735295269	WITHOUT_CLASSIFICATION	5.772647047310858E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999958647253004	WITHOUT_CLASSIFICATION	4.1352746995801064E-6	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999944146722848	WITHOUT_CLASSIFICATION	5.585327715134248E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999934250897551	WITHOUT_CLASSIFICATION	6.574910244892259E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999957541197037	WITHOUT_CLASSIFICATION	4.245880296297709E-6	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999828823495666	WITHOUT_CLASSIFICATION	1.7117650433442426E-5	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999975814200242	WITHOUT_CLASSIFICATION	2.4185799759426824E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999362619714974	WITHOUT_CLASSIFICATION	6.373802850257423E-5	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999756685873055	WITHOUT_CLASSIFICATION	2.433141269454152E-5	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.999998788132727	WITHOUT_CLASSIFICATION	1.2118672730230454E-6	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999993951700551	WITHOUT_CLASSIFICATION	6.04829944970539E-7	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999980435924218	WITHOUT_CLASSIFICATION	1.95640757812598E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999659949838786	WITHOUT_CLASSIFICATION	3.400501612142256E-5	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.999981375893386	WITHOUT_CLASSIFICATION	1.8624106614098805E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999925570761433	WITHOUT_CLASSIFICATION	7.442923856689229E-6	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999971922510704	WITHOUT_CLASSIFICATION	2.807748929622132E-6	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999917449638099	WITHOUT_CLASSIFICATION	8.255036190003547E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9999868351563387	WITHOUT_CLASSIFICATION	1.316484366144001E-5	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9999879578699711	WITHOUT_CLASSIFICATION	1.2042130028964539E-5	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999996212567164	WITHOUT_CLASSIFICATION	3.7874328351528917E-7	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999925139263067	WITHOUT_CLASSIFICATION	7.486073693327503E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.99999720896224	WITHOUT_CLASSIFICATION	2.7910377600829315E-6	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999992135392192	WITHOUT_CLASSIFICATION	7.864607807330884E-7	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999945998821174	WITHOUT_CLASSIFICATION	5.40011788268673E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999983052263604	WITHOUT_CLASSIFICATION	1.6947736397236398E-6	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999997112985873	WITHOUT_CLASSIFICATION	2.8870141264399203E-7	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999968248896017	WITHOUT_CLASSIFICATION	3.175110398136873E-6	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999996437209456	WITHOUT_CLASSIFICATION	3.5627905430824526E-7	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999994264618628	WITHOUT_CLASSIFICATION	5.73538137292634E-7	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999870974888005	WITHOUT_CLASSIFICATION	1.2902511199488247E-5	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999783168934565	WITHOUT_CLASSIFICATION	2.168310654344247E-5	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999982104336372	WITHOUT_CLASSIFICATION	1.7895663626885888E-6	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999974296918596	WITHOUT_CLASSIFICATION	2.5703081405550985E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999990215187797	WITHOUT_CLASSIFICATION	9.784812203393628E-7	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9999982753971352	WITHOUT_CLASSIFICATION	1.7246028648318401E-6	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.999999590739369	WITHOUT_CLASSIFICATION	4.0926063102359793E-7	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999471491236658	WITHOUT_CLASSIFICATION	5.285087633416307E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999981187493543	WITHOUT_CLASSIFICATION	1.8812506456392383E-6	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999752019726161	WITHOUT_CLASSIFICATION	2.4798027383951408E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999998165567507	WITHOUT_CLASSIFICATION	1.8344324927367151E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999961528959203	WITHOUT_CLASSIFICATION	3.847104079820084E-6	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.999996907785649	WITHOUT_CLASSIFICATION	3.0922143509527164E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892801179656	WITHOUT_CLASSIFICATION	1.0719882034372425E-5	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999989959755863	WITHOUT_CLASSIFICATION	1.0040244137161003E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892801179656	WITHOUT_CLASSIFICATION	1.0719882034372425E-5	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999988416425871	WITHOUT_CLASSIFICATION	1.1583574128883663E-6	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999611056529898	WITHOUT_CLASSIFICATION	3.8894347010298294E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9983565116906085	WITHOUT_CLASSIFICATION	0.0016434883093915558	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.999998130012708	WITHOUT_CLASSIFICATION	1.8699872919354573E-6	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999494367445335	WITHOUT_CLASSIFICATION	5.056325546644605E-5	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999979345543502	WITHOUT_CLASSIFICATION	2.0654456498253905E-6	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999948833206629	WITHOUT_CLASSIFICATION	5.11667933717762E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999790187434354	WITHOUT_CLASSIFICATION	2.0981256564615295E-5	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999943398164328	WITHOUT_CLASSIFICATION	5.66018356726429E-6	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999985698566742	WITHOUT_CLASSIFICATION	1.4301433257431547E-6	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999924033255391	WITHOUT_CLASSIFICATION	7.59667446095905E-6	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999992228967918	WITHOUT_CLASSIFICATION	7.771032082112056E-7	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999997111482176	WITHOUT_CLASSIFICATION	2.8885178235335414E-7	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999987128439811	WITHOUT_CLASSIFICATION	1.2871560188462213E-6	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999992098131972	WITHOUT_CLASSIFICATION	7.901868027625555E-7	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999723614207991	WITHOUT_CLASSIFICATION	2.7638579200778497E-5	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.999999729796168	WITHOUT_CLASSIFICATION	2.7020383191056793E-7	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999753536058089	WITHOUT_CLASSIFICATION	2.464639419108363E-5	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999848906652716	WITHOUT_CLASSIFICATION	1.5109334728330412E-5	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999923209146373	WITHOUT_CLASSIFICATION	7.67908536275604E-6	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999908494286809	WITHOUT_CLASSIFICATION	9.150571319139711E-6	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999630538525095	WITHOUT_CLASSIFICATION	3.694614749051846E-5	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999919978774111	WITHOUT_CLASSIFICATION	8.002122588811256E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999970963242549	WITHOUT_CLASSIFICATION	2.9036757451241643E-6	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999972351370078	WITHOUT_CLASSIFICATION	2.764862992276506E-6	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999376090616712	WITHOUT_CLASSIFICATION	6.239093832881981E-5	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999996959248992	WITHOUT_CLASSIFICATION	3.0407510086332453E-7	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999992903249345	WITHOUT_CLASSIFICATION	7.096750654770258E-7	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999995594665254	WITHOUT_CLASSIFICATION	4.405334746644499E-7	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999995286113352	WITHOUT_CLASSIFICATION	4.7138866476791315E-7	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999994812437784	WITHOUT_CLASSIFICATION	5.18756221644222E-7	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999571874268307	WITHOUT_CLASSIFICATION	4.281257316929793E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999991891740013	WITHOUT_CLASSIFICATION	8.108259986008214E-7	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999995378159127	WITHOUT_CLASSIFICATION	4.6218408735830963E-7	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999951806083237	WITHOUT_CLASSIFICATION	4.819391676228958E-6	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999974804743437	WITHOUT_CLASSIFICATION	2.51952565628253E-6	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999929803178342	WITHOUT_CLASSIFICATION	7.0196821658132705E-6	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999990274113394	WITHOUT_CLASSIFICATION	9.72588660617695E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999961528959203	WITHOUT_CLASSIFICATION	3.847104079820084E-6	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999990294830545	WITHOUT_CLASSIFICATION	9.705169455248318E-7	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999902108520222	WITHOUT_CLASSIFICATION	9.789147977828612E-6	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999957775821083	WITHOUT_CLASSIFICATION	4.222417891693874E-6	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999958035930087	WITHOUT_CLASSIFICATION	4.196406991317868E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999989959755863	WITHOUT_CLASSIFICATION	1.0040244137161003E-6	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999984172434647	WITHOUT_CLASSIFICATION	1.582756535262462E-6	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999955605360434	WITHOUT_CLASSIFICATION	4.439463956543569E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999940747034931	WITHOUT_CLASSIFICATION	5.925296506861305E-6	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.999975064564666	WITHOUT_CLASSIFICATION	2.493543533397635E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9998386881878661	WITHOUT_CLASSIFICATION	1.613118121337556E-4	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999162891040462	WITHOUT_CLASSIFICATION	8.371089595391603E-5	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999944676141169	WITHOUT_CLASSIFICATION	5.532385883085187E-6	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999437218363066	WITHOUT_CLASSIFICATION	5.627816369343218E-5	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999940467485741	WITHOUT_CLASSIFICATION	5.9532514259983254E-6	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9999872726770052	WITHOUT_CLASSIFICATION	1.2727322994873745E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999879528507143	WITHOUT_CLASSIFICATION	1.2047149285611035E-5	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999939510375215	WITHOUT_CLASSIFICATION	6.0489624784603985E-6	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999992113779075	WITHOUT_CLASSIFICATION	7.886220924288985E-7	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.99999923827332	WITHOUT_CLASSIFICATION	7.617266799127476E-7	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999857599022614	WITHOUT_CLASSIFICATION	1.4240097738642035E-5	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999988136331207	WITHOUT_CLASSIFICATION	1.1863668793806924E-6	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999989590245685	WITHOUT_CLASSIFICATION	1.0409754315326488E-6	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999942601569158	WITHOUT_CLASSIFICATION	5.739843084077068E-6	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.999993939186816	WITHOUT_CLASSIFICATION	6.060813184089641E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999972596493372	WITHOUT_CLASSIFICATION	2.740350662874689E-6	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999819732463394	WITHOUT_CLASSIFICATION	1.8026753660622076E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.999993939186816	WITHOUT_CLASSIFICATION	6.060813184089641E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999989064465892	WITHOUT_CLASSIFICATION	1.0935534108149355E-6	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999483599197303	WITHOUT_CLASSIFICATION	5.164008026964498E-5	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999907386413287	WITHOUT_CLASSIFICATION	9.261358671271743E-6	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999849100182878	WITHOUT_CLASSIFICATION	1.5089981712183223E-5	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999991507004857	WITHOUT_CLASSIFICATION	8.492995141911478E-7	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999860046261835	WITHOUT_CLASSIFICATION	1.3995373816435455E-5	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999933894201644	WITHOUT_CLASSIFICATION	6.6105798357171986E-6	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999994178775428	WITHOUT_CLASSIFICATION	5.821224571994703E-7	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999941075969486	WITHOUT_CLASSIFICATION	5.892403051302859E-6	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999943733166525	WITHOUT_CLASSIFICATION	5.626683347459821E-6	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999324492112686	WITHOUT_CLASSIFICATION	6.75507887313673E-5	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9998538520987685	WITHOUT_CLASSIFICATION	1.4614790123140847E-4	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999910125905915	WITHOUT_CLASSIFICATION	8.987409408500164E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999974256232024	WITHOUT_CLASSIFICATION	2.5743767975118903E-6	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999989846833908	WITHOUT_CLASSIFICATION	1.0153166092850946E-6	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999992430602881	WITHOUT_CLASSIFICATION	7.569397118503172E-7	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.999985074330155	WITHOUT_CLASSIFICATION	1.492566984489646E-5	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999981232772659	WITHOUT_CLASSIFICATION	1.8767227339849667E-6	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999704453290633	WITHOUT_CLASSIFICATION	2.955467093665634E-5	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9998846081225257	WITHOUT_CLASSIFICATION	1.1539187747442388E-4	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999932423955022	WITHOUT_CLASSIFICATION	6.757604497714602E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999856482827789	WITHOUT_CLASSIFICATION	1.4351717221091487E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999856482827789	WITHOUT_CLASSIFICATION	1.4351717221091487E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.999993591542765	WITHOUT_CLASSIFICATION	6.408457234972294E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999992377395043	WITHOUT_CLASSIFICATION	7.622604957022557E-6	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999989009258076	WITHOUT_CLASSIFICATION	1.0990741924220265E-6	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999987552299394	WITHOUT_CLASSIFICATION	1.2447700604763545E-6	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999987552299394	WITHOUT_CLASSIFICATION	1.2447700604763545E-6	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999989337482689	WITHOUT_CLASSIFICATION	1.0662517311373028E-6	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999956748238497	WITHOUT_CLASSIFICATION	4.3251761504084865E-6	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999919777324264	WITHOUT_CLASSIFICATION	8.02226757354779E-6	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999990132431561	WITHOUT_CLASSIFICATION	9.867568439166502E-7	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9997608067163583	WITHOUT_CLASSIFICATION	2.391932836416504E-4	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999977019786629	WITHOUT_CLASSIFICATION	2.298021337152236E-6	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9998970976625874	WITHOUT_CLASSIFICATION	1.0290233741260912E-4	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999905170733575	WITHOUT_CLASSIFICATION	9.48292664253614E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999772140778833	WITHOUT_CLASSIFICATION	2.278592211669518E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999772140778833	WITHOUT_CLASSIFICATION	2.278592211669518E-5	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999852626235622	WITHOUT_CLASSIFICATION	1.4737376437847004E-5	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999852626235622	WITHOUT_CLASSIFICATION	1.4737376437847004E-5	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999949698612294	WITHOUT_CLASSIFICATION	5.03013877056726E-6	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999939664863771	WITHOUT_CLASSIFICATION	6.033513622878385E-6	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999978007849475	WITHOUT_CLASSIFICATION	2.19921505253558E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.999990583944229	WITHOUT_CLASSIFICATION	9.416055770989532E-6	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9998529137154548	WITHOUT_CLASSIFICATION	1.4708628454517501E-4	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999959011394088	WITHOUT_CLASSIFICATION	4.09886059120982E-6	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999510497763773	WITHOUT_CLASSIFICATION	4.895022362273678E-5	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999781240309296	WITHOUT_CLASSIFICATION	2.1875969070450523E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999990893376038	WITHOUT_CLASSIFICATION	9.10662396232796E-7	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999790743557117	WITHOUT_CLASSIFICATION	2.0925644288440213E-5	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999993430105895	WITHOUT_CLASSIFICATION	6.569894106135893E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999958938402864	WITHOUT_CLASSIFICATION	4.106159713571287E-6	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999958938402864	WITHOUT_CLASSIFICATION	4.106159713571287E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9995053927294477	WITHOUT_CLASSIFICATION	4.946072705522556E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9995053927294477	WITHOUT_CLASSIFICATION	4.946072705522556E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999908810185298	WITHOUT_CLASSIFICATION	9.118981470235392E-6	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9999969326710643	WITHOUT_CLASSIFICATION	3.067328935746843E-6	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9998547198569206	WITHOUT_CLASSIFICATION	1.4528014307941934E-4	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.999884822105399	WITHOUT_CLASSIFICATION	1.151778946009801E-4	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999903792820655	WITHOUT_CLASSIFICATION	9.620717934638281E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999912452138982	WITHOUT_CLASSIFICATION	8.754786101887724E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999969780396101	WITHOUT_CLASSIFICATION	3.0219603898444747E-6	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999745520716337	WITHOUT_CLASSIFICATION	2.5447928366314452E-5	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999745520716337	WITHOUT_CLASSIFICATION	2.5447928366314452E-5	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999765217593791	WITHOUT_CLASSIFICATION	2.3478240620880532E-5	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999765217593791	WITHOUT_CLASSIFICATION	2.3478240620880532E-5	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999534057284766	WITHOUT_CLASSIFICATION	4.659427152336743E-5	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999945662420244	WITHOUT_CLASSIFICATION	5.433757975556309E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999715852788653	WITHOUT_CLASSIFICATION	2.84147211347987E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999715852788653	WITHOUT_CLASSIFICATION	2.84147211347987E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999715852788653	WITHOUT_CLASSIFICATION	2.84147211347987E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999993914691371	WITHOUT_CLASSIFICATION	6.085308628273987E-7	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999973740321471	WITHOUT_CLASSIFICATION	2.6259678529083312E-6	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999576737641966	WITHOUT_CLASSIFICATION	4.23262358033542E-5	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999829534413825	WITHOUT_CLASSIFICATION	1.7046558617399414E-5	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.999984070736953	WITHOUT_CLASSIFICATION	1.592926304710405E-5	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999598406657201	WITHOUT_CLASSIFICATION	4.015933427993562E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999958779862398	WITHOUT_CLASSIFICATION	4.12201376023919E-6	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999981994433156	WITHOUT_CLASSIFICATION	1.800556684385897E-6	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999976737226978	WITHOUT_CLASSIFICATION	2.3262773023310947E-6	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999994337631444	WITHOUT_CLASSIFICATION	5.662368556360149E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999989112345284	WITHOUT_CLASSIFICATION	1.0887654715826401E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999965799089793	WITHOUT_CLASSIFICATION	3.420091020826467E-6	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999763900171734	WITHOUT_CLASSIFICATION	2.360998282654936E-5	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999907323949623	WITHOUT_CLASSIFICATION	9.267605037687723E-6	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999988666728424	WITHOUT_CLASSIFICATION	1.1333271575148567E-6	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.999998987409288	WITHOUT_CLASSIFICATION	1.012590712023901E-6	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999971912108441	WITHOUT_CLASSIFICATION	2.8087891559111104E-6	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999989431451977	WITHOUT_CLASSIFICATION	1.0568548022924849E-6	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999910720142674	WITHOUT_CLASSIFICATION	8.927985732638263E-6	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.999999228065559	WITHOUT_CLASSIFICATION	7.719344409544951E-7	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999991441493986	WITHOUT_CLASSIFICATION	8.558506014678155E-7	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999650082742452	WITHOUT_CLASSIFICATION	3.4991725754856905E-5	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999752684468247	WITHOUT_CLASSIFICATION	2.4731553175225655E-5	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999767967935528	WITHOUT_CLASSIFICATION	2.3203206447287008E-5	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.999990279277745	WITHOUT_CLASSIFICATION	9.720722255049271E-6	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9996299942663547	WITHOUT_CLASSIFICATION	3.7000573364524814E-4	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999385939364469	WITHOUT_CLASSIFICATION	6.140606355300723E-5	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999949253388911	WITHOUT_CLASSIFICATION	5.0746611088914436E-6	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999255059554114	WITHOUT_CLASSIFICATION	7.449404458858002E-5	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.999907830681793	WITHOUT_CLASSIFICATION	9.216931820694702E-5	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.999999854566044	WITHOUT_CLASSIFICATION	1.4543395603991643E-7	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999866920577292	WITHOUT_CLASSIFICATION	1.3307942270869497E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.999987397226652	WITHOUT_CLASSIFICATION	1.260277334803411E-5	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999868494474462	WITHOUT_CLASSIFICATION	1.315055255382139E-5	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999857014990243	WITHOUT_CLASSIFICATION	1.4298500975621966E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.999995271984127	WITHOUT_CLASSIFICATION	4.7280158730586864E-6	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999827996000176	WITHOUT_CLASSIFICATION	1.7200399982428222E-5	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999715286852726	WITHOUT_CLASSIFICATION	2.8471314727419282E-5	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999581453297409	WITHOUT_CLASSIFICATION	4.185467025898242E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999961408552149	WITHOUT_CLASSIFICATION	3.859144785048034E-6	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999962976499203	WITHOUT_CLASSIFICATION	3.702350079745297E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999976043484942	WITHOUT_CLASSIFICATION	2.3956515057703917E-6	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9989296813356077	WITHOUT_CLASSIFICATION	0.0010703186643922927	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999987843692001	WITHOUT_CLASSIFICATION	1.2156307999899357E-6	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999948458019396	WITHOUT_CLASSIFICATION	5.154198060458682E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999988232130533	WITHOUT_CLASSIFICATION	1.1767869466670693E-6	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999966035399236	WITHOUT_CLASSIFICATION	3.3964600764503124E-6	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999962921624561	WITHOUT_CLASSIFICATION	3.707837544016492E-6	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999964832055401	WITHOUT_CLASSIFICATION	3.5167944599060214E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999834875215421	WITHOUT_CLASSIFICATION	1.6512478457901486E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999991119674718	WITHOUT_CLASSIFICATION	8.880325282733877E-7	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999997199471067	WITHOUT_CLASSIFICATION	2.800528933144442E-7	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999953649425487	WITHOUT_CLASSIFICATION	4.635057451308728E-6	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999973167350904	WITHOUT_CLASSIFICATION	2.6832649095383478E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999990935845828	WITHOUT_CLASSIFICATION	9.064154172096295E-7	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.999999356620972	WITHOUT_CLASSIFICATION	6.433790280720481E-7	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9989296813356077	WITHOUT_CLASSIFICATION	0.0010703186643922927	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9989296813356077	WITHOUT_CLASSIFICATION	0.0010703186643922927	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999955699044736	WITHOUT_CLASSIFICATION	4.430095526422759E-6	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999940214268045	WITHOUT_CLASSIFICATION	5.978573195459207E-6	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999951988053138	WITHOUT_CLASSIFICATION	4.801194686109311E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.999988352403193	WITHOUT_CLASSIFICATION	1.164759680704129E-5	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.999988352403193	WITHOUT_CLASSIFICATION	1.164759680704129E-5	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999978933483348	WITHOUT_CLASSIFICATION	2.106651665290063E-6	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999995833272752	WITHOUT_CLASSIFICATION	4.16672724680932E-7	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999975672659461	WITHOUT_CLASSIFICATION	2.4327340539028014E-6	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9999974675125988	WITHOUT_CLASSIFICATION	2.532487401176788E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999900946751139	WITHOUT_CLASSIFICATION	9.905324886094358E-6	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999914816917591	WITHOUT_CLASSIFICATION	8.518308240882063E-6	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999826216253308	WITHOUT_CLASSIFICATION	1.7378374669275828E-5	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999985835493341	WITHOUT_CLASSIFICATION	1.4164506658988004E-6	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999629581234416	WITHOUT_CLASSIFICATION	3.7041876558325314E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.999995945422976	WITHOUT_CLASSIFICATION	4.054577023972361E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999033194058387	WITHOUT_CLASSIFICATION	9.668059416128054E-5	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999968795856291	WITHOUT_CLASSIFICATION	3.120414370850538E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999900946751139	WITHOUT_CLASSIFICATION	9.905324886094358E-6	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999772140778833	WITHOUT_CLASSIFICATION	2.278592211669518E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999772140778833	WITHOUT_CLASSIFICATION	2.278592211669518E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9997755896782371	WITHOUT_CLASSIFICATION	2.2441032176297737E-4	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999916873033299	WITHOUT_CLASSIFICATION	8.312696670189376E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999941990265339	WITHOUT_CLASSIFICATION	5.800973466175175E-6	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999837530745497	WITHOUT_CLASSIFICATION	1.6246925450306744E-5	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9998962778575519	WITHOUT_CLASSIFICATION	1.0372214244815612E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999760996452857	WITHOUT_CLASSIFICATION	2.390035471438783E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999760996452857	WITHOUT_CLASSIFICATION	2.390035471438783E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999877851567258	WITHOUT_CLASSIFICATION	1.2214843274211812E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9996148568159251	WITHOUT_CLASSIFICATION	3.851431840747928E-4	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.999989068362412	WITHOUT_CLASSIFICATION	1.0931637588150693E-5	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9994550381101698	WITHOUT_CLASSIFICATION	5.449618898302718E-4	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9995760291106873	WITHOUT_CLASSIFICATION	4.2397088931268466E-4	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999807952789053	WITHOUT_CLASSIFICATION	1.9204721094749414E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999753592094203	WITHOUT_CLASSIFICATION	2.46407905797446E-5	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.999649272786766	WITHOUT_CLASSIFICATION	3.5072721323408816E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999279448571	WITHOUT_CLASSIFICATION	7.205514289767002E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999730796565695	WITHOUT_CLASSIFICATION	2.6920343430467373E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999957089319609	WITHOUT_CLASSIFICATION	4.29106803903943E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9998803271713276	WITHOUT_CLASSIFICATION	1.196728286723579E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999931791116363	WITHOUT_CLASSIFICATION	6.820888363633913E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999903823296814	WITHOUT_CLASSIFICATION	9.617670318581003E-6	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999917944233441	WITHOUT_CLASSIFICATION	8.205576655854285E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9998299644065272	WITHOUT_CLASSIFICATION	1.7003559347282955E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999989133719746	WITHOUT_CLASSIFICATION	1.0866280255410154E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999873408303745	WITHOUT_CLASSIFICATION	1.265916962544645E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988677289638	WITHOUT_CLASSIFICATION	1.1322710360811687E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999860978174452	WITHOUT_CLASSIFICATION	1.3902182554906296E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999832198146966	WITHOUT_CLASSIFICATION	1.678018530346352E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999820059353567	WITHOUT_CLASSIFICATION	1.79940646432828E-5	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999908679382783	WITHOUT_CLASSIFICATION	9.132061721576795E-6	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999798272688251	WITHOUT_CLASSIFICATION	2.0172731174876083E-5	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999816619360451	WITHOUT_CLASSIFICATION	1.8338063954985005E-5	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999913426978598	WITHOUT_CLASSIFICATION	8.657302140106288E-6	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9998334293141153	WITHOUT_CLASSIFICATION	1.6657068588455488E-4	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9997072305967606	WITHOUT_CLASSIFICATION	2.9276940323948864E-4	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999911995515193	WITHOUT_CLASSIFICATION	8.800448480756573E-6	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9998167102873883	WITHOUT_CLASSIFICATION	1.8328971261181073E-4	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.99989890023253	WITHOUT_CLASSIFICATION	1.0109976747005206E-4	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999068206996196	WITHOUT_CLASSIFICATION	9.317930038048155E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9998904392234066	WITHOUT_CLASSIFICATION	1.0956077659345114E-4	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9998904392234066	WITHOUT_CLASSIFICATION	1.0956077659345114E-4	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999094493215193	WITHOUT_CLASSIFICATION	9.05506784807244E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999986493301026	WITHOUT_CLASSIFICATION	1.3506698972652526E-6	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.999972686927493	WITHOUT_CLASSIFICATION	2.7313072506922122E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9998791799516047	WITHOUT_CLASSIFICATION	1.208200483953148E-4	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9998791799516047	WITHOUT_CLASSIFICATION	1.208200483953148E-4	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.999993385592518	WITHOUT_CLASSIFICATION	6.614407481955156E-6	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.999987469122987	WITHOUT_CLASSIFICATION	1.2530877012966878E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999898438675526	WITHOUT_CLASSIFICATION	1.0156132447371056E-5	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.999905126360769	WITHOUT_CLASSIFICATION	9.487363923091066E-5	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999035323903221	WITHOUT_CLASSIFICATION	9.646760967781764E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9998803271713276	WITHOUT_CLASSIFICATION	1.196728286723579E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999995019386219	WITHOUT_CLASSIFICATION	4.980613780970218E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999903823296814	WITHOUT_CLASSIFICATION	9.617670318581003E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9998299644065272	WITHOUT_CLASSIFICATION	1.7003559347282955E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988677289638	WITHOUT_CLASSIFICATION	1.1322710360811687E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999860978174452	WITHOUT_CLASSIFICATION	1.3902182554906296E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999942500002807	WITHOUT_CLASSIFICATION	5.749999719320975E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999820059353567	WITHOUT_CLASSIFICATION	1.79940646432828E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999978990482071	WITHOUT_CLASSIFICATION	2.1009517929016778E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9995053927294477	WITHOUT_CLASSIFICATION	4.946072705522556E-4	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9997825694576602	WITHOUT_CLASSIFICATION	2.1743054233977182E-4	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999098328182547	WITHOUT_CLASSIFICATION	9.016718174528346E-5	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999919344769116	WITHOUT_CLASSIFICATION	8.065523088489285E-6	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999059968507935	WITHOUT_CLASSIFICATION	9.40031492064988E-5	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9999252521271476	WITHOUT_CLASSIFICATION	7.47478728523977E-5	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.999989362677044	WITHOUT_CLASSIFICATION	1.0637322955996196E-5	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9996940960718463	WITHOUT_CLASSIFICATION	3.05903928153748E-4	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9998399757569566	WITHOUT_CLASSIFICATION	1.6002424304345882E-4	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999863340259103	WITHOUT_CLASSIFICATION	1.3665974089657174E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9998562365916679	WITHOUT_CLASSIFICATION	1.437634083321059E-4	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9998684591979677	WITHOUT_CLASSIFICATION	1.3154080203233289E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998449006111485	WITHOUT_CLASSIFICATION	1.5509938885154202E-4	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998281061358173	WITHOUT_CLASSIFICATION	1.7189386418270606E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999305050940296	WITHOUT_CLASSIFICATION	6.949490597046505E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999975148455982	WITHOUT_CLASSIFICATION	2.4851544017783284E-6	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9998298606352961	WITHOUT_CLASSIFICATION	1.7013936470397487E-4	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9997417414793273	WITHOUT_CLASSIFICATION	2.5825852067268507E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999976075410043	WITHOUT_CLASSIFICATION	2.3924589956530632E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999980543187456	WITHOUT_CLASSIFICATION	1.9456812543947587E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999980543187456	WITHOUT_CLASSIFICATION	1.9456812543947587E-6	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999961061121797	WITHOUT_CLASSIFICATION	3.893887820342954E-6	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9997544352423684	WITHOUT_CLASSIFICATION	2.4556475763161286E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999863506425475	WITHOUT_CLASSIFICATION	1.3649357452542669E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999863506425475	WITHOUT_CLASSIFICATION	1.3649357452542669E-5	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999910368381442	WITHOUT_CLASSIFICATION	8.963161855737621E-6	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999859067428986	WITHOUT_CLASSIFICATION	1.4093257101552127E-5	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999958950400922	WITHOUT_CLASSIFICATION	4.104959907683262E-6	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999910404738723	WITHOUT_CLASSIFICATION	8.959526127640302E-6	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999542403226279	WITHOUT_CLASSIFICATION	4.5759677371979634E-5	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999911718140013	WITHOUT_CLASSIFICATION	8.82818599872571E-6	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999660195055092	WITHOUT_CLASSIFICATION	3.398049449070005E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999897061389893	WITHOUT_CLASSIFICATION	1.0293861010611386E-5	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999795912589676	WITHOUT_CLASSIFICATION	2.0408741032324013E-5	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999960563713669	WITHOUT_CLASSIFICATION	3.943628633078107E-6	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998223635674024	WITHOUT_CLASSIFICATION	1.776364325976245E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999305050940296	WITHOUT_CLASSIFICATION	6.949490597046505E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9994000140475732	WITHOUT_CLASSIFICATION	5.999859524268922E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9974381571857358	WITHOUT_CLASSIFICATION	0.002561842814264187	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9998218555981017	WITHOUT_CLASSIFICATION	1.7814440189836754E-4	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999973632652389	WITHOUT_CLASSIFICATION	2.636734761113832E-6	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9999986522757893	WITHOUT_CLASSIFICATION	1.3477242107520155E-6	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999949780788847	WITHOUT_CLASSIFICATION	5.021921115206964E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999923667486124	WITHOUT_CLASSIFICATION	7.633251387692206E-6	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882703612127	WITHOUT_CLASSIFICATION	1.1729638787319807E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882703612127	WITHOUT_CLASSIFICATION	1.1729638787319807E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9998268244548429	WITHOUT_CLASSIFICATION	1.7317554515703667E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999770385361393	WITHOUT_CLASSIFICATION	2.2961463860717665E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999897061389893	WITHOUT_CLASSIFICATION	1.0293861010611386E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999897061389893	WITHOUT_CLASSIFICATION	1.0293861010611386E-5	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.999974003672802	WITHOUT_CLASSIFICATION	2.599632719808508E-5	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9999808151697405	WITHOUT_CLASSIFICATION	1.9184830259453424E-5	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999997094220703	WITHOUT_CLASSIFICATION	2.905779297231701E-7	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999989091094172	WITHOUT_CLASSIFICATION	1.0908905827162167E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.99999694079829	WITHOUT_CLASSIFICATION	3.0592017099813982E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999981059798303	WITHOUT_CLASSIFICATION	1.8940201696983774E-6	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999947190736237	WITHOUT_CLASSIFICATION	5.280926376328153E-6	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.999954228813557	WITHOUT_CLASSIFICATION	4.577118644309457E-5	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999957084111533	WITHOUT_CLASSIFICATION	4.291588846736776E-6	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9998343858345009	WITHOUT_CLASSIFICATION	1.6561416549910782E-4	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999942743109287	WITHOUT_CLASSIFICATION	5.7256890713005924E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999981703340548	WITHOUT_CLASSIFICATION	1.8296659451777148E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999981703340548	WITHOUT_CLASSIFICATION	1.8296659451777148E-6	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999840168143067	WITHOUT_CLASSIFICATION	1.598318569324051E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999019470178808	WITHOUT_CLASSIFICATION	9.805298211915582E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999019470178808	WITHOUT_CLASSIFICATION	9.805298211915582E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9998696833692148	WITHOUT_CLASSIFICATION	1.30316630785216E-4	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9998696833692148	WITHOUT_CLASSIFICATION	1.30316630785216E-4	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999983598940905	WITHOUT_CLASSIFICATION	1.6401059095634615E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999981302487099	WITHOUT_CLASSIFICATION	1.8697512901172029E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999981302487099	WITHOUT_CLASSIFICATION	1.8697512901172029E-6	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999982578805554	WITHOUT_CLASSIFICATION	1.742119444494555E-6	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999962919000632	WITHOUT_CLASSIFICATION	3.708099936799997E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999968651232951	WITHOUT_CLASSIFICATION	3.1348767049026474E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999484113173006	WITHOUT_CLASSIFICATION	5.158868269944325E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999967586327947	WITHOUT_CLASSIFICATION	3.2413672052642073E-6	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.999996166229133	WITHOUT_CLASSIFICATION	3.833770867018777E-6	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999981045621328	WITHOUT_CLASSIFICATION	1.8954378671420253E-6	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9995641276090106	WITHOUT_CLASSIFICATION	4.35872390989402E-4	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999997169958951	WITHOUT_CLASSIFICATION	2.830041049742646E-7	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999990464652813	WITHOUT_CLASSIFICATION	9.535347186961221E-7	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999976576768811	WITHOUT_CLASSIFICATION	2.342323118910681E-6	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999792473987107	WITHOUT_CLASSIFICATION	2.0752601289373866E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988365835201	WITHOUT_CLASSIFICATION	1.163416479908453E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999962919000632	WITHOUT_CLASSIFICATION	3.708099936799997E-6	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999998232635703	WITHOUT_CLASSIFICATION	1.7673642971093738E-7	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999977371728904	WITHOUT_CLASSIFICATION	2.262827109507697E-6	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999995091688701	WITHOUT_CLASSIFICATION	4.908311298294553E-7	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999949578862763	WITHOUT_CLASSIFICATION	5.042113723599169E-6	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999996348448184	WITHOUT_CLASSIFICATION	3.6515518168289126E-7	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999996266441652	WITHOUT_CLASSIFICATION	3.7335583478266483E-7	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999971949947096	WITHOUT_CLASSIFICATION	2.8050052903267618E-6	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999994033404452	WITHOUT_CLASSIFICATION	5.966595547263608E-7	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999978799360113	WITHOUT_CLASSIFICATION	2.120063988673463E-6	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999970270533872	WITHOUT_CLASSIFICATION	2.9729466128186743E-6	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999973827972022	WITHOUT_CLASSIFICATION	2.6172027977145087E-6	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.999998942346996	WITHOUT_CLASSIFICATION	1.057653003980053E-6	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999995642164586	WITHOUT_CLASSIFICATION	4.357835413247956E-7	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999986458039888	WITHOUT_CLASSIFICATION	1.3541960112832202E-6	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.999998850997391	WITHOUT_CLASSIFICATION	1.1490026089694881E-6	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999994602649436	WITHOUT_CLASSIFICATION	5.397350564547305E-7	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999927422463368	WITHOUT_CLASSIFICATION	7.257753663087301E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999988976416695	WITHOUT_CLASSIFICATION	1.102358330596457E-6	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999988970265363	WITHOUT_CLASSIFICATION	1.1029734636569999E-6	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999986066491762	WITHOUT_CLASSIFICATION	1.3933508239085725E-6	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999985314831411	WITHOUT_CLASSIFICATION	1.4685168589909711E-6	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999989479746798	WITHOUT_CLASSIFICATION	1.0520253201788766E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999917705266663	WITHOUT_CLASSIFICATION	8.229473333809138E-6	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999969201819182	WITHOUT_CLASSIFICATION	3.07981808188696E-6	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9999982161176091	WITHOUT_CLASSIFICATION	1.7838823909012209E-6	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999982249986329	WITHOUT_CLASSIFICATION	1.7750013671917877E-6	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.999992817025295	WITHOUT_CLASSIFICATION	7.182974705058337E-6	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999991863646249	WITHOUT_CLASSIFICATION	8.136353749524996E-7	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999995337172252	WITHOUT_CLASSIFICATION	4.6628277491602846E-7	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9999980631521617	WITHOUT_CLASSIFICATION	1.9368478382152784E-6	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999964360325431	WITHOUT_CLASSIFICATION	3.5639674570156613E-6	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.999999588833596	WITHOUT_CLASSIFICATION	4.1116640408566963E-7	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999997472304603	WITHOUT_CLASSIFICATION	2.527695397444443E-7	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.999999454350104	WITHOUT_CLASSIFICATION	5.456498960238219E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999993829036039	WITHOUT_CLASSIFICATION	6.170963961908996E-7	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999980621376868	WITHOUT_CLASSIFICATION	1.937862313214666E-6	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999998562970726	WITHOUT_CLASSIFICATION	1.437029274644027E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999969201819182	WITHOUT_CLASSIFICATION	3.07981808188696E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999959194114088	WITHOUT_CLASSIFICATION	4.080588591294766E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999991563382583	WITHOUT_CLASSIFICATION	8.436617417202481E-7	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999991563382583	WITHOUT_CLASSIFICATION	8.436617417202481E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999985803486016	WITHOUT_CLASSIFICATION	1.4196513983608318E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999985803486016	WITHOUT_CLASSIFICATION	1.4196513983608318E-6	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9999984859128829	WITHOUT_CLASSIFICATION	1.5140871171718276E-6	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999731814239785	WITHOUT_CLASSIFICATION	2.6818576021475072E-5	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999974529998327	WITHOUT_CLASSIFICATION	2.5470001673632393E-6	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999933885279221	WITHOUT_CLASSIFICATION	6.611472077997091E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999994216519389	WITHOUT_CLASSIFICATION	5.783480611555299E-7	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999518523304323	WITHOUT_CLASSIFICATION	4.8147669567616167E-5	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999909316306427	WITHOUT_CLASSIFICATION	9.068369357409672E-6	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999997231083451	WITHOUT_CLASSIFICATION	2.7689165502252177E-7	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999937939001761	WITHOUT_CLASSIFICATION	6.206099823931173E-6	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999928364122416	WITHOUT_CLASSIFICATION	7.163587758486246E-6	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9996118023442214	WITHOUT_CLASSIFICATION	3.881976557785522E-4	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999304268436058	WITHOUT_CLASSIFICATION	6.95731563942089E-5	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.999985752627339	WITHOUT_CLASSIFICATION	1.4247372660977614E-5	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9998978318312467	WITHOUT_CLASSIFICATION	1.021681687533045E-4	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999705163470518	WITHOUT_CLASSIFICATION	2.9483652948235155E-5	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999956793317933	WITHOUT_CLASSIFICATION	4.3206682066309795E-6	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.999997022506468	WITHOUT_CLASSIFICATION	2.9774935318508025E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999973632652389	WITHOUT_CLASSIFICATION	2.636734761113832E-6	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999933641896032	WITHOUT_CLASSIFICATION	6.635810396813123E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999995156035264	WITHOUT_CLASSIFICATION	4.843964736477081E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999978990482071	WITHOUT_CLASSIFICATION	2.1009517929016778E-5	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999995156035264	WITHOUT_CLASSIFICATION	4.843964736477081E-7	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999863589720027	WITHOUT_CLASSIFICATION	1.3641027997383438E-5	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9997711367825826	WITHOUT_CLASSIFICATION	2.2886321741735457E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9999927652619038	WITHOUT_CLASSIFICATION	7.23473809612259E-6	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999769580728742	WITHOUT_CLASSIFICATION	2.3041927125747253E-5	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999984819112615	WITHOUT_CLASSIFICATION	1.5180887385065824E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999442581294734	WITHOUT_CLASSIFICATION	5.5741870526454064E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999442581294734	WITHOUT_CLASSIFICATION	5.5741870526454064E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999965218551863	WITHOUT_CLASSIFICATION	3.4781448137076143E-6	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999951176217288	WITHOUT_CLASSIFICATION	4.882378271254396E-6	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999994167427348	WITHOUT_CLASSIFICATION	5.832572652049426E-7	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999801440718539	WITHOUT_CLASSIFICATION	1.9855928146098493E-5	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999973178119781	WITHOUT_CLASSIFICATION	2.6821880217628116E-6	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999968981403179	WITHOUT_CLASSIFICATION	3.101859682120347E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999984819112615	WITHOUT_CLASSIFICATION	1.5180887385065824E-6	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999442581294734	WITHOUT_CLASSIFICATION	5.5741870526454064E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999442581294734	WITHOUT_CLASSIFICATION	5.5741870526454064E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999965218551863	WITHOUT_CLASSIFICATION	3.4781448137076143E-6	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.999950577498442	WITHOUT_CLASSIFICATION	4.942250155801153E-5	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.99999852359708	WITHOUT_CLASSIFICATION	1.476402919979579E-6	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.999979503476603	WITHOUT_CLASSIFICATION	2.0496523396912763E-5	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999911338557353	WITHOUT_CLASSIFICATION	8.866144264718243E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999984778009078	WITHOUT_CLASSIFICATION	1.5221990922050801E-6	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9999923996816985	WITHOUT_CLASSIFICATION	7.600318301553996E-6	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999992881809442	WITHOUT_CLASSIFICATION	7.118190558449566E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9998320785833454	WITHOUT_CLASSIFICATION	1.679214166544483E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9998320785833454	WITHOUT_CLASSIFICATION	1.679214166544483E-4	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999982645148336	WITHOUT_CLASSIFICATION	1.7354851663114834E-6	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999981206165359	WITHOUT_CLASSIFICATION	1.8793834641030423E-6	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999909511065356	WITHOUT_CLASSIFICATION	9.048893464441462E-6	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9999976533008845	WITHOUT_CLASSIFICATION	2.346699115458349E-6	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999844627980558	WITHOUT_CLASSIFICATION	1.5537201944232716E-5	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999337470132758	WITHOUT_CLASSIFICATION	6.625298672419508E-5	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999979659222226	WITHOUT_CLASSIFICATION	2.034077777491765E-6	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.999980141547482	WITHOUT_CLASSIFICATION	1.9858452518023235E-5	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999906145029681	WITHOUT_CLASSIFICATION	9.38549703200359E-6	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999962948178666	WITHOUT_CLASSIFICATION	3.70518213351084E-6	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9998487729529141	WITHOUT_CLASSIFICATION	1.5122704708599828E-4	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999990087592219	WITHOUT_CLASSIFICATION	9.912407782232413E-7	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999973637177454	WITHOUT_CLASSIFICATION	2.6362822545814172E-6	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9999910183679541	WITHOUT_CLASSIFICATION	8.98163204595842E-6	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999918017900067	WITHOUT_CLASSIFICATION	8.1982099932979E-6	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999880769203107	WITHOUT_CLASSIFICATION	1.1923079689323983E-5	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999890501862998	WITHOUT_CLASSIFICATION	1.0949813700162468E-5	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999991017570248	WITHOUT_CLASSIFICATION	8.982429751875916E-7	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999515280386717	WITHOUT_CLASSIFICATION	4.847196132819291E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999757647951392	WITHOUT_CLASSIFICATION	2.4235204860793915E-5	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999895754496014	WITHOUT_CLASSIFICATION	1.0424550398519193E-5	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999795703558007	WITHOUT_CLASSIFICATION	2.0429644199391605E-5	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999924502476901	WITHOUT_CLASSIFICATION	7.549752309975794E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999986910012622	WITHOUT_CLASSIFICATION	1.3089987378317544E-6	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999950613948985	WITHOUT_CLASSIFICATION	4.938605101435537E-6	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999833242846198	WITHOUT_CLASSIFICATION	1.6675715380199986E-5	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999973286480618	WITHOUT_CLASSIFICATION	2.671351938138505E-6	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999984566388318	WITHOUT_CLASSIFICATION	1.543361168143088E-6	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999996264115456	WITHOUT_CLASSIFICATION	3.7358845434551496E-7	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999942841340957	WITHOUT_CLASSIFICATION	5.7158659042851E-6	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.999952940859834	WITHOUT_CLASSIFICATION	4.7059140166084676E-5	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999462956437798	WITHOUT_CLASSIFICATION	5.370435622023307E-5	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999978762995242	WITHOUT_CLASSIFICATION	2.1237004758556124E-6	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999844868585843	WITHOUT_CLASSIFICATION	1.5513141415609063E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999682547087265	WITHOUT_CLASSIFICATION	3.1745291273486086E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999682547087265	WITHOUT_CLASSIFICATION	3.1745291273486086E-5	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999988195020558	WITHOUT_CLASSIFICATION	1.1804979442180967E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999709208515946	WITHOUT_CLASSIFICATION	2.9079148405462612E-5	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999418926841676	WITHOUT_CLASSIFICATION	5.810731583250916E-5	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999485277308611	WITHOUT_CLASSIFICATION	5.147226913898065E-5	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999461079275017	WITHOUT_CLASSIFICATION	5.389207249832527E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.999928580679819	WITHOUT_CLASSIFICATION	7.141932018086158E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999731178335094	WITHOUT_CLASSIFICATION	2.6882166490567787E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863094012034	WITHOUT_CLASSIFICATION	1.3690598796608556E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9997908349740718	WITHOUT_CLASSIFICATION	2.091650259281389E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999980178168484	WITHOUT_CLASSIFICATION	1.982183151500356E-6	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999984689452203	WITHOUT_CLASSIFICATION	1.531054779643608E-6	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999990914804517	WITHOUT_CLASSIFICATION	9.085195482023323E-7	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.999988626175846	WITHOUT_CLASSIFICATION	1.1373824153982743E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999989059979407	WITHOUT_CLASSIFICATION	1.0940020593196956E-6	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9999942396869624	WITHOUT_CLASSIFICATION	5.760313037561608E-6	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999645102007723	WITHOUT_CLASSIFICATION	3.548979922765083E-5	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999853424713316	WITHOUT_CLASSIFICATION	1.4657528668441986E-5	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999978829778912	WITHOUT_CLASSIFICATION	2.11702210881488E-6	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999977551565964	WITHOUT_CLASSIFICATION	2.24484340363535E-6	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999948099601803	WITHOUT_CLASSIFICATION	5.190039819621524E-6	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999965342048398	WITHOUT_CLASSIFICATION	3.465795160125708E-6	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999997296482329	WITHOUT_CLASSIFICATION	2.70351767052369E-7	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999848590011952	WITHOUT_CLASSIFICATION	1.5140998804883328E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999997312793385	WITHOUT_CLASSIFICATION	2.687206615755562E-7	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999953090306799	WITHOUT_CLASSIFICATION	4.690969320121859E-6	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999985812175907	WITHOUT_CLASSIFICATION	1.4187824092851072E-6	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999960141224019	WITHOUT_CLASSIFICATION	3.985877598042747E-6	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999972817608487	WITHOUT_CLASSIFICATION	2.7182391512838423E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999904137853568	WITHOUT_CLASSIFICATION	9.58621464333312E-6	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999668049894995	WITHOUT_CLASSIFICATION	3.319501050052909E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999478503345594	WITHOUT_CLASSIFICATION	5.214966544062148E-5	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999902898832412	WITHOUT_CLASSIFICATION	9.710116758730964E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999993791577958	WITHOUT_CLASSIFICATION	6.208422041707249E-7	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999660670489426	WITHOUT_CLASSIFICATION	3.3932951057260784E-5	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999866988172447	WITHOUT_CLASSIFICATION	1.330118275542758E-5	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999991697530912	WITHOUT_CLASSIFICATION	8.30246908791068E-7	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.99992314630089	WITHOUT_CLASSIFICATION	7.685369911007765E-5	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999954890452065	WITHOUT_CLASSIFICATION	4.510954793548217E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999983189139667	WITHOUT_CLASSIFICATION	1.6810860333195463E-6	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999990824856384	WITHOUT_CLASSIFICATION	9.175143615667144E-7	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999942792454077	WITHOUT_CLASSIFICATION	5.7207545922680385E-6	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999989697227051	WITHOUT_CLASSIFICATION	1.0302772948556192E-6	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999996027978606	WITHOUT_CLASSIFICATION	3.9720213943724615E-7	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999972786007402	WITHOUT_CLASSIFICATION	2.721399259887991E-6	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999813035067411	WITHOUT_CLASSIFICATION	1.869649325890598E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999958862440711	WITHOUT_CLASSIFICATION	4.113755928884106E-6	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999981408863912	WITHOUT_CLASSIFICATION	1.8591136088729174E-6	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999958862440711	WITHOUT_CLASSIFICATION	4.113755928884106E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9985609113434745	WITHOUT_CLASSIFICATION	0.0014390886565255826	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9999983919032192	WITHOUT_CLASSIFICATION	1.6080967809599523E-6	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999994217720318	WITHOUT_CLASSIFICATION	5.782279681968063E-7	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999905083098668	WITHOUT_CLASSIFICATION	9.491690133164018E-6	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999990013560995	WITHOUT_CLASSIFICATION	9.986439005668385E-7	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999984739711354	WITHOUT_CLASSIFICATION	1.5260288645908165E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.999981129296974	WITHOUT_CLASSIFICATION	1.887070302594043E-5	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.999978674471361	WITHOUT_CLASSIFICATION	2.1325528638921595E-5	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999983548249654	WITHOUT_CLASSIFICATION	1.6451750346857056E-6	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999988337788581	WITHOUT_CLASSIFICATION	1.1662211419118853E-6	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999975719248805	WITHOUT_CLASSIFICATION	2.4280751195718287E-6	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999309509307573	WITHOUT_CLASSIFICATION	6.904906924268187E-5	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999831421863128	WITHOUT_CLASSIFICATION	1.6857813687280926E-5	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.999961544538279	WITHOUT_CLASSIFICATION	3.845546172097172E-5	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999862627478194	WITHOUT_CLASSIFICATION	1.3737252180667652E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.999995190601661	WITHOUT_CLASSIFICATION	4.809398338978559E-6	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999992883376375	WITHOUT_CLASSIFICATION	7.116623624072049E-7	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9999962442654347	WITHOUT_CLASSIFICATION	3.75573456540152E-6	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.999996937880852	WITHOUT_CLASSIFICATION	3.0621191479249104E-6	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.999992397576968	WITHOUT_CLASSIFICATION	7.6024230320911974E-6	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999775338837209	WITHOUT_CLASSIFICATION	2.2466116279146733E-5	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.999997284358398	WITHOUT_CLASSIFICATION	2.715641602124283E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999748602667738	WITHOUT_CLASSIFICATION	2.5139733226174822E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.999981129296974	WITHOUT_CLASSIFICATION	1.887070302594043E-5	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999939881013704	WITHOUT_CLASSIFICATION	6.0118986295374695E-6	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999873469383903	WITHOUT_CLASSIFICATION	1.2653061609671346E-5	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999873469383903	WITHOUT_CLASSIFICATION	1.2653061609671346E-5	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999953210894262	WITHOUT_CLASSIFICATION	4.678910573748508E-6	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999921947423012	WITHOUT_CLASSIFICATION	7.805257698802434E-6	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999921947423012	WITHOUT_CLASSIFICATION	7.805257698802434E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999664564786348	WITHOUT_CLASSIFICATION	3.35435213651902E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999664564786348	WITHOUT_CLASSIFICATION	3.35435213651902E-5	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9999667758071482	WITHOUT_CLASSIFICATION	3.3224192851696397E-5	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.999963284426911	WITHOUT_CLASSIFICATION	3.6715573089152126E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999989643044765	WITHOUT_CLASSIFICATION	1.0356955234750593E-6	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999930750701312	WITHOUT_CLASSIFICATION	6.924929868672082E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999832914893654	WITHOUT_CLASSIFICATION	1.670851063464185E-5	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999933311821293	WITHOUT_CLASSIFICATION	6.668817870813304E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9999515766017147	WITHOUT_CLASSIFICATION	4.842339828514968E-5	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999912680088721	WITHOUT_CLASSIFICATION	8.731991127953648E-6	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.999999771521964	WITHOUT_CLASSIFICATION	2.2847803606876874E-7	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999956652667465	WITHOUT_CLASSIFICATION	4.334733253412941E-6	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999986741741113	WITHOUT_CLASSIFICATION	1.3258258887255741E-6	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999151747510838	WITHOUT_CLASSIFICATION	8.482524891625468E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999952922796751	WITHOUT_CLASSIFICATION	4.707720324846294E-6	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999975897288982	WITHOUT_CLASSIFICATION	2.410271101785353E-6	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999981407556112	WITHOUT_CLASSIFICATION	1.8592443887488106E-6	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999871368193148	WITHOUT_CLASSIFICATION	1.2863180685102146E-5	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999974567119876	WITHOUT_CLASSIFICATION	2.5432880123292214E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999946375304822	WITHOUT_CLASSIFICATION	5.362469517656507E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999946375304822	WITHOUT_CLASSIFICATION	5.362469517656507E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999991254532005	WITHOUT_CLASSIFICATION	8.745467995557425E-7	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9999982263433398	WITHOUT_CLASSIFICATION	1.773656660134376E-6	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999997419102529	WITHOUT_CLASSIFICATION	2.5808974707778175E-7	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.999999433778853	WITHOUT_CLASSIFICATION	5.662211469703004E-7	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999998646801097	WITHOUT_CLASSIFICATION	1.3531989028449488E-7	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999986538815407	WITHOUT_CLASSIFICATION	1.346118459257189E-6	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999997818228341	WITHOUT_CLASSIFICATION	2.181771658223551E-7	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999981519124305	WITHOUT_CLASSIFICATION	1.8480875695243717E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999968791638111	WITHOUT_CLASSIFICATION	3.1208361888715895E-6	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999994456017929	WITHOUT_CLASSIFICATION	5.543982071881017E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999992763424722	WITHOUT_CLASSIFICATION	7.236575277843945E-7	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999977003634725	WITHOUT_CLASSIFICATION	2.299636527644476E-6	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.999996609148671	WITHOUT_CLASSIFICATION	3.3908513290259298E-6	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999954646865157	WITHOUT_CLASSIFICATION	4.5353134843509925E-6	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999770373723356	WITHOUT_CLASSIFICATION	2.2962627664520756E-5	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999671748511342	WITHOUT_CLASSIFICATION	3.282514886587905E-5	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999902599286753	WITHOUT_CLASSIFICATION	9.740071324738513E-6	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999918271711445	WITHOUT_CLASSIFICATION	8.17282885552979E-6	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999458656418804	WITHOUT_CLASSIFICATION	5.4134358119708225E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999937014388144	WITHOUT_CLASSIFICATION	6.298561185601344E-6	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999573509352084	WITHOUT_CLASSIFICATION	4.2649064791522026E-5	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999794064070555	WITHOUT_CLASSIFICATION	2.059359294452025E-5	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999497061750114	WITHOUT_CLASSIFICATION	5.0293824988518155E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999997452171236	WITHOUT_CLASSIFICATION	2.547828763680829E-7	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999994709455308	WITHOUT_CLASSIFICATION	5.29054469245564E-7	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999996961576889	WITHOUT_CLASSIFICATION	3.038423111027952E-7	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999997332461389	WITHOUT_CLASSIFICATION	2.667538611032687E-7	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999983345499927	WITHOUT_CLASSIFICATION	1.665450007413617E-6	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999778213398843	WITHOUT_CLASSIFICATION	2.2178660115644357E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999971476201018	WITHOUT_CLASSIFICATION	2.852379898245454E-6	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9997707973344188	WITHOUT_CLASSIFICATION	2.2920266558121036E-4	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999977682675646	WITHOUT_CLASSIFICATION	2.23173243537797E-6	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9996190742579855	WITHOUT_CLASSIFICATION	3.8092574201458064E-4	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999889129621167	WITHOUT_CLASSIFICATION	1.1087037883309763E-5	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.999870768797021	WITHOUT_CLASSIFICATION	1.2923120297905018E-4	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999270574168614	WITHOUT_CLASSIFICATION	7.29425831386467E-5	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.999968388577993	WITHOUT_CLASSIFICATION	3.1611422007007064E-5	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999773864485172	WITHOUT_CLASSIFICATION	2.2613551482827722E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999920781290308	WITHOUT_CLASSIFICATION	7.921870969193847E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999973365130811	WITHOUT_CLASSIFICATION	2.663486918973371E-6	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999970855912408	WITHOUT_CLASSIFICATION	2.91440875929078E-6	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999919603926457	WITHOUT_CLASSIFICATION	8.039607354313495E-6	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999983957232811	WITHOUT_CLASSIFICATION	1.6042767189245785E-6	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999893238847931	WITHOUT_CLASSIFICATION	1.0676115206968334E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999817891189222	WITHOUT_CLASSIFICATION	1.8210881077825367E-5	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999992898802029	WITHOUT_CLASSIFICATION	7.101197970224986E-7	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.999992818968388	WITHOUT_CLASSIFICATION	7.181031612043472E-6	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999893238847931	WITHOUT_CLASSIFICATION	1.0676115206968334E-5	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999966783294099	WITHOUT_CLASSIFICATION	3.3216705902183737E-6	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999988643697637	WITHOUT_CLASSIFICATION	1.1356302363338197E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999697851218758	WITHOUT_CLASSIFICATION	3.021487812410849E-5	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.999771573979646	WITHOUT_CLASSIFICATION	2.284260203539339E-4	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9998641593697107	WITHOUT_CLASSIFICATION	1.3584063028925167E-4	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999817891189222	WITHOUT_CLASSIFICATION	1.8210881077825367E-5	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.999992818968388	WITHOUT_CLASSIFICATION	7.181031612043472E-6	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999705598956665	WITHOUT_CLASSIFICATION	2.944010433344179E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999471953851647	WITHOUT_CLASSIFICATION	5.28046148352424E-5	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999057894290723	WITHOUT_CLASSIFICATION	9.421057092775018E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999935387443638	WITHOUT_CLASSIFICATION	6.461255636135899E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999883427296963	WITHOUT_CLASSIFICATION	1.1657270303839945E-5	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999873045931885	WITHOUT_CLASSIFICATION	1.2695406811513957E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999934784316485	WITHOUT_CLASSIFICATION	6.521568351450771E-6	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999974511584063	WITHOUT_CLASSIFICATION	2.548841593782032E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999735670695978	WITHOUT_CLASSIFICATION	2.6432930402199064E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999735670695978	WITHOUT_CLASSIFICATION	2.6432930402199064E-5	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999740045637842	WITHOUT_CLASSIFICATION	2.5995436215874255E-5	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999825686340524	WITHOUT_CLASSIFICATION	1.7431365947537233E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999987832686282	WITHOUT_CLASSIFICATION	1.2167313717563053E-6	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999970633047583	WITHOUT_CLASSIFICATION	2.9366952417444977E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999279448571	WITHOUT_CLASSIFICATION	7.205514289767002E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999730796565695	WITHOUT_CLASSIFICATION	2.6920343430467373E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999957089319609	WITHOUT_CLASSIFICATION	4.29106803903943E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999957089319609	WITHOUT_CLASSIFICATION	4.29106803903943E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9998803271713276	WITHOUT_CLASSIFICATION	1.196728286723579E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999995019386219	WITHOUT_CLASSIFICATION	4.980613780970218E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999995019386219	WITHOUT_CLASSIFICATION	4.980613780970218E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999931791116363	WITHOUT_CLASSIFICATION	6.820888363633913E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999903823296814	WITHOUT_CLASSIFICATION	9.617670318581003E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999903823296814	WITHOUT_CLASSIFICATION	9.617670318581003E-6	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999917944233441	WITHOUT_CLASSIFICATION	8.205576655854285E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9998299644065272	WITHOUT_CLASSIFICATION	1.7003559347282955E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999989133719746	WITHOUT_CLASSIFICATION	1.0866280255410154E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999873408303745	WITHOUT_CLASSIFICATION	1.265916962544645E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988677289638	WITHOUT_CLASSIFICATION	1.1322710360811687E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999860978174452	WITHOUT_CLASSIFICATION	1.3902182554906296E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999832198146966	WITHOUT_CLASSIFICATION	1.678018530346352E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999820059353567	WITHOUT_CLASSIFICATION	1.79940646432828E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999863340259103	WITHOUT_CLASSIFICATION	1.3665974089657174E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9998562365916679	WITHOUT_CLASSIFICATION	1.437634083321059E-4	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999998381454298	WITHOUT_CLASSIFICATION	1.618545702349485E-7	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9999797905550785	WITHOUT_CLASSIFICATION	2.0209444921492937E-5	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999654325452222	WITHOUT_CLASSIFICATION	3.45674547777768E-5	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999611376798041	WITHOUT_CLASSIFICATION	3.886232019596571E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999995921389764	WITHOUT_CLASSIFICATION	4.0786102365598097E-7	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999360462365877	WITHOUT_CLASSIFICATION	6.395376341230003E-5	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999966636876272	WITHOUT_CLASSIFICATION	3.336312372953308E-6	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999989077012071	WITHOUT_CLASSIFICATION	1.0922987928011347E-6	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999984015907278	WITHOUT_CLASSIFICATION	1.5984092721972554E-5	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9997455148922584	WITHOUT_CLASSIFICATION	2.544851077415566E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999743814032326	WITHOUT_CLASSIFICATION	2.561859676734771E-5	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9996456305125662	WITHOUT_CLASSIFICATION	3.5436948743383336E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9993456219553256	WITHOUT_CLASSIFICATION	6.543780446743652E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999907750798172	WITHOUT_CLASSIFICATION	9.224920182866048E-6	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9996557058131877	WITHOUT_CLASSIFICATION	3.442941868122674E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9998726655970656	WITHOUT_CLASSIFICATION	1.273344029344109E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997712662760366	WITHOUT_CLASSIFICATION	2.2873372396332552E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.999773418929268	WITHOUT_CLASSIFICATION	2.2658107073206311E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999519644586012	WITHOUT_CLASSIFICATION	4.8035541398807625E-5	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999805921115924	WITHOUT_CLASSIFICATION	1.9407888407549447E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999940702910287	WITHOUT_CLASSIFICATION	5.929708971312071E-6	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9997019359038676	WITHOUT_CLASSIFICATION	2.98064096132458E-4	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9995654844707524	WITHOUT_CLASSIFICATION	4.3451552924755427E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9998299644065272	WITHOUT_CLASSIFICATION	1.7003559347282955E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999989133719746	WITHOUT_CLASSIFICATION	1.0866280255410154E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999873408303745	WITHOUT_CLASSIFICATION	1.265916962544645E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999860978174452	WITHOUT_CLASSIFICATION	1.3902182554906296E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999942500002807	WITHOUT_CLASSIFICATION	5.749999719320975E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999820059353567	WITHOUT_CLASSIFICATION	1.79940646432828E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999863340259103	WITHOUT_CLASSIFICATION	1.3665974089657174E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9998562365916679	WITHOUT_CLASSIFICATION	1.437634083321059E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9998320785833454	WITHOUT_CLASSIFICATION	1.679214166544483E-4	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999960919595734	WITHOUT_CLASSIFICATION	3.908040426600844E-6	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999724047698233	WITHOUT_CLASSIFICATION	2.759523017660822E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9996662189219534	WITHOUT_CLASSIFICATION	3.337810780465516E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.999386117239452	WITHOUT_CLASSIFICATION	6.138827605480299E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9999340334718444	WITHOUT_CLASSIFICATION	6.596652815562848E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999387671219961	WITHOUT_CLASSIFICATION	6.123287800385571E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999387671219961	WITHOUT_CLASSIFICATION	6.123287800385571E-5	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9997881895275774	WITHOUT_CLASSIFICATION	2.1181047242270734E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9997907937884347	WITHOUT_CLASSIFICATION	2.0920621156536777E-4	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9996407483271088	WITHOUT_CLASSIFICATION	3.592516728910936E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999892744951722	WITHOUT_CLASSIFICATION	1.0725504827812001E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999892744951722	WITHOUT_CLASSIFICATION	1.0725504827812001E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998316146378436	WITHOUT_CLASSIFICATION	1.6838536215635035E-4	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999855568698413	WITHOUT_CLASSIFICATION	1.4443130158827425E-5	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999987356267301	WITHOUT_CLASSIFICATION	1.2643732698208478E-6	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999925087984601	WITHOUT_CLASSIFICATION	7.491201539966748E-6	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999848285828151	WITHOUT_CLASSIFICATION	1.5171417184848691E-5	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999326260413918	WITHOUT_CLASSIFICATION	6.737395860819322E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999667505028207	WITHOUT_CLASSIFICATION	3.324949717925072E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9998924037800835	WITHOUT_CLASSIFICATION	1.0759621991650756E-4	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9997702087480683	WITHOUT_CLASSIFICATION	2.2979125193153517E-4	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999229850803888	WITHOUT_CLASSIFICATION	7.701491961123641E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999682564186061	WITHOUT_CLASSIFICATION	3.174358139390582E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999682564186061	WITHOUT_CLASSIFICATION	3.174358139390582E-5	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9999953420265535	WITHOUT_CLASSIFICATION	4.657973446556898E-6	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999311012084252	WITHOUT_CLASSIFICATION	6.889879157474945E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999311012084252	WITHOUT_CLASSIFICATION	6.889879157474945E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999311012084252	WITHOUT_CLASSIFICATION	6.889879157474945E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999590419489489	WITHOUT_CLASSIFICATION	4.09580510510901E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999590419489489	WITHOUT_CLASSIFICATION	4.09580510510901E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999951508638342	WITHOUT_CLASSIFICATION	4.849136165844819E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999951508638342	WITHOUT_CLASSIFICATION	4.849136165844819E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999951508638342	WITHOUT_CLASSIFICATION	4.849136165844819E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9996371450959616	WITHOUT_CLASSIFICATION	3.628549040384891E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9996371450959616	WITHOUT_CLASSIFICATION	3.628549040384891E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9996371450959616	WITHOUT_CLASSIFICATION	3.628549040384891E-4	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999939098914031	WITHOUT_CLASSIFICATION	6.090108596903409E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999939098914031	WITHOUT_CLASSIFICATION	6.090108596903409E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999030284595695	WITHOUT_CLASSIFICATION	9.697154043060947E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999030284595695	WITHOUT_CLASSIFICATION	9.697154043060947E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999753774161246	WITHOUT_CLASSIFICATION	2.462258387532466E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999753774161246	WITHOUT_CLASSIFICATION	2.462258387532466E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999989510280023	WITHOUT_CLASSIFICATION	1.0489719976882797E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999989510280023	WITHOUT_CLASSIFICATION	1.0489719976882797E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999920510066417	WITHOUT_CLASSIFICATION	7.948993358375983E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999920510066417	WITHOUT_CLASSIFICATION	7.948993358375983E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.999885820370269	WITHOUT_CLASSIFICATION	1.1417962973097752E-4	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.999885820370269	WITHOUT_CLASSIFICATION	1.1417962973097752E-4	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999993381552978	WITHOUT_CLASSIFICATION	6.618447022024204E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999993381552978	WITHOUT_CLASSIFICATION	6.618447022024204E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999939098914031	WITHOUT_CLASSIFICATION	6.090108596903409E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999030284595695	WITHOUT_CLASSIFICATION	9.697154043060947E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999753774161246	WITHOUT_CLASSIFICATION	2.462258387532466E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999920510066417	WITHOUT_CLASSIFICATION	7.948993358375983E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.999885820370269	WITHOUT_CLASSIFICATION	1.1417962973097752E-4	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999993381552978	WITHOUT_CLASSIFICATION	6.618447022024204E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9998362331654954	WITHOUT_CLASSIFICATION	1.6376683450458542E-4	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9998956152964195	WITHOUT_CLASSIFICATION	1.0438470358053622E-4	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9996144440819215	WITHOUT_CLASSIFICATION	3.855559180785787E-4	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9999978915609428	WITHOUT_CLASSIFICATION	2.108439057251847E-6	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9998700446700666	WITHOUT_CLASSIFICATION	1.2995532993342613E-4	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9998486710695735	WITHOUT_CLASSIFICATION	1.513289304264844E-4	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999551100783078	WITHOUT_CLASSIFICATION	4.4889921692119874E-5	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9998449981983129	WITHOUT_CLASSIFICATION	1.550018016872491E-4	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999985497997986	WITHOUT_CLASSIFICATION	1.4502002014331749E-6	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999920433110959	WITHOUT_CLASSIFICATION	7.956688904113622E-6	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999533920702293	WITHOUT_CLASSIFICATION	4.660792977082421E-5	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.999983864045053	WITHOUT_CLASSIFICATION	1.613595494694341E-5	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999557290958451	WITHOUT_CLASSIFICATION	4.427090415504964E-5	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999461821938264	WITHOUT_CLASSIFICATION	5.3817806173749966E-5	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999575971674031	WITHOUT_CLASSIFICATION	4.240283259692037E-5	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999188087791359	WITHOUT_CLASSIFICATION	8.11912208641623E-5	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999264577512216	WITHOUT_CLASSIFICATION	7.354224877844824E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9996565529432975	WITHOUT_CLASSIFICATION	3.4344705670259323E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999723033130014	WITHOUT_CLASSIFICATION	2.7696686998720682E-5	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999823359615486	WITHOUT_CLASSIFICATION	1.7664038451326916E-5	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999505126652725	WITHOUT_CLASSIFICATION	4.948733472758082E-5	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999932703907477	WITHOUT_CLASSIFICATION	6.729609252204317E-6	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999747824939024	WITHOUT_CLASSIFICATION	2.5217506097694066E-5	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999243849132264	WITHOUT_CLASSIFICATION	7.561508677356767E-5	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999549540308941	WITHOUT_CLASSIFICATION	4.504596910582739E-5	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9998428132662965	WITHOUT_CLASSIFICATION	1.5718673370346286E-4	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9998492547699399	WITHOUT_CLASSIFICATION	1.5074523005995403E-4	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999385094965431	WITHOUT_CLASSIFICATION	6.149050345697477E-5	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999887819523607	WITHOUT_CLASSIFICATION	1.1218047639194437E-5	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999644439732562	WITHOUT_CLASSIFICATION	3.55560267437958E-5	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999120930801665	WITHOUT_CLASSIFICATION	8.790691983361116E-5	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9998505578380616	WITHOUT_CLASSIFICATION	1.4944216193836724E-4	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999428597722552	WITHOUT_CLASSIFICATION	5.714022774472708E-5	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999428597722552	WITHOUT_CLASSIFICATION	5.714022774472708E-5	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999331771467573	WITHOUT_CLASSIFICATION	6.68228532426331E-5	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999970192843259	WITHOUT_CLASSIFICATION	2.9807156740364377E-6	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9998150115582889	WITHOUT_CLASSIFICATION	1.849884417112176E-4	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999954260463791	WITHOUT_CLASSIFICATION	4.573953620951912E-6	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9992155443885934	WITHOUT_CLASSIFICATION	7.84455611406638E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9993243196719024	WITHOUT_CLASSIFICATION	6.75680328097735E-4	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999981284761773	WITHOUT_CLASSIFICATION	1.871523822757548E-6	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999108186308006	WITHOUT_CLASSIFICATION	8.918136919945464E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999760481278019	WITHOUT_CLASSIFICATION	2.3951872198107773E-5	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999911679011055	WITHOUT_CLASSIFICATION	8.832098894360631E-6	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9998050714854487	WITHOUT_CLASSIFICATION	1.949285145512143E-4	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999135427524063	WITHOUT_CLASSIFICATION	8.645724759372894E-5	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998107197072001	WITHOUT_CLASSIFICATION	1.892802927999172E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998107197072001	WITHOUT_CLASSIFICATION	1.892802927999172E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997908402105711	WITHOUT_CLASSIFICATION	2.091597894288766E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997908402105711	WITHOUT_CLASSIFICATION	2.091597894288766E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997908402105711	WITHOUT_CLASSIFICATION	2.091597894288766E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9998793057136924	WITHOUT_CLASSIFICATION	1.2069428630759882E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9998432515945229	WITHOUT_CLASSIFICATION	1.5674840547707304E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999032678893706	WITHOUT_CLASSIFICATION	9.673211062950493E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999032678893706	WITHOUT_CLASSIFICATION	9.673211062950493E-5	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999668792193441	WITHOUT_CLASSIFICATION	3.3120780655878734E-5	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999944198852142	WITHOUT_CLASSIFICATION	5.580114785796269E-6	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999736505659231	WITHOUT_CLASSIFICATION	2.6349434076903204E-5	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999804528174597	WITHOUT_CLASSIFICATION	1.9547182540312738E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999824820940606	WITHOUT_CLASSIFICATION	1.7517905939376883E-5	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.999865794026945	WITHOUT_CLASSIFICATION	1.3420597305495777E-4	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9996953980181359	WITHOUT_CLASSIFICATION	3.046019818641084E-4	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999641137130041	WITHOUT_CLASSIFICATION	3.588628699586546E-5	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999894166930368	WITHOUT_CLASSIFICATION	1.05833069631689E-5	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999403661683954	WITHOUT_CLASSIFICATION	5.9633831604609925E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9998987009509098	WITHOUT_CLASSIFICATION	1.0129904909007713E-4	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999712516912976	WITHOUT_CLASSIFICATION	2.8748308702258092E-5	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999852526447965	WITHOUT_CLASSIFICATION	1.4747355203389127E-5	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999301132320496	WITHOUT_CLASSIFICATION	6.988676795038091E-5	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999129619472298	WITHOUT_CLASSIFICATION	8.703805277019681E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999099130236417	WITHOUT_CLASSIFICATION	9.008697635823255E-5	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999980296595523	WITHOUT_CLASSIFICATION	1.9703404476254155E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9998047199667229	WITHOUT_CLASSIFICATION	1.9528003327704511E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9998046003338323	WITHOUT_CLASSIFICATION	1.9539966616755145E-4	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999984023413814	WITHOUT_CLASSIFICATION	1.597658618627587E-6	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999791988538967	WITHOUT_CLASSIFICATION	2.0801146103307027E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9998883993728156	WITHOUT_CLASSIFICATION	1.1160062718446352E-4	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9999789725213147	WITHOUT_CLASSIFICATION	2.1027478685216713E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999593827712507	WITHOUT_CLASSIFICATION	4.0617228749276005E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999593827712507	WITHOUT_CLASSIFICATION	4.0617228749276005E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999593827712507	WITHOUT_CLASSIFICATION	4.0617228749276005E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.999971334029703	WITHOUT_CLASSIFICATION	2.8665970297116787E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.999971334029703	WITHOUT_CLASSIFICATION	2.8665970297116787E-5	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9998938534193788	WITHOUT_CLASSIFICATION	1.0614658062121668E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999693445463746	WITHOUT_CLASSIFICATION	3.065545362536484E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999693445463746	WITHOUT_CLASSIFICATION	3.065545362536484E-5	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999679408033211	WITHOUT_CLASSIFICATION	3.2059196678883384E-5	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999442787175553	WITHOUT_CLASSIFICATION	5.57212824446902E-5	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9998938534193788	WITHOUT_CLASSIFICATION	1.0614658062121668E-4	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9997482691574102	WITHOUT_CLASSIFICATION	2.517308425897969E-4	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9998938534193788	WITHOUT_CLASSIFICATION	1.0614658062121668E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999685962438837	WITHOUT_CLASSIFICATION	3.1403756116274746E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999685962438837	WITHOUT_CLASSIFICATION	3.1403756116274746E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998107197072001	WITHOUT_CLASSIFICATION	1.892802927999172E-4	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9999798874808956	WITHOUT_CLASSIFICATION	2.011251910434317E-5	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9969000372195377	WITHOUT_CLASSIFICATION	0.0030999627804623193	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9968832329162263	WITHOUT_CLASSIFICATION	0.0031167670837738155	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9972383806724512	WITHOUT_CLASSIFICATION	0.0027616193275488638	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9974071599718477	WITHOUT_CLASSIFICATION	0.0025928400281522166	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9974133113327099	WITHOUT_CLASSIFICATION	0.0025866886672901387	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9975473017145008	WITHOUT_CLASSIFICATION	0.0024526982854992515	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9967728357931337	WITHOUT_CLASSIFICATION	0.0032271642068663503	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9968573175800318	WITHOUT_CLASSIFICATION	0.003142682419968218	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.996948760111027	WITHOUT_CLASSIFICATION	0.0030512398889730847	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9968672878300393	WITHOUT_CLASSIFICATION	0.0031327121699605523	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9968859347526727	WITHOUT_CLASSIFICATION	0.0031140652473272113	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9969553653634446	WITHOUT_CLASSIFICATION	0.003044634636555411	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9973877580071302	WITHOUT_CLASSIFICATION	0.002612241992869838	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9964369630960012	WITHOUT_CLASSIFICATION	0.0035630369039989594	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9968325083761456	WITHOUT_CLASSIFICATION	0.0031674916238543477	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9972309649824718	WITHOUT_CLASSIFICATION	0.0027690350175281855	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.997309741381351	WITHOUT_CLASSIFICATION	0.002690258618649076	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9973824331511656	WITHOUT_CLASSIFICATION	0.002617566848834452	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9965165514308276	WITHOUT_CLASSIFICATION	0.003483448569172275	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9966106026441439	WITHOUT_CLASSIFICATION	0.0033893973558560436	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9961610106894268	WITHOUT_CLASSIFICATION	0.0038389893105731866	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9971713370388029	WITHOUT_CLASSIFICATION	0.0028286629611971245	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9972868619291835	WITHOUT_CLASSIFICATION	0.002713138070816492	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9968764369519961	WITHOUT_CLASSIFICATION	0.0031235630480038936	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9970263709852646	WITHOUT_CLASSIFICATION	0.002973629014735376	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9973372424859638	WITHOUT_CLASSIFICATION	0.0026627575140363525	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9971114640515871	WITHOUT_CLASSIFICATION	0.0028885359484128264	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9973481870699665	WITHOUT_CLASSIFICATION	0.002651812930033374	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9970692749568754	WITHOUT_CLASSIFICATION	0.0029307250431245763	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9969521999615708	WITHOUT_CLASSIFICATION	0.0030478000384292505	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9970791358339989	WITHOUT_CLASSIFICATION	0.0029208641660010805	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9972550638300205	WITHOUT_CLASSIFICATION	0.0027449361699794965	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9973037810784939	WITHOUT_CLASSIFICATION	0.002696218921506186	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9969858114179989	WITHOUT_CLASSIFICATION	0.003014188582001121	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9970411029043436	WITHOUT_CLASSIFICATION	0.0029588970956564795	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9972307519619523	WITHOUT_CLASSIFICATION	0.0027692480380476264	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9964052009003979	WITHOUT_CLASSIFICATION	0.003594799099602129	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9973814262043927	WITHOUT_CLASSIFICATION	0.002618573795607225	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9972692929335176	WITHOUT_CLASSIFICATION	0.002730707066482398	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.997088503336369	WITHOUT_CLASSIFICATION	0.0029114966636310585	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9969586984449936	WITHOUT_CLASSIFICATION	0.0030413015550063995	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9970285116553095	WITHOUT_CLASSIFICATION	0.0029714883446904966	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9972180907782348	WITHOUT_CLASSIFICATION	0.0027819092217653114	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9972186348191905	WITHOUT_CLASSIFICATION	0.0027813651808095614	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9970328139056865	WITHOUT_CLASSIFICATION	0.0029671860943135575	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9975155458184003	WITHOUT_CLASSIFICATION	0.002484454181599665	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9970736406516862	WITHOUT_CLASSIFICATION	0.0029263593483136448	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9974748415159547	WITHOUT_CLASSIFICATION	0.002525158484045324	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9970724144781067	WITHOUT_CLASSIFICATION	0.002927585521893336	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9974508862586201	WITHOUT_CLASSIFICATION	0.002549113741379829	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9962853287376503	WITHOUT_CLASSIFICATION	0.0037146712623496573	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9964765023290905	WITHOUT_CLASSIFICATION	0.003523497670909595	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9964862257622225	WITHOUT_CLASSIFICATION	0.0035137742377775133	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9969943348007564	WITHOUT_CLASSIFICATION	0.0030056651992435355	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9969792727297389	WITHOUT_CLASSIFICATION	0.0030207272702611975	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9966950698193021	WITHOUT_CLASSIFICATION	0.0033049301806979308	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9975061119447437	WITHOUT_CLASSIFICATION	0.002493888055256313	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9967154925199765	WITHOUT_CLASSIFICATION	0.003284507480023507	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9964604565931604	WITHOUT_CLASSIFICATION	0.003539543406839593	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9965269657760691	WITHOUT_CLASSIFICATION	0.0034730342239309695	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9970952230057128	WITHOUT_CLASSIFICATION	0.0029047769942870684	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9968223748904796	WITHOUT_CLASSIFICATION	0.00317762510952042	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9959771914782697	WITHOUT_CLASSIFICATION	0.0040228085217303535	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9971719095717981	WITHOUT_CLASSIFICATION	0.002828090428201978	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9967269782364446	WITHOUT_CLASSIFICATION	0.0032730217635554893	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9973553339386072	WITHOUT_CLASSIFICATION	0.002644666061392818	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9974239507064531	WITHOUT_CLASSIFICATION	0.002576049293546995	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9971957044241222	WITHOUT_CLASSIFICATION	0.002804295575877775	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9972458795345338	WITHOUT_CLASSIFICATION	0.0027541204654662234	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9972760454750678	WITHOUT_CLASSIFICATION	0.002723954524932222	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9970936781886706	WITHOUT_CLASSIFICATION	0.002906321811329454	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9971843854038962	WITHOUT_CLASSIFICATION	0.002815614596103742	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9971379853440662	WITHOUT_CLASSIFICATION	0.002862014655933855	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9971625058550974	WITHOUT_CLASSIFICATION	0.002837494144902721	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9962021186182176	WITHOUT_CLASSIFICATION	0.0037978813817823543	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9963750275466106	WITHOUT_CLASSIFICATION	0.003624972453389507	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9968005870285773	WITHOUT_CLASSIFICATION	0.003199412971422731	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9975440980737034	WITHOUT_CLASSIFICATION	0.0024559019262966	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9971743562888591	WITHOUT_CLASSIFICATION	0.0028256437111409535	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999874188837204	WITHOUT_CLASSIFICATION	1.2581116279603942E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9998386861127003	WITHOUT_CLASSIFICATION	1.6131388729967883E-4	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999619748641206	WITHOUT_CLASSIFICATION	3.802513587928016E-5	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.999961982417663	WITHOUT_CLASSIFICATION	3.801758233711342E-5	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999958182414462	WITHOUT_CLASSIFICATION	4.181758553826938E-6	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999739728997334	WITHOUT_CLASSIFICATION	2.6027100266525294E-5	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9996274184986772	WITHOUT_CLASSIFICATION	3.725815013229057E-4	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9998314330571241	WITHOUT_CLASSIFICATION	1.6856694287590714E-4	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999489053490638	WITHOUT_CLASSIFICATION	5.109465093635135E-5	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999935866505558	WITHOUT_CLASSIFICATION	6.413349444204822E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9993243196719024	WITHOUT_CLASSIFICATION	6.75680328097735E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9998793057136924	WITHOUT_CLASSIFICATION	1.2069428630759882E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9998432515945229	WITHOUT_CLASSIFICATION	1.5674840547707304E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999032678893706	WITHOUT_CLASSIFICATION	9.673211062950493E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9998047199667229	WITHOUT_CLASSIFICATION	1.9528003327704511E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9998046003338323	WITHOUT_CLASSIFICATION	1.9539966616755145E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999096878500467	WITHOUT_CLASSIFICATION	9.031214995319737E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.999971334029703	WITHOUT_CLASSIFICATION	2.8665970297116787E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998107197072001	WITHOUT_CLASSIFICATION	1.892802927999172E-4	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.999850640410302	WITHOUT_CLASSIFICATION	1.4935958969804328E-4	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.999908922611459	WITHOUT_CLASSIFICATION	9.1077388540916E-5	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999445538734199	WITHOUT_CLASSIFICATION	5.5446126580087724E-5	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999009420473209	WITHOUT_CLASSIFICATION	9.905795267905225E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999647659372862	WITHOUT_CLASSIFICATION	3.5234062713739667E-5	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9998235403066724	WITHOUT_CLASSIFICATION	1.764596933276535E-4	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999919087814372	WITHOUT_CLASSIFICATION	8.091218562856806E-6	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999707180839043	WITHOUT_CLASSIFICATION	2.928191609582134E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9996565529432975	WITHOUT_CLASSIFICATION	3.4344705670259323E-4	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999545116817911	WITHOUT_CLASSIFICATION	4.548831820884791E-5	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999776088921449	WITHOUT_CLASSIFICATION	2.2391107855078238E-5	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999859909431167	WITHOUT_CLASSIFICATION	1.4009056883358144E-5	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999930759043891	WITHOUT_CLASSIFICATION	6.924095610778864E-6	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999904417690442	WITHOUT_CLASSIFICATION	9.558230955849964E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999097156281788	WITHOUT_CLASSIFICATION	9.028437182119692E-5	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.999945131608915	WITHOUT_CLASSIFICATION	5.486839108510995E-5	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999769782174331	WITHOUT_CLASSIFICATION	2.3021782566842693E-5	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999956188852006	WITHOUT_CLASSIFICATION	4.381114799327217E-6	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999991494454649	WITHOUT_CLASSIFICATION	8.505545351249193E-7	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999160016656663	WITHOUT_CLASSIFICATION	8.399833433368807E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9998027995771908	WITHOUT_CLASSIFICATION	1.9720042280918203E-4	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.999898781562289	WITHOUT_CLASSIFICATION	1.0121843771095748E-4	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999484822742204	WITHOUT_CLASSIFICATION	5.151772577950294E-5	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999532353856057	WITHOUT_CLASSIFICATION	4.676461439432653E-5	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999911859252	WITHOUT_CLASSIFICATION	8.814074799968261E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999800147749496	WITHOUT_CLASSIFICATION	1.998522505043114E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999867892126754	WITHOUT_CLASSIFICATION	1.32107873246554E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999995440854188	WITHOUT_CLASSIFICATION	4.5591458129834306E-7	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9997907496286814	WITHOUT_CLASSIFICATION	2.0925037131846913E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999825911511369	WITHOUT_CLASSIFICATION	1.7408848863176114E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998581576715562	WITHOUT_CLASSIFICATION	1.418423284437873E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999498402621783	WITHOUT_CLASSIFICATION	5.015973782177437E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999498402621783	WITHOUT_CLASSIFICATION	5.015973782177437E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9998559489408836	WITHOUT_CLASSIFICATION	1.4405105911634647E-4	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9997934658154495	WITHOUT_CLASSIFICATION	2.065341845504968E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9998503079380825	WITHOUT_CLASSIFICATION	1.4969206191741346E-4	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999861809812371	WITHOUT_CLASSIFICATION	1.3819018762956943E-5	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9997309905536733	WITHOUT_CLASSIFICATION	2.690094463266911E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999816480469397	WITHOUT_CLASSIFICATION	1.8351953060347755E-5	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9999747050212875	WITHOUT_CLASSIFICATION	2.5294978712540504E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999903273289195	WITHOUT_CLASSIFICATION	9.672671080609343E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999855564273293	WITHOUT_CLASSIFICATION	1.4443572670703337E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999982340907941	WITHOUT_CLASSIFICATION	1.7659092058114806E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.999919448257221	WITHOUT_CLASSIFICATION	8.055174277905321E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999692277173039	WITHOUT_CLASSIFICATION	3.0772282696092266E-5	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999874508739636	WITHOUT_CLASSIFICATION	1.254912603650362E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999765105640226	WITHOUT_CLASSIFICATION	2.3489435977447823E-5	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999765457144655	WITHOUT_CLASSIFICATION	2.3454285534512202E-5	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999799808119956	WITHOUT_CLASSIFICATION	2.001918800436178E-5	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999928252572612	WITHOUT_CLASSIFICATION	7.174742738779236E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9997435434603984	WITHOUT_CLASSIFICATION	2.564565396016861E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.999988094921965	WITHOUT_CLASSIFICATION	1.1905078034800793E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999924799989999	WITHOUT_CLASSIFICATION	7.520001000050115E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999880337507178	WITHOUT_CLASSIFICATION	1.196624928237377E-5	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999697765872866	WITHOUT_CLASSIFICATION	3.0223412713353058E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9998701034676026	WITHOUT_CLASSIFICATION	1.2989653239742197E-4	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999997081390203	WITHOUT_CLASSIFICATION	2.9186097970105834E-6	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999971869115305	WITHOUT_CLASSIFICATION	2.81308846941783E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999758132265736	WITHOUT_CLASSIFICATION	2.418677342637029E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999656702342787	WITHOUT_CLASSIFICATION	3.432976572128958E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999693928555102	WITHOUT_CLASSIFICATION	3.0607144489768566E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999893216600124	WITHOUT_CLASSIFICATION	1.0678339987583761E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.999983534971073	WITHOUT_CLASSIFICATION	1.6465028926996055E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999619716077611	WITHOUT_CLASSIFICATION	3.802839223893179E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999981906434439	WITHOUT_CLASSIFICATION	1.8093565562438203E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999988604514473	WITHOUT_CLASSIFICATION	1.1395485527586982E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999974321625089	WITHOUT_CLASSIFICATION	2.5678374910798807E-6	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999991632394957	WITHOUT_CLASSIFICATION	8.367605044153858E-7	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999986307987686	WITHOUT_CLASSIFICATION	1.369201231500979E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999998412689275	WITHOUT_CLASSIFICATION	1.587310724887919E-7	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999954313952819	WITHOUT_CLASSIFICATION	4.5686047181274735E-6	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999968608244117	WITHOUT_CLASSIFICATION	3.1391755881341687E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999987450405452	WITHOUT_CLASSIFICATION	1.254959454693798E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.999983124241044	WITHOUT_CLASSIFICATION	1.6875758956003787E-5	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999709829747092	WITHOUT_CLASSIFICATION	2.9017025290826637E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999947832565169	WITHOUT_CLASSIFICATION	5.2167434830920156E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999984607823195	WITHOUT_CLASSIFICATION	1.5392176805318986E-6	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999998614806805	WITHOUT_CLASSIFICATION	1.3851931951059599E-6	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999987056072545	WITHOUT_CLASSIFICATION	1.2943927455336573E-6	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999860923814236	WITHOUT_CLASSIFICATION	1.3907618576383262E-5	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999969256516208	WITHOUT_CLASSIFICATION	3.0743483791294654E-6	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9998923785439012	WITHOUT_CLASSIFICATION	1.0762145609879639E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9998396464792175	WITHOUT_CLASSIFICATION	1.603535207824557E-4	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999894239454077	WITHOUT_CLASSIFICATION	1.0576054592224335E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9998942962334951	WITHOUT_CLASSIFICATION	1.0570376650485679E-4	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.99999415399843	WITHOUT_CLASSIFICATION	5.846001569980059E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999932036835518	WITHOUT_CLASSIFICATION	6.796316448164408E-6	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999984385077276	WITHOUT_CLASSIFICATION	1.5614922724116105E-6	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999984118207037	WITHOUT_CLASSIFICATION	1.5881792962228948E-6	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999987375423002	WITHOUT_CLASSIFICATION	1.2624576997937223E-6	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999968939837867	WITHOUT_CLASSIFICATION	3.1060162132790426E-6	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999952720129552	WITHOUT_CLASSIFICATION	4.727987044749135E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999977145378512	WITHOUT_CLASSIFICATION	2.285462148735869E-6	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.999999281737863	WITHOUT_CLASSIFICATION	7.182621370638787E-7	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999933150984616	WITHOUT_CLASSIFICATION	6.684901538448942E-6	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999874401485006	WITHOUT_CLASSIFICATION	1.25598514994807E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999988968805978	WITHOUT_CLASSIFICATION	1.103119402170461E-6	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.999990476932693	WITHOUT_CLASSIFICATION	9.52306730703538E-6	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999772209196602	WITHOUT_CLASSIFICATION	2.2779080339753442E-5	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999959792931318	WITHOUT_CLASSIFICATION	4.0207068682893365E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.999956032782795	WITHOUT_CLASSIFICATION	4.396721720504283E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999693704651312	WITHOUT_CLASSIFICATION	3.0629534868784145E-5	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999999201067279	WITHOUT_CLASSIFICATION	7.989327211278369E-8	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999989725123534	WITHOUT_CLASSIFICATION	1.0274876466397252E-6	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.999998955372332	WITHOUT_CLASSIFICATION	1.044627668052473E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999986537580567	WITHOUT_CLASSIFICATION	1.3462419433112343E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999979579823679	WITHOUT_CLASSIFICATION	2.0420176320089516E-6	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9998150396903696	WITHOUT_CLASSIFICATION	1.8496030963052694E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.999643452535232	WITHOUT_CLASSIFICATION	3.5654746476795554E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999958138912327	WITHOUT_CLASSIFICATION	4.186108767352239E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999990212878028	WITHOUT_CLASSIFICATION	9.787121971499102E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999999014502138	WITHOUT_CLASSIFICATION	9.854978619350302E-7	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999993383572725	WITHOUT_CLASSIFICATION	6.616427275182289E-7	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999968575611722	WITHOUT_CLASSIFICATION	3.142438827829068E-6	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999905247275653	WITHOUT_CLASSIFICATION	9.475272434610974E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999991486839747	WITHOUT_CLASSIFICATION	8.513160253385133E-7	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999902284155348	WITHOUT_CLASSIFICATION	9.771584465285577E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999985546891887	WITHOUT_CLASSIFICATION	1.4453108112958742E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999970963095989	WITHOUT_CLASSIFICATION	2.9036904011581305E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9995481108814699	WITHOUT_CLASSIFICATION	4.5188911853013186E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999984205757121	WITHOUT_CLASSIFICATION	1.5794242878615877E-6	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999979412861981	WITHOUT_CLASSIFICATION	2.0587138018221715E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999589449562111	WITHOUT_CLASSIFICATION	4.1055043788817975E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.999993025363996	WITHOUT_CLASSIFICATION	6.974636003882138E-6	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999943733956068	WITHOUT_CLASSIFICATION	5.626604393163932E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999979616438096	WITHOUT_CLASSIFICATION	2.0383561904342343E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999838885348841	WITHOUT_CLASSIFICATION	1.6111465115901894E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999922130916917	WITHOUT_CLASSIFICATION	7.786908308231285E-6	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999994307953411	WITHOUT_CLASSIFICATION	5.69204658878041E-7	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999848562514927	WITHOUT_CLASSIFICATION	1.5143748507284498E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999985610012474	WITHOUT_CLASSIFICATION	1.438998752635161E-6	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999955632855876	WITHOUT_CLASSIFICATION	4.436714412416442E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.999983035351273	WITHOUT_CLASSIFICATION	1.6964648726968502E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.999887703634876	WITHOUT_CLASSIFICATION	1.1229636512401996E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999854632685156	WITHOUT_CLASSIFICATION	1.4536731484432099E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999893839034482	WITHOUT_CLASSIFICATION	1.061609655188671E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999888299925841	WITHOUT_CLASSIFICATION	1.1170007415953007E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999880498171314	WITHOUT_CLASSIFICATION	1.1950182868577102E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999877116889481	WITHOUT_CLASSIFICATION	1.228831105196368E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863360001616	WITHOUT_CLASSIFICATION	1.3663999838374467E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988855277966	WITHOUT_CLASSIFICATION	1.1144722034027047E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986225550089	WITHOUT_CLASSIFICATION	1.3774449910962615E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999883471275449	WITHOUT_CLASSIFICATION	1.165287245509552E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867175426786	WITHOUT_CLASSIFICATION	1.3282457321390513E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999855098939096	WITHOUT_CLASSIFICATION	1.4490106090567207E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999872131147856	WITHOUT_CLASSIFICATION	1.2786885214441234E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863844193816	WITHOUT_CLASSIFICATION	1.3615580618440999E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999872388374299	WITHOUT_CLASSIFICATION	1.2761162569990783E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999861004032633	WITHOUT_CLASSIFICATION	1.38995967367676E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999987310740713	WITHOUT_CLASSIFICATION	1.2689259286908587E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999988160552798	WITHOUT_CLASSIFICATION	1.1839447201902376E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999870648970622	WITHOUT_CLASSIFICATION	1.293510293788564E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999886772235431	WITHOUT_CLASSIFICATION	1.1322776456834408E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999881899339561	WITHOUT_CLASSIFICATION	1.1810066043968409E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999865054779036	WITHOUT_CLASSIFICATION	1.3494522096363834E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999883847779326	WITHOUT_CLASSIFICATION	1.1615222067338844E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999860729664513	WITHOUT_CLASSIFICATION	1.392703354876694E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867191445515	WITHOUT_CLASSIFICATION	1.3280855448474591E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999878661104685	WITHOUT_CLASSIFICATION	1.213388953145031E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999873381398687	WITHOUT_CLASSIFICATION	1.2661860131291786E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880700227212	WITHOUT_CLASSIFICATION	1.1929977278786032E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999870648970622	WITHOUT_CLASSIFICATION	1.293510293788564E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880700227212	WITHOUT_CLASSIFICATION	1.1929977278786032E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892891973426	WITHOUT_CLASSIFICATION	1.0710802657340801E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876477599368	WITHOUT_CLASSIFICATION	1.235224006321497E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999874670610948	WITHOUT_CLASSIFICATION	1.2532938905196828E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999883750640505	WITHOUT_CLASSIFICATION	1.1624935949633559E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999882390829791	WITHOUT_CLASSIFICATION	1.1760917020930102E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999884243596091	WITHOUT_CLASSIFICATION	1.1575640390926607E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880806601696	WITHOUT_CLASSIFICATION	1.1919339830399187E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880806601696	WITHOUT_CLASSIFICATION	1.1919339830399187E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999869699392511	WITHOUT_CLASSIFICATION	1.3030060748931692E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999892432557688	WITHOUT_CLASSIFICATION	1.0756744231241216E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999873440966863	WITHOUT_CLASSIFICATION	1.26559033136123E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988005852489	WITHOUT_CLASSIFICATION	1.1994147510918982E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999870443767331	WITHOUT_CLASSIFICATION	1.2955623266759984E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999870283338385	WITHOUT_CLASSIFICATION	1.297166616147874E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999863771910836	WITHOUT_CLASSIFICATION	1.3622808916263933E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999870648970622	WITHOUT_CLASSIFICATION	1.293510293788564E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876064666153	WITHOUT_CLASSIFICATION	1.2393533384733047E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892602113732	WITHOUT_CLASSIFICATION	1.0739788626623953E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863674404263	WITHOUT_CLASSIFICATION	1.3632559573581859E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999884143157278	WITHOUT_CLASSIFICATION	1.158568427223068E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999881097579034	WITHOUT_CLASSIFICATION	1.1890242096567951E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999868569512524	WITHOUT_CLASSIFICATION	1.3143048747635678E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999856441468561	WITHOUT_CLASSIFICATION	1.4355853143892662E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999867495277998	WITHOUT_CLASSIFICATION	1.3250472200268755E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863700256467	WITHOUT_CLASSIFICATION	1.3629974353215279E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863700256467	WITHOUT_CLASSIFICATION	1.3629974353215279E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875367679208	WITHOUT_CLASSIFICATION	1.246323207916187E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875367679208	WITHOUT_CLASSIFICATION	1.246323207916187E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999872480486649	WITHOUT_CLASSIFICATION	1.2751951335039342E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999868581893305	WITHOUT_CLASSIFICATION	1.3141810669533987E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999870648970622	WITHOUT_CLASSIFICATION	1.293510293788564E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999886772235431	WITHOUT_CLASSIFICATION	1.1322776456834408E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880806601696	WITHOUT_CLASSIFICATION	1.1919339830399187E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999856441468561	WITHOUT_CLASSIFICATION	1.4355853143892662E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863700256467	WITHOUT_CLASSIFICATION	1.3629974353215279E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875367679208	WITHOUT_CLASSIFICATION	1.246323207916187E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999868581893305	WITHOUT_CLASSIFICATION	1.3141810669533987E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999882896342128	WITHOUT_CLASSIFICATION	1.1710365787127472E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892243083905	WITHOUT_CLASSIFICATION	1.077569160940421E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999882543646911	WITHOUT_CLASSIFICATION	1.1745635308974464E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999893119831552	WITHOUT_CLASSIFICATION	1.068801684489163E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999988275591112	WITHOUT_CLASSIFICATION	1.1724408887977874E-5	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889014513572	WITHOUT_CLASSIFICATION	1.1098548642869767E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999863763859361	WITHOUT_CLASSIFICATION	1.3623614063781382E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880806601696	WITHOUT_CLASSIFICATION	1.1919339830399187E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988028617632	WITHOUT_CLASSIFICATION	1.1971382368064306E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999863763859361	WITHOUT_CLASSIFICATION	1.3623614063781382E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867171102332	WITHOUT_CLASSIFICATION	1.3282889766721435E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999881126466539	WITHOUT_CLASSIFICATION	1.1887353346188524E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988097007221	WITHOUT_CLASSIFICATION	1.1902992779036628E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999884590709069	WITHOUT_CLASSIFICATION	1.1540929092979899E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999884028766838	WITHOUT_CLASSIFICATION	1.1597123316289455E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999874048385412	WITHOUT_CLASSIFICATION	1.2595161458890747E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999890635971919	WITHOUT_CLASSIFICATION	1.0936402808203659E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999877851567258	WITHOUT_CLASSIFICATION	1.2214843274211812E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999858395162604	WITHOUT_CLASSIFICATION	1.41604837396295E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999858877950419	WITHOUT_CLASSIFICATION	1.4112204958088065E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999872796386722	WITHOUT_CLASSIFICATION	1.2720361327953774E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863876121231	WITHOUT_CLASSIFICATION	1.3612387876938612E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880690390742	WITHOUT_CLASSIFICATION	1.1930960925867346E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999854470447005	WITHOUT_CLASSIFICATION	1.455295529951928E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999983699614968	WITHOUT_CLASSIFICATION	1.630038503187427E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999881158139587	WITHOUT_CLASSIFICATION	1.1884186041198079E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999861818492057	WITHOUT_CLASSIFICATION	1.381815079429051E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999848201983988	WITHOUT_CLASSIFICATION	1.5179801601248236E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999844211619511	WITHOUT_CLASSIFICATION	1.5578838048976832E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999844653583679	WITHOUT_CLASSIFICATION	1.5534641632049765E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999924799989999	WITHOUT_CLASSIFICATION	7.520001000050115E-6	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988365835201	WITHOUT_CLASSIFICATION	1.163416479908453E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999883427296963	WITHOUT_CLASSIFICATION	1.1657270303839945E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999878250553413	WITHOUT_CLASSIFICATION	1.2174944658697946E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999872796386722	WITHOUT_CLASSIFICATION	1.2720361327953774E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986126915981	WITHOUT_CLASSIFICATION	1.3873084019033426E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999878299258753	WITHOUT_CLASSIFICATION	1.2170074124600836E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999892374758522	WITHOUT_CLASSIFICATION	1.0762524147702319E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.999985950521078	WITHOUT_CLASSIFICATION	1.4049478921960906E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999873956197424	WITHOUT_CLASSIFICATION	1.2604380257683622E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999920023406844	WITHOUT_CLASSIFICATION	7.99765931568701E-6	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999928235717475	WITHOUT_CLASSIFICATION	7.176428252586119E-6	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999918672185764	WITHOUT_CLASSIFICATION	8.132781423718273E-6	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999951561328707	WITHOUT_CLASSIFICATION	4.843867129362673E-6	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999921184295374	WITHOUT_CLASSIFICATION	7.88157046254133E-6	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999945805443704	WITHOUT_CLASSIFICATION	5.419455629508314E-6	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.999991181879095	WITHOUT_CLASSIFICATION	8.818120904967347E-6	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999992738060188	WITHOUT_CLASSIFICATION	7.26193981200016E-6	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9998767575960703	WITHOUT_CLASSIFICATION	1.232424039297188E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999922130916917	WITHOUT_CLASSIFICATION	7.786908308231285E-6	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999499062207267	WITHOUT_CLASSIFICATION	5.0093779273335344E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999922638619315	WITHOUT_CLASSIFICATION	7.736138068524321E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999229480463258	WITHOUT_CLASSIFICATION	7.705195367424657E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999464350703505	WITHOUT_CLASSIFICATION	5.3564929649435094E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999803394616519	WITHOUT_CLASSIFICATION	1.966053834815929E-5	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999657532269846	WITHOUT_CLASSIFICATION	3.424677301538714E-5	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999629098849062	WITHOUT_CLASSIFICATION	3.709011509380337E-5	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999922562117559	WITHOUT_CLASSIFICATION	7.74378824400352E-6	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999936842177163	WITHOUT_CLASSIFICATION	6.315782283782235E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999867892126754	WITHOUT_CLASSIFICATION	1.32107873246554E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999995440854188	WITHOUT_CLASSIFICATION	4.5591458129834306E-7	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9997907496286814	WITHOUT_CLASSIFICATION	2.0925037131846913E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999825911511369	WITHOUT_CLASSIFICATION	1.7408848863176114E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998581576715562	WITHOUT_CLASSIFICATION	1.418423284437873E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999498402621783	WITHOUT_CLASSIFICATION	5.015973782177437E-5	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9997934658154495	WITHOUT_CLASSIFICATION	2.065341845504968E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9998503079380825	WITHOUT_CLASSIFICATION	1.4969206191741346E-4	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999861809812371	WITHOUT_CLASSIFICATION	1.3819018762956943E-5	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9997309905536733	WITHOUT_CLASSIFICATION	2.690094463266911E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999816480469397	WITHOUT_CLASSIFICATION	1.8351953060347755E-5	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999468703678973	WITHOUT_CLASSIFICATION	5.312963210281606E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999589449562111	WITHOUT_CLASSIFICATION	4.1055043788817975E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999982340907941	WITHOUT_CLASSIFICATION	1.7659092058114806E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999692277173039	WITHOUT_CLASSIFICATION	3.0772282696092266E-5	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999928252572612	WITHOUT_CLASSIFICATION	7.174742738779236E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9997435434603984	WITHOUT_CLASSIFICATION	2.564565396016861E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.999988094921965	WITHOUT_CLASSIFICATION	1.1905078034800793E-5	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999855564273293	WITHOUT_CLASSIFICATION	1.4443572670703337E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.999919448257221	WITHOUT_CLASSIFICATION	8.055174277905321E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999924799989999	WITHOUT_CLASSIFICATION	7.520001000050115E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999765105640226	WITHOUT_CLASSIFICATION	2.3489435977447823E-5	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999800147749496	WITHOUT_CLASSIFICATION	1.998522505043114E-5	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999874508739636	WITHOUT_CLASSIFICATION	1.254912603650362E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9998701034676026	WITHOUT_CLASSIFICATION	1.2989653239742197E-4	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999997081390203	WITHOUT_CLASSIFICATION	2.9186097970105834E-6	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999971869115305	WITHOUT_CLASSIFICATION	2.81308846941783E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999922130916917	WITHOUT_CLASSIFICATION	7.786908308231285E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999881645981238	WITHOUT_CLASSIFICATION	1.1835401876119913E-5	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999989852666786	WITHOUT_CLASSIFICATION	1.0147333213598688E-6	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999656702342787	WITHOUT_CLASSIFICATION	3.432976572128958E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999893216600124	WITHOUT_CLASSIFICATION	1.0678339987583761E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999909758466509	WITHOUT_CLASSIFICATION	9.024153349202738E-6	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.999983534971073	WITHOUT_CLASSIFICATION	1.6465028926996055E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999619716077611	WITHOUT_CLASSIFICATION	3.802839223893179E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999988604514473	WITHOUT_CLASSIFICATION	1.1395485527586982E-6	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999965191639976	WITHOUT_CLASSIFICATION	3.4808360023710993E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999974321625089	WITHOUT_CLASSIFICATION	2.5678374910798807E-6	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999991632394957	WITHOUT_CLASSIFICATION	8.367605044153858E-7	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999986307987686	WITHOUT_CLASSIFICATION	1.369201231500979E-6	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.999991312552263	WITHOUT_CLASSIFICATION	8.687447736985073E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999998412689275	WITHOUT_CLASSIFICATION	1.587310724887919E-7	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999982247525595	WITHOUT_CLASSIFICATION	1.7752474405953455E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.999983124241044	WITHOUT_CLASSIFICATION	1.6875758956003787E-5	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999954313952819	WITHOUT_CLASSIFICATION	4.5686047181274735E-6	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999968608244117	WITHOUT_CLASSIFICATION	3.1391755881341687E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999947832565169	WITHOUT_CLASSIFICATION	5.2167434830920156E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999984607823195	WITHOUT_CLASSIFICATION	1.5392176805318986E-6	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999998614806805	WITHOUT_CLASSIFICATION	1.3851931951059599E-6	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999967389888632	WITHOUT_CLASSIFICATION	3.2610111367320765E-6	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999987056072545	WITHOUT_CLASSIFICATION	1.2943927455336573E-6	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999860923814236	WITHOUT_CLASSIFICATION	1.3907618576383262E-5	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999969256516208	WITHOUT_CLASSIFICATION	3.0743483791294654E-6	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9998923785439012	WITHOUT_CLASSIFICATION	1.0762145609879639E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9998396464792175	WITHOUT_CLASSIFICATION	1.603535207824557E-4	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999894239454077	WITHOUT_CLASSIFICATION	1.0576054592224335E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9998942962334951	WITHOUT_CLASSIFICATION	1.0570376650485679E-4	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.99999415399843	WITHOUT_CLASSIFICATION	5.846001569980059E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999932036835518	WITHOUT_CLASSIFICATION	6.796316448164408E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999932036835518	WITHOUT_CLASSIFICATION	6.796316448164408E-6	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999984385077276	WITHOUT_CLASSIFICATION	1.5614922724116105E-6	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999984118207037	WITHOUT_CLASSIFICATION	1.5881792962228948E-6	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999987375423002	WITHOUT_CLASSIFICATION	1.2624576997937223E-6	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999968939837867	WITHOUT_CLASSIFICATION	3.1060162132790426E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999977145378512	WITHOUT_CLASSIFICATION	2.285462148735869E-6	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.999999281737863	WITHOUT_CLASSIFICATION	7.182621370638787E-7	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999933150984616	WITHOUT_CLASSIFICATION	6.684901538448942E-6	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999874401485006	WITHOUT_CLASSIFICATION	1.25598514994807E-5	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.999990476932693	WITHOUT_CLASSIFICATION	9.52306730703538E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999947680808646	WITHOUT_CLASSIFICATION	5.231919135323371E-6	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999772209196602	WITHOUT_CLASSIFICATION	2.2779080339753442E-5	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999959792931318	WITHOUT_CLASSIFICATION	4.0207068682893365E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.999956032782795	WITHOUT_CLASSIFICATION	4.396721720504283E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999693704651312	WITHOUT_CLASSIFICATION	3.0629534868784145E-5	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999999201067279	WITHOUT_CLASSIFICATION	7.989327211278369E-8	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.999998955372332	WITHOUT_CLASSIFICATION	1.044627668052473E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999986537580567	WITHOUT_CLASSIFICATION	1.3462419433112343E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999979579823679	WITHOUT_CLASSIFICATION	2.0420176320089516E-6	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9998150396903696	WITHOUT_CLASSIFICATION	1.8496030963052694E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.999643452535232	WITHOUT_CLASSIFICATION	3.5654746476795554E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999958138912327	WITHOUT_CLASSIFICATION	4.186108767352239E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999990212878028	WITHOUT_CLASSIFICATION	9.787121971499102E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999999014502138	WITHOUT_CLASSIFICATION	9.854978619350302E-7	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999993383572725	WITHOUT_CLASSIFICATION	6.616427275182289E-7	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999968575611722	WITHOUT_CLASSIFICATION	3.142438827829068E-6	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999905247275653	WITHOUT_CLASSIFICATION	9.475272434610974E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999902284155348	WITHOUT_CLASSIFICATION	9.771584465285577E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999970963095989	WITHOUT_CLASSIFICATION	2.9036904011581305E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9995481108814699	WITHOUT_CLASSIFICATION	4.5188911853013186E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999984205757121	WITHOUT_CLASSIFICATION	1.5794242878615877E-6	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999979412861981	WITHOUT_CLASSIFICATION	2.0587138018221715E-6	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999914487700984	WITHOUT_CLASSIFICATION	8.55122990163176E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.999959184409648	WITHOUT_CLASSIFICATION	4.081559035198997E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999949500991754	WITHOUT_CLASSIFICATION	5.049900824597165E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.999993025363996	WITHOUT_CLASSIFICATION	6.974636003882138E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999976503137727	WITHOUT_CLASSIFICATION	2.3496862272827576E-6	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999943733956068	WITHOUT_CLASSIFICATION	5.626604393163932E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999979616438096	WITHOUT_CLASSIFICATION	2.0383561904342343E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999838885348841	WITHOUT_CLASSIFICATION	1.6111465115901894E-5	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999994831877965	WITHOUT_CLASSIFICATION	5.168122034268617E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999994307953411	WITHOUT_CLASSIFICATION	5.69204658878041E-7	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999848562514927	WITHOUT_CLASSIFICATION	1.5143748507284498E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999985610012474	WITHOUT_CLASSIFICATION	1.438998752635161E-6	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999955632855876	WITHOUT_CLASSIFICATION	4.436714412416442E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.999983035351273	WITHOUT_CLASSIFICATION	1.6964648726968502E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.999887703634876	WITHOUT_CLASSIFICATION	1.1229636512401996E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999854632685156	WITHOUT_CLASSIFICATION	1.4536731484432099E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999893839034482	WITHOUT_CLASSIFICATION	1.061609655188671E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999888299925841	WITHOUT_CLASSIFICATION	1.1170007415953007E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999877116889481	WITHOUT_CLASSIFICATION	1.228831105196368E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863360001616	WITHOUT_CLASSIFICATION	1.3663999838374467E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988855277966	WITHOUT_CLASSIFICATION	1.1144722034027047E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986225550089	WITHOUT_CLASSIFICATION	1.3774449910962615E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863833861643	WITHOUT_CLASSIFICATION	1.3616613835684905E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999883471275449	WITHOUT_CLASSIFICATION	1.165287245509552E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867175426786	WITHOUT_CLASSIFICATION	1.3282457321390513E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999855098939096	WITHOUT_CLASSIFICATION	1.4490106090567207E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999872131147856	WITHOUT_CLASSIFICATION	1.2786885214441234E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863844193816	WITHOUT_CLASSIFICATION	1.3615580618440999E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999872388374299	WITHOUT_CLASSIFICATION	1.2761162569990783E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999861004032633	WITHOUT_CLASSIFICATION	1.38995967367676E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999878597013658	WITHOUT_CLASSIFICATION	1.2140298634175735E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999988160552798	WITHOUT_CLASSIFICATION	1.1839447201902376E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999870648970622	WITHOUT_CLASSIFICATION	1.293510293788564E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999886772235431	WITHOUT_CLASSIFICATION	1.1322776456834408E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999865054779036	WITHOUT_CLASSIFICATION	1.3494522096363834E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999883847779326	WITHOUT_CLASSIFICATION	1.1615222067338844E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999860729664513	WITHOUT_CLASSIFICATION	1.392703354876694E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867191445515	WITHOUT_CLASSIFICATION	1.3280855448474591E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999878661104685	WITHOUT_CLASSIFICATION	1.213388953145031E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892930136894	WITHOUT_CLASSIFICATION	1.070698631059518E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999873381398687	WITHOUT_CLASSIFICATION	1.2661860131291786E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880700227212	WITHOUT_CLASSIFICATION	1.1929977278786032E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876477599368	WITHOUT_CLASSIFICATION	1.235224006321497E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880806601696	WITHOUT_CLASSIFICATION	1.1919339830399187E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880806601696	WITHOUT_CLASSIFICATION	1.1919339830399187E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999892432557688	WITHOUT_CLASSIFICATION	1.0756744231241216E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880700227212	WITHOUT_CLASSIFICATION	1.1929977278786032E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999874670610948	WITHOUT_CLASSIFICATION	1.2532938905196828E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999883750640505	WITHOUT_CLASSIFICATION	1.1624935949633559E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999882390829791	WITHOUT_CLASSIFICATION	1.1760917020930102E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999884243596091	WITHOUT_CLASSIFICATION	1.1575640390926607E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880806601696	WITHOUT_CLASSIFICATION	1.1919339830399187E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999869699392511	WITHOUT_CLASSIFICATION	1.3030060748931692E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999873440966863	WITHOUT_CLASSIFICATION	1.26559033136123E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988005852489	WITHOUT_CLASSIFICATION	1.1994147510918982E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999870443767331	WITHOUT_CLASSIFICATION	1.2955623266759984E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999870283338385	WITHOUT_CLASSIFICATION	1.297166616147874E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999863771910836	WITHOUT_CLASSIFICATION	1.3622808916263933E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999988431339715	WITHOUT_CLASSIFICATION	1.1568660284899112E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988545773373	WITHOUT_CLASSIFICATION	1.1454226627044065E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892602113732	WITHOUT_CLASSIFICATION	1.0739788626623953E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863674404263	WITHOUT_CLASSIFICATION	1.3632559573581859E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999881097579034	WITHOUT_CLASSIFICATION	1.1890242096567951E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999870648970622	WITHOUT_CLASSIFICATION	1.293510293788564E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999870648970622	WITHOUT_CLASSIFICATION	1.293510293788564E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999884143157278	WITHOUT_CLASSIFICATION	1.158568427223068E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999868569512524	WITHOUT_CLASSIFICATION	1.3143048747635678E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999856441468561	WITHOUT_CLASSIFICATION	1.4355853143892662E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863700256467	WITHOUT_CLASSIFICATION	1.3629974353215279E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863700256467	WITHOUT_CLASSIFICATION	1.3629974353215279E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875367679208	WITHOUT_CLASSIFICATION	1.246323207916187E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875367679208	WITHOUT_CLASSIFICATION	1.246323207916187E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999872480486649	WITHOUT_CLASSIFICATION	1.2751951335039342E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999872480486649	WITHOUT_CLASSIFICATION	1.2751951335039342E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999868581893305	WITHOUT_CLASSIFICATION	1.3141810669533987E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999882896342128	WITHOUT_CLASSIFICATION	1.1710365787127472E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999886772235431	WITHOUT_CLASSIFICATION	1.1322776456834408E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880806601696	WITHOUT_CLASSIFICATION	1.1919339830399187E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999856441468561	WITHOUT_CLASSIFICATION	1.4355853143892662E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863700256467	WITHOUT_CLASSIFICATION	1.3629974353215279E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999875367679208	WITHOUT_CLASSIFICATION	1.246323207916187E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999892243083905	WITHOUT_CLASSIFICATION	1.077569160940421E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999882543646911	WITHOUT_CLASSIFICATION	1.1745635308974464E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999893119831552	WITHOUT_CLASSIFICATION	1.068801684489163E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999988275591112	WITHOUT_CLASSIFICATION	1.1724408887977874E-5	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889014513572	WITHOUT_CLASSIFICATION	1.1098548642869767E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988028617632	WITHOUT_CLASSIFICATION	1.1971382368064306E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988028617632	WITHOUT_CLASSIFICATION	1.1971382368064306E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999863763859361	WITHOUT_CLASSIFICATION	1.3623614063781382E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867171102332	WITHOUT_CLASSIFICATION	1.3282889766721435E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999881126466539	WITHOUT_CLASSIFICATION	1.1887353346188524E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988097007221	WITHOUT_CLASSIFICATION	1.1902992779036628E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999884590709069	WITHOUT_CLASSIFICATION	1.1540929092979899E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986422357552	WITHOUT_CLASSIFICATION	1.357764244797203E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880806601696	WITHOUT_CLASSIFICATION	1.1919339830399187E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999863763859361	WITHOUT_CLASSIFICATION	1.3623614063781382E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999884028766838	WITHOUT_CLASSIFICATION	1.1597123316289455E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999874048385412	WITHOUT_CLASSIFICATION	1.2595161458890747E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999890635971919	WITHOUT_CLASSIFICATION	1.0936402808203659E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999858395162604	WITHOUT_CLASSIFICATION	1.41604837396295E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999858877950419	WITHOUT_CLASSIFICATION	1.4112204958088065E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999872796386722	WITHOUT_CLASSIFICATION	1.2720361327953774E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863876121231	WITHOUT_CLASSIFICATION	1.3612387876938612E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880690390742	WITHOUT_CLASSIFICATION	1.1930960925867346E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999854470447005	WITHOUT_CLASSIFICATION	1.455295529951928E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999983699614968	WITHOUT_CLASSIFICATION	1.630038503187427E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999881158139587	WITHOUT_CLASSIFICATION	1.1884186041198079E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999861818492057	WITHOUT_CLASSIFICATION	1.381815079429051E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999848201983988	WITHOUT_CLASSIFICATION	1.5179801601248236E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999844211619511	WITHOUT_CLASSIFICATION	1.5578838048976832E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999844653583679	WITHOUT_CLASSIFICATION	1.5534641632049765E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999863094012034	WITHOUT_CLASSIFICATION	1.3690598796608556E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999878250553413	WITHOUT_CLASSIFICATION	1.2174944658697946E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999872796386722	WITHOUT_CLASSIFICATION	1.2720361327953774E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986126915981	WITHOUT_CLASSIFICATION	1.3873084019033426E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999878299258753	WITHOUT_CLASSIFICATION	1.2170074124600836E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999892374758522	WITHOUT_CLASSIFICATION	1.0762524147702319E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999881645981238	WITHOUT_CLASSIFICATION	1.1835401876119913E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.999985950521078	WITHOUT_CLASSIFICATION	1.4049478921960906E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999873956197424	WITHOUT_CLASSIFICATION	1.2604380257683622E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999920023406844	WITHOUT_CLASSIFICATION	7.99765931568701E-6	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999928235717475	WITHOUT_CLASSIFICATION	7.176428252586119E-6	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999918672185764	WITHOUT_CLASSIFICATION	8.132781423718273E-6	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999951561328707	WITHOUT_CLASSIFICATION	4.843867129362673E-6	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999921184295374	WITHOUT_CLASSIFICATION	7.88157046254133E-6	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999945805443704	WITHOUT_CLASSIFICATION	5.419455629508314E-6	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.999991181879095	WITHOUT_CLASSIFICATION	8.818120904967347E-6	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999992738060188	WITHOUT_CLASSIFICATION	7.26193981200016E-6	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9998767575960703	WITHOUT_CLASSIFICATION	1.232424039297188E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999922130916917	WITHOUT_CLASSIFICATION	7.786908308231285E-6	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999499062207267	WITHOUT_CLASSIFICATION	5.0093779273335344E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999922638619315	WITHOUT_CLASSIFICATION	7.736138068524321E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999229480463258	WITHOUT_CLASSIFICATION	7.705195367424657E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999464350703505	WITHOUT_CLASSIFICATION	5.3564929649435094E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999924799989999	WITHOUT_CLASSIFICATION	7.520001000050115E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999803394616519	WITHOUT_CLASSIFICATION	1.966053834815929E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999803394616519	WITHOUT_CLASSIFICATION	1.966053834815929E-5	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999629098849062	WITHOUT_CLASSIFICATION	3.709011509380337E-5	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999922562117559	WITHOUT_CLASSIFICATION	7.74378824400352E-6	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999989852666786	WITHOUT_CLASSIFICATION	1.0147333213598688E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999936301930887	WITHOUT_CLASSIFICATION	6.369806911275895E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999936301930887	WITHOUT_CLASSIFICATION	6.369806911275895E-6	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9994505962814899	WITHOUT_CLASSIFICATION	5.494037185101501E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9996979552726574	WITHOUT_CLASSIFICATION	3.0204472734262266E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.999999860999734	WITHOUT_CLASSIFICATION	1.3900026598360353E-7	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999998514063417	WITHOUT_CLASSIFICATION	1.4859365817204525E-7	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9999895849461038	WITHOUT_CLASSIFICATION	1.0415053896173651E-5	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999995978058853	WITHOUT_CLASSIFICATION	4.0219411471085093E-7	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999993325838643	WITHOUT_CLASSIFICATION	6.674161356836769E-7	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.999982474471607	WITHOUT_CLASSIFICATION	1.752552839292541E-5	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9999999816168519	WITHOUT_CLASSIFICATION	1.83831480850094E-8	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999980012143542	WITHOUT_CLASSIFICATION	1.9987856457371217E-6	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999994431275187	WITHOUT_CLASSIFICATION	5.568724812912279E-7	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999753125303417	WITHOUT_CLASSIFICATION	2.46874696582752E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999976007470208	WITHOUT_CLASSIFICATION	2.3992529791646283E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999996475513642	WITHOUT_CLASSIFICATION	3.5244863581388556E-7	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999989680080916	WITHOUT_CLASSIFICATION	1.0319919083586932E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999999728363226	WITHOUT_CLASSIFICATION	2.716367736801505E-8	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9999942118024115	WITHOUT_CLASSIFICATION	5.788197588402885E-6	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999961332671545	WITHOUT_CLASSIFICATION	3.866732845518292E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999933491907053	WITHOUT_CLASSIFICATION	6.6508092946576355E-6	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999964191162076	WITHOUT_CLASSIFICATION	3.58088379243434E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999898431011466	WITHOUT_CLASSIFICATION	1.0156898853458677E-5	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999984112752993	WITHOUT_CLASSIFICATION	1.5887247007151782E-6	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999914715938736	WITHOUT_CLASSIFICATION	8.528406126461447E-6	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.999999212727176	WITHOUT_CLASSIFICATION	7.872728239875292E-7	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999943177869456	WITHOUT_CLASSIFICATION	5.6822130544200975E-6	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999937950425808	WITHOUT_CLASSIFICATION	6.20495741919588E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999944826985737	WITHOUT_CLASSIFICATION	5.517301426320463E-6	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999992366533071	WITHOUT_CLASSIFICATION	7.633466928736179E-7	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999988965123419	WITHOUT_CLASSIFICATION	1.1034876582165205E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999994265774572	WITHOUT_CLASSIFICATION	5.734225428044041E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999994265774572	WITHOUT_CLASSIFICATION	5.734225428044041E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988741334	WITHOUT_CLASSIFICATION	1.125866599913284E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988741334	WITHOUT_CLASSIFICATION	1.125866599913284E-6	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999948118672636	WITHOUT_CLASSIFICATION	5.1881327364578074E-6	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999999584450042	WITHOUT_CLASSIFICATION	4.155499589573145E-8	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999996165872657	WITHOUT_CLASSIFICATION	3.8341273435245696E-7	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999991561506707	WITHOUT_CLASSIFICATION	8.438493292152705E-7	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9997610852227771	WITHOUT_CLASSIFICATION	2.3891477722282387E-4	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9996545050808894	WITHOUT_CLASSIFICATION	3.4549491911059596E-4	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999177833785955	WITHOUT_CLASSIFICATION	8.221662140460274E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999998370755304	WITHOUT_CLASSIFICATION	1.6292446960218986E-7	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999775907423272	WITHOUT_CLASSIFICATION	2.2409257672852397E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999976740848601	WITHOUT_CLASSIFICATION	2.3259151398442073E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999976740848601	WITHOUT_CLASSIFICATION	2.3259151398442073E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999987148732759	WITHOUT_CLASSIFICATION	1.2851267241263497E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999987148732759	WITHOUT_CLASSIFICATION	1.2851267241263497E-6	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999991706139448	WITHOUT_CLASSIFICATION	8.293860551644153E-7	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999917500689132	WITHOUT_CLASSIFICATION	8.249931086831399E-6	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999990290959645	WITHOUT_CLASSIFICATION	9.709040355183954E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999992970095318	WITHOUT_CLASSIFICATION	7.029904681366232E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999960016745563	WITHOUT_CLASSIFICATION	3.998325443737859E-6	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999975306334802	WITHOUT_CLASSIFICATION	2.4693665198749323E-6	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999984511751662	WITHOUT_CLASSIFICATION	1.5488248339311087E-6	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999345858761263	WITHOUT_CLASSIFICATION	6.541412387367288E-5	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.999996881243151	WITHOUT_CLASSIFICATION	3.118756849017936E-6	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999997961239819	WITHOUT_CLASSIFICATION	2.0387601800559977E-7	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999942912431811	WITHOUT_CLASSIFICATION	5.708756818911248E-6	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999861157407073	WITHOUT_CLASSIFICATION	1.388425929267066E-5	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999990742246073	WITHOUT_CLASSIFICATION	9.257753928219387E-7	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999917143054314	WITHOUT_CLASSIFICATION	8.285694568506084E-6	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999988902973571	WITHOUT_CLASSIFICATION	1.109702642904178E-6	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999977438777745	WITHOUT_CLASSIFICATION	2.2561222254833995E-6	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999648999000448	WITHOUT_CLASSIFICATION	3.51000999552174E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999982434198741	WITHOUT_CLASSIFICATION	1.7565801258827426E-6	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999969802577823	WITHOUT_CLASSIFICATION	3.019742217776005E-6	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999577751436391	WITHOUT_CLASSIFICATION	4.222485636082755E-5	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.999989266546236	WITHOUT_CLASSIFICATION	1.0733453763991763E-5	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999841039035922	WITHOUT_CLASSIFICATION	1.589609640784019E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999983282735709	WITHOUT_CLASSIFICATION	1.6717264290227478E-6	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999814418006392	WITHOUT_CLASSIFICATION	1.8558199360804795E-5	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999994437800052	WITHOUT_CLASSIFICATION	5.562199947465745E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999854008285531	WITHOUT_CLASSIFICATION	1.4599171446973172E-5	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999646841015054	WITHOUT_CLASSIFICATION	3.531589849465644E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999877480031311	WITHOUT_CLASSIFICATION	1.225199686901306E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999877480031311	WITHOUT_CLASSIFICATION	1.225199686901306E-5	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999978819921191	WITHOUT_CLASSIFICATION	2.1180078808646187E-6	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999958540642043	WITHOUT_CLASSIFICATION	4.145935795670679E-6	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999965247832717	WITHOUT_CLASSIFICATION	3.4752167282563383E-6	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999974474807078	WITHOUT_CLASSIFICATION	2.552519292164187E-6	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999762857472092	WITHOUT_CLASSIFICATION	2.371425279082328E-5	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.999985738957925	WITHOUT_CLASSIFICATION	1.4261042074988495E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.999984328999617	WITHOUT_CLASSIFICATION	1.567100038297749E-5	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999969487458923	WITHOUT_CLASSIFICATION	3.0512541076819263E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988741334	WITHOUT_CLASSIFICATION	1.125866599913284E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988741334	WITHOUT_CLASSIFICATION	1.125866599913284E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988741334	WITHOUT_CLASSIFICATION	1.125866599913284E-6	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999854008285531	WITHOUT_CLASSIFICATION	1.4599171446973172E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.999982411506862	WITHOUT_CLASSIFICATION	1.758849313796654E-5	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999805951065442	WITHOUT_CLASSIFICATION	1.940489345566341E-5	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999438032465977	WITHOUT_CLASSIFICATION	5.6196753402280655E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9999979225329847	WITHOUT_CLASSIFICATION	2.0774670153343573E-6	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999967965336408	WITHOUT_CLASSIFICATION	3.2034663591912774E-6	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999908967488187	WITHOUT_CLASSIFICATION	9.103251181365496E-6	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999997470413994	WITHOUT_CLASSIFICATION	2.529586006038173E-7	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.999995439836764	WITHOUT_CLASSIFICATION	4.560163236041707E-6	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999989782026748	WITHOUT_CLASSIFICATION	1.021797325215901E-6	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999909002203633	WITHOUT_CLASSIFICATION	9.099779636594174E-6	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.999996446310409	WITHOUT_CLASSIFICATION	3.5536895910640272E-6	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999995244703827	WITHOUT_CLASSIFICATION	4.7552961730301133E-7	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9994085037281801	WITHOUT_CLASSIFICATION	5.914962718198944E-4	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999992271683437	WITHOUT_CLASSIFICATION	7.728316563903416E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999520033338956	WITHOUT_CLASSIFICATION	4.799666610438712E-5	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999978229507707	WITHOUT_CLASSIFICATION	2.1770492293614063E-6	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9999990584036613	WITHOUT_CLASSIFICATION	9.415963386615678E-7	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.999997205036529	WITHOUT_CLASSIFICATION	2.794963471100199E-6	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999993864478044	WITHOUT_CLASSIFICATION	6.135521955772901E-7	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999979795018987	WITHOUT_CLASSIFICATION	2.020498101352213E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.999992497250466	WITHOUT_CLASSIFICATION	7.502749534019286E-6	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.999994172462763	WITHOUT_CLASSIFICATION	5.827537236931466E-6	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999985077406707	WITHOUT_CLASSIFICATION	1.4922593292925108E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999931713958038	WITHOUT_CLASSIFICATION	6.8286041961201615E-6	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999859918912756	WITHOUT_CLASSIFICATION	1.4008108724399894E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988741334	WITHOUT_CLASSIFICATION	1.125866599913284E-6	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999997470413994	WITHOUT_CLASSIFICATION	2.529586006038173E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999520033338956	WITHOUT_CLASSIFICATION	4.799666610438712E-5	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999955534514738	WITHOUT_CLASSIFICATION	4.446548526154773E-6	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999967563810976	WITHOUT_CLASSIFICATION	3.2436189024250686E-6	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999978284052248	WITHOUT_CLASSIFICATION	2.1715947752228445E-6	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9999993664022228	WITHOUT_CLASSIFICATION	6.335977772297194E-7	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999994071389947	WITHOUT_CLASSIFICATION	5.928610052538929E-7	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999982597458293	WITHOUT_CLASSIFICATION	1.7402541706985702E-6	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999832204160285	WITHOUT_CLASSIFICATION	1.6779583971519832E-5	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999996983201346	WITHOUT_CLASSIFICATION	3.016798654670531E-7	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9999891988048186	WITHOUT_CLASSIFICATION	1.0801195181450894E-5	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999997023923615	WITHOUT_CLASSIFICATION	2.9760763854894907E-7	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999862007151898	WITHOUT_CLASSIFICATION	1.3799284810088072E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999862007151898	WITHOUT_CLASSIFICATION	1.3799284810088072E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.999996169501797	WITHOUT_CLASSIFICATION	3.830498202979459E-6	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999958167783909	WITHOUT_CLASSIFICATION	4.183221609094017E-6	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999996111713542	WITHOUT_CLASSIFICATION	3.8882864592841643E-7	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999753894275215	WITHOUT_CLASSIFICATION	2.461057247845885E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.999999783548703	WITHOUT_CLASSIFICATION	2.1645129694923406E-7	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999797460025269	WITHOUT_CLASSIFICATION	2.0253997473091308E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999869163882068	WITHOUT_CLASSIFICATION	1.3083611793285437E-5	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999997008977974	WITHOUT_CLASSIFICATION	2.9910220257519447E-7	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999985407106098	WITHOUT_CLASSIFICATION	1.4592893902966741E-6	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999931026465784	WITHOUT_CLASSIFICATION	6.897353421577257E-6	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999994497682031	WITHOUT_CLASSIFICATION	5.502317969100915E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999987148732759	WITHOUT_CLASSIFICATION	1.2851267241263497E-6	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999984511751662	WITHOUT_CLASSIFICATION	1.5488248339311087E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999520033338956	WITHOUT_CLASSIFICATION	4.799666610438712E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.999999783548703	WITHOUT_CLASSIFICATION	2.1645129694923406E-7	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999797460025269	WITHOUT_CLASSIFICATION	2.0253997473091308E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999948470356088	WITHOUT_CLASSIFICATION	5.152964391136039E-6	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999949529212512	WITHOUT_CLASSIFICATION	5.047078748738277E-6	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999953969892524	WITHOUT_CLASSIFICATION	4.603010747618761E-6	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.999989572756657	WITHOUT_CLASSIFICATION	1.0427243342974227E-5	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999646076825945	WITHOUT_CLASSIFICATION	3.5392317405426875E-5	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999883345994506	WITHOUT_CLASSIFICATION	1.1665400549440623E-5	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9999726160028513	WITHOUT_CLASSIFICATION	2.7383997148822492E-5	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999910901837036	WITHOUT_CLASSIFICATION	8.909816296464687E-6	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999982768094355	WITHOUT_CLASSIFICATION	1.7231905644792395E-6	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.999988254907398	WITHOUT_CLASSIFICATION	1.1745092602044798E-5	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999974210528547	WITHOUT_CLASSIFICATION	2.5789471452224976E-6	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999989884099125	WITHOUT_CLASSIFICATION	1.011590087533359E-6	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999987457401327	WITHOUT_CLASSIFICATION	1.2542598673386018E-6	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999950955880901	WITHOUT_CLASSIFICATION	4.9044119099257E-6	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999952382834313	WITHOUT_CLASSIFICATION	4.761716568659438E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999991705302956	WITHOUT_CLASSIFICATION	8.294697043365001E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999987457401327	WITHOUT_CLASSIFICATION	1.2542598673386018E-6	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999987457401327	WITHOUT_CLASSIFICATION	1.2542598673386018E-6	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999987457401327	WITHOUT_CLASSIFICATION	1.2542598673386018E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999989001050108	WITHOUT_CLASSIFICATION	1.0998949891854426E-6	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999948715741426	WITHOUT_CLASSIFICATION	5.1284258575171636E-6	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999958583765106	WITHOUT_CLASSIFICATION	4.141623489357209E-6	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999991618819627	WITHOUT_CLASSIFICATION	8.381180373050119E-7	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.999998522015827	WITHOUT_CLASSIFICATION	1.4779841731025718E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999991463047732	WITHOUT_CLASSIFICATION	8.536952268139061E-7	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999927535637911	WITHOUT_CLASSIFICATION	7.246436208752547E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999993882101675	WITHOUT_CLASSIFICATION	6.117898324741061E-7	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999991358429262	WITHOUT_CLASSIFICATION	8.641570738212416E-7	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999832561877531	WITHOUT_CLASSIFICATION	1.674381224693411E-5	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9997399005917641	WITHOUT_CLASSIFICATION	2.600994082358931E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999936819672796	WITHOUT_CLASSIFICATION	6.318032720485186E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999850827068879	WITHOUT_CLASSIFICATION	1.4917293112168422E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999803394616519	WITHOUT_CLASSIFICATION	1.966053834815929E-5	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999995537261193	WITHOUT_CLASSIFICATION	4.462738806563723E-7	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999993987909245	WITHOUT_CLASSIFICATION	6.012090754740475E-7	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999985192664995	WITHOUT_CLASSIFICATION	1.4807335005963049E-6	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999993601144475	WITHOUT_CLASSIFICATION	6.398855525318647E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999982838604984	WITHOUT_CLASSIFICATION	1.7161395016679539E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999982838604984	WITHOUT_CLASSIFICATION	1.7161395016679539E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999997240593374	WITHOUT_CLASSIFICATION	2.7594066259626025E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999376738662602	WITHOUT_CLASSIFICATION	6.23261337398116E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999997240593374	WITHOUT_CLASSIFICATION	2.7594066259626025E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999972867086594	WITHOUT_CLASSIFICATION	2.7132913405977108E-6	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999937851514454	WITHOUT_CLASSIFICATION	6.214848554549011E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.99999458750937	WITHOUT_CLASSIFICATION	5.412490630040441E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999918053274128	WITHOUT_CLASSIFICATION	8.194672587132766E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999918053274128	WITHOUT_CLASSIFICATION	8.194672587132766E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999973642888037	WITHOUT_CLASSIFICATION	2.635711196266966E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999973642888037	WITHOUT_CLASSIFICATION	2.635711196266966E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.999994742266324	WITHOUT_CLASSIFICATION	5.25773367600839E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.999994742266324	WITHOUT_CLASSIFICATION	5.25773367600839E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999952838518582	WITHOUT_CLASSIFICATION	4.71614814175279E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999952838518582	WITHOUT_CLASSIFICATION	4.71614814175279E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999952838518582	WITHOUT_CLASSIFICATION	4.71614814175279E-6	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999823948922927	WITHOUT_CLASSIFICATION	1.760510770731657E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999952838518582	WITHOUT_CLASSIFICATION	4.71614814175279E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999952838518582	WITHOUT_CLASSIFICATION	4.71614814175279E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.999996109666478	WITHOUT_CLASSIFICATION	3.890333522009369E-6	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999811852638346	WITHOUT_CLASSIFICATION	1.881473616542483E-5	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999988544435736	WITHOUT_CLASSIFICATION	1.1455564263975113E-6	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999997441975016	WITHOUT_CLASSIFICATION	2.558024984019057E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999995552884339	WITHOUT_CLASSIFICATION	4.447115660515197E-7	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999989152169851	WITHOUT_CLASSIFICATION	1.084783014864304E-6	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999992639650334	WITHOUT_CLASSIFICATION	7.360349666198728E-7	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999985107188397	WITHOUT_CLASSIFICATION	1.4892811603346118E-6	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9999894955581096	WITHOUT_CLASSIFICATION	1.0504441890475584E-5	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999983324802231	WITHOUT_CLASSIFICATION	1.6675197769935881E-6	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999953685770385	WITHOUT_CLASSIFICATION	4.6314229615038855E-6	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999970658888349	WITHOUT_CLASSIFICATION	2.9341111651536024E-6	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999999272940396	WITHOUT_CLASSIFICATION	7.270596034980333E-8	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999998618994271	WITHOUT_CLASSIFICATION	1.38100572903392E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999987290705699	WITHOUT_CLASSIFICATION	1.2709294301890923E-6	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.99999968281971	WITHOUT_CLASSIFICATION	3.171802901145007E-7	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.999999704187122	WITHOUT_CLASSIFICATION	2.9581287804393577E-7	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999981436422735	WITHOUT_CLASSIFICATION	1.8563577264911947E-6	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999980819197153	WITHOUT_CLASSIFICATION	1.918080284788401E-6	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.999999093598846	WITHOUT_CLASSIFICATION	9.064011541026527E-7	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999981589166231	WITHOUT_CLASSIFICATION	1.8410833769205716E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999948035569616	WITHOUT_CLASSIFICATION	5.1964430383270025E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999948035569616	WITHOUT_CLASSIFICATION	5.1964430383270025E-6	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9999906784781273	WITHOUT_CLASSIFICATION	9.321521872702416E-6	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9999906784781273	WITHOUT_CLASSIFICATION	9.321521872702416E-6	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999985021577859	WITHOUT_CLASSIFICATION	1.4978422142515911E-6	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.999996487572866	WITHOUT_CLASSIFICATION	3.5124271340485625E-6	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999966456469	WITHOUT_CLASSIFICATION	3.3543530998455386E-6	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999983537248724	WITHOUT_CLASSIFICATION	1.6462751274479994E-6	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999849967036876	WITHOUT_CLASSIFICATION	1.5003296312287881E-5	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999941768451146	WITHOUT_CLASSIFICATION	5.82315488534396E-6	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999965987526545	WITHOUT_CLASSIFICATION	3.4012473455773222E-6	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9999842093147385	WITHOUT_CLASSIFICATION	1.5790685261463438E-5	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999954673958422	WITHOUT_CLASSIFICATION	4.532604157833449E-6	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.999974193484473	WITHOUT_CLASSIFICATION	2.5806515526989458E-5	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999996626209788	WITHOUT_CLASSIFICATION	3.3737902113626067E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999952922570173	WITHOUT_CLASSIFICATION	4.707742982615148E-6	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999921920986251	WITHOUT_CLASSIFICATION	7.807901374841495E-6	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999996457375508	WITHOUT_CLASSIFICATION	3.5426244908955106E-7	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999843666662098	WITHOUT_CLASSIFICATION	1.563333379014271E-5	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999992951395572	WITHOUT_CLASSIFICATION	7.048604427672235E-7	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999993534152374	WITHOUT_CLASSIFICATION	6.46584762581739E-7	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999993016876294	WITHOUT_CLASSIFICATION	6.983123707106076E-7	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999926589796846	WITHOUT_CLASSIFICATION	7.34102031541083E-6	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.999998327054657	WITHOUT_CLASSIFICATION	1.6729453430871965E-6	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999986757520762	WITHOUT_CLASSIFICATION	1.3242479237352033E-6	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999994951383673	WITHOUT_CLASSIFICATION	5.048616326831516E-7	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999897659474547	WITHOUT_CLASSIFICATION	1.0234052545325894E-5	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9999996839827788	WITHOUT_CLASSIFICATION	3.1601722120456505E-7	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999994809795689	WITHOUT_CLASSIFICATION	5.190204310222912E-7	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999988262247883	WITHOUT_CLASSIFICATION	1.1737752116697558E-6	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999988862928192	WITHOUT_CLASSIFICATION	1.1137071808712037E-6	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9998987324352241	WITHOUT_CLASSIFICATION	1.0126756477589667E-4	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999784712892978	WITHOUT_CLASSIFICATION	2.1528710702144052E-5	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999850357340287	WITHOUT_CLASSIFICATION	1.4964265971252403E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999279448571	WITHOUT_CLASSIFICATION	7.205514289767002E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999730796565695	WITHOUT_CLASSIFICATION	2.6920343430467373E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999957089319609	WITHOUT_CLASSIFICATION	4.29106803903943E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9998803271713276	WITHOUT_CLASSIFICATION	1.196728286723579E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999931791116363	WITHOUT_CLASSIFICATION	6.820888363633913E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999903823296814	WITHOUT_CLASSIFICATION	9.617670318581003E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9998299644065272	WITHOUT_CLASSIFICATION	1.7003559347282955E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999989133719746	WITHOUT_CLASSIFICATION	1.0866280255410154E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999873408303745	WITHOUT_CLASSIFICATION	1.265916962544645E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988677289638	WITHOUT_CLASSIFICATION	1.1322710360811687E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999860978174452	WITHOUT_CLASSIFICATION	1.3902182554906296E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999942500002807	WITHOUT_CLASSIFICATION	5.749999719320975E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999820059353567	WITHOUT_CLASSIFICATION	1.79940646432828E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999978990482071	WITHOUT_CLASSIFICATION	2.1009517929016778E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999936301930887	WITHOUT_CLASSIFICATION	6.369806911275895E-6	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999835987254773	WITHOUT_CLASSIFICATION	1.6401274522706828E-5	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999997645234501	WITHOUT_CLASSIFICATION	2.3547654986731546E-7	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999935283280413	WITHOUT_CLASSIFICATION	6.4716719586430195E-6	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.999985679881241	WITHOUT_CLASSIFICATION	1.432011875913424E-5	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999960543788621	WITHOUT_CLASSIFICATION	3.945621137857417E-6	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999924110906142	WITHOUT_CLASSIFICATION	7.588909385746545E-6	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999984362484925	WITHOUT_CLASSIFICATION	1.5637515074842791E-6	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999991190207863	WITHOUT_CLASSIFICATION	8.809792137458985E-7	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999470722097298	WITHOUT_CLASSIFICATION	5.2927790270148986E-5	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9998111907708138	WITHOUT_CLASSIFICATION	1.8880922918619586E-4	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9995925482713993	WITHOUT_CLASSIFICATION	4.074517286006812E-4	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9995094435042396	WITHOUT_CLASSIFICATION	4.905564957604013E-4	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9997640048132985	WITHOUT_CLASSIFICATION	2.3599518670156926E-4	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9991913180004092	WITHOUT_CLASSIFICATION	8.086819995907584E-4	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9996928619905445	WITHOUT_CLASSIFICATION	3.071380094555688E-4	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999228517108291	WITHOUT_CLASSIFICATION	7.714828917095801E-5	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9998547080215568	WITHOUT_CLASSIFICATION	1.4529197844310307E-4	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9993904097614705	WITHOUT_CLASSIFICATION	6.095902385294721E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.999999578366062	WITHOUT_CLASSIFICATION	4.2163393803079424E-7	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999966412413801	WITHOUT_CLASSIFICATION	3.3587586198835E-6	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.999945883739596	WITHOUT_CLASSIFICATION	5.4116260404021095E-5	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999994660289201	WITHOUT_CLASSIFICATION	5.339710797898992E-7	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999932433090044	WITHOUT_CLASSIFICATION	6.756690995564099E-6	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9999918423139952	WITHOUT_CLASSIFICATION	8.157686004772732E-6	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9999896510407236	WITHOUT_CLASSIFICATION	1.0348959276441765E-5	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.999998174841937	WITHOUT_CLASSIFICATION	1.8251580630870374E-6	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999995954403922	WITHOUT_CLASSIFICATION	4.045596077716189E-7	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.999974335367095	WITHOUT_CLASSIFICATION	2.5664632905068733E-5	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999723659934623	WITHOUT_CLASSIFICATION	2.7634006537706154E-5	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999979505095593	WITHOUT_CLASSIFICATION	2.049490440756541E-6	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999963116526089	WITHOUT_CLASSIFICATION	3.6883473910280855E-6	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999932479692788	WITHOUT_CLASSIFICATION	6.752030721187986E-6	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.999995116696371	WITHOUT_CLASSIFICATION	4.883303628945722E-6	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999977546315578	WITHOUT_CLASSIFICATION	2.245368442148383E-6	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999926287991581	WITHOUT_CLASSIFICATION	7.371200841912728E-6	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999976412995799	WITHOUT_CLASSIFICATION	2.3587004200495457E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999861305981749	WITHOUT_CLASSIFICATION	1.3869401825164985E-5	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999972232865246	WITHOUT_CLASSIFICATION	2.776713475328384E-6	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999934874160837	WITHOUT_CLASSIFICATION	6.512583916311192E-6	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999980634249356	WITHOUT_CLASSIFICATION	1.936575064366223E-6	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999991400571527	WITHOUT_CLASSIFICATION	8.599428471769085E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999993029523329	WITHOUT_CLASSIFICATION	6.970476672377806E-7	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999910587646353	WITHOUT_CLASSIFICATION	8.941235364572214E-6	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999995131183048	WITHOUT_CLASSIFICATION	4.868816951765647E-7	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999978624571316	WITHOUT_CLASSIFICATION	2.137542868276646E-6	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999982719421365	WITHOUT_CLASSIFICATION	1.7280578633749863E-6	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999987736130018	WITHOUT_CLASSIFICATION	1.2263869981627249E-6	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.999998761068227	WITHOUT_CLASSIFICATION	1.2389317729474616E-6	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9999635867113557	WITHOUT_CLASSIFICATION	3.641328864447813E-5	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.99997227309517	WITHOUT_CLASSIFICATION	2.772690482996404E-5	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999839362165048	WITHOUT_CLASSIFICATION	1.606378349515498E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999876744240982	WITHOUT_CLASSIFICATION	1.2325575901697419E-5	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999814871653083	WITHOUT_CLASSIFICATION	1.851283469165047E-5	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999980735937021	WITHOUT_CLASSIFICATION	1.9264062980507174E-6	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999981506419194	WITHOUT_CLASSIFICATION	1.849358080675092E-6	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999981506419194	WITHOUT_CLASSIFICATION	1.849358080675092E-6	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.999970782869678	WITHOUT_CLASSIFICATION	2.921713032197534E-5	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999948061248474	WITHOUT_CLASSIFICATION	5.193875152635217E-6	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.999997252535287	WITHOUT_CLASSIFICATION	2.747464712933871E-6	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999961253366388	WITHOUT_CLASSIFICATION	3.874663361076198E-6	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999940218660449	WITHOUT_CLASSIFICATION	5.9781339550017585E-6	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999931053493744	WITHOUT_CLASSIFICATION	6.894650625601914E-6	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999998364768837	WITHOUT_CLASSIFICATION	1.6352311640248136E-7	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999886305949747	WITHOUT_CLASSIFICATION	1.1369405025322743E-5	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999997346093847	WITHOUT_CLASSIFICATION	2.653906152760348E-7	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999940210403978	WITHOUT_CLASSIFICATION	5.978959602178999E-6	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999977423365811	WITHOUT_CLASSIFICATION	2.2576634189788546E-6	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9999939963668877	WITHOUT_CLASSIFICATION	6.00363311230889E-6	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.999979044174342	WITHOUT_CLASSIFICATION	2.095582565790341E-5	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999916786103177	WITHOUT_CLASSIFICATION	8.321389682331964E-6	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999898964474881	WITHOUT_CLASSIFICATION	1.0103552511949801E-5	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9999520919699154	WITHOUT_CLASSIFICATION	4.7908030084663015E-5	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999996393991268	WITHOUT_CLASSIFICATION	3.606008730441504E-7	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999997267717935	WITHOUT_CLASSIFICATION	2.73228206458149E-7	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999993358561742	WITHOUT_CLASSIFICATION	6.641438258197792E-7	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9999731021780063	WITHOUT_CLASSIFICATION	2.689782199367727E-5	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.999999859383724	WITHOUT_CLASSIFICATION	1.4061627584905978E-7	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999990200531587	WITHOUT_CLASSIFICATION	9.799468413433572E-7	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9995922148220704	WITHOUT_CLASSIFICATION	4.077851779296865E-4	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999936656181706	WITHOUT_CLASSIFICATION	6.334381829391157E-6	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999968436141654	WITHOUT_CLASSIFICATION	3.156385834588843E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.999993591542765	WITHOUT_CLASSIFICATION	6.408457234972294E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9998561345150961	WITHOUT_CLASSIFICATION	1.438654849037788E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999952838518582	WITHOUT_CLASSIFICATION	4.71614814175279E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999952838518582	WITHOUT_CLASSIFICATION	4.71614814175279E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999952838518582	WITHOUT_CLASSIFICATION	4.71614814175279E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999952838518582	WITHOUT_CLASSIFICATION	4.71614814175279E-6	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999358501416364	WITHOUT_CLASSIFICATION	6.414985836362238E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999952039832124	WITHOUT_CLASSIFICATION	4.796016787671274E-6	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999989157056179	WITHOUT_CLASSIFICATION	1.0842943819973756E-6	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9999904526477605	WITHOUT_CLASSIFICATION	9.547352239426812E-6	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999995966181349	WITHOUT_CLASSIFICATION	4.0338186519940896E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.999991213900666	WITHOUT_CLASSIFICATION	8.786099333905686E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999879108786409	WITHOUT_CLASSIFICATION	1.208912135911447E-5	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999997876847762	WITHOUT_CLASSIFICATION	2.1231522379050138E-7	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999972208821575	WITHOUT_CLASSIFICATION	2.7791178424740614E-6	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999968045692545	WITHOUT_CLASSIFICATION	3.1954307454367005E-6	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999970135489554	WITHOUT_CLASSIFICATION	2.9864510446367727E-6	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999837391995272	WITHOUT_CLASSIFICATION	1.6260800472804933E-5	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.999838599232518	WITHOUT_CLASSIFICATION	1.6140076748201822E-4	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999941821782187	WITHOUT_CLASSIFICATION	5.8178217812731255E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999971736382366	WITHOUT_CLASSIFICATION	2.8263617634832467E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999985875007374	WITHOUT_CLASSIFICATION	1.412499262577299E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999982838604984	WITHOUT_CLASSIFICATION	1.7161395016679539E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999982838604984	WITHOUT_CLASSIFICATION	1.7161395016679539E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999997240593374	WITHOUT_CLASSIFICATION	2.7594066259626025E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999997240593374	WITHOUT_CLASSIFICATION	2.7594066259626025E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999931957352544	WITHOUT_CLASSIFICATION	6.80426474554904E-6	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999959406457117	WITHOUT_CLASSIFICATION	4.059354288218002E-6	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.999993020800116	WITHOUT_CLASSIFICATION	6.979199884034958E-6	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999992243892746	WITHOUT_CLASSIFICATION	7.75610725432913E-7	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9998390902919638	WITHOUT_CLASSIFICATION	1.6090970803607157E-4	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999804520689478	WITHOUT_CLASSIFICATION	1.9547931052161388E-5	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999976601359017	WITHOUT_CLASSIFICATION	2.3398640983181653E-6	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999946367673135	WITHOUT_CLASSIFICATION	5.363232686616172E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999989092213665	WITHOUT_CLASSIFICATION	1.0907786335091086E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999989092213665	WITHOUT_CLASSIFICATION	1.0907786335091086E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999981703340548	WITHOUT_CLASSIFICATION	1.8296659451777148E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999981703340548	WITHOUT_CLASSIFICATION	1.8296659451777148E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999991705302956	WITHOUT_CLASSIFICATION	8.294697043365001E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999937851514454	WITHOUT_CLASSIFICATION	6.214848554549011E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999972867086594	WITHOUT_CLASSIFICATION	2.7132913405977108E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.99999458750937	WITHOUT_CLASSIFICATION	5.412490630040441E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999918053274128	WITHOUT_CLASSIFICATION	8.194672587132766E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999918053274128	WITHOUT_CLASSIFICATION	8.194672587132766E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999973642888037	WITHOUT_CLASSIFICATION	2.635711196266966E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999973642888037	WITHOUT_CLASSIFICATION	2.635711196266966E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.999994742266324	WITHOUT_CLASSIFICATION	5.25773367600839E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.999994742266324	WITHOUT_CLASSIFICATION	5.25773367600839E-6	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.999968082367172	WITHOUT_CLASSIFICATION	3.1917632828017574E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999899407022276	WITHOUT_CLASSIFICATION	1.0059297772509407E-5	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.999981969905178	WITHOUT_CLASSIFICATION	1.8030094822045403E-5	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999977953689082	WITHOUT_CLASSIFICATION	2.2046310917360605E-6	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999963840425774	WITHOUT_CLASSIFICATION	3.6159574225896392E-6	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999928409586043	WITHOUT_CLASSIFICATION	7.159041395737838E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999956665862203	WITHOUT_CLASSIFICATION	4.333413779709322E-6	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999998701267151	WITHOUT_CLASSIFICATION	1.2987328482051408E-7	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9998926396633514	WITHOUT_CLASSIFICATION	1.0736033664851544E-4	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999968460815076	WITHOUT_CLASSIFICATION	3.153918492267027E-6	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.999998826215031	WITHOUT_CLASSIFICATION	1.1737849690324247E-6	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999925503552197	WITHOUT_CLASSIFICATION	7.449644780275841E-6	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999827739475554	WITHOUT_CLASSIFICATION	1.722605244461968E-5	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999960931327588	WITHOUT_CLASSIFICATION	3.906867241136493E-6	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.999999434362743	WITHOUT_CLASSIFICATION	5.656372569495359E-7	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.999995675596987	WITHOUT_CLASSIFICATION	4.32440301292525E-6	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999971885911882	WITHOUT_CLASSIFICATION	2.8114088118876518E-6	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999989564498651	WITHOUT_CLASSIFICATION	1.043550134852052E-6	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999996631039106	WITHOUT_CLASSIFICATION	3.3689608930497814E-7	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999984019700575	WITHOUT_CLASSIFICATION	1.5980299425172065E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999998133312613	WITHOUT_CLASSIFICATION	1.8666873881278385E-7	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9998508012654153	WITHOUT_CLASSIFICATION	1.491987345847511E-4	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999977620050338	WITHOUT_CLASSIFICATION	2.237994966191328E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999993748484972	WITHOUT_CLASSIFICATION	6.251515027455036E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999865542916903	WITHOUT_CLASSIFICATION	1.3445708309647608E-5	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999997338805878	WITHOUT_CLASSIFICATION	2.661194122515923E-7	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9999996938245879	WITHOUT_CLASSIFICATION	3.061754121329932E-7	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999993165090195	WITHOUT_CLASSIFICATION	6.83490980619539E-7	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9999989482445508	WITHOUT_CLASSIFICATION	1.0517554491842901E-6	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9999990677251134	WITHOUT_CLASSIFICATION	9.322748867326105E-7	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999651385255902	WITHOUT_CLASSIFICATION	3.4861474409780324E-5	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999546910053736	WITHOUT_CLASSIFICATION	4.5308994626367224E-5	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999601635433545	WITHOUT_CLASSIFICATION	3.983645664550359E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999978166873333	WITHOUT_CLASSIFICATION	2.1833126666936013E-6	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.999990156791871	WITHOUT_CLASSIFICATION	9.843208129119657E-6	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999990111326318	WITHOUT_CLASSIFICATION	9.88867368152877E-7	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999989078339923	WITHOUT_CLASSIFICATION	1.0921660077409678E-6	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999997000055753	WITHOUT_CLASSIFICATION	2.999944247574297E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999997312710753	WITHOUT_CLASSIFICATION	2.687289246500621E-7	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999793185869276	WITHOUT_CLASSIFICATION	2.0681413072466922E-5	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999190828261153	WITHOUT_CLASSIFICATION	8.091717388467976E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999998826870196	WITHOUT_CLASSIFICATION	1.173129803721162E-7	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999963910664674	WITHOUT_CLASSIFICATION	3.6089335324673805E-6	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999947836808584	WITHOUT_CLASSIFICATION	5.216319141596581E-6	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999980018343169	WITHOUT_CLASSIFICATION	1.9981656831443877E-6	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999998942773439	WITHOUT_CLASSIFICATION	1.0572265601331272E-7	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9999588475616304	WITHOUT_CLASSIFICATION	4.115243836952438E-5	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9998991229625177	WITHOUT_CLASSIFICATION	1.0087703748234088E-4	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999989152441835	WITHOUT_CLASSIFICATION	1.0847558165105425E-6	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999859727001416	WITHOUT_CLASSIFICATION	1.4027299858447313E-5	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999984544882311	WITHOUT_CLASSIFICATION	1.5455117689346066E-6	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999979123893482	WITHOUT_CLASSIFICATION	2.087610651703672E-6	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9999987462670287	WITHOUT_CLASSIFICATION	1.2537329713621881E-6	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9999993865922802	WITHOUT_CLASSIFICATION	6.1340771991844E-7	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9999861089900329	WITHOUT_CLASSIFICATION	1.3891009967178792E-5	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999954065455561	WITHOUT_CLASSIFICATION	4.593454443909468E-6	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.999999070817915	WITHOUT_CLASSIFICATION	9.291820851070209E-7	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999957939164319	WITHOUT_CLASSIFICATION	4.206083568076548E-6	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999977848976228	WITHOUT_CLASSIFICATION	2.215102377308345E-6	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999989556521557	WITHOUT_CLASSIFICATION	1.0443478442969992E-6	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999905745711957	WITHOUT_CLASSIFICATION	9.425428804348129E-6	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999991967641648	WITHOUT_CLASSIFICATION	8.032358351437417E-7	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999909375220574	WITHOUT_CLASSIFICATION	9.062477942714686E-6	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999942907942556	WITHOUT_CLASSIFICATION	5.7092057444733525E-6	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999998467162051	WITHOUT_CLASSIFICATION	1.5328379483712852E-7	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.999999972267299	WITHOUT_CLASSIFICATION	2.7732700943375806E-8	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999979292097393	WITHOUT_CLASSIFICATION	2.0707902607412957E-6	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999994678561183	WITHOUT_CLASSIFICATION	5.321438817608535E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999903823296814	WITHOUT_CLASSIFICATION	9.617670318581003E-6	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999992581908425	WITHOUT_CLASSIFICATION	7.418091576434612E-7	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999985214602392	WITHOUT_CLASSIFICATION	1.4785397607688975E-6	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999996212410927	WITHOUT_CLASSIFICATION	3.7875890737072815E-7	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999361889037044	WITHOUT_CLASSIFICATION	6.381109629562748E-5	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999963233238884	WITHOUT_CLASSIFICATION	3.67667611154229E-6	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9998252462715969	WITHOUT_CLASSIFICATION	1.7475372840327169E-4	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999984354814316	WITHOUT_CLASSIFICATION	1.564518568343416E-6	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999990032703565	WITHOUT_CLASSIFICATION	9.96729643459068E-7	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999983207315059	WITHOUT_CLASSIFICATION	1.6792684941662052E-6	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9999955038267015	WITHOUT_CLASSIFICATION	4.496173298497307E-6	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999977387626989	WITHOUT_CLASSIFICATION	2.2612373010187645E-6	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999955054774722	WITHOUT_CLASSIFICATION	4.494522527763501E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9998299644065272	WITHOUT_CLASSIFICATION	1.7003559347282955E-4	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999932755611133	WITHOUT_CLASSIFICATION	6.7244388866898645E-6	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999853849716988	WITHOUT_CLASSIFICATION	1.4615028301267959E-5	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9998905546243066	WITHOUT_CLASSIFICATION	1.0944537569335546E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999988225285851	WITHOUT_CLASSIFICATION	1.177471414961443E-6	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999996105859309	WITHOUT_CLASSIFICATION	3.8941406904050017E-7	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9999569350608494	WITHOUT_CLASSIFICATION	4.306493915053322E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.999992644659699	WITHOUT_CLASSIFICATION	7.35534030097613E-6	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999960856657912	WITHOUT_CLASSIFICATION	3.9143342087700406E-6	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999951887573452	WITHOUT_CLASSIFICATION	4.811242654790228E-6	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999991189163098	WITHOUT_CLASSIFICATION	8.810836903166597E-7	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999969810142189	WITHOUT_CLASSIFICATION	3.0189857811703512E-6	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.999992784705258	WITHOUT_CLASSIFICATION	7.215294741954803E-6	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999972248773467	WITHOUT_CLASSIFICATION	2.7751226534384287E-6	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999854205384026	WITHOUT_CLASSIFICATION	1.4579461597514224E-5	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999917571899658	WITHOUT_CLASSIFICATION	8.242810034279893E-6	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999812215327366	WITHOUT_CLASSIFICATION	1.877846726340379E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999822205463268	WITHOUT_CLASSIFICATION	1.7779453673218876E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9996228474993833	WITHOUT_CLASSIFICATION	3.7715250061662623E-4	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999863392851388	WITHOUT_CLASSIFICATION	1.366071486117947E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999863392851388	WITHOUT_CLASSIFICATION	1.366071486117947E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999886058757641	WITHOUT_CLASSIFICATION	1.139412423589844E-5	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999932421176665	WITHOUT_CLASSIFICATION	6.7578823335307435E-6	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999844457234747	WITHOUT_CLASSIFICATION	1.5554276525335694E-5	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999997214317488	WITHOUT_CLASSIFICATION	2.785682511940261E-7	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999992404553468	WITHOUT_CLASSIFICATION	7.595446531808262E-7	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.999996801591217	WITHOUT_CLASSIFICATION	3.1984087830514568E-6	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999961959244985	WITHOUT_CLASSIFICATION	3.804075501413779E-6	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999909194992859	WITHOUT_CLASSIFICATION	9.080500714116136E-6	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999990116201933	WITHOUT_CLASSIFICATION	9.883798067201518E-7	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999930242027562	WITHOUT_CLASSIFICATION	6.975797243798718E-6	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999875047468043	WITHOUT_CLASSIFICATION	1.2495253195680632E-5	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999889664077434	WITHOUT_CLASSIFICATION	1.1033592256586993E-5	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999965893352719	WITHOUT_CLASSIFICATION	3.4106647281212847E-6	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999928277713154	WITHOUT_CLASSIFICATION	7.1722286846062215E-6	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999873511801242	WITHOUT_CLASSIFICATION	1.2648819875833342E-5	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999887897789359	WITHOUT_CLASSIFICATION	1.1210221064107747E-5	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999992726162021	WITHOUT_CLASSIFICATION	7.273837978053785E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999953472353919	WITHOUT_CLASSIFICATION	4.652764608077219E-6	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999990107398523	WITHOUT_CLASSIFICATION	9.892601476806477E-7	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999977703121866	WITHOUT_CLASSIFICATION	2.2296878134644974E-6	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999977933704988	WITHOUT_CLASSIFICATION	2.2066295012548747E-6	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999899705043912	WITHOUT_CLASSIFICATION	1.0029495608738509E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999987468041021	WITHOUT_CLASSIFICATION	1.2531958979947997E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999992606286207	WITHOUT_CLASSIFICATION	7.393713793753745E-7	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999864108101958	WITHOUT_CLASSIFICATION	1.3589189804245574E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999977684490275	WITHOUT_CLASSIFICATION	2.231550972507477E-6	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999967137736365	WITHOUT_CLASSIFICATION	3.286226363534418E-6	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.999994870504077	WITHOUT_CLASSIFICATION	5.129495923015167E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999804964420356	WITHOUT_CLASSIFICATION	1.9503557964400492E-5	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999579255682853	WITHOUT_CLASSIFICATION	4.207443171477568E-5	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999984037137415	WITHOUT_CLASSIFICATION	1.5962862584503342E-6	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999078151747205	WITHOUT_CLASSIFICATION	9.218482527952312E-5	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999326740544416	WITHOUT_CLASSIFICATION	6.732594555832863E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999176423977696	WITHOUT_CLASSIFICATION	8.235760223045967E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999776453756244	WITHOUT_CLASSIFICATION	2.2354624375611163E-5	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9998963266977068	WITHOUT_CLASSIFICATION	1.0367330229316016E-4	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999470995908553	WITHOUT_CLASSIFICATION	5.290040914486821E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999804964420356	WITHOUT_CLASSIFICATION	1.9503557964400492E-5	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999955435000871	WITHOUT_CLASSIFICATION	4.456499912921087E-6	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999998560666513	WITHOUT_CLASSIFICATION	1.4393334880955046E-7	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999914536272051	WITHOUT_CLASSIFICATION	8.546372794925795E-6	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9999995882879139	WITHOUT_CLASSIFICATION	4.11712086086836E-7	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999877104699194	WITHOUT_CLASSIFICATION	1.2289530080672535E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999817317084592	WITHOUT_CLASSIFICATION	1.826829154080517E-5	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999991193481147	WITHOUT_CLASSIFICATION	8.806518852652995E-7	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9997694212342528	WITHOUT_CLASSIFICATION	2.3057876574704807E-4	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999829714646153	WITHOUT_CLASSIFICATION	1.7028535384616625E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999963962315415	WITHOUT_CLASSIFICATION	3.603768458496762E-6	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999771432946776	WITHOUT_CLASSIFICATION	2.285670532249458E-5	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999938891630246	WITHOUT_CLASSIFICATION	6.110836975419558E-6	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999875037572866	WITHOUT_CLASSIFICATION	1.249624271348707E-5	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9997915698814096	WITHOUT_CLASSIFICATION	2.0843011859043723E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.99998460642553	WITHOUT_CLASSIFICATION	1.5393574469985436E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9996167682602174	WITHOUT_CLASSIFICATION	3.8323173978268844E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9996167682602174	WITHOUT_CLASSIFICATION	3.8323173978268844E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.999990647774148	WITHOUT_CLASSIFICATION	9.35222585193268E-6	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9999961630927953	WITHOUT_CLASSIFICATION	3.836907204773602E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999965101959122	WITHOUT_CLASSIFICATION	3.4898040878263913E-6	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9999899898292361	WITHOUT_CLASSIFICATION	1.0010170763871204E-5	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999978514877812	WITHOUT_CLASSIFICATION	2.1485122188037465E-6	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999904118427635	WITHOUT_CLASSIFICATION	9.588157236412013E-6	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999990693722555	WITHOUT_CLASSIFICATION	9.30627744525393E-7	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999201270587373	WITHOUT_CLASSIFICATION	7.987294126264623E-5	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999965600589416	WITHOUT_CLASSIFICATION	3.439941058328759E-6	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999996488013889	WITHOUT_CLASSIFICATION	3.511986110900786E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999884967162889	WITHOUT_CLASSIFICATION	1.1503283711178438E-5	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9994821288372583	WITHOUT_CLASSIFICATION	5.178711627417266E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999794636109055	WITHOUT_CLASSIFICATION	2.053638909452389E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999376738662602	WITHOUT_CLASSIFICATION	6.23261337398116E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999376738662602	WITHOUT_CLASSIFICATION	6.23261337398116E-5	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999965101959122	WITHOUT_CLASSIFICATION	3.4898040878263913E-6	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999884967162889	WITHOUT_CLASSIFICATION	1.1503283711178438E-5	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.999999440035556	WITHOUT_CLASSIFICATION	5.599644440225186E-7	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9999969308485089	WITHOUT_CLASSIFICATION	3.069151491028635E-6	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999889576892628	WITHOUT_CLASSIFICATION	1.104231073724929E-5	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9999986233460197	WITHOUT_CLASSIFICATION	1.376653980208148E-6	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.999998288339973	WITHOUT_CLASSIFICATION	1.7116600270339038E-6	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999887544414299	WITHOUT_CLASSIFICATION	1.1245558570224367E-5	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999985620989362	WITHOUT_CLASSIFICATION	1.4379010637351017E-6	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999907324738372	WITHOUT_CLASSIFICATION	9.267526162840873E-6	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999981605608327	WITHOUT_CLASSIFICATION	1.8394391673101178E-6	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999878380213583	WITHOUT_CLASSIFICATION	1.2161978641872709E-5	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999727624220417	WITHOUT_CLASSIFICATION	2.7237577958239583E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9999938658249413	WITHOUT_CLASSIFICATION	6.134175058599754E-6	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999947545341209	WITHOUT_CLASSIFICATION	5.245465879130978E-6	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999951698026625	WITHOUT_CLASSIFICATION	4.8301973375741705E-6	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999916015495514	WITHOUT_CLASSIFICATION	8.398450448580149E-6	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999870848586538	WITHOUT_CLASSIFICATION	1.291514134608384E-5	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999895340498312	WITHOUT_CLASSIFICATION	1.0465950168734297E-5	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999859623186615	WITHOUT_CLASSIFICATION	1.4037681338457727E-5	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999654654432485	WITHOUT_CLASSIFICATION	3.45345567514296E-5	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999958697181119	WITHOUT_CLASSIFICATION	4.1302818879662055E-6	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9999983551930822	WITHOUT_CLASSIFICATION	1.6448069177478353E-6	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999804893556494	WITHOUT_CLASSIFICATION	1.951064435050143E-5	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9999730533321454	WITHOUT_CLASSIFICATION	2.6946667854577592E-5	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.999849511695877	WITHOUT_CLASSIFICATION	1.504883041229358E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999868484167259	WITHOUT_CLASSIFICATION	1.3151583273953482E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999748602667738	WITHOUT_CLASSIFICATION	2.5139733226174822E-5	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999915949769076	WITHOUT_CLASSIFICATION	8.405023092402304E-6	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999995151974933	WITHOUT_CLASSIFICATION	4.848025067132318E-7	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999941907748766	WITHOUT_CLASSIFICATION	5.809225123371809E-6	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999995376860552	WITHOUT_CLASSIFICATION	4.6231394484528253E-7	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9999981017320486	WITHOUT_CLASSIFICATION	1.8982679513798305E-6	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999826053955218	WITHOUT_CLASSIFICATION	1.7394604478258297E-5	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999975302249575	WITHOUT_CLASSIFICATION	2.469775042554417E-6	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999981747946532	WITHOUT_CLASSIFICATION	1.825205346676331E-6	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999998388412494	WITHOUT_CLASSIFICATION	1.6115875052322132E-7	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999859246745748	WITHOUT_CLASSIFICATION	1.4075325425194103E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999774806094706	WITHOUT_CLASSIFICATION	2.2519390529336194E-5	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.999993193554572	WITHOUT_CLASSIFICATION	6.806445427935133E-6	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999721407065986	WITHOUT_CLASSIFICATION	2.785929340154817E-5	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999896680470481	WITHOUT_CLASSIFICATION	1.0331952951776058E-5	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.999986684772881	WITHOUT_CLASSIFICATION	1.3315227118949514E-5	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999905438375527	WITHOUT_CLASSIFICATION	9.456162447229122E-6	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999247618908784	WITHOUT_CLASSIFICATION	7.523810912153783E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999972848311054	WITHOUT_CLASSIFICATION	2.715168894592731E-6	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9996722033357709	WITHOUT_CLASSIFICATION	3.277966642291696E-4	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999830338739004	WITHOUT_CLASSIFICATION	1.6966126099520403E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9996037464338343	WITHOUT_CLASSIFICATION	3.9625356616565136E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999989133719746	WITHOUT_CLASSIFICATION	1.0866280255410154E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999873408303745	WITHOUT_CLASSIFICATION	1.265916962544645E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988677289638	WITHOUT_CLASSIFICATION	1.1322710360811687E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999860978174452	WITHOUT_CLASSIFICATION	1.3902182554906296E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999732463207541	WITHOUT_CLASSIFICATION	2.6753679245850287E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.999969941830595	WITHOUT_CLASSIFICATION	3.005816940495989E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999942500002807	WITHOUT_CLASSIFICATION	5.749999719320975E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999820059353567	WITHOUT_CLASSIFICATION	1.79940646432828E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9988429550328038	WITHOUT_CLASSIFICATION	0.0011570449671961542	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999978990482071	WITHOUT_CLASSIFICATION	2.1009517929016778E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999970717529839	WITHOUT_CLASSIFICATION	2.928247015977477E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999903994971406	WITHOUT_CLASSIFICATION	9.600502859305634E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999751672341349	WITHOUT_CLASSIFICATION	2.483276586508157E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999804939516113	WITHOUT_CLASSIFICATION	1.950604838875902E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999850827068879	WITHOUT_CLASSIFICATION	1.4917293112168422E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999901534655048	WITHOUT_CLASSIFICATION	9.846534495239779E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999947460451937	WITHOUT_CLASSIFICATION	5.2539548063811044E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999980864041902	WITHOUT_CLASSIFICATION	1.913595809865032E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999976905452311	WITHOUT_CLASSIFICATION	2.30945476889263E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999991849228455	WITHOUT_CLASSIFICATION	8.150771544848679E-7	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.999689343508437	WITHOUT_CLASSIFICATION	3.106564915630473E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9996525834465594	WITHOUT_CLASSIFICATION	3.474165534405576E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9998626304866426	WITHOUT_CLASSIFICATION	1.3736951335750308E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997950725161191	WITHOUT_CLASSIFICATION	2.0492748388078284E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997950725161191	WITHOUT_CLASSIFICATION	2.0492748388078284E-4	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9997861015670466	WITHOUT_CLASSIFICATION	2.138984329534207E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9995926226820799	WITHOUT_CLASSIFICATION	4.0737731792014366E-4	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9992613366709844	WITHOUT_CLASSIFICATION	7.386633290156674E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9989200665510433	WITHOUT_CLASSIFICATION	0.0010799334489567088	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9989200665510433	WITHOUT_CLASSIFICATION	0.0010799334489567088	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9989200665510433	WITHOUT_CLASSIFICATION	0.0010799334489567088	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989706985395517	WITHOUT_CLASSIFICATION	0.001029301460448423	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999279448571	WITHOUT_CLASSIFICATION	7.205514289767002E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999730796565695	WITHOUT_CLASSIFICATION	2.6920343430467373E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999957089319609	WITHOUT_CLASSIFICATION	4.29106803903943E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9998803271713276	WITHOUT_CLASSIFICATION	1.196728286723579E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999931791116363	WITHOUT_CLASSIFICATION	6.820888363633913E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999877845076991	WITHOUT_CLASSIFICATION	1.221549230089844E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999748602667738	WITHOUT_CLASSIFICATION	2.5139733226174822E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999903823296814	WITHOUT_CLASSIFICATION	9.617670318581003E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9998299644065272	WITHOUT_CLASSIFICATION	1.7003559347282955E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999989133719746	WITHOUT_CLASSIFICATION	1.0866280255410154E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999873408303745	WITHOUT_CLASSIFICATION	1.265916962544645E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988677289638	WITHOUT_CLASSIFICATION	1.1322710360811687E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999860978174452	WITHOUT_CLASSIFICATION	1.3902182554906296E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999820059353567	WITHOUT_CLASSIFICATION	1.79940646432828E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999903994971406	WITHOUT_CLASSIFICATION	9.600502859305634E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999751672341349	WITHOUT_CLASSIFICATION	2.483276586508157E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999804939516113	WITHOUT_CLASSIFICATION	1.950604838875902E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999988344983095	WITHOUT_CLASSIFICATION	1.165501690492323E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999986257574855	WITHOUT_CLASSIFICATION	1.374242514371373E-6	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999918203840302	WITHOUT_CLASSIFICATION	8.179615969801471E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999970408653667	WITHOUT_CLASSIFICATION	2.9591346334613745E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999749063412752	WITHOUT_CLASSIFICATION	2.5093658724872306E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999894606748344	WITHOUT_CLASSIFICATION	1.0539325165490262E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999954224856719	WITHOUT_CLASSIFICATION	4.577514328087239E-6	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999999709102128	WITHOUT_CLASSIFICATION	2.9089787193011746E-8	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9996768401971993	WITHOUT_CLASSIFICATION	3.2315980280064925E-4	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9996187206422199	WITHOUT_CLASSIFICATION	3.8127935778011575E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.999938081370828	WITHOUT_CLASSIFICATION	6.191862917204129E-5	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999269906557166	WITHOUT_CLASSIFICATION	7.300934428349562E-5	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999949595098359	WITHOUT_CLASSIFICATION	5.040490164064061E-6	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999907885881472	WITHOUT_CLASSIFICATION	9.211411852778814E-6	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.99920146461793	WITHOUT_CLASSIFICATION	7.985353820699391E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.999922885281828	WITHOUT_CLASSIFICATION	7.71147181719239E-5	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9996657127477739	WITHOUT_CLASSIFICATION	3.3428725222605483E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9996937379871156	WITHOUT_CLASSIFICATION	3.0626201288437577E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9994273729297697	WITHOUT_CLASSIFICATION	5.726270702303001E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.999992472490035	WITHOUT_CLASSIFICATION	7.527509965064555E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999992645911724	WITHOUT_CLASSIFICATION	7.354088276166272E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999970717529839	WITHOUT_CLASSIFICATION	2.928247015977477E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999947460451937	WITHOUT_CLASSIFICATION	5.2539548063811044E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999980864041902	WITHOUT_CLASSIFICATION	1.913595809865032E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999976905452311	WITHOUT_CLASSIFICATION	2.30945476889263E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999986257574855	WITHOUT_CLASSIFICATION	1.374242514371373E-6	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999918203840302	WITHOUT_CLASSIFICATION	8.179615969801471E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999970408653667	WITHOUT_CLASSIFICATION	2.9591346334613745E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999749063412752	WITHOUT_CLASSIFICATION	2.5093658724872306E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999894606748344	WITHOUT_CLASSIFICATION	1.0539325165490262E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999991830568943	WITHOUT_CLASSIFICATION	8.169431058384641E-7	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.999999604509898	WITHOUT_CLASSIFICATION	3.9549010199029925E-7	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999995675256083	WITHOUT_CLASSIFICATION	4.324743917808001E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999933491907053	WITHOUT_CLASSIFICATION	6.6508092946576355E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999933491907053	WITHOUT_CLASSIFICATION	6.6508092946576355E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999933491907053	WITHOUT_CLASSIFICATION	6.6508092946576355E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999933491907053	WITHOUT_CLASSIFICATION	6.6508092946576355E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999933491907053	WITHOUT_CLASSIFICATION	6.6508092946576355E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999943177869456	WITHOUT_CLASSIFICATION	5.6822130544200975E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988741334	WITHOUT_CLASSIFICATION	1.125866599913284E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988741334	WITHOUT_CLASSIFICATION	1.125866599913284E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988741334	WITHOUT_CLASSIFICATION	1.125866599913284E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988741334	WITHOUT_CLASSIFICATION	1.125866599913284E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988741334	WITHOUT_CLASSIFICATION	1.125866599913284E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988741334	WITHOUT_CLASSIFICATION	1.125866599913284E-6	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999810240372791	WITHOUT_CLASSIFICATION	1.8975962720897167E-5	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999883462837533	WITHOUT_CLASSIFICATION	1.1653716246544972E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999080073602477	WITHOUT_CLASSIFICATION	9.199263975235173E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999979292254133	WITHOUT_CLASSIFICATION	2.0707745865868105E-6	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999917545119626	WITHOUT_CLASSIFICATION	8.245488037390211E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999993368293719	WITHOUT_CLASSIFICATION	6.63170628106965E-6	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999997085111467	WITHOUT_CLASSIFICATION	2.9148885327853566E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999989092213665	WITHOUT_CLASSIFICATION	1.0907786335091086E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999989092213665	WITHOUT_CLASSIFICATION	1.0907786335091086E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999989092213665	WITHOUT_CLASSIFICATION	1.0907786335091086E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999646841015054	WITHOUT_CLASSIFICATION	3.531589849465644E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999759599472291	WITHOUT_CLASSIFICATION	2.4040052770986383E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999996966407398	WITHOUT_CLASSIFICATION	3.033592601717191E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999983014401497	WITHOUT_CLASSIFICATION	1.698559850391528E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999983014401497	WITHOUT_CLASSIFICATION	1.698559850391528E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999520033338956	WITHOUT_CLASSIFICATION	4.799666610438712E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999983014401497	WITHOUT_CLASSIFICATION	1.698559850391528E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999979795018987	WITHOUT_CLASSIFICATION	2.020498101352213E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.999992497250466	WITHOUT_CLASSIFICATION	7.502749534019286E-6	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.999994172462763	WITHOUT_CLASSIFICATION	5.827537236931466E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999993014472801	WITHOUT_CLASSIFICATION	6.985527198568581E-7	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999993014472801	WITHOUT_CLASSIFICATION	6.985527198568581E-7	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999984483787836	WITHOUT_CLASSIFICATION	1.551621216436454E-6	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999996286452658	WITHOUT_CLASSIFICATION	3.7135473413860293E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999953534055143	WITHOUT_CLASSIFICATION	4.6465944857284804E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999953534055143	WITHOUT_CLASSIFICATION	4.6465944857284804E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999953534055143	WITHOUT_CLASSIFICATION	4.6465944857284804E-6	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9999999848762372	WITHOUT_CLASSIFICATION	1.512376275843591E-8	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9999786172753599	WITHOUT_CLASSIFICATION	2.1382724640144455E-5	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999994877473275	WITHOUT_CLASSIFICATION	5.122526725492598E-7	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999922687080196	WITHOUT_CLASSIFICATION	7.73129198031022E-6	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999393421320186	WITHOUT_CLASSIFICATION	6.065786798142641E-5	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999987992355216	WITHOUT_CLASSIFICATION	1.200764478446642E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990043330927507	WITHOUT_CLASSIFICATION	9.956669072492869E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999967587271371	WITHOUT_CLASSIFICATION	3.2412728629110354E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990043330927507	WITHOUT_CLASSIFICATION	9.956669072492869E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989706985395517	WITHOUT_CLASSIFICATION	0.001029301460448423	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9989200665510433	WITHOUT_CLASSIFICATION	0.0010799334489567088	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999988621915236	WITHOUT_CLASSIFICATION	1.1378084763643055E-6	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999993940428056	WITHOUT_CLASSIFICATION	6.05957194428439E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9990393047518237	WITHOUT_CLASSIFICATION	9.606952481762662E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999952117960866	WITHOUT_CLASSIFICATION	4.788203913314937E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989706985395517	WITHOUT_CLASSIFICATION	0.001029301460448423	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999996782785764	WITHOUT_CLASSIFICATION	3.217214235505686E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999923878150782	WITHOUT_CLASSIFICATION	7.612184921812569E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999952838518582	WITHOUT_CLASSIFICATION	4.71614814175279E-6	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999995552884339	WITHOUT_CLASSIFICATION	4.447115660515197E-7	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999869377341919	WITHOUT_CLASSIFICATION	1.3062265808025353E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999869377341919	WITHOUT_CLASSIFICATION	1.3062265808025353E-5	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999982743021912	WITHOUT_CLASSIFICATION	1.7256978086669221E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999843310551375	WITHOUT_CLASSIFICATION	1.566894486248527E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999838077730803	WITHOUT_CLASSIFICATION	1.6192226919744493E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999820653455724	WITHOUT_CLASSIFICATION	1.7934654427546735E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999857909600681	WITHOUT_CLASSIFICATION	1.4209039931972157E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999839726584583	WITHOUT_CLASSIFICATION	1.602734154174339E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999875618649076	WITHOUT_CLASSIFICATION	1.2438135092346078E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999986173771485	WITHOUT_CLASSIFICATION	1.3826228516093524E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999259485007507	WITHOUT_CLASSIFICATION	7.405149924932793E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999869253617408	WITHOUT_CLASSIFICATION	1.3074638259175178E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999977591602607	WITHOUT_CLASSIFICATION	2.240839739295218E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999832846854322	WITHOUT_CLASSIFICATION	1.6715314567843926E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999686120677187	WITHOUT_CLASSIFICATION	3.1387932281248114E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.999979205413022	WITHOUT_CLASSIFICATION	2.079458697805957E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999975612321786	WITHOUT_CLASSIFICATION	2.4387678214415035E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999844702581437	WITHOUT_CLASSIFICATION	1.5529741856292007E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999886382073337	WITHOUT_CLASSIFICATION	1.1361792666153529E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999657502729766	WITHOUT_CLASSIFICATION	3.4249727023258236E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999697018516976	WITHOUT_CLASSIFICATION	3.0298148302335097E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999363643905842	WITHOUT_CLASSIFICATION	6.363560941588013E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999719854712427	WITHOUT_CLASSIFICATION	2.801452875723142E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999454905517757	WITHOUT_CLASSIFICATION	5.450944822423973E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999844702581437	WITHOUT_CLASSIFICATION	1.5529741856292007E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.999951779492852	WITHOUT_CLASSIFICATION	4.822050714795194E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999844702581437	WITHOUT_CLASSIFICATION	1.5529741856292007E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999454905517757	WITHOUT_CLASSIFICATION	5.450944822423973E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999472362251286	WITHOUT_CLASSIFICATION	5.276377487136455E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999926863536387	WITHOUT_CLASSIFICATION	7.313646361341668E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999690906482249	WITHOUT_CLASSIFICATION	3.090935177509595E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999673046027417	WITHOUT_CLASSIFICATION	3.2695397258325314E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.999938935855632	WITHOUT_CLASSIFICATION	6.106414436806488E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999987486770463	WITHOUT_CLASSIFICATION	1.2513229536943064E-5	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999991196424572	WITHOUT_CLASSIFICATION	8.803575426703325E-7	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999991196424572	WITHOUT_CLASSIFICATION	8.803575426703325E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999719854712427	WITHOUT_CLASSIFICATION	2.801452875723142E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999936984163749	WITHOUT_CLASSIFICATION	6.301583625166568E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999926367969468	WITHOUT_CLASSIFICATION	7.36320305308075E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999923283562969	WITHOUT_CLASSIFICATION	7.671643703117442E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999501093715633	WITHOUT_CLASSIFICATION	4.989062843675497E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999817535114167	WITHOUT_CLASSIFICATION	1.824648858323098E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999978615309635	WITHOUT_CLASSIFICATION	2.1384690364831445E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999419806904694	WITHOUT_CLASSIFICATION	5.8019309530681374E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999896334463025	WITHOUT_CLASSIFICATION	1.0366553697553651E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999825502929739	WITHOUT_CLASSIFICATION	1.7449707026135224E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999979605033622	WITHOUT_CLASSIFICATION	2.0394966378532126E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999692278555008	WITHOUT_CLASSIFICATION	3.0772144499276696E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999967880849883	WITHOUT_CLASSIFICATION	3.2119150117995432E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999820702029973	WITHOUT_CLASSIFICATION	1.7929797002643557E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999680456895665	WITHOUT_CLASSIFICATION	3.195431043348336E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999877845076991	WITHOUT_CLASSIFICATION	1.221549230089844E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999927827298329	WITHOUT_CLASSIFICATION	7.217270166945539E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999947634696301	WITHOUT_CLASSIFICATION	5.23653036989792E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.999998342055589	WITHOUT_CLASSIFICATION	1.657944410987791E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999858151767242	WITHOUT_CLASSIFICATION	1.4184823275804837E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999927827298329	WITHOUT_CLASSIFICATION	7.217270166945539E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999880857999056	WITHOUT_CLASSIFICATION	1.1914200094388729E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999890739652656	WITHOUT_CLASSIFICATION	1.0926034734391299E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999883672917	WITHOUT_CLASSIFICATION	1.1632708299962612E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.999970109519366	WITHOUT_CLASSIFICATION	2.989048063386875E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.999986125993383	WITHOUT_CLASSIFICATION	1.3874006617115702E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9983565116906085	WITHOUT_CLASSIFICATION	0.0016434883093915558	DEFECT
//	WITHOUT_CLASSIFICATION	0.9983565116906085	WITHOUT_CLASSIFICATION	0.0016434883093915558	DEFECT
//	WITHOUT_CLASSIFICATION	0.9983565116906085	WITHOUT_CLASSIFICATION	0.0016434883093915558	DEFECT
//	WITHOUT_CLASSIFICATION	0.9983565116906085	WITHOUT_CLASSIFICATION	0.0016434883093915558	DEFECT
//	WITHOUT_CLASSIFICATION	0.9983565116906085	WITHOUT_CLASSIFICATION	0.0016434883093915558	DEFECT
//	WITHOUT_CLASSIFICATION	0.9983565116906085	WITHOUT_CLASSIFICATION	0.0016434883093915558	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999302043805672	WITHOUT_CLASSIFICATION	6.979561943275718E-5	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999692421804176	WITHOUT_CLASSIFICATION	3.075781958231081E-5	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999926521157585	WITHOUT_CLASSIFICATION	7.347884241472084E-6	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999895762277031	WITHOUT_CLASSIFICATION	1.0423772296834504E-5	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999968584274228	WITHOUT_CLASSIFICATION	3.14157257723838E-6	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999998917391297	WITHOUT_CLASSIFICATION	1.0826087028176895E-7	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.999999578366062	WITHOUT_CLASSIFICATION	4.2163393803079424E-7	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999181087550362	WITHOUT_CLASSIFICATION	8.1891244963748E-5	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9998931220246204	WITHOUT_CLASSIFICATION	1.0687797537952496E-4	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999953680330648	WITHOUT_CLASSIFICATION	4.631966935271062E-6	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999997293044899	WITHOUT_CLASSIFICATION	2.7069551008844705E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999997093095473	WITHOUT_CLASSIFICATION	2.9069045276467627E-7	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999998458317668	WITHOUT_CLASSIFICATION	1.541682331049344E-7	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999884285638813	WITHOUT_CLASSIFICATION	1.1571436118645956E-5	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999997245065794	WITHOUT_CLASSIFICATION	2.754934206496518E-7	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.999994549503193	WITHOUT_CLASSIFICATION	5.450496806949833E-6	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999986854246576	WITHOUT_CLASSIFICATION	1.3145753424100705E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999929663705	WITHOUT_CLASSIFICATION	7.033629418894769E-9	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999929663705	WITHOUT_CLASSIFICATION	7.033629418894769E-9	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999929663705	WITHOUT_CLASSIFICATION	7.033629418894769E-9	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9995922148220704	WITHOUT_CLASSIFICATION	4.077851779296865E-4	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999934198793	WITHOUT_CLASSIFICATION	6.580120665537422E-9	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999892868221237	WITHOUT_CLASSIFICATION	1.0713177876252968E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999279448571	WITHOUT_CLASSIFICATION	7.205514289767002E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999279448571	WITHOUT_CLASSIFICATION	7.205514289767002E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999279448571	WITHOUT_CLASSIFICATION	7.205514289767002E-7	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9999874841031542	WITHOUT_CLASSIFICATION	1.2515896845865725E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999730796565695	WITHOUT_CLASSIFICATION	2.6920343430467373E-5	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999988827671304	WITHOUT_CLASSIFICATION	1.1172328695507567E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999957089319609	WITHOUT_CLASSIFICATION	4.29106803903943E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999957089319609	WITHOUT_CLASSIFICATION	4.29106803903943E-6	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999865542916903	WITHOUT_CLASSIFICATION	1.3445708309647608E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9998803271713276	WITHOUT_CLASSIFICATION	1.196728286723579E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9998803271713276	WITHOUT_CLASSIFICATION	1.196728286723579E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9998803271713276	WITHOUT_CLASSIFICATION	1.196728286723579E-4	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999990812432952	WITHOUT_CLASSIFICATION	9.187567049611849E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999995019386219	WITHOUT_CLASSIFICATION	4.980613780970218E-6	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999993972850235	WITHOUT_CLASSIFICATION	6.027149764503132E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990043330927507	WITHOUT_CLASSIFICATION	9.956669072492869E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990043330927507	WITHOUT_CLASSIFICATION	9.956669072492869E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9990393047518237	WITHOUT_CLASSIFICATION	9.606952481762662E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999931791116363	WITHOUT_CLASSIFICATION	6.820888363633913E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999931791116363	WITHOUT_CLASSIFICATION	6.820888363633913E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999601635433545	WITHOUT_CLASSIFICATION	3.983645664550359E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999989133719746	WITHOUT_CLASSIFICATION	1.0866280255410154E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999989133719746	WITHOUT_CLASSIFICATION	1.0866280255410154E-6	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9999996954158833	WITHOUT_CLASSIFICATION	3.0458411671981595E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999873408303745	WITHOUT_CLASSIFICATION	1.265916962544645E-5	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999995953095279	WITHOUT_CLASSIFICATION	4.0469047219157315E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988677289638	WITHOUT_CLASSIFICATION	1.1322710360811687E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999979267006872	WITHOUT_CLASSIFICATION	2.0732993127195106E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990043330927507	WITHOUT_CLASSIFICATION	9.956669072492869E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9989200665510433	WITHOUT_CLASSIFICATION	0.0010799334489567088	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999942500002807	WITHOUT_CLASSIFICATION	5.749999719320975E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999942500002807	WITHOUT_CLASSIFICATION	5.749999719320975E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999942500002807	WITHOUT_CLASSIFICATION	5.749999719320975E-6	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999963844718178	WITHOUT_CLASSIFICATION	3.6155281822213936E-6	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999960865790518	WITHOUT_CLASSIFICATION	3.913420948208794E-6	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.999995884382697	WITHOUT_CLASSIFICATION	4.115617302881317E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999865821662239	WITHOUT_CLASSIFICATION	1.341783377594355E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999865821662239	WITHOUT_CLASSIFICATION	1.341783377594355E-5	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999980009910551	WITHOUT_CLASSIFICATION	1.999008944905265E-6	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.999958049234182	WITHOUT_CLASSIFICATION	4.1950765817953665E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999951192556759	WITHOUT_CLASSIFICATION	4.880744324102756E-6	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999987039292083	WITHOUT_CLASSIFICATION	1.2960707916667524E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999822205463268	WITHOUT_CLASSIFICATION	1.7779453673218876E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999822205463268	WITHOUT_CLASSIFICATION	1.7779453673218876E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999582829545138	WITHOUT_CLASSIFICATION	4.171704548610662E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999582829545138	WITHOUT_CLASSIFICATION	4.171704548610662E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999886058757641	WITHOUT_CLASSIFICATION	1.139412423589844E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.999993591542765	WITHOUT_CLASSIFICATION	6.408457234972294E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999977645143111	WITHOUT_CLASSIFICATION	2.2354856888988563E-6	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999991030428648	WITHOUT_CLASSIFICATION	8.969571353556854E-7	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999984735162588	WITHOUT_CLASSIFICATION	1.5264837411338258E-6	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999988516904091	WITHOUT_CLASSIFICATION	1.1483095908899914E-6	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999988516904091	WITHOUT_CLASSIFICATION	1.1483095908899914E-6	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9999992291310602	WITHOUT_CLASSIFICATION	7.708689397738208E-7	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999986167205713	WITHOUT_CLASSIFICATION	1.3832794285709244E-6	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999991675854145	WITHOUT_CLASSIFICATION	8.324145855074672E-7	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999493989427487	WITHOUT_CLASSIFICATION	5.060105725143226E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999804964420356	WITHOUT_CLASSIFICATION	1.9503557964400492E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999994901712426	WITHOUT_CLASSIFICATION	5.098287574234796E-7	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9999423456553139	WITHOUT_CLASSIFICATION	5.76543446860662E-5	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999998375633867	WITHOUT_CLASSIFICATION	1.624366132825048E-7	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.999990647774148	WITHOUT_CLASSIFICATION	9.35222585193268E-6	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999950902224748	WITHOUT_CLASSIFICATION	4.9097775252089195E-6	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999994546190757	WITHOUT_CLASSIFICATION	5.453809243461929E-7	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999656765418	WITHOUT_CLASSIFICATION	3.4323458167082294E-8	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9999989030314479	WITHOUT_CLASSIFICATION	1.0969685522157623E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999856482827789	WITHOUT_CLASSIFICATION	1.4351717221091487E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999856482827789	WITHOUT_CLASSIFICATION	1.4351717221091487E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999856482827789	WITHOUT_CLASSIFICATION	1.4351717221091487E-4	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.999991380935751	WITHOUT_CLASSIFICATION	8.619064248952656E-6	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.999989742581447	WITHOUT_CLASSIFICATION	1.0257418552986014E-5	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999970404136771	WITHOUT_CLASSIFICATION	2.9595863228904613E-6	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.999999440035556	WITHOUT_CLASSIFICATION	5.599644440225186E-7	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999987586710307	WITHOUT_CLASSIFICATION	1.2413289693537223E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999991558285313	WITHOUT_CLASSIFICATION	8.441714687792772E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999991558285313	WITHOUT_CLASSIFICATION	8.441714687792772E-7	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999982511848462	WITHOUT_CLASSIFICATION	1.748815153890831E-6	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.999999253722434	WITHOUT_CLASSIFICATION	7.462775659630543E-7	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.999982047037709	WITHOUT_CLASSIFICATION	1.7952962291065337E-5	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999941925877484	WITHOUT_CLASSIFICATION	5.807412251690371E-6	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999942210015542	WITHOUT_CLASSIFICATION	5.7789984457962044E-6	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9998228850669525	WITHOUT_CLASSIFICATION	1.7711493304758906E-4	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999993348381833	WITHOUT_CLASSIFICATION	6.651618167387826E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999977045477277	WITHOUT_CLASSIFICATION	2.2954522723150445E-6	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999928823549042	WITHOUT_CLASSIFICATION	7.117645095692859E-6	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999996507592057	WITHOUT_CLASSIFICATION	3.492407942643109E-7	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999406049508488	WITHOUT_CLASSIFICATION	5.939504915125709E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.999964722528253	WITHOUT_CLASSIFICATION	3.527747174704746E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9998506958126677	WITHOUT_CLASSIFICATION	1.4930418733227264E-4	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.999990633024642	WITHOUT_CLASSIFICATION	9.366975357966197E-6	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.99999987656733	WITHOUT_CLASSIFICATION	1.2343267001384053E-7	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999992451438551	WITHOUT_CLASSIFICATION	7.548561448982626E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999537274388399	WITHOUT_CLASSIFICATION	4.6272561160101914E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999619297389569	WITHOUT_CLASSIFICATION	3.807026104302606E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999422735295269	WITHOUT_CLASSIFICATION	5.772647047310858E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999422735295269	WITHOUT_CLASSIFICATION	5.772647047310858E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999422735295269	WITHOUT_CLASSIFICATION	5.772647047310858E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999422735295269	WITHOUT_CLASSIFICATION	5.772647047310858E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999645872590553	WITHOUT_CLASSIFICATION	3.541274094468447E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999995694292586	WITHOUT_CLASSIFICATION	4.3057074134597274E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999995694292586	WITHOUT_CLASSIFICATION	4.3057074134597274E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999988968805978	WITHOUT_CLASSIFICATION	1.103119402170461E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.999959184409648	WITHOUT_CLASSIFICATION	4.081559035198997E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999949500991754	WITHOUT_CLASSIFICATION	5.049900824597165E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999976503137727	WITHOUT_CLASSIFICATION	2.3496862272827576E-6	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999969156804941	WITHOUT_CLASSIFICATION	3.08431950588917E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999794874845065	WITHOUT_CLASSIFICATION	2.051251549348932E-5	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999362619714974	WITHOUT_CLASSIFICATION	6.373802850257423E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999376738662602	WITHOUT_CLASSIFICATION	6.23261337398116E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999376738662602	WITHOUT_CLASSIFICATION	6.23261337398116E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999376738662602	WITHOUT_CLASSIFICATION	6.23261337398116E-5	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999986976657683	WITHOUT_CLASSIFICATION	1.3023342315729528E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999965157232573	WITHOUT_CLASSIFICATION	3.484276742615436E-6	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9999988505598253	WITHOUT_CLASSIFICATION	1.1494401746755488E-6	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999991445445696	WITHOUT_CLASSIFICATION	8.554554305312268E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999991445445696	WITHOUT_CLASSIFICATION	8.554554305312268E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.999990332461275	WITHOUT_CLASSIFICATION	9.667538725018186E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999974095129793	WITHOUT_CLASSIFICATION	2.590487020645268E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999780122567318	WITHOUT_CLASSIFICATION	2.1987743268190818E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999941384655282	WITHOUT_CLASSIFICATION	5.861534471871063E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9999520504680984	WITHOUT_CLASSIFICATION	4.794953190153644E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999852862987684	WITHOUT_CLASSIFICATION	1.4713701231558788E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999987622386098	WITHOUT_CLASSIFICATION	1.2377613901563699E-6	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999995216499855	WITHOUT_CLASSIFICATION	4.783500144364041E-7	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999989282586769	WITHOUT_CLASSIFICATION	1.0717413230763707E-6	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999997515611468	WITHOUT_CLASSIFICATION	2.484388531543601E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999691266890948	WITHOUT_CLASSIFICATION	3.0873310905314305E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9974381571857358	WITHOUT_CLASSIFICATION	0.002561842814264187	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9974381571857358	WITHOUT_CLASSIFICATION	0.002561842814264187	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999747689921937	WITHOUT_CLASSIFICATION	2.5231007806275194E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999968651232951	WITHOUT_CLASSIFICATION	3.1348767049026474E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999968651232951	WITHOUT_CLASSIFICATION	3.1348767049026474E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998362561557875	WITHOUT_CLASSIFICATION	1.6374384421242056E-4	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999618554052984	WITHOUT_CLASSIFICATION	3.814459470156007E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999618554052984	WITHOUT_CLASSIFICATION	3.814459470156007E-5	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998954636349962	WITHOUT_CLASSIFICATION	1.0453636500394466E-4	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999969746725197	WITHOUT_CLASSIFICATION	3.0253274803833064E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9999990030834761	WITHOUT_CLASSIFICATION	9.969165239415549E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9988429550328038	WITHOUT_CLASSIFICATION	0.0011570449671961542	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9988429550328038	WITHOUT_CLASSIFICATION	0.0011570449671961542	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9982487402984794	WITHOUT_CLASSIFICATION	0.0017512597015205086	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.999999902765374	WITHOUT_CLASSIFICATION	9.723462608596296E-8	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9999977619438382	WITHOUT_CLASSIFICATION	2.2380561619170143E-6	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9999851416085874	WITHOUT_CLASSIFICATION	1.4858391412446866E-5	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999883378178315	WITHOUT_CLASSIFICATION	1.1662182168558456E-5	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999883378178315	WITHOUT_CLASSIFICATION	1.1662182168558456E-5	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9999832493529235	WITHOUT_CLASSIFICATION	1.67506470765225E-5	DEFECT
// is this an error???	DEFECT	0.9999763891100208	WITHOUT_CLASSIFICATION	2.3610889979251512E-5	DEFECT
// is this an error???	DEFECT	0.9999763891100208	WITHOUT_CLASSIFICATION	2.3610889979251512E-5	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9999776099023822	WITHOUT_CLASSIFICATION	2.2390097617872516E-5	DEFECT
