// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999992433692295	WITHOUT_CLASSIFICATION	7.566307705305669E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.99998686103149	WITHOUT_CLASSIFICATION	1.3138968509886524E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999993280120033	WITHOUT_CLASSIFICATION	6.719879966920737E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9995188425990708	WITHOUT_CLASSIFICATION	4.811574009292578E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999461123210976	WITHOUT_CLASSIFICATION	5.388767890243775E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999597384798	WITHOUT_CLASSIFICATION	4.026152017312515E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999929610596425	WITHOUT_CLASSIFICATION	7.038940357463697E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999998986029638	WITHOUT_CLASSIFICATION	1.0139703622065557E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999869806858522	WITHOUT_CLASSIFICATION	1.3019314147674308E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999986252781579	WITHOUT_CLASSIFICATION	1.3747218421702676E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999991003355453	WITHOUT_CLASSIFICATION	8.996644547463613E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999991552131643	WITHOUT_CLASSIFICATION	8.447868356915949E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997361298374366	WITHOUT_CLASSIFICATION	2.638701625633955E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997310579858	WITHOUT_CLASSIFICATION	2.689420142098183E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999997355182427	WITHOUT_CLASSIFICATION	2.6448175722080907E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999177329043	WITHOUT_CLASSIFICATION	8.226709568753533E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999962758187594	WITHOUT_CLASSIFICATION	3.7241812406418375E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999929610596425	WITHOUT_CLASSIFICATION	7.038940357463697E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999917869507524	WITHOUT_CLASSIFICATION	8.213049247514938E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999977373369119	WITHOUT_CLASSIFICATION	2.2626630880813756E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.999999478872688	WITHOUT_CLASSIFICATION	5.211273119248796E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843238798	WITHOUT_CLASSIFICATION	7.91567612013261E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843238798	WITHOUT_CLASSIFICATION	7.91567612013261E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999998257709277	WITHOUT_CLASSIFICATION	1.7422907220137903E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999499798199	WITHOUT_CLASSIFICATION	5.002018004549585E-8	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.999998932691244	WITHOUT_CLASSIFICATION	1.0673087560860574E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.999982793645988	WITHOUT_CLASSIFICATION	1.7206354012083605E-5	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999989364032789	WITHOUT_CLASSIFICATION	1.0635967210389793E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999975311947708	WITHOUT_CLASSIFICATION	2.4688052291680075E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999835615733189	WITHOUT_CLASSIFICATION	1.6438426681080368E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999806077072075	WITHOUT_CLASSIFICATION	1.939229279243898E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999999362389672	WITHOUT_CLASSIFICATION	6.376103280113957E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.999381272604178	WITHOUT_CLASSIFICATION	6.18727395822009E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999790939670704	WITHOUT_CLASSIFICATION	2.090603292953033E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999946505650955	WITHOUT_CLASSIFICATION	5.349434904536405E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999975758096199	WITHOUT_CLASSIFICATION	2.424190380070772E-6	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999932047978363	WITHOUT_CLASSIFICATION	6.795202163730417E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999956244252302	WITHOUT_CLASSIFICATION	4.375574769907298E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999869522725319	WITHOUT_CLASSIFICATION	1.3047727468058942E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999995668134445	WITHOUT_CLASSIFICATION	4.331865554943654E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999999896906391	WITHOUT_CLASSIFICATION	1.0309360813875161E-8	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987759710994643	WITHOUT_CLASSIFICATION	0.0012240289005358291	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999420708828	WITHOUT_CLASSIFICATION	5.7929117094681816E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999913837	WITHOUT_CLASSIFICATION	8.616420179549215E-12	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999864440717469	WITHOUT_CLASSIFICATION	1.3555928253190943E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999877952092193	WITHOUT_CLASSIFICATION	1.2204790780654888E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999931363304013	WITHOUT_CLASSIFICATION	6.863669598601549E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008205082	WITHOUT_CLASSIFICATION	9.917949185696776E-8	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998722907511453	WITHOUT_CLASSIFICATION	1.27709248854785E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9999227132970308	WITHOUT_CLASSIFICATION	7.72867029693154E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821717	WITHOUT_CLASSIFICATION	2.2717828323686785E-8	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999931363304013	WITHOUT_CLASSIFICATION	6.863669598601549E-6	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.999993410654551	WITHOUT_CLASSIFICATION	6.589345448915849E-6	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9999667466726815	WITHOUT_CLASSIFICATION	3.325332731847748E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999706829990719	WITHOUT_CLASSIFICATION	2.9317000928105673E-5	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999912141102376	WITHOUT_CLASSIFICATION	8.78588976242711E-6	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999874109342605	WITHOUT_CLASSIFICATION	1.2589065739646615E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999923106008934	WITHOUT_CLASSIFICATION	7.689399106641208E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628456398	WITHOUT_CLASSIFICATION	1.371543601504139E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366022518	WITHOUT_CLASSIFICATION	4.633977481386441E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999986042786788	WITHOUT_CLASSIFICATION	1.3957213212486414E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998915573206	WITHOUT_CLASSIFICATION	1.0844267932072756E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999993823963125	WITHOUT_CLASSIFICATION	6.176036874288148E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912323	WITHOUT_CLASSIFICATION	6.709087675935197E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999997884921682	WITHOUT_CLASSIFICATION	2.1150783180706203E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570522356	WITHOUT_CLASSIFICATION	3.429477643526695E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999979182944523	WITHOUT_CLASSIFICATION	2.081705547678708E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879518	WITHOUT_CLASSIFICATION	3.5212048276077426E-8	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.999971934318758	WITHOUT_CLASSIFICATION	2.806568124204023E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999994047010399	WITHOUT_CLASSIFICATION	5.952989600152643E-7	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999848828959911	WITHOUT_CLASSIFICATION	1.5117104008903747E-5	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.980446369700892	WITHOUT_CLASSIFICATION	0.019553630299107935	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999974938944733	WITHOUT_CLASSIFICATION	2.5061055266767077E-6	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9979117827656168	WITHOUT_CLASSIFICATION	0.0020882172343831312	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9990815251338606	WITHOUT_CLASSIFICATION	9.184748661394712E-4	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999640386061046	WITHOUT_CLASSIFICATION	3.596139389530606E-5	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999999612718953	WITHOUT_CLASSIFICATION	3.8728104668940976E-8	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9999663621586131	WITHOUT_CLASSIFICATION	3.363784138685941E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9994469715182813	WITHOUT_CLASSIFICATION	5.530284817187127E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999991552131643	WITHOUT_CLASSIFICATION	8.447868356915949E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997361298374366	WITHOUT_CLASSIFICATION	2.638701625633955E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997310579858	WITHOUT_CLASSIFICATION	2.689420142098183E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999949823064737	WITHOUT_CLASSIFICATION	5.0176935263067384E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999976394660499	WITHOUT_CLASSIFICATION	2.3605339499831324E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999997355182427	WITHOUT_CLASSIFICATION	2.6448175722080907E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999177329043	WITHOUT_CLASSIFICATION	8.226709568753533E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999962758187594	WITHOUT_CLASSIFICATION	3.7241812406418375E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999928611454124	WITHOUT_CLASSIFICATION	7.138854587566959E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999928611454124	WITHOUT_CLASSIFICATION	7.138854587566959E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999928611454124	WITHOUT_CLASSIFICATION	7.138854587566959E-6	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999597384798	WITHOUT_CLASSIFICATION	4.026152017312515E-8	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999963690338295	WITHOUT_CLASSIFICATION	3.6309661705854534E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999999755542285	WITHOUT_CLASSIFICATION	2.444577151237905E-8	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999994760227717	WITHOUT_CLASSIFICATION	5.239772283582066E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.999999478872688	WITHOUT_CLASSIFICATION	5.211273119248796E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999993964658261	WITHOUT_CLASSIFICATION	6.035341738090539E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999835615733189	WITHOUT_CLASSIFICATION	1.6438426681080368E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999806077072075	WITHOUT_CLASSIFICATION	1.939229279243898E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.999381272604178	WITHOUT_CLASSIFICATION	6.18727395822009E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999975758096199	WITHOUT_CLASSIFICATION	2.424190380070772E-6	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9999515865132764	WITHOUT_CLASSIFICATION	4.841348672361089E-5	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999827518983686	WITHOUT_CLASSIFICATION	1.7248101631382636E-5	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999991266027614	WITHOUT_CLASSIFICATION	8.733972387388893E-7	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999991583539047	WITHOUT_CLASSIFICATION	8.416460953396356E-7	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.999994241041072	WITHOUT_CLASSIFICATION	5.758958928042673E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999995668134445	WITHOUT_CLASSIFICATION	4.331865554943654E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987759710994643	WITHOUT_CLASSIFICATION	0.0012240289005358291	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999997223841093	WITHOUT_CLASSIFICATION	2.7761589064851583E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9998654945515992	WITHOUT_CLASSIFICATION	1.3450544840079876E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999998263065333	WITHOUT_CLASSIFICATION	1.7369346666215497E-7	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999998609528739	WITHOUT_CLASSIFICATION	1.3904712603806412E-7	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999979264563574	WITHOUT_CLASSIFICATION	2.073543642532701E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999945784729755	WITHOUT_CLASSIFICATION	5.4215270245503E-6	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.999999243442994	WITHOUT_CLASSIFICATION	7.565570059844007E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999965841657279	WITHOUT_CLASSIFICATION	3.4158342721974313E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999914693807891	WITHOUT_CLASSIFICATION	8.53061921085878E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999880618235575	WITHOUT_CLASSIFICATION	1.1938176442404491E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999856469493	WITHOUT_CLASSIFICATION	1.4353050805139003E-8	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999914693807891	WITHOUT_CLASSIFICATION	8.53061921085878E-6	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999672636737975	WITHOUT_CLASSIFICATION	3.273632620250344E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999999045927884	WITHOUT_CLASSIFICATION	9.540721152021413E-8	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999938638403	WITHOUT_CLASSIFICATION	6.1361597730713965E-9	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999995439804307	WITHOUT_CLASSIFICATION	4.560195692706375E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999914693807891	WITHOUT_CLASSIFICATION	8.53061921085878E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999880618235575	WITHOUT_CLASSIFICATION	1.1938176442404491E-5	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999998319299166	WITHOUT_CLASSIFICATION	1.6807008337641547E-7	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999979290662	WITHOUT_CLASSIFICATION	2.0709337428704025E-9	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999993930780408	WITHOUT_CLASSIFICATION	6.069219592117623E-7	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999998897298448	WITHOUT_CLASSIFICATION	1.1027015520139186E-7	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999936541488	WITHOUT_CLASSIFICATION	6.345851151184692E-9	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999944012794022	WITHOUT_CLASSIFICATION	5.598720597821169E-6	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999996831405784	WITHOUT_CLASSIFICATION	3.1685942153386524E-7	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999802880883675	WITHOUT_CLASSIFICATION	1.971191163255442E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9999351825263663	WITHOUT_CLASSIFICATION	6.481747363374995E-5	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9998615270741632	WITHOUT_CLASSIFICATION	1.3847292583681796E-4	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9981912264427146	WITHOUT_CLASSIFICATION	0.001808773557285324	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999574720287	WITHOUT_CLASSIFICATION	4.2527971332326583E-8	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999830033445	WITHOUT_CLASSIFICATION	1.699665561901803E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008205082	WITHOUT_CLASSIFICATION	9.917949185696776E-8	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999951800811	WITHOUT_CLASSIFICATION	4.81991890172102E-9	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999991602564571	WITHOUT_CLASSIFICATION	8.397435427820143E-7	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.999855136137389	WITHOUT_CLASSIFICATION	1.4486386261104367E-4	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9999780866882008	WITHOUT_CLASSIFICATION	2.191331179931322E-5	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999992147656932	WITHOUT_CLASSIFICATION	7.852343068260989E-7	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999900217085423	WITHOUT_CLASSIFICATION	9.978291457686165E-6	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999733537559884	WITHOUT_CLASSIFICATION	2.6646244011663562E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999951800811	WITHOUT_CLASSIFICATION	4.81991890172102E-9	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999991602564571	WITHOUT_CLASSIFICATION	8.397435427820143E-7	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999751530651815	WITHOUT_CLASSIFICATION	2.4846934818503008E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999751530651815	WITHOUT_CLASSIFICATION	2.4846934818503008E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999864619679194	WITHOUT_CLASSIFICATION	1.3538032080574423E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.977380717114341	WITHOUT_CLASSIFICATION	0.02261928288565885	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999520312521879	WITHOUT_CLASSIFICATION	4.796874781214864E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999864619679194	WITHOUT_CLASSIFICATION	1.3538032080574423E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.977380717114341	WITHOUT_CLASSIFICATION	0.02261928288565885	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999988367212802	WITHOUT_CLASSIFICATION	1.1632787198205311E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999412602970531	WITHOUT_CLASSIFICATION	5.873970294698649E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999978617657	WITHOUT_CLASSIFICATION	2.1382342015152597E-9	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999999769721422	WITHOUT_CLASSIFICATION	2.3027857779507845E-8	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999978617657	WITHOUT_CLASSIFICATION	2.1382342015152597E-9	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999999549039271	WITHOUT_CLASSIFICATION	4.50960730031162E-8	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999996705968	WITHOUT_CLASSIFICATION	3.294032136328716E-10	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999996705968	WITHOUT_CLASSIFICATION	3.294032136328716E-10	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999975305586638	WITHOUT_CLASSIFICATION	2.469441336302443E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999998355510875	WITHOUT_CLASSIFICATION	1.6444891246255452E-7	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999431169624561	WITHOUT_CLASSIFICATION	5.688303754390822E-5	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999999476286369	WITHOUT_CLASSIFICATION	5.237136309021628E-8	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999997875671343	WITHOUT_CLASSIFICATION	2.1243286578991942E-7	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999996675963045	WITHOUT_CLASSIFICATION	3.3240369546848794E-7	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999990721861559	WITHOUT_CLASSIFICATION	9.278138439811454E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254075761	WITHOUT_CLASSIFICATION	1.745924238185073E-7	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999991963547117	WITHOUT_CLASSIFICATION	8.036452883632493E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348388268	WITHOUT_CLASSIFICATION	1.0865161173227786E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999999998988411	WITHOUT_CLASSIFICATION	1.011588613791437E-10	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254075761	WITHOUT_CLASSIFICATION	1.745924238185073E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348388268	WITHOUT_CLASSIFICATION	1.0865161173227786E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254075761	WITHOUT_CLASSIFICATION	1.745924238185073E-7	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999996358016859	WITHOUT_CLASSIFICATION	3.6419831405277626E-7	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999999583884979	WITHOUT_CLASSIFICATION	4.161150221731344E-8	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254075761	WITHOUT_CLASSIFICATION	1.745924238185073E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254075761	WITHOUT_CLASSIFICATION	1.745924238185073E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254075761	WITHOUT_CLASSIFICATION	1.745924238185073E-7	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999944342870337	WITHOUT_CLASSIFICATION	5.5657129662918585E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999996464634897	WITHOUT_CLASSIFICATION	3.5353651036426294E-7	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999998125740098	WITHOUT_CLASSIFICATION	1.8742599012422576E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.999981108506583	WITHOUT_CLASSIFICATION	1.8891493417073075E-5	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9998507370406905	WITHOUT_CLASSIFICATION	1.4926295930959383E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999983495617932	WITHOUT_CLASSIFICATION	1.6504382068154975E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999999779410994	WITHOUT_CLASSIFICATION	2.2058900586861004E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999997495112701	WITHOUT_CLASSIFICATION	2.504887299359663E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999997495112701	WITHOUT_CLASSIFICATION	2.504887299359663E-7	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999999449049197	WITHOUT_CLASSIFICATION	5.509508041383549E-8	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999999228239441	WITHOUT_CLASSIFICATION	7.717605588557221E-8	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999877125046466	WITHOUT_CLASSIFICATION	1.2287495353332384E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999699386792067	WITHOUT_CLASSIFICATION	3.0061320793257618E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999866585350835	WITHOUT_CLASSIFICATION	1.3341464916500105E-5	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999998789841095	WITHOUT_CLASSIFICATION	1.2101589044604318E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.999981108506583	WITHOUT_CLASSIFICATION	1.8891493417073075E-5	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999335885356102	WITHOUT_CLASSIFICATION	6.641146438981703E-5	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999999190384462	WITHOUT_CLASSIFICATION	8.096155370710312E-8	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.999998109127447	WITHOUT_CLASSIFICATION	1.8908725530674639E-6	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999994870995739	WITHOUT_CLASSIFICATION	5.129004261885022E-7	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999913668654584	WITHOUT_CLASSIFICATION	8.633134541659664E-6	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999999896838397	WITHOUT_CLASSIFICATION	1.0316160198989267E-8	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999594531709638	WITHOUT_CLASSIFICATION	4.054682903629841E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999773044940088	WITHOUT_CLASSIFICATION	2.269550599126663E-5	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999999512387988	WITHOUT_CLASSIFICATION	4.876120122988073E-8	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348388268	WITHOUT_CLASSIFICATION	1.0865161173227786E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991582918415	WITHOUT_CLASSIFICATION	8.417081584310094E-7	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999999999202598	WITHOUT_CLASSIFICATION	7.974022162745889E-11	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999998199225134	WITHOUT_CLASSIFICATION	1.8007748660446528E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999998199225134	WITHOUT_CLASSIFICATION	1.8007748660446528E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999991617212534	WITHOUT_CLASSIFICATION	8.382787467733605E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348388268	WITHOUT_CLASSIFICATION	1.0865161173227786E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999998804235076	WITHOUT_CLASSIFICATION	1.1957649239309864E-7	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999932274324399	WITHOUT_CLASSIFICATION	6.772567560082581E-6	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9885320393263203	WITHOUT_CLASSIFICATION	0.011467960673679707	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999870596238	WITHOUT_CLASSIFICATION	1.2940376144112847E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999755977702796	WITHOUT_CLASSIFICATION	2.4402229720372358E-5	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9996661121889513	WITHOUT_CLASSIFICATION	3.338878110486562E-4	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999999359032861	WITHOUT_CLASSIFICATION	6.409671386748902E-8	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999999852228612	WITHOUT_CLASSIFICATION	1.4777138802502145E-8	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9998892007585306	WITHOUT_CLASSIFICATION	1.1079924146938039E-4	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999999981252469	WITHOUT_CLASSIFICATION	1.8747531262828125E-9	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999879496541173	WITHOUT_CLASSIFICATION	1.2050345882609937E-5	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999977603403061	WITHOUT_CLASSIFICATION	2.23965969397467E-6	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999996101960068	WITHOUT_CLASSIFICATION	3.8980399327332683E-7	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9708735551125616	WITHOUT_CLASSIFICATION	0.029126444887438405	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999885847804728	WITHOUT_CLASSIFICATION	1.141521952729016E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999999245340572	WITHOUT_CLASSIFICATION	7.546594283252508E-8	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999999450072751	WITHOUT_CLASSIFICATION	5.499272478349567E-8	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999989851391853	WITHOUT_CLASSIFICATION	1.014860814690167E-6	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.999999987771474	WITHOUT_CLASSIFICATION	1.2228526022445173E-8	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999989175308801	WITHOUT_CLASSIFICATION	1.0824691198549196E-6	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999139029942045	WITHOUT_CLASSIFICATION	8.609700579557198E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348388268	WITHOUT_CLASSIFICATION	1.0865161173227786E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999999442366888	WITHOUT_CLASSIFICATION	5.576331112701972E-8	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999979476308443	WITHOUT_CLASSIFICATION	2.05236915574169E-6	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999805421784762	WITHOUT_CLASSIFICATION	1.9457821523804923E-5	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999987258202593	WITHOUT_CLASSIFICATION	1.274179740751267E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999974348884371	WITHOUT_CLASSIFICATION	2.5651115630136355E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.999998996931439	WITHOUT_CLASSIFICATION	1.0030685610106599E-6	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999882088307079	WITHOUT_CLASSIFICATION	1.17911692920934E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348388268	WITHOUT_CLASSIFICATION	1.0865161173227786E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999997375770415	WITHOUT_CLASSIFICATION	2.62422958513399E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999999415336122	WITHOUT_CLASSIFICATION	5.846638780864003E-8	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999999415336122	WITHOUT_CLASSIFICATION	5.846638780864003E-8	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999744670760791	WITHOUT_CLASSIFICATION	2.5532923920912605E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999744670760791	WITHOUT_CLASSIFICATION	2.5532923920912605E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998475888145	WITHOUT_CLASSIFICATION	1.5241118550009896E-7	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999703564710148	WITHOUT_CLASSIFICATION	2.964352898509593E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.999998192275353	WITHOUT_CLASSIFICATION	1.8077246470319918E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.999998192275353	WITHOUT_CLASSIFICATION	1.8077246470319918E-6	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999995187128946	WITHOUT_CLASSIFICATION	4.812871054111082E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999977666660649	WITHOUT_CLASSIFICATION	2.233333935180183E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999996464634897	WITHOUT_CLASSIFICATION	3.5353651036426294E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999987370620756	WITHOUT_CLASSIFICATION	1.2629379244283957E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999987370620756	WITHOUT_CLASSIFICATION	1.2629379244283957E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999987370620756	WITHOUT_CLASSIFICATION	1.2629379244283957E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999977666660649	WITHOUT_CLASSIFICATION	2.233333935180183E-6	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.999999969188575	WITHOUT_CLASSIFICATION	3.081142503377742E-8	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999817283765606	WITHOUT_CLASSIFICATION	1.8271623439397826E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9995835900885459	WITHOUT_CLASSIFICATION	4.164099114541218E-4	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999921572588586	WITHOUT_CLASSIFICATION	7.84274114127979E-6	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999995800089874	WITHOUT_CLASSIFICATION	4.1999101266012307E-7	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999998758144867	WITHOUT_CLASSIFICATION	1.2418551324957765E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999993280120033	WITHOUT_CLASSIFICATION	6.719879966920737E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9995188425990708	WITHOUT_CLASSIFICATION	4.811574009292578E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999461123210976	WITHOUT_CLASSIFICATION	5.388767890243775E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999597384798	WITHOUT_CLASSIFICATION	4.026152017312515E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999998986029638	WITHOUT_CLASSIFICATION	1.0139703622065557E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999869806858522	WITHOUT_CLASSIFICATION	1.3019314147674308E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999986252781579	WITHOUT_CLASSIFICATION	1.3747218421702676E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999991552131643	WITHOUT_CLASSIFICATION	8.447868356915949E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997361298374366	WITHOUT_CLASSIFICATION	2.638701625633955E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997310579858	WITHOUT_CLASSIFICATION	2.689420142098183E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999955132043442	WITHOUT_CLASSIFICATION	4.48679565573606E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999997355182427	WITHOUT_CLASSIFICATION	2.6448175722080907E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999177329043	WITHOUT_CLASSIFICATION	8.226709568753533E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999962758187594	WITHOUT_CLASSIFICATION	3.7241812406418375E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999917869507524	WITHOUT_CLASSIFICATION	8.213049247514938E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999977373369119	WITHOUT_CLASSIFICATION	2.2626630880813756E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998676483268	WITHOUT_CLASSIFICATION	1.3235167327089365E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999999868506654	WITHOUT_CLASSIFICATION	1.31493346009407E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.999999478872688	WITHOUT_CLASSIFICATION	5.211273119248796E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999998257709277	WITHOUT_CLASSIFICATION	1.7422907220137903E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999499798199	WITHOUT_CLASSIFICATION	5.002018004549585E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999993964658261	WITHOUT_CLASSIFICATION	6.035341738090539E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999835615733189	WITHOUT_CLASSIFICATION	1.6438426681080368E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999806077072075	WITHOUT_CLASSIFICATION	1.939229279243898E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999999362389672	WITHOUT_CLASSIFICATION	6.376103280113957E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.999381272604178	WITHOUT_CLASSIFICATION	6.18727395822009E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999999985808342	WITHOUT_CLASSIFICATION	1.4191658058481392E-8	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999969110295	WITHOUT_CLASSIFICATION	3.0889705832068573E-9	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999956244252302	WITHOUT_CLASSIFICATION	4.375574769907298E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999790939670704	WITHOUT_CLASSIFICATION	2.090603292953033E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999975758096199	WITHOUT_CLASSIFICATION	2.424190380070772E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999946505650955	WITHOUT_CLASSIFICATION	5.349434904536405E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992489890642	WITHOUT_CLASSIFICATION	7.51010935803444E-7	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999998742136562	WITHOUT_CLASSIFICATION	1.2578634378085968E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999975758096199	WITHOUT_CLASSIFICATION	2.424190380070772E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999995668134445	WITHOUT_CLASSIFICATION	4.331865554943654E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999869522725319	WITHOUT_CLASSIFICATION	1.3047727468058942E-5	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999949885468216	WITHOUT_CLASSIFICATION	5.011453178467624E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987759710994643	WITHOUT_CLASSIFICATION	0.0012240289005358291	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999991356996941	WITHOUT_CLASSIFICATION	8.643003058487871E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992489890642	WITHOUT_CLASSIFICATION	7.51010935803444E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987759710994643	WITHOUT_CLASSIFICATION	0.0012240289005358291	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999948169330086	WITHOUT_CLASSIFICATION	5.183066991392703E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.999999998424693	WITHOUT_CLASSIFICATION	1.5753070039934943E-9	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999969226005314	WITHOUT_CLASSIFICATION	3.0773994685658258E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999994256725128	WITHOUT_CLASSIFICATION	5.743274872265985E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999999847926028	WITHOUT_CLASSIFICATION	1.5207397173434393E-8	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9998614229349576	WITHOUT_CLASSIFICATION	1.3857706504246553E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999999844647087	WITHOUT_CLASSIFICATION	1.5535291217028644E-8	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999996210265119	WITHOUT_CLASSIFICATION	3.789734882240082E-7	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999820304578415	WITHOUT_CLASSIFICATION	1.796954215851239E-5	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999935687187483	WITHOUT_CLASSIFICATION	6.431281251619121E-6	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999992417621715	WITHOUT_CLASSIFICATION	7.58237828602202E-7	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.999998001977189	WITHOUT_CLASSIFICATION	1.9980228109318177E-6	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999997812312789	WITHOUT_CLASSIFICATION	2.187687210953245E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999988788318518	WITHOUT_CLASSIFICATION	1.1211681481157331E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999994207222554	WITHOUT_CLASSIFICATION	5.792777445248124E-7	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999995892432118	WITHOUT_CLASSIFICATION	4.1075678834345884E-7	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999964291660648	WITHOUT_CLASSIFICATION	3.5708339352987283E-6	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999954136065115	WITHOUT_CLASSIFICATION	4.586393488586621E-6	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999999717224409	WITHOUT_CLASSIFICATION	2.8277559069046432E-8	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999952137774846	WITHOUT_CLASSIFICATION	4.786222515412605E-6	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999945795270245	WITHOUT_CLASSIFICATION	5.42047297550845E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999999724104974	WITHOUT_CLASSIFICATION	2.7589502473592824E-8	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999999925324436	WITHOUT_CLASSIFICATION	7.467556323439435E-9	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999994481994908	WITHOUT_CLASSIFICATION	5.518005091345016E-7	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999943678180507	WITHOUT_CLASSIFICATION	5.632181949238956E-6	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9604930475001296	WITHOUT_CLASSIFICATION	0.03950695249987032	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999994879089352	WITHOUT_CLASSIFICATION	5.12091064813165E-7	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999998511704108	WITHOUT_CLASSIFICATION	1.4882958922102704E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999999932019565	WITHOUT_CLASSIFICATION	6.798043439678901E-9	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999993942887406	WITHOUT_CLASSIFICATION	6.05711259384952E-7	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999420708828	WITHOUT_CLASSIFICATION	5.7929117094681816E-8	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999989871111442	WITHOUT_CLASSIFICATION	1.0128888557817468E-6	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999998611757076	WITHOUT_CLASSIFICATION	1.3882429244273486E-7	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999999836613434	WITHOUT_CLASSIFICATION	1.6338656589758705E-8	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999867008129147	WITHOUT_CLASSIFICATION	1.3299187085389916E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999763706463927	WITHOUT_CLASSIFICATION	2.3629353607357662E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9994182738230494	WITHOUT_CLASSIFICATION	5.817261769506019E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999991712798901	WITHOUT_CLASSIFICATION	8.287201099089392E-7	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.999999730670859	WITHOUT_CLASSIFICATION	2.693291408786543E-7	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999995330046111	WITHOUT_CLASSIFICATION	4.669953889524299E-7	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999983318855182	WITHOUT_CLASSIFICATION	1.6681144818200834E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999992450155651	WITHOUT_CLASSIFICATION	7.549844347564459E-7	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999998398030926	WITHOUT_CLASSIFICATION	1.6019690741043492E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999984546680276	WITHOUT_CLASSIFICATION	1.5453319724078864E-6	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999834541011949	WITHOUT_CLASSIFICATION	1.654589880505366E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999973267263367	WITHOUT_CLASSIFICATION	2.6732736632916777E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999719083576895	WITHOUT_CLASSIFICATION	2.8091642310476768E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999911355663954	WITHOUT_CLASSIFICATION	8.864433604609022E-6	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999999947746896	WITHOUT_CLASSIFICATION	5.225310416022645E-9	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.999999958406284	WITHOUT_CLASSIFICATION	4.159371596791652E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999999684020964	WITHOUT_CLASSIFICATION	3.1597903607608624E-8	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9921331709116546	WITHOUT_CLASSIFICATION	0.007866829088345262	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9998493525422751	WITHOUT_CLASSIFICATION	1.506474577248102E-4	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999990864356046	WITHOUT_CLASSIFICATION	9.135643954734964E-7	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999998117198503	WITHOUT_CLASSIFICATION	1.8828014957457318E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999998355510875	WITHOUT_CLASSIFICATION	1.6444891246255452E-7	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999914350308645	WITHOUT_CLASSIFICATION	8.564969135502551E-6	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999996654440584	WITHOUT_CLASSIFICATION	3.345559416555097E-7	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999999877256031	WITHOUT_CLASSIFICATION	1.2274396937609014E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999999213255745	WITHOUT_CLASSIFICATION	7.867442554734591E-8	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.999999994310094	WITHOUT_CLASSIFICATION	5.689905925729322E-9	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999384570406703	WITHOUT_CLASSIFICATION	6.154295932973825E-5	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9999128757671912	WITHOUT_CLASSIFICATION	8.712423280874476E-5	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999965589594769	WITHOUT_CLASSIFICATION	3.4410405230511217E-6	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999999991418451	WITHOUT_CLASSIFICATION	8.581549054022749E-10	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999998639015542	WITHOUT_CLASSIFICATION	1.3609844587366716E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.999999998556521	WITHOUT_CLASSIFICATION	1.4434790023532035E-9	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999983495617932	WITHOUT_CLASSIFICATION	1.6504382068154975E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999999779410994	WITHOUT_CLASSIFICATION	2.2058900586861004E-8	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999998789841095	WITHOUT_CLASSIFICATION	1.2101589044604318E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999384570406703	WITHOUT_CLASSIFICATION	6.154295932973825E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999998639015542	WITHOUT_CLASSIFICATION	1.3609844587366716E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.999999998556521	WITHOUT_CLASSIFICATION	1.4434790023532035E-9	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.999999943182525	WITHOUT_CLASSIFICATION	5.6817475070961146E-8	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999960246568715	WITHOUT_CLASSIFICATION	3.975343128488353E-6	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999801220745951	WITHOUT_CLASSIFICATION	1.98779254048643E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999981371324582	WITHOUT_CLASSIFICATION	1.862867541717528E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999997229065881	WITHOUT_CLASSIFICATION	2.770934117991872E-7	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999996572396	WITHOUT_CLASSIFICATION	3.4276033383391057E-10	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999999990970967	WITHOUT_CLASSIFICATION	9.029032136613316E-10	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999952532436378	WITHOUT_CLASSIFICATION	4.7467563622520456E-6	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999999972252823	WITHOUT_CLASSIFICATION	2.77471761938192E-9	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9999631547410391	WITHOUT_CLASSIFICATION	3.684525896089485E-5	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999993917504507	WITHOUT_CLASSIFICATION	6.082495492524122E-7	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9997744602184179	WITHOUT_CLASSIFICATION	2.255397815821705E-4	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999992726693987	WITHOUT_CLASSIFICATION	7.273306012267458E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999998657015449	WITHOUT_CLASSIFICATION	1.342984551113824E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999998130684297	WITHOUT_CLASSIFICATION	1.8693157031839055E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.999999970331378	WITHOUT_CLASSIFICATION	2.966862193918451E-8	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999117937343687	WITHOUT_CLASSIFICATION	8.820626563137728E-5	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999998554461131	WITHOUT_CLASSIFICATION	1.445538867647392E-7	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999999843437246	WITHOUT_CLASSIFICATION	1.5656275284833245E-8	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999994795245605	WITHOUT_CLASSIFICATION	5.204754396089674E-7	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999999977268198	WITHOUT_CLASSIFICATION	2.27318009119694E-9	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999999270526	WITHOUT_CLASSIFICATION	7.294742906431731E-11	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999999213255745	WITHOUT_CLASSIFICATION	7.867442554734591E-8	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.999999994310094	WITHOUT_CLASSIFICATION	5.689905925729322E-9	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999999945501153	WITHOUT_CLASSIFICATION	5.44988467554368E-9	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999999999784035	WITHOUT_CLASSIFICATION	2.159650746995622E-11	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999999564180075	WITHOUT_CLASSIFICATION	4.3581992331382824E-8	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999997920040088	WITHOUT_CLASSIFICATION	2.0799599128996087E-7	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999846020578393	WITHOUT_CLASSIFICATION	1.5397942160606102E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999981383372921	WITHOUT_CLASSIFICATION	1.8616627079404362E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9998706367767086	WITHOUT_CLASSIFICATION	1.293632232914955E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.999987822831246	WITHOUT_CLASSIFICATION	1.2177168754087212E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999990990313055	WITHOUT_CLASSIFICATION	9.009686944861689E-7	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999990990313055	WITHOUT_CLASSIFICATION	9.009686944861689E-7	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999976824791357	WITHOUT_CLASSIFICATION	2.3175208643150083E-6	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999977640889081	WITHOUT_CLASSIFICATION	2.2359110918191035E-6	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999984056872708	WITHOUT_CLASSIFICATION	1.5943127291925239E-6	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999991101549812	WITHOUT_CLASSIFICATION	8.898450187221625E-7	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.999999996666651	WITHOUT_CLASSIFICATION	3.3333490803180587E-9	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999774541666	WITHOUT_CLASSIFICATION	2.2545833452247456E-8	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999998887777111	WITHOUT_CLASSIFICATION	1.1122228885042345E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999998887777111	WITHOUT_CLASSIFICATION	1.1122228885042345E-7	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999999675019133	WITHOUT_CLASSIFICATION	3.249808667077801E-8	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999984231671043	WITHOUT_CLASSIFICATION	1.5768328956786475E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.999999899754449	WITHOUT_CLASSIFICATION	1.002455509671742E-7	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.999999959669159	WITHOUT_CLASSIFICATION	4.033084106571369E-8	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999999940142404	WITHOUT_CLASSIFICATION	5.985759628780704E-9	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999947240355098	WITHOUT_CLASSIFICATION	5.275964490145673E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.999999975655135	WITHOUT_CLASSIFICATION	2.4344864951485924E-8	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999995400729264	WITHOUT_CLASSIFICATION	4.599270737378974E-7	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999999896944013	WITHOUT_CLASSIFICATION	1.0305598671410179E-8	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999999844042216	WITHOUT_CLASSIFICATION	1.559577850166376E-8	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999162311971374	WITHOUT_CLASSIFICATION	8.376880286268523E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999994914068	WITHOUT_CLASSIFICATION	5.085931450790843E-10	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999507971224653	WITHOUT_CLASSIFICATION	4.920287753477664E-5	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999998686982952	WITHOUT_CLASSIFICATION	1.3130170480091275E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999973977632057	WITHOUT_CLASSIFICATION	2.6022367942234906E-6	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999996029576083	WITHOUT_CLASSIFICATION	3.970423918044437E-7	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999976379244614	WITHOUT_CLASSIFICATION	2.362075538606498E-6	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999995952750608	WITHOUT_CLASSIFICATION	4.0472493920186855E-7	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999999786289597	WITHOUT_CLASSIFICATION	2.137104030084256E-8	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.99999976153075	WITHOUT_CLASSIFICATION	2.3846925003425536E-7	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999998666599552	WITHOUT_CLASSIFICATION	1.3334004476744E-7	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999999903368454	WITHOUT_CLASSIFICATION	9.663154617970275E-9	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999999953682548	WITHOUT_CLASSIFICATION	4.631745250957971E-9	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999970285181464	WITHOUT_CLASSIFICATION	2.9714818535885977E-6	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999999089362446	WITHOUT_CLASSIFICATION	9.106375547313306E-8	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999997832055939	WITHOUT_CLASSIFICATION	2.1679440619526584E-7	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999999301961944	WITHOUT_CLASSIFICATION	6.980380555545732E-8	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999991590197497	WITHOUT_CLASSIFICATION	8.409802504237555E-7	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999992554518272	WITHOUT_CLASSIFICATION	7.445481727617549E-7	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999999950281016	WITHOUT_CLASSIFICATION	4.971898465338755E-9	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999988624036861	WITHOUT_CLASSIFICATION	1.137596313952203E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999881808269434	WITHOUT_CLASSIFICATION	1.1819173056554096E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999936592841115	WITHOUT_CLASSIFICATION	6.340715888516603E-6	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999929099227526	WITHOUT_CLASSIFICATION	7.090077247445151E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9998680162813712	WITHOUT_CLASSIFICATION	1.3198371862872056E-4	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999924204686441	WITHOUT_CLASSIFICATION	7.579531355800617E-6	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999659541952768	WITHOUT_CLASSIFICATION	3.4045804723124925E-5	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999914245216861	WITHOUT_CLASSIFICATION	8.575478313908707E-6	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999919568084504	WITHOUT_CLASSIFICATION	8.043191549623045E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999849216936879	WITHOUT_CLASSIFICATION	1.5078306312189338E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999993926969475	WITHOUT_CLASSIFICATION	6.073030524321016E-7	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999754783307458	WITHOUT_CLASSIFICATION	2.45216692541673E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999998972774518	WITHOUT_CLASSIFICATION	1.0272254825627767E-7	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999977471935546	WITHOUT_CLASSIFICATION	2.2528064453562953E-6	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999952216779838	WITHOUT_CLASSIFICATION	4.7783220160918445E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999993926969475	WITHOUT_CLASSIFICATION	6.073030524321016E-7	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999998972774518	WITHOUT_CLASSIFICATION	1.0272254825627767E-7	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999892668407356	WITHOUT_CLASSIFICATION	1.0733159264286001E-5	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999999732731285	WITHOUT_CLASSIFICATION	2.6726871449824672E-8	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999993613315766	WITHOUT_CLASSIFICATION	6.386684234631567E-7	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999999845431929	WITHOUT_CLASSIFICATION	1.5456807065895906E-8	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999849216936879	WITHOUT_CLASSIFICATION	1.5078306312189338E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999849216936879	WITHOUT_CLASSIFICATION	1.5078306312189338E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999993926969475	WITHOUT_CLASSIFICATION	6.073030524321016E-7	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999998353060463	WITHOUT_CLASSIFICATION	1.6469395369471858E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999986346941122	WITHOUT_CLASSIFICATION	1.3653058877522152E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999993270774912	WITHOUT_CLASSIFICATION	6.729225088456054E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999993270774912	WITHOUT_CLASSIFICATION	6.729225088456054E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999980482077	WITHOUT_CLASSIFICATION	1.9517922979832127E-9	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999934245657809	WITHOUT_CLASSIFICATION	6.575434219049515E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999352029641745	WITHOUT_CLASSIFICATION	6.479703582546515E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999352029641745	WITHOUT_CLASSIFICATION	6.479703582546515E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999982802783849	WITHOUT_CLASSIFICATION	1.7197216151619523E-6	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999934245657809	WITHOUT_CLASSIFICATION	6.575434219049515E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999352029641745	WITHOUT_CLASSIFICATION	6.479703582546515E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999982802783849	WITHOUT_CLASSIFICATION	1.7197216151619523E-6	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999979714285402	WITHOUT_CLASSIFICATION	2.0285714598545163E-6	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999999413911139	WITHOUT_CLASSIFICATION	5.860888603191398E-8	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999999993015887	WITHOUT_CLASSIFICATION	6.984114078837908E-10	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999998212819031	WITHOUT_CLASSIFICATION	1.7871809688958693E-7	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999929281962714	WITHOUT_CLASSIFICATION	7.071803728580386E-6	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999999558422966	WITHOUT_CLASSIFICATION	4.415770334200447E-8	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999912861418905	WITHOUT_CLASSIFICATION	8.713858109539226E-6	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999989388930752	WITHOUT_CLASSIFICATION	1.061106924782083E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9999051126848512	WITHOUT_CLASSIFICATION	9.488731514885077E-5	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999780542160915	WITHOUT_CLASSIFICATION	2.1945783908379226E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999997726623361	WITHOUT_CLASSIFICATION	2.2733766392926742E-7	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999973765514362	WITHOUT_CLASSIFICATION	2.6234485638698213E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999999959243632	WITHOUT_CLASSIFICATION	4.07563681682846E-9	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999999917863195	WITHOUT_CLASSIFICATION	8.213680483443594E-9	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999999999986257	WITHOUT_CLASSIFICATION	1.3744051344830688E-12	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999986917207826	WITHOUT_CLASSIFICATION	1.308279217432555E-6	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999999360871586	WITHOUT_CLASSIFICATION	6.39128413479398E-8	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999999844220495	WITHOUT_CLASSIFICATION	1.5577950467466518E-8	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999999462924704	WITHOUT_CLASSIFICATION	5.370752954901252E-8	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999994262714152	WITHOUT_CLASSIFICATION	5.737285847860532E-7	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999998376803	WITHOUT_CLASSIFICATION	1.6231960796097695E-10	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.999999922181659	WITHOUT_CLASSIFICATION	7.781834106624931E-8	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999936308696	WITHOUT_CLASSIFICATION	6.369130425454587E-9	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999556852065	WITHOUT_CLASSIFICATION	4.4314793477720633E-8	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999998804086939	WITHOUT_CLASSIFICATION	1.1959130611555705E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999999955526782	WITHOUT_CLASSIFICATION	4.4473219277577835E-9	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999999923008123	WITHOUT_CLASSIFICATION	7.699187737976547E-9	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999992329221201	WITHOUT_CLASSIFICATION	7.670778798904897E-7	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999999996710276	WITHOUT_CLASSIFICATION	3.2897237052775086E-10	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999817691896363	WITHOUT_CLASSIFICATION	1.8230810363704258E-5	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999978150664053	WITHOUT_CLASSIFICATION	2.1849335947126776E-6	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999999753955734	WITHOUT_CLASSIFICATION	2.460442665103489E-8	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.999994142319692	WITHOUT_CLASSIFICATION	5.857680308048203E-6	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999999519024326	WITHOUT_CLASSIFICATION	4.809756725139862E-8	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999999198032604	WITHOUT_CLASSIFICATION	8.019673962165079E-8	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999995587191531	WITHOUT_CLASSIFICATION	4.412808468760377E-7	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999999999735765	WITHOUT_CLASSIFICATION	2.6423516880154272E-11	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999993385396977	WITHOUT_CLASSIFICATION	6.614603023712613E-7	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999993465161345	WITHOUT_CLASSIFICATION	6.534838654605746E-7	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999993465161345	WITHOUT_CLASSIFICATION	6.534838654605746E-7	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999993465161345	WITHOUT_CLASSIFICATION	6.534838654605746E-7	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999997692054328	WITHOUT_CLASSIFICATION	2.3079456719002024E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999998770809851	WITHOUT_CLASSIFICATION	1.229190148238166E-7	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999977655333496	WITHOUT_CLASSIFICATION	2.2344666503160283E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999999862203539	WITHOUT_CLASSIFICATION	1.3779646168475525E-8	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999899978717556	WITHOUT_CLASSIFICATION	1.0002128244464827E-5	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999912205965841	WITHOUT_CLASSIFICATION	8.77940341584857E-6	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999990807819	WITHOUT_CLASSIFICATION	9.192181228860205E-10	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999996392750522	WITHOUT_CLASSIFICATION	3.607249477975497E-7	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999997240037966	WITHOUT_CLASSIFICATION	2.7599620347394545E-7	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999996827325854	WITHOUT_CLASSIFICATION	3.172674145306468E-7	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.99999917265345	WITHOUT_CLASSIFICATION	8.273465500638961E-7	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999890120508419	WITHOUT_CLASSIFICATION	1.0987949158097484E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999997377543396	WITHOUT_CLASSIFICATION	2.6224566042615476E-7	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999673287043284	WITHOUT_CLASSIFICATION	3.2671295671611245E-5	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9998283009944959	WITHOUT_CLASSIFICATION	1.7169900550398584E-4	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.999999997052296	WITHOUT_CLASSIFICATION	2.9477039363257947E-9	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999998296975667	WITHOUT_CLASSIFICATION	1.7030243319204497E-7	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999982507375854	WITHOUT_CLASSIFICATION	1.7492624146379333E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999957029765192	WITHOUT_CLASSIFICATION	4.297023480874622E-6	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999816043975363	WITHOUT_CLASSIFICATION	1.8395602463699387E-5	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.999955681436041	WITHOUT_CLASSIFICATION	4.431856395903252E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999997941015568	WITHOUT_CLASSIFICATION	2.0589844311570028E-7	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.999925173315642	WITHOUT_CLASSIFICATION	7.482668435793595E-5	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.999999833892883	WITHOUT_CLASSIFICATION	1.6610711681680503E-7	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999996796450765	WITHOUT_CLASSIFICATION	3.203549234729852E-7	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999974806845016	WITHOUT_CLASSIFICATION	2.519315498379433E-6	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999999983047727	WITHOUT_CLASSIFICATION	1.6952272920674886E-9	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999998451332939	WITHOUT_CLASSIFICATION	1.5486670617238973E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999999806636697	WITHOUT_CLASSIFICATION	1.9336330310655727E-8	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999977587128241	WITHOUT_CLASSIFICATION	2.241287175862992E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999538901553363	WITHOUT_CLASSIFICATION	4.610984466369034E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999992814050921	WITHOUT_CLASSIFICATION	7.185949079831833E-7	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9992953922928441	WITHOUT_CLASSIFICATION	7.046077071557936E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999867805384681	WITHOUT_CLASSIFICATION	1.3219461531889136E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999269238426401	WITHOUT_CLASSIFICATION	7.307615735993504E-5	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999999926220824	WITHOUT_CLASSIFICATION	7.377917552117213E-9	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999997013560803	WITHOUT_CLASSIFICATION	2.9864391962250056E-7	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999945402242594	WITHOUT_CLASSIFICATION	5.459775740617152E-6	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999996931671442	WITHOUT_CLASSIFICATION	3.068328558184709E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999862357372635	WITHOUT_CLASSIFICATION	1.3764262736354934E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999986926484726	WITHOUT_CLASSIFICATION	1.3073515273373211E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999936691141769	WITHOUT_CLASSIFICATION	6.3308858230892355E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999981383372921	WITHOUT_CLASSIFICATION	1.8616627079404362E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9998730709972447	WITHOUT_CLASSIFICATION	1.2692900275529612E-4	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9998870550908328	WITHOUT_CLASSIFICATION	1.1294490916726019E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9995528595096674	WITHOUT_CLASSIFICATION	4.471404903326137E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9998204935867189	WITHOUT_CLASSIFICATION	1.795064132811765E-4	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999816358973894	WITHOUT_CLASSIFICATION	1.8364102610579744E-5	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9990326585425912	WITHOUT_CLASSIFICATION	9.673414574087559E-4	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999922711810005	WITHOUT_CLASSIFICATION	7.728818999389513E-6	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999999998866155	WITHOUT_CLASSIFICATION	1.1338451175166583E-10	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999182222345951	WITHOUT_CLASSIFICATION	8.177776540485977E-5	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999989042081249	WITHOUT_CLASSIFICATION	1.0957918750830982E-6	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999998768434827	WITHOUT_CLASSIFICATION	1.2315651738940984E-7	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999963745621904	WITHOUT_CLASSIFICATION	3.6254378096385484E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999994052589349	WITHOUT_CLASSIFICATION	5.947410650666995E-7	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999976784501409	WITHOUT_CLASSIFICATION	2.3215498590319093E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999844573044736	WITHOUT_CLASSIFICATION	1.5542695526426625E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999998541253564	WITHOUT_CLASSIFICATION	1.4587464364022297E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999998974319987	WITHOUT_CLASSIFICATION	1.0256800123255117E-7	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999999854615431	WITHOUT_CLASSIFICATION	1.45384568444423E-8	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999979192531175	WITHOUT_CLASSIFICATION	2.0807468824625175E-6	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999828856776933	WITHOUT_CLASSIFICATION	1.7114322306580536E-5	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999993734950597	WITHOUT_CLASSIFICATION	6.265049403446917E-7	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9999514874639734	WITHOUT_CLASSIFICATION	4.851253602664174E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999835346207018	WITHOUT_CLASSIFICATION	1.64653792982688E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999977756262788	WITHOUT_CLASSIFICATION	2.2243737213385465E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999998963687836	WITHOUT_CLASSIFICATION	1.0363121630585617E-7	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999998963687836	WITHOUT_CLASSIFICATION	1.0363121630585617E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999998791187747	WITHOUT_CLASSIFICATION	1.2088122530098587E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999998791187747	WITHOUT_CLASSIFICATION	1.2088122530098587E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999835346207018	WITHOUT_CLASSIFICATION	1.64653792982688E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999998791187747	WITHOUT_CLASSIFICATION	1.2088122530098587E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999997678758558	WITHOUT_CLASSIFICATION	2.3212414411591078E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999988288016842	WITHOUT_CLASSIFICATION	1.1711983157638363E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999988288016842	WITHOUT_CLASSIFICATION	1.1711983157638363E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999987726949902	WITHOUT_CLASSIFICATION	1.2273050097951093E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999999701189745	WITHOUT_CLASSIFICATION	2.9881025471487344E-8	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999999826018043	WITHOUT_CLASSIFICATION	1.739819564926893E-8	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9999097263739058	WITHOUT_CLASSIFICATION	9.02736260942119E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999939882021686	WITHOUT_CLASSIFICATION	6.011797831343E-6	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999991009439522	WITHOUT_CLASSIFICATION	8.990560477302456E-7	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.999992102525422	WITHOUT_CLASSIFICATION	7.897474577997318E-6	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999940671964469	WITHOUT_CLASSIFICATION	5.932803553071381E-6	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999928794847265	WITHOUT_CLASSIFICATION	7.120515273578263E-6	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999991595404677	WITHOUT_CLASSIFICATION	8.404595322794374E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.999999991914644	WITHOUT_CLASSIFICATION	8.085356030283061E-9	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999999996399132	WITHOUT_CLASSIFICATION	3.600868453132206E-10	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999987406456295	WITHOUT_CLASSIFICATION	1.259354370493958E-6	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999999879878683	WITHOUT_CLASSIFICATION	1.201213178231269E-8	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999986654010244	WITHOUT_CLASSIFICATION	1.3345989754447104E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999999999056924	WITHOUT_CLASSIFICATION	9.430751191832061E-11	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.999999915498035	WITHOUT_CLASSIFICATION	8.450196490829319E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9940372578557344	WITHOUT_CLASSIFICATION	0.005962742144265673	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.999644199688502	WITHOUT_CLASSIFICATION	3.5580031149789267E-4	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999997764825297	WITHOUT_CLASSIFICATION	2.235174702992807E-7	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.999999999521687	WITHOUT_CLASSIFICATION	4.783129475256303E-10	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999992205376752	WITHOUT_CLASSIFICATION	7.794623249055189E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999969447747	WITHOUT_CLASSIFICATION	3.055225236789195E-9	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999981600407184	WITHOUT_CLASSIFICATION	1.8399592816617535E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999981600407184	WITHOUT_CLASSIFICATION	1.8399592816617535E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999998907172359	WITHOUT_CLASSIFICATION	1.0928276402335953E-7	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999997332826605	WITHOUT_CLASSIFICATION	2.667173394849395E-7	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999935795382026	WITHOUT_CLASSIFICATION	6.420461797470415E-6	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999986127541228	WITHOUT_CLASSIFICATION	1.3872458771066704E-6	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999999363663508	WITHOUT_CLASSIFICATION	6.36336491764067E-8	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999989762153715	WITHOUT_CLASSIFICATION	1.0237846285462382E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999998830359517	WITHOUT_CLASSIFICATION	1.1696404841692611E-7	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.999886464902297	WITHOUT_CLASSIFICATION	1.1353509770293965E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999259917241805	WITHOUT_CLASSIFICATION	7.40082758194919E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999789476715248	WITHOUT_CLASSIFICATION	2.1052328475113538E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999995928781648	WITHOUT_CLASSIFICATION	4.071218352095495E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999938116202716	WITHOUT_CLASSIFICATION	6.188379728510635E-6	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.999999929141854	WITHOUT_CLASSIFICATION	7.08581461200355E-8	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999966044999593	WITHOUT_CLASSIFICATION	3.3955000406662842E-6	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999999998736631	WITHOUT_CLASSIFICATION	1.2633683649478923E-10	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999998714857434	WITHOUT_CLASSIFICATION	1.2851425655002917E-7	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999994417779839	WITHOUT_CLASSIFICATION	5.582220160810084E-7	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999979271829	WITHOUT_CLASSIFICATION	2.072817164289337E-9	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999999147845771	WITHOUT_CLASSIFICATION	8.521542298463686E-8	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999995484652087	WITHOUT_CLASSIFICATION	4.515347913726271E-7	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999995414442545	WITHOUT_CLASSIFICATION	4.585557454025134E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999894511023465	WITHOUT_CLASSIFICATION	1.0548897653545345E-5	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999891440028796	WITHOUT_CLASSIFICATION	1.0855997120380657E-5	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999891186763414	WITHOUT_CLASSIFICATION	1.0881323658507801E-5	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999993143156889	WITHOUT_CLASSIFICATION	6.856843111178949E-7	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.999998945728399	WITHOUT_CLASSIFICATION	1.0542716010399302E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999999999197143	WITHOUT_CLASSIFICATION	8.028569977728296E-11	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999995459360155	WITHOUT_CLASSIFICATION	4.5406398450694517E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999767910384	WITHOUT_CLASSIFICATION	2.3208961654617066E-8	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999751915017	WITHOUT_CLASSIFICATION	2.4808498259233235E-8	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999995060570082	WITHOUT_CLASSIFICATION	4.939429918336836E-7	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999999841260525	WITHOUT_CLASSIFICATION	1.587394755372039E-8	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999933385906224	WITHOUT_CLASSIFICATION	6.661409377431712E-6	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999994358091757	WITHOUT_CLASSIFICATION	5.64190824260115E-7	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9985303576721748	WITHOUT_CLASSIFICATION	0.0014696423278252652	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999995289783619	WITHOUT_CLASSIFICATION	4.710216382052452E-7	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999999818242284	WITHOUT_CLASSIFICATION	1.8175771568854235E-8	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999991979783038	WITHOUT_CLASSIFICATION	8.020216962146514E-7	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999020616097538	WITHOUT_CLASSIFICATION	9.793839024625673E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9997414968136612	WITHOUT_CLASSIFICATION	2.585031863388366E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999999838032279	WITHOUT_CLASSIFICATION	1.6196772110484707E-8	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999999958616157	WITHOUT_CLASSIFICATION	4.138384221484909E-9	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999997329350903	WITHOUT_CLASSIFICATION	2.670649097688707E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999993280120033	WITHOUT_CLASSIFICATION	6.719879966920737E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9995188425990708	WITHOUT_CLASSIFICATION	4.811574009292578E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999259917241805	WITHOUT_CLASSIFICATION	7.40082758194919E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999789476715248	WITHOUT_CLASSIFICATION	2.1052328475113538E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999995928781648	WITHOUT_CLASSIFICATION	4.071218352095495E-7	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.999999847272663	WITHOUT_CLASSIFICATION	1.5272733710115666E-7	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999999784835949	WITHOUT_CLASSIFICATION	2.1516405118746514E-8	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999996991055159	WITHOUT_CLASSIFICATION	3.0089448407008324E-7	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999997947631549	WITHOUT_CLASSIFICATION	2.0523684505775475E-7	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999994726069208	WITHOUT_CLASSIFICATION	5.273930792038797E-7	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.999999344150752	WITHOUT_CLASSIFICATION	6.55849248041754E-7	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999997166508461	WITHOUT_CLASSIFICATION	2.83349153971918E-7	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999799337865196	WITHOUT_CLASSIFICATION	2.006621348044468E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999999638381457	WITHOUT_CLASSIFICATION	3.616185434824128E-8	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999999237991627	WITHOUT_CLASSIFICATION	7.62008373396604E-8	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999991845048831	WITHOUT_CLASSIFICATION	8.154951168002683E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999991845048831	WITHOUT_CLASSIFICATION	8.154951168002683E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999966641965486	WITHOUT_CLASSIFICATION	3.335803451363349E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999687702921225	WITHOUT_CLASSIFICATION	3.1229707877555186E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999933269911	WITHOUT_CLASSIFICATION	6.673008989772304E-9	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999995321344667	WITHOUT_CLASSIFICATION	4.6786553330963624E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999998043023158	WITHOUT_CLASSIFICATION	1.9569768415657232E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999940977187	WITHOUT_CLASSIFICATION	5.902281384744837E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999454292875	WITHOUT_CLASSIFICATION	5.457071250937175E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999993083257463	WITHOUT_CLASSIFICATION	6.916742535674757E-7	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999981082469837	WITHOUT_CLASSIFICATION	1.8917530163720165E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999835852857	WITHOUT_CLASSIFICATION	1.6414714307927585E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999847047666	WITHOUT_CLASSIFICATION	1.529523346515792E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999977963919167	WITHOUT_CLASSIFICATION	2.2036080833120996E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999092317258	WITHOUT_CLASSIFICATION	9.076827428439434E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999477198585676	WITHOUT_CLASSIFICATION	5.228014143250537E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999970057653237	WITHOUT_CLASSIFICATION	2.9942346762587678E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999886970440858	WITHOUT_CLASSIFICATION	1.1302955914250526E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999991003355453	WITHOUT_CLASSIFICATION	8.996644547463613E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999461123210976	WITHOUT_CLASSIFICATION	5.388767890243775E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999597384798	WITHOUT_CLASSIFICATION	4.026152017312515E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999998986029638	WITHOUT_CLASSIFICATION	1.0139703622065557E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999869806858522	WITHOUT_CLASSIFICATION	1.3019314147674308E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999986252781579	WITHOUT_CLASSIFICATION	1.3747218421702676E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999991552131643	WITHOUT_CLASSIFICATION	8.447868356915949E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997361298374366	WITHOUT_CLASSIFICATION	2.638701625633955E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997310579858	WITHOUT_CLASSIFICATION	2.689420142098183E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999955132043442	WITHOUT_CLASSIFICATION	4.48679565573606E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999997355182427	WITHOUT_CLASSIFICATION	2.6448175722080907E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999177329043	WITHOUT_CLASSIFICATION	8.226709568753533E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999962758187594	WITHOUT_CLASSIFICATION	3.7241812406418375E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999917869507524	WITHOUT_CLASSIFICATION	8.213049247514938E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999977373369119	WITHOUT_CLASSIFICATION	2.2626630880813756E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.999999478872688	WITHOUT_CLASSIFICATION	5.211273119248796E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999998257709277	WITHOUT_CLASSIFICATION	1.7422907220137903E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999499798199	WITHOUT_CLASSIFICATION	5.002018004549585E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999993964658261	WITHOUT_CLASSIFICATION	6.035341738090539E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999835615733189	WITHOUT_CLASSIFICATION	1.6438426681080368E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999806077072075	WITHOUT_CLASSIFICATION	1.939229279243898E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999999362389672	WITHOUT_CLASSIFICATION	6.376103280113957E-7	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999999985808342	WITHOUT_CLASSIFICATION	1.4191658058481392E-8	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999790939670704	WITHOUT_CLASSIFICATION	2.090603292953033E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999946505650955	WITHOUT_CLASSIFICATION	5.349434904536405E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992489890642	WITHOUT_CLASSIFICATION	7.51010935803444E-7	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999956244252302	WITHOUT_CLASSIFICATION	4.375574769907298E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999869522725319	WITHOUT_CLASSIFICATION	1.3047727468058942E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999995668134445	WITHOUT_CLASSIFICATION	4.331865554943654E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987759710994643	WITHOUT_CLASSIFICATION	0.0012240289005358291	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999966641965486	WITHOUT_CLASSIFICATION	3.335803451363349E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999687702921225	WITHOUT_CLASSIFICATION	3.1229707877555186E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999933269911	WITHOUT_CLASSIFICATION	6.673008989772304E-9	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999995321344667	WITHOUT_CLASSIFICATION	4.6786553330963624E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999454292875	WITHOUT_CLASSIFICATION	5.457071250937175E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999993083257463	WITHOUT_CLASSIFICATION	6.916742535674757E-7	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9989576175988064	WITHOUT_CLASSIFICATION	0.0010423824011935865	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999969226005314	WITHOUT_CLASSIFICATION	3.0773994685658258E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999994256725128	WITHOUT_CLASSIFICATION	5.743274872265985E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999847047666	WITHOUT_CLASSIFICATION	1.529523346515792E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999977963919167	WITHOUT_CLASSIFICATION	2.2036080833120996E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999092317258	WITHOUT_CLASSIFICATION	9.076827428439434E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999477198585676	WITHOUT_CLASSIFICATION	5.228014143250537E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999886970440858	WITHOUT_CLASSIFICATION	1.1302955914250526E-5	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999952254421458	WITHOUT_CLASSIFICATION	4.774557854234783E-6	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999911364494273	WITHOUT_CLASSIFICATION	8.86355057273724E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999952943572	WITHOUT_CLASSIFICATION	4.705642808361988E-9	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9976675823497752	WITHOUT_CLASSIFICATION	0.00233241765022488	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.99999715528378	WITHOUT_CLASSIFICATION	2.8447162199415285E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999985920748358	WITHOUT_CLASSIFICATION	1.4079251642896498E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999999484871919	WITHOUT_CLASSIFICATION	5.151280813725754E-8	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999992433692295	WITHOUT_CLASSIFICATION	7.566307705305669E-7	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999988674484713	WITHOUT_CLASSIFICATION	1.1325515286714918E-6	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999997223676175	WITHOUT_CLASSIFICATION	2.776323825418731E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999988674484713	WITHOUT_CLASSIFICATION	1.1325515286714918E-6	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9749802039570274	WITHOUT_CLASSIFICATION	0.025019796042972487	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.999999779787366	WITHOUT_CLASSIFICATION	2.2021263404448965E-7	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999165325824227	WITHOUT_CLASSIFICATION	8.346741757735791E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999165325824227	WITHOUT_CLASSIFICATION	8.346741757735791E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999991692122372	WITHOUT_CLASSIFICATION	8.307877628508881E-7	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.999999768792294	WITHOUT_CLASSIFICATION	2.3120770594197645E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999999189779709	WITHOUT_CLASSIFICATION	8.102202918523273E-8	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999989739556714	WITHOUT_CLASSIFICATION	1.0260443286495725E-6	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9991139572949658	WITHOUT_CLASSIFICATION	8.860427050341199E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999999994263727	WITHOUT_CLASSIFICATION	5.736272924631093E-10	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999751950786178	WITHOUT_CLASSIFICATION	2.4804921382196486E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999999606910511	WITHOUT_CLASSIFICATION	3.93089489647144E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999992627046406	WITHOUT_CLASSIFICATION	7.37295359517652E-7	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999998911276163	WITHOUT_CLASSIFICATION	1.0887238366695775E-7	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999995512521409	WITHOUT_CLASSIFICATION	4.4874785908738146E-7	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999682254932918	WITHOUT_CLASSIFICATION	3.17745067082374E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999584673825317	WITHOUT_CLASSIFICATION	4.1532617468418255E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999584673825317	WITHOUT_CLASSIFICATION	4.1532617468418255E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999998899552185	WITHOUT_CLASSIFICATION	1.1004478159032093E-7	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999989021978323	WITHOUT_CLASSIFICATION	1.0978021677092936E-6	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.99999949138837	WITHOUT_CLASSIFICATION	5.086116301038633E-7	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9998757847357552	WITHOUT_CLASSIFICATION	1.2421526424482283E-4	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999988248315308	WITHOUT_CLASSIFICATION	1.1751684692217006E-6	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999983303192276	WITHOUT_CLASSIFICATION	1.669680772492092E-6	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999967551840073	WITHOUT_CLASSIFICATION	3.2448159927887916E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999985770358493	WITHOUT_CLASSIFICATION	1.4229641507229595E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999765492227	WITHOUT_CLASSIFICATION	2.3450777373633543E-8	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999999641433273	WITHOUT_CLASSIFICATION	3.5856672782922535E-8	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999920916381722	WITHOUT_CLASSIFICATION	7.908361827888238E-6	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9998922656710693	WITHOUT_CLASSIFICATION	1.0773432893073489E-4	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999951215633263	WITHOUT_CLASSIFICATION	4.878436673807452E-6	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9998241555050068	WITHOUT_CLASSIFICATION	1.7584449499316024E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999986127541228	WITHOUT_CLASSIFICATION	1.3872458771066704E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999886068819	WITHOUT_CLASSIFICATION	1.1393118190470733E-8	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999985968563128	WITHOUT_CLASSIFICATION	1.4031436872167942E-6	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999998504016356	WITHOUT_CLASSIFICATION	1.4959836444541904E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999937834954	WITHOUT_CLASSIFICATION	6.216504702042925E-9	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9999576276933103	WITHOUT_CLASSIFICATION	4.237230668971629E-5	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999766843888176	WITHOUT_CLASSIFICATION	2.3315611182371504E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999817080436193	WITHOUT_CLASSIFICATION	1.8291956380677362E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999861799915	WITHOUT_CLASSIFICATION	1.3820008564179251E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.999997297456887	WITHOUT_CLASSIFICATION	2.7025431129533467E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999997387756435	WITHOUT_CLASSIFICATION	2.6122435651374357E-7	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999707197854	WITHOUT_CLASSIFICATION	2.92802145491661E-8	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999707197854	WITHOUT_CLASSIFICATION	2.92802145491661E-8	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999246747199303	WITHOUT_CLASSIFICATION	7.532528006974698E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999971842252883	WITHOUT_CLASSIFICATION	2.8157747117883082E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999850582767	WITHOUT_CLASSIFICATION	1.4941723358492884E-8	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999611428772941	WITHOUT_CLASSIFICATION	3.885712270599055E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999723335749557	WITHOUT_CLASSIFICATION	2.766642504422913E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999977329659974	WITHOUT_CLASSIFICATION	2.2670340025971096E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999973100635368	WITHOUT_CLASSIFICATION	2.6899364631657018E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9999214289819505	WITHOUT_CLASSIFICATION	7.857101804950477E-5	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999997143741653	WITHOUT_CLASSIFICATION	2.856258346728482E-7	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999218403749024	WITHOUT_CLASSIFICATION	7.815962509763982E-5	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999942190728259	WITHOUT_CLASSIFICATION	5.780927173975362E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999998542275987	WITHOUT_CLASSIFICATION	1.4577240119288273E-7	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999998029009476	WITHOUT_CLASSIFICATION	1.9709905243521084E-7	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999914671967721	WITHOUT_CLASSIFICATION	8.532803227928522E-6	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999982738228	WITHOUT_CLASSIFICATION	1.7261771615536165E-9	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999953849846197	WITHOUT_CLASSIFICATION	4.615015380346211E-6	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999999826987	WITHOUT_CLASSIFICATION	1.7301292046396752E-11	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9973975988838382	WITHOUT_CLASSIFICATION	0.00260240111616192	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9998983471158747	WITHOUT_CLASSIFICATION	1.0165288412536314E-4	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999992380664531	WITHOUT_CLASSIFICATION	7.61933546857606E-7	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999982517824914	WITHOUT_CLASSIFICATION	1.7482175086251923E-6	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999947284599	WITHOUT_CLASSIFICATION	5.271540054540094E-9	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999955132043442	WITHOUT_CLASSIFICATION	4.48679565573606E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998676483268	WITHOUT_CLASSIFICATION	1.3235167327089365E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992489890642	WITHOUT_CLASSIFICATION	7.51010935803444E-7	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999985920748358	WITHOUT_CLASSIFICATION	1.4079251642896498E-6	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999996004724743	WITHOUT_CLASSIFICATION	3.9952752564178644E-7	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999971739170306	WITHOUT_CLASSIFICATION	2.8260829694060065E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999986252781579	WITHOUT_CLASSIFICATION	1.3747218421702676E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999996650417362	WITHOUT_CLASSIFICATION	3.3495826375056037E-7	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999979504812538	WITHOUT_CLASSIFICATION	2.0495187461523648E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999880217416199	WITHOUT_CLASSIFICATION	1.1978258380015879E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999805116874777	WITHOUT_CLASSIFICATION	1.9488312522305175E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992489890642	WITHOUT_CLASSIFICATION	7.51010935803444E-7	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999880618235575	WITHOUT_CLASSIFICATION	1.1938176442404491E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999672636737975	WITHOUT_CLASSIFICATION	3.273632620250344E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.999987822831246	WITHOUT_CLASSIFICATION	1.2177168754087212E-5	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999999691432039	WITHOUT_CLASSIFICATION	3.085679607203255E-8	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999998665261545	WITHOUT_CLASSIFICATION	1.334738455147645E-7	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9990038720814707	WITHOUT_CLASSIFICATION	9.961279185293646E-4	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999999966681195	WITHOUT_CLASSIFICATION	3.331880518722373E-9	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999932906736716	WITHOUT_CLASSIFICATION	6.7093263283948614E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999849216936879	WITHOUT_CLASSIFICATION	1.5078306312189338E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999981700638356	WITHOUT_CLASSIFICATION	1.8299361644630049E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999980482077	WITHOUT_CLASSIFICATION	1.9517922979832127E-9	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999980482077	WITHOUT_CLASSIFICATION	1.9517922979832127E-9	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999980482077	WITHOUT_CLASSIFICATION	1.9517922979832127E-9	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999352029641745	WITHOUT_CLASSIFICATION	6.479703582546515E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9999695599015505	WITHOUT_CLASSIFICATION	3.044009844954833E-5	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.999999917074164	WITHOUT_CLASSIFICATION	8.29258360423242E-8	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999612883613	WITHOUT_CLASSIFICATION	3.8711638723935594E-8	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999989388930752	WITHOUT_CLASSIFICATION	1.061106924782083E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999999927944887	WITHOUT_CLASSIFICATION	7.205511305728835E-9	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999989885402168	WITHOUT_CLASSIFICATION	1.0114597832172482E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9999988430824723	WITHOUT_CLASSIFICATION	1.156917527772502E-6	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999996835652424	WITHOUT_CLASSIFICATION	3.164347576758368E-7	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.999997351678677	WITHOUT_CLASSIFICATION	2.6483213230645368E-6	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999999966594	WITHOUT_CLASSIFICATION	3.340462557928516E-12	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999929752718	WITHOUT_CLASSIFICATION	7.02472826841993E-9	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999974710425062	WITHOUT_CLASSIFICATION	2.528957493764455E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999990185605387	WITHOUT_CLASSIFICATION	9.814394612429635E-7	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.999807687030628	WITHOUT_CLASSIFICATION	1.9231296937208614E-4	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999999999994552	WITHOUT_CLASSIFICATION	5.448733634698462E-13	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999999079472689	WITHOUT_CLASSIFICATION	9.205273113198765E-8	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999996681378299	WITHOUT_CLASSIFICATION	3.3186217010869E-7	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.999999966000061	WITHOUT_CLASSIFICATION	3.399993902444949E-8	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999941228087422	WITHOUT_CLASSIFICATION	5.877191257750584E-6	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999999999999513	WITHOUT_CLASSIFICATION	4.8779771816056315E-14	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999993465161345	WITHOUT_CLASSIFICATION	6.534838654605746E-7	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999992373657888	WITHOUT_CLASSIFICATION	7.626342112709393E-7	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999944689113	WITHOUT_CLASSIFICATION	5.531088682697765E-9	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999949845021	WITHOUT_CLASSIFICATION	5.015497810716704E-9	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999999913593491	WITHOUT_CLASSIFICATION	8.640650881979864E-9	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999999460730775	WITHOUT_CLASSIFICATION	5.392692256179636E-8	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999999953535583	WITHOUT_CLASSIFICATION	4.646441729789989E-9	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999794283617978	WITHOUT_CLASSIFICATION	2.057163820215379E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999992776952	WITHOUT_CLASSIFICATION	7.22304701750602E-10	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999998446103556	WITHOUT_CLASSIFICATION	1.553896444191659E-7	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999613215147661	WITHOUT_CLASSIFICATION	3.867848523379162E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.999999994494927	WITHOUT_CLASSIFICATION	5.505072855590121E-9	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999999957424746	WITHOUT_CLASSIFICATION	4.257525358033293E-9	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999999995069246	WITHOUT_CLASSIFICATION	4.930754518590625E-10	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9999990962741867	WITHOUT_CLASSIFICATION	9.03725813397237E-7	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9996050661873711	WITHOUT_CLASSIFICATION	3.949338126288332E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999280782347912	WITHOUT_CLASSIFICATION	7.192176520882772E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999998791187747	WITHOUT_CLASSIFICATION	1.2088122530098587E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999998791187747	WITHOUT_CLASSIFICATION	1.2088122530098587E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999987406456295	WITHOUT_CLASSIFICATION	1.259354370493958E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999987406456295	WITHOUT_CLASSIFICATION	1.259354370493958E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999999327592717	WITHOUT_CLASSIFICATION	6.724072834158146E-8	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999940758585568	WITHOUT_CLASSIFICATION	5.924141443160704E-6	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999999683075972	WITHOUT_CLASSIFICATION	3.1692402803836986E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999290180189	WITHOUT_CLASSIFICATION	7.098198108586228E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999290180189	WITHOUT_CLASSIFICATION	7.098198108586228E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999290180189	WITHOUT_CLASSIFICATION	7.098198108586228E-8	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999916445674558	WITHOUT_CLASSIFICATION	8.355432544178642E-6	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999999787749771	WITHOUT_CLASSIFICATION	2.1225022833785908E-8	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999938116202716	WITHOUT_CLASSIFICATION	6.188379728510635E-6	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.999999039491162	WITHOUT_CLASSIFICATION	9.60508838116683E-7	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.999999920816509	WITHOUT_CLASSIFICATION	7.918349103289917E-8	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999997121276907	WITHOUT_CLASSIFICATION	2.878723093884653E-7	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.999998357662211	WITHOUT_CLASSIFICATION	1.642337789068466E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999988939690801	WITHOUT_CLASSIFICATION	1.1060309198629003E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999988939690801	WITHOUT_CLASSIFICATION	1.1060309198629003E-6	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999999988948391	WITHOUT_CLASSIFICATION	1.1051608314200296E-9	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.999999722857973	WITHOUT_CLASSIFICATION	2.771420269962299E-7	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9999967481852446	WITHOUT_CLASSIFICATION	3.251814755320951E-6	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999999903493362	WITHOUT_CLASSIFICATION	9.650663764731998E-9	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999999895847681	WITHOUT_CLASSIFICATION	1.041523199165724E-8	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.999985689588082	WITHOUT_CLASSIFICATION	1.431041191800021E-5	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.999999967400661	WITHOUT_CLASSIFICATION	3.25993389182565E-8	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999991845048831	WITHOUT_CLASSIFICATION	8.154951168002683E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999998043023158	WITHOUT_CLASSIFICATION	1.9569768415657232E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999940977187	WITHOUT_CLASSIFICATION	5.902281384744837E-9	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999835852857	WITHOUT_CLASSIFICATION	1.6414714307927585E-8	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999970057653237	WITHOUT_CLASSIFICATION	2.9942346762587678E-6	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.999999953977366	WITHOUT_CLASSIFICATION	4.602263405092057E-8	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999999069222442	WITHOUT_CLASSIFICATION	9.307775585349728E-8	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999999055471054	WITHOUT_CLASSIFICATION	9.445289465679811E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999999484871919	WITHOUT_CLASSIFICATION	5.151280813725754E-8	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999919411036848	WITHOUT_CLASSIFICATION	8.058896315120162E-6	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999999785529509	WITHOUT_CLASSIFICATION	2.1447049097169468E-8	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999998899552185	WITHOUT_CLASSIFICATION	1.1004478159032093E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999544287261	WITHOUT_CLASSIFICATION	4.557127378963545E-8	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9996767486044127	WITHOUT_CLASSIFICATION	3.232513955873071E-4	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999948051618	WITHOUT_CLASSIFICATION	5.1948382482957284E-9	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999998265906905	WITHOUT_CLASSIFICATION	1.7340930952529148E-7	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999998707153801	WITHOUT_CLASSIFICATION	1.2928461991637896E-7	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999954703758658	WITHOUT_CLASSIFICATION	4.529624134215977E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999996175341512	WITHOUT_CLASSIFICATION	3.824658488086246E-7	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.999999974047966	WITHOUT_CLASSIFICATION	2.5952033878985174E-8	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999999991765258	WITHOUT_CLASSIFICATION	8.234742719625026E-10	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999916807236	WITHOUT_CLASSIFICATION	8.31927638310986E-9	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999916807236	WITHOUT_CLASSIFICATION	8.31927638310986E-9	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.999999999575312	WITHOUT_CLASSIFICATION	4.2468800107231765E-10	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999744040252883	WITHOUT_CLASSIFICATION	2.559597471172203E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999999574958235	WITHOUT_CLASSIFICATION	4.250417656364493E-8	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999966881425915	WITHOUT_CLASSIFICATION	3.3118574084635046E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999966881425915	WITHOUT_CLASSIFICATION	3.3118574084635046E-6	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999125200904518	WITHOUT_CLASSIFICATION	8.74799095482011E-5	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.8132264660116574	WITHOUT_CLASSIFICATION	0.18677353398834268	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999994755292515	WITHOUT_CLASSIFICATION	5.244707485147364E-7	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999999916777751	WITHOUT_CLASSIFICATION	8.322224934553343E-9	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999510410785806	WITHOUT_CLASSIFICATION	4.8958921419354026E-5	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999999975199335	WITHOUT_CLASSIFICATION	2.480066538279312E-9	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.99999998134999	WITHOUT_CLASSIFICATION	1.8650009984349992E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999986606169412	WITHOUT_CLASSIFICATION	1.3393830588006966E-6	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999996900216236	WITHOUT_CLASSIFICATION	3.0997837644742606E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.999998522229055	WITHOUT_CLASSIFICATION	1.4777709449280486E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999994975927	WITHOUT_CLASSIFICATION	5.024072910036008E-10	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999998370081049	WITHOUT_CLASSIFICATION	1.6299189506602804E-7	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9998830601818457	WITHOUT_CLASSIFICATION	1.1693981815427664E-4	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999999293538	WITHOUT_CLASSIFICATION	7.064615692618629E-11	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999826390939786	WITHOUT_CLASSIFICATION	1.73609060214336E-5	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999999736720014	WITHOUT_CLASSIFICATION	2.6327998488610316E-8	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999999430030287	WITHOUT_CLASSIFICATION	5.69969712407408E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999990684556	WITHOUT_CLASSIFICATION	9.315443544500958E-10	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999991247897	WITHOUT_CLASSIFICATION	8.752103238310154E-10	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.999999982897209	WITHOUT_CLASSIFICATION	1.710279103513511E-8	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999978838565671	WITHOUT_CLASSIFICATION	2.116143432912574E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999764409683879	WITHOUT_CLASSIFICATION	2.3559031612147327E-5	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999954566818996	WITHOUT_CLASSIFICATION	4.543318100464464E-6	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999567683166786	WITHOUT_CLASSIFICATION	4.323168332149043E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999903147171	WITHOUT_CLASSIFICATION	9.685282899772867E-8	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999903147171	WITHOUT_CLASSIFICATION	9.685282899772867E-8	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999903147171	WITHOUT_CLASSIFICATION	9.685282899772867E-8	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999903147171	WITHOUT_CLASSIFICATION	9.685282899772867E-8	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999208567115	WITHOUT_CLASSIFICATION	7.91432885183065E-8	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999176510006	WITHOUT_CLASSIFICATION	8.23489993307608E-8	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979052198307	WITHOUT_CLASSIFICATION	2.0947801692968522E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979052198307	WITHOUT_CLASSIFICATION	2.0947801692968522E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979052198307	WITHOUT_CLASSIFICATION	2.0947801692968522E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999999098258744	WITHOUT_CLASSIFICATION	9.01741255742765E-8	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999951332591921	WITHOUT_CLASSIFICATION	4.8667408078041034E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999997581564767	WITHOUT_CLASSIFICATION	2.418435232867771E-7	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999989061095651	WITHOUT_CLASSIFICATION	1.093890434910577E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999989061095651	WITHOUT_CLASSIFICATION	1.093890434910577E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999937834954	WITHOUT_CLASSIFICATION	6.216504702042925E-9	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999937834954	WITHOUT_CLASSIFICATION	6.216504702042925E-9	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9815349436939196	WITHOUT_CLASSIFICATION	0.01846505630608042	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9815349436939196	WITHOUT_CLASSIFICATION	0.01846505630608042	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9995412018735406	WITHOUT_CLASSIFICATION	4.5879812645943343E-4	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999998073410172	WITHOUT_CLASSIFICATION	1.9265898273112837E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999990351327099	WITHOUT_CLASSIFICATION	9.648672900664142E-7	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999995089091597	WITHOUT_CLASSIFICATION	4.910908402683002E-7	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999998274631972	WITHOUT_CLASSIFICATION	1.7253680294155232E-7	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999973116069406	WITHOUT_CLASSIFICATION	2.688393059356994E-6	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999857027530922	WITHOUT_CLASSIFICATION	1.4297246907774022E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999959350124	WITHOUT_CLASSIFICATION	4.064987619132931E-9	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999999626924433	WITHOUT_CLASSIFICATION	3.7307556672681085E-8	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999972311623532	WITHOUT_CLASSIFICATION	2.768837646696478E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999986399633405	WITHOUT_CLASSIFICATION	1.3600366594638683E-6	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999985769139129	WITHOUT_CLASSIFICATION	1.4230860870780308E-6	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999999826390954	WITHOUT_CLASSIFICATION	1.7360904615066577E-8	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999993678500265	WITHOUT_CLASSIFICATION	6.321499735445765E-7	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999990185390359	WITHOUT_CLASSIFICATION	9.814609640086447E-7	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999982746850954	WITHOUT_CLASSIFICATION	1.7253149046135205E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999998958994569	WITHOUT_CLASSIFICATION	1.041005431553315E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999998239406424	WITHOUT_CLASSIFICATION	1.7605935762127868E-7	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999796175369684	WITHOUT_CLASSIFICATION	2.0382463031489777E-5	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999989763428787	WITHOUT_CLASSIFICATION	1.02365712131612E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985581837969	WITHOUT_CLASSIFICATION	1.4418162030705347E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985581837969	WITHOUT_CLASSIFICATION	1.4418162030705347E-6	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999966439217712	WITHOUT_CLASSIFICATION	3.3560782287643894E-6	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999934271621606	WITHOUT_CLASSIFICATION	6.572837839473199E-6	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9993841050197312	WITHOUT_CLASSIFICATION	6.158949802688996E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9992633262359771	WITHOUT_CLASSIFICATION	7.366737640229108E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9992122980869274	WITHOUT_CLASSIFICATION	7.877019130727279E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9996274037917569	WITHOUT_CLASSIFICATION	3.7259620824311356E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9996159869079622	WITHOUT_CLASSIFICATION	3.8401309203781405E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.998608483945355	WITHOUT_CLASSIFICATION	0.0013915160546449754	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9994752374999838	WITHOUT_CLASSIFICATION	5.247625000162328E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9985176601332697	WITHOUT_CLASSIFICATION	0.0014823398667302764	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9995567677414517	WITHOUT_CLASSIFICATION	4.432322585481866E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9995787449340066	WITHOUT_CLASSIFICATION	4.212550659934513E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.999320506805779	WITHOUT_CLASSIFICATION	6.794931942209626E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9985646204385389	WITHOUT_CLASSIFICATION	0.0014353795614610969	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9995533776762684	WITHOUT_CLASSIFICATION	4.4662232373159435E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9991848823869652	WITHOUT_CLASSIFICATION	8.151176130347769E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999979152544445	WITHOUT_CLASSIFICATION	2.0847455555186238E-6	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999972825807188	WITHOUT_CLASSIFICATION	2.717419281275958E-6	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999996385697891	WITHOUT_CLASSIFICATION	3.6143021088896515E-7	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999999968862595	WITHOUT_CLASSIFICATION	3.113740386062052E-9	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999925754018084	WITHOUT_CLASSIFICATION	7.4245981915224354E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999925754018084	WITHOUT_CLASSIFICATION	7.4245981915224354E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999925754018084	WITHOUT_CLASSIFICATION	7.4245981915224354E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999925754018084	WITHOUT_CLASSIFICATION	7.4245981915224354E-6	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.998603480358264	WITHOUT_CLASSIFICATION	0.0013965196417360663	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999876238663	WITHOUT_CLASSIFICATION	1.237613372206384E-8	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999999998332	WITHOUT_CLASSIFICATION	1.667634095911459E-13	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992104635729	WITHOUT_CLASSIFICATION	7.895364272167003E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992104635729	WITHOUT_CLASSIFICATION	7.895364272167003E-7	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999986909628508	WITHOUT_CLASSIFICATION	1.3090371491950756E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999989744520228	WITHOUT_CLASSIFICATION	1.0255479771992033E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999989744520228	WITHOUT_CLASSIFICATION	1.0255479771992033E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999994544158133	WITHOUT_CLASSIFICATION	5.455841868286877E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999994544158133	WITHOUT_CLASSIFICATION	5.455841868286877E-7	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999997236443715	WITHOUT_CLASSIFICATION	2.7635562851858543E-7	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.999999096997845	WITHOUT_CLASSIFICATION	9.030021550090213E-7	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999987626807317	WITHOUT_CLASSIFICATION	1.237319268326863E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999998577033479	WITHOUT_CLASSIFICATION	1.4229665219958458E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999965052824	WITHOUT_CLASSIFICATION	3.4947177384013163E-9	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999976490084	WITHOUT_CLASSIFICATION	2.3509916010777502E-9	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999920701463	WITHOUT_CLASSIFICATION	7.929853739698783E-9	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999983624419891	WITHOUT_CLASSIFICATION	1.6375580108458663E-6	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9998230073809107	WITHOUT_CLASSIFICATION	1.7699261908929508E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9998230073809107	WITHOUT_CLASSIFICATION	1.7699261908929508E-4	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999857689801728	WITHOUT_CLASSIFICATION	1.4231019827158492E-5	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999999544166154	WITHOUT_CLASSIFICATION	4.558338452642305E-8	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.999999951555913	WITHOUT_CLASSIFICATION	4.8444086957876375E-8	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999977693792	WITHOUT_CLASSIFICATION	2.2306208724785175E-9	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999964852291873	WITHOUT_CLASSIFICATION	3.5147708127603847E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999901484806	WITHOUT_CLASSIFICATION	9.851519403364248E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999901484806	WITHOUT_CLASSIFICATION	9.851519403364248E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999901484806	WITHOUT_CLASSIFICATION	9.851519403364248E-9	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999982799249	WITHOUT_CLASSIFICATION	1.7200750863588535E-9	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999982799249	WITHOUT_CLASSIFICATION	1.7200750863588535E-9	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999969243946	WITHOUT_CLASSIFICATION	3.0756054410544194E-9	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999777995305	WITHOUT_CLASSIFICATION	2.2200469475892777E-8	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999777995305	WITHOUT_CLASSIFICATION	2.2200469475892777E-8	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999796857978	WITHOUT_CLASSIFICATION	2.0314202220908208E-8	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999999750861205	WITHOUT_CLASSIFICATION	2.4913879509698544E-8	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999611428772941	WITHOUT_CLASSIFICATION	3.885712270599055E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999639927965431	WITHOUT_CLASSIFICATION	3.6007203456832066E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996867745071095	WITHOUT_CLASSIFICATION	3.1322549289057307E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996867745071095	WITHOUT_CLASSIFICATION	3.1322549289057307E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999096863373892	WITHOUT_CLASSIFICATION	9.0313662610736E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999587647762451	WITHOUT_CLASSIFICATION	4.123522375485366E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250953934	WITHOUT_CLASSIFICATION	7.474904606678735E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999532330768106	WITHOUT_CLASSIFICATION	4.676692318947009E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999513771947659	WITHOUT_CLASSIFICATION	4.862280523403098E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999537780368566	WITHOUT_CLASSIFICATION	4.622196314343468E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520023981	WITHOUT_CLASSIFICATION	1.3247997601941842E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520023981	WITHOUT_CLASSIFICATION	1.3247997601941842E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520023981	WITHOUT_CLASSIFICATION	1.3247997601941842E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999602930408777	WITHOUT_CLASSIFICATION	3.9706959122273494E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999661917411803	WITHOUT_CLASSIFICATION	3.380825881977835E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737640541	WITHOUT_CLASSIFICATION	3.126235945988918E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737640541	WITHOUT_CLASSIFICATION	3.126235945988918E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999980439112297	WITHOUT_CLASSIFICATION	1.9560887702375673E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999135539337981	WITHOUT_CLASSIFICATION	8.644606620196157E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999397613000641	WITHOUT_CLASSIFICATION	6.02386999359638E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902024516005	WITHOUT_CLASSIFICATION	9.797548399425842E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999605003423139	WITHOUT_CLASSIFICATION	3.949965768610007E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999973845005321	WITHOUT_CLASSIFICATION	2.6154994679630892E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999520312521879	WITHOUT_CLASSIFICATION	4.796874781214864E-5	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999997730343475	WITHOUT_CLASSIFICATION	2.2696565245730534E-7	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.999996792714626	WITHOUT_CLASSIFICATION	3.2072853739660186E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999994781345282	WITHOUT_CLASSIFICATION	5.218654718374338E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9977969498133883	WITHOUT_CLASSIFICATION	0.002203050186611624	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999996417057235	WITHOUT_CLASSIFICATION	3.5829427641945417E-7	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.999999925077692	WITHOUT_CLASSIFICATION	7.492230794106307E-8	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999931045203978	WITHOUT_CLASSIFICATION	6.8954796022260415E-6	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999925758281634	WITHOUT_CLASSIFICATION	7.424171836710035E-6	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999992522594696	WITHOUT_CLASSIFICATION	7.477405304669606E-7	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999997478768867	WITHOUT_CLASSIFICATION	2.521231132173842E-7	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999996225544321	WITHOUT_CLASSIFICATION	3.774455679123129E-7	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999999900259257	WITHOUT_CLASSIFICATION	9.974074286306416E-9	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999991185575187	WITHOUT_CLASSIFICATION	8.814424814213269E-7	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999934296286597	WITHOUT_CLASSIFICATION	6.570371340276326E-6	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999973141425094	WITHOUT_CLASSIFICATION	2.685857490570189E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999995869644128	WITHOUT_CLASSIFICATION	4.1303558724811827E-7	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999993286484826	WITHOUT_CLASSIFICATION	6.713515174873387E-7	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999999718719922	WITHOUT_CLASSIFICATION	2.8128007775984807E-8	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999997018496454	WITHOUT_CLASSIFICATION	2.981503545779279E-7	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999932997241606	WITHOUT_CLASSIFICATION	6.7002758393718595E-6	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9999439653156894	WITHOUT_CLASSIFICATION	5.6034684310717154E-5	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9999276761935171	WITHOUT_CLASSIFICATION	7.232380648289282E-5	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999997929057063	WITHOUT_CLASSIFICATION	2.070942936436291E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999951632830187	WITHOUT_CLASSIFICATION	4.8367169812441194E-6	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999655322047579	WITHOUT_CLASSIFICATION	3.446779524207213E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821717	WITHOUT_CLASSIFICATION	2.2717828323686785E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628456398	WITHOUT_CLASSIFICATION	1.371543601504139E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366022518	WITHOUT_CLASSIFICATION	4.633977481386441E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998303365498	WITHOUT_CLASSIFICATION	1.696634501017194E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999986042786788	WITHOUT_CLASSIFICATION	1.3957213212486414E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998915573206	WITHOUT_CLASSIFICATION	1.0844267932072756E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999999279906375	WITHOUT_CLASSIFICATION	7.200936247693258E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999993823963125	WITHOUT_CLASSIFICATION	6.176036874288148E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912323	WITHOUT_CLASSIFICATION	6.709087675935197E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999997884921682	WITHOUT_CLASSIFICATION	2.1150783180706203E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570522356	WITHOUT_CLASSIFICATION	3.429477643526695E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999994618754768	WITHOUT_CLASSIFICATION	5.381245230865651E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879518	WITHOUT_CLASSIFICATION	3.5212048276077426E-8	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9999843671385046	WITHOUT_CLASSIFICATION	1.563286149547475E-5	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999989700515163	WITHOUT_CLASSIFICATION	1.0299484837166512E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999994473624884	WITHOUT_CLASSIFICATION	5.526375117298239E-7	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999980152209463	WITHOUT_CLASSIFICATION	1.9847790536833063E-6	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999966668504996	WITHOUT_CLASSIFICATION	3.3331495002754487E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999996284679701	WITHOUT_CLASSIFICATION	3.715320299517084E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997636120011971	WITHOUT_CLASSIFICATION	2.3638799880279157E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999994147942736	WITHOUT_CLASSIFICATION	5.852057264397202E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997636120011971	WITHOUT_CLASSIFICATION	2.3638799880279157E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999992556783354	WITHOUT_CLASSIFICATION	7.443216646784682E-7	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999998130887062	WITHOUT_CLASSIFICATION	1.8691129376651278E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999990831823069	WITHOUT_CLASSIFICATION	9.168176930242709E-7	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999285649252327	WITHOUT_CLASSIFICATION	7.143507476721023E-5	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999994447127841	WITHOUT_CLASSIFICATION	5.552872158662776E-7	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999998542628904	WITHOUT_CLASSIFICATION	1.4573710954699344E-7	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999999986732029	WITHOUT_CLASSIFICATION	1.3267972031954272E-9	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999992981683671	WITHOUT_CLASSIFICATION	7.018316328771344E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9977969498133883	WITHOUT_CLASSIFICATION	0.002203050186611624	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.999994701823058	WITHOUT_CLASSIFICATION	5.2981769419828E-6	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9999923485093077	WITHOUT_CLASSIFICATION	7.651490692283527E-6	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999999205247386	WITHOUT_CLASSIFICATION	7.94752612847687E-8	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999963319854	WITHOUT_CLASSIFICATION	3.668014576281555E-9	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999926128115554	WITHOUT_CLASSIFICATION	7.387188444620361E-6	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999917675698693	WITHOUT_CLASSIFICATION	8.232430130758017E-6	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9999811784457134	WITHOUT_CLASSIFICATION	1.8821554286623038E-5	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999999429036109	WITHOUT_CLASSIFICATION	5.70963890001898E-8	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999999829905148	WITHOUT_CLASSIFICATION	1.7009485072517825E-8	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.999999535126315	WITHOUT_CLASSIFICATION	4.648736848940978E-7	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999999881745177	WITHOUT_CLASSIFICATION	1.1825482258619716E-8	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999934585021123	WITHOUT_CLASSIFICATION	6.541497887768271E-6	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999992078589591	WITHOUT_CLASSIFICATION	7.921410408153654E-7	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999960858978277	WITHOUT_CLASSIFICATION	3.914102172253258E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999989793590426	WITHOUT_CLASSIFICATION	1.0206409574097404E-6	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999960374787175	WITHOUT_CLASSIFICATION	3.962521282585299E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999998757388082	WITHOUT_CLASSIFICATION	1.2426119184707967E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999710366056316	WITHOUT_CLASSIFICATION	2.8963394368374535E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999710366056316	WITHOUT_CLASSIFICATION	2.8963394368374535E-5	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999936774226194	WITHOUT_CLASSIFICATION	6.322577380589691E-6	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9996963187970477	WITHOUT_CLASSIFICATION	3.0368120295232203E-4	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9974728683173858	WITHOUT_CLASSIFICATION	0.002527131682614234	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999470741482775	WITHOUT_CLASSIFICATION	5.2925851722558915E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999837879059	WITHOUT_CLASSIFICATION	1.6212094083951877E-8	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9999838773370653	WITHOUT_CLASSIFICATION	1.6122662934640345E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9994469715182813	WITHOUT_CLASSIFICATION	5.530284817187127E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999999739580844	WITHOUT_CLASSIFICATION	2.6041915706970383E-8	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999344984147	WITHOUT_CLASSIFICATION	6.550158527988847E-8	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999638723816751	WITHOUT_CLASSIFICATION	3.612761832490674E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999724231622207	WITHOUT_CLASSIFICATION	2.7576837779245068E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999998070673909	WITHOUT_CLASSIFICATION	1.9293260909632974E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999899922290715	WITHOUT_CLASSIFICATION	1.0007770928480228E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.999994306734277	WITHOUT_CLASSIFICATION	5.693265722972573E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008205082	WITHOUT_CLASSIFICATION	9.917949185696776E-8	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999970818059597	WITHOUT_CLASSIFICATION	2.91819404028966E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999987843871	WITHOUT_CLASSIFICATION	1.2156128922445122E-8	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999984748235985	WITHOUT_CLASSIFICATION	1.5251764014840625E-6	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999993709252607	WITHOUT_CLASSIFICATION	6.290747392584919E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999837879059	WITHOUT_CLASSIFICATION	1.6212094083951877E-8	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999987843871	WITHOUT_CLASSIFICATION	1.2156128922445122E-8	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999999739580844	WITHOUT_CLASSIFICATION	2.6041915706970383E-8	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999344984147	WITHOUT_CLASSIFICATION	6.550158527988847E-8	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999999337805914	WITHOUT_CLASSIFICATION	6.621940871993686E-8	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998511359017	WITHOUT_CLASSIFICATION	1.4886409824671808E-7	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999998598998262	WITHOUT_CLASSIFICATION	1.4010017378297005E-7	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999900165176	WITHOUT_CLASSIFICATION	9.983482286627877E-9	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999996898713	WITHOUT_CLASSIFICATION	3.101287036153752E-9	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999927697330074	WITHOUT_CLASSIFICATION	7.230266992547099E-6	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999927697330074	WITHOUT_CLASSIFICATION	7.230266992547099E-6	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999975442325721	WITHOUT_CLASSIFICATION	2.455767427885258E-6	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999134637906	WITHOUT_CLASSIFICATION	8.653620943593595E-8	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999857821751	WITHOUT_CLASSIFICATION	1.4217824833824639E-8	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999977320734	WITHOUT_CLASSIFICATION	2.2679266018260362E-8	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999522509411	WITHOUT_CLASSIFICATION	4.774905901384996E-8	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999374564671	WITHOUT_CLASSIFICATION	6.254353297697735E-8	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999654896508	WITHOUT_CLASSIFICATION	3.451034930236485E-8	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999983608695	WITHOUT_CLASSIFICATION	1.6391304937428428E-8	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999437860598	WITHOUT_CLASSIFICATION	5.621394011184066E-8	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999689822016	WITHOUT_CLASSIFICATION	3.1017798500960804E-8	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999852675443	WITHOUT_CLASSIFICATION	1.4732455714373921E-8	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999929039908	WITHOUT_CLASSIFICATION	7.096009259002511E-9	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999456468802	WITHOUT_CLASSIFICATION	5.435311973573129E-8	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999976168804	WITHOUT_CLASSIFICATION	2.383119601782E-8	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999886809491	WITHOUT_CLASSIFICATION	1.131905085454345E-8	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999723179064	WITHOUT_CLASSIFICATION	2.7682093710661314E-8	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999845140787	WITHOUT_CLASSIFICATION	1.5485921366899288E-8	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999953786791	WITHOUT_CLASSIFICATION	4.6213209288080564E-9	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999850617508	WITHOUT_CLASSIFICATION	1.493824922484787E-8	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999103204892	WITHOUT_CLASSIFICATION	8.967951090859826E-8	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999498314721	WITHOUT_CLASSIFICATION	5.016852795175927E-8	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999761715641	WITHOUT_CLASSIFICATION	2.3828435912795483E-8	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999917241179	WITHOUT_CLASSIFICATION	8.275882070894786E-9	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999496291806	WITHOUT_CLASSIFICATION	5.0370819317960525E-8	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999722063262	WITHOUT_CLASSIFICATION	2.7793673895344195E-8	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999867988998	WITHOUT_CLASSIFICATION	1.3201100300431953E-8	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999192516277	WITHOUT_CLASSIFICATION	8.074837233914507E-8	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999999667669668	WITHOUT_CLASSIFICATION	3.323303320689826E-7	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998763886777	WITHOUT_CLASSIFICATION	1.2361132225098823E-7	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999199818563	WITHOUT_CLASSIFICATION	8.001814376822664E-8	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9999470426307523	WITHOUT_CLASSIFICATION	5.295736924766278E-5	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997959247362	WITHOUT_CLASSIFICATION	2.0407526379616934E-7	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999688943608	WITHOUT_CLASSIFICATION	3.1105639175480995E-8	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999863616922	WITHOUT_CLASSIFICATION	1.3638307761863126E-8	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999935222429	WITHOUT_CLASSIFICATION	6.4777570619984695E-9	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999999980873967	WITHOUT_CLASSIFICATION	1.912603299617309E-8	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999916141662	WITHOUT_CLASSIFICATION	8.385833868870311E-9	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999996016999	WITHOUT_CLASSIFICATION	3.983001070478606E-9	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999677406604	WITHOUT_CLASSIFICATION	3.225933960166374E-8	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999981953475	WITHOUT_CLASSIFICATION	1.8046525044256757E-8	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999914284817	WITHOUT_CLASSIFICATION	8.571518355629103E-9	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999821980243	WITHOUT_CLASSIFICATION	1.7801975707412706E-8	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999921947007	WITHOUT_CLASSIFICATION	7.805299234760381E-9	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999927024797	WITHOUT_CLASSIFICATION	7.297520183012772E-9	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998805430802	WITHOUT_CLASSIFICATION	1.1945691972561255E-7	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999553398605	WITHOUT_CLASSIFICATION	4.46601394460905E-8	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999791673759	WITHOUT_CLASSIFICATION	2.083262415094598E-8	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999998912369417	WITHOUT_CLASSIFICATION	1.0876305830434105E-7	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999999909986572	WITHOUT_CLASSIFICATION	9.001342768881618E-9	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999977419044603	WITHOUT_CLASSIFICATION	2.2580955396986506E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999999734369895	WITHOUT_CLASSIFICATION	2.6563010485258423E-8	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999999872329179	WITHOUT_CLASSIFICATION	1.2767082174025072E-8	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999874237578432	WITHOUT_CLASSIFICATION	1.2576242156868152E-5	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999930926844619	WITHOUT_CLASSIFICATION	6.907315538116998E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737640541	WITHOUT_CLASSIFICATION	3.126235945988918E-6	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999998070673909	WITHOUT_CLASSIFICATION	1.9293260909632974E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999999433270894	WITHOUT_CLASSIFICATION	5.6672910642858076E-8	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999999934067678	WITHOUT_CLASSIFICATION	6.593232156314723E-9	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.999995867945364	WITHOUT_CLASSIFICATION	4.132054636013621E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999977857937002	WITHOUT_CLASSIFICATION	2.214206299740763E-6	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999999151052851	WITHOUT_CLASSIFICATION	8.489471497336598E-8	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999992685945422	WITHOUT_CLASSIFICATION	7.314054577973709E-7	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999998595327096	WITHOUT_CLASSIFICATION	1.40467290333767E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254075761	WITHOUT_CLASSIFICATION	1.745924238185073E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254075761	WITHOUT_CLASSIFICATION	1.745924238185073E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999724231622207	WITHOUT_CLASSIFICATION	2.7576837779245068E-5	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999997050856577	WITHOUT_CLASSIFICATION	2.949143423087305E-6	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999999977839418	WITHOUT_CLASSIFICATION	2.2160582372356384E-9	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999979476459423	WITHOUT_CLASSIFICATION	2.052354057757661E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999982216518911	WITHOUT_CLASSIFICATION	1.778348108802738E-6	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999997897067133	WITHOUT_CLASSIFICATION	2.102932866850911E-6	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999985323740942	WITHOUT_CLASSIFICATION	1.4676259058301088E-6	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999999530504816	WITHOUT_CLASSIFICATION	4.694951831146668E-8	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999998021718963	WITHOUT_CLASSIFICATION	1.9782810368802416E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254075761	WITHOUT_CLASSIFICATION	1.745924238185073E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991582918415	WITHOUT_CLASSIFICATION	8.417081584310094E-7	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999998804235076	WITHOUT_CLASSIFICATION	1.1957649239309864E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999994086681927	WITHOUT_CLASSIFICATION	5.913318073611829E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999999879552155	WITHOUT_CLASSIFICATION	1.2044784562987187E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999967335497317	WITHOUT_CLASSIFICATION	3.26645026827084E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999998561553322	WITHOUT_CLASSIFICATION	1.4384466795733833E-7	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.999999997304597	WITHOUT_CLASSIFICATION	2.6954030253151522E-9	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999992144180329	WITHOUT_CLASSIFICATION	7.855819671133267E-7	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999996769331706	WITHOUT_CLASSIFICATION	3.230668295075996E-7	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999966560458566	WITHOUT_CLASSIFICATION	3.3439541434404947E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999724231622207	WITHOUT_CLASSIFICATION	2.7576837779245068E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254075761	WITHOUT_CLASSIFICATION	1.745924238185073E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999994086681927	WITHOUT_CLASSIFICATION	5.913318073611829E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999999879552155	WITHOUT_CLASSIFICATION	1.2044784562987187E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999967335497317	WITHOUT_CLASSIFICATION	3.26645026827084E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999988049561285	WITHOUT_CLASSIFICATION	1.1950438714678548E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999454616581364	WITHOUT_CLASSIFICATION	5.4538341863649895E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999977666660649	WITHOUT_CLASSIFICATION	2.233333935180183E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999730679	WITHOUT_CLASSIFICATION	2.6932020404979185E-11	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557917955	WITHOUT_CLASSIFICATION	9.144208204597132E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557917955	WITHOUT_CLASSIFICATION	9.144208204597132E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557917955	WITHOUT_CLASSIFICATION	9.144208204597132E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999996648937941	WITHOUT_CLASSIFICATION	3.351062059041545E-7	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999989070698184	WITHOUT_CLASSIFICATION	1.0929301816096785E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999973832611779	WITHOUT_CLASSIFICATION	2.6167388220563127E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999998093462255	WITHOUT_CLASSIFICATION	1.9065377443847964E-7	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999995602894253	WITHOUT_CLASSIFICATION	4.3971057476539303E-7	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999999922788128	WITHOUT_CLASSIFICATION	7.721187284428299E-9	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999902427302837	WITHOUT_CLASSIFICATION	9.757269716359957E-6	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999993447632972	WITHOUT_CLASSIFICATION	6.552367027978051E-7	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999969110295	WITHOUT_CLASSIFICATION	3.0889705832068573E-9	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999999596582836	WITHOUT_CLASSIFICATION	4.0341716484059994E-8	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999965024609269	WITHOUT_CLASSIFICATION	3.497539073210819E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999999994260973	WITHOUT_CLASSIFICATION	5.739026670529006E-10	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999492578747121	WITHOUT_CLASSIFICATION	5.074212528776806E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999999937841447	WITHOUT_CLASSIFICATION	6.215855303049652E-9	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999999472792427	WITHOUT_CLASSIFICATION	5.2720757396297816E-8	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999988462399914	WITHOUT_CLASSIFICATION	1.153760008646846E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9994260307553147	WITHOUT_CLASSIFICATION	5.73969244685273E-4	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9992545563329567	WITHOUT_CLASSIFICATION	7.454436670433567E-4	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999991806132364	WITHOUT_CLASSIFICATION	8.193867636197162E-7	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999975916694757	WITHOUT_CLASSIFICATION	2.408330524395054E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999999191174168	WITHOUT_CLASSIFICATION	8.088258321804679E-8	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999989716927942	WITHOUT_CLASSIFICATION	1.0283072058274296E-6	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999986513501983	WITHOUT_CLASSIFICATION	1.3486498017374627E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999999965868285	WITHOUT_CLASSIFICATION	3.413171492162627E-9	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999999891867426	WITHOUT_CLASSIFICATION	1.08132573257584E-8	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999935687187483	WITHOUT_CLASSIFICATION	6.431281251619121E-6	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999925182590489	WITHOUT_CLASSIFICATION	7.481740951035896E-6	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999997332509052	WITHOUT_CLASSIFICATION	2.667490947643573E-7	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999996612061358	WITHOUT_CLASSIFICATION	3.3879386421448904E-7	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999991018543986	WITHOUT_CLASSIFICATION	8.981456015917135E-7	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.999999122485571	WITHOUT_CLASSIFICATION	8.775144290221906E-7	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999986650696615	WITHOUT_CLASSIFICATION	1.3349303385385474E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999999583097389	WITHOUT_CLASSIFICATION	4.1690261060620995E-8	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9999363756494286	WITHOUT_CLASSIFICATION	6.36243505713995E-5	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999897319703489	WITHOUT_CLASSIFICATION	1.0268029651093195E-5	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999999219300046	WITHOUT_CLASSIFICATION	7.806999537421788E-8	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999995869644128	WITHOUT_CLASSIFICATION	4.1303558724811827E-7	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999650645126251	WITHOUT_CLASSIFICATION	3.493548737486297E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999999997484853	WITHOUT_CLASSIFICATION	2.5151477692119533E-10	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999998439971003	WITHOUT_CLASSIFICATION	1.5600289966458083E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999997552488499	WITHOUT_CLASSIFICATION	2.447511501885876E-7	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999440357417729	WITHOUT_CLASSIFICATION	5.596425822707898E-5	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999672748147913	WITHOUT_CLASSIFICATION	3.2725185208726776E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999440357417729	WITHOUT_CLASSIFICATION	5.596425822707898E-5	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999999716162391	WITHOUT_CLASSIFICATION	2.8383760861912286E-8	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999989802421714	WITHOUT_CLASSIFICATION	1.0197578285597523E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999861687945929	WITHOUT_CLASSIFICATION	1.383120540721164E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999998880863071	WITHOUT_CLASSIFICATION	1.1191369291927439E-7	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999999752605623	WITHOUT_CLASSIFICATION	2.4739437759388464E-8	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.999999992464012	WITHOUT_CLASSIFICATION	7.535988051761783E-9	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999986697125194	WITHOUT_CLASSIFICATION	1.3302874805620295E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.999999918858285	WITHOUT_CLASSIFICATION	8.114171496355164E-8	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999999453381098	WITHOUT_CLASSIFICATION	5.4661890204704174E-8	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999998464054373	WITHOUT_CLASSIFICATION	1.535945627938879E-7	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999997899962272	WITHOUT_CLASSIFICATION	2.100037727890209E-7	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999992951837067	WITHOUT_CLASSIFICATION	7.048162933535376E-7	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999992351606332	WITHOUT_CLASSIFICATION	7.648393668548433E-7	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.999999979143844	WITHOUT_CLASSIFICATION	2.0856156024368223E-8	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.999999492532288	WITHOUT_CLASSIFICATION	5.074677120221251E-7	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999994569646707	WITHOUT_CLASSIFICATION	5.430353292463373E-7	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999999962266295	WITHOUT_CLASSIFICATION	3.7733704464698015E-9	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999978198440259	WITHOUT_CLASSIFICATION	2.180155974107515E-6	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999998814813332	WITHOUT_CLASSIFICATION	1.1851866679878672E-7	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.999999944223866	WITHOUT_CLASSIFICATION	5.5776134036035924E-8	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999736219374	WITHOUT_CLASSIFICATION	2.6378062677248667E-8	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999998231839207	WITHOUT_CLASSIFICATION	1.7681607929460582E-7	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999980335705522	WITHOUT_CLASSIFICATION	1.966429447790489E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999998451332939	WITHOUT_CLASSIFICATION	1.5486670617238973E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.999999828232611	WITHOUT_CLASSIFICATION	1.717673890114986E-7	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999999001068828	WITHOUT_CLASSIFICATION	9.989311711078625E-8	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.999999987215724	WITHOUT_CLASSIFICATION	1.2784275985334856E-8	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999998116511388	WITHOUT_CLASSIFICATION	1.883488611937439E-7	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999948168021768	WITHOUT_CLASSIFICATION	5.183197823222041E-6	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999999696410876	WITHOUT_CLASSIFICATION	3.0358912297355203E-8	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999993925384862	WITHOUT_CLASSIFICATION	6.074615137814621E-7	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999538901553363	WITHOUT_CLASSIFICATION	4.610984466369034E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999999995158758	WITHOUT_CLASSIFICATION	4.841242125035239E-10	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999886963231347	WITHOUT_CLASSIFICATION	1.1303676865351843E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999995925257633	WITHOUT_CLASSIFICATION	4.0747423668486467E-7	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.999999785319133	WITHOUT_CLASSIFICATION	2.1468086686958772E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999915043479	WITHOUT_CLASSIFICATION	8.49565210864633E-9	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.999999390708379	WITHOUT_CLASSIFICATION	6.092916210445091E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999998439971003	WITHOUT_CLASSIFICATION	1.5600289966458083E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999999617320288	WITHOUT_CLASSIFICATION	3.826797133041959E-8	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999996405532952	WITHOUT_CLASSIFICATION	3.5944670474240983E-7	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999997096770346	WITHOUT_CLASSIFICATION	2.9032296544199643E-7	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999999487169513	WITHOUT_CLASSIFICATION	5.128304859911138E-8	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999672748147913	WITHOUT_CLASSIFICATION	3.2725185208726776E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999945402242594	WITHOUT_CLASSIFICATION	5.459775740617152E-6	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999986625610894	WITHOUT_CLASSIFICATION	1.3374389106313631E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999998382475931	WITHOUT_CLASSIFICATION	1.617524067979883E-7	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999960010372246	WITHOUT_CLASSIFICATION	3.998962775328812E-6	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999999647249543	WITHOUT_CLASSIFICATION	3.5275045596184545E-8	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999966961419446	WITHOUT_CLASSIFICATION	3.3038580553539626E-6	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.999999822243757	WITHOUT_CLASSIFICATION	1.777562428384555E-7	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999982098338973	WITHOUT_CLASSIFICATION	1.7901661027158734E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999999455566365	WITHOUT_CLASSIFICATION	5.444336340714946E-8	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9998909290332785	WITHOUT_CLASSIFICATION	1.0907096672145659E-4	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999993286484826	WITHOUT_CLASSIFICATION	6.713515174873387E-7	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999936691141769	WITHOUT_CLASSIFICATION	6.3308858230892355E-6	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999993365470848	WITHOUT_CLASSIFICATION	6.63452915189832E-7	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.999999471701592	WITHOUT_CLASSIFICATION	5.282984080714516E-7	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999927493790886	WITHOUT_CLASSIFICATION	7.250620911411198E-6	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999999913112523	WITHOUT_CLASSIFICATION	8.688747649949961E-9	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999914654181341	WITHOUT_CLASSIFICATION	8.534581865927351E-6	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999999588306353	WITHOUT_CLASSIFICATION	4.1169364665304913E-8	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999990952800404	WITHOUT_CLASSIFICATION	9.047199595226184E-7	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999999765884013	WITHOUT_CLASSIFICATION	2.3411598687323316E-8	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999994526234317	WITHOUT_CLASSIFICATION	5.473765682206585E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999990952800404	WITHOUT_CLASSIFICATION	9.047199595226184E-7	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999999918278529	WITHOUT_CLASSIFICATION	8.1721470604149E-9	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999986143782744	WITHOUT_CLASSIFICATION	1.385621725562084E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999999817772387	WITHOUT_CLASSIFICATION	1.8222761232820115E-8	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999997120408238	WITHOUT_CLASSIFICATION	2.8795917618666507E-7	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999999983501854	WITHOUT_CLASSIFICATION	1.649814703492111E-9	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999999584197661	WITHOUT_CLASSIFICATION	4.158023403919324E-8	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999970155031	WITHOUT_CLASSIFICATION	2.98449680473696E-9	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999999668872207	WITHOUT_CLASSIFICATION	3.3112779222651033E-8	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999997843550944	WITHOUT_CLASSIFICATION	2.156449055553573E-7	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999999970957701	WITHOUT_CLASSIFICATION	2.9042298785714093E-9	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999986771467637	WITHOUT_CLASSIFICATION	1.3228532362868075E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999999811395988	WITHOUT_CLASSIFICATION	1.886040130264526E-8	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.999999999862424	WITHOUT_CLASSIFICATION	1.3757587410852508E-10	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999999950323932	WITHOUT_CLASSIFICATION	4.967606837056619E-9	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999992610479534	WITHOUT_CLASSIFICATION	7.389520466600631E-7	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.999997968474755	WITHOUT_CLASSIFICATION	2.031525245116831E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999994387877004	WITHOUT_CLASSIFICATION	5.612122996262941E-7	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999999621908875	WITHOUT_CLASSIFICATION	3.780911258414798E-8	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999999742823846	WITHOUT_CLASSIFICATION	2.57176154398095E-8	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999999770611812	WITHOUT_CLASSIFICATION	2.2938818922670153E-8	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999998460125569	WITHOUT_CLASSIFICATION	1.5398744302834763E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737640541	WITHOUT_CLASSIFICATION	3.126235945988918E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737640541	WITHOUT_CLASSIFICATION	3.126235945988918E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999990831823069	WITHOUT_CLASSIFICATION	9.168176930242709E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998254075761	WITHOUT_CLASSIFICATION	1.745924238185073E-7	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999999403116862	WITHOUT_CLASSIFICATION	5.968831381063273E-8	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999977252584	WITHOUT_CLASSIFICATION	2.274741553438238E-9	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999977252584	WITHOUT_CLASSIFICATION	2.274741553438238E-9	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999969447747	WITHOUT_CLASSIFICATION	3.055225236789195E-9	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999999988489348	WITHOUT_CLASSIFICATION	1.1510652279959292E-9	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999999989539763	WITHOUT_CLASSIFICATION	1.0460238015920407E-9	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999999777270804	WITHOUT_CLASSIFICATION	2.2272919591957423E-8	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999998562533838	WITHOUT_CLASSIFICATION	1.437466161266223E-7	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999729311381755	WITHOUT_CLASSIFICATION	2.7068861824567015E-5	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999972387021834	WITHOUT_CLASSIFICATION	2.7612978165418388E-6	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.999999242867801	WITHOUT_CLASSIFICATION	7.571321991400206E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.999999960867009	WITHOUT_CLASSIFICATION	3.913299089822494E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.999999960867009	WITHOUT_CLASSIFICATION	3.913299089822494E-8	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999460005087	WITHOUT_CLASSIFICATION	5.399949130321828E-7	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999460005087	WITHOUT_CLASSIFICATION	5.399949130321828E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999862357372635	WITHOUT_CLASSIFICATION	1.3764262736354934E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999998961665665	WITHOUT_CLASSIFICATION	1.038334335085273E-7	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999994460584767	WITHOUT_CLASSIFICATION	5.539415232913836E-7	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999919944801401	WITHOUT_CLASSIFICATION	8.00551985994821E-6	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999999831430954	WITHOUT_CLASSIFICATION	1.6856904689228134E-8	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999999844571679	WITHOUT_CLASSIFICATION	1.554283211908626E-8	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999985565449144	WITHOUT_CLASSIFICATION	1.4434550855938201E-6	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999975401228721	WITHOUT_CLASSIFICATION	2.4598771278041787E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999837189898956	WITHOUT_CLASSIFICATION	1.628101010434614E-5	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999971544213893	WITHOUT_CLASSIFICATION	2.8455786108014135E-6	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999999569667586	WITHOUT_CLASSIFICATION	4.303324146342235E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999999700788461	WITHOUT_CLASSIFICATION	2.99211538621841E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999999700788461	WITHOUT_CLASSIFICATION	2.99211538621841E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.999999955285181	WITHOUT_CLASSIFICATION	4.4714818862646135E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.999999955285181	WITHOUT_CLASSIFICATION	4.4714818862646135E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999996623665945	WITHOUT_CLASSIFICATION	3.3763340543082844E-7	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9999350647223364	WITHOUT_CLASSIFICATION	6.493527766361796E-5	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.999995974147326	WITHOUT_CLASSIFICATION	4.0258526739334485E-6	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999874780187302	WITHOUT_CLASSIFICATION	1.2521981269858452E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999962549453055	WITHOUT_CLASSIFICATION	3.745054694584511E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999989463319385	WITHOUT_CLASSIFICATION	1.053668061499374E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999612883613	WITHOUT_CLASSIFICATION	3.8711638723935594E-8	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.999999937741141	WITHOUT_CLASSIFICATION	6.22588589019888E-8	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.999999937741141	WITHOUT_CLASSIFICATION	6.22588589019888E-8	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999997012203694	WITHOUT_CLASSIFICATION	2.9877963061321015E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999997012203694	WITHOUT_CLASSIFICATION	2.9877963061321015E-7	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999975881403185	WITHOUT_CLASSIFICATION	2.411859681507143E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999993085287454	WITHOUT_CLASSIFICATION	6.914712545189261E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.99999719735133	WITHOUT_CLASSIFICATION	2.802648669968851E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.99999719735133	WITHOUT_CLASSIFICATION	2.802648669968851E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.99999719735133	WITHOUT_CLASSIFICATION	2.802648669968851E-6	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999997484065236	WITHOUT_CLASSIFICATION	2.5159347634490176E-7	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.999999902760514	WITHOUT_CLASSIFICATION	9.723948604060105E-8	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999998794716826	WITHOUT_CLASSIFICATION	1.205283174893272E-7	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999999660451266	WITHOUT_CLASSIFICATION	3.3954873387248393E-8	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999999185205017	WITHOUT_CLASSIFICATION	8.147949820713674E-8	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999471744796495	WITHOUT_CLASSIFICATION	5.282552035057016E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999999405123464	WITHOUT_CLASSIFICATION	5.9487653591855486E-8	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999998201283492	WITHOUT_CLASSIFICATION	1.7987165077320686E-7	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999998947475	WITHOUT_CLASSIFICATION	1.0525249994686975E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999996959877602	WITHOUT_CLASSIFICATION	3.0401223976173054E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999940036285783	WITHOUT_CLASSIFICATION	5.996371421725706E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999999292803492	WITHOUT_CLASSIFICATION	7.07196508200744E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999929752718	WITHOUT_CLASSIFICATION	7.02472826841993E-9	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999999978252776	WITHOUT_CLASSIFICATION	2.1747223704500856E-9	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999999647989701	WITHOUT_CLASSIFICATION	3.520102980583496E-8	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999997150190031	WITHOUT_CLASSIFICATION	2.849809969698724E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999877987868244	WITHOUT_CLASSIFICATION	1.2201213175565772E-5	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999304022043242	WITHOUT_CLASSIFICATION	6.959779567590012E-5	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999999976726477	WITHOUT_CLASSIFICATION	2.327352218055811E-9	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999999998094988	WITHOUT_CLASSIFICATION	1.9050111824193875E-10	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999999990859033	WITHOUT_CLASSIFICATION	9.140966411166401E-10	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999996075963726	WITHOUT_CLASSIFICATION	3.9240362729659877E-7	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999994255473396	WITHOUT_CLASSIFICATION	5.744526604796861E-7	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999983204684991	WITHOUT_CLASSIFICATION	1.6795315009025995E-6	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999996323713339	WITHOUT_CLASSIFICATION	3.676286661104097E-7	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999999112122582	WITHOUT_CLASSIFICATION	8.878774188952807E-8	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999970685548627	WITHOUT_CLASSIFICATION	2.9314451373547337E-6	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999999940495536	WITHOUT_CLASSIFICATION	5.9504463624788545E-9	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.999987792311464	WITHOUT_CLASSIFICATION	1.2207688536060461E-5	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999941228087422	WITHOUT_CLASSIFICATION	5.877191257750584E-6	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999915217649	WITHOUT_CLASSIFICATION	8.47823518407211E-9	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999961910984875	WITHOUT_CLASSIFICATION	3.8089015124542698E-6	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999995619467686	WITHOUT_CLASSIFICATION	4.38053231250543E-7	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999998497895153	WITHOUT_CLASSIFICATION	1.5021048474526554E-7	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999864601120444	WITHOUT_CLASSIFICATION	1.3539887955585881E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999998818046671	WITHOUT_CLASSIFICATION	1.1819533281497484E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999999065701968	WITHOUT_CLASSIFICATION	9.342980326545795E-8	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999999478317045	WITHOUT_CLASSIFICATION	5.216829549666082E-8	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999999834397916	WITHOUT_CLASSIFICATION	1.6560208394803924E-8	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999944689113	WITHOUT_CLASSIFICATION	5.531088682697765E-9	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999977984245486	WITHOUT_CLASSIFICATION	2.2015754514352943E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999949845021	WITHOUT_CLASSIFICATION	5.015497810716704E-9	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9995187784335916	WITHOUT_CLASSIFICATION	4.81221566408453E-4	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999999965105489	WITHOUT_CLASSIFICATION	3.4894511239738404E-9	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999971683521485	WITHOUT_CLASSIFICATION	2.8316478515704506E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999999472429956	WITHOUT_CLASSIFICATION	5.275700432141973E-8	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999998374696072	WITHOUT_CLASSIFICATION	1.625303927316539E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999997835533012	WITHOUT_CLASSIFICATION	2.1644669888653202E-7	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999973296565201	WITHOUT_CLASSIFICATION	2.6703434798542073E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999949292349064	WITHOUT_CLASSIFICATION	5.070765093576619E-6	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.999996054203494	WITHOUT_CLASSIFICATION	3.945796505986784E-6	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999999778161003	WITHOUT_CLASSIFICATION	2.2183899766413787E-8	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999999883788178	WITHOUT_CLASSIFICATION	1.1621182300445692E-8	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999987611364606	WITHOUT_CLASSIFICATION	1.2388635393301308E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999959475441411	WITHOUT_CLASSIFICATION	4.0524558589592076E-6	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999676566036932	WITHOUT_CLASSIFICATION	3.234339630676993E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9995187784335916	WITHOUT_CLASSIFICATION	4.81221566408453E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9995187784335916	WITHOUT_CLASSIFICATION	4.81221566408453E-4	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.999999731063568	WITHOUT_CLASSIFICATION	2.6893643201864796E-7	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999991839053106	WITHOUT_CLASSIFICATION	8.160946893267556E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.999999994494927	WITHOUT_CLASSIFICATION	5.505072855590121E-9	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.999999937219788	WITHOUT_CLASSIFICATION	6.278021207551632E-8	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.999999937219788	WITHOUT_CLASSIFICATION	6.278021207551632E-8	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999999952075882	WITHOUT_CLASSIFICATION	4.792411734303643E-9	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999953183888	WITHOUT_CLASSIFICATION	4.681611145112724E-9	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999999769044102	WITHOUT_CLASSIFICATION	2.3095589719784857E-8	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9997987406068344	WITHOUT_CLASSIFICATION	2.012593931656012E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999525086459561	WITHOUT_CLASSIFICATION	4.749135404387706E-5	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.999999999657138	WITHOUT_CLASSIFICATION	3.4286199241078834E-10	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999999370790639	WITHOUT_CLASSIFICATION	6.292093615316169E-8	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999990123400685	WITHOUT_CLASSIFICATION	9.876599314541137E-7	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.999957965108446	WITHOUT_CLASSIFICATION	4.203489155391148E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999796393847357	WITHOUT_CLASSIFICATION	2.0360615264355284E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999999942072136	WITHOUT_CLASSIFICATION	5.792786411280669E-9	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999999977454223	WITHOUT_CLASSIFICATION	2.254577788622042E-9	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999525086459561	WITHOUT_CLASSIFICATION	4.749135404387706E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999960867009	WITHOUT_CLASSIFICATION	3.913299089822494E-8	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999960867009	WITHOUT_CLASSIFICATION	3.913299089822494E-8	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999991791778604	WITHOUT_CLASSIFICATION	8.208221394729925E-7	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999981201912422	WITHOUT_CLASSIFICATION	1.8798087578029829E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999999631807788	WITHOUT_CLASSIFICATION	3.6819221189550245E-8	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999981839115972	WITHOUT_CLASSIFICATION	1.8160884028102473E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999960211354587	WITHOUT_CLASSIFICATION	3.978864541242409E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.999996674854458	WITHOUT_CLASSIFICATION	3.325145542002133E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.999996674854458	WITHOUT_CLASSIFICATION	3.325145542002133E-6	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999963166974933	WITHOUT_CLASSIFICATION	3.683302506692446E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999840616607593	WITHOUT_CLASSIFICATION	1.59383392408018E-5	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.999999733775612	WITHOUT_CLASSIFICATION	2.6622438803299325E-7	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999894435613238	WITHOUT_CLASSIFICATION	1.0556438676134563E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999907032712294	WITHOUT_CLASSIFICATION	9.29672877067306E-6	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999814468130835	WITHOUT_CLASSIFICATION	1.855318691647929E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999981424624519	WITHOUT_CLASSIFICATION	1.8575375480244122E-6	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999914078491247	WITHOUT_CLASSIFICATION	8.592150875303336E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821717	WITHOUT_CLASSIFICATION	2.2717828323686785E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628456398	WITHOUT_CLASSIFICATION	1.371543601504139E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366022518	WITHOUT_CLASSIFICATION	4.633977481386441E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998303365498	WITHOUT_CLASSIFICATION	1.696634501017194E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999986042786788	WITHOUT_CLASSIFICATION	1.3957213212486414E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998915573206	WITHOUT_CLASSIFICATION	1.0844267932072756E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999999279906375	WITHOUT_CLASSIFICATION	7.200936247693258E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999993823963125	WITHOUT_CLASSIFICATION	6.176036874288148E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950315	WITHOUT_CLASSIFICATION	2.60496841343918E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912323	WITHOUT_CLASSIFICATION	6.709087675935197E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999997884921682	WITHOUT_CLASSIFICATION	2.1150783180706203E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570522356	WITHOUT_CLASSIFICATION	3.429477643526695E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999994618754768	WITHOUT_CLASSIFICATION	5.381245230865651E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879518	WITHOUT_CLASSIFICATION	3.5212048276077426E-8	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999999881492495	WITHOUT_CLASSIFICATION	1.1850750504416242E-8	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999999593547992	WITHOUT_CLASSIFICATION	4.0645200824828126E-8	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999999876748416	WITHOUT_CLASSIFICATION	1.2325158480047703E-8	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999998606265476	WITHOUT_CLASSIFICATION	1.393734523986991E-7	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999992597417263	WITHOUT_CLASSIFICATION	7.402582737702307E-7	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999994235416915	WITHOUT_CLASSIFICATION	5.764583084891112E-7	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999999807642866	WITHOUT_CLASSIFICATION	1.9235713351168675E-8	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999985776428723	WITHOUT_CLASSIFICATION	1.4223571276663989E-6	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999999097023092	WITHOUT_CLASSIFICATION	9.029769083195992E-8	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999994583687887	WITHOUT_CLASSIFICATION	5.416312113077801E-7	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999988037169906	WITHOUT_CLASSIFICATION	1.1962830093758715E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999988037169906	WITHOUT_CLASSIFICATION	1.1962830093758715E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999998911773287	WITHOUT_CLASSIFICATION	1.0882267128166039E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999999327592717	WITHOUT_CLASSIFICATION	6.724072834158146E-8	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999990897971208	WITHOUT_CLASSIFICATION	9.102028790831398E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999997265612565	WITHOUT_CLASSIFICATION	2.7343874345110385E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999997265612565	WITHOUT_CLASSIFICATION	2.7343874345110385E-7	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999997058490714	WITHOUT_CLASSIFICATION	2.941509286161258E-7	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999988624795899	WITHOUT_CLASSIFICATION	1.1375204100607488E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999290180189	WITHOUT_CLASSIFICATION	7.098198108586228E-8	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.999998621827471	WITHOUT_CLASSIFICATION	1.3781725290514856E-6	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999989898477182	WITHOUT_CLASSIFICATION	1.0101522818459474E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998303365498	WITHOUT_CLASSIFICATION	1.696634501017194E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998201479904	WITHOUT_CLASSIFICATION	1.7985200957516774E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998915573206	WITHOUT_CLASSIFICATION	1.0844267932072756E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999993823963125	WITHOUT_CLASSIFICATION	6.176036874288148E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999997884921682	WITHOUT_CLASSIFICATION	2.1150783180706203E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570522356	WITHOUT_CLASSIFICATION	3.429477643526695E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999979182944523	WITHOUT_CLASSIFICATION	2.081705547678708E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879518	WITHOUT_CLASSIFICATION	3.5212048276077426E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008205082	WITHOUT_CLASSIFICATION	9.917949185696776E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.999999955285181	WITHOUT_CLASSIFICATION	4.4714818862646135E-8	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999994090737848	WITHOUT_CLASSIFICATION	5.909262151024688E-7	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.999998885171776	WITHOUT_CLASSIFICATION	1.114828223909168E-6	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999994083316934	WITHOUT_CLASSIFICATION	5.916683066178516E-7	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999996727653738	WITHOUT_CLASSIFICATION	3.2723462612450177E-7	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9999996020174566	WITHOUT_CLASSIFICATION	3.979825434274411E-7	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999998497922313	WITHOUT_CLASSIFICATION	1.5020776860995462E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9999744137201317	WITHOUT_CLASSIFICATION	2.5586279868343607E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999977482582585	WITHOUT_CLASSIFICATION	2.2517417414707433E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.999999880850659	WITHOUT_CLASSIFICATION	1.1914934097777581E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999992808112556	WITHOUT_CLASSIFICATION	7.19188744546402E-7	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999993567827681	WITHOUT_CLASSIFICATION	6.432172318817134E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999932488006089	WITHOUT_CLASSIFICATION	6.751199391205122E-6	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999973146245739	WITHOUT_CLASSIFICATION	2.685375426103925E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999870720275849	WITHOUT_CLASSIFICATION	1.2927972415114322E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999999132211087	WITHOUT_CLASSIFICATION	8.677889129099903E-8	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.999999282853733	WITHOUT_CLASSIFICATION	7.171462670779765E-7	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9999739226342003	WITHOUT_CLASSIFICATION	2.6077365799746025E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.999999039491162	WITHOUT_CLASSIFICATION	9.60508838116683E-7	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999812645205717	WITHOUT_CLASSIFICATION	1.873547942831262E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999812645205717	WITHOUT_CLASSIFICATION	1.873547942831262E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999999517435801	WITHOUT_CLASSIFICATION	4.8256419897717457E-8	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999873137757221	WITHOUT_CLASSIFICATION	1.2686224277832016E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999988939690801	WITHOUT_CLASSIFICATION	1.1060309198629003E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999988939690801	WITHOUT_CLASSIFICATION	1.1060309198629003E-6	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999997540054647	WITHOUT_CLASSIFICATION	2.4599453533222727E-7	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999996266306612	WITHOUT_CLASSIFICATION	3.7336933878489217E-7	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999998542393448	WITHOUT_CLASSIFICATION	1.4576065520253767E-7	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999999872317231	WITHOUT_CLASSIFICATION	1.276827683272573E-8	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999999494757291	WITHOUT_CLASSIFICATION	5.05242708835929E-8	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.999999939794036	WITHOUT_CLASSIFICATION	6.020596401883037E-8	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999999460556059	WITHOUT_CLASSIFICATION	5.394439419155053E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999596802024	WITHOUT_CLASSIFICATION	4.031979760973564E-8	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.999998837805875	WITHOUT_CLASSIFICATION	1.162194125010626E-6	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.999999715906511	WITHOUT_CLASSIFICATION	2.840934889929751E-7	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999377179090184	WITHOUT_CLASSIFICATION	6.228209098159719E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999870720275849	WITHOUT_CLASSIFICATION	1.2927972415114322E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999999561403797	WITHOUT_CLASSIFICATION	4.3859620247910425E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999724231622207	WITHOUT_CLASSIFICATION	2.7576837779245068E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999998070673909	WITHOUT_CLASSIFICATION	1.9293260909632974E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999908242923	WITHOUT_CLASSIFICATION	9.175707710413804E-9	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9999373509607816	WITHOUT_CLASSIFICATION	6.264903921840691E-5	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999995671219678	WITHOUT_CLASSIFICATION	4.328780321656587E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999999881982263	WITHOUT_CLASSIFICATION	1.1801773584895658E-8	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997933705334312	WITHOUT_CLASSIFICATION	2.0662946656880345E-4	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997933705334312	WITHOUT_CLASSIFICATION	2.0662946656880345E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999778061653938	WITHOUT_CLASSIFICATION	2.219383460631083E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999476785153	WITHOUT_CLASSIFICATION	5.232148467730347E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999596802024	WITHOUT_CLASSIFICATION	4.031979760973564E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999596802024	WITHOUT_CLASSIFICATION	4.031979760973564E-8	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999994871849927	WITHOUT_CLASSIFICATION	5.128150073510308E-7	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9996771180602988	WITHOUT_CLASSIFICATION	3.2288193970110286E-4	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999992503243929	WITHOUT_CLASSIFICATION	7.49675607122736E-7	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999977085079315	WITHOUT_CLASSIFICATION	2.291492068566981E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999994545442586	WITHOUT_CLASSIFICATION	5.454557413371374E-7	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999993418609423	WITHOUT_CLASSIFICATION	6.581390577908664E-7	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.999986424858483	WITHOUT_CLASSIFICATION	1.3575141516988167E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999998336482835	WITHOUT_CLASSIFICATION	1.6635171653033692E-7	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999999089013965	WITHOUT_CLASSIFICATION	9.109860360614996E-8	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999989949154735	WITHOUT_CLASSIFICATION	1.0050845264838474E-6	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999999814463902	WITHOUT_CLASSIFICATION	1.8553609744814874E-8	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999968563627795	WITHOUT_CLASSIFICATION	3.143637220557686E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999968563627795	WITHOUT_CLASSIFICATION	3.143637220557686E-6	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999999439898092	WITHOUT_CLASSIFICATION	5.601019077965296E-8	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999992021411087	WITHOUT_CLASSIFICATION	7.978588913155484E-7	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999992021411087	WITHOUT_CLASSIFICATION	7.978588913155484E-7	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.999999351368329	WITHOUT_CLASSIFICATION	6.486316710234104E-7	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.999999351368329	WITHOUT_CLASSIFICATION	6.486316710234104E-7	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999887412997639	WITHOUT_CLASSIFICATION	1.1258700236008393E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.999999997263376	WITHOUT_CLASSIFICATION	2.7366240745584477E-9	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.999999997263376	WITHOUT_CLASSIFICATION	2.7366240745584477E-9	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.999999940905878	WITHOUT_CLASSIFICATION	5.909412212276946E-8	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999998509258933	WITHOUT_CLASSIFICATION	1.4907410673448222E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999638723816751	WITHOUT_CLASSIFICATION	3.612761832490674E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999983303192276	WITHOUT_CLASSIFICATION	1.669680772492092E-6	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999544287261	WITHOUT_CLASSIFICATION	4.557127378963545E-8	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999994375607696	WITHOUT_CLASSIFICATION	5.624392303486695E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9996767486044127	WITHOUT_CLASSIFICATION	3.232513955873071E-4	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999915710363493	WITHOUT_CLASSIFICATION	8.428963650776337E-6	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999994589459601	WITHOUT_CLASSIFICATION	5.410540398540418E-7	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999998724174741	WITHOUT_CLASSIFICATION	1.2758252587569187E-7	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999998824378689	WITHOUT_CLASSIFICATION	1.17562131122339E-7	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999999891866491	WITHOUT_CLASSIFICATION	1.0813350948367548E-8	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999656461561889	WITHOUT_CLASSIFICATION	3.435384381118544E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999998509258933	WITHOUT_CLASSIFICATION	1.4907410673448222E-7	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999999152596313	WITHOUT_CLASSIFICATION	8.474036880300325E-8	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999948051618	WITHOUT_CLASSIFICATION	5.1948382482957284E-9	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999999583751309	WITHOUT_CLASSIFICATION	4.162486908292732E-8	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999861181667266	WITHOUT_CLASSIFICATION	1.388183327346366E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999999973749694	WITHOUT_CLASSIFICATION	2.625030728528505E-9	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999990109870707	WITHOUT_CLASSIFICATION	9.890129292976753E-7	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999960977576335	WITHOUT_CLASSIFICATION	3.9022423664735205E-6	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.999999992738717	WITHOUT_CLASSIFICATION	7.2612829742713905E-9	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999999186914742	WITHOUT_CLASSIFICATION	8.1308525795124E-8	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999968889000849	WITHOUT_CLASSIFICATION	3.111099915054771E-6	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999990952418866	WITHOUT_CLASSIFICATION	9.047581134761546E-7	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999855966266485	WITHOUT_CLASSIFICATION	1.4403373351433522E-5	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.999999913011282	WITHOUT_CLASSIFICATION	8.698871801424424E-8	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999532487012533	WITHOUT_CLASSIFICATION	4.6751298746687084E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999997885358545	WITHOUT_CLASSIFICATION	2.1146414545481912E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999989432171598	WITHOUT_CLASSIFICATION	1.0567828402345756E-6	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999992341398417	WITHOUT_CLASSIFICATION	7.65860158157992E-7	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999996469671923	WITHOUT_CLASSIFICATION	3.530328076146106E-7	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999999652554576	WITHOUT_CLASSIFICATION	3.474454239076397E-8	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999996929295133	WITHOUT_CLASSIFICATION	3.0707048669673735E-7	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999999599694733	WITHOUT_CLASSIFICATION	4.0030526771569535E-8	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999743506696557	WITHOUT_CLASSIFICATION	2.5649330344417753E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999996175341512	WITHOUT_CLASSIFICATION	3.824658488086246E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.999992043129841	WITHOUT_CLASSIFICATION	7.956870158944026E-6	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9944256979452583	WITHOUT_CLASSIFICATION	0.005574302054741736	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.999999983617678	WITHOUT_CLASSIFICATION	1.638232204078794E-8	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999987065330254	WITHOUT_CLASSIFICATION	1.2934669746529451E-6	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999993122726084	WITHOUT_CLASSIFICATION	6.877273915962231E-7	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.999990532747251	WITHOUT_CLASSIFICATION	9.467252749033065E-6	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9994742327095563	WITHOUT_CLASSIFICATION	5.257672904437142E-4	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999742776707516	WITHOUT_CLASSIFICATION	2.572232924830665E-5	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999996872615472	WITHOUT_CLASSIFICATION	3.127384528038066E-7	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999999182231751	WITHOUT_CLASSIFICATION	8.177682479193557E-8	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999999519671122	WITHOUT_CLASSIFICATION	4.803288770324926E-8	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999987768775874	WITHOUT_CLASSIFICATION	1.2231224125174753E-6	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.999894184376857	WITHOUT_CLASSIFICATION	1.0581562314301934E-4	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.999999961165059	WITHOUT_CLASSIFICATION	3.883494102291369E-8	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.999992043129841	WITHOUT_CLASSIFICATION	7.956870158944026E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999765492227	WITHOUT_CLASSIFICATION	2.3450777373633543E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999834507418	WITHOUT_CLASSIFICATION	1.6549258207208298E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999834507418	WITHOUT_CLASSIFICATION	1.6549258207208298E-8	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999998338135325	WITHOUT_CLASSIFICATION	1.661864674390691E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999998338135325	WITHOUT_CLASSIFICATION	1.661864674390691E-7	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9995275042242622	WITHOUT_CLASSIFICATION	4.7249577573788823E-4	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999999552019366	WITHOUT_CLASSIFICATION	4.47980634364939E-8	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999998863848629	WITHOUT_CLASSIFICATION	1.1361513702166255E-7	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.999998793258871	WITHOUT_CLASSIFICATION	1.206741129011753E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999943143885465	WITHOUT_CLASSIFICATION	5.685611453497251E-6	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.99969640486541	WITHOUT_CLASSIFICATION	3.035951345899894E-4	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999556890886631	WITHOUT_CLASSIFICATION	4.431091133701362E-5	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999998652792814	WITHOUT_CLASSIFICATION	1.347207186280611E-7	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999999883108851	WITHOUT_CLASSIFICATION	1.168911488225815E-8	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999951103324	WITHOUT_CLASSIFICATION	4.8896674960169104E-9	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999931592689308	WITHOUT_CLASSIFICATION	6.840731069244468E-6	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999989827859042	WITHOUT_CLASSIFICATION	1.017214095845156E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999999518793313	WITHOUT_CLASSIFICATION	4.8120668667576766E-8	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999998800420163	WITHOUT_CLASSIFICATION	1.1995798365891573E-7	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999999249865056	WITHOUT_CLASSIFICATION	7.501349436775786E-8	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999872464121378	WITHOUT_CLASSIFICATION	1.2753587862292412E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999998876241477	WITHOUT_CLASSIFICATION	1.1237585229587129E-7	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999908242923	WITHOUT_CLASSIFICATION	9.175707710413804E-9	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999996565377972	WITHOUT_CLASSIFICATION	3.434622027324208E-7	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.999999961469062	WITHOUT_CLASSIFICATION	3.853093807702892E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008205082	WITHOUT_CLASSIFICATION	9.917949185696776E-8	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.999999961469062	WITHOUT_CLASSIFICATION	3.853093807702892E-8	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999964275607255	WITHOUT_CLASSIFICATION	3.572439274519816E-6	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999859541582939	WITHOUT_CLASSIFICATION	1.4045841705991984E-5	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9997386809058376	WITHOUT_CLASSIFICATION	2.6131909416229866E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999999574958235	WITHOUT_CLASSIFICATION	4.250417656364493E-8	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999998939927676	WITHOUT_CLASSIFICATION	1.0600723246802984E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999561751551814	WITHOUT_CLASSIFICATION	4.382484481865712E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999561751551814	WITHOUT_CLASSIFICATION	4.382484481865712E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.999996467263591	WITHOUT_CLASSIFICATION	3.532736408875811E-6	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999959939959046	WITHOUT_CLASSIFICATION	4.006004095402436E-6	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999999979825317	WITHOUT_CLASSIFICATION	2.017468349667686E-9	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999999721619998	WITHOUT_CLASSIFICATION	2.783800013439154E-8	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999999546904529	WITHOUT_CLASSIFICATION	4.5309547080387594E-8	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999967842193871	WITHOUT_CLASSIFICATION	3.215780612911862E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999998939927676	WITHOUT_CLASSIFICATION	1.0600723246802984E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999561751551814	WITHOUT_CLASSIFICATION	4.382484481865712E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999561751551814	WITHOUT_CLASSIFICATION	4.382484481865712E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.999996467263591	WITHOUT_CLASSIFICATION	3.532736408875811E-6	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999999969646328	WITHOUT_CLASSIFICATION	3.0353672411436365E-9	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999999726776073	WITHOUT_CLASSIFICATION	2.7322392701505544E-8	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999997598477439	WITHOUT_CLASSIFICATION	2.401522560554328E-7	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999993989562016	WITHOUT_CLASSIFICATION	6.010437984293705E-7	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999897522345296	WITHOUT_CLASSIFICATION	1.02477654704925E-5	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9998945554907096	WITHOUT_CLASSIFICATION	1.0544450929034858E-4	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999999055477821	WITHOUT_CLASSIFICATION	9.445221785431425E-8	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999959047792689	WITHOUT_CLASSIFICATION	4.095220731074588E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999959047792689	WITHOUT_CLASSIFICATION	4.095220731074588E-6	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999779550804766	WITHOUT_CLASSIFICATION	2.2044919523356916E-5	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999987935309769	WITHOUT_CLASSIFICATION	1.2064690231426717E-6	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999992711057364	WITHOUT_CLASSIFICATION	7.288942636405058E-7	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9943422444552655	WITHOUT_CLASSIFICATION	0.005657755544734509	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999993759882673	WITHOUT_CLASSIFICATION	6.24011732793851E-7	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.999980295231609	WITHOUT_CLASSIFICATION	1.970476839094575E-5	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999601368301979	WITHOUT_CLASSIFICATION	3.9863169802129417E-5	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.999999865716631	WITHOUT_CLASSIFICATION	1.3428336893968588E-7	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.998714483358822	WITHOUT_CLASSIFICATION	0.0012855166411780382	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999915518181043	WITHOUT_CLASSIFICATION	8.448181895814E-6	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999998007567404	WITHOUT_CLASSIFICATION	1.992432595486141E-7	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999852197039921	WITHOUT_CLASSIFICATION	1.4780296007752375E-5	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999994605133301	WITHOUT_CLASSIFICATION	5.394866698595942E-7	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9986783477016492	WITHOUT_CLASSIFICATION	0.0013216522983508494	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999997368010312	WITHOUT_CLASSIFICATION	2.631989688721801E-7	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999995108289379	WITHOUT_CLASSIFICATION	4.891710620161655E-7	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9997202424454376	WITHOUT_CLASSIFICATION	2.797575545624341E-4	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999987486170279	WITHOUT_CLASSIFICATION	1.2513829721474016E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999965373784396	WITHOUT_CLASSIFICATION	3.4626215602531662E-6	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999982704700066	WITHOUT_CLASSIFICATION	1.729529993463321E-6	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999837298987267	WITHOUT_CLASSIFICATION	1.6270101273234944E-5	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999999145963314	WITHOUT_CLASSIFICATION	8.540366857844464E-8	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999988373302011	WITHOUT_CLASSIFICATION	1.16266979887091E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999966641527792	WITHOUT_CLASSIFICATION	3.335847220809914E-6	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.999999925378419	WITHOUT_CLASSIFICATION	7.462158106179445E-8	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999998115656418	WITHOUT_CLASSIFICATION	1.8843435835721315E-7	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999999148344617	WITHOUT_CLASSIFICATION	8.516553830976657E-8	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999931737287937	WITHOUT_CLASSIFICATION	6.826271206366426E-6	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999999956199297	WITHOUT_CLASSIFICATION	4.380070260082789E-9	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999999797281176	WITHOUT_CLASSIFICATION	2.0271882474415137E-8	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999996986002209	WITHOUT_CLASSIFICATION	3.0139977906238485E-7	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.999999476916217	WITHOUT_CLASSIFICATION	5.230837830025375E-7	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999993014979808	WITHOUT_CLASSIFICATION	6.985020191964421E-7	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999998808297639	WITHOUT_CLASSIFICATION	1.1917023615167087E-7	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999994894859521	WITHOUT_CLASSIFICATION	5.105140478720256E-7	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999994894859521	WITHOUT_CLASSIFICATION	5.105140478720256E-7	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999968875474057	WITHOUT_CLASSIFICATION	3.112452594369368E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999984746997891	WITHOUT_CLASSIFICATION	1.5253002109722002E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999986818656003	WITHOUT_CLASSIFICATION	1.3181343998007232E-6	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999993689222446	WITHOUT_CLASSIFICATION	6.310777553787828E-7	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999991563599788	WITHOUT_CLASSIFICATION	8.436400210515604E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999999947980146	WITHOUT_CLASSIFICATION	5.2019853951633496E-9	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999880236232976	WITHOUT_CLASSIFICATION	1.1976376702380388E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999985340221833	WITHOUT_CLASSIFICATION	1.4659778167032935E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9996113106117122	WITHOUT_CLASSIFICATION	3.8868938828784904E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999995747738721	WITHOUT_CLASSIFICATION	4.2522612785496185E-7	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999999900683293	WITHOUT_CLASSIFICATION	9.931670671655958E-9	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999512200659108	WITHOUT_CLASSIFICATION	4.877993408934728E-5	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999401842462753	WITHOUT_CLASSIFICATION	5.981575372469213E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999041909663443	WITHOUT_CLASSIFICATION	9.580903365573424E-5	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9016580631572856	WITHOUT_CLASSIFICATION	0.09834193684271439	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999817850530595	WITHOUT_CLASSIFICATION	1.82149469405299E-5	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999988937783302	WITHOUT_CLASSIFICATION	1.1062216698298429E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.999999839241284	WITHOUT_CLASSIFICATION	1.607587160175461E-7	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999998010001506	WITHOUT_CLASSIFICATION	1.9899984925161625E-7	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999998666789588	WITHOUT_CLASSIFICATION	1.3332104114227684E-7	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.999999990285095	WITHOUT_CLASSIFICATION	9.714905002120303E-9	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999999042992785	WITHOUT_CLASSIFICATION	9.570072141890305E-8	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999630702070061	WITHOUT_CLASSIFICATION	3.692979299387708E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999994975927	WITHOUT_CLASSIFICATION	5.024072910036008E-10	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999999993092751	WITHOUT_CLASSIFICATION	6.907248084419037E-10	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999997733587205	WITHOUT_CLASSIFICATION	2.2664127957946263E-7	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999999434490227	WITHOUT_CLASSIFICATION	5.6550977482611624E-8	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999993967992558	WITHOUT_CLASSIFICATION	6.032007442433322E-7	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999835319086883	WITHOUT_CLASSIFICATION	1.646809131172202E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999867502595174	WITHOUT_CLASSIFICATION	1.3249740482656164E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999933984866642	WITHOUT_CLASSIFICATION	6.601513335711091E-6	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999990015173957	WITHOUT_CLASSIFICATION	9.984826041908315E-7	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999995702713673	WITHOUT_CLASSIFICATION	4.29728632665532E-7	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999971656235495	WITHOUT_CLASSIFICATION	2.8343764505612206E-6	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9997165245730155	WITHOUT_CLASSIFICATION	2.834754269844005E-4	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999976330770436	WITHOUT_CLASSIFICATION	2.366922956281785E-6	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999947868475565	WITHOUT_CLASSIFICATION	5.213152443577231E-6	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999985514417093	WITHOUT_CLASSIFICATION	1.4485582906391504E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999999880512108	WITHOUT_CLASSIFICATION	1.1948789127645677E-8	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999550678027364	WITHOUT_CLASSIFICATION	4.493219726354896E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999999927801596	WITHOUT_CLASSIFICATION	7.219840398046391E-9	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.999999994508192	WITHOUT_CLASSIFICATION	5.491807968331025E-9	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999998732539657	WITHOUT_CLASSIFICATION	1.267460342963963E-7	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.999999672498679	WITHOUT_CLASSIFICATION	3.275013209516714E-7	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999738671300678	WITHOUT_CLASSIFICATION	2.6132869932309345E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999999578038292	WITHOUT_CLASSIFICATION	4.2196170727834E-8	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999999998066874	WITHOUT_CLASSIFICATION	1.933126337098561E-10	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999999578038292	WITHOUT_CLASSIFICATION	4.2196170727834E-8	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999852486639655	WITHOUT_CLASSIFICATION	1.4751336034534628E-5	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9991834846994977	WITHOUT_CLASSIFICATION	8.165153005023476E-4	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999999959707119	WITHOUT_CLASSIFICATION	4.029288168013342E-9	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999999689127164	WITHOUT_CLASSIFICATION	3.108728363048543E-8	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999995608376152	WITHOUT_CLASSIFICATION	4.3916238479263224E-7	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999999997667491	WITHOUT_CLASSIFICATION	2.332508293810844E-10	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.999999793456513	WITHOUT_CLASSIFICATION	2.065434870310481E-7	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9998540477812033	WITHOUT_CLASSIFICATION	1.4595221879663137E-4	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999675096837187	WITHOUT_CLASSIFICATION	3.249031628123659E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999996790526844	WITHOUT_CLASSIFICATION	3.209473155787779E-7	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.999999718896075	WITHOUT_CLASSIFICATION	2.8110392502939045E-7	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999998111523168	WITHOUT_CLASSIFICATION	1.888476831705368E-7	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999983792650057	WITHOUT_CLASSIFICATION	1.6207349942285656E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9978516253437936	WITHOUT_CLASSIFICATION	0.0021483746562064292	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999800130155349	WITHOUT_CLASSIFICATION	1.9986984465182685E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999826390939786	WITHOUT_CLASSIFICATION	1.73609060214336E-5	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.999974553598851	WITHOUT_CLASSIFICATION	2.5446401148901406E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9996830429659652	WITHOUT_CLASSIFICATION	3.1695703403479504E-4	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999996910959327	WITHOUT_CLASSIFICATION	3.0890406729173207E-7	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999991094596872	WITHOUT_CLASSIFICATION	8.905403129553762E-7	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999999179949014	WITHOUT_CLASSIFICATION	8.200509859083894E-8	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999992203922307	WITHOUT_CLASSIFICATION	7.796077693638283E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999243570188	WITHOUT_CLASSIFICATION	7.564298128261021E-8	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.999999793456513	WITHOUT_CLASSIFICATION	2.065434870310481E-7	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999997979957537	WITHOUT_CLASSIFICATION	2.0200424640210756E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999997978354402	WITHOUT_CLASSIFICATION	2.021645597180131E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999997978354402	WITHOUT_CLASSIFICATION	2.021645597180131E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999999430030287	WITHOUT_CLASSIFICATION	5.69969712407408E-8	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999999131853035	WITHOUT_CLASSIFICATION	8.681469646831124E-8	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999999131853035	WITHOUT_CLASSIFICATION	8.681469646831124E-8	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999914315840388	WITHOUT_CLASSIFICATION	8.568415961229033E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999914315840388	WITHOUT_CLASSIFICATION	8.568415961229033E-6	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9644466771644676	WITHOUT_CLASSIFICATION	0.0355533228355324	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999999394115296	WITHOUT_CLASSIFICATION	6.058847027879652E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999990684556	WITHOUT_CLASSIFICATION	9.315443544500958E-10	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999988219515472	WITHOUT_CLASSIFICATION	1.1780484528563704E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999999160837827	WITHOUT_CLASSIFICATION	8.391621732228853E-8	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999980275790735	WITHOUT_CLASSIFICATION	1.97242092646774E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9999189432751381	WITHOUT_CLASSIFICATION	8.105672486192384E-5	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999986781081415	WITHOUT_CLASSIFICATION	1.3218918585998574E-6	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999999959153117	WITHOUT_CLASSIFICATION	4.084688230818594E-9	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999998258005279	WITHOUT_CLASSIFICATION	1.741994721163029E-7	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999913300345	WITHOUT_CLASSIFICATION	8.66996554248383E-9	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.999998793955785	WITHOUT_CLASSIFICATION	1.2060442150772142E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999991247897	WITHOUT_CLASSIFICATION	8.752103238310154E-10	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999815797918	WITHOUT_CLASSIFICATION	1.8420208241418252E-8	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.99999975143641	WITHOUT_CLASSIFICATION	2.485635900175924E-7	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999988981941895	WITHOUT_CLASSIFICATION	1.1018058104233728E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999997159125378	WITHOUT_CLASSIFICATION	2.8408746232637313E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999996165857898	WITHOUT_CLASSIFICATION	3.834142101775983E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999996165857898	WITHOUT_CLASSIFICATION	3.834142101775983E-7	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.999999982897209	WITHOUT_CLASSIFICATION	1.710279103513511E-8	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9986228501431893	WITHOUT_CLASSIFICATION	0.0013771498568106745	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999999846135013	WITHOUT_CLASSIFICATION	1.538649867714895E-8	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999977576846903	WITHOUT_CLASSIFICATION	2.24231530955501E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.999999885252198	WITHOUT_CLASSIFICATION	1.1474780193860088E-7	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999928083846866	WITHOUT_CLASSIFICATION	7.191615313335423E-6	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999989901639375	WITHOUT_CLASSIFICATION	1.009836062487995E-6	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999994037720825	WITHOUT_CLASSIFICATION	5.962279174155431E-7	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999996738438213	WITHOUT_CLASSIFICATION	3.261561786749634E-7	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999997194134047	WITHOUT_CLASSIFICATION	2.805865952572248E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999999999764596	WITHOUT_CLASSIFICATION	2.3540444821710204E-11	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999998956946159	WITHOUT_CLASSIFICATION	1.0430538409292405E-7	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999998275223999	WITHOUT_CLASSIFICATION	1.724776002130007E-7	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999999764432208	WITHOUT_CLASSIFICATION	2.355677916747399E-8	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999993772238553	WITHOUT_CLASSIFICATION	6.227761446246974E-7	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999998282688066	WITHOUT_CLASSIFICATION	1.7173119340666844E-7	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999865701263894	WITHOUT_CLASSIFICATION	1.3429873610639726E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999734001321428	WITHOUT_CLASSIFICATION	2.659986785730028E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999671172678802	WITHOUT_CLASSIFICATION	3.288273211974927E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999938270716427	WITHOUT_CLASSIFICATION	6.172928357343185E-6	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999966735989179	WITHOUT_CLASSIFICATION	3.326401082063014E-6	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999984668919523	WITHOUT_CLASSIFICATION	1.5331080476717787E-6	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999956093191659	WITHOUT_CLASSIFICATION	4.390680834195387E-6	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999998718645071	WITHOUT_CLASSIFICATION	1.2813549286070227E-7	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999999955809161	WITHOUT_CLASSIFICATION	4.419083905745483E-9	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999999988668299	WITHOUT_CLASSIFICATION	1.1331700179453934E-9	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999999273318959	WITHOUT_CLASSIFICATION	7.266810408803489E-8	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999999967943219	WITHOUT_CLASSIFICATION	3.2056781258895743E-9	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999968219764532	WITHOUT_CLASSIFICATION	3.17802354678383E-6	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999917750874827	WITHOUT_CLASSIFICATION	8.224912517297147E-6	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999997182816714	WITHOUT_CLASSIFICATION	2.8171832846014115E-7	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999998795176012	WITHOUT_CLASSIFICATION	1.2048239884170608E-7	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999837911298077	WITHOUT_CLASSIFICATION	1.620887019226232E-5	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999984974616287	WITHOUT_CLASSIFICATION	1.502538371250044E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999964607230295	WITHOUT_CLASSIFICATION	3.5392769705873333E-6	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.999993412380328	WITHOUT_CLASSIFICATION	6.587619671982008E-6	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.999749519388157	WITHOUT_CLASSIFICATION	2.504806118430452E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999885161458124	WITHOUT_CLASSIFICATION	1.148385418750386E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999997275201834	WITHOUT_CLASSIFICATION	2.7247981669095266E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999903147171	WITHOUT_CLASSIFICATION	9.685282899772867E-8	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999996526195922	WITHOUT_CLASSIFICATION	3.4738040787249155E-7	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999998726205247	WITHOUT_CLASSIFICATION	1.2737947537991092E-7	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999999811172251	WITHOUT_CLASSIFICATION	1.8882774916145282E-8	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999998512775784	WITHOUT_CLASSIFICATION	1.4872242150237926E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9985410710241488	WITHOUT_CLASSIFICATION	0.0014589289758512544	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999208567115	WITHOUT_CLASSIFICATION	7.91432885183065E-8	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999993203390062	WITHOUT_CLASSIFICATION	6.796609939462508E-7	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999998512775784	WITHOUT_CLASSIFICATION	1.4872242150237926E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999717432377198	WITHOUT_CLASSIFICATION	2.8256762280202968E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999989071259515	WITHOUT_CLASSIFICATION	1.0928740485248255E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999997946572541	WITHOUT_CLASSIFICATION	2.0534274581849012E-7	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999740969025528	WITHOUT_CLASSIFICATION	2.5903097447178665E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999986801932821	WITHOUT_CLASSIFICATION	1.3198067178368916E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9985410710241488	WITHOUT_CLASSIFICATION	0.0014589289758512544	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999993203390062	WITHOUT_CLASSIFICATION	6.796609939462508E-7	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.999998700467254	WITHOUT_CLASSIFICATION	1.2995327459988222E-6	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999176510006	WITHOUT_CLASSIFICATION	8.23489993307608E-8	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999986009901654	WITHOUT_CLASSIFICATION	1.3990098345788193E-6	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999999841020848	WITHOUT_CLASSIFICATION	1.589791514366597E-8	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998563614864127	WITHOUT_CLASSIFICATION	1.4363851358739247E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999912554650287	WITHOUT_CLASSIFICATION	8.744534971390595E-6	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9988744173299883	WITHOUT_CLASSIFICATION	0.0011255826700116915	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999998757129721	WITHOUT_CLASSIFICATION	1.2428702792631062E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979052198307	WITHOUT_CLASSIFICATION	2.0947801692968522E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979052198307	WITHOUT_CLASSIFICATION	2.0947801692968522E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999998928538025	WITHOUT_CLASSIFICATION	1.0714619738459395E-7	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999873713414489	WITHOUT_CLASSIFICATION	1.2628658551085641E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999998196186355	WITHOUT_CLASSIFICATION	1.803813645130816E-7	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999976537688934	WITHOUT_CLASSIFICATION	2.3462311066731625E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821717	WITHOUT_CLASSIFICATION	2.2717828323686785E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628456398	WITHOUT_CLASSIFICATION	1.371543601504139E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366022518	WITHOUT_CLASSIFICATION	4.633977481386441E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366022518	WITHOUT_CLASSIFICATION	4.633977481386441E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998303365498	WITHOUT_CLASSIFICATION	1.696634501017194E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998201479904	WITHOUT_CLASSIFICATION	1.7985200957516774E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998201479904	WITHOUT_CLASSIFICATION	1.7985200957516774E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999986042786788	WITHOUT_CLASSIFICATION	1.3957213212486414E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998915573206	WITHOUT_CLASSIFICATION	1.0844267932072756E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998915573206	WITHOUT_CLASSIFICATION	1.0844267932072756E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999999279906375	WITHOUT_CLASSIFICATION	7.200936247693258E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999993823963125	WITHOUT_CLASSIFICATION	6.176036874288148E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950315	WITHOUT_CLASSIFICATION	2.60496841343918E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912323	WITHOUT_CLASSIFICATION	6.709087675935197E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999997884921682	WITHOUT_CLASSIFICATION	2.1150783180706203E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570522356	WITHOUT_CLASSIFICATION	3.429477643526695E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999994618754768	WITHOUT_CLASSIFICATION	5.381245230865651E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879518	WITHOUT_CLASSIFICATION	3.5212048276077426E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.999999880850659	WITHOUT_CLASSIFICATION	1.1914934097777581E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999992808112556	WITHOUT_CLASSIFICATION	7.19188744546402E-7	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999980514213405	WITHOUT_CLASSIFICATION	1.9485786596190558E-6	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9999009189129848	WITHOUT_CLASSIFICATION	9.908108701522495E-5	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999937607417297	WITHOUT_CLASSIFICATION	6.239258270299553E-6	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999963567380689	WITHOUT_CLASSIFICATION	3.6432619311223196E-6	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.999980763543176	WITHOUT_CLASSIFICATION	1.9236456823991968E-5	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999999878209351	WITHOUT_CLASSIFICATION	1.2179064772664986E-8	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999999995555161	WITHOUT_CLASSIFICATION	4.44483847500666E-10	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999999999133313	WITHOUT_CLASSIFICATION	8.666863184126769E-11	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999996314847646	WITHOUT_CLASSIFICATION	3.6851523539083964E-6	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9999942618159683	WITHOUT_CLASSIFICATION	5.738184031677206E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999997581564767	WITHOUT_CLASSIFICATION	2.418435232867771E-7	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.999995086316602	WITHOUT_CLASSIFICATION	4.913683397957743E-6	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9999927951412705	WITHOUT_CLASSIFICATION	7.204858729532748E-6	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999999768999406	WITHOUT_CLASSIFICATION	2.3100059393926062E-7	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9999790452288002	WITHOUT_CLASSIFICATION	2.0954771199793546E-5	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999925836263778	WITHOUT_CLASSIFICATION	7.416373622269953E-6	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.999986466304991	WITHOUT_CLASSIFICATION	1.3533695009106326E-5	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9999953543736407	WITHOUT_CLASSIFICATION	4.645626359288763E-6	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999946117739803	WITHOUT_CLASSIFICATION	5.388226019770596E-6	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999954874508676	WITHOUT_CLASSIFICATION	4.512549132315881E-6	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999999533723531	WITHOUT_CLASSIFICATION	4.6627646899099347E-8	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9999793864246065	WITHOUT_CLASSIFICATION	2.0613575393585907E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9999438920268418	WITHOUT_CLASSIFICATION	5.6107973158205E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999993823963125	WITHOUT_CLASSIFICATION	6.176036874288148E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950315	WITHOUT_CLASSIFICATION	2.60496841343918E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912323	WITHOUT_CLASSIFICATION	6.709087675935197E-7	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570522356	WITHOUT_CLASSIFICATION	3.429477643526695E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999979182944523	WITHOUT_CLASSIFICATION	2.081705547678708E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879518	WITHOUT_CLASSIFICATION	3.5212048276077426E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.999999880850659	WITHOUT_CLASSIFICATION	1.1914934097777581E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999992808112556	WITHOUT_CLASSIFICATION	7.19188744546402E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999959047792689	WITHOUT_CLASSIFICATION	4.095220731074588E-6	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999456474915065	WITHOUT_CLASSIFICATION	5.435250849364217E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999922028906096	WITHOUT_CLASSIFICATION	7.797109390356978E-6	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9998273101564216	WITHOUT_CLASSIFICATION	1.7268984357838088E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999263369590439	WITHOUT_CLASSIFICATION	7.366304095611975E-5	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9999982755206188	WITHOUT_CLASSIFICATION	1.7244793812298136E-6	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.999999851251858	WITHOUT_CLASSIFICATION	1.4874814201100443E-7	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.999999851251858	WITHOUT_CLASSIFICATION	1.4874814201100443E-7	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999649084566731	WITHOUT_CLASSIFICATION	3.5091543326836396E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999860715218919	WITHOUT_CLASSIFICATION	1.3928478108141935E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999422475869079	WITHOUT_CLASSIFICATION	5.7752413092209235E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999998341262424	WITHOUT_CLASSIFICATION	1.6587375765276796E-7	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999998341262424	WITHOUT_CLASSIFICATION	1.6587375765276796E-7	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999982582006011	WITHOUT_CLASSIFICATION	1.7417993988527336E-6	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999999070472042	WITHOUT_CLASSIFICATION	9.295279582078395E-8	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999999181658384	WITHOUT_CLASSIFICATION	8.183416160371809E-8	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999999818727711	WITHOUT_CLASSIFICATION	1.8127228959199754E-8	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999999991221451	WITHOUT_CLASSIFICATION	8.778549720937143E-10	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999922097499823	WITHOUT_CLASSIFICATION	7.790250017713287E-6	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999864723795668	WITHOUT_CLASSIFICATION	1.3527620433246834E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999943868185506	WITHOUT_CLASSIFICATION	5.613181449437192E-6	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999630773353948	WITHOUT_CLASSIFICATION	3.692266460520406E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999969699783776	WITHOUT_CLASSIFICATION	3.0300216224727647E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999935653902723	WITHOUT_CLASSIFICATION	6.4346097277475544E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999935653902723	WITHOUT_CLASSIFICATION	6.4346097277475544E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9815349436939196	WITHOUT_CLASSIFICATION	0.01846505630608042	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999569432016553	WITHOUT_CLASSIFICATION	4.3056798344775165E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999569432016553	WITHOUT_CLASSIFICATION	4.3056798344775165E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999569432016553	WITHOUT_CLASSIFICATION	4.3056798344775165E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9995412018735406	WITHOUT_CLASSIFICATION	4.5879812645943343E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9995412018735406	WITHOUT_CLASSIFICATION	4.5879812645943343E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999995316319648	WITHOUT_CLASSIFICATION	4.6836803518701886E-7	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999995316319648	WITHOUT_CLASSIFICATION	4.6836803518701886E-7	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999995316319648	WITHOUT_CLASSIFICATION	4.6836803518701886E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.999998445480665	WITHOUT_CLASSIFICATION	1.5545193350599367E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.999998445480665	WITHOUT_CLASSIFICATION	1.5545193350599367E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.999998445480665	WITHOUT_CLASSIFICATION	1.5545193350599367E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999986938529	WITHOUT_CLASSIFICATION	1.3061471076321819E-9	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999986938529	WITHOUT_CLASSIFICATION	1.3061471076321819E-9	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.999999270019696	WITHOUT_CLASSIFICATION	7.299803040374841E-7	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.999999270019696	WITHOUT_CLASSIFICATION	7.299803040374841E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999997906179834	WITHOUT_CLASSIFICATION	2.0938201668825984E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999997906179834	WITHOUT_CLASSIFICATION	2.0938201668825984E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999886068819	WITHOUT_CLASSIFICATION	1.1393118190470733E-8	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999886068819	WITHOUT_CLASSIFICATION	1.1393118190470733E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999312723487	WITHOUT_CLASSIFICATION	6.8727651321589E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999312723487	WITHOUT_CLASSIFICATION	6.8727651321589E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999868235072887	WITHOUT_CLASSIFICATION	1.317649271119671E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999868235072887	WITHOUT_CLASSIFICATION	1.317649271119671E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999994460773332	WITHOUT_CLASSIFICATION	5.53922666848147E-7	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999994460773332	WITHOUT_CLASSIFICATION	5.53922666848147E-7	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999986938529	WITHOUT_CLASSIFICATION	1.3061471076321819E-9	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.999999270019696	WITHOUT_CLASSIFICATION	7.299803040374841E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999997906179834	WITHOUT_CLASSIFICATION	2.0938201668825984E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999312723487	WITHOUT_CLASSIFICATION	6.8727651321589E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999868235072887	WITHOUT_CLASSIFICATION	1.317649271119671E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999994460773332	WITHOUT_CLASSIFICATION	5.53922666848147E-7	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999984923740552	WITHOUT_CLASSIFICATION	1.5076259446831448E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999990464323595	WITHOUT_CLASSIFICATION	9.535676405657557E-7	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999977679276421	WITHOUT_CLASSIFICATION	2.2320723578497987E-6	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9992023182162398	WITHOUT_CLASSIFICATION	7.976817837600911E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999981482556778	WITHOUT_CLASSIFICATION	1.8517443221120286E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999990308393265	WITHOUT_CLASSIFICATION	9.691606734611412E-7	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999997510785764	WITHOUT_CLASSIFICATION	2.489214236053322E-7	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999995329055952	WITHOUT_CLASSIFICATION	4.670944049123398E-7	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999928627893381	WITHOUT_CLASSIFICATION	7.137210662034539E-6	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.999999937244794	WITHOUT_CLASSIFICATION	6.275520597340694E-8	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.999999802974994	WITHOUT_CLASSIFICATION	1.970250060157962E-7	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999999515533604	WITHOUT_CLASSIFICATION	4.844663951452807E-8	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999995854976761	WITHOUT_CLASSIFICATION	4.145023239671594E-7	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999999629197774	WITHOUT_CLASSIFICATION	3.708022261766681E-8	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999997134622441	WITHOUT_CLASSIFICATION	2.8653775584996334E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999990351327099	WITHOUT_CLASSIFICATION	9.648672900664142E-7	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999972843018643	WITHOUT_CLASSIFICATION	2.715698135724644E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999962987343991	WITHOUT_CLASSIFICATION	3.701265600744069E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999995089091597	WITHOUT_CLASSIFICATION	4.910908402683002E-7	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999901283799654	WITHOUT_CLASSIFICATION	9.871620034669298E-6	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999999828984893	WITHOUT_CLASSIFICATION	1.71015106258075E-8	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999986815543553	WITHOUT_CLASSIFICATION	1.318445644608943E-6	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.999999939646523	WITHOUT_CLASSIFICATION	6.035347691736411E-8	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999993724582695	WITHOUT_CLASSIFICATION	6.275417304739017E-7	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999927722812494	WITHOUT_CLASSIFICATION	7.227718750619808E-6	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.999991926737834	WITHOUT_CLASSIFICATION	8.073262166008877E-6	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.999992871332266	WITHOUT_CLASSIFICATION	7.1286677339452504E-6	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999998918815465	WITHOUT_CLASSIFICATION	1.081184535203383E-7	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999973116069406	WITHOUT_CLASSIFICATION	2.688393059356994E-6	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999988510052679	WITHOUT_CLASSIFICATION	1.148994732115138E-6	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999995905863868	WITHOUT_CLASSIFICATION	4.0941361323618734E-7	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999857027530922	WITHOUT_CLASSIFICATION	1.4297246907774022E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999986861835487	WITHOUT_CLASSIFICATION	1.3138164513090083E-6	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999986861835487	WITHOUT_CLASSIFICATION	1.3138164513090083E-6	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.999999743503304	WITHOUT_CLASSIFICATION	2.5649669602042655E-7	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999990172982626	WITHOUT_CLASSIFICATION	9.82701737419724E-7	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999921751324641	WITHOUT_CLASSIFICATION	7.824867535907373E-6	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999990980030282	WITHOUT_CLASSIFICATION	9.019969718233947E-7	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999959350124	WITHOUT_CLASSIFICATION	4.064987619132931E-9	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999999481136675	WITHOUT_CLASSIFICATION	5.1886332445999764E-8	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999985491073159	WITHOUT_CLASSIFICATION	1.4508926840719458E-6	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.999945984289697	WITHOUT_CLASSIFICATION	5.4015710303027364E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999995202483862	WITHOUT_CLASSIFICATION	4.797516137541584E-7	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999926897007989	WITHOUT_CLASSIFICATION	7.3102992011542245E-6	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.999997437043899	WITHOUT_CLASSIFICATION	2.562956100963356E-6	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999996143116214	WITHOUT_CLASSIFICATION	3.856883785177615E-7	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985581837969	WITHOUT_CLASSIFICATION	1.4418162030705347E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985581837969	WITHOUT_CLASSIFICATION	1.4418162030705347E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999972311623532	WITHOUT_CLASSIFICATION	2.768837646696478E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999972311623532	WITHOUT_CLASSIFICATION	2.768837646696478E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999972311623532	WITHOUT_CLASSIFICATION	2.768837646696478E-6	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999710958169711	WITHOUT_CLASSIFICATION	2.8904183028939013E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999958853541732	WITHOUT_CLASSIFICATION	4.114645826813175E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999986399633405	WITHOUT_CLASSIFICATION	1.3600366594638683E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999986399633405	WITHOUT_CLASSIFICATION	1.3600366594638683E-6	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999994999023875	WITHOUT_CLASSIFICATION	5.000976125872398E-7	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999090772517834	WITHOUT_CLASSIFICATION	9.092274821670655E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999998070143827	WITHOUT_CLASSIFICATION	1.9298561721204503E-7	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999842278658763	WITHOUT_CLASSIFICATION	1.5772134123733273E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999998786166768	WITHOUT_CLASSIFICATION	1.2138332310613548E-7	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999974080112757	WITHOUT_CLASSIFICATION	2.591988724206666E-6	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999945021015383	WITHOUT_CLASSIFICATION	5.4978984617355055E-6	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999999830025362	WITHOUT_CLASSIFICATION	1.699746382782314E-8	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999998209992808	WITHOUT_CLASSIFICATION	1.7900071937704561E-7	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999255617831536	WITHOUT_CLASSIFICATION	7.443821684645104E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999998373757341	WITHOUT_CLASSIFICATION	1.626242659069893E-7	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.999998861825021	WITHOUT_CLASSIFICATION	1.1381749790642315E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999999638568239	WITHOUT_CLASSIFICATION	3.614317607130497E-8	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999991626864666	WITHOUT_CLASSIFICATION	8.373135334985123E-7	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999963057125939	WITHOUT_CLASSIFICATION	3.6942874061123053E-6	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999988683785634	WITHOUT_CLASSIFICATION	1.1316214365494497E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999999831842987	WITHOUT_CLASSIFICATION	1.6815701227279342E-8	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.999997915069192	WITHOUT_CLASSIFICATION	2.0849308080888187E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999974251569942	WITHOUT_CLASSIFICATION	2.5748430057286837E-6	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999667117277036	WITHOUT_CLASSIFICATION	3.328827229645213E-5	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999940193583234	WITHOUT_CLASSIFICATION	5.980641676535593E-6	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999993678500265	WITHOUT_CLASSIFICATION	6.321499735445765E-7	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9941460453021391	WITHOUT_CLASSIFICATION	0.00585395469786087	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999998958994569	WITHOUT_CLASSIFICATION	1.041005431553315E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999998958994569	WITHOUT_CLASSIFICATION	1.041005431553315E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999998958994569	WITHOUT_CLASSIFICATION	1.041005431553315E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999998239406424	WITHOUT_CLASSIFICATION	1.7605935762127868E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999998239406424	WITHOUT_CLASSIFICATION	1.7605935762127868E-7	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999796175369684	WITHOUT_CLASSIFICATION	2.0382463031489777E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9998256458269916	WITHOUT_CLASSIFICATION	1.74354173008347E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9998256458269916	WITHOUT_CLASSIFICATION	1.74354173008347E-4	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999981576609664	WITHOUT_CLASSIFICATION	1.8423390336035236E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999981913701687	WITHOUT_CLASSIFICATION	1.808629831337236E-6	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999796175369684	WITHOUT_CLASSIFICATION	2.0382463031489777E-5	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999999863857961	WITHOUT_CLASSIFICATION	1.361420394877976E-8	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999796175369684	WITHOUT_CLASSIFICATION	2.0382463031489777E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999981431672053	WITHOUT_CLASSIFICATION	1.8568327947317993E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999981431672053	WITHOUT_CLASSIFICATION	1.8568327947317993E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985581837969	WITHOUT_CLASSIFICATION	1.4418162030705347E-6	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9998562226698098	WITHOUT_CLASSIFICATION	1.4377733019020758E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9996117683357586	WITHOUT_CLASSIFICATION	3.8823166424146874E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9993274142667313	WITHOUT_CLASSIFICATION	6.725857332686809E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9994017289414654	WITHOUT_CLASSIFICATION	5.982710585345515E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9997159042067598	WITHOUT_CLASSIFICATION	2.8409579324018924E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9988771072427289	WITHOUT_CLASSIFICATION	0.0011228927572710168	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9991139617955931	WITHOUT_CLASSIFICATION	8.86038204406848E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9993774925671796	WITHOUT_CLASSIFICATION	6.225074328205367E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9993769591079621	WITHOUT_CLASSIFICATION	6.230408920380373E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9994924214169931	WITHOUT_CLASSIFICATION	5.075785830068361E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9996159954218696	WITHOUT_CLASSIFICATION	3.8400457813038386E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9994503915834151	WITHOUT_CLASSIFICATION	5.49608416584932E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9994887577184393	WITHOUT_CLASSIFICATION	5.112422815608128E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9993399122353802	WITHOUT_CLASSIFICATION	6.600877646197515E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.999076978917819	WITHOUT_CLASSIFICATION	9.230210821810366E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9995153076370681	WITHOUT_CLASSIFICATION	4.8469236293182766E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9994278126297919	WITHOUT_CLASSIFICATION	5.72187370208189E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9988407030876159	WITHOUT_CLASSIFICATION	0.001159296912384178	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9992595982455006	WITHOUT_CLASSIFICATION	7.404017544993328E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.999599257573493	WITHOUT_CLASSIFICATION	4.0074242650700766E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9997462051208513	WITHOUT_CLASSIFICATION	2.537948791486387E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9994975642235157	WITHOUT_CLASSIFICATION	5.024357764844708E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9995265362904002	WITHOUT_CLASSIFICATION	4.734637095997116E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9996949779941671	WITHOUT_CLASSIFICATION	3.050220058328792E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.999472556837368	WITHOUT_CLASSIFICATION	5.274431626320045E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9993143841314283	WITHOUT_CLASSIFICATION	6.856158685716363E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9996838650626019	WITHOUT_CLASSIFICATION	3.161349373980946E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.998828664798041	WITHOUT_CLASSIFICATION	0.0011713352019589655	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9995954249529317	WITHOUT_CLASSIFICATION	4.045750470682485E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9994574075166109	WITHOUT_CLASSIFICATION	5.42592483389046E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9996423804613555	WITHOUT_CLASSIFICATION	3.576195386445031E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9994876378309687	WITHOUT_CLASSIFICATION	5.12362169031287E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9994207493370122	WITHOUT_CLASSIFICATION	5.792506629878492E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9996200870414582	WITHOUT_CLASSIFICATION	3.7991295854172873E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9995326177087994	WITHOUT_CLASSIFICATION	4.673822912005224E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9992772560112404	WITHOUT_CLASSIFICATION	7.227439887595957E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9995058402592606	WITHOUT_CLASSIFICATION	4.941597407394916E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9991944189163852	WITHOUT_CLASSIFICATION	8.055810836149814E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9994731170841437	WITHOUT_CLASSIFICATION	5.268829158563055E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9995060036880962	WITHOUT_CLASSIFICATION	4.93996311903807E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9989419328453653	WITHOUT_CLASSIFICATION	0.0010580671546346907	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9993770630426212	WITHOUT_CLASSIFICATION	6.229369573787654E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9993516739111582	WITHOUT_CLASSIFICATION	6.483260888417907E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9993433881431698	WITHOUT_CLASSIFICATION	6.566118568302258E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9995474903500662	WITHOUT_CLASSIFICATION	4.5250964993378504E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9990958723168095	WITHOUT_CLASSIFICATION	9.041276831903795E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9991021061471748	WITHOUT_CLASSIFICATION	8.978938528253545E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9993046739123165	WITHOUT_CLASSIFICATION	6.953260876835254E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9983340761574765	WITHOUT_CLASSIFICATION	0.0016659238425235587	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9993182940651928	WITHOUT_CLASSIFICATION	6.817059348073513E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9996211644955549	WITHOUT_CLASSIFICATION	3.7883550444505637E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9992419935055229	WITHOUT_CLASSIFICATION	7.580064944770669E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9992536185646378	WITHOUT_CLASSIFICATION	7.463814353621112E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9995303982725007	WITHOUT_CLASSIFICATION	4.6960172749929273E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.999534436496542	WITHOUT_CLASSIFICATION	4.6556350345804793E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9994069059506183	WITHOUT_CLASSIFICATION	5.930940493817186E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.999745179977442	WITHOUT_CLASSIFICATION	2.548200225580413E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.999151946958165	WITHOUT_CLASSIFICATION	8.48053041835004E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.998769602636438	WITHOUT_CLASSIFICATION	0.001230397363561907	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.999490559201657	WITHOUT_CLASSIFICATION	5.094407983430585E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9979400566785986	WITHOUT_CLASSIFICATION	0.002059943321401368	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9995260103482398	WITHOUT_CLASSIFICATION	4.7398965176020783E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9996585274978689	WITHOUT_CLASSIFICATION	3.4147250213121535E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9993421959654819	WITHOUT_CLASSIFICATION	6.578040345180415E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.999540073012602	WITHOUT_CLASSIFICATION	4.599269873981102E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9989295216587967	WITHOUT_CLASSIFICATION	0.0010704783412033515	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9990302399670565	WITHOUT_CLASSIFICATION	9.697600329435717E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9995488801751333	WITHOUT_CLASSIFICATION	4.5111982486667105E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9997360183615461	WITHOUT_CLASSIFICATION	2.6398163845389966E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9995333185644087	WITHOUT_CLASSIFICATION	4.666814355912305E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9996546204373059	WITHOUT_CLASSIFICATION	3.4537956269409335E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9997336074899678	WITHOUT_CLASSIFICATION	2.663925100322624E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9993251787293878	WITHOUT_CLASSIFICATION	6.748212706123149E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9995925464095501	WITHOUT_CLASSIFICATION	4.0745359044990913E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.999581396292537	WITHOUT_CLASSIFICATION	4.1860370746308245E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9992864197772877	WITHOUT_CLASSIFICATION	7.135802227123311E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9994206770187894	WITHOUT_CLASSIFICATION	5.793229812104942E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9980535331558206	WITHOUT_CLASSIFICATION	0.0019464668441794234	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9992279989026861	WITHOUT_CLASSIFICATION	7.720010973139309E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9996989846623756	WITHOUT_CLASSIFICATION	3.0101533762434836E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.999981900431656	WITHOUT_CLASSIFICATION	1.8099568344073316E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.999997463927515	WITHOUT_CLASSIFICATION	2.5360724849952394E-6	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999998830012401	WITHOUT_CLASSIFICATION	1.1699876000256753E-7	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999998827336475	WITHOUT_CLASSIFICATION	1.1726635255820834E-7	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999999932751119	WITHOUT_CLASSIFICATION	6.724888166697067E-9	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999999400226741	WITHOUT_CLASSIFICATION	5.997732586667491E-8	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999969688423039	WITHOUT_CLASSIFICATION	3.031157696028093E-6	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999972880495032	WITHOUT_CLASSIFICATION	2.7119504967483397E-6	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999992624039148	WITHOUT_CLASSIFICATION	7.375960851619714E-7	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999970899237929	WITHOUT_CLASSIFICATION	2.9100762072260486E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999999481136675	WITHOUT_CLASSIFICATION	5.1886332445999764E-8	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999710958169711	WITHOUT_CLASSIFICATION	2.8904183028939013E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999958853541732	WITHOUT_CLASSIFICATION	4.114645826813175E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999986399633405	WITHOUT_CLASSIFICATION	1.3600366594638683E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.999997915069192	WITHOUT_CLASSIFICATION	2.0849308080888187E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999974251569942	WITHOUT_CLASSIFICATION	2.5748430057286837E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999990185390359	WITHOUT_CLASSIFICATION	9.814609640086447E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999998239406424	WITHOUT_CLASSIFICATION	1.7605935762127868E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985581837969	WITHOUT_CLASSIFICATION	1.4418162030705347E-6	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999932800236563	WITHOUT_CLASSIFICATION	6.719976343798522E-6	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.999997997428161	WITHOUT_CLASSIFICATION	2.0025718389403567E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999994256052117	WITHOUT_CLASSIFICATION	5.743947882052845E-7	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999984224293971	WITHOUT_CLASSIFICATION	1.5775706029423157E-6	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999776767752658	WITHOUT_CLASSIFICATION	2.232322473411698E-5	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999994367607715	WITHOUT_CLASSIFICATION	5.632392284506727E-7	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.999999950535601	WITHOUT_CLASSIFICATION	4.946439890437918E-8	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999999896499463	WITHOUT_CLASSIFICATION	1.03500536579674E-8	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999962987343991	WITHOUT_CLASSIFICATION	3.701265600744069E-6	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999984537324575	WITHOUT_CLASSIFICATION	1.5462675424627313E-6	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999985723183841	WITHOUT_CLASSIFICATION	1.4276816158973779E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999999740864958	WITHOUT_CLASSIFICATION	2.591350414795722E-8	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999863798124037	WITHOUT_CLASSIFICATION	1.3620187596340592E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.999997698036992	WITHOUT_CLASSIFICATION	2.301963007977474E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999984561979189	WITHOUT_CLASSIFICATION	1.5438020810769563E-6	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999975549896652	WITHOUT_CLASSIFICATION	2.4450103347584357E-6	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999997538343431	WITHOUT_CLASSIFICATION	2.461656569044347E-7	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999999702506095	WITHOUT_CLASSIFICATION	2.9749390558041044E-8	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999934591260521	WITHOUT_CLASSIFICATION	6.540873947942075E-6	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999973089629292	WITHOUT_CLASSIFICATION	2.6910370707162114E-6	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999994440324669	WITHOUT_CLASSIFICATION	5.559675330735124E-7	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999973196019095	WITHOUT_CLASSIFICATION	2.680398090576177E-6	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999999201400315	WITHOUT_CLASSIFICATION	7.985996854987201E-8	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999998760192171	WITHOUT_CLASSIFICATION	1.2398078284153968E-7	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999926669708946	WITHOUT_CLASSIFICATION	7.333029105500949E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999986343769978	WITHOUT_CLASSIFICATION	1.365623002220581E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999259354521262	WITHOUT_CLASSIFICATION	7.406454787389308E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999754102332	WITHOUT_CLASSIFICATION	2.4589766711921844E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999924117934853	WITHOUT_CLASSIFICATION	7.58820651473738E-6	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.999999854041711	WITHOUT_CLASSIFICATION	1.4595828905391138E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999995657114409	WITHOUT_CLASSIFICATION	4.3428855918675194E-7	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999876238663	WITHOUT_CLASSIFICATION	1.237613372206384E-8	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999876238663	WITHOUT_CLASSIFICATION	1.237613372206384E-8	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999861799915	WITHOUT_CLASSIFICATION	1.3820008564179251E-8	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999988540735856	WITHOUT_CLASSIFICATION	1.1459264144273019E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999987864930359	WITHOUT_CLASSIFICATION	1.213506964145094E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9988339722775771	WITHOUT_CLASSIFICATION	0.001166027722422919	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999943760122981	WITHOUT_CLASSIFICATION	5.6239877018059595E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999397008897	WITHOUT_CLASSIFICATION	6.029911023995746E-8	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9997488800514166	WITHOUT_CLASSIFICATION	2.511199485833889E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999986909628508	WITHOUT_CLASSIFICATION	1.3090371491950756E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999641710171805	WITHOUT_CLASSIFICATION	3.582898281954426E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999993728265595	WITHOUT_CLASSIFICATION	6.271734404819901E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999994544158133	WITHOUT_CLASSIFICATION	5.455841868286877E-7	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999997088832361	WITHOUT_CLASSIFICATION	2.911167638626331E-7	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999963957482789	WITHOUT_CLASSIFICATION	3.604251721069436E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.999999685964401	WITHOUT_CLASSIFICATION	3.140355989374692E-7	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999997236443715	WITHOUT_CLASSIFICATION	2.7635562851858543E-7	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.999999096997845	WITHOUT_CLASSIFICATION	9.030021550090213E-7	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999992795030711	WITHOUT_CLASSIFICATION	7.20496928769442E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.999987572173306	WITHOUT_CLASSIFICATION	1.2427826693977052E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999979440693333	WITHOUT_CLASSIFICATION	2.055930666714113E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999876712136	WITHOUT_CLASSIFICATION	1.2328786471348853E-8	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999987626807317	WITHOUT_CLASSIFICATION	1.237319268326863E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999958490398067	WITHOUT_CLASSIFICATION	4.150960193336693E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999760231062	WITHOUT_CLASSIFICATION	2.3976893868713076E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999626452504	WITHOUT_CLASSIFICATION	3.7354749751111345E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999998811961894	WITHOUT_CLASSIFICATION	1.1880381051646742E-7	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999998577033479	WITHOUT_CLASSIFICATION	1.4229665219958458E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999974690564	WITHOUT_CLASSIFICATION	2.5309435592143018E-9	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999965052824	WITHOUT_CLASSIFICATION	3.4947177384013163E-9	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999986790459	WITHOUT_CLASSIFICATION	1.320954104208249E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999944521919	WITHOUT_CLASSIFICATION	5.547808088154642E-9	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999988149123943	WITHOUT_CLASSIFICATION	1.185087605768018E-6	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999920701463	WITHOUT_CLASSIFICATION	7.929853739698783E-9	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999751014418	WITHOUT_CLASSIFICATION	2.489855827025251E-8	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.999999997069537	WITHOUT_CLASSIFICATION	2.930462975491819E-9	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999934934596303	WITHOUT_CLASSIFICATION	6.506540369697756E-6	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.999999692647339	WITHOUT_CLASSIFICATION	3.073526609193581E-7	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999969875888002	WITHOUT_CLASSIFICATION	3.012411199800381E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999998211856429	WITHOUT_CLASSIFICATION	1.7881435702493946E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999987654282178	WITHOUT_CLASSIFICATION	1.2345717822523634E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999977693792	WITHOUT_CLASSIFICATION	2.2306208724785175E-9	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999954776553991	WITHOUT_CLASSIFICATION	4.522344600938156E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999964852291873	WITHOUT_CLASSIFICATION	3.5147708127603847E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999974793129345	WITHOUT_CLASSIFICATION	2.5206870655330364E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.999953499205717	WITHOUT_CLASSIFICATION	4.650079428296843E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999842855012127	WITHOUT_CLASSIFICATION	1.57144987873765E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.999535041696804	WITHOUT_CLASSIFICATION	4.649583031960846E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999995896759237	WITHOUT_CLASSIFICATION	4.103240763606527E-7	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999999834921174	WITHOUT_CLASSIFICATION	1.650788265282526E-8	DEFECT
// port	WITHOUT_CLASSIFICATION	0.99999530886944	WITHOUT_CLASSIFICATION	4.691130560062116E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999999949977739	WITHOUT_CLASSIFICATION	5.002226107334173E-8	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999996260228105	WITHOUT_CLASSIFICATION	3.7397718953673136E-7	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999684092249	WITHOUT_CLASSIFICATION	3.1590775209896636E-8	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999884622082	WITHOUT_CLASSIFICATION	1.153779186157261E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999901484806	WITHOUT_CLASSIFICATION	9.851519403364248E-9	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999984471024	WITHOUT_CLASSIFICATION	1.5528975350404983E-9	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999999183564602	WITHOUT_CLASSIFICATION	8.16435398129344E-8	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9996651020561075	WITHOUT_CLASSIFICATION	3.348979438925271E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999867175069	WITHOUT_CLASSIFICATION	1.3282493099449236E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.999997297456887	WITHOUT_CLASSIFICATION	2.7025431129533467E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999601645803	WITHOUT_CLASSIFICATION	3.9835419734526455E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999982952646841	WITHOUT_CLASSIFICATION	1.7047353158402343E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999998236470937	WITHOUT_CLASSIFICATION	1.7635290624749834E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999999799732964	WITHOUT_CLASSIFICATION	2.0026703580930624E-8	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999984766244098	WITHOUT_CLASSIFICATION	1.5233755903263295E-6	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.999999931134136	WITHOUT_CLASSIFICATION	6.886586402181107E-8	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999998810306185	WITHOUT_CLASSIFICATION	1.1896938154026812E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999868733572	WITHOUT_CLASSIFICATION	1.3126642724356602E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.999999701180648	WITHOUT_CLASSIFICATION	2.988193520176288E-7	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.999998438958303	WITHOUT_CLASSIFICATION	1.5610416969931078E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.999999943794282	WITHOUT_CLASSIFICATION	5.620571795065304E-8	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999969243946	WITHOUT_CLASSIFICATION	3.0756054410544194E-9	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999965097930041	WITHOUT_CLASSIFICATION	3.4902069958108648E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999913158075836	WITHOUT_CLASSIFICATION	8.684192416379791E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999997981584502	WITHOUT_CLASSIFICATION	2.0184154976782488E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999971831165495	WITHOUT_CLASSIFICATION	2.8168834504943627E-6	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9995696528167339	WITHOUT_CLASSIFICATION	4.303471832661398E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999996019960972	WITHOUT_CLASSIFICATION	3.980039029071196E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.999999768376487	WITHOUT_CLASSIFICATION	2.3162351313535538E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999454033284528	WITHOUT_CLASSIFICATION	5.4596671547158265E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999024466392	WITHOUT_CLASSIFICATION	9.755336086647872E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999999812656297	WITHOUT_CLASSIFICATION	1.8734370266147648E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999997068084511	WITHOUT_CLASSIFICATION	2.9319154898606806E-7	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999971842252883	WITHOUT_CLASSIFICATION	2.8157747117883082E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999974189824135	WITHOUT_CLASSIFICATION	2.5810175865802718E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999796857978	WITHOUT_CLASSIFICATION	2.0314202220908208E-8	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999750394315856	WITHOUT_CLASSIFICATION	2.4960568414377085E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999820709249219	WITHOUT_CLASSIFICATION	1.792907507814508E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999337966878737	WITHOUT_CLASSIFICATION	6.620331212626585E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999923116586	WITHOUT_CLASSIFICATION	7.68834137821312E-9	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992104635729	WITHOUT_CLASSIFICATION	7.895364272167003E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999959379337	WITHOUT_CLASSIFICATION	4.062066347173904E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999999100941248	WITHOUT_CLASSIFICATION	8.99058751972678E-8	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999987182885216	WITHOUT_CLASSIFICATION	1.2817114785070336E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999998660541375	WITHOUT_CLASSIFICATION	1.339458625516055E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999798846684	WITHOUT_CLASSIFICATION	2.011533170641322E-8	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.999999377070992	WITHOUT_CLASSIFICATION	6.229290079202573E-7	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.999999524803312	WITHOUT_CLASSIFICATION	4.7519668799515754E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999998783633838	WITHOUT_CLASSIFICATION	1.2163661628677653E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999998431686453	WITHOUT_CLASSIFICATION	1.5683135470158156E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997872777322	WITHOUT_CLASSIFICATION	2.1272226768426178E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9998174025277637	WITHOUT_CLASSIFICATION	1.8259747223623165E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999939573896898	WITHOUT_CLASSIFICATION	6.042610310137228E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.999922171774094	WITHOUT_CLASSIFICATION	7.782822590597096E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999921798736116	WITHOUT_CLASSIFICATION	7.820126388367514E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999639927965431	WITHOUT_CLASSIFICATION	3.6007203456832066E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999804898073592	WITHOUT_CLASSIFICATION	1.951019264083315E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923825224805	WITHOUT_CLASSIFICATION	7.61747751956921E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999537800547998	WITHOUT_CLASSIFICATION	4.621994520024451E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856287347958	WITHOUT_CLASSIFICATION	1.4371265204152884E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999790533396239	WITHOUT_CLASSIFICATION	2.0946660376074278E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999895449524827	WITHOUT_CLASSIFICATION	1.0455047517233728E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999977371877389	WITHOUT_CLASSIFICATION	2.2628122611023366E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999471341909293	WITHOUT_CLASSIFICATION	5.286580907078672E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999804746744209	WITHOUT_CLASSIFICATION	1.9525325579167135E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999774226670483	WITHOUT_CLASSIFICATION	2.2577332951739676E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999887713501086	WITHOUT_CLASSIFICATION	1.1228649891406554E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999587647762451	WITHOUT_CLASSIFICATION	4.123522375485366E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999914058424396	WITHOUT_CLASSIFICATION	8.594157560343086E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250953934	WITHOUT_CLASSIFICATION	7.474904606678735E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999865342707978	WITHOUT_CLASSIFICATION	1.346572920219243E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999532330768106	WITHOUT_CLASSIFICATION	4.676692318947009E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999226638973071	WITHOUT_CLASSIFICATION	7.733610269294298E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999960011000958	WITHOUT_CLASSIFICATION	3.998899904197657E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999847030404271	WITHOUT_CLASSIFICATION	1.5296959572987442E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999898005050821	WITHOUT_CLASSIFICATION	1.0199494917883443E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999433957621955	WITHOUT_CLASSIFICATION	5.660423780448761E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999484745617838	WITHOUT_CLASSIFICATION	5.152543821618231E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999715410143244	WITHOUT_CLASSIFICATION	2.8458985675606183E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250953934	WITHOUT_CLASSIFICATION	7.474904606678735E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999715410143244	WITHOUT_CLASSIFICATION	2.8458985675606183E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999537780368566	WITHOUT_CLASSIFICATION	4.622196314343468E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999684615912271	WITHOUT_CLASSIFICATION	3.153840877290807E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999608302134102	WITHOUT_CLASSIFICATION	3.916978658968769E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999748212510446	WITHOUT_CLASSIFICATION	2.517874895535848E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999970249162707	WITHOUT_CLASSIFICATION	2.9750837292871522E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999931724011768	WITHOUT_CLASSIFICATION	6.827598823206604E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520023981	WITHOUT_CLASSIFICATION	1.3247997601941842E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520023981	WITHOUT_CLASSIFICATION	1.3247997601941842E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999653012532035	WITHOUT_CLASSIFICATION	3.4698746796409386E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999667102282611	WITHOUT_CLASSIFICATION	3.328977173893738E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999581762770784	WITHOUT_CLASSIFICATION	4.182372292158504E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986720781282	WITHOUT_CLASSIFICATION	1.3279218717889345E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999371235556546	WITHOUT_CLASSIFICATION	6.287644434547675E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999883035907275	WITHOUT_CLASSIFICATION	1.1696409272521936E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999773530115899	WITHOUT_CLASSIFICATION	2.26469884101885E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250953934	WITHOUT_CLASSIFICATION	7.474904606678735E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999661917411803	WITHOUT_CLASSIFICATION	3.380825881977835E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999958823301628	WITHOUT_CLASSIFICATION	4.11766983719474E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999572470060075	WITHOUT_CLASSIFICATION	4.275299399245186E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999751940333448	WITHOUT_CLASSIFICATION	2.480596665527249E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999714481577391	WITHOUT_CLASSIFICATION	2.8551842260931452E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999643688525442	WITHOUT_CLASSIFICATION	3.563114745575516E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999616514801638	WITHOUT_CLASSIFICATION	3.8348519836083934E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999397613000641	WITHOUT_CLASSIFICATION	6.02386999359638E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882602836475	WITHOUT_CLASSIFICATION	1.1739716352386713E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882602836475	WITHOUT_CLASSIFICATION	1.1739716352386713E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915448047356	WITHOUT_CLASSIFICATION	8.455195264367375E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915448047356	WITHOUT_CLASSIFICATION	8.455195264367375E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902024516005	WITHOUT_CLASSIFICATION	9.797548399425842E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999605003423139	WITHOUT_CLASSIFICATION	3.949965768610007E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250953934	WITHOUT_CLASSIFICATION	7.474904606678735E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999865342707978	WITHOUT_CLASSIFICATION	1.346572920219243E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520023981	WITHOUT_CLASSIFICATION	1.3247997601941842E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999616514801638	WITHOUT_CLASSIFICATION	3.8348519836083934E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882602836475	WITHOUT_CLASSIFICATION	1.1739716352386713E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915448047356	WITHOUT_CLASSIFICATION	8.455195264367375E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999605003423139	WITHOUT_CLASSIFICATION	3.949965768610007E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999735147718636	WITHOUT_CLASSIFICATION	2.6485228136368E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999558598050962	WITHOUT_CLASSIFICATION	4.4140194903943524E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999469861579586	WITHOUT_CLASSIFICATION	5.301384204137755E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999107892503337	WITHOUT_CLASSIFICATION	8.921074966631025E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998263183734943	WITHOUT_CLASSIFICATION	1.7368162650574105E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999723243645384	WITHOUT_CLASSIFICATION	2.7675635461537962E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999892836906651	WITHOUT_CLASSIFICATION	1.071630933490054E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520023981	WITHOUT_CLASSIFICATION	1.3247997601941842E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999977329659974	WITHOUT_CLASSIFICATION	2.2670340025971096E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999892836906651	WITHOUT_CLASSIFICATION	1.071630933490054E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999518030532785	WITHOUT_CLASSIFICATION	4.819694672162893E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998969591686817	WITHOUT_CLASSIFICATION	1.030408313182936E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999589194299916	WITHOUT_CLASSIFICATION	4.1080570008355484E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999664411755127	WITHOUT_CLASSIFICATION	3.355882448728104E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999552557740646	WITHOUT_CLASSIFICATION	4.4744225935401366E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999553871625962	WITHOUT_CLASSIFICATION	4.461283740365969E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999888075171478	WITHOUT_CLASSIFICATION	1.1192482852132601E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999963166974933	WITHOUT_CLASSIFICATION	3.683302506692446E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999602461090553	WITHOUT_CLASSIFICATION	3.975389094472161E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999950025040018	WITHOUT_CLASSIFICATION	4.99749599826375E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999716035572285	WITHOUT_CLASSIFICATION	2.8396442771514793E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999734350715342	WITHOUT_CLASSIFICATION	2.6564928465724227E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999776653050213	WITHOUT_CLASSIFICATION	2.233469497867023E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999896079107693	WITHOUT_CLASSIFICATION	1.0392089230773037E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986919982513	WITHOUT_CLASSIFICATION	1.3080017486903955E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731601645142	WITHOUT_CLASSIFICATION	2.6839835485850786E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999622786063423	WITHOUT_CLASSIFICATION	3.772139365773153E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999917496302304	WITHOUT_CLASSIFICATION	8.250369769672549E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999905037425689	WITHOUT_CLASSIFICATION	9.49625743107064E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999868143355162	WITHOUT_CLASSIFICATION	1.3185664483749064E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999876712136	WITHOUT_CLASSIFICATION	1.2328786471348853E-8	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999656461561889	WITHOUT_CLASSIFICATION	3.435384381118544E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998563614864127	WITHOUT_CLASSIFICATION	1.4363851358739247E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999814842853234	WITHOUT_CLASSIFICATION	1.8515714676687884E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999716035572285	WITHOUT_CLASSIFICATION	2.8396442771514793E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999751709139507	WITHOUT_CLASSIFICATION	2.4829086049219798E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998674256396568	WITHOUT_CLASSIFICATION	1.3257436034319107E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999429467094236	WITHOUT_CLASSIFICATION	5.70532905763514E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999518706187	WITHOUT_CLASSIFICATION	4.8129381156349086E-8	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999686231168	WITHOUT_CLASSIFICATION	3.1376883298726864E-8	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999999279840015	WITHOUT_CLASSIFICATION	7.201599854380276E-8	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999999744472197	WITHOUT_CLASSIFICATION	2.5552780334629346E-8	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.999999975469526	WITHOUT_CLASSIFICATION	2.4530473956085048E-8	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999928937994	WITHOUT_CLASSIFICATION	7.1062006778423935E-9	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.999999950941036	WITHOUT_CLASSIFICATION	4.9058964087556794E-8	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999947597582	WITHOUT_CLASSIFICATION	5.24024176667519E-9	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999999638230264	WITHOUT_CLASSIFICATION	3.6176973762511204E-8	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999999938066293	WITHOUT_CLASSIFICATION	6.193370695610686E-8	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998709169226	WITHOUT_CLASSIFICATION	1.2908307746174268E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999798846684	WITHOUT_CLASSIFICATION	2.011533170641322E-8	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998531723868	WITHOUT_CLASSIFICATION	1.4682761314482876E-7	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999703656403	WITHOUT_CLASSIFICATION	2.963435977018119E-8	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999972807555693	WITHOUT_CLASSIFICATION	2.719244430645544E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999988387124381	WITHOUT_CLASSIFICATION	1.1612875619763815E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.999999950870864	WITHOUT_CLASSIFICATION	4.91291358422035E-8	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999986447764242	WITHOUT_CLASSIFICATION	1.3552235758738517E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999995498913747	WITHOUT_CLASSIFICATION	4.501086253037632E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999999535349762	WITHOUT_CLASSIFICATION	4.646502381000169E-8	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999998375558493	WITHOUT_CLASSIFICATION	1.624441506388618E-7	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999259354521262	WITHOUT_CLASSIFICATION	7.406454787389308E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999754102332	WITHOUT_CLASSIFICATION	2.4589766711921844E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999924117934853	WITHOUT_CLASSIFICATION	7.58820651473738E-6	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.999999854041711	WITHOUT_CLASSIFICATION	1.4595828905391138E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999995657114409	WITHOUT_CLASSIFICATION	4.3428855918675194E-7	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999876238663	WITHOUT_CLASSIFICATION	1.237613372206384E-8	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999988540735856	WITHOUT_CLASSIFICATION	1.1459264144273019E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999987864930359	WITHOUT_CLASSIFICATION	1.213506964145094E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9988339722775771	WITHOUT_CLASSIFICATION	0.001166027722422919	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999943760122981	WITHOUT_CLASSIFICATION	5.6239877018059595E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999397008897	WITHOUT_CLASSIFICATION	6.029911023995746E-8	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999997387756435	WITHOUT_CLASSIFICATION	2.6122435651374357E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999992104635729	WITHOUT_CLASSIFICATION	7.895364272167003E-7	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999993728265595	WITHOUT_CLASSIFICATION	6.271734404819901E-7	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999997088832361	WITHOUT_CLASSIFICATION	2.911167638626331E-7	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999992795030711	WITHOUT_CLASSIFICATION	7.20496928769442E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.999987572173306	WITHOUT_CLASSIFICATION	1.2427826693977052E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999979440693333	WITHOUT_CLASSIFICATION	2.055930666714113E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999641710171805	WITHOUT_CLASSIFICATION	3.582898281954426E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999994544158133	WITHOUT_CLASSIFICATION	5.455841868286877E-7	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999876712136	WITHOUT_CLASSIFICATION	1.2328786471348853E-8	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.999999685964401	WITHOUT_CLASSIFICATION	3.140355989374692E-7	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999986343769978	WITHOUT_CLASSIFICATION	1.365623002220581E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999963957482789	WITHOUT_CLASSIFICATION	3.604251721069436E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999760231062	WITHOUT_CLASSIFICATION	2.3976893868713076E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999626452504	WITHOUT_CLASSIFICATION	3.7354749751111345E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999998811961894	WITHOUT_CLASSIFICATION	1.1880381051646742E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999798846684	WITHOUT_CLASSIFICATION	2.011533170641322E-8	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995513752955413	WITHOUT_CLASSIFICATION	4.486247044587512E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999998838646	WITHOUT_CLASSIFICATION	1.1613544817838367E-10	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999974690564	WITHOUT_CLASSIFICATION	2.5309435592143018E-9	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999986790459	WITHOUT_CLASSIFICATION	1.320954104208249E-9	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999976490084	WITHOUT_CLASSIFICATION	2.3509916010777502E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999944521919	WITHOUT_CLASSIFICATION	5.547808088154642E-9	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999988149123943	WITHOUT_CLASSIFICATION	1.185087605768018E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999751014418	WITHOUT_CLASSIFICATION	2.489855827025251E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999983624419891	WITHOUT_CLASSIFICATION	1.6375580108458663E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.999999997069537	WITHOUT_CLASSIFICATION	2.930462975491819E-9	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999934934596303	WITHOUT_CLASSIFICATION	6.506540369697756E-6	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.999999692647339	WITHOUT_CLASSIFICATION	3.073526609193581E-7	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999857689801728	WITHOUT_CLASSIFICATION	1.4231019827158492E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999969875888002	WITHOUT_CLASSIFICATION	3.012411199800381E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.999999951555913	WITHOUT_CLASSIFICATION	4.8444086957876375E-8	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999954776553991	WITHOUT_CLASSIFICATION	4.522344600938156E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999998211856429	WITHOUT_CLASSIFICATION	1.7881435702493946E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999987654282178	WITHOUT_CLASSIFICATION	1.2345717822523634E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999974793129345	WITHOUT_CLASSIFICATION	2.5206870655330364E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.999953499205717	WITHOUT_CLASSIFICATION	4.650079428296843E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999842855012127	WITHOUT_CLASSIFICATION	1.57144987873765E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999246747199303	WITHOUT_CLASSIFICATION	7.532528006974698E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.999535041696804	WITHOUT_CLASSIFICATION	4.649583031960846E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999995896759237	WITHOUT_CLASSIFICATION	4.103240763606527E-7	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999999834921174	WITHOUT_CLASSIFICATION	1.650788265282526E-8	DEFECT
// port	WITHOUT_CLASSIFICATION	0.99999530886944	WITHOUT_CLASSIFICATION	4.691130560062116E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999999949977739	WITHOUT_CLASSIFICATION	5.002226107334173E-8	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999996260228105	WITHOUT_CLASSIFICATION	3.7397718953673136E-7	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999684092249	WITHOUT_CLASSIFICATION	3.1590775209896636E-8	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999884622082	WITHOUT_CLASSIFICATION	1.153779186157261E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999901484806	WITHOUT_CLASSIFICATION	9.851519403364248E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999901484806	WITHOUT_CLASSIFICATION	9.851519403364248E-9	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999984471024	WITHOUT_CLASSIFICATION	1.5528975350404983E-9	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999999183564602	WITHOUT_CLASSIFICATION	8.16435398129344E-8	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9996651020561075	WITHOUT_CLASSIFICATION	3.348979438925271E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999867175069	WITHOUT_CLASSIFICATION	1.3282493099449236E-8	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999601645803	WITHOUT_CLASSIFICATION	3.9835419734526455E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999982952646841	WITHOUT_CLASSIFICATION	1.7047353158402343E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999998236470937	WITHOUT_CLASSIFICATION	1.7635290624749834E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999999799732964	WITHOUT_CLASSIFICATION	2.0026703580930624E-8	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.999999931134136	WITHOUT_CLASSIFICATION	6.886586402181107E-8	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999850582767	WITHOUT_CLASSIFICATION	1.4941723358492884E-8	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999998810306185	WITHOUT_CLASSIFICATION	1.1896938154026812E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999868733572	WITHOUT_CLASSIFICATION	1.3126642724356602E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.999999701180648	WITHOUT_CLASSIFICATION	2.988193520176288E-7	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.999998438958303	WITHOUT_CLASSIFICATION	1.5610416969931078E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.999999943794282	WITHOUT_CLASSIFICATION	5.620571795065304E-8	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999965097930041	WITHOUT_CLASSIFICATION	3.4902069958108648E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999913158075836	WITHOUT_CLASSIFICATION	8.684192416379791E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999997981584502	WITHOUT_CLASSIFICATION	2.0184154976782488E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999971831165495	WITHOUT_CLASSIFICATION	2.8168834504943627E-6	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9995696528167339	WITHOUT_CLASSIFICATION	4.303471832661398E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999996019960972	WITHOUT_CLASSIFICATION	3.980039029071196E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.999999768376487	WITHOUT_CLASSIFICATION	2.3162351313535538E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999454033284528	WITHOUT_CLASSIFICATION	5.4596671547158265E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999024466392	WITHOUT_CLASSIFICATION	9.755336086647872E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999999812656297	WITHOUT_CLASSIFICATION	1.8734370266147648E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999997068084511	WITHOUT_CLASSIFICATION	2.9319154898606806E-7	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999974189824135	WITHOUT_CLASSIFICATION	2.5810175865802718E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999750394315856	WITHOUT_CLASSIFICATION	2.4960568414377085E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999820709249219	WITHOUT_CLASSIFICATION	1.792907507814508E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999337966878737	WITHOUT_CLASSIFICATION	6.620331212626585E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999923116586	WITHOUT_CLASSIFICATION	7.68834137821312E-9	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999723335749557	WITHOUT_CLASSIFICATION	2.766642504422913E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999997269181904	WITHOUT_CLASSIFICATION	2.730818096519824E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999999058930744	WITHOUT_CLASSIFICATION	9.410692562427501E-8	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999959379337	WITHOUT_CLASSIFICATION	4.062066347173904E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999958664646	WITHOUT_CLASSIFICATION	4.133535389914532E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999999100941248	WITHOUT_CLASSIFICATION	8.99058751972678E-8	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999987182885216	WITHOUT_CLASSIFICATION	1.2817114785070336E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999998660541375	WITHOUT_CLASSIFICATION	1.339458625516055E-7	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999999750861205	WITHOUT_CLASSIFICATION	2.4913879509698544E-8	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.999999377070992	WITHOUT_CLASSIFICATION	6.229290079202573E-7	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.999999524803312	WITHOUT_CLASSIFICATION	4.7519668799515754E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999998783633838	WITHOUT_CLASSIFICATION	1.2163661628677653E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999998431686453	WITHOUT_CLASSIFICATION	1.5683135470158156E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997872777322	WITHOUT_CLASSIFICATION	2.1272226768426178E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9998174025277637	WITHOUT_CLASSIFICATION	1.8259747223623165E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999939573896898	WITHOUT_CLASSIFICATION	6.042610310137228E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.999922171774094	WITHOUT_CLASSIFICATION	7.782822590597096E-5	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999921798736116	WITHOUT_CLASSIFICATION	7.820126388367514E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999804898073592	WITHOUT_CLASSIFICATION	1.951019264083315E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923825224805	WITHOUT_CLASSIFICATION	7.61747751956921E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999537800547998	WITHOUT_CLASSIFICATION	4.621994520024451E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999856287347958	WITHOUT_CLASSIFICATION	1.4371265204152884E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926459601834	WITHOUT_CLASSIFICATION	7.354039816516003E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999790533396239	WITHOUT_CLASSIFICATION	2.0946660376074278E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999895449524827	WITHOUT_CLASSIFICATION	1.0455047517233728E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999977371877389	WITHOUT_CLASSIFICATION	2.2628122611023366E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999471341909293	WITHOUT_CLASSIFICATION	5.286580907078672E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999804746744209	WITHOUT_CLASSIFICATION	1.9525325579167135E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999774226670483	WITHOUT_CLASSIFICATION	2.2577332951739676E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999887713501086	WITHOUT_CLASSIFICATION	1.1228649891406554E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999096863373892	WITHOUT_CLASSIFICATION	9.0313662610736E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999914058424396	WITHOUT_CLASSIFICATION	8.594157560343086E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250953934	WITHOUT_CLASSIFICATION	7.474904606678735E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999865342707978	WITHOUT_CLASSIFICATION	1.346572920219243E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999226638973071	WITHOUT_CLASSIFICATION	7.733610269294298E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999960011000958	WITHOUT_CLASSIFICATION	3.998899904197657E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999847030404271	WITHOUT_CLASSIFICATION	1.5296959572987442E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999898005050821	WITHOUT_CLASSIFICATION	1.0199494917883443E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999433957621955	WITHOUT_CLASSIFICATION	5.660423780448761E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999513771947659	WITHOUT_CLASSIFICATION	4.862280523403098E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999484745617838	WITHOUT_CLASSIFICATION	5.152543821618231E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999715410143244	WITHOUT_CLASSIFICATION	2.8458985675606183E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999684615912271	WITHOUT_CLASSIFICATION	3.153840877290807E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520023981	WITHOUT_CLASSIFICATION	1.3247997601941842E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520023981	WITHOUT_CLASSIFICATION	1.3247997601941842E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999667102282611	WITHOUT_CLASSIFICATION	3.328977173893738E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999715410143244	WITHOUT_CLASSIFICATION	2.8458985675606183E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999608302134102	WITHOUT_CLASSIFICATION	3.916978658968769E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999748212510446	WITHOUT_CLASSIFICATION	2.517874895535848E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999970249162707	WITHOUT_CLASSIFICATION	2.9750837292871522E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999931724011768	WITHOUT_CLASSIFICATION	6.827598823206604E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520023981	WITHOUT_CLASSIFICATION	1.3247997601941842E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999653012532035	WITHOUT_CLASSIFICATION	3.4698746796409386E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999581762770784	WITHOUT_CLASSIFICATION	4.182372292158504E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986720781282	WITHOUT_CLASSIFICATION	1.3279218717889345E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999371235556546	WITHOUT_CLASSIFICATION	6.287644434547675E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999883035907275	WITHOUT_CLASSIFICATION	1.1696409272521936E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999773530115899	WITHOUT_CLASSIFICATION	2.26469884101885E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999602930408777	WITHOUT_CLASSIFICATION	3.9706959122273494E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999135539337981	WITHOUT_CLASSIFICATION	8.644606620196157E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999958823301628	WITHOUT_CLASSIFICATION	4.11766983719474E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999572470060075	WITHOUT_CLASSIFICATION	4.275299399245186E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999714481577391	WITHOUT_CLASSIFICATION	2.8551842260931452E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250953934	WITHOUT_CLASSIFICATION	7.474904606678735E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999925250953934	WITHOUT_CLASSIFICATION	7.474904606678735E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999751940333448	WITHOUT_CLASSIFICATION	2.480596665527249E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999643688525442	WITHOUT_CLASSIFICATION	3.563114745575516E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999616514801638	WITHOUT_CLASSIFICATION	3.8348519836083934E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882602836475	WITHOUT_CLASSIFICATION	1.1739716352386713E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882602836475	WITHOUT_CLASSIFICATION	1.1739716352386713E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915448047356	WITHOUT_CLASSIFICATION	8.455195264367375E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915448047356	WITHOUT_CLASSIFICATION	8.455195264367375E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902024516005	WITHOUT_CLASSIFICATION	9.797548399425842E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902024516005	WITHOUT_CLASSIFICATION	9.797548399425842E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999605003423139	WITHOUT_CLASSIFICATION	3.949965768610007E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999735147718636	WITHOUT_CLASSIFICATION	2.6485228136368E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999865342707978	WITHOUT_CLASSIFICATION	1.346572920219243E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520023981	WITHOUT_CLASSIFICATION	1.3247997601941842E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999616514801638	WITHOUT_CLASSIFICATION	3.8348519836083934E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999882602836475	WITHOUT_CLASSIFICATION	1.1739716352386713E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915448047356	WITHOUT_CLASSIFICATION	8.455195264367375E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999558598050962	WITHOUT_CLASSIFICATION	4.4140194903943524E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999469861579586	WITHOUT_CLASSIFICATION	5.301384204137755E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999107892503337	WITHOUT_CLASSIFICATION	8.921074966631025E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998263183734943	WITHOUT_CLASSIFICATION	1.7368162650574105E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999723243645384	WITHOUT_CLASSIFICATION	2.7675635461537962E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999977329659974	WITHOUT_CLASSIFICATION	2.2670340025971096E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999977329659974	WITHOUT_CLASSIFICATION	2.2670340025971096E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999892836906651	WITHOUT_CLASSIFICATION	1.071630933490054E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999518030532785	WITHOUT_CLASSIFICATION	4.819694672162893E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998969591686817	WITHOUT_CLASSIFICATION	1.030408313182936E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999589194299916	WITHOUT_CLASSIFICATION	4.1080570008355484E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999664411755127	WITHOUT_CLASSIFICATION	3.355882448728104E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897051697672	WITHOUT_CLASSIFICATION	1.029483023297002E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999867520023981	WITHOUT_CLASSIFICATION	1.3247997601941842E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999892836906651	WITHOUT_CLASSIFICATION	1.071630933490054E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999552557740646	WITHOUT_CLASSIFICATION	4.4744225935401366E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999553871625962	WITHOUT_CLASSIFICATION	4.461283740365969E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999888075171478	WITHOUT_CLASSIFICATION	1.1192482852132601E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999602461090553	WITHOUT_CLASSIFICATION	3.975389094472161E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999950025040018	WITHOUT_CLASSIFICATION	4.99749599826375E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999716035572285	WITHOUT_CLASSIFICATION	2.8396442771514793E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999734350715342	WITHOUT_CLASSIFICATION	2.6564928465724227E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999776653050213	WITHOUT_CLASSIFICATION	2.233469497867023E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999896079107693	WITHOUT_CLASSIFICATION	1.0392089230773037E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986919982513	WITHOUT_CLASSIFICATION	1.3080017486903955E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731601645142	WITHOUT_CLASSIFICATION	2.6839835485850786E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999622786063423	WITHOUT_CLASSIFICATION	3.772139365773153E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999917496302304	WITHOUT_CLASSIFICATION	8.250369769672549E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999905037425689	WITHOUT_CLASSIFICATION	9.49625743107064E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999868143355162	WITHOUT_CLASSIFICATION	1.3185664483749064E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999985340221833	WITHOUT_CLASSIFICATION	1.4659778167032935E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999814842853234	WITHOUT_CLASSIFICATION	1.8515714676687884E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999716035572285	WITHOUT_CLASSIFICATION	2.8396442771514793E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999751709139507	WITHOUT_CLASSIFICATION	2.4829086049219798E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998674256396568	WITHOUT_CLASSIFICATION	1.3257436034319107E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999429467094236	WITHOUT_CLASSIFICATION	5.70532905763514E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995513752955413	WITHOUT_CLASSIFICATION	4.486247044587512E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999518706187	WITHOUT_CLASSIFICATION	4.8129381156349086E-8	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999999686231168	WITHOUT_CLASSIFICATION	3.1376883298726864E-8	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999999279840015	WITHOUT_CLASSIFICATION	7.201599854380276E-8	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999999744472197	WITHOUT_CLASSIFICATION	2.5552780334629346E-8	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.999999975469526	WITHOUT_CLASSIFICATION	2.4530473956085048E-8	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999928937994	WITHOUT_CLASSIFICATION	7.1062006778423935E-9	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.999999950941036	WITHOUT_CLASSIFICATION	4.9058964087556794E-8	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999947597582	WITHOUT_CLASSIFICATION	5.24024176667519E-9	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999999638230264	WITHOUT_CLASSIFICATION	3.6176973762511204E-8	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999999938066293	WITHOUT_CLASSIFICATION	6.193370695610686E-8	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998709169226	WITHOUT_CLASSIFICATION	1.2908307746174268E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999798846684	WITHOUT_CLASSIFICATION	2.011533170641322E-8	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998531723868	WITHOUT_CLASSIFICATION	1.4682761314482876E-7	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999999703656403	WITHOUT_CLASSIFICATION	2.963435977018119E-8	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999972807555693	WITHOUT_CLASSIFICATION	2.719244430645544E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999988387124381	WITHOUT_CLASSIFICATION	1.1612875619763815E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999876712136	WITHOUT_CLASSIFICATION	1.2328786471348853E-8	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.999999950870864	WITHOUT_CLASSIFICATION	4.91291358422035E-8	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.999999950870864	WITHOUT_CLASSIFICATION	4.91291358422035E-8	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999995498913747	WITHOUT_CLASSIFICATION	4.501086253037632E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999999535349762	WITHOUT_CLASSIFICATION	4.646502381000169E-8	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999998838646	WITHOUT_CLASSIFICATION	1.1613544817838367E-10	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.999999206109763	WITHOUT_CLASSIFICATION	7.938902370041657E-7	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.999999206109763	WITHOUT_CLASSIFICATION	7.938902370041657E-7	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9999819721247196	WITHOUT_CLASSIFICATION	1.8027875280385916E-5	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9999590014279567	WITHOUT_CLASSIFICATION	4.099857204332109E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999999728276694	WITHOUT_CLASSIFICATION	2.7172330495874957E-8	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999841830584871	WITHOUT_CLASSIFICATION	1.5816941512917213E-5	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9851094219236188	WITHOUT_CLASSIFICATION	0.01489057807638111	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999918354804641	WITHOUT_CLASSIFICATION	8.164519535952172E-6	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999996554777635	WITHOUT_CLASSIFICATION	3.4452223643863985E-7	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999999700363063	WITHOUT_CLASSIFICATION	2.996369368627028E-8	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9992509213457803	WITHOUT_CLASSIFICATION	7.490786542197674E-4	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999874424752334	WITHOUT_CLASSIFICATION	1.2557524766708207E-5	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999515311883539	WITHOUT_CLASSIFICATION	4.846881164597779E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999923214920314	WITHOUT_CLASSIFICATION	7.678507968479303E-6	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999921487341734	WITHOUT_CLASSIFICATION	7.851265826526495E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999236746711004	WITHOUT_CLASSIFICATION	7.632532889953474E-5	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999986247821371	WITHOUT_CLASSIFICATION	1.375217862902094E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.999999984281074	WITHOUT_CLASSIFICATION	1.571892605439601E-8	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9995778066891765	WITHOUT_CLASSIFICATION	4.2219331082350015E-4	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999400604659004	WITHOUT_CLASSIFICATION	5.993953409955868E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999874414801205	WITHOUT_CLASSIFICATION	1.255851987946991E-5	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999987011272629	WITHOUT_CLASSIFICATION	1.2988727371408163E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999998973046776	WITHOUT_CLASSIFICATION	1.0269532236212575E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999812924876776	WITHOUT_CLASSIFICATION	1.8707512322356457E-5	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999972077455817	WITHOUT_CLASSIFICATION	2.7922544182500585E-6	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999601282521394	WITHOUT_CLASSIFICATION	3.987174786056227E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999944339227607	WITHOUT_CLASSIFICATION	5.566077239393221E-6	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999963541241119	WITHOUT_CLASSIFICATION	3.6458758881418444E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999989251818832	WITHOUT_CLASSIFICATION	1.0748181168184447E-6	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9993591089572731	WITHOUT_CLASSIFICATION	6.408910427269224E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999805011679697	WITHOUT_CLASSIFICATION	1.9498832030430056E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999996362502146	WITHOUT_CLASSIFICATION	3.6374978546103476E-7	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999996362502146	WITHOUT_CLASSIFICATION	3.6374978546103476E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999958301281	WITHOUT_CLASSIFICATION	4.169871905474163E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999958301281	WITHOUT_CLASSIFICATION	4.169871905474163E-8	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.999998378883268	WITHOUT_CLASSIFICATION	1.6211167319152035E-6	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999998161383287	WITHOUT_CLASSIFICATION	1.8386167137944371E-7	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999805293551	WITHOUT_CLASSIFICATION	1.9470644771178187E-8	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9995760469162905	WITHOUT_CLASSIFICATION	4.2395308370939437E-4	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999876296159566	WITHOUT_CLASSIFICATION	1.2370384043453233E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999924300913834	WITHOUT_CLASSIFICATION	7.569908616606116E-6	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999730906859823	WITHOUT_CLASSIFICATION	2.6909314017736496E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999747867476693	WITHOUT_CLASSIFICATION	2.5213252330716764E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999998528093228	WITHOUT_CLASSIFICATION	1.4719067719684098E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999996003707433	WITHOUT_CLASSIFICATION	3.9962925662495847E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999996003707433	WITHOUT_CLASSIFICATION	3.9962925662495847E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999220370823347	WITHOUT_CLASSIFICATION	7.79629176653154E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999220370823347	WITHOUT_CLASSIFICATION	7.79629176653154E-5	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999710647245847	WITHOUT_CLASSIFICATION	2.8935275415244325E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999989591456369	WITHOUT_CLASSIFICATION	1.0408543631986805E-6	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999998794282867	WITHOUT_CLASSIFICATION	1.2057171319450446E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999998793332532	WITHOUT_CLASSIFICATION	1.206667467325657E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999996908360602	WITHOUT_CLASSIFICATION	3.091639398267495E-7	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.999999970054835	WITHOUT_CLASSIFICATION	2.994516500586346E-8	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999983622400859	WITHOUT_CLASSIFICATION	1.6377599141754113E-6	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.999999956753643	WITHOUT_CLASSIFICATION	4.324635695630749E-8	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9998092708737473	WITHOUT_CLASSIFICATION	1.907291262528636E-4	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999999567467254	WITHOUT_CLASSIFICATION	4.325327458773292E-8	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999841229496705	WITHOUT_CLASSIFICATION	1.5877050329430657E-5	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999999263343601	WITHOUT_CLASSIFICATION	7.366563992898464E-8	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999886794864722	WITHOUT_CLASSIFICATION	1.13205135277629E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999997467856858	WITHOUT_CLASSIFICATION	2.5321431413187425E-7	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999999919953743	WITHOUT_CLASSIFICATION	8.004625733059808E-9	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999803996784854	WITHOUT_CLASSIFICATION	1.960032151455112E-5	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999738103742327	WITHOUT_CLASSIFICATION	2.6189625767360272E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999704691001947	WITHOUT_CLASSIFICATION	2.9530899805324028E-5	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999916767168612	WITHOUT_CLASSIFICATION	8.323283138697836E-6	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999996285495126	WITHOUT_CLASSIFICATION	3.7145048737312614E-7	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9996764158629035	WITHOUT_CLASSIFICATION	3.2358413709654004E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999752435458805	WITHOUT_CLASSIFICATION	2.4756454119373753E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999999456363815	WITHOUT_CLASSIFICATION	5.436361838674424E-8	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999994646548455	WITHOUT_CLASSIFICATION	5.353451546183154E-7	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.99999999406672	WITHOUT_CLASSIFICATION	5.933280071498749E-9	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998171100230875	WITHOUT_CLASSIFICATION	1.8288997691251919E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.999997930534048	WITHOUT_CLASSIFICATION	2.069465951950414E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999993047259315	WITHOUT_CLASSIFICATION	6.95274068472523E-7	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999993047259315	WITHOUT_CLASSIFICATION	6.95274068472523E-7	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999756425104104	WITHOUT_CLASSIFICATION	2.435748958964528E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999531594670225	WITHOUT_CLASSIFICATION	4.684053297742696E-5	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.999999309997594	WITHOUT_CLASSIFICATION	6.900024060334566E-7	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999171836742626	WITHOUT_CLASSIFICATION	8.281632573742532E-5	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999971390697032	WITHOUT_CLASSIFICATION	2.8609302967852828E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999766226132244	WITHOUT_CLASSIFICATION	2.3377386775616393E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999997830759558	WITHOUT_CLASSIFICATION	2.1692404428165462E-7	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999467359592459	WITHOUT_CLASSIFICATION	5.326404075417553E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999958301281	WITHOUT_CLASSIFICATION	4.169871905474163E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999958301281	WITHOUT_CLASSIFICATION	4.169871905474163E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999958301281	WITHOUT_CLASSIFICATION	4.169871905474163E-8	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998171100230875	WITHOUT_CLASSIFICATION	1.8288997691251919E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999218403749024	WITHOUT_CLASSIFICATION	7.815962509763982E-5	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999972235242867	WITHOUT_CLASSIFICATION	2.776475713281719E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999989880540125	WITHOUT_CLASSIFICATION	1.0119459873667206E-6	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9999919113353419	WITHOUT_CLASSIFICATION	8.088664658122407E-6	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.999994353320527	WITHOUT_CLASSIFICATION	5.646679472991878E-6	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999810688101844	WITHOUT_CLASSIFICATION	1.8931189815559523E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999805422324	WITHOUT_CLASSIFICATION	1.945776755927454E-8	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999999565757732	WITHOUT_CLASSIFICATION	4.342422668723387E-8	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.999925456975097	WITHOUT_CLASSIFICATION	7.454302490295135E-5	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999998391291502	WITHOUT_CLASSIFICATION	1.608708497038329E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999999789682451	WITHOUT_CLASSIFICATION	2.1031754882997553E-8	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.999999996146266	WITHOUT_CLASSIFICATION	3.853734014680286E-9	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999979603009842	WITHOUT_CLASSIFICATION	2.0396990157992074E-6	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999998622917142	WITHOUT_CLASSIFICATION	1.3770828586845428E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999995689173458	WITHOUT_CLASSIFICATION	4.3108265422192534E-7	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999992681893712	WITHOUT_CLASSIFICATION	7.318106286930232E-7	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9999201725744989	WITHOUT_CLASSIFICATION	7.982742550102709E-5	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999996139784993	WITHOUT_CLASSIFICATION	3.860215005940917E-7	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.99999392642682	WITHOUT_CLASSIFICATION	6.073573180074733E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999963305769672	WITHOUT_CLASSIFICATION	3.6694230327983295E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999884929765871	WITHOUT_CLASSIFICATION	1.1507023412899969E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999964837114754	WITHOUT_CLASSIFICATION	3.516288524601969E-6	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.999998815968681	WITHOUT_CLASSIFICATION	1.1840313189528611E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999808808788601	WITHOUT_CLASSIFICATION	1.9119121140010903E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999989587004696	WITHOUT_CLASSIFICATION	1.0412995303721548E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999958301281	WITHOUT_CLASSIFICATION	4.169871905474163E-8	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999805422324	WITHOUT_CLASSIFICATION	1.945776755927454E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999995689173458	WITHOUT_CLASSIFICATION	4.3108265422192534E-7	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999997377709963	WITHOUT_CLASSIFICATION	2.622290036693426E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999998765924223	WITHOUT_CLASSIFICATION	1.2340757769235697E-7	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999901334405829	WITHOUT_CLASSIFICATION	9.866559417147929E-6	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9999646748217055	WITHOUT_CLASSIFICATION	3.532517829445705E-5	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999950155458412	WITHOUT_CLASSIFICATION	4.984454158784668E-6	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999382947134675	WITHOUT_CLASSIFICATION	6.170528653248576E-5	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999998811723109	WITHOUT_CLASSIFICATION	1.1882768913961567E-7	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999930850873561	WITHOUT_CLASSIFICATION	6.914912643956558E-6	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9974758995588793	WITHOUT_CLASSIFICATION	0.0025241004411206934	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999744484136895	WITHOUT_CLASSIFICATION	2.5551586310394755E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999761044941463	WITHOUT_CLASSIFICATION	2.389550585370873E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999761044941463	WITHOUT_CLASSIFICATION	2.389550585370873E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999592345078466	WITHOUT_CLASSIFICATION	4.076549215334796E-5	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999423219848286	WITHOUT_CLASSIFICATION	5.767801517136368E-5	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999982321704889	WITHOUT_CLASSIFICATION	1.7678295110820085E-6	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999999686714167	WITHOUT_CLASSIFICATION	3.1328583324964155E-8	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999639307199025	WITHOUT_CLASSIFICATION	3.606928009748433E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999575814403017	WITHOUT_CLASSIFICATION	4.241855969842175E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999984021444881	WITHOUT_CLASSIFICATION	1.5978555119002358E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999987947070736	WITHOUT_CLASSIFICATION	1.2052929263192138E-6	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999965341430996	WITHOUT_CLASSIFICATION	3.4658569003803026E-6	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999999734590629	WITHOUT_CLASSIFICATION	2.6540937206882615E-8	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999925381513651	WITHOUT_CLASSIFICATION	7.461848634850735E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999220370823347	WITHOUT_CLASSIFICATION	7.79629176653154E-5	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999983622400859	WITHOUT_CLASSIFICATION	1.6377599141754113E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999995689173458	WITHOUT_CLASSIFICATION	4.3108265422192534E-7	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999639307199025	WITHOUT_CLASSIFICATION	3.606928009748433E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999575814403017	WITHOUT_CLASSIFICATION	4.241855969842175E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.99997437108624	WITHOUT_CLASSIFICATION	2.5628913760095583E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999998676257006	WITHOUT_CLASSIFICATION	1.3237429937311763E-7	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9998028724733977	WITHOUT_CLASSIFICATION	1.9712752660220448E-4	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9999614683801645	WITHOUT_CLASSIFICATION	3.853161983548138E-5	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999669369604953	WITHOUT_CLASSIFICATION	3.3063039504611196E-5	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999994944201174	WITHOUT_CLASSIFICATION	5.055798826829134E-7	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9989577361653953	WITHOUT_CLASSIFICATION	0.0010422638346046977	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999999739632317	WITHOUT_CLASSIFICATION	2.6036768354469166E-8	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.999998446374183	WITHOUT_CLASSIFICATION	1.5536258170200126E-6	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999999507499	WITHOUT_CLASSIFICATION	4.9250099933434394E-8	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999999796528717	WITHOUT_CLASSIFICATION	2.0347128241437058E-8	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.999999885523344	WITHOUT_CLASSIFICATION	1.1447665605046895E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9941786496381092	WITHOUT_CLASSIFICATION	0.005821350361890746	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999999269533199	WITHOUT_CLASSIFICATION	7.304668009197357E-8	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.999915064533368	WITHOUT_CLASSIFICATION	8.49354666320624E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.999999989029192	WITHOUT_CLASSIFICATION	1.0970807987588062E-8	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9941786496381092	WITHOUT_CLASSIFICATION	0.005821350361890746	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9941786496381092	WITHOUT_CLASSIFICATION	0.005821350361890746	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9941786496381092	WITHOUT_CLASSIFICATION	0.005821350361890746	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999993279024613	WITHOUT_CLASSIFICATION	6.720975386607211E-7	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999991445470343	WITHOUT_CLASSIFICATION	8.554529656835622E-7	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999999035987179	WITHOUT_CLASSIFICATION	9.640128198147876E-8	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999968895405265	WITHOUT_CLASSIFICATION	3.1104594734845435E-6	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999956923811776	WITHOUT_CLASSIFICATION	4.307618822410512E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9997536659180639	WITHOUT_CLASSIFICATION	2.4633408193607524E-4	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.999991558999381	WITHOUT_CLASSIFICATION	8.441000619025685E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999990137458357	WITHOUT_CLASSIFICATION	9.862541642806525E-7	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999992364811484	WITHOUT_CLASSIFICATION	7.635188515414213E-7	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999985234883519	WITHOUT_CLASSIFICATION	1.476511648076492E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9999985698367652	WITHOUT_CLASSIFICATION	1.4301632348297534E-6	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999807753860717	WITHOUT_CLASSIFICATION	1.922461392825133E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999995321344667	WITHOUT_CLASSIFICATION	4.6786553330963624E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.999999950870864	WITHOUT_CLASSIFICATION	4.91291358422035E-8	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999751651127946	WITHOUT_CLASSIFICATION	2.483488720541241E-5	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.999708425702792	WITHOUT_CLASSIFICATION	2.915742972081274E-4	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999977110243827	WITHOUT_CLASSIFICATION	2.2889756172248733E-6	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999993680961982	WITHOUT_CLASSIFICATION	6.319038018840128E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998936812855	WITHOUT_CLASSIFICATION	1.063187144329607E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998936812855	WITHOUT_CLASSIFICATION	1.063187144329607E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999379504194	WITHOUT_CLASSIFICATION	6.204958052137583E-8	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989903426472	WITHOUT_CLASSIFICATION	1.0096573528107034E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999379504194	WITHOUT_CLASSIFICATION	6.204958052137583E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999997495207587	WITHOUT_CLASSIFICATION	2.5047924134579157E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999993833825109	WITHOUT_CLASSIFICATION	6.166174890731702E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999997824090782	WITHOUT_CLASSIFICATION	2.1759092170991053E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999999094917975	WITHOUT_CLASSIFICATION	9.050820248640098E-8	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999999094917975	WITHOUT_CLASSIFICATION	9.050820248640098E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998528402744	WITHOUT_CLASSIFICATION	1.4715972558639414E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998528402744	WITHOUT_CLASSIFICATION	1.4715972558639414E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998721625803	WITHOUT_CLASSIFICATION	1.2783741966993413E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998721625803	WITHOUT_CLASSIFICATION	1.2783741966993413E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409068	WITHOUT_CLASSIFICATION	7.825909315232917E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409068	WITHOUT_CLASSIFICATION	7.825909315232917E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409068	WITHOUT_CLASSIFICATION	7.825909315232917E-8	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999997978021795	WITHOUT_CLASSIFICATION	2.0219782062438976E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409068	WITHOUT_CLASSIFICATION	7.825909315232917E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409068	WITHOUT_CLASSIFICATION	7.825909315232917E-8	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999999807164744	WITHOUT_CLASSIFICATION	1.928352548265746E-8	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999946356186394	WITHOUT_CLASSIFICATION	5.364381360519511E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999998001211391	WITHOUT_CLASSIFICATION	1.9987886080227796E-7	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999510086581581	WITHOUT_CLASSIFICATION	4.899134184199001E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999978588903384	WITHOUT_CLASSIFICATION	2.141109661623023E-6	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999999751257267	WITHOUT_CLASSIFICATION	2.487427334600796E-8	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999942074280234	WITHOUT_CLASSIFICATION	5.792571976560285E-6	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.999999713430666	WITHOUT_CLASSIFICATION	2.8656933403995065E-7	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9997143176659053	WITHOUT_CLASSIFICATION	2.856823340947291E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999999973054359	WITHOUT_CLASSIFICATION	2.6945641475520904E-9	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999661990739733	WITHOUT_CLASSIFICATION	3.380092602669003E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999994322588937	WITHOUT_CLASSIFICATION	5.677411063119702E-7	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999988673888444	WITHOUT_CLASSIFICATION	1.1326111556221077E-6	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999998571456281	WITHOUT_CLASSIFICATION	1.428543718860039E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999971344613259	WITHOUT_CLASSIFICATION	2.865538674071713E-6	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999998280243547	WITHOUT_CLASSIFICATION	1.719756451851296E-7	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999998564624987	WITHOUT_CLASSIFICATION	1.4353750141725858E-7	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999985405389353	WITHOUT_CLASSIFICATION	1.459461064649955E-6	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999997064441415	WITHOUT_CLASSIFICATION	2.9355585854304214E-7	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999982788756344	WITHOUT_CLASSIFICATION	1.7211243655274566E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999997790496374	WITHOUT_CLASSIFICATION	2.209503624644445E-7	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9961462144370484	WITHOUT_CLASSIFICATION	0.003853785562951566	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9961462144370484	WITHOUT_CLASSIFICATION	0.003853785562951566	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.997105753703847	WITHOUT_CLASSIFICATION	0.0028942462961529945	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.997105753703847	WITHOUT_CLASSIFICATION	0.0028942462961529945	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999998029009476	WITHOUT_CLASSIFICATION	1.9709905243521084E-7	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999965957271156	WITHOUT_CLASSIFICATION	3.404272884447835E-6	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999999832248119	WITHOUT_CLASSIFICATION	1.6775188077745333E-8	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999998708235327	WITHOUT_CLASSIFICATION	1.2917646733055142E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999969340244911	WITHOUT_CLASSIFICATION	3.065975508912927E-6	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999954250156785	WITHOUT_CLASSIFICATION	4.574984321439342E-6	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999998068605792	WITHOUT_CLASSIFICATION	1.931394208033544E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9978857929062115	WITHOUT_CLASSIFICATION	0.002114207093788552	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999997208268294	WITHOUT_CLASSIFICATION	2.791731705853125E-7	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999953360995409	WITHOUT_CLASSIFICATION	4.663900459004505E-6	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999999243579349	WITHOUT_CLASSIFICATION	7.564206499467152E-8	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999998116954568	WITHOUT_CLASSIFICATION	1.8830454309602024E-7	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999993768497863	WITHOUT_CLASSIFICATION	6.231502136585886E-7	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999999997937531	WITHOUT_CLASSIFICATION	2.0624697045432423E-10	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999997585376764	WITHOUT_CLASSIFICATION	2.414623235997419E-7	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999993000064101	WITHOUT_CLASSIFICATION	6.999935898823169E-7	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999999859763238	WITHOUT_CLASSIFICATION	1.4023676073608045E-8	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999023194842238	WITHOUT_CLASSIFICATION	9.768051577626631E-5	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.999999057333946	WITHOUT_CLASSIFICATION	9.426660540126714E-7	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9999036355655162	WITHOUT_CLASSIFICATION	9.636443448373786E-5	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999999921586444	WITHOUT_CLASSIFICATION	7.841355596664918E-9	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999990064471906	WITHOUT_CLASSIFICATION	9.93552809308006E-7	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999998259915132	WITHOUT_CLASSIFICATION	1.740084869055013E-7	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9986179331545606	WITHOUT_CLASSIFICATION	0.0013820668454393738	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999995789825803	WITHOUT_CLASSIFICATION	4.2101741977988187E-7	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999895232854653	WITHOUT_CLASSIFICATION	1.047671453474685E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.99997775864136	WITHOUT_CLASSIFICATION	2.2241358640114892E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999386260374152	WITHOUT_CLASSIFICATION	6.137396258473337E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999999572089879	WITHOUT_CLASSIFICATION	4.279101200645764E-8	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999757199192466	WITHOUT_CLASSIFICATION	2.4280080753361607E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821717	WITHOUT_CLASSIFICATION	2.2717828323686785E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628456398	WITHOUT_CLASSIFICATION	1.371543601504139E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366022518	WITHOUT_CLASSIFICATION	4.633977481386441E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998303365498	WITHOUT_CLASSIFICATION	1.696634501017194E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999986042786788	WITHOUT_CLASSIFICATION	1.3957213212486414E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998915573206	WITHOUT_CLASSIFICATION	1.0844267932072756E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999993823963125	WITHOUT_CLASSIFICATION	6.176036874288148E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950315	WITHOUT_CLASSIFICATION	2.60496841343918E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912323	WITHOUT_CLASSIFICATION	6.709087675935197E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999997884921682	WITHOUT_CLASSIFICATION	2.1150783180706203E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570522356	WITHOUT_CLASSIFICATION	3.429477643526695E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999979182944523	WITHOUT_CLASSIFICATION	2.081705547678708E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879518	WITHOUT_CLASSIFICATION	3.5212048276077426E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008205082	WITHOUT_CLASSIFICATION	9.917949185696776E-8	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.999999206109763	WITHOUT_CLASSIFICATION	7.938902370041657E-7	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999976362891619	WITHOUT_CLASSIFICATION	2.3637108379971888E-6	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999999810272517	WITHOUT_CLASSIFICATION	1.897274828240783E-8	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999976327532032	WITHOUT_CLASSIFICATION	2.3672467967819633E-6	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999992579944034	WITHOUT_CLASSIFICATION	7.420055966804249E-7	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999999375121383	WITHOUT_CLASSIFICATION	6.248786166326565E-8	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999804012634155	WITHOUT_CLASSIFICATION	1.9598736584497434E-5	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999999905538504	WITHOUT_CLASSIFICATION	9.446149669596244E-9	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999999970840542	WITHOUT_CLASSIFICATION	2.915945878963772E-9	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999998229623761	WITHOUT_CLASSIFICATION	1.77037623942428E-7	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.999997825163543	WITHOUT_CLASSIFICATION	2.174836457031398E-6	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999958022589197	WITHOUT_CLASSIFICATION	4.197741080219677E-6	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999979570385326	WITHOUT_CLASSIFICATION	2.0429614674650828E-6	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999942717933243	WITHOUT_CLASSIFICATION	5.7282066756017485E-6	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999814573227589	WITHOUT_CLASSIFICATION	1.8542677241202178E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999949591939108	WITHOUT_CLASSIFICATION	5.040806089207579E-6	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999996195953107	WITHOUT_CLASSIFICATION	3.8040468930438384E-7	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999942404777737	WITHOUT_CLASSIFICATION	5.7595222262840055E-6	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9999976596736349	WITHOUT_CLASSIFICATION	2.3403263652390976E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999993690765	WITHOUT_CLASSIFICATION	6.309234110138742E-10	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.999957744113098	WITHOUT_CLASSIFICATION	4.225588690187858E-5	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9970227903196026	WITHOUT_CLASSIFICATION	0.00297720968039752	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999997877170242	WITHOUT_CLASSIFICATION	2.122829757310904E-7	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999999904607628	WITHOUT_CLASSIFICATION	9.539237226242551E-9	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.7589427574663218	DEFECT	0.24105724253367813	WITHOUT_CLASSIFICATION
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9991967620821768	WITHOUT_CLASSIFICATION	8.032379178231615E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999984312933718	WITHOUT_CLASSIFICATION	1.5687066281971723E-6	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.999999989253005	WITHOUT_CLASSIFICATION	1.07469949381538E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999999842251134	WITHOUT_CLASSIFICATION	1.5774886561437023E-8	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999997644927188	WITHOUT_CLASSIFICATION	2.3550728119338139E-7	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.999999661313971	WITHOUT_CLASSIFICATION	3.3868602892947865E-7	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999992665740692	WITHOUT_CLASSIFICATION	7.334259306847965E-7	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999371887867408	WITHOUT_CLASSIFICATION	6.28112132592884E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999999877045155	WITHOUT_CLASSIFICATION	1.229548458226806E-8	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.999999982355716	WITHOUT_CLASSIFICATION	1.7644283995578703E-8	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999757578378482	WITHOUT_CLASSIFICATION	2.4242162151750854E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999994940227895	WITHOUT_CLASSIFICATION	5.059772103613353E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.999999378846078	WITHOUT_CLASSIFICATION	6.211539219732027E-7	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.999999819376415	WITHOUT_CLASSIFICATION	1.8062358501941484E-7	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999894005442863	WITHOUT_CLASSIFICATION	1.0599455713668908E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999999281620486	WITHOUT_CLASSIFICATION	7.183795128928383E-8	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.999999813184812	WITHOUT_CLASSIFICATION	1.8681518793044964E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999997204123	WITHOUT_CLASSIFICATION	2.7958770000212E-7	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999996203892114	WITHOUT_CLASSIFICATION	3.796107885616485E-7	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999983527465632	WITHOUT_CLASSIFICATION	1.6472534367739481E-6	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999999737944879	WITHOUT_CLASSIFICATION	2.620551205379237E-8	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999999581881496	WITHOUT_CLASSIFICATION	4.181185055235654E-8	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999855430577923	WITHOUT_CLASSIFICATION	1.4456942207833271E-5	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999998909364837	WITHOUT_CLASSIFICATION	1.0906351628740136E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9993722066941643	WITHOUT_CLASSIFICATION	6.277933058357371E-4	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999987426671793	WITHOUT_CLASSIFICATION	1.257332820716064E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999910902579976	WITHOUT_CLASSIFICATION	8.909742002532934E-6	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.999999543993312	WITHOUT_CLASSIFICATION	4.560066880409072E-7	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999997926673997	WITHOUT_CLASSIFICATION	2.0733260023952088E-7	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999999562707745	WITHOUT_CLASSIFICATION	4.372922550177888E-8	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999993233955912	WITHOUT_CLASSIFICATION	6.766044089305379E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999993233955912	WITHOUT_CLASSIFICATION	6.766044089305379E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.999999999993006	WITHOUT_CLASSIFICATION	6.994001037063744E-12	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999977748884202	WITHOUT_CLASSIFICATION	2.2251115798684886E-6	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999998221879657	WITHOUT_CLASSIFICATION	1.778120343800937E-7	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999999551233049	WITHOUT_CLASSIFICATION	4.48766951197246E-8	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999998662884645	WITHOUT_CLASSIFICATION	1.3371153562656889E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999874326082436	WITHOUT_CLASSIFICATION	1.2567391756422622E-5	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.999999992007185	WITHOUT_CLASSIFICATION	7.992815060535583E-9	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999999153296972	WITHOUT_CLASSIFICATION	8.467030284197551E-8	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999999553493548	WITHOUT_CLASSIFICATION	4.465064515447354E-8	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999937777639815	WITHOUT_CLASSIFICATION	6.222236018512692E-6	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999999888811266	WITHOUT_CLASSIFICATION	1.1118873303157469E-8	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9989097387975193	WITHOUT_CLASSIFICATION	0.0010902612024805956	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.999998198819337	WITHOUT_CLASSIFICATION	1.8011806629709407E-6	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999986862040313	WITHOUT_CLASSIFICATION	1.3137959687729942E-6	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999999845244281	WITHOUT_CLASSIFICATION	1.547557193367329E-8	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9997548955710228	WITHOUT_CLASSIFICATION	2.4510442897720473E-4	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999983501632849	WITHOUT_CLASSIFICATION	1.649836715105588E-6	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999990050522	WITHOUT_CLASSIFICATION	9.949476840780928E-10	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.999995313625618	WITHOUT_CLASSIFICATION	4.686374381987775E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9993537672411165	WITHOUT_CLASSIFICATION	6.462327588834737E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999999002237697	WITHOUT_CLASSIFICATION	9.977623038353533E-8	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999987026136163	WITHOUT_CLASSIFICATION	1.297386383587043E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999700901354	WITHOUT_CLASSIFICATION	2.990986459640194E-8	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999999901844254	WITHOUT_CLASSIFICATION	9.815574696116167E-9	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999999593409497	WITHOUT_CLASSIFICATION	4.065905024554274E-8	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999990831823069	WITHOUT_CLASSIFICATION	9.168176930242709E-7	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999980439112297	WITHOUT_CLASSIFICATION	1.9560887702375673E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409068	WITHOUT_CLASSIFICATION	7.825909315232917E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409068	WITHOUT_CLASSIFICATION	7.825909315232917E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409068	WITHOUT_CLASSIFICATION	7.825909315232917E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409068	WITHOUT_CLASSIFICATION	7.825909315232917E-8	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999656309703069	WITHOUT_CLASSIFICATION	3.4369029693081824E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.999991838542672	WITHOUT_CLASSIFICATION	8.161457327913688E-6	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999988358926802	WITHOUT_CLASSIFICATION	1.1641073197636931E-6	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9994936835840145	WITHOUT_CLASSIFICATION	5.063164159855331E-4	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999996566364662	WITHOUT_CLASSIFICATION	3.4336353379875485E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999982140560764	WITHOUT_CLASSIFICATION	1.785943923634437E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999985097944977	WITHOUT_CLASSIFICATION	1.4902055023001641E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999999990887471	WITHOUT_CLASSIFICATION	9.112527860911784E-10	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999998408494987	WITHOUT_CLASSIFICATION	1.5915050126738735E-7	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999994249787313	WITHOUT_CLASSIFICATION	5.750212687607951E-7	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999999995655939	WITHOUT_CLASSIFICATION	4.3440605749533125E-10	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999997868083105	WITHOUT_CLASSIFICATION	2.131916895459879E-7	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.999999353104695	WITHOUT_CLASSIFICATION	6.468953050179976E-7	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.999996162864263	WITHOUT_CLASSIFICATION	3.8371357369892245E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999977865605605	WITHOUT_CLASSIFICATION	2.213439439531544E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999995388428466	WITHOUT_CLASSIFICATION	4.6115715346490576E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998936812855	WITHOUT_CLASSIFICATION	1.063187144329607E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998936812855	WITHOUT_CLASSIFICATION	1.063187144329607E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999379504194	WITHOUT_CLASSIFICATION	6.204958052137583E-8	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999379504194	WITHOUT_CLASSIFICATION	6.204958052137583E-8	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999998542275987	WITHOUT_CLASSIFICATION	1.4577240119288273E-7	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999719573761697	WITHOUT_CLASSIFICATION	2.804262383025145E-5	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999999204873687	WITHOUT_CLASSIFICATION	7.951263132550465E-8	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.999997635675338	WITHOUT_CLASSIFICATION	2.364324661955662E-6	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999977528356883	WITHOUT_CLASSIFICATION	2.247164311850281E-6	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999997433275462	WITHOUT_CLASSIFICATION	2.566724537978705E-7	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.999999966992353	WITHOUT_CLASSIFICATION	3.300764703303183E-8	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999999745025604	WITHOUT_CLASSIFICATION	2.5497439659589295E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999951632830187	WITHOUT_CLASSIFICATION	4.8367169812441194E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999951632830187	WITHOUT_CLASSIFICATION	4.8367169812441194E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999968563627795	WITHOUT_CLASSIFICATION	3.143637220557686E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999968563627795	WITHOUT_CLASSIFICATION	3.143637220557686E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.999999989029192	WITHOUT_CLASSIFICATION	1.0970807987588062E-8	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999993833825109	WITHOUT_CLASSIFICATION	6.166174890731702E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999997495207587	WITHOUT_CLASSIFICATION	2.5047924134579157E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999997824090782	WITHOUT_CLASSIFICATION	2.1759092170991053E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999999094917975	WITHOUT_CLASSIFICATION	9.050820248640098E-8	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999999094917975	WITHOUT_CLASSIFICATION	9.050820248640098E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998528402744	WITHOUT_CLASSIFICATION	1.4715972558639414E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998528402744	WITHOUT_CLASSIFICATION	1.4715972558639414E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998721625803	WITHOUT_CLASSIFICATION	1.2783741966993413E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999998721625803	WITHOUT_CLASSIFICATION	1.2783741966993413E-7	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999644932411833	WITHOUT_CLASSIFICATION	3.550675881675503E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999999621502931	WITHOUT_CLASSIFICATION	3.78497069444513E-8	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999956921094008	WITHOUT_CLASSIFICATION	4.307890599223478E-6	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999927873597361	WITHOUT_CLASSIFICATION	7.2126402639723255E-6	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999986236127612	WITHOUT_CLASSIFICATION	1.3763872389227079E-6	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999999251933098	WITHOUT_CLASSIFICATION	7.480669014592709E-8	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999998375982717	WITHOUT_CLASSIFICATION	1.624017284022371E-7	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999994953775065	WITHOUT_CLASSIFICATION	5.046224934295036E-7	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999998119892946	WITHOUT_CLASSIFICATION	1.8801070547864274E-7	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.99999228105729	WITHOUT_CLASSIFICATION	7.718942710028607E-6	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999999745553393	WITHOUT_CLASSIFICATION	2.544466067101263E-8	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999940453263134	WITHOUT_CLASSIFICATION	5.954673686484256E-6	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999984207719059	WITHOUT_CLASSIFICATION	1.5792280940838538E-6	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999999501399167	WITHOUT_CLASSIFICATION	4.986008323710716E-8	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999995284382224	WITHOUT_CLASSIFICATION	4.715617776033424E-7	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999749105957076	WITHOUT_CLASSIFICATION	2.508940429231628E-5	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999881233651277	WITHOUT_CLASSIFICATION	1.187663487235468E-5	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.999999556125551	WITHOUT_CLASSIFICATION	4.438744489577869E-7	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999999465697	WITHOUT_CLASSIFICATION	5.3430193447882595E-11	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999974014093145	WITHOUT_CLASSIFICATION	2.5985906855216825E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999995573054794	WITHOUT_CLASSIFICATION	4.4269452059688743E-7	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999968516756566	WITHOUT_CLASSIFICATION	3.1483243434528864E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999972425000122	WITHOUT_CLASSIFICATION	2.7574999878461473E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999996514707903	WITHOUT_CLASSIFICATION	3.485292097239782E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999777170047534	WITHOUT_CLASSIFICATION	2.2282995246673094E-5	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999999937844742	WITHOUT_CLASSIFICATION	6.215525747079826E-9	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9998239866450901	WITHOUT_CLASSIFICATION	1.76013354910001E-4	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999734808962898	WITHOUT_CLASSIFICATION	2.651910371013751E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9973264032711107	WITHOUT_CLASSIFICATION	0.0026735967288894443	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9999637554854494	WITHOUT_CLASSIFICATION	3.6244514550613456E-5	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999999917583589	WITHOUT_CLASSIFICATION	8.241641235790403E-9	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999998738183696	WITHOUT_CLASSIFICATION	1.261816304469675E-7	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999963726247258	WITHOUT_CLASSIFICATION	3.6273752741636418E-6	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999991703929696	WITHOUT_CLASSIFICATION	8.296070303555048E-7	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999991967348212	WITHOUT_CLASSIFICATION	8.032651789207097E-7	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999999962946978	WITHOUT_CLASSIFICATION	3.7053022216846153E-9	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999998812093653	WITHOUT_CLASSIFICATION	1.1879063467259814E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.999999886103096	WITHOUT_CLASSIFICATION	1.1389690399235496E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999999869587309	WITHOUT_CLASSIFICATION	1.3041268996140144E-8	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999984393519679	WITHOUT_CLASSIFICATION	1.5606480322569105E-6	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999865588548627	WITHOUT_CLASSIFICATION	1.3441145137276831E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999997218443913	WITHOUT_CLASSIFICATION	2.781556086744635E-7	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999999972762331	WITHOUT_CLASSIFICATION	2.7237668575207628E-9	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999998214154656	WITHOUT_CLASSIFICATION	1.785845343583566E-7	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999973417686	WITHOUT_CLASSIFICATION	2.6582313813389272E-9	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.999999281826755	WITHOUT_CLASSIFICATION	7.181732450775437E-7	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9870410186580569	WITHOUT_CLASSIFICATION	0.012958981341943105	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999997525497267	WITHOUT_CLASSIFICATION	2.4745027323641467E-7	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999978119556534	WITHOUT_CLASSIFICATION	2.1880443467184603E-6	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999998637704621	WITHOUT_CLASSIFICATION	1.3622953785558497E-7	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999999266197196	WITHOUT_CLASSIFICATION	7.338028037615127E-8	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999996462525527	WITHOUT_CLASSIFICATION	3.5374744733705903E-7	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9994012469915942	WITHOUT_CLASSIFICATION	5.987530084058251E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9948167563208602	WITHOUT_CLASSIFICATION	0.00518324367913976	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9996482995038056	WITHOUT_CLASSIFICATION	3.517004961943324E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999999911699541	WITHOUT_CLASSIFICATION	8.83004596233732E-9	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999216848469259	WITHOUT_CLASSIFICATION	7.831515307409031E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999994989745734	WITHOUT_CLASSIFICATION	5.010254266246846E-7	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999999944904508	WITHOUT_CLASSIFICATION	5.50954915101319E-9	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999999511086662	WITHOUT_CLASSIFICATION	4.889133365369922E-8	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999996626935369	WITHOUT_CLASSIFICATION	3.3730646307011106E-7	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999999998795501	WITHOUT_CLASSIFICATION	1.204497821036863E-10	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999999635207808	WITHOUT_CLASSIFICATION	3.647921919805435E-8	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999998245799027	WITHOUT_CLASSIFICATION	1.754200973557452E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999998215672239	WITHOUT_CLASSIFICATION	1.7843277600562938E-7	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999833503501095	WITHOUT_CLASSIFICATION	1.6649649890439247E-5	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.99999997930247	WITHOUT_CLASSIFICATION	2.06975299683926E-8	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999995719870071	WITHOUT_CLASSIFICATION	4.280129929491865E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998915573206	WITHOUT_CLASSIFICATION	1.0844267932072756E-7	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.999995325468948	WITHOUT_CLASSIFICATION	4.674531052014315E-6	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999998536296276	WITHOUT_CLASSIFICATION	1.4637037238420113E-7	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999995821951	WITHOUT_CLASSIFICATION	4.1780494360434887E-10	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999985539663689	WITHOUT_CLASSIFICATION	1.446033631016243E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999998801292059	WITHOUT_CLASSIFICATION	1.1987079410584529E-7	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999999954713816	WITHOUT_CLASSIFICATION	4.5286184046302605E-9	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999880584301443	WITHOUT_CLASSIFICATION	1.1941569855699654E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999999544093032	WITHOUT_CLASSIFICATION	4.559069672139306E-8	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999996718512338	WITHOUT_CLASSIFICATION	3.2814876615990553E-7	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9982123919592657	WITHOUT_CLASSIFICATION	0.0017876080407343983	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999999133138344	WITHOUT_CLASSIFICATION	8.668616560183523E-8	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999661081640728	WITHOUT_CLASSIFICATION	3.389183592724153E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999993823963125	WITHOUT_CLASSIFICATION	6.176036874288148E-7	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999991152462411	WITHOUT_CLASSIFICATION	8.847537589447241E-7	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999999999999907	WITHOUT_CLASSIFICATION	9.339953001217343E-15	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9986539272469598	WITHOUT_CLASSIFICATION	0.0013460727530402081	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999999433072445	WITHOUT_CLASSIFICATION	5.6692755502828226E-8	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999999796644297	WITHOUT_CLASSIFICATION	2.03355703720223E-8	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9997358680228656	WITHOUT_CLASSIFICATION	2.641319771343903E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999925656145542	WITHOUT_CLASSIFICATION	7.434385445805716E-6	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999997185647574	WITHOUT_CLASSIFICATION	2.814352426082848E-7	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999946666300126	WITHOUT_CLASSIFICATION	5.333369987381593E-6	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999999996069189	WITHOUT_CLASSIFICATION	3.930811807023443E-10	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999972859283686	WITHOUT_CLASSIFICATION	2.714071631477259E-6	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9998141654789205	WITHOUT_CLASSIFICATION	1.8583452107952627E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999981811173967	WITHOUT_CLASSIFICATION	1.8188826033993207E-6	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999993999913883	WITHOUT_CLASSIFICATION	6.000086116525066E-7	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999995525539236	WITHOUT_CLASSIFICATION	4.474460764899655E-7	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.999998880162785	WITHOUT_CLASSIFICATION	1.1198372150039741E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999998928651771	WITHOUT_CLASSIFICATION	1.0713482287481637E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999985155718493	WITHOUT_CLASSIFICATION	1.4844281506718392E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999990566710087	WITHOUT_CLASSIFICATION	9.433289913915446E-7	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999990566710087	WITHOUT_CLASSIFICATION	9.433289913915446E-7	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999998577492245	WITHOUT_CLASSIFICATION	1.422507754093185E-7	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999999098600618	WITHOUT_CLASSIFICATION	9.013993815822193E-8	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999998384617472	WITHOUT_CLASSIFICATION	1.61538252815811E-7	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999999244391896	WITHOUT_CLASSIFICATION	7.55608104502795E-8	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999999918913189	WITHOUT_CLASSIFICATION	8.108681119152026E-9	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999999474689004	WITHOUT_CLASSIFICATION	5.253109962665502E-8	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999991772447657	WITHOUT_CLASSIFICATION	8.227552342580722E-7	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999996096550043	WITHOUT_CLASSIFICATION	3.903449955754857E-7	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999992229517525	WITHOUT_CLASSIFICATION	7.770482474849276E-7	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999999376872224	WITHOUT_CLASSIFICATION	6.231277754354771E-8	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999999599018382	WITHOUT_CLASSIFICATION	4.00981617702524E-8	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999999994600073	WITHOUT_CLASSIFICATION	5.399928284976305E-10	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999993217739247	WITHOUT_CLASSIFICATION	6.782260752173752E-7	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999994620041072	WITHOUT_CLASSIFICATION	5.379958927579315E-7	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999992712129211	WITHOUT_CLASSIFICATION	7.287870788087127E-7	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999997787174436	WITHOUT_CLASSIFICATION	2.2128255625227695E-7	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999997037241938	WITHOUT_CLASSIFICATION	2.962758062059584E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999898680242781	WITHOUT_CLASSIFICATION	1.0131975721854734E-5	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.999999946346749	WITHOUT_CLASSIFICATION	5.365325094276987E-8	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999994973117775	WITHOUT_CLASSIFICATION	5.026882224481932E-7	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999997615910055	WITHOUT_CLASSIFICATION	2.3840899451584244E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999845075880468	WITHOUT_CLASSIFICATION	1.549241195326839E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999988478455584	WITHOUT_CLASSIFICATION	1.1521544416774252E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999999928441653	WITHOUT_CLASSIFICATION	7.155834636426084E-9	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999993265597285	WITHOUT_CLASSIFICATION	6.734402714690728E-7	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999999803568809	WITHOUT_CLASSIFICATION	1.964311912662776E-8	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999996655146075	WITHOUT_CLASSIFICATION	3.3448539244013927E-7	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.999999666626869	WITHOUT_CLASSIFICATION	3.3337313095995414E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999998109725482	WITHOUT_CLASSIFICATION	1.8902745183030774E-7	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999997558447178	WITHOUT_CLASSIFICATION	2.4415528224814266E-7	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999987379249121	WITHOUT_CLASSIFICATION	1.2620750878633221E-6	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999983613772763	WITHOUT_CLASSIFICATION	1.6386227236387495E-6	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999779777882992	WITHOUT_CLASSIFICATION	2.2022211700799242E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999952948437709	WITHOUT_CLASSIFICATION	4.705156229063866E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.999994133291243	WITHOUT_CLASSIFICATION	5.866708757072731E-6	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999934730874664	WITHOUT_CLASSIFICATION	6.526912533452796E-6	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999936728335852	WITHOUT_CLASSIFICATION	6.327166414883794E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999998109725482	WITHOUT_CLASSIFICATION	1.8902745183030774E-7	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999999588694594	WITHOUT_CLASSIFICATION	4.113054070820314E-8	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999996616986229	WITHOUT_CLASSIFICATION	3.3830137710538866E-7	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999995217150904	WITHOUT_CLASSIFICATION	4.782849095095663E-7	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9999226498682748	WITHOUT_CLASSIFICATION	7.735013172510723E-5	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999906141386558	WITHOUT_CLASSIFICATION	9.385861344229483E-6	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999983231844073	WITHOUT_CLASSIFICATION	1.6768155927123075E-6	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999991579889674	WITHOUT_CLASSIFICATION	8.420110325775132E-7	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999934063763636	WITHOUT_CLASSIFICATION	6.593623636393734E-6	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999992607458119	WITHOUT_CLASSIFICATION	7.392541881047032E-7	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999997265949798	WITHOUT_CLASSIFICATION	2.7340502019561156E-7	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999987036890128	WITHOUT_CLASSIFICATION	1.296310987170935E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999997681805997	WITHOUT_CLASSIFICATION	2.3181940024696295E-7	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999997517354072	WITHOUT_CLASSIFICATION	2.482645928031548E-7	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9999804662495605	WITHOUT_CLASSIFICATION	1.953375043953999E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999995885081092	WITHOUT_CLASSIFICATION	4.114918908398735E-7	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9998983497910425	WITHOUT_CLASSIFICATION	1.0165020895739509E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9998983497910425	WITHOUT_CLASSIFICATION	1.0165020895739509E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.998411119530134	WITHOUT_CLASSIFICATION	0.0015888804698660016	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9999237886297948	WITHOUT_CLASSIFICATION	7.621137020528577E-5	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999924867166302	WITHOUT_CLASSIFICATION	7.513283369781547E-6	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.999976978680273	WITHOUT_CLASSIFICATION	2.30213197270482E-5	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999892204361	WITHOUT_CLASSIFICATION	1.0779563905898778E-8	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999993268877557	WITHOUT_CLASSIFICATION	6.731122441551651E-7	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999991505395482	WITHOUT_CLASSIFICATION	8.494604517216688E-7	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999949140575172	WITHOUT_CLASSIFICATION	5.085942482789933E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999056970461047	WITHOUT_CLASSIFICATION	9.430295389533275E-5	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999995895669326	WITHOUT_CLASSIFICATION	4.104330674356319E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999998658750643	WITHOUT_CLASSIFICATION	1.3412493563566132E-7	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.999234376760725	WITHOUT_CLASSIFICATION	7.656232392748646E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.99999999998044	WITHOUT_CLASSIFICATION	1.956001422346151E-11	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989903426472	WITHOUT_CLASSIFICATION	1.0096573528107034E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989903426472	WITHOUT_CLASSIFICATION	1.0096573528107034E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999924867166302	WITHOUT_CLASSIFICATION	7.513283369781547E-6	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999998658750643	WITHOUT_CLASSIFICATION	1.3412493563566132E-7	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999979962523551	WITHOUT_CLASSIFICATION	2.0037476449947453E-6	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9999446194964035	WITHOUT_CLASSIFICATION	5.538050359654013E-5	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9991872189207199	WITHOUT_CLASSIFICATION	8.127810792800986E-4	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9999772537459392	WITHOUT_CLASSIFICATION	2.2746254060859877E-5	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9998244214946529	WITHOUT_CLASSIFICATION	1.7557850534715864E-4	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999966370546253	WITHOUT_CLASSIFICATION	3.362945374677566E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9998864778299584	WITHOUT_CLASSIFICATION	1.1352217004157307E-4	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999999682967328	WITHOUT_CLASSIFICATION	3.1703267152826844E-8	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.999999999793764	WITHOUT_CLASSIFICATION	2.062359265450961E-10	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999992033813945	WITHOUT_CLASSIFICATION	7.96618605379765E-7	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999215197095598	WITHOUT_CLASSIFICATION	7.848029044016109E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9996950607423049	WITHOUT_CLASSIFICATION	3.049392576951183E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999966363872846	WITHOUT_CLASSIFICATION	3.3636127152970607E-6	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.999992250674736	WITHOUT_CLASSIFICATION	7.749325264038076E-6	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999991730821991	WITHOUT_CLASSIFICATION	8.269178007841779E-7	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999981181775487	WITHOUT_CLASSIFICATION	1.8818224512869396E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.999998416961698	WITHOUT_CLASSIFICATION	1.5830383019431238E-6	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999997934208908	WITHOUT_CLASSIFICATION	2.0657910906295505E-7	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999988677932632	WITHOUT_CLASSIFICATION	1.132206736799022E-6	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999999668554198	WITHOUT_CLASSIFICATION	3.314458027739267E-8	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9966497399978241	WITHOUT_CLASSIFICATION	0.003350260002175915	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999996025734946	WITHOUT_CLASSIFICATION	3.9742650541509946E-7	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9815928452137189	WITHOUT_CLASSIFICATION	0.018407154786281056	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999967332634654	WITHOUT_CLASSIFICATION	3.266736534538317E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999999356742	WITHOUT_CLASSIFICATION	6.432575251375583E-11	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999243570188	WITHOUT_CLASSIFICATION	7.564298128261021E-8	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999998122243579	WITHOUT_CLASSIFICATION	1.877756422514282E-7	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999956699204346	WITHOUT_CLASSIFICATION	4.33007956535681E-6	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999999759433297	WITHOUT_CLASSIFICATION	2.4056670325032114E-8	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999998120055008	WITHOUT_CLASSIFICATION	1.8799449915478804E-7	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9998696661927504	WITHOUT_CLASSIFICATION	1.303338072494862E-4	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999992331707274	WITHOUT_CLASSIFICATION	7.668292726154928E-7	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999999904886416	WITHOUT_CLASSIFICATION	9.511358423452327E-9	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999999963801426	WITHOUT_CLASSIFICATION	3.6198574682563095E-9	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999999951042629	WITHOUT_CLASSIFICATION	4.895737149336161E-9	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999890881668222	WITHOUT_CLASSIFICATION	1.091183317783615E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999999835183352	WITHOUT_CLASSIFICATION	1.6481664770578146E-8	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999999976611671	WITHOUT_CLASSIFICATION	2.3388328876883608E-9	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999999709627458	WITHOUT_CLASSIFICATION	2.9037254176687733E-8	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999999948594995	WITHOUT_CLASSIFICATION	5.140500437165827E-9	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999999761150287	WITHOUT_CLASSIFICATION	2.38849713013906E-8	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999999935681553	WITHOUT_CLASSIFICATION	6.43184473577602E-9	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999991087957342	WITHOUT_CLASSIFICATION	8.912042657910604E-7	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999999971025061	WITHOUT_CLASSIFICATION	2.8974939376311825E-9	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999890203116278	WITHOUT_CLASSIFICATION	1.0979688372138072E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999963100409637	WITHOUT_CLASSIFICATION	3.689959036372528E-6	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9999881199520028	WITHOUT_CLASSIFICATION	1.188004799715711E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950315	WITHOUT_CLASSIFICATION	2.60496841343918E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912323	WITHOUT_CLASSIFICATION	6.709087675935197E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999997884921682	WITHOUT_CLASSIFICATION	2.1150783180706203E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570522356	WITHOUT_CLASSIFICATION	3.429477643526695E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999962201949	WITHOUT_CLASSIFICATION	3.77980514919252E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.999999997015916	WITHOUT_CLASSIFICATION	2.9840840812389407E-9	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999979182944523	WITHOUT_CLASSIFICATION	2.081705547678708E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879518	WITHOUT_CLASSIFICATION	3.5212048276077426E-8	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999929610596425	WITHOUT_CLASSIFICATION	7.038940357463697E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999008205082	WITHOUT_CLASSIFICATION	9.917949185696776E-8	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999987406456295	WITHOUT_CLASSIFICATION	1.259354370493958E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999966641965486	WITHOUT_CLASSIFICATION	3.335803451363349E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999687702921225	WITHOUT_CLASSIFICATION	3.1229707877555186E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999933269911	WITHOUT_CLASSIFICATION	6.673008989772304E-9	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999995321344667	WITHOUT_CLASSIFICATION	4.6786553330963624E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999998043023158	WITHOUT_CLASSIFICATION	1.9569768415657232E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999940977187	WITHOUT_CLASSIFICATION	5.902281384744837E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999454292875	WITHOUT_CLASSIFICATION	5.457071250937175E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999993083257463	WITHOUT_CLASSIFICATION	6.916742535674757E-7	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999620944862455	WITHOUT_CLASSIFICATION	3.790551375454629E-5	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9999702563616475	WITHOUT_CLASSIFICATION	2.9743638352383448E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999822012119923	WITHOUT_CLASSIFICATION	1.779878800766384E-5	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.99996244021507	WITHOUT_CLASSIFICATION	3.7559784929977946E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999977366799729	WITHOUT_CLASSIFICATION	2.2633200271422777E-6	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999977366799729	WITHOUT_CLASSIFICATION	2.2633200271422777E-6	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.999982051207738	WITHOUT_CLASSIFICATION	1.7948792262035973E-5	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.999989228843892	WITHOUT_CLASSIFICATION	1.0771156108101125E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999927227827875	WITHOUT_CLASSIFICATION	7.277217212497383E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843238798	WITHOUT_CLASSIFICATION	7.91567612013261E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843238798	WITHOUT_CLASSIFICATION	7.91567612013261E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843238798	WITHOUT_CLASSIFICATION	7.91567612013261E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999879455110813	WITHOUT_CLASSIFICATION	1.205448891872026E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821717	WITHOUT_CLASSIFICATION	2.2717828323686785E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628456398	WITHOUT_CLASSIFICATION	1.371543601504139E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366022518	WITHOUT_CLASSIFICATION	4.633977481386441E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998303365498	WITHOUT_CLASSIFICATION	1.696634501017194E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999986042786788	WITHOUT_CLASSIFICATION	1.3957213212486414E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999999955598	WITHOUT_CLASSIFICATION	4.4401566591724665E-12	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999999243570188	WITHOUT_CLASSIFICATION	7.564298128261021E-8	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998915573206	WITHOUT_CLASSIFICATION	1.0844267932072756E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999993823963125	WITHOUT_CLASSIFICATION	6.176036874288148E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950315	WITHOUT_CLASSIFICATION	2.60496841343918E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912323	WITHOUT_CLASSIFICATION	6.709087675935197E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999997884921682	WITHOUT_CLASSIFICATION	2.1150783180706203E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999996570522356	WITHOUT_CLASSIFICATION	3.429477643526695E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999647879518	WITHOUT_CLASSIFICATION	3.5212048276077426E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999966641965486	WITHOUT_CLASSIFICATION	3.335803451363349E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999687702921225	WITHOUT_CLASSIFICATION	3.1229707877555186E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999933269911	WITHOUT_CLASSIFICATION	6.673008989772304E-9	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999835852857	WITHOUT_CLASSIFICATION	1.6414714307927585E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999847047666	WITHOUT_CLASSIFICATION	1.529523346515792E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999977963919167	WITHOUT_CLASSIFICATION	2.2036080833120996E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999092317258	WITHOUT_CLASSIFICATION	9.076827428439434E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999477198585676	WITHOUT_CLASSIFICATION	5.228014143250537E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999970057653237	WITHOUT_CLASSIFICATION	2.9942346762587678E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999886970440858	WITHOUT_CLASSIFICATION	1.1302955914250526E-5	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999996424089267	WITHOUT_CLASSIFICATION	3.575910733282535E-7	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9999476652380656	WITHOUT_CLASSIFICATION	5.233476193449495E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9999170829824746	WITHOUT_CLASSIFICATION	8.291701752538577E-5	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9998427637027424	WITHOUT_CLASSIFICATION	1.5723629725756616E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999578028279003	WITHOUT_CLASSIFICATION	4.21971720997557E-5	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999998347223583	WITHOUT_CLASSIFICATION	1.6527764160613704E-7	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999999594072182	WITHOUT_CLASSIFICATION	4.059278182958592E-8	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9999488316589884	WITHOUT_CLASSIFICATION	5.116834101152309E-5	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999883073808317	WITHOUT_CLASSIFICATION	1.169261916833301E-5	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9998757774221457	WITHOUT_CLASSIFICATION	1.2422257785424495E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9998582367575297	WITHOUT_CLASSIFICATION	1.4176324247018978E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9998158632240626	WITHOUT_CLASSIFICATION	1.8413677593745928E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999969226005314	WITHOUT_CLASSIFICATION	3.0773994685658258E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999994256725128	WITHOUT_CLASSIFICATION	5.743274872265985E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999987406456295	WITHOUT_CLASSIFICATION	1.259354370493958E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999940977187	WITHOUT_CLASSIFICATION	5.902281384744837E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999454292875	WITHOUT_CLASSIFICATION	5.457071250937175E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999993083257463	WITHOUT_CLASSIFICATION	6.916742535674757E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999847047666	WITHOUT_CLASSIFICATION	1.529523346515792E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999977963919167	WITHOUT_CLASSIFICATION	2.2036080833120996E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999092317258	WITHOUT_CLASSIFICATION	9.076827428439434E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999477198585676	WITHOUT_CLASSIFICATION	5.228014143250537E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999970057653237	WITHOUT_CLASSIFICATION	2.9942346762587678E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999952943572	WITHOUT_CLASSIFICATION	4.705642808361988E-9	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9976675823497752	WITHOUT_CLASSIFICATION	0.00233241765022488	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.99999715528378	WITHOUT_CLASSIFICATION	2.8447162199415285E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999874414801205	WITHOUT_CLASSIFICATION	1.255851987946991E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999874414801205	WITHOUT_CLASSIFICATION	1.255851987946991E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999874414801205	WITHOUT_CLASSIFICATION	1.255851987946991E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999874414801205	WITHOUT_CLASSIFICATION	1.255851987946991E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999874414801205	WITHOUT_CLASSIFICATION	1.255851987946991E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999944339227607	WITHOUT_CLASSIFICATION	5.566077239393221E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999958301281	WITHOUT_CLASSIFICATION	4.169871905474163E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999958301281	WITHOUT_CLASSIFICATION	4.169871905474163E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999958301281	WITHOUT_CLASSIFICATION	4.169871905474163E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999958301281	WITHOUT_CLASSIFICATION	4.169871905474163E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999958301281	WITHOUT_CLASSIFICATION	4.169871905474163E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999999958301281	WITHOUT_CLASSIFICATION	4.169871905474163E-8	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.99999970969936	WITHOUT_CLASSIFICATION	2.9030063993193195E-7	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999898414730864	WITHOUT_CLASSIFICATION	1.01585269134762E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.999999918445551	WITHOUT_CLASSIFICATION	8.155444894227035E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999995972495964	WITHOUT_CLASSIFICATION	4.027504035392643E-7	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.999999818619228	WITHOUT_CLASSIFICATION	1.8138077189995339E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996077055999	WITHOUT_CLASSIFICATION	3.922944000212346E-7	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999967770084217	WITHOUT_CLASSIFICATION	3.2229915783795525E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999951632830187	WITHOUT_CLASSIFICATION	4.8367169812441194E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999951632830187	WITHOUT_CLASSIFICATION	4.8367169812441194E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999951632830187	WITHOUT_CLASSIFICATION	4.8367169812441194E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.999997930534048	WITHOUT_CLASSIFICATION	2.069465951950414E-6	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999733537559884	WITHOUT_CLASSIFICATION	2.6646244011663562E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.999965893400329	WITHOUT_CLASSIFICATION	3.4106599671071136E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999412602970531	WITHOUT_CLASSIFICATION	5.873970294698649E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999412602970531	WITHOUT_CLASSIFICATION	5.873970294698649E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999995689173458	WITHOUT_CLASSIFICATION	4.3108265422192534E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999412602970531	WITHOUT_CLASSIFICATION	5.873970294698649E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999963305769672	WITHOUT_CLASSIFICATION	3.6694230327983295E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999884929765871	WITHOUT_CLASSIFICATION	1.1507023412899969E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999964837114754	WITHOUT_CLASSIFICATION	3.516288524601969E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999973768775766	WITHOUT_CLASSIFICATION	2.6231224233856677E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999973768775766	WITHOUT_CLASSIFICATION	2.6231224233856677E-6	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999990930045405	WITHOUT_CLASSIFICATION	9.069954594601358E-7	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999964902638181	WITHOUT_CLASSIFICATION	3.509736181895653E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348388268	WITHOUT_CLASSIFICATION	1.0865161173227786E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348388268	WITHOUT_CLASSIFICATION	1.0865161173227786E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999891348388268	WITHOUT_CLASSIFICATION	1.0865161173227786E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.999809303908531	WITHOUT_CLASSIFICATION	1.9069609146917045E-4	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9999779783420626	WITHOUT_CLASSIFICATION	2.2021657937426073E-5	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999987159142991	WITHOUT_CLASSIFICATION	1.2840857009460548E-6	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999993380354035	WITHOUT_CLASSIFICATION	6.619645965247654E-7	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999986783477117	WITHOUT_CLASSIFICATION	1.321652288186273E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999993567626133	WITHOUT_CLASSIFICATION	6.432373867137396E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999877952092193	WITHOUT_CLASSIFICATION	1.2204790780654888E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999998143591274	WITHOUT_CLASSIFICATION	1.8564087254603148E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999877952092193	WITHOUT_CLASSIFICATION	1.2204790780654888E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999879455110813	WITHOUT_CLASSIFICATION	1.205448891872026E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843238798	WITHOUT_CLASSIFICATION	7.91567612013261E-6	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999805158232	WITHOUT_CLASSIFICATION	1.9484176787308016E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999994960346615	WITHOUT_CLASSIFICATION	5.0396533850664125E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.99998686103149	WITHOUT_CLASSIFICATION	1.3138968509886524E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999922057710204	WITHOUT_CLASSIFICATION	7.794228979680882E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999879455110813	WITHOUT_CLASSIFICATION	1.205448891872026E-5	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999886820530779	WITHOUT_CLASSIFICATION	1.1317946922118435E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999447241025	WITHOUT_CLASSIFICATION	5.527589749821161E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999999217409068	WITHOUT_CLASSIFICATION	7.825909315232917E-8	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999978588903384	WITHOUT_CLASSIFICATION	2.141109661623023E-6	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999912861452732	WITHOUT_CLASSIFICATION	8.713854726765906E-6	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999912861452732	WITHOUT_CLASSIFICATION	8.713854726765906E-6	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999988392453478	WITHOUT_CLASSIFICATION	1.1607546521848558E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999999999988983	WITHOUT_CLASSIFICATION	1.1016070753607222E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999999979795	WITHOUT_CLASSIFICATION	2.0205257298812227E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999999999622073	WITHOUT_CLASSIFICATION	3.779256088040064E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999859538	WITHOUT_CLASSIFICATION	1.404617957575866E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999999981398	WITHOUT_CLASSIFICATION	1.8601409593319826E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.99999999999688	WITHOUT_CLASSIFICATION	3.119905252337676E-12	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.999999378395738	WITHOUT_CLASSIFICATION	6.21604262037681E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999997500425833	WITHOUT_CLASSIFICATION	2.4995741669885E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998580380773	WITHOUT_CLASSIFICATION	1.4196192264231863E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998559721962	WITHOUT_CLASSIFICATION	1.4402780372134877E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.999999981249899	WITHOUT_CLASSIFICATION	1.8750101068102483E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.999999999943545	WITHOUT_CLASSIFICATION	5.64549715695568E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999897451594	WITHOUT_CLASSIFICATION	1.025484064972967E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999450279177	WITHOUT_CLASSIFICATION	5.497208237123382E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999999999571	WITHOUT_CLASSIFICATION	4.290427685313796E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999993949	WITHOUT_CLASSIFICATION	6.050987463063527E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999999713083	WITHOUT_CLASSIFICATION	2.8691646298015277E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999998735917	WITHOUT_CLASSIFICATION	1.2640833939614355E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999999015087	WITHOUT_CLASSIFICATION	9.849134604153468E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999994316	WITHOUT_CLASSIFICATION	5.68535426482913E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999730679	WITHOUT_CLASSIFICATION	2.6932020404979185E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999999999571	WITHOUT_CLASSIFICATION	4.290427685313796E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999998799063	WITHOUT_CLASSIFICATION	1.200936607375054E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999995658	WITHOUT_CLASSIFICATION	4.342416509332466E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999999727416	WITHOUT_CLASSIFICATION	2.7258366441309634E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999999775206	WITHOUT_CLASSIFICATION	2.24793475063067E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999953799	WITHOUT_CLASSIFICATION	4.620154674235998E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999353908	WITHOUT_CLASSIFICATION	6.460917884401936E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.999999999987266	WITHOUT_CLASSIFICATION	1.2734043914499183E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999856467	WITHOUT_CLASSIFICATION	1.4353373288010228E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999994826	WITHOUT_CLASSIFICATION	5.174114346674812E-13	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999965282958795	WITHOUT_CLASSIFICATION	3.4717041204152938E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999965282958795	WITHOUT_CLASSIFICATION	3.4717041204152938E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999994316	WITHOUT_CLASSIFICATION	5.68535426482913E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999999910735	WITHOUT_CLASSIFICATION	8.926464182063076E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999998399	WITHOUT_CLASSIFICATION	1.600784461734749E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999999999815674	WITHOUT_CLASSIFICATION	1.8432623187309027E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999999999850491	WITHOUT_CLASSIFICATION	1.495088094225185E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999981597895	WITHOUT_CLASSIFICATION	1.8402104808875278E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999920241963	WITHOUT_CLASSIFICATION	7.975803678652336E-9	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999999550727139	WITHOUT_CLASSIFICATION	4.4927286109978124E-8	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999999944136764	WITHOUT_CLASSIFICATION	5.586323639910596E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999851156982	WITHOUT_CLASSIFICATION	1.4884301841965686E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.999999934763465	WITHOUT_CLASSIFICATION	6.523653504188504E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999999601868	WITHOUT_CLASSIFICATION	3.98130338271502E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998560767852	WITHOUT_CLASSIFICATION	1.4392321467755004E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999874864509	WITHOUT_CLASSIFICATION	1.2513549189878625E-8	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999999999953333	WITHOUT_CLASSIFICATION	4.666682728096112E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999999955598	WITHOUT_CLASSIFICATION	4.4401566591724665E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999999462	WITHOUT_CLASSIFICATION	5.38836178008569E-14	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999999999832112	WITHOUT_CLASSIFICATION	1.678889633145206E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999995460750015	WITHOUT_CLASSIFICATION	4.539249984670657E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.999999900782709	WITHOUT_CLASSIFICATION	9.921729097767906E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999999462	WITHOUT_CLASSIFICATION	5.38836178008569E-14	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999999997428789	WITHOUT_CLASSIFICATION	2.5712118531048467E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999725729	WITHOUT_CLASSIFICATION	2.7427062649645335E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999548328	WITHOUT_CLASSIFICATION	4.5167285398640446E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999999997345939	WITHOUT_CLASSIFICATION	2.6540618521114755E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999999995670182	WITHOUT_CLASSIFICATION	4.329817620970292E-10	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999861687945929	WITHOUT_CLASSIFICATION	1.383120540721164E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999861687945929	WITHOUT_CLASSIFICATION	1.383120540721164E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999861687945929	WITHOUT_CLASSIFICATION	1.383120540721164E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999861687945929	WITHOUT_CLASSIFICATION	1.383120540721164E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999861687945929	WITHOUT_CLASSIFICATION	1.383120540721164E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999861687945929	WITHOUT_CLASSIFICATION	1.383120540721164E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.99999979058506	WITHOUT_CLASSIFICATION	2.0941493988735028E-7	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999994802131232	WITHOUT_CLASSIFICATION	5.197868768213738E-7	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999564473106202	WITHOUT_CLASSIFICATION	4.3552689379914555E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.999998419049569	WITHOUT_CLASSIFICATION	1.580950431120975E-6	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999999939530564	WITHOUT_CLASSIFICATION	6.046943664564371E-9	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999990618689029	WITHOUT_CLASSIFICATION	9.381310971881566E-7	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999993690765	WITHOUT_CLASSIFICATION	6.309234110138742E-10	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999986662958833	WITHOUT_CLASSIFICATION	1.3337041167159956E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9968252544189101	WITHOUT_CLASSIFICATION	0.0031747455810897905	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999903094252265	WITHOUT_CLASSIFICATION	9.69057477341453E-6	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999999765569884	WITHOUT_CLASSIFICATION	2.3443011599282206E-8	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.999981108506583	WITHOUT_CLASSIFICATION	1.8891493417073075E-5	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.999999995904653	WITHOUT_CLASSIFICATION	4.095346945258489E-9	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999997761852348	WITHOUT_CLASSIFICATION	2.2381476524131446E-7	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999999889131074	WITHOUT_CLASSIFICATION	1.108689261952952E-8	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999989644050713	WITHOUT_CLASSIFICATION	1.0355949287461487E-6	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999997399085547	WITHOUT_CLASSIFICATION	2.6009144535055453E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999466132553	WITHOUT_CLASSIFICATION	5.338674463738026E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999466132553	WITHOUT_CLASSIFICATION	5.338674463738026E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999466132553	WITHOUT_CLASSIFICATION	5.338674463738026E-8	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999700901354	WITHOUT_CLASSIFICATION	2.990986459640194E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999997495112701	WITHOUT_CLASSIFICATION	2.504887299359663E-7	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999999341887587	WITHOUT_CLASSIFICATION	6.581124128691844E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821717	WITHOUT_CLASSIFICATION	2.2717828323686785E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821717	WITHOUT_CLASSIFICATION	2.2717828323686785E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999772821717	WITHOUT_CLASSIFICATION	2.2717828323686785E-8	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9852462050607759	WITHOUT_CLASSIFICATION	0.014753794939224215	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998628456398	WITHOUT_CLASSIFICATION	1.371543601504139E-7	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999999999554767	WITHOUT_CLASSIFICATION	4.4523227884344163E-11	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366022518	WITHOUT_CLASSIFICATION	4.633977481386441E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995366022518	WITHOUT_CLASSIFICATION	4.633977481386441E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999777170047534	WITHOUT_CLASSIFICATION	2.2282995246673094E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998303365498	WITHOUT_CLASSIFICATION	1.696634501017194E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998303365498	WITHOUT_CLASSIFICATION	1.696634501017194E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998303365498	WITHOUT_CLASSIFICATION	1.696634501017194E-7	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9997751143847462	WITHOUT_CLASSIFICATION	2.248856152538395E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998201479904	WITHOUT_CLASSIFICATION	1.7985200957516774E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999999685801163	WITHOUT_CLASSIFICATION	3.1419883752756604E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999877952092193	WITHOUT_CLASSIFICATION	1.2204790780654888E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999877952092193	WITHOUT_CLASSIFICATION	1.2204790780654888E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999864440717469	WITHOUT_CLASSIFICATION	1.3555928253190943E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999986042786788	WITHOUT_CLASSIFICATION	1.3957213212486414E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999986042786788	WITHOUT_CLASSIFICATION	1.3957213212486414E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999963726247258	WITHOUT_CLASSIFICATION	3.6273752741636418E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950315	WITHOUT_CLASSIFICATION	2.60496841343918E-9	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999973950315	WITHOUT_CLASSIFICATION	2.60496841343918E-9	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.999694829409352	WITHOUT_CLASSIFICATION	3.051705906480907E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999993290912323	WITHOUT_CLASSIFICATION	6.709087675935197E-7	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999983034558045	WITHOUT_CLASSIFICATION	1.6965441954986387E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999997884921682	WITHOUT_CLASSIFICATION	2.1150783180706203E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999999735020788	WITHOUT_CLASSIFICATION	2.6497921150665292E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999877952092193	WITHOUT_CLASSIFICATION	1.2204790780654888E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999920843238798	WITHOUT_CLASSIFICATION	7.91567612013261E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999979182944523	WITHOUT_CLASSIFICATION	2.081705547678708E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999979182944523	WITHOUT_CLASSIFICATION	2.081705547678708E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999979182944523	WITHOUT_CLASSIFICATION	2.081705547678708E-6	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999999675357908	WITHOUT_CLASSIFICATION	3.2464209211156045E-8	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999997575297051	WITHOUT_CLASSIFICATION	2.4247029489506072E-6	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999992627980201	WITHOUT_CLASSIFICATION	7.372019799436149E-7	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999997702397058	WITHOUT_CLASSIFICATION	2.2976029419778976E-7	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999997702397058	WITHOUT_CLASSIFICATION	2.2976029419778976E-7	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999995168783153	WITHOUT_CLASSIFICATION	4.831216847018263E-7	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999699386792067	WITHOUT_CLASSIFICATION	3.0061320793257618E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999999876609966	WITHOUT_CLASSIFICATION	1.2339003370266635E-8	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999986558544748	WITHOUT_CLASSIFICATION	1.344145525192075E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999998928651771	WITHOUT_CLASSIFICATION	1.0713482287481637E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999998928651771	WITHOUT_CLASSIFICATION	1.0713482287481637E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997636120011971	WITHOUT_CLASSIFICATION	2.3638799880279157E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997636120011971	WITHOUT_CLASSIFICATION	2.3638799880279157E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999998577492245	WITHOUT_CLASSIFICATION	1.422507754093185E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999990831823069	WITHOUT_CLASSIFICATION	9.168176930242709E-7	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999992569965075	WITHOUT_CLASSIFICATION	7.430034924644369E-7	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999982042854241	WITHOUT_CLASSIFICATION	1.795714575897307E-6	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999998501069596	WITHOUT_CLASSIFICATION	1.49893040547889E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.999997904957429	WITHOUT_CLASSIFICATION	2.0950425708958702E-6	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.999997904957429	WITHOUT_CLASSIFICATION	2.0950425708958702E-6	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9997407643714918	WITHOUT_CLASSIFICATION	2.5923562850820747E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999996890139	WITHOUT_CLASSIFICATION	3.109861404097339E-10	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999999901656714	WITHOUT_CLASSIFICATION	9.834328496216436E-9	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999999976019808	WITHOUT_CLASSIFICATION	2.3980192199216265E-9	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999998109725482	WITHOUT_CLASSIFICATION	1.8902745183030774E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999991617212534	WITHOUT_CLASSIFICATION	8.382787467733605E-7	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9982238239699783	WITHOUT_CLASSIFICATION	0.0017761760300217457	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999999889126767	WITHOUT_CLASSIFICATION	1.1087323290944641E-8	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.998411119530134	WITHOUT_CLASSIFICATION	0.0015888804698660016	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999917791166023	WITHOUT_CLASSIFICATION	8.220883397825437E-6	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.999997936042808	WITHOUT_CLASSIFICATION	2.063957192017462E-6	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999983282372	WITHOUT_CLASSIFICATION	1.671762949341855E-9	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9960539269713482	WITHOUT_CLASSIFICATION	0.003946073028651719	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737640541	WITHOUT_CLASSIFICATION	3.126235945988918E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737640541	WITHOUT_CLASSIFICATION	3.126235945988918E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999968737640541	WITHOUT_CLASSIFICATION	3.126235945988918E-6	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999950938930047	WITHOUT_CLASSIFICATION	4.906106995282809E-6	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999988654437263	WITHOUT_CLASSIFICATION	1.1345562737436507E-6	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999999944722817	WITHOUT_CLASSIFICATION	5.527718199130143E-9	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999979962523551	WITHOUT_CLASSIFICATION	2.0037476449947453E-6	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.999998982143499	WITHOUT_CLASSIFICATION	1.0178565009710218E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999992492786886	WITHOUT_CLASSIFICATION	7.507213114875322E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999992492786886	WITHOUT_CLASSIFICATION	7.507213114875322E-7	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.999999827666031	WITHOUT_CLASSIFICATION	1.7233396896049897E-7	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9989683743418174	WITHOUT_CLASSIFICATION	0.0010316256581825486	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999992078589591	WITHOUT_CLASSIFICATION	7.921410408153654E-7	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999968716977901	WITHOUT_CLASSIFICATION	3.128302209887727E-6	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999998279225677	WITHOUT_CLASSIFICATION	1.720774323965742E-7	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999797039719103	WITHOUT_CLASSIFICATION	2.0296028089822203E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999826341876064	WITHOUT_CLASSIFICATION	1.7365812393671236E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999998329723733	WITHOUT_CLASSIFICATION	1.6702762673542627E-7	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999975762249288	WITHOUT_CLASSIFICATION	2.42377507111937E-6	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999999969864498	WITHOUT_CLASSIFICATION	3.0135502513426703E-9	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999823986283923	WITHOUT_CLASSIFICATION	1.76013716076541E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.999998192275353	WITHOUT_CLASSIFICATION	1.8077246470319918E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999928611454124	WITHOUT_CLASSIFICATION	7.138854587566959E-6	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.7854072001356354	WITHOUT_CLASSIFICATION	0.2145927998643646	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999980223728173	WITHOUT_CLASSIFICATION	1.9776271826187055E-6	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999996358544424	WITHOUT_CLASSIFICATION	3.6414555760756966E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999994361458675	WITHOUT_CLASSIFICATION	5.638541324908333E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999996005609242	WITHOUT_CLASSIFICATION	3.994390758909061E-7	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557917955	WITHOUT_CLASSIFICATION	9.144208204597132E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557917955	WITHOUT_CLASSIFICATION	9.144208204597132E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557917955	WITHOUT_CLASSIFICATION	9.144208204597132E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999908557917955	WITHOUT_CLASSIFICATION	9.144208204597132E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999999826515843	WITHOUT_CLASSIFICATION	1.7348415691223035E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999998708155656	WITHOUT_CLASSIFICATION	1.291844343399824E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999998708155656	WITHOUT_CLASSIFICATION	1.291844343399824E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999984766244098	WITHOUT_CLASSIFICATION	1.5233755903263295E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999997269181904	WITHOUT_CLASSIFICATION	2.730818096519824E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999999058930744	WITHOUT_CLASSIFICATION	9.410692562427501E-8	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999958664646	WITHOUT_CLASSIFICATION	4.133535389914532E-9	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999976993188204	WITHOUT_CLASSIFICATION	2.300681179618164E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999998986029638	WITHOUT_CLASSIFICATION	1.0139703622065557E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999902427302837	WITHOUT_CLASSIFICATION	9.757269716359957E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989903426472	WITHOUT_CLASSIFICATION	1.0096573528107034E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989903426472	WITHOUT_CLASSIFICATION	1.0096573528107034E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999989903426472	WITHOUT_CLASSIFICATION	1.0096573528107034E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999994167515942	WITHOUT_CLASSIFICATION	5.83248405766862E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998676483268	WITHOUT_CLASSIFICATION	1.3235167327089365E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9998256018273841	WITHOUT_CLASSIFICATION	1.7439817261588503E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999999868506654	WITHOUT_CLASSIFICATION	1.31493346009407E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999999868506654	WITHOUT_CLASSIFICATION	1.31493346009407E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999979669674	WITHOUT_CLASSIFICATION	2.0330326473189587E-9	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999499798199	WITHOUT_CLASSIFICATION	5.002018004549585E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999993964658261	WITHOUT_CLASSIFICATION	6.035341738090539E-7	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999806077072075	WITHOUT_CLASSIFICATION	1.939229279243898E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.999381272604178	WITHOUT_CLASSIFICATION	6.18727395822009E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999999985808342	WITHOUT_CLASSIFICATION	1.4191658058481392E-8	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999975758096199	WITHOUT_CLASSIFICATION	2.424190380070772E-6	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999999916649392	WITHOUT_CLASSIFICATION	8.335060696366886E-9	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999999964011785	WITHOUT_CLASSIFICATION	3.5988213903366674E-9	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999999296784171	WITHOUT_CLASSIFICATION	7.032158288517E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999827188614	WITHOUT_CLASSIFICATION	1.7281138660629793E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999724231622207	WITHOUT_CLASSIFICATION	2.7576837779245068E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999724231622207	WITHOUT_CLASSIFICATION	2.7576837779245068E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999038987761554	WITHOUT_CLASSIFICATION	9.610122384458673E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999638723816751	WITHOUT_CLASSIFICATION	3.612761832490674E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999638723816751	WITHOUT_CLASSIFICATION	3.612761832490674E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999974839099588	WITHOUT_CLASSIFICATION	2.5160900412575392E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999885771899	WITHOUT_CLASSIFICATION	1.142281008953919E-8	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999885771899	WITHOUT_CLASSIFICATION	1.142281008953919E-8	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999962927343	WITHOUT_CLASSIFICATION	3.7072658109036376E-9	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999994691104337	WITHOUT_CLASSIFICATION	5.308895663867035E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9997570476054837	WITHOUT_CLASSIFICATION	2.4295239451632434E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999929610596425	WITHOUT_CLASSIFICATION	7.038940357463697E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999929610596425	WITHOUT_CLASSIFICATION	7.038940357463697E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999915400657438	WITHOUT_CLASSIFICATION	8.459934256211044E-6	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999999691173241	WITHOUT_CLASSIFICATION	3.0882675785114374E-8	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9998854631707997	WITHOUT_CLASSIFICATION	1.1453682920030246E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9218909886291843	DEFECT	0.07810901137081566	WITHOUT_CLASSIFICATION
// EATM must fix isSet bits.	DEFECT	0.999999687141948	WITHOUT_CLASSIFICATION	3.128580520377725E-7	DEFECT
// EATM must fix isSet bits.	DEFECT	0.999999687141948	WITHOUT_CLASSIFICATION	3.128580520377725E-7	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9994301719865615	DEFECT	5.698280134385803E-4	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9999946582147984	WITHOUT_CLASSIFICATION	5.341785201684924E-6	DEFECT
// is this an error???	DEFECT	0.9999946582147984	WITHOUT_CLASSIFICATION	5.341785201684924E-6	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9999111518855145	WITHOUT_CLASSIFICATION	8.884811448551799E-5	DEFECT
