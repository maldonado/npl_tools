// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.99999965259731	WITHOUT_CLASSIFICATION	3.4740268998147504E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999932152891701	WITHOUT_CLASSIFICATION	6.784710829957839E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999996157033956	WITHOUT_CLASSIFICATION	3.84296604424617E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999993028125107	WITHOUT_CLASSIFICATION	6.97187489307523E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999977468374072	WITHOUT_CLASSIFICATION	2.2531625928622263E-6	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999998843527641	WITHOUT_CLASSIFICATION	1.156472360251142E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999908333284706	WITHOUT_CLASSIFICATION	9.166671529442869E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999947269459855	WITHOUT_CLASSIFICATION	5.273054014578966E-6	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999996676618026	WITHOUT_CLASSIFICATION	3.3233819741366976E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999924540612439	WITHOUT_CLASSIFICATION	7.545938756152118E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999996001613961	WITHOUT_CLASSIFICATION	3.998386039361668E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999806717775882	WITHOUT_CLASSIFICATION	1.9328222411798196E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999963447704864	WITHOUT_CLASSIFICATION	3.6552295136239787E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998357809436	WITHOUT_CLASSIFICATION	1.642190563556634E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999994825812802	WITHOUT_CLASSIFICATION	5.174187197392069E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999996336593896	WITHOUT_CLASSIFICATION	3.663406104031786E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999966669784741	WITHOUT_CLASSIFICATION	3.333021525868668E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999908333284706	WITHOUT_CLASSIFICATION	9.166671529442869E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999991030105972	WITHOUT_CLASSIFICATION	8.969894027816191E-7	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999991972194795	WITHOUT_CLASSIFICATION	8.027805203940967E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999998757852625	WITHOUT_CLASSIFICATION	1.2421473750690306E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999907479923025	WITHOUT_CLASSIFICATION	9.25200769753086E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999907479923025	WITHOUT_CLASSIFICATION	9.25200769753086E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999999584606941	WITHOUT_CLASSIFICATION	4.153930584083281E-8	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999980083572891	WITHOUT_CLASSIFICATION	1.9916427108766184E-6	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999897786548907	WITHOUT_CLASSIFICATION	1.0221345109380234E-5	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999907257045904	WITHOUT_CLASSIFICATION	9.274295409565909E-6	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999948978405286	WITHOUT_CLASSIFICATION	5.1021594714478145E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999961065810038	WITHOUT_CLASSIFICATION	3.893418996214277E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999808286118436	WITHOUT_CLASSIFICATION	1.917138815634311E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999992847117607	WITHOUT_CLASSIFICATION	7.15288239380613E-7	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993484855316	WITHOUT_CLASSIFICATION	6.515144683533778E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9994256208717217	WITHOUT_CLASSIFICATION	5.743791282781832E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999974010871737	WITHOUT_CLASSIFICATION	2.598912826197521E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999994940099985	WITHOUT_CLASSIFICATION	5.059900014171726E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999997405248418	WITHOUT_CLASSIFICATION	2.5947515820432076E-6	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999966873668337	WITHOUT_CLASSIFICATION	3.312633166462373E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999981154190659	WITHOUT_CLASSIFICATION	1.8845809341302982E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999944144038034	WITHOUT_CLASSIFICATION	5.585596196532593E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999964660885081	WITHOUT_CLASSIFICATION	3.533911491817911E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999982588860646	WITHOUT_CLASSIFICATION	1.741113935295585E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999949698615442	WITHOUT_CLASSIFICATION	5.0301384556884055E-6	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999979303040064	WITHOUT_CLASSIFICATION	2.0696959935887904E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999972690680896	WITHOUT_CLASSIFICATION	2.730931910407502E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999921022025172	WITHOUT_CLASSIFICATION	7.897797482848981E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999917897648689	WITHOUT_CLASSIFICATION	8.21023513117553E-6	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9995826668882721	WITHOUT_CLASSIFICATION	4.17333111727825E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999925731698809	WITHOUT_CLASSIFICATION	7.426830119116346E-6	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9995713072337501	WITHOUT_CLASSIFICATION	4.2869276625000073E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9997094401260269	WITHOUT_CLASSIFICATION	2.905598739730319E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999996106789246	WITHOUT_CLASSIFICATION	3.8932107544755546E-7	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9995826668882721	WITHOUT_CLASSIFICATION	4.17333111727825E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9997195631832664	WITHOUT_CLASSIFICATION	2.804368167335795E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9997808184994085	WITHOUT_CLASSIFICATION	2.191815005916127E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9997336767872804	WITHOUT_CLASSIFICATION	2.6632321271954603E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999043999621633	WITHOUT_CLASSIFICATION	9.560003783670379E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999049335240024	WITHOUT_CLASSIFICATION	9.506647599751093E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9998677192136478	WITHOUT_CLASSIFICATION	1.322807863521036E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999933251253962	WITHOUT_CLASSIFICATION	6.674874603824419E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999988301018807	WITHOUT_CLASSIFICATION	1.1698981193009424E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999932610289847	WITHOUT_CLASSIFICATION	6.73897101526777E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999992386017993	WITHOUT_CLASSIFICATION	7.61398200676893E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999504160161049	WITHOUT_CLASSIFICATION	4.9583983895017755E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999817109684924	WITHOUT_CLASSIFICATION	1.8289031507636012E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958194835229	WITHOUT_CLASSIFICATION	4.1805164769978625E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999927060992504	WITHOUT_CLASSIFICATION	7.293900749541065E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984143365872	WITHOUT_CLASSIFICATION	1.585663412839222E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999980145816691	WITHOUT_CLASSIFICATION	1.9854183308837623E-6	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9997998112112163	WITHOUT_CLASSIFICATION	2.0018878878373274E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999984755650492	WITHOUT_CLASSIFICATION	1.5244349509211254E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9997777232535433	WITHOUT_CLASSIFICATION	2.2227674645667583E-4	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.999991877134369	WITHOUT_CLASSIFICATION	8.122865630911848E-6	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999995140313023	WITHOUT_CLASSIFICATION	4.859686977576948E-7	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9999941544725235	WITHOUT_CLASSIFICATION	5.8455274765802255E-6	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9999789275865153	WITHOUT_CLASSIFICATION	2.1072413484759016E-5	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999948699452355	WITHOUT_CLASSIFICATION	5.130054764567897E-6	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999976706747539	WITHOUT_CLASSIFICATION	2.3293252461698485E-6	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.999877779075857	WITHOUT_CLASSIFICATION	1.2222092414301307E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9969332412295324	WITHOUT_CLASSIFICATION	0.003066758770467648	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999806717775882	WITHOUT_CLASSIFICATION	1.9328222411798196E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999963447704864	WITHOUT_CLASSIFICATION	3.6552295136239787E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998357809436	WITHOUT_CLASSIFICATION	1.642190563556634E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999942796460892	WITHOUT_CLASSIFICATION	5.7203539108268755E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999962755404715	WITHOUT_CLASSIFICATION	3.724459528372814E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999994825812802	WITHOUT_CLASSIFICATION	5.174187197392069E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999996336593896	WITHOUT_CLASSIFICATION	3.663406104031786E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999966669784741	WITHOUT_CLASSIFICATION	3.333021525868668E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9998407614417738	WITHOUT_CLASSIFICATION	1.5923855822617486E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9998407614417738	WITHOUT_CLASSIFICATION	1.5923855822617486E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9998407614417738	WITHOUT_CLASSIFICATION	1.5923855822617486E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999998843527641	WITHOUT_CLASSIFICATION	1.156472360251142E-7	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999979374325014	WITHOUT_CLASSIFICATION	2.0625674985782105E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999991027989454	WITHOUT_CLASSIFICATION	8.972010545145003E-7	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999996435446536	WITHOUT_CLASSIFICATION	3.564553462739946E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999998757852625	WITHOUT_CLASSIFICATION	1.2421473750690306E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999982859244381	WITHOUT_CLASSIFICATION	1.7140755619436131E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999808286118436	WITHOUT_CLASSIFICATION	1.917138815634311E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999992847117607	WITHOUT_CLASSIFICATION	7.15288239380613E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9994256208717217	WITHOUT_CLASSIFICATION	5.743791282781832E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999997405248418	WITHOUT_CLASSIFICATION	2.5947515820432076E-6	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9999993970398704	WITHOUT_CLASSIFICATION	6.029601295644015E-7	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999867240751309	WITHOUT_CLASSIFICATION	1.3275924869198485E-5	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999978516951403	WITHOUT_CLASSIFICATION	2.148304859660188E-6	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999875449033263	WITHOUT_CLASSIFICATION	1.2455096673693487E-5	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999981327983616	WITHOUT_CLASSIFICATION	1.8672016384069317E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999964660885081	WITHOUT_CLASSIFICATION	3.533911491817911E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999949698615442	WITHOUT_CLASSIFICATION	5.0301384556884055E-6	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999987170340944	WITHOUT_CLASSIFICATION	1.2829659055620529E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9999995923671906	WITHOUT_CLASSIFICATION	4.07632809465157E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999873651674158	WITHOUT_CLASSIFICATION	1.2634832584183249E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999996506656453	WITHOUT_CLASSIFICATION	3.493343545805628E-7	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999973087150242	WITHOUT_CLASSIFICATION	2.6912849756717414E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.99999463264574	WITHOUT_CLASSIFICATION	5.367354260057557E-6	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999984236902867	WITHOUT_CLASSIFICATION	1.5763097133085314E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999914700810744	WITHOUT_CLASSIFICATION	8.52991892575308E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999823350391505	WITHOUT_CLASSIFICATION	1.7664960849504215E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.999992608526815	WITHOUT_CLASSIFICATION	7.391473184985918E-6	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999982950903942	WITHOUT_CLASSIFICATION	1.7049096058648947E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999823350391505	WITHOUT_CLASSIFICATION	1.7664960849504215E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999887647724209	WITHOUT_CLASSIFICATION	1.1235227579180627E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999878511984297	WITHOUT_CLASSIFICATION	1.2148801570261343E-5	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999963108580584	WITHOUT_CLASSIFICATION	3.6891419416861686E-6	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999893285005453	WITHOUT_CLASSIFICATION	1.0671499454686385E-5	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999823350391505	WITHOUT_CLASSIFICATION	1.7664960849504215E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.999992608526815	WITHOUT_CLASSIFICATION	7.391473184985918E-6	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999970965945482	WITHOUT_CLASSIFICATION	2.9034054517992836E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999991927747189	WITHOUT_CLASSIFICATION	8.07225281070081E-7	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999922798239927	WITHOUT_CLASSIFICATION	7.72017600718566E-6	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999983839783582	WITHOUT_CLASSIFICATION	1.616021641803248E-5	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999954274032953	WITHOUT_CLASSIFICATION	4.572596704654678E-6	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999975102001499	WITHOUT_CLASSIFICATION	2.4897998500863503E-6	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.999999003643064	WITHOUT_CLASSIFICATION	9.963569359875825E-7	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9998142869290788	WITHOUT_CLASSIFICATION	1.85713070921109E-4	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9999867179081102	WITHOUT_CLASSIFICATION	1.3282091889698286E-5	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9999614023028205	WITHOUT_CLASSIFICATION	3.859769717950084E-5	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9981986995528949	WITHOUT_CLASSIFICATION	0.0018013004471052582	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999922083295409	WITHOUT_CLASSIFICATION	7.791670459049282E-6	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999960976334902	WITHOUT_CLASSIFICATION	3.902366509827165E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999925731698809	WITHOUT_CLASSIFICATION	7.426830119116346E-6	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999217008417	WITHOUT_CLASSIFICATION	7.829915826308237E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999069930167599	WITHOUT_CLASSIFICATION	9.300698324014459E-5	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.999982345181863	WITHOUT_CLASSIFICATION	1.7654818136981984E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9998893081201602	WITHOUT_CLASSIFICATION	1.1069187983972418E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999898002171783	WITHOUT_CLASSIFICATION	1.0199782821592915E-5	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999272511965382	WITHOUT_CLASSIFICATION	7.27488034617326E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999274087942341	WITHOUT_CLASSIFICATION	7.259120576595118E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999217008417	WITHOUT_CLASSIFICATION	7.829915826308237E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999069930167599	WITHOUT_CLASSIFICATION	9.300698324014459E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999975711368458	WITHOUT_CLASSIFICATION	2.428863154080562E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999975711368458	WITHOUT_CLASSIFICATION	2.428863154080562E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999962290007213	WITHOUT_CLASSIFICATION	3.77099927865318E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999992972431446	WITHOUT_CLASSIFICATION	7.0275685533836E-7	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999965963775717	WITHOUT_CLASSIFICATION	3.4036224284142427E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999962290007213	WITHOUT_CLASSIFICATION	3.77099927865318E-6	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999992972431446	WITHOUT_CLASSIFICATION	7.0275685533836E-7	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.999998571945712	WITHOUT_CLASSIFICATION	1.4280542879834635E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999950687684985	WITHOUT_CLASSIFICATION	4.931231501509747E-6	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.999999092490027	WITHOUT_CLASSIFICATION	9.075099729217388E-7	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999604714351189	WITHOUT_CLASSIFICATION	3.952856488098421E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.999999092490027	WITHOUT_CLASSIFICATION	9.075099729217388E-7	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999974316561797	WITHOUT_CLASSIFICATION	2.5683438202346533E-6	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999997618667129	WITHOUT_CLASSIFICATION	2.3813328708632683E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999997618667129	WITHOUT_CLASSIFICATION	2.3813328708632683E-7	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999944629493246	WITHOUT_CLASSIFICATION	5.537050675341259E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999999290264094	WITHOUT_CLASSIFICATION	7.097359048162175E-8	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999749843115024	WITHOUT_CLASSIFICATION	2.5015688497515676E-5	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999957073419505	WITHOUT_CLASSIFICATION	4.292658049389582E-6	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999999107216957	WITHOUT_CLASSIFICATION	8.927830427013234E-8	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999986939421476	WITHOUT_CLASSIFICATION	1.306057852476248E-6	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999993207207392	WITHOUT_CLASSIFICATION	6.792792608014605E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999882662002914	WITHOUT_CLASSIFICATION	1.1733799708724676E-5	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999998163815853	WITHOUT_CLASSIFICATION	1.836184147095618E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999904838022879	WITHOUT_CLASSIFICATION	9.51619771203247E-6	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999955806755086	WITHOUT_CLASSIFICATION	4.419324491347414E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999882662002914	WITHOUT_CLASSIFICATION	1.1733799708724676E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999904838022879	WITHOUT_CLASSIFICATION	9.51619771203247E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999882662002914	WITHOUT_CLASSIFICATION	1.1733799708724676E-5	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999984762542761	WITHOUT_CLASSIFICATION	1.5237457239399792E-6	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999759493633412	WITHOUT_CLASSIFICATION	2.405063665872428E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999882662002914	WITHOUT_CLASSIFICATION	1.1733799708724676E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999882662002914	WITHOUT_CLASSIFICATION	1.1733799708724676E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999882662002914	WITHOUT_CLASSIFICATION	1.1733799708724676E-5	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999936735552281	WITHOUT_CLASSIFICATION	6.3264447719050776E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999870051034971	WITHOUT_CLASSIFICATION	1.2994896502820976E-5	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.999999675893319	WITHOUT_CLASSIFICATION	3.241066810562441E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999999236050464	WITHOUT_CLASSIFICATION	7.639495358241038E-8	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9999846401828731	WITHOUT_CLASSIFICATION	1.5359817126867238E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999984626198836	WITHOUT_CLASSIFICATION	1.5373801164812538E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999971950553381	WITHOUT_CLASSIFICATION	2.8049446617817455E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999845323088	WITHOUT_CLASSIFICATION	1.54676911564575E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999845323088	WITHOUT_CLASSIFICATION	1.54676911564575E-8	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.999999797162095	WITHOUT_CLASSIFICATION	2.0283790506484535E-7	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999999111577541	WITHOUT_CLASSIFICATION	8.884224593642097E-8	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999925033707356	WITHOUT_CLASSIFICATION	7.49662926435831E-6	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999781454010654	WITHOUT_CLASSIFICATION	2.1854598934510943E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999995452050272	WITHOUT_CLASSIFICATION	4.5479497277477214E-7	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999994884220034	WITHOUT_CLASSIFICATION	5.115779965503275E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999999236050464	WITHOUT_CLASSIFICATION	7.639495358241038E-8	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999995081184547	WITHOUT_CLASSIFICATION	4.918815452393468E-7	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999955895785176	WITHOUT_CLASSIFICATION	4.410421482285797E-6	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999980981769109	WITHOUT_CLASSIFICATION	1.9018230891855245E-6	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999943993221143	WITHOUT_CLASSIFICATION	5.600677885729535E-6	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999913127072357	WITHOUT_CLASSIFICATION	8.68729276433148E-6	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.999999706338758	WITHOUT_CLASSIFICATION	2.9366124199905456E-7	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999992517892883	WITHOUT_CLASSIFICATION	7.482107116724206E-7	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999942957460572	WITHOUT_CLASSIFICATION	5.704253942669545E-6	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999999977205343	WITHOUT_CLASSIFICATION	2.279465780346005E-9	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999904838022879	WITHOUT_CLASSIFICATION	9.51619771203247E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999961774921211	WITHOUT_CLASSIFICATION	3.8225078788990707E-5	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999997212479645	WITHOUT_CLASSIFICATION	2.7875203542806324E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999998335854204	WITHOUT_CLASSIFICATION	1.6641457962677384E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999998335854204	WITHOUT_CLASSIFICATION	1.6641457962677384E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999997950540163	WITHOUT_CLASSIFICATION	2.0494598363689332E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999904838022879	WITHOUT_CLASSIFICATION	9.51619771203247E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999764240304174	WITHOUT_CLASSIFICATION	2.357596958261859E-5	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999899482521043	WITHOUT_CLASSIFICATION	1.005174789570184E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999987597987381	WITHOUT_CLASSIFICATION	1.2402012619040343E-6	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999333438632	WITHOUT_CLASSIFICATION	6.665613683477309E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999991230473166	WITHOUT_CLASSIFICATION	8.769526833818862E-7	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9999987876878557	WITHOUT_CLASSIFICATION	1.2123121443172776E-6	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999998427328689	WITHOUT_CLASSIFICATION	1.5726713104361902E-7	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999986864547514	WITHOUT_CLASSIFICATION	1.313545248537927E-6	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9999985739853586	WITHOUT_CLASSIFICATION	1.4260146413406051E-6	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999996190529509	WITHOUT_CLASSIFICATION	3.8094704918769273E-7	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9986297884648757	WITHOUT_CLASSIFICATION	0.0013702115351243173	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999708021573294	WITHOUT_CLASSIFICATION	2.9197842670635732E-5	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.999997958116651	WITHOUT_CLASSIFICATION	2.041883348998149E-6	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9998937161808912	WITHOUT_CLASSIFICATION	1.0628381910885729E-4	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999998976063987	WITHOUT_CLASSIFICATION	1.0239360118485703E-7	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999997660772653	WITHOUT_CLASSIFICATION	2.3392273467004865E-7	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999999854019732	WITHOUT_CLASSIFICATION	1.4598026864809596E-8	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999985938982692	WITHOUT_CLASSIFICATION	1.406101730844239E-6	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999978115401451	WITHOUT_CLASSIFICATION	2.188459854961219E-6	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999997171984746	WITHOUT_CLASSIFICATION	2.828015254447379E-7	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999992708603481	WITHOUT_CLASSIFICATION	7.291396519355425E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999904838022879	WITHOUT_CLASSIFICATION	9.51619771203247E-6	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.999999439580474	WITHOUT_CLASSIFICATION	5.604195259340774E-7	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999996982001533	WITHOUT_CLASSIFICATION	3.0179984663923754E-7	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999769638346647	WITHOUT_CLASSIFICATION	2.303616533527882E-5	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999993752995423	WITHOUT_CLASSIFICATION	6.247004576288852E-7	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999989378958338	WITHOUT_CLASSIFICATION	1.0621041661575403E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999997076606301	WITHOUT_CLASSIFICATION	2.923393700014953E-7	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998525987104	WITHOUT_CLASSIFICATION	1.4740128961456724E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999904838022879	WITHOUT_CLASSIFICATION	9.51619771203247E-6	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999695090650202	WITHOUT_CLASSIFICATION	3.0490934979848035E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999998695614878	WITHOUT_CLASSIFICATION	1.304385123113352E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999998695614878	WITHOUT_CLASSIFICATION	1.304385123113352E-7	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999937500504577	WITHOUT_CLASSIFICATION	6.249949542370457E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999937500504577	WITHOUT_CLASSIFICATION	6.249949542370457E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999991189592339	WITHOUT_CLASSIFICATION	8.810407661018156E-6	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.999999629312377	WITHOUT_CLASSIFICATION	3.7068762301069427E-7	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999740387395037	WITHOUT_CLASSIFICATION	2.5961260496205496E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999740387395037	WITHOUT_CLASSIFICATION	2.5961260496205496E-5	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999180028096617	WITHOUT_CLASSIFICATION	8.199719033835952E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999955503145552	WITHOUT_CLASSIFICATION	4.449685444825312E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999870051034971	WITHOUT_CLASSIFICATION	1.2994896502820976E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999965635034552	WITHOUT_CLASSIFICATION	3.4364965447894163E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999965635034552	WITHOUT_CLASSIFICATION	3.4364965447894163E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999965635034552	WITHOUT_CLASSIFICATION	3.4364965447894163E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999955503145552	WITHOUT_CLASSIFICATION	4.449685444825312E-6	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999998119597925	WITHOUT_CLASSIFICATION	1.8804020751060193E-7	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999527187223743	WITHOUT_CLASSIFICATION	4.728127762573321E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9999985440880732	WITHOUT_CLASSIFICATION	1.4559119267070296E-6	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999208026951578	WITHOUT_CLASSIFICATION	7.919730484216794E-5	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.999999914766936	WITHOUT_CLASSIFICATION	8.523306397994145E-8	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999998682473127	WITHOUT_CLASSIFICATION	1.317526872684E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999996157033956	WITHOUT_CLASSIFICATION	3.84296604424617E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999993028125107	WITHOUT_CLASSIFICATION	6.97187489307523E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999977468374072	WITHOUT_CLASSIFICATION	2.2531625928622263E-6	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999998843527641	WITHOUT_CLASSIFICATION	1.156472360251142E-7	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999947269459855	WITHOUT_CLASSIFICATION	5.273054014578966E-6	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999996676618026	WITHOUT_CLASSIFICATION	3.3233819741366976E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999924540612439	WITHOUT_CLASSIFICATION	7.545938756152118E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999806717775882	WITHOUT_CLASSIFICATION	1.9328222411798196E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999963447704864	WITHOUT_CLASSIFICATION	3.6552295136239787E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998357809436	WITHOUT_CLASSIFICATION	1.642190563556634E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999921066722313	WITHOUT_CLASSIFICATION	7.893327768744557E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999994825812802	WITHOUT_CLASSIFICATION	5.174187197392069E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999996336593896	WITHOUT_CLASSIFICATION	3.663406104031786E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999966669784741	WITHOUT_CLASSIFICATION	3.333021525868668E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999991030105972	WITHOUT_CLASSIFICATION	8.969894027816191E-7	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999991972194795	WITHOUT_CLASSIFICATION	8.027805203940967E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999997831344821	WITHOUT_CLASSIFICATION	2.1686551789884796E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999988789235772	WITHOUT_CLASSIFICATION	1.1210764227848198E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999998757852625	WITHOUT_CLASSIFICATION	1.2421473750690306E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999999584606941	WITHOUT_CLASSIFICATION	4.153930584083281E-8	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999980083572891	WITHOUT_CLASSIFICATION	1.9916427108766184E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999982859244381	WITHOUT_CLASSIFICATION	1.7140755619436131E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999808286118436	WITHOUT_CLASSIFICATION	1.917138815634311E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999992847117607	WITHOUT_CLASSIFICATION	7.15288239380613E-7	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993484855316	WITHOUT_CLASSIFICATION	6.515144683533778E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9994256208717217	WITHOUT_CLASSIFICATION	5.743791282781832E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999993862513758	WITHOUT_CLASSIFICATION	6.13748624199317E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999996312154423	WITHOUT_CLASSIFICATION	3.687845577088536E-7	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999981154190659	WITHOUT_CLASSIFICATION	1.8845809341302982E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999974010871737	WITHOUT_CLASSIFICATION	2.598912826197521E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999997405248418	WITHOUT_CLASSIFICATION	2.5947515820432076E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999994940099985	WITHOUT_CLASSIFICATION	5.059900014171726E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999939073758302	WITHOUT_CLASSIFICATION	6.0926241697954705E-6	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999991694647545	WITHOUT_CLASSIFICATION	8.305352454431382E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999997405248418	WITHOUT_CLASSIFICATION	2.5947515820432076E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999964660885081	WITHOUT_CLASSIFICATION	3.533911491817911E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999944144038034	WITHOUT_CLASSIFICATION	5.585596196532593E-6	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.999999729317972	WITHOUT_CLASSIFICATION	2.706820279887977E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999949698615442	WITHOUT_CLASSIFICATION	5.0301384556884055E-6	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999894060181532	WITHOUT_CLASSIFICATION	1.0593981846746694E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999939073758302	WITHOUT_CLASSIFICATION	6.0926241697954705E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999949698615442	WITHOUT_CLASSIFICATION	5.0301384556884055E-6	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999959608126537	WITHOUT_CLASSIFICATION	4.039187346223848E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999991007542329	WITHOUT_CLASSIFICATION	8.99245767049211E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999991325357205	WITHOUT_CLASSIFICATION	8.674642793980391E-7	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999998448853574	WITHOUT_CLASSIFICATION	1.5511464251483393E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999909744713396	WITHOUT_CLASSIFICATION	9.025528660485281E-6	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9999814413688728	WITHOUT_CLASSIFICATION	1.8558631127182973E-5	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999787313854657	WITHOUT_CLASSIFICATION	2.1268614534389383E-5	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999966066926744	WITHOUT_CLASSIFICATION	3.3933073256088913E-6	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9998540133807136	WITHOUT_CLASSIFICATION	1.4598661928643091E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999991606882614	WITHOUT_CLASSIFICATION	8.393117386719267E-7	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999518797642939	WITHOUT_CLASSIFICATION	4.812023570599785E-5	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9999321165085244	WITHOUT_CLASSIFICATION	6.788349147556126E-5	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999994601458048	WITHOUT_CLASSIFICATION	5.398541951994144E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999998591359149	WITHOUT_CLASSIFICATION	1.4086408509008513E-7	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999992200829846	WITHOUT_CLASSIFICATION	7.799170153624647E-7	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999997514040855	WITHOUT_CLASSIFICATION	2.48595914537918E-7	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999998405297491	WITHOUT_CLASSIFICATION	1.5947025078850778E-7	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999994912153025	WITHOUT_CLASSIFICATION	5.087846975585509E-7	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999997904698432	WITHOUT_CLASSIFICATION	2.09530156856974E-7	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999978886898178	WITHOUT_CLASSIFICATION	2.1113101822613854E-6	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999857165845827	WITHOUT_CLASSIFICATION	1.4283415417224835E-5	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999999526056701	WITHOUT_CLASSIFICATION	4.739432991921696E-8	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999999077866636	WITHOUT_CLASSIFICATION	9.22133363206046E-8	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999995472234833	WITHOUT_CLASSIFICATION	4.5277651660600493E-7	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999993351622974	WITHOUT_CLASSIFICATION	6.648377024956641E-7	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9999489215317774	WITHOUT_CLASSIFICATION	5.1078468222532165E-5	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.999989500016721	WITHOUT_CLASSIFICATION	1.0499983279074113E-5	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999971822672397	WITHOUT_CLASSIFICATION	2.817732760413065E-6	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999978005090584	WITHOUT_CLASSIFICATION	2.1994909416258264E-6	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999989828862293	WITHOUT_CLASSIFICATION	1.0171137705924097E-6	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999979303040064	WITHOUT_CLASSIFICATION	2.0696959935887904E-6	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999957347744319	WITHOUT_CLASSIFICATION	4.265225568103623E-6	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999975031371617	WITHOUT_CLASSIFICATION	2.496862838336449E-6	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.999991015621934	WITHOUT_CLASSIFICATION	8.984378066074714E-6	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999972702087327	WITHOUT_CLASSIFICATION	2.72979126733679E-6	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999994328077719	WITHOUT_CLASSIFICATION	5.67192228061525E-7	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9999852839046588	WITHOUT_CLASSIFICATION	1.4716095341132414E-5	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999947206578617	WITHOUT_CLASSIFICATION	5.27934213844611E-6	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999520842145414	WITHOUT_CLASSIFICATION	4.7915785458513664E-5	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999723517419619	WITHOUT_CLASSIFICATION	2.7648258038210913E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999775160070367	WITHOUT_CLASSIFICATION	2.2483992963405003E-5	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999951954527243	WITHOUT_CLASSIFICATION	4.804547275660057E-6	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999991622742811	WITHOUT_CLASSIFICATION	8.377257189618372E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999991505786221	WITHOUT_CLASSIFICATION	8.49421377924433E-7	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999952231727923	WITHOUT_CLASSIFICATION	4.776827207732741E-6	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999982002688532	WITHOUT_CLASSIFICATION	1.7997311467262264E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.999958644436881	WITHOUT_CLASSIFICATION	4.1355563119067584E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999974748965992	WITHOUT_CLASSIFICATION	2.525103400747143E-6	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999894247448616	WITHOUT_CLASSIFICATION	1.0575255138286145E-5	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999119291989	WITHOUT_CLASSIFICATION	8.8070801083303E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999906454776528	WITHOUT_CLASSIFICATION	9.354522347157213E-6	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9999206018552732	WITHOUT_CLASSIFICATION	7.939814472685871E-5	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9999910343737172	WITHOUT_CLASSIFICATION	8.965626282881258E-6	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999658538002546	WITHOUT_CLASSIFICATION	3.41461997454665E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999730974915351	WITHOUT_CLASSIFICATION	2.6902508464964964E-5	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999999290264094	WITHOUT_CLASSIFICATION	7.097359048162175E-8	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999998959109152	WITHOUT_CLASSIFICATION	1.0408908477360358E-7	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999969569335071	WITHOUT_CLASSIFICATION	3.0430664929094204E-6	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999994486868361	WITHOUT_CLASSIFICATION	5.513131639204754E-7	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999974498457777	WITHOUT_CLASSIFICATION	2.5501542224187726E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999987400726673	WITHOUT_CLASSIFICATION	1.259927332693134E-6	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999989125149765	WITHOUT_CLASSIFICATION	1.0874850234325272E-6	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9999980137728918	WITHOUT_CLASSIFICATION	1.9862271082921546E-6	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999869205590535	WITHOUT_CLASSIFICATION	1.3079440946540365E-5	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999990698764971	WITHOUT_CLASSIFICATION	9.301235027864982E-7	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999574874086896	WITHOUT_CLASSIFICATION	4.251259131037167E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999994500401259	WITHOUT_CLASSIFICATION	5.499598740779711E-7	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999984626198836	WITHOUT_CLASSIFICATION	1.5373801164812538E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999971950553381	WITHOUT_CLASSIFICATION	2.8049446617817455E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999994884220034	WITHOUT_CLASSIFICATION	5.115779965503275E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999989125149765	WITHOUT_CLASSIFICATION	1.0874850234325272E-6	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999574874086896	WITHOUT_CLASSIFICATION	4.251259131037167E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999994500401259	WITHOUT_CLASSIFICATION	5.499598740779711E-7	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999996578197912	WITHOUT_CLASSIFICATION	3.4218020890066456E-7	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999983719173366	WITHOUT_CLASSIFICATION	1.6280826633482216E-6	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999226751190926	WITHOUT_CLASSIFICATION	7.732488090741988E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999901751269044	WITHOUT_CLASSIFICATION	9.824873095680248E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999973048505506	WITHOUT_CLASSIFICATION	2.695149449508045E-6	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999998436203207	WITHOUT_CLASSIFICATION	1.5637967930431962E-7	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999997200168678	WITHOUT_CLASSIFICATION	2.7998313222902244E-7	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999990938057158	WITHOUT_CLASSIFICATION	9.06194284258949E-7	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.999999652933298	WITHOUT_CLASSIFICATION	3.4706670203347215E-7	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9999984284608463	WITHOUT_CLASSIFICATION	1.5715391536510708E-6	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999999008344933	WITHOUT_CLASSIFICATION	9.916550664558622E-8	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.999942089471637	WITHOUT_CLASSIFICATION	5.791052836299298E-5	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999998549229603	WITHOUT_CLASSIFICATION	1.4507703975730966E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999996253488252	WITHOUT_CLASSIFICATION	3.746511747302885E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999999371784986	WITHOUT_CLASSIFICATION	6.282150147915162E-8	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999998448115325	WITHOUT_CLASSIFICATION	1.5518846748103374E-7	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999995292244409	WITHOUT_CLASSIFICATION	4.707755591204905E-7	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999988721197346	WITHOUT_CLASSIFICATION	1.1278802654055275E-6	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999993243157729	WITHOUT_CLASSIFICATION	6.756842270390226E-7	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.999997671907065	WITHOUT_CLASSIFICATION	2.328092935015161E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999988632783311	WITHOUT_CLASSIFICATION	1.1367216689554617E-6	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999447718578	WITHOUT_CLASSIFICATION	5.5228142195190864E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999974498457777	WITHOUT_CLASSIFICATION	2.5501542224187726E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999987400726673	WITHOUT_CLASSIFICATION	1.259927332693134E-6	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.999999942234642	WITHOUT_CLASSIFICATION	5.7765357955222625E-8	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999999927018091	WITHOUT_CLASSIFICATION	7.298190976901165E-9	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999980971709185	WITHOUT_CLASSIFICATION	1.9028290814798365E-6	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.999997287083337	WITHOUT_CLASSIFICATION	2.712916662911188E-6	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.999997569697674	WITHOUT_CLASSIFICATION	2.4303023260180613E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999970141471272	WITHOUT_CLASSIFICATION	2.985852872796562E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9997951960031478	WITHOUT_CLASSIFICATION	2.0480399685207572E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999986064444627	WITHOUT_CLASSIFICATION	1.3935555373242117E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999987436705517	WITHOUT_CLASSIFICATION	1.2563294482847185E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999987436705517	WITHOUT_CLASSIFICATION	1.2563294482847185E-6	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999999595477111	WITHOUT_CLASSIFICATION	4.0452288893017754E-8	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999966797188881	WITHOUT_CLASSIFICATION	3.3202811118063864E-6	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999999562794607	WITHOUT_CLASSIFICATION	4.3720539279361286E-8	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999992586991812	WITHOUT_CLASSIFICATION	7.413008188784181E-7	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999999114230357	WITHOUT_CLASSIFICATION	8.857696433918827E-8	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999993634563316	WITHOUT_CLASSIFICATION	6.365436684577917E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999956377537852	WITHOUT_CLASSIFICATION	4.36224621487418E-6	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999956377537852	WITHOUT_CLASSIFICATION	4.36224621487418E-6	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999982664021476	WITHOUT_CLASSIFICATION	1.7335978524540362E-6	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.999999024294846	WITHOUT_CLASSIFICATION	9.757051539917422E-7	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999926015110586	WITHOUT_CLASSIFICATION	7.398488941289087E-6	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999991040093301	WITHOUT_CLASSIFICATION	8.959906698773989E-7	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999993705520674	WITHOUT_CLASSIFICATION	6.294479324678192E-7	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999893730423098	WITHOUT_CLASSIFICATION	1.0626957690137782E-5	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.999999842012556	WITHOUT_CLASSIFICATION	1.5798744403344345E-7	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999997007622345	WITHOUT_CLASSIFICATION	2.992377654305493E-7	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999993058098513	WITHOUT_CLASSIFICATION	6.941901487348843E-7	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999996961130564	WITHOUT_CLASSIFICATION	3.03886943531667E-7	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999992913976927	WITHOUT_CLASSIFICATION	7.086023073420667E-7	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999354939075	WITHOUT_CLASSIFICATION	6.45060925339285E-8	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999935374953561	WITHOUT_CLASSIFICATION	6.462504643896623E-6	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999991611115446	WITHOUT_CLASSIFICATION	8.388884553361853E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999996051648348	WITHOUT_CLASSIFICATION	3.94835165250365E-7	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999960308109158	WITHOUT_CLASSIFICATION	3.969189084239091E-6	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999993898305584	WITHOUT_CLASSIFICATION	6.101694416228482E-7	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999998218574851	WITHOUT_CLASSIFICATION	1.7814251493303047E-7	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999998389288729	WITHOUT_CLASSIFICATION	1.6107112704407966E-7	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999967975382971	WITHOUT_CLASSIFICATION	3.202461702906116E-6	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999992069943112	WITHOUT_CLASSIFICATION	7.930056888284527E-7	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999996043156298	WITHOUT_CLASSIFICATION	3.9568437009895937E-7	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999999689671463	WITHOUT_CLASSIFICATION	3.1032853755013935E-8	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999677171469875	WITHOUT_CLASSIFICATION	3.2282853012560096E-5	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.999998419093541	WITHOUT_CLASSIFICATION	1.5809064589086416E-6	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999919207256439	WITHOUT_CLASSIFICATION	8.079274356090086E-6	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999993196116945	WITHOUT_CLASSIFICATION	6.803883054404914E-7	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.999998817740088	WITHOUT_CLASSIFICATION	1.1822599120046711E-6	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.999997765827669	WITHOUT_CLASSIFICATION	2.234172331009579E-6	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999871994735602	WITHOUT_CLASSIFICATION	1.2800526439885094E-5	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.999998895202442	WITHOUT_CLASSIFICATION	1.1047975580511053E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999985945997927	WITHOUT_CLASSIFICATION	1.4054002073289509E-6	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999940520226656	WITHOUT_CLASSIFICATION	5.947977334361076E-6	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999923912223097	WITHOUT_CLASSIFICATION	7.608777690422742E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9999965697077465	WITHOUT_CLASSIFICATION	3.430292253424621E-6	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999873813976677	WITHOUT_CLASSIFICATION	1.2618602332192E-5	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999997123854782	WITHOUT_CLASSIFICATION	2.876145217653074E-7	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999976975462648	WITHOUT_CLASSIFICATION	2.3024537351640495E-6	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999996705736636	WITHOUT_CLASSIFICATION	3.2942633638206644E-7	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999968183230866	WITHOUT_CLASSIFICATION	3.1816769132773092E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999997452828541	WITHOUT_CLASSIFICATION	2.547171459185481E-7	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999993472332762	WITHOUT_CLASSIFICATION	6.527667238641227E-7	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999974072817056	WITHOUT_CLASSIFICATION	2.592718294283616E-6	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999976046612906	WITHOUT_CLASSIFICATION	2.3953387092895767E-6	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999112563358007	WITHOUT_CLASSIFICATION	8.874366419935135E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999997452828541	WITHOUT_CLASSIFICATION	2.547171459185481E-7	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999974072817056	WITHOUT_CLASSIFICATION	2.592718294283616E-6	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999915808838714	WITHOUT_CLASSIFICATION	8.419116128554291E-6	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999949953208281	WITHOUT_CLASSIFICATION	5.004679171831965E-6	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999978822898588	WITHOUT_CLASSIFICATION	2.1177101411804344E-6	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999956139452864	WITHOUT_CLASSIFICATION	4.386054713631726E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999968183230866	WITHOUT_CLASSIFICATION	3.1816769132773092E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999968183230866	WITHOUT_CLASSIFICATION	3.1816769132773092E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999997452828541	WITHOUT_CLASSIFICATION	2.547171459185481E-7	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999996874769501	WITHOUT_CLASSIFICATION	3.125230498345931E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.99999980185005	WITHOUT_CLASSIFICATION	1.981499500190357E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999997606688532	WITHOUT_CLASSIFICATION	2.393311467865397E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999997606688532	WITHOUT_CLASSIFICATION	2.393311467865397E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999996873217047	WITHOUT_CLASSIFICATION	3.1267829516801796E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999991625986709	WITHOUT_CLASSIFICATION	8.374013290827184E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999995213371493	WITHOUT_CLASSIFICATION	4.786628506839011E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999995213371493	WITHOUT_CLASSIFICATION	4.786628506839011E-7	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999989795280793	WITHOUT_CLASSIFICATION	1.0204719207543839E-6	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999991625986709	WITHOUT_CLASSIFICATION	8.374013290827184E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999995213371493	WITHOUT_CLASSIFICATION	4.786628506839011E-7	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999989795280793	WITHOUT_CLASSIFICATION	1.0204719207543839E-6	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999991581910965	WITHOUT_CLASSIFICATION	8.418089035241457E-7	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999997506697141	WITHOUT_CLASSIFICATION	2.4933028595827564E-7	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999992447752453	WITHOUT_CLASSIFICATION	7.552247546472003E-7	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999978314085508	WITHOUT_CLASSIFICATION	2.1685914492377656E-6	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999952401600168	WITHOUT_CLASSIFICATION	4.759839983181663E-6	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999990099742471	WITHOUT_CLASSIFICATION	9.90025752887615E-7	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999997045674696	WITHOUT_CLASSIFICATION	2.9543253048674315E-7	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999974356665625	WITHOUT_CLASSIFICATION	2.5643334375248066E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9999998453558772	WITHOUT_CLASSIFICATION	1.5464412295218977E-7	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999981245561024	WITHOUT_CLASSIFICATION	1.875443897625315E-6	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999988042061873	WITHOUT_CLASSIFICATION	1.1957938126547864E-6	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999991757099137	WITHOUT_CLASSIFICATION	8.242900861835876E-7	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.999999723597698	WITHOUT_CLASSIFICATION	2.764023020545207E-7	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999987023859437	WITHOUT_CLASSIFICATION	1.2976140563106456E-6	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999967538116904	WITHOUT_CLASSIFICATION	3.2461883096683338E-6	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999985659758414	WITHOUT_CLASSIFICATION	1.4340241585697338E-6	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999994714276577	WITHOUT_CLASSIFICATION	5.285723424102703E-7	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999999816620835	WITHOUT_CLASSIFICATION	1.833791661938123E-8	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999999226363596	WITHOUT_CLASSIFICATION	7.736364046534805E-8	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999982266575024	WITHOUT_CLASSIFICATION	1.7733424975224911E-6	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999998490873548	WITHOUT_CLASSIFICATION	1.5091264529168308E-7	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999998876023678	WITHOUT_CLASSIFICATION	1.1239763221866371E-7	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999487633043	WITHOUT_CLASSIFICATION	5.123669570898527E-8	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999150604175	WITHOUT_CLASSIFICATION	8.493958254247677E-8	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999999124539091	WITHOUT_CLASSIFICATION	8.754609096304139E-8	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999989252009294	WITHOUT_CLASSIFICATION	1.0747990707207915E-6	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999998040171233	WITHOUT_CLASSIFICATION	1.959828767471916E-7	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999989381649474	WITHOUT_CLASSIFICATION	1.0618350525424827E-6	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999999155161141	WITHOUT_CLASSIFICATION	8.448388579359009E-8	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999999124756354	WITHOUT_CLASSIFICATION	8.752436463627988E-8	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999939416222126	WITHOUT_CLASSIFICATION	6.0583777875100285E-6	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999974685502739	WITHOUT_CLASSIFICATION	2.5314497260462092E-6	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999943763256055	WITHOUT_CLASSIFICATION	5.623674394552681E-6	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999927901719748	WITHOUT_CLASSIFICATION	7.2098280250833255E-6	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999983341617691	WITHOUT_CLASSIFICATION	1.6658382309350153E-6	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999977964520601	WITHOUT_CLASSIFICATION	2.2035479398997685E-6	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999998600640781	WITHOUT_CLASSIFICATION	1.3993592181418662E-7	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999965951572993	WITHOUT_CLASSIFICATION	3.404842700668501E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999966904009379	WITHOUT_CLASSIFICATION	3.3095990622054748E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999966904009379	WITHOUT_CLASSIFICATION	3.3095990622054748E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999966904009379	WITHOUT_CLASSIFICATION	3.3095990622054748E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999999715544201	WITHOUT_CLASSIFICATION	2.8445579889846807E-8	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999962387310318	WITHOUT_CLASSIFICATION	3.7612689682289657E-6	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999978557951673	WITHOUT_CLASSIFICATION	2.144204832640872E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999761676137461	WITHOUT_CLASSIFICATION	2.38323862539382E-5	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999989329260831	WITHOUT_CLASSIFICATION	1.0670739169660245E-6	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999915954108254	WITHOUT_CLASSIFICATION	8.404589174572383E-6	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999510398542	WITHOUT_CLASSIFICATION	4.896014595137182E-8	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999999868559741	WITHOUT_CLASSIFICATION	1.3144025928926349E-8	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999997358834575	WITHOUT_CLASSIFICATION	2.6411654248817607E-7	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999995691581093	WITHOUT_CLASSIFICATION	4.308418906011288E-7	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.999999840282065	WITHOUT_CLASSIFICATION	1.5971793502941698E-7	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999966770963203	WITHOUT_CLASSIFICATION	3.3229036796481347E-6	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999998940418059	WITHOUT_CLASSIFICATION	1.0595819405047598E-7	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999986099230074	WITHOUT_CLASSIFICATION	1.390076992563588E-6	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999977580235442	WITHOUT_CLASSIFICATION	2.241976455813195E-6	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999997298779247	WITHOUT_CLASSIFICATION	2.701220752190032E-7	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999981933072671	WITHOUT_CLASSIFICATION	1.8066927328325217E-6	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999998876275825	WITHOUT_CLASSIFICATION	1.123724174051302E-7	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999985855982996	WITHOUT_CLASSIFICATION	1.4144017004167766E-6	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999989588665685	WITHOUT_CLASSIFICATION	1.041133431494607E-6	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9999959093644106	WITHOUT_CLASSIFICATION	4.090635589401914E-6	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999984890145435	WITHOUT_CLASSIFICATION	1.5109854565772828E-6	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999965141532837	WITHOUT_CLASSIFICATION	3.485846716321537E-6	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.999995344602399	WITHOUT_CLASSIFICATION	4.655397600931325E-6	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999999080702406	WITHOUT_CLASSIFICATION	9.19297594703279E-8	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999379634776189	WITHOUT_CLASSIFICATION	6.203652238107443E-5	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999996471587485	WITHOUT_CLASSIFICATION	3.5284125150116934E-7	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999983917072407	WITHOUT_CLASSIFICATION	1.6082927593414553E-6	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999998468442809	WITHOUT_CLASSIFICATION	1.5315571916595116E-7	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999993536938582	WITHOUT_CLASSIFICATION	6.463061417805026E-7	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999445318839324	WITHOUT_CLASSIFICATION	5.546811606768245E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999992610514098	WITHOUT_CLASSIFICATION	7.389485902804131E-7	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9999971487907064	WITHOUT_CLASSIFICATION	2.851209293534502E-6	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.999999846908717	WITHOUT_CLASSIFICATION	1.53091283097986E-7	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999979230689849	WITHOUT_CLASSIFICATION	2.0769310151125054E-6	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999993780097994	WITHOUT_CLASSIFICATION	6.21990200525584E-7	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999995038717139	WITHOUT_CLASSIFICATION	4.961282861174575E-7	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999851995551768	WITHOUT_CLASSIFICATION	1.4800444823116938E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999984469097086	WITHOUT_CLASSIFICATION	1.553090291324367E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999489264022136	WITHOUT_CLASSIFICATION	5.10735977864977E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999969574165436	WITHOUT_CLASSIFICATION	3.0425834564761177E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.999982133646798	WITHOUT_CLASSIFICATION	1.786635320204767E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999970141471272	WITHOUT_CLASSIFICATION	2.985852872796562E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.999999395723021	WITHOUT_CLASSIFICATION	6.04276978893671E-7	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999977635658481	WITHOUT_CLASSIFICATION	2.2364341518793093E-6	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999994146154936	WITHOUT_CLASSIFICATION	5.853845064611375E-7	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9999989374640964	WITHOUT_CLASSIFICATION	1.0625359035704628E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999997250731756	WITHOUT_CLASSIFICATION	2.749268244403225E-7	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9999997680581258	WITHOUT_CLASSIFICATION	2.319418742419332E-7	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999999471878842	WITHOUT_CLASSIFICATION	5.2812115792942505E-8	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999998242945121	WITHOUT_CLASSIFICATION	1.7570548785425233E-7	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999958351345545	WITHOUT_CLASSIFICATION	4.164865445450727E-6	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999997766120728	WITHOUT_CLASSIFICATION	2.2338792722767172E-7	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999961327329019	WITHOUT_CLASSIFICATION	3.8672670980927434E-6	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999982687916877	WITHOUT_CLASSIFICATION	1.7312083122076206E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999984639865556	WITHOUT_CLASSIFICATION	1.5360134444613107E-6	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999899728738477	WITHOUT_CLASSIFICATION	1.0027126152266063E-5	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999944485743215	WITHOUT_CLASSIFICATION	5.55142567858503E-6	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999974838783978	WITHOUT_CLASSIFICATION	2.516121602111311E-6	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999997815704452	WITHOUT_CLASSIFICATION	2.1842955485315784E-7	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999996997988113	WITHOUT_CLASSIFICATION	3.002011886645472E-7	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999937983876769	WITHOUT_CLASSIFICATION	6.201612323112377E-6	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999994932654461	WITHOUT_CLASSIFICATION	5.067345538968832E-7	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999992857177114	WITHOUT_CLASSIFICATION	7.142822887214062E-7	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9999998932246583	WITHOUT_CLASSIFICATION	1.0677534166556472E-7	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999977890052214	WITHOUT_CLASSIFICATION	2.210994778563291E-6	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999948579812228	WITHOUT_CLASSIFICATION	5.142018777258908E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999918638925731	WITHOUT_CLASSIFICATION	8.136107426786469E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999918638925731	WITHOUT_CLASSIFICATION	8.136107426786469E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999948789446927	WITHOUT_CLASSIFICATION	5.121055307333495E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999948789446927	WITHOUT_CLASSIFICATION	5.121055307333495E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999977890052214	WITHOUT_CLASSIFICATION	2.210994778563291E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999948789446927	WITHOUT_CLASSIFICATION	5.121055307333495E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999997266334282	WITHOUT_CLASSIFICATION	2.7336657176808044E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999976677415805	WITHOUT_CLASSIFICATION	2.3322584194063083E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999976677415805	WITHOUT_CLASSIFICATION	2.3322584194063083E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999937663977309	WITHOUT_CLASSIFICATION	6.233602269255751E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999995207954389	WITHOUT_CLASSIFICATION	4.792045612188205E-7	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.999999636589604	WITHOUT_CLASSIFICATION	3.6341039608024086E-7	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9999609913982475	WITHOUT_CLASSIFICATION	3.9008601752504525E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999996586261324	WITHOUT_CLASSIFICATION	3.4137386769327915E-7	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999993550587353	WITHOUT_CLASSIFICATION	6.449412646110313E-7	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999982833909161	WITHOUT_CLASSIFICATION	1.7166090838307022E-6	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9998049917370115	WITHOUT_CLASSIFICATION	1.9500826298843085E-4	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9998030006966063	WITHOUT_CLASSIFICATION	1.9699930339374863E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.999968811026764	WITHOUT_CLASSIFICATION	3.118897323588684E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999989017487054	WITHOUT_CLASSIFICATION	1.098251294547401E-6	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999995375946928	WITHOUT_CLASSIFICATION	4.624053071848808E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999980625393943	WITHOUT_CLASSIFICATION	1.937460605735067E-6	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999997492856993	WITHOUT_CLASSIFICATION	2.5071430064474357E-7	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999969117897639	WITHOUT_CLASSIFICATION	3.088210236012691E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999997928229517	WITHOUT_CLASSIFICATION	2.0717704825014428E-7	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999996867600256	WITHOUT_CLASSIFICATION	3.132399743117211E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9996759964641653	WITHOUT_CLASSIFICATION	3.2400353583471553E-4	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9999977626596296	WITHOUT_CLASSIFICATION	2.237340370398303E-6	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999998761469643	WITHOUT_CLASSIFICATION	1.2385303578216373E-7	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999997784296263	WITHOUT_CLASSIFICATION	2.215703738254565E-7	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.999987114973329	WITHOUT_CLASSIFICATION	1.2885026671046667E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.999998514952428	WITHOUT_CLASSIFICATION	1.4850475720064857E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.99999858692956	WITHOUT_CLASSIFICATION	1.4130704400098118E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.99999858692956	WITHOUT_CLASSIFICATION	1.4130704400098118E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.999999108671888	WITHOUT_CLASSIFICATION	8.913281120000794E-7	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999968088378199	WITHOUT_CLASSIFICATION	3.1911621800362387E-6	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999945357757484	WITHOUT_CLASSIFICATION	5.464224251694361E-6	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999995633168759	WITHOUT_CLASSIFICATION	4.366831241045797E-6	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999990403257749	WITHOUT_CLASSIFICATION	9.596742250411606E-7	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999975778157753	WITHOUT_CLASSIFICATION	2.4221842247173008E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999965097451031	WITHOUT_CLASSIFICATION	3.4902548968787735E-6	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9999972477815837	WITHOUT_CLASSIFICATION	2.7522184162924885E-6	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.999996869967539	WITHOUT_CLASSIFICATION	3.130032461120546E-6	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9998588285857283	WITHOUT_CLASSIFICATION	1.411714142716823E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999982719922076	WITHOUT_CLASSIFICATION	1.7280077924298668E-6	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999841798440737	WITHOUT_CLASSIFICATION	1.582015592635674E-5	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999995858602809	WITHOUT_CLASSIFICATION	4.1413971913641605E-7	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999634635232197	WITHOUT_CLASSIFICATION	3.653647678029084E-5	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999984838548174	WITHOUT_CLASSIFICATION	1.5161451825884602E-6	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999963690558908	WITHOUT_CLASSIFICATION	3.630944109273716E-6	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9998961009736644	WITHOUT_CLASSIFICATION	1.0389902633544502E-4	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999977811160154	WITHOUT_CLASSIFICATION	2.2188839844470144E-6	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999952320594367	WITHOUT_CLASSIFICATION	4.7679405631848535E-6	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999982009528329	WITHOUT_CLASSIFICATION	1.799047167030396E-6	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.999999487313334	WITHOUT_CLASSIFICATION	5.126866660148521E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999928356657969	WITHOUT_CLASSIFICATION	7.164334203193736E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999998054932137	WITHOUT_CLASSIFICATION	1.9450678636493382E-7	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999993014175338	WITHOUT_CLASSIFICATION	6.985824661054897E-7	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.999995554189197	WITHOUT_CLASSIFICATION	4.445810803086294E-6	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999988133493959	WITHOUT_CLASSIFICATION	1.1866506041819246E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999996288429961	WITHOUT_CLASSIFICATION	3.7115700390017016E-7	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999997819940821	WITHOUT_CLASSIFICATION	2.1800591788286717E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999149358175	WITHOUT_CLASSIFICATION	8.506418244278192E-8	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999992035594389	WITHOUT_CLASSIFICATION	7.964405611151155E-7	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999971167457269	WITHOUT_CLASSIFICATION	2.883254273139663E-6	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999999280586639	WITHOUT_CLASSIFICATION	7.194133614892188E-8	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999997716055335	WITHOUT_CLASSIFICATION	2.2839446642896056E-7	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999971788902225	WITHOUT_CLASSIFICATION	2.8211097774380822E-6	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9999342308649625	WITHOUT_CLASSIFICATION	6.576913503750906E-5	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999785065113846	WITHOUT_CLASSIFICATION	2.149348861540186E-5	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999974303033445	WITHOUT_CLASSIFICATION	2.5696966555440785E-6	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999991778217028	WITHOUT_CLASSIFICATION	8.221782971298163E-7	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999815527241707	WITHOUT_CLASSIFICATION	1.844727582936661E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9999625178916369	WITHOUT_CLASSIFICATION	3.7482108363070075E-5	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999988364445104	WITHOUT_CLASSIFICATION	1.1635554895956526E-6	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999992051487052	WITHOUT_CLASSIFICATION	7.948512947818005E-7	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999988203128498	WITHOUT_CLASSIFICATION	1.179687150149904E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999996157033956	WITHOUT_CLASSIFICATION	3.84296604424617E-7	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999993028125107	WITHOUT_CLASSIFICATION	6.97187489307523E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.999996869967539	WITHOUT_CLASSIFICATION	3.130032461120546E-6	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9998588285857283	WITHOUT_CLASSIFICATION	1.411714142716823E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999982719922076	WITHOUT_CLASSIFICATION	1.7280077924298668E-6	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.999985137737161	WITHOUT_CLASSIFICATION	1.4862262839051172E-5	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999963920816646	WITHOUT_CLASSIFICATION	3.607918335369808E-6	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999869251628353	WITHOUT_CLASSIFICATION	1.3074837164777505E-5	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999995274481334	WITHOUT_CLASSIFICATION	4.7255186656029437E-7	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999907399577282	WITHOUT_CLASSIFICATION	9.260042271736885E-6	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.99999832030638	WITHOUT_CLASSIFICATION	1.6796936199408565E-6	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999981307351021	WITHOUT_CLASSIFICATION	1.869264897756923E-6	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999449789331372	WITHOUT_CLASSIFICATION	5.5021066862907525E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999998990993629	WITHOUT_CLASSIFICATION	1.0090063703599253E-7	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999766725553082	WITHOUT_CLASSIFICATION	2.3327444691788952E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999915165087653	WITHOUT_CLASSIFICATION	8.483491234634514E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999915165087653	WITHOUT_CLASSIFICATION	8.483491234634514E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999907989002841	WITHOUT_CLASSIFICATION	9.201099715848103E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999765202719532	WITHOUT_CLASSIFICATION	2.3479728046822465E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999985674550418	WITHOUT_CLASSIFICATION	1.432544958157589E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999871006239451	WITHOUT_CLASSIFICATION	1.2899376054794205E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999962326918491	WITHOUT_CLASSIFICATION	3.767308150775861E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999994550533328	WITHOUT_CLASSIFICATION	5.449466672048463E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999976696190032	WITHOUT_CLASSIFICATION	2.3303809968401244E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.99999497308168	WITHOUT_CLASSIFICATION	5.026918319994018E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999951409476784	WITHOUT_CLASSIFICATION	4.859052321589034E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999991668375667	WITHOUT_CLASSIFICATION	8.331624332397027E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999970377848036	WITHOUT_CLASSIFICATION	2.9622151964679703E-6	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999937181288444	WITHOUT_CLASSIFICATION	6.281871155525174E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999975719797464	WITHOUT_CLASSIFICATION	2.4280202537088344E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999690663774532	WITHOUT_CLASSIFICATION	3.093362254669518E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999886235067679	WITHOUT_CLASSIFICATION	1.1376493232120298E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999963418036356	WITHOUT_CLASSIFICATION	3.658196364423022E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999996001613961	WITHOUT_CLASSIFICATION	3.998386039361668E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999977468374072	WITHOUT_CLASSIFICATION	2.2531625928622263E-6	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999998843527641	WITHOUT_CLASSIFICATION	1.156472360251142E-7	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999947269459855	WITHOUT_CLASSIFICATION	5.273054014578966E-6	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999996676618026	WITHOUT_CLASSIFICATION	3.3233819741366976E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999924540612439	WITHOUT_CLASSIFICATION	7.545938756152118E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999806717775882	WITHOUT_CLASSIFICATION	1.9328222411798196E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999963447704864	WITHOUT_CLASSIFICATION	3.6552295136239787E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998357809436	WITHOUT_CLASSIFICATION	1.642190563556634E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999921066722313	WITHOUT_CLASSIFICATION	7.893327768744557E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999994825812802	WITHOUT_CLASSIFICATION	5.174187197392069E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999996336593896	WITHOUT_CLASSIFICATION	3.663406104031786E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999966669784741	WITHOUT_CLASSIFICATION	3.333021525868668E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999991030105972	WITHOUT_CLASSIFICATION	8.969894027816191E-7	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999991972194795	WITHOUT_CLASSIFICATION	8.027805203940967E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999998757852625	WITHOUT_CLASSIFICATION	1.2421473750690306E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999999584606941	WITHOUT_CLASSIFICATION	4.153930584083281E-8	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999980083572891	WITHOUT_CLASSIFICATION	1.9916427108766184E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999982859244381	WITHOUT_CLASSIFICATION	1.7140755619436131E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999808286118436	WITHOUT_CLASSIFICATION	1.917138815634311E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999992847117607	WITHOUT_CLASSIFICATION	7.15288239380613E-7	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993484855316	WITHOUT_CLASSIFICATION	6.515144683533778E-7	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999993862513758	WITHOUT_CLASSIFICATION	6.13748624199317E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999974010871737	WITHOUT_CLASSIFICATION	2.598912826197521E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999994940099985	WITHOUT_CLASSIFICATION	5.059900014171726E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999939073758302	WITHOUT_CLASSIFICATION	6.0926241697954705E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999981154190659	WITHOUT_CLASSIFICATION	1.8845809341302982E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999944144038034	WITHOUT_CLASSIFICATION	5.585596196532593E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999964660885081	WITHOUT_CLASSIFICATION	3.533911491817911E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999949698615442	WITHOUT_CLASSIFICATION	5.0301384556884055E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999907989002841	WITHOUT_CLASSIFICATION	9.201099715848103E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999765202719532	WITHOUT_CLASSIFICATION	2.3479728046822465E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999985674550418	WITHOUT_CLASSIFICATION	1.432544958157589E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999871006239451	WITHOUT_CLASSIFICATION	1.2899376054794205E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999976696190032	WITHOUT_CLASSIFICATION	2.3303809968401244E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.99999497308168	WITHOUT_CLASSIFICATION	5.026918319994018E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9993624264196584	WITHOUT_CLASSIFICATION	6.375735803415434E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999991325357205	WITHOUT_CLASSIFICATION	8.674642793980391E-7	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999998448853574	WITHOUT_CLASSIFICATION	1.5511464251483393E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999970377848036	WITHOUT_CLASSIFICATION	2.9622151964679703E-6	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999937181288444	WITHOUT_CLASSIFICATION	6.281871155525174E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999975719797464	WITHOUT_CLASSIFICATION	2.4280202537088344E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999690663774532	WITHOUT_CLASSIFICATION	3.093362254669518E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999963418036356	WITHOUT_CLASSIFICATION	3.658196364423022E-6	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999998278956377	WITHOUT_CLASSIFICATION	1.7210436238748412E-7	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999999458920064	WITHOUT_CLASSIFICATION	5.4107993590647944E-8	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999986879104518	WITHOUT_CLASSIFICATION	1.3120895482815704E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999996586950758	WITHOUT_CLASSIFICATION	3.413049242583776E-7	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999998447509484	WITHOUT_CLASSIFICATION	1.5524905162292274E-7	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999999237170155	WITHOUT_CLASSIFICATION	7.62829844817442E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999990115823326	WITHOUT_CLASSIFICATION	9.884176674408253E-7	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.99999965259731	WITHOUT_CLASSIFICATION	3.4740268998147504E-7	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999978435034038	WITHOUT_CLASSIFICATION	2.156496596162567E-6	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999998396126683	WITHOUT_CLASSIFICATION	1.6038733172822456E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999978435034038	WITHOUT_CLASSIFICATION	2.156496596162567E-6	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9996569720280747	WITHOUT_CLASSIFICATION	3.4302797192530156E-4	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999993803555436	WITHOUT_CLASSIFICATION	6.196444564289667E-7	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999693430449443	WITHOUT_CLASSIFICATION	3.065695505563613E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999693430449443	WITHOUT_CLASSIFICATION	3.065695505563613E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999997308120169	WITHOUT_CLASSIFICATION	2.69187983112351E-7	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999998146443164	WITHOUT_CLASSIFICATION	1.853556836095775E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999994251738987	WITHOUT_CLASSIFICATION	5.748261011620253E-7	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999918151140154	WITHOUT_CLASSIFICATION	8.184885984655527E-6	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9999863052963005	WITHOUT_CLASSIFICATION	1.3694703699570889E-5	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999992087904898	WITHOUT_CLASSIFICATION	7.912095103041219E-7	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999802818494021	WITHOUT_CLASSIFICATION	1.9718150597868682E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999932027627891	WITHOUT_CLASSIFICATION	6.797237210902733E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.999997607926398	WITHOUT_CLASSIFICATION	2.392073601878968E-6	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999968450184626	WITHOUT_CLASSIFICATION	3.154981537446449E-6	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999999049318921	WITHOUT_CLASSIFICATION	9.506810793670702E-8	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999921091484425	WITHOUT_CLASSIFICATION	7.890851557589872E-6	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999999259253071	WITHOUT_CLASSIFICATION	7.407469285384762E-8	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999999259253071	WITHOUT_CLASSIFICATION	7.407469285384762E-8	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999999409086299	WITHOUT_CLASSIFICATION	5.909137002671414E-8	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999997763776435	WITHOUT_CLASSIFICATION	2.2362235651192568E-7	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.999977192379653	WITHOUT_CLASSIFICATION	2.2807620346962306E-5	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9999587007500288	WITHOUT_CLASSIFICATION	4.129924997109439E-5	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999821976132652	WITHOUT_CLASSIFICATION	1.7802386734758597E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999816882904609	WITHOUT_CLASSIFICATION	1.8311709539160673E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999930849482526	WITHOUT_CLASSIFICATION	6.915051747402896E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.999989422269333	WITHOUT_CLASSIFICATION	1.0577730667052831E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999969772230692	WITHOUT_CLASSIFICATION	3.022776930710088E-6	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999974064286128	WITHOUT_CLASSIFICATION	2.593571387126675E-6	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999766446277923	WITHOUT_CLASSIFICATION	2.3355372207681413E-5	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999995569939485	WITHOUT_CLASSIFICATION	4.4300605148687535E-7	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.999996531535603	WITHOUT_CLASSIFICATION	3.468464397056566E-6	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.999999771827573	WITHOUT_CLASSIFICATION	2.2817242691105813E-7	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999995633168759	WITHOUT_CLASSIFICATION	4.366831241045797E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999997692066566	WITHOUT_CLASSIFICATION	2.307933434756087E-7	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999997398930774	WITHOUT_CLASSIFICATION	2.6010692254228804E-7	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999845367200864	WITHOUT_CLASSIFICATION	1.546327991365232E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999937278816935	WITHOUT_CLASSIFICATION	6.272118306446936E-6	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9999920331461439	WITHOUT_CLASSIFICATION	7.96685385604951E-6	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999969467663011	WITHOUT_CLASSIFICATION	3.053233698939726E-6	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999868399514757	WITHOUT_CLASSIFICATION	1.3160048524331998E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.99981036959598	WITHOUT_CLASSIFICATION	1.8963040401993205E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999883986778075	WITHOUT_CLASSIFICATION	1.1601322192543244E-5	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999875682703036	WITHOUT_CLASSIFICATION	1.2431729696438202E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999932596265486	WITHOUT_CLASSIFICATION	6.740373451453534E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999932596265486	WITHOUT_CLASSIFICATION	6.740373451453534E-6	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999995266494432	WITHOUT_CLASSIFICATION	4.7335055683166887E-7	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999992511296698	WITHOUT_CLASSIFICATION	7.488703301725401E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999959713404917	WITHOUT_CLASSIFICATION	4.028659508284825E-6	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999902277654343	WITHOUT_CLASSIFICATION	9.772234565674542E-6	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999848801547487	WITHOUT_CLASSIFICATION	1.5119845251244645E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992644492286	WITHOUT_CLASSIFICATION	7.35550771396319E-6	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999986847586901	WITHOUT_CLASSIFICATION	1.315241309951861E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9999998627149047	WITHOUT_CLASSIFICATION	1.3728509530264458E-7	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999999649143805	WITHOUT_CLASSIFICATION	3.5085619549580184E-8	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999882899470577	WITHOUT_CLASSIFICATION	1.1710052942340046E-5	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999990826938536	WITHOUT_CLASSIFICATION	9.173061462824857E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999965826051336	WITHOUT_CLASSIFICATION	3.417394866495989E-6	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999998866235762	WITHOUT_CLASSIFICATION	1.133764237948354E-7	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999995727647254	WITHOUT_CLASSIFICATION	4.272352746979709E-7	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999846727495	WITHOUT_CLASSIFICATION	1.5327250462125657E-8	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999841150623889	WITHOUT_CLASSIFICATION	1.588493761100139E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999466275701	WITHOUT_CLASSIFICATION	5.33724300682491E-8	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9999027411945445	WITHOUT_CLASSIFICATION	9.725880545546801E-5	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.999958412010194	WITHOUT_CLASSIFICATION	4.158798980613406E-5	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999984283559169	WITHOUT_CLASSIFICATION	1.5716440830857287E-6	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.99999466524486	WITHOUT_CLASSIFICATION	5.334755139981109E-6	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999284310765	WITHOUT_CLASSIFICATION	7.15689234968795E-8	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999921066722313	WITHOUT_CLASSIFICATION	7.893327768744557E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999997831344821	WITHOUT_CLASSIFICATION	2.1686551789884796E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999939073758302	WITHOUT_CLASSIFICATION	6.0926241697954705E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999999237170155	WITHOUT_CLASSIFICATION	7.62829844817442E-8	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9994940996186275	WITHOUT_CLASSIFICATION	5.059003813725954E-4	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999998149482415	WITHOUT_CLASSIFICATION	1.8505175838428424E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999924540612439	WITHOUT_CLASSIFICATION	7.545938756152118E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999997232782916	WITHOUT_CLASSIFICATION	2.7672170840602154E-7	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999982387820685	WITHOUT_CLASSIFICATION	1.7612179314256526E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999991405115153	WITHOUT_CLASSIFICATION	8.5948848479396E-7	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999996507957598	WITHOUT_CLASSIFICATION	3.492042402435924E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999939073758302	WITHOUT_CLASSIFICATION	6.0926241697954705E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.999992608526815	WITHOUT_CLASSIFICATION	7.391473184985918E-6	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999887647724209	WITHOUT_CLASSIFICATION	1.1235227579180627E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999986064444627	WITHOUT_CLASSIFICATION	1.3935555373242117E-6	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999994310444645	WITHOUT_CLASSIFICATION	5.689555355351769E-7	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.999999840976033	WITHOUT_CLASSIFICATION	1.5902396700130488E-7	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9999962919449795	WITHOUT_CLASSIFICATION	3.708055020476735E-6	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999991180512829	WITHOUT_CLASSIFICATION	8.819487169998143E-7	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999995193379212	WITHOUT_CLASSIFICATION	4.806620787628113E-7	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999968183230866	WITHOUT_CLASSIFICATION	3.1816769132773092E-6	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999976882994901	WITHOUT_CLASSIFICATION	2.311700509869549E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999996873217047	WITHOUT_CLASSIFICATION	3.1267829516801796E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999996873217047	WITHOUT_CLASSIFICATION	3.1267829516801796E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999996873217047	WITHOUT_CLASSIFICATION	3.1267829516801796E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999995213371493	WITHOUT_CLASSIFICATION	4.786628506839011E-7	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9999998962118196	WITHOUT_CLASSIFICATION	1.0378818033341068E-7	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999941175234047	WITHOUT_CLASSIFICATION	5.882476595243325E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999987489809292	WITHOUT_CLASSIFICATION	1.2510190707723656E-6	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999974356665625	WITHOUT_CLASSIFICATION	2.5643334375248066E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999989182065232	WITHOUT_CLASSIFICATION	1.0817934767762644E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999950404913056	WITHOUT_CLASSIFICATION	4.959508694420764E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.999999878415648	WITHOUT_CLASSIFICATION	1.2158435202507812E-7	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999990135652539	WITHOUT_CLASSIFICATION	9.864347461769607E-7	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999998163852482	WITHOUT_CLASSIFICATION	1.8361475193370132E-7	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999980322023	WITHOUT_CLASSIFICATION	1.967797689282351E-9	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999932860676749	WITHOUT_CLASSIFICATION	6.7139323251677655E-6	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9997360019638334	WITHOUT_CLASSIFICATION	2.6399803616666053E-4	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999998877671946	WITHOUT_CLASSIFICATION	1.1223280533954147E-7	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999994170770484	WITHOUT_CLASSIFICATION	5.829229515156423E-7	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999993717133125	WITHOUT_CLASSIFICATION	6.282866874406288E-7	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999916822505664	WITHOUT_CLASSIFICATION	8.317749433617188E-6	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999928590794426	WITHOUT_CLASSIFICATION	7.1409205573722E-6	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999991457600365	WITHOUT_CLASSIFICATION	8.542399635409571E-7	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.999980147525037	WITHOUT_CLASSIFICATION	1.9852474962862218E-5	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999996345688618	WITHOUT_CLASSIFICATION	3.654311382497743E-7	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999966904009379	WITHOUT_CLASSIFICATION	3.3095990622054748E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999970258971147	WITHOUT_CLASSIFICATION	2.974102885254347E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999984030611228	WITHOUT_CLASSIFICATION	1.5969388772920453E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999987831051355	WITHOUT_CLASSIFICATION	1.2168948645259587E-6	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999997944610084	WITHOUT_CLASSIFICATION	2.0553899156749963E-7	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999999673974681	WITHOUT_CLASSIFICATION	3.260253185189732E-8	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999999054668657	WITHOUT_CLASSIFICATION	9.453313436403685E-8	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999968136021868	WITHOUT_CLASSIFICATION	3.1863978131078477E-6	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999997771183499	WITHOUT_CLASSIFICATION	2.2288165003285341E-7	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999995337264469	WITHOUT_CLASSIFICATION	4.6627355310245094E-7	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999997683519057	WITHOUT_CLASSIFICATION	2.3164809432407076E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999993156753857	WITHOUT_CLASSIFICATION	6.843246143037049E-7	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999999324710374	WITHOUT_CLASSIFICATION	6.752896267933119E-8	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999943172902961	WITHOUT_CLASSIFICATION	5.682709703916854E-6	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9999994796378542	WITHOUT_CLASSIFICATION	5.203621458128589E-7	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.999999904248713	WITHOUT_CLASSIFICATION	9.575128694395987E-8	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999916204455179	WITHOUT_CLASSIFICATION	8.379554482046567E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999948789446927	WITHOUT_CLASSIFICATION	5.121055307333495E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999948789446927	WITHOUT_CLASSIFICATION	5.121055307333495E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999980625393943	WITHOUT_CLASSIFICATION	1.937460605735067E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999980625393943	WITHOUT_CLASSIFICATION	1.937460605735067E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999976917508768	WITHOUT_CLASSIFICATION	2.3082491231344726E-6	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999997640738408	WITHOUT_CLASSIFICATION	2.359261592359416E-7	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999999467313904	WITHOUT_CLASSIFICATION	5.3268609503367987E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999988177556822	WITHOUT_CLASSIFICATION	1.1822443177858933E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999988177556822	WITHOUT_CLASSIFICATION	1.1822443177858933E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999988177556822	WITHOUT_CLASSIFICATION	1.1822443177858933E-6	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999992485211544	WITHOUT_CLASSIFICATION	7.51478845596502E-7	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999998789969816	WITHOUT_CLASSIFICATION	1.2100301846405145E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999841798440737	WITHOUT_CLASSIFICATION	1.582015592635674E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.999999468254348	WITHOUT_CLASSIFICATION	5.317456519100663E-7	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999917543082576	WITHOUT_CLASSIFICATION	8.245691742419123E-6	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999936747841561	WITHOUT_CLASSIFICATION	6.325215843915085E-6	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999975881282234	WITHOUT_CLASSIFICATION	2.4118717766176148E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999864756052413	WITHOUT_CLASSIFICATION	1.3524394758715723E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999864756052413	WITHOUT_CLASSIFICATION	1.3524394758715723E-5	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.999999431208372	WITHOUT_CLASSIFICATION	5.687916281268313E-7	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999967277011088	WITHOUT_CLASSIFICATION	3.2722988911484322E-6	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9998075551068837	WITHOUT_CLASSIFICATION	1.924448931163624E-4	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999727259406125	WITHOUT_CLASSIFICATION	2.7274059387468643E-5	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999964820099113	WITHOUT_CLASSIFICATION	3.517990088724255E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9995905634341085	WITHOUT_CLASSIFICATION	4.094365658916032E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999915098335461	WITHOUT_CLASSIFICATION	8.490166453819903E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999915165087653	WITHOUT_CLASSIFICATION	8.483491234634514E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999962326918491	WITHOUT_CLASSIFICATION	3.767308150775861E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999994550533328	WITHOUT_CLASSIFICATION	5.449466672048463E-7	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999991668375667	WITHOUT_CLASSIFICATION	8.331624332397027E-7	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999886235067679	WITHOUT_CLASSIFICATION	1.1376493232120298E-5	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999995612361657	WITHOUT_CLASSIFICATION	4.387638341772106E-7	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.999908544548059	WITHOUT_CLASSIFICATION	9.14554519410042E-5	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999995312737957	WITHOUT_CLASSIFICATION	4.6872620419055196E-7	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999990115823326	WITHOUT_CLASSIFICATION	9.884176674408253E-7	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9998402799782748	WITHOUT_CLASSIFICATION	1.5972002172516038E-4	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999983151436395	WITHOUT_CLASSIFICATION	1.6848563605041185E-6	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999999409086299	WITHOUT_CLASSIFICATION	5.909137002671414E-8	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999995905414134	WITHOUT_CLASSIFICATION	4.094585865164306E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999985221002775	WITHOUT_CLASSIFICATION	1.4778997225081187E-6	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999857986120968	WITHOUT_CLASSIFICATION	1.4201387903143451E-5	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999998781861837	WITHOUT_CLASSIFICATION	1.218138162824599E-7	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999997421549934	WITHOUT_CLASSIFICATION	2.5784500659777263E-7	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999993923876351	WITHOUT_CLASSIFICATION	6.076123648950952E-7	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999976974050496	WITHOUT_CLASSIFICATION	2.3025949503458244E-6	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999983543066748	WITHOUT_CLASSIFICATION	1.6456933251794897E-6	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.999998097904328	WITHOUT_CLASSIFICATION	1.902095671896107E-6	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999973477602061	WITHOUT_CLASSIFICATION	2.6522397938001705E-6	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999973477602061	WITHOUT_CLASSIFICATION	2.6522397938001705E-6	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999991678302447	WITHOUT_CLASSIFICATION	8.321697553393997E-7	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999997883784179	WITHOUT_CLASSIFICATION	2.1162158210693882E-7	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999927995014489	WITHOUT_CLASSIFICATION	7.200498550998157E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999947995776641	WITHOUT_CLASSIFICATION	5.200422335918838E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999947995776641	WITHOUT_CLASSIFICATION	5.200422335918838E-6	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999981915529561	WITHOUT_CLASSIFICATION	1.8084470439122488E-6	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9999952464155147	WITHOUT_CLASSIFICATION	4.753584485365227E-6	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999459443436199	WITHOUT_CLASSIFICATION	5.405565638012077E-5	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999998421929543	WITHOUT_CLASSIFICATION	1.578070455779246E-7	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999988917863913	WITHOUT_CLASSIFICATION	1.1082136087188087E-6	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999998619432561	WITHOUT_CLASSIFICATION	1.380567439209193E-7	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999997182374286	WITHOUT_CLASSIFICATION	2.8176257142302526E-7	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999996703596772	WITHOUT_CLASSIFICATION	3.296403227978525E-7	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999998478451587	WITHOUT_CLASSIFICATION	1.5215484130014253E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999758867114409	WITHOUT_CLASSIFICATION	2.4113288559151913E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999653690608	WITHOUT_CLASSIFICATION	3.463093926342894E-8	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999981617367605	WITHOUT_CLASSIFICATION	1.838263239492462E-6	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999987460231986	WITHOUT_CLASSIFICATION	1.253976801438278E-6	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.99999960245127	WITHOUT_CLASSIFICATION	3.975487301209347E-7	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999990585212791	WITHOUT_CLASSIFICATION	9.414787208902436E-7	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999959643263877	WITHOUT_CLASSIFICATION	4.0356736123141075E-6	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.999998580431807	WITHOUT_CLASSIFICATION	1.4195681930357978E-6	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999986860163723	WITHOUT_CLASSIFICATION	1.3139836276439416E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999969467117106	WITHOUT_CLASSIFICATION	3.05328828953218E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999997211548639	WITHOUT_CLASSIFICATION	2.788451360202219E-7	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999717921884381	WITHOUT_CLASSIFICATION	2.8207811561905202E-5	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999978482710209	WITHOUT_CLASSIFICATION	2.15172897918797E-6	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999950675145688	WITHOUT_CLASSIFICATION	4.932485431194082E-6	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9998417732036134	WITHOUT_CLASSIFICATION	1.5822679638654915E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999986682059886	WITHOUT_CLASSIFICATION	1.331794011326491E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999986682059886	WITHOUT_CLASSIFICATION	1.331794011326491E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999986682059886	WITHOUT_CLASSIFICATION	1.331794011326491E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999986682059886	WITHOUT_CLASSIFICATION	1.331794011326491E-6	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999997869087232	WITHOUT_CLASSIFICATION	2.1309127673535672E-7	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999791523107686	WITHOUT_CLASSIFICATION	2.0847689231422574E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999852462578986	WITHOUT_CLASSIFICATION	1.4753742101288068E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999852462578986	WITHOUT_CLASSIFICATION	1.4753742101288068E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999852462578986	WITHOUT_CLASSIFICATION	1.4753742101288068E-5	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999947008998888	WITHOUT_CLASSIFICATION	5.299100111172445E-6	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999996011746773	WITHOUT_CLASSIFICATION	3.9882532263402116E-7	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.99998779954091	WITHOUT_CLASSIFICATION	1.2200459089906233E-5	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999993353621613	WITHOUT_CLASSIFICATION	6.646378385474662E-7	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999993353621613	WITHOUT_CLASSIFICATION	6.646378385474662E-7	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999937278816935	WITHOUT_CLASSIFICATION	6.272118306446936E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999937278816935	WITHOUT_CLASSIFICATION	6.272118306446936E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9999885435080492	WITHOUT_CLASSIFICATION	1.1456491950804927E-5	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9999885435080492	WITHOUT_CLASSIFICATION	1.1456491950804927E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9997957312847127	WITHOUT_CLASSIFICATION	2.0426871528736936E-4	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999810094297724	WITHOUT_CLASSIFICATION	1.8990570227600455E-5	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999887710054614	WITHOUT_CLASSIFICATION	1.1228994538778919E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999850594883457	WITHOUT_CLASSIFICATION	1.4940511654325434E-5	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999805263093594	WITHOUT_CLASSIFICATION	1.947369064063798E-5	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999954984183633	WITHOUT_CLASSIFICATION	4.501581636669857E-6	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.999987000169986	WITHOUT_CLASSIFICATION	1.2999830013925975E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.999837985214639	WITHOUT_CLASSIFICATION	1.6201478536115522E-4	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999967348693766	WITHOUT_CLASSIFICATION	3.2651306234459502E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999826631649265	WITHOUT_CLASSIFICATION	1.7336835073540595E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999777413474764	WITHOUT_CLASSIFICATION	2.2258652523493805E-5	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999805848653777	WITHOUT_CLASSIFICATION	1.941513462231703E-5	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999948951917045	WITHOUT_CLASSIFICATION	5.104808295487204E-6	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999904199960056	WITHOUT_CLASSIFICATION	9.58000399439582E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999770476776461	WITHOUT_CLASSIFICATION	2.2952322353919548E-5	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999418801814712	WITHOUT_CLASSIFICATION	5.811981852873972E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999865909208911	WITHOUT_CLASSIFICATION	1.3409079108801002E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999867436665978	WITHOUT_CLASSIFICATION	1.3256333402065895E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999948868869118	WITHOUT_CLASSIFICATION	5.1131130881500115E-6	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999584537958156	WITHOUT_CLASSIFICATION	4.154620418445243E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999792571041441	WITHOUT_CLASSIFICATION	2.074289585586624E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999792571041441	WITHOUT_CLASSIFICATION	2.074289585586624E-5	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999562892997567	WITHOUT_CLASSIFICATION	4.3710700243366127E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999967394072705	WITHOUT_CLASSIFICATION	3.260592729403285E-6	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9995547380422187	WITHOUT_CLASSIFICATION	4.4526195778131483E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9996700720629926	WITHOUT_CLASSIFICATION	3.29927937007472E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9994349085032548	WITHOUT_CLASSIFICATION	5.650914967452864E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9997455402276991	WITHOUT_CLASSIFICATION	2.54459772300874E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9997153810296833	WITHOUT_CLASSIFICATION	2.8461897031668897E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9996832255086574	WITHOUT_CLASSIFICATION	3.167744913424991E-4	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9996671345446486	WITHOUT_CLASSIFICATION	3.3286545535132084E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9996089589505904	WITHOUT_CLASSIFICATION	3.910410494095441E-4	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9996756118814187	WITHOUT_CLASSIFICATION	3.2438811858129555E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9995898505314083	WITHOUT_CLASSIFICATION	4.1014946859184307E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.999734417097699	WITHOUT_CLASSIFICATION	2.655829023010888E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.999505136835267	WITHOUT_CLASSIFICATION	4.948631647329656E-4	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9996450538435061	WITHOUT_CLASSIFICATION	3.549461564938338E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9995388923567046	WITHOUT_CLASSIFICATION	4.611076432953933E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999543747363778	WITHOUT_CLASSIFICATION	4.562526362216806E-5	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999814126477448	WITHOUT_CLASSIFICATION	1.858735225514923E-5	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999942428128076	WITHOUT_CLASSIFICATION	5.757187192465386E-6	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999169046506454	WITHOUT_CLASSIFICATION	8.309534935461135E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999878183291099	WITHOUT_CLASSIFICATION	1.2181670890178583E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999878183291099	WITHOUT_CLASSIFICATION	1.2181670890178583E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999878183291099	WITHOUT_CLASSIFICATION	1.2181670890178583E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999878183291099	WITHOUT_CLASSIFICATION	1.2181670890178583E-5	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.999969971106143	WITHOUT_CLASSIFICATION	3.0028893856886536E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999354928572223	WITHOUT_CLASSIFICATION	6.450714277769975E-5	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999339112285132	WITHOUT_CLASSIFICATION	6.60887714868104E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999921103000062	WITHOUT_CLASSIFICATION	7.889699993716608E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999921103000062	WITHOUT_CLASSIFICATION	7.889699993716608E-6	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999980352311343	WITHOUT_CLASSIFICATION	1.9647688657117663E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999998305804203	WITHOUT_CLASSIFICATION	1.694195795573922E-7	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999998305804203	WITHOUT_CLASSIFICATION	1.694195795573922E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999853976567485	WITHOUT_CLASSIFICATION	1.4602343251497189E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999853976567485	WITHOUT_CLASSIFICATION	1.4602343251497189E-5	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999945646329326	WITHOUT_CLASSIFICATION	5.435367067373516E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.999990586096302	WITHOUT_CLASSIFICATION	9.413903697971506E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999960645151651	WITHOUT_CLASSIFICATION	3.935484834848837E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999953952994108	WITHOUT_CLASSIFICATION	4.604700589144651E-6	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999861579820871	WITHOUT_CLASSIFICATION	1.3842017912887262E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999947180666741	WITHOUT_CLASSIFICATION	5.281933325845649E-6	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999945090098478	WITHOUT_CLASSIFICATION	5.490990152283356E-6	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999983824058281	WITHOUT_CLASSIFICATION	1.6175941720151443E-6	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999995525514219	WITHOUT_CLASSIFICATION	4.474485780878652E-7	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999995525514219	WITHOUT_CLASSIFICATION	4.474485780878652E-7	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999955618999836	WITHOUT_CLASSIFICATION	4.4381000163794716E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999986815760761	WITHOUT_CLASSIFICATION	1.3184239239588316E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999958947698643	WITHOUT_CLASSIFICATION	4.1052301356894414E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999989648485439	WITHOUT_CLASSIFICATION	1.0351514560271768E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999874813960543	WITHOUT_CLASSIFICATION	1.2518603945700104E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999995795035322	WITHOUT_CLASSIFICATION	4.204964678032132E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999995795035322	WITHOUT_CLASSIFICATION	4.204964678032132E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999995795035322	WITHOUT_CLASSIFICATION	4.204964678032132E-6	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999993712406802	WITHOUT_CLASSIFICATION	6.287593198588008E-7	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999993712406802	WITHOUT_CLASSIFICATION	6.287593198588008E-7	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999997616402434	WITHOUT_CLASSIFICATION	2.3835975668877245E-7	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999993016836601	WITHOUT_CLASSIFICATION	6.983163397796188E-7	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999993016836601	WITHOUT_CLASSIFICATION	6.983163397796188E-7	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999996417806218	WITHOUT_CLASSIFICATION	3.582193781073843E-7	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999993804931072	WITHOUT_CLASSIFICATION	6.195068927317907E-7	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999902277654343	WITHOUT_CLASSIFICATION	9.772234565674542E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986849744587	WITHOUT_CLASSIFICATION	1.3150255412945804E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999889546541839	WITHOUT_CLASSIFICATION	1.1045345816095164E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999889546541839	WITHOUT_CLASSIFICATION	1.1045345816095164E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999915954804225	WITHOUT_CLASSIFICATION	8.404519577587314E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999901137523979	WITHOUT_CLASSIFICATION	9.886247602135675E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899609495762	WITHOUT_CLASSIFICATION	1.0039050423819933E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999990165024549	WITHOUT_CLASSIFICATION	9.83497545107881E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999906035462869	WITHOUT_CLASSIFICATION	9.396453713071223E-6	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999912847130503	WITHOUT_CLASSIFICATION	8.715286949627463E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924632093509	WITHOUT_CLASSIFICATION	7.53679064914468E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924632093509	WITHOUT_CLASSIFICATION	7.53679064914468E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924632093509	WITHOUT_CLASSIFICATION	7.53679064914468E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999897471522144	WITHOUT_CLASSIFICATION	1.0252847785565516E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999926190180505	WITHOUT_CLASSIFICATION	7.380981949418839E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999984637265145	WITHOUT_CLASSIFICATION	1.536273485498462E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999984637265145	WITHOUT_CLASSIFICATION	1.536273485498462E-5	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.999984584609353	WITHOUT_CLASSIFICATION	1.5415390647007876E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999920479533847	WITHOUT_CLASSIFICATION	7.952046615262002E-6	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999893444416141	WITHOUT_CLASSIFICATION	1.065555838583963E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902311500833	WITHOUT_CLASSIFICATION	9.768849916686177E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999906135199621	WITHOUT_CLASSIFICATION	9.386480037902081E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999971439021712	WITHOUT_CLASSIFICATION	2.856097828827722E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999965963775717	WITHOUT_CLASSIFICATION	3.4036224284142427E-6	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999717444160913	WITHOUT_CLASSIFICATION	2.8255583908774135E-5	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999964076155685	WITHOUT_CLASSIFICATION	3.592384431565366E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999851104209244	WITHOUT_CLASSIFICATION	1.488957907567016E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999981513259091	WITHOUT_CLASSIFICATION	1.848674090981613E-6	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999715776403433	WITHOUT_CLASSIFICATION	2.8422359656709196E-5	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999899141802703	WITHOUT_CLASSIFICATION	1.0085819729761088E-5	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999436970474039	WITHOUT_CLASSIFICATION	5.630295259611992E-5	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9998637989829176	WITHOUT_CLASSIFICATION	1.3620101708250736E-4	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999802923485287	WITHOUT_CLASSIFICATION	1.970765147129414E-5	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999948014757609	WITHOUT_CLASSIFICATION	5.198524239106061E-6	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999969541835187	WITHOUT_CLASSIFICATION	3.0458164812996875E-6	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.999998595153533	WITHOUT_CLASSIFICATION	1.4048464670519549E-6	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999933072045051	WITHOUT_CLASSIFICATION	6.692795494933197E-6	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.999810809369355	WITHOUT_CLASSIFICATION	1.8919063064514816E-4	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999820029893562	WITHOUT_CLASSIFICATION	1.7997010643649357E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999997324624471	WITHOUT_CLASSIFICATION	2.675375529682784E-7	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999977764579169	WITHOUT_CLASSIFICATION	2.2235420830360216E-6	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.999999760668198	WITHOUT_CLASSIFICATION	2.393318021212193E-7	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999919392045096	WITHOUT_CLASSIFICATION	8.060795490399446E-6	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999995726586463	WITHOUT_CLASSIFICATION	4.2734135377481677E-7	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9998289271171094	WITHOUT_CLASSIFICATION	1.7107288289063542E-4	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9998113672101137	WITHOUT_CLASSIFICATION	1.8863278988627636E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999543009998106	WITHOUT_CLASSIFICATION	4.569900018926642E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999983813285827	WITHOUT_CLASSIFICATION	1.6186714172969963E-6	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998644859643	WITHOUT_CLASSIFICATION	1.3551403569990608E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999996106789246	WITHOUT_CLASSIFICATION	3.8932107544755546E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999933251253962	WITHOUT_CLASSIFICATION	6.674874603824419E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999988301018807	WITHOUT_CLASSIFICATION	1.1698981193009424E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999861006923092	WITHOUT_CLASSIFICATION	1.389930769094478E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999932610289847	WITHOUT_CLASSIFICATION	6.73897101526777E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999992386017993	WITHOUT_CLASSIFICATION	7.61398200676893E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999985477467793	WITHOUT_CLASSIFICATION	1.4522532206419351E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999504160161049	WITHOUT_CLASSIFICATION	4.9583983895017755E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999817109684924	WITHOUT_CLASSIFICATION	1.8289031507636012E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958194835229	WITHOUT_CLASSIFICATION	4.1805164769978625E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999927060992504	WITHOUT_CLASSIFICATION	7.293900749541065E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999987904842201	WITHOUT_CLASSIFICATION	1.209515779769152E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999980145816691	WITHOUT_CLASSIFICATION	1.9854183308837623E-6	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9997774617581323	WITHOUT_CLASSIFICATION	2.22538241867734E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999696413067547	WITHOUT_CLASSIFICATION	3.035869324523656E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999976391247095	WITHOUT_CLASSIFICATION	2.360875290540017E-6	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999919354572461	WITHOUT_CLASSIFICATION	8.064542754024175E-6	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999994461862901	WITHOUT_CLASSIFICATION	5.538137098429796E-7	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999943090127251	WITHOUT_CLASSIFICATION	5.6909872749029714E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999371963692921	WITHOUT_CLASSIFICATION	6.280363070783469E-5	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999988275582266	WITHOUT_CLASSIFICATION	1.1724417734113387E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999371963692921	WITHOUT_CLASSIFICATION	6.280363070783469E-5	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9997815463998585	WITHOUT_CLASSIFICATION	2.1845360014149923E-4	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999968812713222	WITHOUT_CLASSIFICATION	3.1187286777693757E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999985322268171	WITHOUT_CLASSIFICATION	1.4677731828927173E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.999982147656689	WITHOUT_CLASSIFICATION	1.7852343310911764E-5	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999909239813743	WITHOUT_CLASSIFICATION	9.076018625662476E-6	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999953401322017	WITHOUT_CLASSIFICATION	4.659867798324261E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999989703024913	WITHOUT_CLASSIFICATION	1.029697508737986E-6	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999143503832237	WITHOUT_CLASSIFICATION	8.564961677630118E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999981513259091	WITHOUT_CLASSIFICATION	1.848674090981613E-6	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9998291576241639	WITHOUT_CLASSIFICATION	1.7084237583619356E-4	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9996524395088462	WITHOUT_CLASSIFICATION	3.475604911538252E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999995456224636	WITHOUT_CLASSIFICATION	4.543775363717025E-7	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999998222121887	WITHOUT_CLASSIFICATION	1.7778781119843248E-7	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9995844394193463	WITHOUT_CLASSIFICATION	4.155605806537163E-4	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9996200777008962	WITHOUT_CLASSIFICATION	3.7992229910376003E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9993462508027284	WITHOUT_CLASSIFICATION	6.537491972715824E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.999981203605777	WITHOUT_CLASSIFICATION	1.8796394222968598E-5	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999917580788731	WITHOUT_CLASSIFICATION	8.241921126973021E-6	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.999998519089662	WITHOUT_CLASSIFICATION	1.4809103380703326E-6	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.99999915095135	WITHOUT_CLASSIFICATION	8.490486499350257E-7	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999995816231918	WITHOUT_CLASSIFICATION	4.1837680821535795E-7	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999602722946938	WITHOUT_CLASSIFICATION	3.972770530627797E-5	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999914536139282	WITHOUT_CLASSIFICATION	8.546386071919482E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999975825491308	WITHOUT_CLASSIFICATION	2.4174508691080087E-6	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999931948161322	WITHOUT_CLASSIFICATION	6.8051838677894E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999985667528185	WITHOUT_CLASSIFICATION	1.4332471814945671E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9998472398269174	WITHOUT_CLASSIFICATION	1.5276017308259635E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9998472398269174	WITHOUT_CLASSIFICATION	1.5276017308259635E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9998652249388744	WITHOUT_CLASSIFICATION	1.3477506112556206E-4	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9999989079582983	WITHOUT_CLASSIFICATION	1.0920417016845833E-6	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9999932327189232	WITHOUT_CLASSIFICATION	6.7672810769164184E-6	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999927644135895	WITHOUT_CLASSIFICATION	7.235586410367482E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999927067799498	WITHOUT_CLASSIFICATION	7.29322005022032E-6	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9997845917133229	WITHOUT_CLASSIFICATION	2.154082866771241E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9969332412295324	WITHOUT_CLASSIFICATION	0.003066758770467648	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999939949955207	WITHOUT_CLASSIFICATION	6.005004479304443E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999855634907348	WITHOUT_CLASSIFICATION	1.4436509265224594E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997175712256515	WITHOUT_CLASSIFICATION	2.824287743485229E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997983277602107	WITHOUT_CLASSIFICATION	2.0167223978927819E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999851243319383	WITHOUT_CLASSIFICATION	1.4875668061677732E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999146333943008	WITHOUT_CLASSIFICATION	8.536660569920964E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9998506840392256	WITHOUT_CLASSIFICATION	1.4931596077435741E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999925731698809	WITHOUT_CLASSIFICATION	7.426830119116346E-6	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9998859790064615	WITHOUT_CLASSIFICATION	1.1402099353862544E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999993550014988	WITHOUT_CLASSIFICATION	6.449985012039215E-6	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999498984976052	WITHOUT_CLASSIFICATION	5.010150239470784E-5	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999595064111098	WITHOUT_CLASSIFICATION	4.049358889019056E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999927067799498	WITHOUT_CLASSIFICATION	7.29322005022032E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999993550014988	WITHOUT_CLASSIFICATION	6.449985012039215E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999939949955207	WITHOUT_CLASSIFICATION	6.005004479304443E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999855634907348	WITHOUT_CLASSIFICATION	1.4436509265224594E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999957294235651	WITHOUT_CLASSIFICATION	4.270576435009232E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999429427608486	WITHOUT_CLASSIFICATION	5.705723915142347E-5	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999801347197944	WITHOUT_CLASSIFICATION	1.9865280205521208E-5	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.999985865490533	WITHOUT_CLASSIFICATION	1.4134509466972984E-5	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999714232875101	WITHOUT_CLASSIFICATION	2.8576712489936596E-5	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9996762815143027	WITHOUT_CLASSIFICATION	3.2371848569735063E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9996762815143027	WITHOUT_CLASSIFICATION	3.2371848569735063E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999408698932051	WITHOUT_CLASSIFICATION	5.913010679489132E-5	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999952749526336	WITHOUT_CLASSIFICATION	4.725047366402725E-5	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999673310478769	WITHOUT_CLASSIFICATION	3.266895212299152E-5	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999776068193335	WITHOUT_CLASSIFICATION	2.2393180666593614E-5	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999926175537523	WITHOUT_CLASSIFICATION	7.382446247701387E-5	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999655787543797	WITHOUT_CLASSIFICATION	3.442124562021025E-5	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999462196229049	WITHOUT_CLASSIFICATION	5.378037709515734E-5	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999836870213202	WITHOUT_CLASSIFICATION	1.631297867975911E-5	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999974890411383	WITHOUT_CLASSIFICATION	2.5109588616955863E-5	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999607681188581	WITHOUT_CLASSIFICATION	3.92318811418317E-5	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999881000768631	WITHOUT_CLASSIFICATION	1.1899923136873993E-5	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999659625474991	WITHOUT_CLASSIFICATION	3.403745250089203E-5	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999485269201785	WITHOUT_CLASSIFICATION	5.147307982145931E-5	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999230831679785	WITHOUT_CLASSIFICATION	7.691683202158444E-5	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999766687603411	WITHOUT_CLASSIFICATION	2.3331239658909333E-5	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999668975600822	WITHOUT_CLASSIFICATION	3.310243991786288E-5	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999535178220786	WITHOUT_CLASSIFICATION	4.6482177921367675E-5	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999855609589641	WITHOUT_CLASSIFICATION	1.4439041035971364E-5	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999653282486989	WITHOUT_CLASSIFICATION	3.4671751301106174E-5	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999442021720558	WITHOUT_CLASSIFICATION	5.579782794427894E-5	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999921649860853	WITHOUT_CLASSIFICATION	7.835013914702522E-5	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999762339704954	WITHOUT_CLASSIFICATION	2.3766029504650384E-5	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999711817231163	WITHOUT_CLASSIFICATION	2.8818276883688934E-5	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999583188475644	WITHOUT_CLASSIFICATION	4.168115243574724E-5	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999348768790237	WITHOUT_CLASSIFICATION	6.512312097627904E-5	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999802463177676	WITHOUT_CLASSIFICATION	1.9753682232432266E-5	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999313304750946	WITHOUT_CLASSIFICATION	6.866952490541459E-5	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999269409610888	WITHOUT_CLASSIFICATION	7.305903891125115E-5	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9998056318359653	WITHOUT_CLASSIFICATION	1.9436816403472205E-4	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999473218089577	WITHOUT_CLASSIFICATION	5.267819104240602E-5	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9994971972707759	WITHOUT_CLASSIFICATION	5.028027292241715E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999435583352322	WITHOUT_CLASSIFICATION	5.644166476773655E-5	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999435073468593	WITHOUT_CLASSIFICATION	5.649265314069014E-5	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999155825696642	WITHOUT_CLASSIFICATION	8.44174303358321E-5	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999743934644802	WITHOUT_CLASSIFICATION	2.5606535519752568E-5	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999938467479859	WITHOUT_CLASSIFICATION	6.153252014095528E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999080516845584	WITHOUT_CLASSIFICATION	9.194831544156548E-5	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999972108957239	WITHOUT_CLASSIFICATION	2.7891042760975494E-5	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999332928277697	WITHOUT_CLASSIFICATION	6.670717223032387E-5	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999063316015642	WITHOUT_CLASSIFICATION	9.366839843588331E-5	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999715871636745	WITHOUT_CLASSIFICATION	2.8412836325538606E-5	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999950169255819	WITHOUT_CLASSIFICATION	4.9830744181050396E-5	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999255372690982	WITHOUT_CLASSIFICATION	7.44627309017999E-5	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999687922809207	WITHOUT_CLASSIFICATION	3.1207719079203986E-5	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999126510744155	WITHOUT_CLASSIFICATION	8.73489255844592E-5	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997846439447496	WITHOUT_CLASSIFICATION	2.1535605525039054E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.999934726853542	WITHOUT_CLASSIFICATION	6.527314645801718E-5	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999618293457019	WITHOUT_CLASSIFICATION	3.8170654298042635E-5	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999936588634866	WITHOUT_CLASSIFICATION	6.341136513446977E-6	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999933391950426	WITHOUT_CLASSIFICATION	6.660804957415183E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999983223337561	WITHOUT_CLASSIFICATION	1.6776662439067169E-6	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999977345636278	WITHOUT_CLASSIFICATION	2.2654363721521726E-6	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999996041503612	WITHOUT_CLASSIFICATION	3.958496388085106E-7	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999502621010458	WITHOUT_CLASSIFICATION	4.973789895424727E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999984637265145	WITHOUT_CLASSIFICATION	1.536273485498462E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999851243319383	WITHOUT_CLASSIFICATION	1.4875668061677732E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999994879541202	WITHOUT_CLASSIFICATION	5.12045879849286E-7	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999994738999118	WITHOUT_CLASSIFICATION	5.261000881534684E-7	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999936812436632	WITHOUT_CLASSIFICATION	6.3187563368853785E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999712542286496	WITHOUT_CLASSIFICATION	2.8745771350309228E-5	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999934052041659	WITHOUT_CLASSIFICATION	6.594795834078476E-6	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999783346666287	WITHOUT_CLASSIFICATION	2.1665333371372642E-5	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999981039519644	WITHOUT_CLASSIFICATION	1.8960480355686352E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999882662002914	WITHOUT_CLASSIFICATION	1.1733799708724676E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999882662002914	WITHOUT_CLASSIFICATION	1.1733799708724676E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997983277602107	WITHOUT_CLASSIFICATION	2.0167223978927819E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999725684430911	WITHOUT_CLASSIFICATION	2.743155690890443E-5	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999964388654972	WITHOUT_CLASSIFICATION	3.5611345028488965E-6	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999737080519008	WITHOUT_CLASSIFICATION	2.629194809924254E-5	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999767833424356	WITHOUT_CLASSIFICATION	2.3216657564432046E-5	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999588852727055	WITHOUT_CLASSIFICATION	4.111472729445876E-5	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999940446851194	WITHOUT_CLASSIFICATION	5.9553148805976185E-5	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999709650738552	WITHOUT_CLASSIFICATION	2.9034926144813747E-5	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999923816822048	WITHOUT_CLASSIFICATION	7.618317795161273E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999882662002914	WITHOUT_CLASSIFICATION	1.1733799708724676E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999961774921211	WITHOUT_CLASSIFICATION	3.8225078788990707E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999764240304174	WITHOUT_CLASSIFICATION	2.357596958261859E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999951474623434	WITHOUT_CLASSIFICATION	4.852537656469224E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999986896996848	WITHOUT_CLASSIFICATION	1.3103003153203743E-6	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999904500769643	WITHOUT_CLASSIFICATION	9.549923035653181E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999986994945741	WITHOUT_CLASSIFICATION	1.300505425851815E-6	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999978315514063	WITHOUT_CLASSIFICATION	2.1684485937240106E-6	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999776773496063	WITHOUT_CLASSIFICATION	2.2322650393684927E-5	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.999992850561885	WITHOUT_CLASSIFICATION	7.149438114966463E-6	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999978113580765	WITHOUT_CLASSIFICATION	2.18864192352382E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997983277602107	WITHOUT_CLASSIFICATION	2.0167223978927819E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999882662002914	WITHOUT_CLASSIFICATION	1.1733799708724676E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999951474623434	WITHOUT_CLASSIFICATION	4.852537656469224E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999986896996848	WITHOUT_CLASSIFICATION	1.3103003153203743E-6	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999904500769643	WITHOUT_CLASSIFICATION	9.549923035653181E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999989084751213	WITHOUT_CLASSIFICATION	1.0915248787808662E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9998725722318873	WITHOUT_CLASSIFICATION	1.274277681126334E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999955503145552	WITHOUT_CLASSIFICATION	4.449685444825312E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999949899516838	WITHOUT_CLASSIFICATION	5.01004831618467E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999988101266712	WITHOUT_CLASSIFICATION	1.1898733288020759E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999988101266712	WITHOUT_CLASSIFICATION	1.1898733288020759E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999988101266712	WITHOUT_CLASSIFICATION	1.1898733288020759E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999965092146078	WITHOUT_CLASSIFICATION	3.490785392078669E-6	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999986923131982	WITHOUT_CLASSIFICATION	1.3076868018673699E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999903313769479	WITHOUT_CLASSIFICATION	9.66862305202518E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999968886248933	WITHOUT_CLASSIFICATION	3.1113751067705722E-6	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999955639196472	WITHOUT_CLASSIFICATION	4.436080352862011E-6	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999995522957531	WITHOUT_CLASSIFICATION	4.477042470058554E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999677669178971	WITHOUT_CLASSIFICATION	3.223308210292828E-5	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999835865990228	WITHOUT_CLASSIFICATION	1.641340097724575E-5	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999996312154423	WITHOUT_CLASSIFICATION	3.687845577088536E-7	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999998786994416	WITHOUT_CLASSIFICATION	1.213005583871514E-7	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999989333999142	WITHOUT_CLASSIFICATION	1.0666000858383361E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999982103104339	WITHOUT_CLASSIFICATION	1.7896895661359378E-6	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999879942824212	WITHOUT_CLASSIFICATION	1.2005717578761303E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.999996175956091	WITHOUT_CLASSIFICATION	3.8240439089725545E-6	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999995881118996	WITHOUT_CLASSIFICATION	4.118881004189577E-7	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999986458300464	WITHOUT_CLASSIFICATION	1.354169953511111E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9999349551714244	WITHOUT_CLASSIFICATION	6.504482857568397E-5	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9999841250156939	WITHOUT_CLASSIFICATION	1.587498430603427E-5	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999998994993696	WITHOUT_CLASSIFICATION	1.0050063045777565E-7	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999925345140117	WITHOUT_CLASSIFICATION	7.46548598830441E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999966869413424	WITHOUT_CLASSIFICATION	3.313058657531584E-6	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999995710243896	WITHOUT_CLASSIFICATION	4.2897561042641537E-7	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999935731128798	WITHOUT_CLASSIFICATION	6.426887120251611E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999992456218125	WITHOUT_CLASSIFICATION	7.543781874077809E-7	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999997669518313	WITHOUT_CLASSIFICATION	2.3304816856462153E-7	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999991606882614	WITHOUT_CLASSIFICATION	8.393117386719267E-7	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999995792535651	WITHOUT_CLASSIFICATION	4.207464348532282E-7	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999997206290424	WITHOUT_CLASSIFICATION	2.793709576800375E-7	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999970191083513	WITHOUT_CLASSIFICATION	2.98089164881716E-6	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.999982891983181	WITHOUT_CLASSIFICATION	1.7108016819015764E-5	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999988776876687	WITHOUT_CLASSIFICATION	1.1223123313237315E-6	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999984482206559	WITHOUT_CLASSIFICATION	1.5517793440790967E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999976638204859	WITHOUT_CLASSIFICATION	2.336179514007341E-6	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9999972578040117	WITHOUT_CLASSIFICATION	2.742195988302426E-6	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999998011548332	WITHOUT_CLASSIFICATION	1.9884516671270834E-7	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999847953281068	WITHOUT_CLASSIFICATION	1.5204671893175852E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999997324624471	WITHOUT_CLASSIFICATION	2.675375529682784E-7	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9998714620671093	WITHOUT_CLASSIFICATION	1.285379328907154E-4	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999994793460047	WITHOUT_CLASSIFICATION	5.206539952085064E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999997631331541	WITHOUT_CLASSIFICATION	2.3686684591293295E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999993991778433	WITHOUT_CLASSIFICATION	6.008221567889636E-7	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924344741132	WITHOUT_CLASSIFICATION	7.56552588669032E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999988193095025	WITHOUT_CLASSIFICATION	1.1806904974790138E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924344741132	WITHOUT_CLASSIFICATION	7.56552588669032E-6	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999997282793704	WITHOUT_CLASSIFICATION	2.717206296192482E-7	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999878568735866	WITHOUT_CLASSIFICATION	1.2143126413484422E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.999872074566865	WITHOUT_CLASSIFICATION	1.279254331349469E-4	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.999995582156305	WITHOUT_CLASSIFICATION	4.417843694905703E-6	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.999990089014533	WITHOUT_CLASSIFICATION	9.910985467038274E-6	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.999999566449837	WITHOUT_CLASSIFICATION	4.3355016306962984E-7	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999975280150581	WITHOUT_CLASSIFICATION	2.4719849417938568E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.999994590494076	WITHOUT_CLASSIFICATION	5.409505923991166E-6	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999993405514012	WITHOUT_CLASSIFICATION	6.594485988977119E-7	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999971686142555	WITHOUT_CLASSIFICATION	2.8313857445649325E-6	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999880476362747	WITHOUT_CLASSIFICATION	1.1952363725301288E-5	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999991202409891	WITHOUT_CLASSIFICATION	8.797590108094366E-7	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999998456892547	WITHOUT_CLASSIFICATION	1.5431074531143838E-7	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999954540778723	WITHOUT_CLASSIFICATION	4.545922127659088E-6	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.999999903940753	WITHOUT_CLASSIFICATION	9.605924703185949E-8	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999970584579133	WITHOUT_CLASSIFICATION	2.941542086692836E-6	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999998584280777	WITHOUT_CLASSIFICATION	1.4157192239165634E-7	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999963546497926	WITHOUT_CLASSIFICATION	3.6453502072823476E-6	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999971087572316	WITHOUT_CLASSIFICATION	2.8912427683618043E-6	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999934094745123	WITHOUT_CLASSIFICATION	6.590525487674115E-6	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999583408311539	WITHOUT_CLASSIFICATION	4.165916884603292E-5	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999953551284914	WITHOUT_CLASSIFICATION	4.644871508633457E-6	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999982093595343	WITHOUT_CLASSIFICATION	1.7906404656766067E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999983917072407	WITHOUT_CLASSIFICATION	1.6082927593414553E-6	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.999998825247578	WITHOUT_CLASSIFICATION	1.174752421954195E-6	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999951681775573	WITHOUT_CLASSIFICATION	4.831822442652207E-6	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999465611079	WITHOUT_CLASSIFICATION	5.3438892151347925E-8	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999143442179	WITHOUT_CLASSIFICATION	8.565578212307672E-8	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999997496983435	WITHOUT_CLASSIFICATION	2.503016565309072E-7	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999998839582955	WITHOUT_CLASSIFICATION	1.1604170443337268E-7	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999998395389182	WITHOUT_CLASSIFICATION	1.6046108177375472E-7	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999445318839324	WITHOUT_CLASSIFICATION	5.546811606768245E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999995414948091	WITHOUT_CLASSIFICATION	4.5850519097599526E-7	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999999084313218	WITHOUT_CLASSIFICATION	9.156867819285369E-8	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999987694289997	WITHOUT_CLASSIFICATION	1.2305710003716772E-6	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999987598666952	WITHOUT_CLASSIFICATION	1.2401333048433963E-6	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999986628799482	WITHOUT_CLASSIFICATION	1.33712005171446E-6	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999999387461206	WITHOUT_CLASSIFICATION	6.125387942189979E-8	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999997631331541	WITHOUT_CLASSIFICATION	2.3686684591293295E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999997907563809	WITHOUT_CLASSIFICATION	2.0924361918316493E-7	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999952957945373	WITHOUT_CLASSIFICATION	4.704205462651783E-6	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999955814920665	WITHOUT_CLASSIFICATION	4.418507933588825E-6	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999933580716616	WITHOUT_CLASSIFICATION	6.641928338383112E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999988193095025	WITHOUT_CLASSIFICATION	1.1806904974790138E-6	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999851995551768	WITHOUT_CLASSIFICATION	1.4800444823116938E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999971384048916	WITHOUT_CLASSIFICATION	2.861595108416481E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.999997030948782	WITHOUT_CLASSIFICATION	2.9690512178943436E-6	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.999996492288018	WITHOUT_CLASSIFICATION	3.507711982064771E-6	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999566429607732	WITHOUT_CLASSIFICATION	4.335703922679013E-5	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999909769480947	WITHOUT_CLASSIFICATION	9.02305190532155E-6	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999995967527726	WITHOUT_CLASSIFICATION	4.0324722745961846E-7	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999936810432746	WITHOUT_CLASSIFICATION	6.31895672541945E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999984087106668	WITHOUT_CLASSIFICATION	1.591289333204623E-6	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.999940790468504	WITHOUT_CLASSIFICATION	5.920953149591254E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999977764579169	WITHOUT_CLASSIFICATION	2.2235420830360216E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.999982133646798	WITHOUT_CLASSIFICATION	1.786635320204767E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999975450159572	WITHOUT_CLASSIFICATION	2.454984042926278E-6	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999998739230548	WITHOUT_CLASSIFICATION	1.2607694527779227E-7	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999811724264562	WITHOUT_CLASSIFICATION	1.8827573543677295E-5	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999990892210673	WITHOUT_CLASSIFICATION	9.107789328326847E-7	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999919198902614	WITHOUT_CLASSIFICATION	8.080109738600276E-6	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999988584046897	WITHOUT_CLASSIFICATION	1.141595310367986E-6	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.999997749610475	WITHOUT_CLASSIFICATION	2.2503895249170442E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999995824331351	WITHOUT_CLASSIFICATION	4.175668648427081E-7	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999961857665081	WITHOUT_CLASSIFICATION	3.814233491889029E-6	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.999997749610475	WITHOUT_CLASSIFICATION	2.2503895249170442E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999998316138314	WITHOUT_CLASSIFICATION	1.6838616858104532E-7	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999922430264585	WITHOUT_CLASSIFICATION	7.756973541601186E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999915125699549	WITHOUT_CLASSIFICATION	8.487430045093967E-6	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999854834823334	WITHOUT_CLASSIFICATION	1.4516517666691222E-5	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999994492064788	WITHOUT_CLASSIFICATION	5.507935213396977E-7	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999898909219638	WITHOUT_CLASSIFICATION	1.0109078036302796E-5	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999988069206096	WITHOUT_CLASSIFICATION	1.1930793903758942E-6	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999993689538595	WITHOUT_CLASSIFICATION	6.310461405020537E-7	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999975105684535	WITHOUT_CLASSIFICATION	2.4894315463868723E-6	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999991163062403	WITHOUT_CLASSIFICATION	8.836937596426657E-7	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999915594521254	WITHOUT_CLASSIFICATION	8.440547874631212E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.999986190928481	WITHOUT_CLASSIFICATION	1.3809071519083278E-5	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999973262598169	WITHOUT_CLASSIFICATION	2.6737401831105824E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999928390036746	WITHOUT_CLASSIFICATION	7.1609963253233165E-6	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999934610358141	WITHOUT_CLASSIFICATION	6.5389641859954056E-6	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999975042269896	WITHOUT_CLASSIFICATION	2.495773010425833E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999983611291041	WITHOUT_CLASSIFICATION	1.6388708958114087E-6	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999988771048518	WITHOUT_CLASSIFICATION	1.1228951482262536E-6	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999904182120436	WITHOUT_CLASSIFICATION	9.581787956280502E-6	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999891051195277	WITHOUT_CLASSIFICATION	1.0894880472399797E-5	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999935638800087	WITHOUT_CLASSIFICATION	6.436119991348917E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999984637265145	WITHOUT_CLASSIFICATION	1.536273485498462E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999984637265145	WITHOUT_CLASSIFICATION	1.536273485498462E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999985322268171	WITHOUT_CLASSIFICATION	1.4677731828927173E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999882662002914	WITHOUT_CLASSIFICATION	1.1733799708724676E-5	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999985377955796	WITHOUT_CLASSIFICATION	1.4622044203959637E-6	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999992151150915	WITHOUT_CLASSIFICATION	7.848849085074951E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999992151150915	WITHOUT_CLASSIFICATION	7.848849085074951E-7	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.999998514952428	WITHOUT_CLASSIFICATION	1.4850475720064857E-6	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999995099236184	WITHOUT_CLASSIFICATION	4.900763815467717E-7	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.999999602771644	WITHOUT_CLASSIFICATION	3.9722835592937453E-7	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999998016704341	WITHOUT_CLASSIFICATION	1.9832956588462788E-7	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999240252519659	WITHOUT_CLASSIFICATION	7.597474803416597E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999976011890568	WITHOUT_CLASSIFICATION	2.3988109432536823E-6	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999879651294389	WITHOUT_CLASSIFICATION	1.2034870561104064E-5	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999964618730666	WITHOUT_CLASSIFICATION	3.538126933445513E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999885502160614	WITHOUT_CLASSIFICATION	1.1449783938704323E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999885502160614	WITHOUT_CLASSIFICATION	1.1449783938704323E-5	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.999997999895371	WITHOUT_CLASSIFICATION	2.000104629039434E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.999997999895371	WITHOUT_CLASSIFICATION	2.000104629039434E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999489264022136	WITHOUT_CLASSIFICATION	5.10735977864977E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999861440724698	WITHOUT_CLASSIFICATION	1.385592753022454E-5	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.999998316339468	WITHOUT_CLASSIFICATION	1.6836605321041953E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999938761918733	WITHOUT_CLASSIFICATION	6.123808126700997E-6	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999901814341231	WITHOUT_CLASSIFICATION	9.81856587698348E-6	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999981826032721	WITHOUT_CLASSIFICATION	1.817396727787923E-6	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999975780722287	WITHOUT_CLASSIFICATION	2.4219277713838416E-6	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999960478019796	WITHOUT_CLASSIFICATION	3.952198020387892E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999996245671939	WITHOUT_CLASSIFICATION	3.754328060627636E-7	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999939264291872	WITHOUT_CLASSIFICATION	6.073570812793264E-6	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999989220330293	WITHOUT_CLASSIFICATION	1.0779669706984887E-6	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999906826653986	WITHOUT_CLASSIFICATION	9.317334601446897E-6	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999906826653986	WITHOUT_CLASSIFICATION	9.317334601446897E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9997401936576443	WITHOUT_CLASSIFICATION	2.5980634235572175E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9997401936576443	WITHOUT_CLASSIFICATION	2.5980634235572175E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999983522037255	WITHOUT_CLASSIFICATION	1.6477962744968597E-6	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9999882230067405	WITHOUT_CLASSIFICATION	1.1776993259383068E-5	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999035125847208	WITHOUT_CLASSIFICATION	9.648741527922004E-5	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.999909060473119	WITHOUT_CLASSIFICATION	9.09395268809906E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999923599970402	WITHOUT_CLASSIFICATION	7.640002959836569E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999964959759606	WITHOUT_CLASSIFICATION	3.5040240393470212E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999987489809292	WITHOUT_CLASSIFICATION	1.2510190707723656E-6	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999956488801367	WITHOUT_CLASSIFICATION	4.351119863386372E-6	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999956488801367	WITHOUT_CLASSIFICATION	4.351119863386372E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999951671309125	WITHOUT_CLASSIFICATION	4.832869087499268E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999951671309125	WITHOUT_CLASSIFICATION	4.832869087499268E-6	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999984953377546	WITHOUT_CLASSIFICATION	1.5046622453708138E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999995623515718	WITHOUT_CLASSIFICATION	4.3764842820342896E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999704080700483	WITHOUT_CLASSIFICATION	2.9591929951692087E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999704080700483	WITHOUT_CLASSIFICATION	2.9591929951692087E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999704080700483	WITHOUT_CLASSIFICATION	2.9591929951692087E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999998995131519	WITHOUT_CLASSIFICATION	1.0048684809726418E-7	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999989752343984	WITHOUT_CLASSIFICATION	1.0247656016167587E-6	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999821785029362	WITHOUT_CLASSIFICATION	1.7821497063782598E-5	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999985207711496	WITHOUT_CLASSIFICATION	1.4792288503644402E-6	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.999997265167794	WITHOUT_CLASSIFICATION	2.734832206068596E-6	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999542731470343	WITHOUT_CLASSIFICATION	4.572685296553397E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999971901203911	WITHOUT_CLASSIFICATION	2.809879608975867E-6	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.99999944779329	WITHOUT_CLASSIFICATION	5.522067099765786E-7	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999990877042375	WITHOUT_CLASSIFICATION	9.122957625887994E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999977380110676	WITHOUT_CLASSIFICATION	2.261988932441819E-6	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999978257597287	WITHOUT_CLASSIFICATION	2.174240271249816E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999989106716698	WITHOUT_CLASSIFICATION	1.0893283302179142E-6	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999932860676749	WITHOUT_CLASSIFICATION	6.7139323251677655E-6	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999983964274258	WITHOUT_CLASSIFICATION	1.603572574123688E-6	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999997212088906	WITHOUT_CLASSIFICATION	2.787911094110619E-7	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999996425581247	WITHOUT_CLASSIFICATION	3.574418753603141E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999977218878994	WITHOUT_CLASSIFICATION	2.278112100613912E-6	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999968731933134	WITHOUT_CLASSIFICATION	3.126806686581844E-6	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999887444358783	WITHOUT_CLASSIFICATION	1.1255564121699418E-5	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999993530967641	WITHOUT_CLASSIFICATION	6.469032357827665E-7	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999995024055004	WITHOUT_CLASSIFICATION	4.975944996444081E-7	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999831713590358	WITHOUT_CLASSIFICATION	1.6828640964123217E-5	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999903308399863	WITHOUT_CLASSIFICATION	9.669160013672502E-6	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999856581710153	WITHOUT_CLASSIFICATION	1.4341828984596148E-5	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999921826505788	WITHOUT_CLASSIFICATION	7.817349421280653E-6	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.999941227304774	WITHOUT_CLASSIFICATION	5.8772695225993154E-5	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999782759539749	WITHOUT_CLASSIFICATION	2.1724046025180524E-5	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999961039804334	WITHOUT_CLASSIFICATION	3.896019566647133E-6	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999700067918538	WITHOUT_CLASSIFICATION	2.9993208146344116E-5	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.999980147525037	WITHOUT_CLASSIFICATION	1.9852474962862218E-5	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999990630333397	WITHOUT_CLASSIFICATION	9.369666603713699E-7	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999599302782437	WITHOUT_CLASSIFICATION	4.0069721756341114E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999848050248552	WITHOUT_CLASSIFICATION	1.5194975144921546E-5	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999954795837678	WITHOUT_CLASSIFICATION	4.520416232204184E-6	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999719947237374	WITHOUT_CLASSIFICATION	2.800527626260173E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999990075561771	WITHOUT_CLASSIFICATION	9.924438229693237E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999846050427935	WITHOUT_CLASSIFICATION	1.5394957206570353E-5	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999904536784783	WITHOUT_CLASSIFICATION	9.546321521613217E-6	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999893892562954	WITHOUT_CLASSIFICATION	1.0610743704537053E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999984030611228	WITHOUT_CLASSIFICATION	1.5969388772920453E-6	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999978753875763	WITHOUT_CLASSIFICATION	2.1246124236697903E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999987831051355	WITHOUT_CLASSIFICATION	1.2168948645259587E-6	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.992475588076977	WITHOUT_CLASSIFICATION	0.007524411923023006	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999997532143022	WITHOUT_CLASSIFICATION	2.467856977663865E-7	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999934620454394	WITHOUT_CLASSIFICATION	6.537954560621536E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999997897046609	WITHOUT_CLASSIFICATION	2.102953391534521E-7	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999991521405215	WITHOUT_CLASSIFICATION	8.478594786092547E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.999993253893674	WITHOUT_CLASSIFICATION	6.746106325955244E-6	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999484428414671	WITHOUT_CLASSIFICATION	5.155715853290039E-5	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999753353220266	WITHOUT_CLASSIFICATION	2.466467797327237E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999997262730747	WITHOUT_CLASSIFICATION	2.7372692527725915E-7	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999999644810529	WITHOUT_CLASSIFICATION	3.551894718348098E-8	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.999998906201734	WITHOUT_CLASSIFICATION	1.0937982660454396E-6	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999997128270118	WITHOUT_CLASSIFICATION	2.871729881250722E-7	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999996071702284	WITHOUT_CLASSIFICATION	3.928297716177116E-7	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999990308030262	WITHOUT_CLASSIFICATION	9.691969737607E-7	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.992475588076977	WITHOUT_CLASSIFICATION	0.007524411923023006	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.992475588076977	WITHOUT_CLASSIFICATION	0.007524411923023006	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.999997184232698	WITHOUT_CLASSIFICATION	2.8157673019359228E-6	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999996064359855	WITHOUT_CLASSIFICATION	3.9356401450794675E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999993156753857	WITHOUT_CLASSIFICATION	6.843246143037049E-7	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999911771892642	WITHOUT_CLASSIFICATION	8.82281073570472E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999911771892642	WITHOUT_CLASSIFICATION	8.82281073570472E-6	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999974609078501	WITHOUT_CLASSIFICATION	2.5390921498559066E-6	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999998326677977	WITHOUT_CLASSIFICATION	1.6733220229620954E-7	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.999999601905004	WITHOUT_CLASSIFICATION	3.9809499600149046E-7	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9999990681376341	WITHOUT_CLASSIFICATION	9.318623659151076E-7	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999915518105172	WITHOUT_CLASSIFICATION	8.448189482696792E-6	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999984651893413	WITHOUT_CLASSIFICATION	1.5348106586553788E-6	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999994567898687	WITHOUT_CLASSIFICATION	5.432101314135959E-7	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999994307796082	WITHOUT_CLASSIFICATION	5.692203917674348E-7	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.999940245655419	WITHOUT_CLASSIFICATION	5.975434458116486E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999978809635491	WITHOUT_CLASSIFICATION	2.1190364508825984E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999692995597081	WITHOUT_CLASSIFICATION	3.0700440291806514E-5	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999971510174058	WITHOUT_CLASSIFICATION	2.848982594164506E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999915518105172	WITHOUT_CLASSIFICATION	8.448189482696792E-6	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999885502160614	WITHOUT_CLASSIFICATION	1.1449783938704323E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999885502160614	WITHOUT_CLASSIFICATION	1.1449783938704323E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999180721436246	WITHOUT_CLASSIFICATION	8.192785637541748E-5	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999980107436482	WITHOUT_CLASSIFICATION	1.989256351659155E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999984755710022	WITHOUT_CLASSIFICATION	1.5244289977040758E-6	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999970264619044	WITHOUT_CLASSIFICATION	2.9735380955518634E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9996880156206835	WITHOUT_CLASSIFICATION	3.119843793163713E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999661407163812	WITHOUT_CLASSIFICATION	3.3859283618778E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999661407163812	WITHOUT_CLASSIFICATION	3.3859283618778E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999917261096904	WITHOUT_CLASSIFICATION	8.273890309503355E-6	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9995602485213753	WITHOUT_CLASSIFICATION	4.3975147862472E-4	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999866870694104	WITHOUT_CLASSIFICATION	1.3312930589691136E-5	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9990318143567583	WITHOUT_CLASSIFICATION	9.681856432416276E-4	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9996062441378204	WITHOUT_CLASSIFICATION	3.937558621795222E-4	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999729597794499	WITHOUT_CLASSIFICATION	2.704022055018933E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999348769942067	WITHOUT_CLASSIFICATION	6.512300579331223E-5	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9997124067583716	WITHOUT_CLASSIFICATION	2.8759324162831176E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999996106789246	WITHOUT_CLASSIFICATION	3.8932107544755546E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999933251253962	WITHOUT_CLASSIFICATION	6.674874603824419E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999988301018807	WITHOUT_CLASSIFICATION	1.1698981193009424E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999861006923092	WITHOUT_CLASSIFICATION	1.389930769094478E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999932610289847	WITHOUT_CLASSIFICATION	6.73897101526777E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999992386017993	WITHOUT_CLASSIFICATION	7.61398200676893E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999985477467793	WITHOUT_CLASSIFICATION	1.4522532206419351E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999504160161049	WITHOUT_CLASSIFICATION	4.9583983895017755E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999992813974358	WITHOUT_CLASSIFICATION	7.186025643067501E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999817109684924	WITHOUT_CLASSIFICATION	1.8289031507636012E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958194835229	WITHOUT_CLASSIFICATION	4.1805164769978625E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999927060992504	WITHOUT_CLASSIFICATION	7.293900749541065E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999987904842201	WITHOUT_CLASSIFICATION	1.209515779769152E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999980145816691	WITHOUT_CLASSIFICATION	1.9854183308837623E-6	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999973354446358	WITHOUT_CLASSIFICATION	2.6645553642370305E-6	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999808303718063	WITHOUT_CLASSIFICATION	1.9169628193679054E-5	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.999993368384492	WITHOUT_CLASSIFICATION	6.631615507978427E-6	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999926719645638	WITHOUT_CLASSIFICATION	7.328035436313704E-6	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999332572277679	WITHOUT_CLASSIFICATION	6.67427722320892E-5	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999229424515181	WITHOUT_CLASSIFICATION	7.705754848187777E-5	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999984989976891	WITHOUT_CLASSIFICATION	1.501002310859372E-6	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.999925090292549	WITHOUT_CLASSIFICATION	7.490970745113855E-5	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.999883029784205	WITHOUT_CLASSIFICATION	1.1697021579503619E-4	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999652388948461	WITHOUT_CLASSIFICATION	3.476110515386652E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999912675491415	WITHOUT_CLASSIFICATION	8.73245085852436E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999912675491415	WITHOUT_CLASSIFICATION	8.73245085852436E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999794966275788	WITHOUT_CLASSIFICATION	2.0503372421183854E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999976917508768	WITHOUT_CLASSIFICATION	2.3082491231344726E-6	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999962374723707	WITHOUT_CLASSIFICATION	3.762527629261662E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999653187315407	WITHOUT_CLASSIFICATION	3.4681268459327314E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999653187315407	WITHOUT_CLASSIFICATION	3.4681268459327314E-5	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.999996759167501	WITHOUT_CLASSIFICATION	3.240832499117728E-6	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999941645347911	WITHOUT_CLASSIFICATION	5.835465208991273E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999988177556822	WITHOUT_CLASSIFICATION	1.1822443177858933E-6	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.999910571281027	WITHOUT_CLASSIFICATION	8.94287189729993E-5	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999270439531616	WITHOUT_CLASSIFICATION	7.295604683850145E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999861006923092	WITHOUT_CLASSIFICATION	1.389930769094478E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999977038889483	WITHOUT_CLASSIFICATION	2.2961110517567844E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999992386017993	WITHOUT_CLASSIFICATION	7.61398200676893E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999504160161049	WITHOUT_CLASSIFICATION	4.9583983895017755E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958194835229	WITHOUT_CLASSIFICATION	4.1805164769978625E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999927060992504	WITHOUT_CLASSIFICATION	7.293900749541065E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984143365872	WITHOUT_CLASSIFICATION	1.585663412839222E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999980145816691	WITHOUT_CLASSIFICATION	1.9854183308837623E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999925731698809	WITHOUT_CLASSIFICATION	7.426830119116346E-6	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9997401936576443	WITHOUT_CLASSIFICATION	2.5980634235572175E-4	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999645578551605	WITHOUT_CLASSIFICATION	3.544214483956782E-5	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999554940821268	WITHOUT_CLASSIFICATION	4.450591787311396E-5	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999989092483232	WITHOUT_CLASSIFICATION	1.0907516767669621E-6	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9997818844692729	WITHOUT_CLASSIFICATION	2.1811553072712981E-4	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9998220738442924	WITHOUT_CLASSIFICATION	1.779261557076143E-4	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999973625937069	WITHOUT_CLASSIFICATION	2.6374062930657736E-6	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9993142940795241	WITHOUT_CLASSIFICATION	6.857059204758027E-4	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9998777861920748	WITHOUT_CLASSIFICATION	1.2221380792521393E-4	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999896405708301	WITHOUT_CLASSIFICATION	1.0359429169813462E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999100850884756	WITHOUT_CLASSIFICATION	8.991491152449927E-5	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999697709636636	WITHOUT_CLASSIFICATION	3.0229036336476682E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9996548467683203	WITHOUT_CLASSIFICATION	3.451532316797547E-4	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9997037862696924	WITHOUT_CLASSIFICATION	2.962137303077406E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999732580953571	WITHOUT_CLASSIFICATION	2.6741904642958773E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999986567272807	WITHOUT_CLASSIFICATION	1.3432727193159843E-6	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999529622584401	WITHOUT_CLASSIFICATION	4.703774155982452E-5	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9995549156741542	WITHOUT_CLASSIFICATION	4.450843258457974E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.999999468254348	WITHOUT_CLASSIFICATION	5.317456519100663E-7	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999993933334757	WITHOUT_CLASSIFICATION	6.066665243573229E-7	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999993933334757	WITHOUT_CLASSIFICATION	6.066665243573229E-7	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999990722513992	WITHOUT_CLASSIFICATION	9.277486008540594E-7	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.999569601387362	WITHOUT_CLASSIFICATION	4.303986126380544E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999864756052413	WITHOUT_CLASSIFICATION	1.3524394758715723E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999864756052413	WITHOUT_CLASSIFICATION	1.3524394758715723E-5	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999842873349436	WITHOUT_CLASSIFICATION	1.5712665056418307E-5	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999971338680398	WITHOUT_CLASSIFICATION	2.866131960209067E-6	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.999998176509205	WITHOUT_CLASSIFICATION	1.8234907950881922E-6	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999983426610001	WITHOUT_CLASSIFICATION	1.6573389999962462E-6	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999938841650965	WITHOUT_CLASSIFICATION	6.1158349034301445E-6	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999969064932527	WITHOUT_CLASSIFICATION	3.0935067472477607E-6	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999906447675707	WITHOUT_CLASSIFICATION	9.355232429340151E-6	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999692483883773	WITHOUT_CLASSIFICATION	3.075161162273144E-5	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999935090465386	WITHOUT_CLASSIFICATION	6.490953461467329E-6	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999973925824334	WITHOUT_CLASSIFICATION	2.6074175665043672E-6	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9997717719277612	WITHOUT_CLASSIFICATION	2.2822807223874198E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999732580953571	WITHOUT_CLASSIFICATION	2.6741904642958773E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9998299817486714	WITHOUT_CLASSIFICATION	1.7001825132854058E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997983277602107	WITHOUT_CLASSIFICATION	2.0167223978927819E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999851243319383	WITHOUT_CLASSIFICATION	1.4875668061677732E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999992997009716	WITHOUT_CLASSIFICATION	7.002990283607388E-7	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9999976684305506	WITHOUT_CLASSIFICATION	2.331569449389948E-6	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999961236305283	WITHOUT_CLASSIFICATION	3.876369471749852E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.999998975864571	WITHOUT_CLASSIFICATION	1.0241354290498004E-6	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999888440739939	WITHOUT_CLASSIFICATION	1.1155926006097677E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999888440739939	WITHOUT_CLASSIFICATION	1.1155926006097677E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999830994892381	WITHOUT_CLASSIFICATION	1.6900510761910486E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999882042184228	WITHOUT_CLASSIFICATION	1.1795781577164941E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999692483883773	WITHOUT_CLASSIFICATION	3.075161162273144E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999692483883773	WITHOUT_CLASSIFICATION	3.075161162273144E-5	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999862405689972	WITHOUT_CLASSIFICATION	1.3759431002924785E-5	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9999715455074265	WITHOUT_CLASSIFICATION	2.8454492573381083E-5	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.999999730896172	WITHOUT_CLASSIFICATION	2.691038280785852E-7	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999940973536886	WITHOUT_CLASSIFICATION	5.9026463113888745E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999987241645123	WITHOUT_CLASSIFICATION	1.2758354876769297E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999986094322856	WITHOUT_CLASSIFICATION	1.3905677144875647E-6	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999809205142539	WITHOUT_CLASSIFICATION	1.9079485746062153E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999553809161431	WITHOUT_CLASSIFICATION	4.461908385698532E-5	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999973025557092	WITHOUT_CLASSIFICATION	2.6974442908090996E-6	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9997185519191253	WITHOUT_CLASSIFICATION	2.814480808746599E-4	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.999997685744393	WITHOUT_CLASSIFICATION	2.3142556069887667E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999977813717291	WITHOUT_CLASSIFICATION	2.21862827092185E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999977813717291	WITHOUT_CLASSIFICATION	2.21862827092185E-6	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999959314876511	WITHOUT_CLASSIFICATION	4.0685123488399505E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999984597832151	WITHOUT_CLASSIFICATION	1.5402167848998575E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999984597832151	WITHOUT_CLASSIFICATION	1.5402167848998575E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999791361114421	WITHOUT_CLASSIFICATION	2.0863888557928438E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999791361114421	WITHOUT_CLASSIFICATION	2.0863888557928438E-5	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999952610424104	WITHOUT_CLASSIFICATION	4.738957589545408E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999997325474159	WITHOUT_CLASSIFICATION	2.6745258408120556E-7	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999997325474159	WITHOUT_CLASSIFICATION	2.6745258408120556E-7	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999971388861857	WITHOUT_CLASSIFICATION	2.861113814297983E-6	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999974944872326	WITHOUT_CLASSIFICATION	2.505512767360322E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997175712256515	WITHOUT_CLASSIFICATION	2.824287743485229E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999816882904609	WITHOUT_CLASSIFICATION	1.8311709539160673E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999995905414134	WITHOUT_CLASSIFICATION	4.094585865164306E-7	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999991346918137	WITHOUT_CLASSIFICATION	8.653081862469162E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999985221002775	WITHOUT_CLASSIFICATION	1.4778997225081187E-6	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9998205886615211	WITHOUT_CLASSIFICATION	1.7941133847877515E-4	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999962472906152	WITHOUT_CLASSIFICATION	3.7527093849159863E-6	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999944717316788	WITHOUT_CLASSIFICATION	5.528268321171942E-6	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.999999277260425	WITHOUT_CLASSIFICATION	7.227395750409249E-7	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999935801751432	WITHOUT_CLASSIFICATION	6.419824856821821E-6	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999922937966155	WITHOUT_CLASSIFICATION	7.706203384606815E-6	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999974944872326	WITHOUT_CLASSIFICATION	2.505512767360322E-6	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999998865614643	WITHOUT_CLASSIFICATION	1.134385357163627E-7	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999857986120968	WITHOUT_CLASSIFICATION	1.4201387903143451E-5	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.999999786071505	WITHOUT_CLASSIFICATION	2.1392849493572704E-7	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.999996661883971	WITHOUT_CLASSIFICATION	3.338116029036168E-6	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999987408195409	WITHOUT_CLASSIFICATION	1.2591804591700094E-6	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999992104002593	WITHOUT_CLASSIFICATION	7.895997406943725E-7	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999919795769032	WITHOUT_CLASSIFICATION	8.02042309678467E-6	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999992441030674	WITHOUT_CLASSIFICATION	7.558969325402237E-7	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999980206544168	WITHOUT_CLASSIFICATION	1.9793455832304473E-6	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999862298490353	WITHOUT_CLASSIFICATION	1.3770150964835844E-5	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999796452522316	WITHOUT_CLASSIFICATION	2.0354747768390873E-5	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999693447002055	WITHOUT_CLASSIFICATION	3.065529979449782E-5	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999997368459851	WITHOUT_CLASSIFICATION	2.631540149212839E-7	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999754245636827	WITHOUT_CLASSIFICATION	2.4575436317263492E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999993012132079	WITHOUT_CLASSIFICATION	6.987867921194751E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999905658765508	WITHOUT_CLASSIFICATION	9.434123449200604E-6	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999987738224538	WITHOUT_CLASSIFICATION	1.2261775461758058E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999966961001507	WITHOUT_CLASSIFICATION	3.3038998491985517E-6	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999998342235439	WITHOUT_CLASSIFICATION	1.6577645619839762E-7	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999970352012522	WITHOUT_CLASSIFICATION	2.9647987479017366E-6	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999998689872434	WITHOUT_CLASSIFICATION	1.3101275660116083E-7	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9998313065710651	WITHOUT_CLASSIFICATION	1.6869342893489892E-4	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999976974050496	WITHOUT_CLASSIFICATION	2.3025949503458244E-6	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999968427927254	WITHOUT_CLASSIFICATION	3.157207274573062E-6	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9999996731162945	WITHOUT_CLASSIFICATION	3.268837055754995E-7	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999996698953185	WITHOUT_CLASSIFICATION	3.3010468152267164E-7	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999895241944294	WITHOUT_CLASSIFICATION	1.0475805570601977E-5	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999986184097228	WITHOUT_CLASSIFICATION	1.3815902771199314E-6	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999994291445888	WITHOUT_CLASSIFICATION	5.708554112012442E-7	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9999981358072177	WITHOUT_CLASSIFICATION	1.8641927822884447E-6	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999963815470665	WITHOUT_CLASSIFICATION	3.6184529336144936E-6	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999993095814472	WITHOUT_CLASSIFICATION	6.904185527911841E-7	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999992052346	WITHOUT_CLASSIFICATION	7.947654000466478E-7	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999998234075391	WITHOUT_CLASSIFICATION	1.7659246087267957E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999998754280787	WITHOUT_CLASSIFICATION	1.2457192123319578E-7	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999798225694234	WITHOUT_CLASSIFICATION	2.0177430576668026E-5	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999999129151288	WITHOUT_CLASSIFICATION	8.70848712138869E-8	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999968427927254	WITHOUT_CLASSIFICATION	3.157207274573062E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999969772230692	WITHOUT_CLASSIFICATION	3.022776930710088E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999982758860149	WITHOUT_CLASSIFICATION	1.7241139851284665E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999982758860149	WITHOUT_CLASSIFICATION	1.7241139851284665E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.999995876283821	WITHOUT_CLASSIFICATION	4.123716178924094E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.999995876283821	WITHOUT_CLASSIFICATION	4.123716178924094E-6	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9999947736031295	WITHOUT_CLASSIFICATION	5.226396870450859E-6	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999981748875882	WITHOUT_CLASSIFICATION	1.8251124116962718E-6	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999981717004788	WITHOUT_CLASSIFICATION	1.8282995213423766E-6	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999911300995763	WITHOUT_CLASSIFICATION	8.869900423622027E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999966257759352	WITHOUT_CLASSIFICATION	3.3742240648146613E-6	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999607240090677	WITHOUT_CLASSIFICATION	3.9275990932270056E-5	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9998216879883747	WITHOUT_CLASSIFICATION	1.7831201162535142E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999993374399219	WITHOUT_CLASSIFICATION	6.625600782273372E-7	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999971974824099	WITHOUT_CLASSIFICATION	2.802517590158696E-6	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999977093946509	WITHOUT_CLASSIFICATION	2.2906053491398366E-6	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9997846939552323	WITHOUT_CLASSIFICATION	2.1530604476779374E-4	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999925426594043	WITHOUT_CLASSIFICATION	7.4573405957010855E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999973245109268	WITHOUT_CLASSIFICATION	2.67548907313862E-6	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999854020662954	WITHOUT_CLASSIFICATION	1.4597933704715259E-5	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.999995800943849	WITHOUT_CLASSIFICATION	4.199056150959931E-6	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999994541433785	WITHOUT_CLASSIFICATION	5.458566213695862E-7	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999978826368427	WITHOUT_CLASSIFICATION	2.117363157361439E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999992997009716	WITHOUT_CLASSIFICATION	7.002990283607388E-7	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999975540639113	WITHOUT_CLASSIFICATION	2.4459360885796964E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999996718968105	WITHOUT_CLASSIFICATION	3.281031895301045E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999925731698809	WITHOUT_CLASSIFICATION	7.426830119116346E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999996718968105	WITHOUT_CLASSIFICATION	3.281031895301045E-7	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999743916262466	WITHOUT_CLASSIFICATION	2.5608373753458927E-5	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9997429955532846	WITHOUT_CLASSIFICATION	2.570044467154401E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9999994567204659	WITHOUT_CLASSIFICATION	5.43279534242051E-7	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999927995014489	WITHOUT_CLASSIFICATION	7.200498550998157E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999993420680244	WITHOUT_CLASSIFICATION	6.579319756200406E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999770250403065	WITHOUT_CLASSIFICATION	2.2974959693556605E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999770250403065	WITHOUT_CLASSIFICATION	2.2974959693556605E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999474121505159	WITHOUT_CLASSIFICATION	5.258784948413636E-5	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.999998146366033	WITHOUT_CLASSIFICATION	1.853633967027275E-6	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999997500528345	WITHOUT_CLASSIFICATION	2.499471655660215E-7	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999918568350209	WITHOUT_CLASSIFICATION	8.143164979154099E-6	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999975917997287	WITHOUT_CLASSIFICATION	2.408200271255146E-6	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999949699077829	WITHOUT_CLASSIFICATION	5.030092217096702E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999993420680244	WITHOUT_CLASSIFICATION	6.579319756200406E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999770250403065	WITHOUT_CLASSIFICATION	2.2974959693556605E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999770250403065	WITHOUT_CLASSIFICATION	2.2974959693556605E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999474121505159	WITHOUT_CLASSIFICATION	5.258784948413636E-5	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999922223124753	WITHOUT_CLASSIFICATION	7.777687524676205E-6	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999979221178288	WITHOUT_CLASSIFICATION	2.0778821711969935E-6	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999938547091225	WITHOUT_CLASSIFICATION	6.145290877555384E-6	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.999998168433813	WITHOUT_CLASSIFICATION	1.831566187120055E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999998318017377	WITHOUT_CLASSIFICATION	1.6819826221548521E-7	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9999994377931863	WITHOUT_CLASSIFICATION	5.622068137191931E-7	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999996239238196	WITHOUT_CLASSIFICATION	3.760761804645425E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999842209337205	WITHOUT_CLASSIFICATION	1.5779066279468915E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999842209337205	WITHOUT_CLASSIFICATION	1.5779066279468915E-5	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999857596623764	WITHOUT_CLASSIFICATION	1.4240337623683987E-5	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.999986514220698	WITHOUT_CLASSIFICATION	1.3485779302029179E-5	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999882081898716	WITHOUT_CLASSIFICATION	1.179181012853109E-5	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.99999816870976	WITHOUT_CLASSIFICATION	1.8312902399424097E-6	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999870129802552	WITHOUT_CLASSIFICATION	1.2987019744696556E-5	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9998748808522384	WITHOUT_CLASSIFICATION	1.2511914776159978E-4	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999990873785153	WITHOUT_CLASSIFICATION	9.126214847364734E-7	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999983705519166	WITHOUT_CLASSIFICATION	1.629448083274554E-6	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999212257435287	WITHOUT_CLASSIFICATION	7.877425647133996E-5	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999986092040836	WITHOUT_CLASSIFICATION	1.3907959164066799E-6	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999947537659298	WITHOUT_CLASSIFICATION	5.246234070073082E-6	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999940038292581	WITHOUT_CLASSIFICATION	5.996170741893492E-6	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999970184714995	WITHOUT_CLASSIFICATION	2.981528500656653E-6	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9999945489868086	WITHOUT_CLASSIFICATION	5.451013191359641E-6	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999939373569128	WITHOUT_CLASSIFICATION	6.062643087256386E-6	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999957462791329	WITHOUT_CLASSIFICATION	4.253720867122662E-6	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999943979496552	WITHOUT_CLASSIFICATION	5.602050344873303E-6	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999993272901597	WITHOUT_CLASSIFICATION	6.727098402547617E-7	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999608036264854	WITHOUT_CLASSIFICATION	3.919637351445548E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999973847514324	WITHOUT_CLASSIFICATION	2.615248567527117E-6	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999992220816498	WITHOUT_CLASSIFICATION	7.779183501241001E-7	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999928957398069	WITHOUT_CLASSIFICATION	7.104260193134325E-6	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999980638117544	WITHOUT_CLASSIFICATION	1.936188245568328E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999996332923106	WITHOUT_CLASSIFICATION	3.667076895443719E-7	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999991640153104	WITHOUT_CLASSIFICATION	8.359846896552132E-7	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999991415023209	WITHOUT_CLASSIFICATION	8.584976791281847E-7	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999996786034887	WITHOUT_CLASSIFICATION	3.213965112268481E-7	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999981397481383	WITHOUT_CLASSIFICATION	1.8602518616983477E-6	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.999999872730107	WITHOUT_CLASSIFICATION	1.272698930063255E-7	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999929483521449	WITHOUT_CLASSIFICATION	7.05164785506728E-6	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999831965003706	WITHOUT_CLASSIFICATION	1.680349962942985E-5	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.999988251375628	WITHOUT_CLASSIFICATION	1.1748624372091959E-5	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999759747848371	WITHOUT_CLASSIFICATION	2.4025215162862612E-5	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999978915581982	WITHOUT_CLASSIFICATION	2.108441801893654E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999882077994363	WITHOUT_CLASSIFICATION	1.1792200563748555E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999882077994363	WITHOUT_CLASSIFICATION	1.1792200563748555E-5	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999985380420173	WITHOUT_CLASSIFICATION	1.4619579827893026E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999931541998069	WITHOUT_CLASSIFICATION	6.845800192992278E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999795160240765	WITHOUT_CLASSIFICATION	2.048397592338699E-5	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999864845620635	WITHOUT_CLASSIFICATION	1.3515437936326133E-5	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9997072287750787	WITHOUT_CLASSIFICATION	2.927712249213352E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999855694378731	WITHOUT_CLASSIFICATION	1.4430562126929947E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999956311881919	WITHOUT_CLASSIFICATION	4.368811808143086E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913913730583	WITHOUT_CLASSIFICATION	8.608626941788213E-6	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9999739092048991	WITHOUT_CLASSIFICATION	2.609079510082832E-5	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999993236759017	WITHOUT_CLASSIFICATION	6.763240983291134E-7	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999994498880218	WITHOUT_CLASSIFICATION	5.501119782689226E-7	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999974306933699	WITHOUT_CLASSIFICATION	2.569306630227639E-6	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999893765895427	WITHOUT_CLASSIFICATION	1.0623410457357242E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999981609383827	WITHOUT_CLASSIFICATION	1.839061617327724E-6	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9999952828050725	WITHOUT_CLASSIFICATION	4.717194927452574E-6	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999803199037754	WITHOUT_CLASSIFICATION	1.9680096224467384E-5	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999922694485346	WITHOUT_CLASSIFICATION	7.7305514654E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999967040486023	WITHOUT_CLASSIFICATION	3.2959513977018126E-6	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.999997380341367	WITHOUT_CLASSIFICATION	2.6196586329782133E-6	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999973844847041	WITHOUT_CLASSIFICATION	2.6155152958209756E-6	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999989942074258	WITHOUT_CLASSIFICATION	1.0057925742052415E-6	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999997880645556	WITHOUT_CLASSIFICATION	2.119354443594928E-7	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.999961893848457	WITHOUT_CLASSIFICATION	3.810615154295418E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999653690608	WITHOUT_CLASSIFICATION	3.463093926342894E-8	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999988214576404	WITHOUT_CLASSIFICATION	1.1785423595901709E-6	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999979430662498	WITHOUT_CLASSIFICATION	2.056933750191494E-6	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999949823696052	WITHOUT_CLASSIFICATION	5.0176303948362315E-6	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999975167488574	WITHOUT_CLASSIFICATION	2.483251142604739E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999937890292444	WITHOUT_CLASSIFICATION	6.210970755650176E-6	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999858708451042	WITHOUT_CLASSIFICATION	1.4129154895989975E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999875030326936	WITHOUT_CLASSIFICATION	1.2496967306346124E-5	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999951873408851	WITHOUT_CLASSIFICATION	4.8126591149111764E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999989594332577	WITHOUT_CLASSIFICATION	1.040566742302547E-6	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999987776639203	WITHOUT_CLASSIFICATION	1.2223360797013857E-6	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999930960676685	WITHOUT_CLASSIFICATION	6.903932331503369E-6	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999994807019886	WITHOUT_CLASSIFICATION	5.192980114020406E-7	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999786468172167	WITHOUT_CLASSIFICATION	2.1353182783319317E-5	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999997089501813	WITHOUT_CLASSIFICATION	2.910498186975427E-7	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999981769416533	WITHOUT_CLASSIFICATION	1.8230583467318744E-6	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999991958880823	WITHOUT_CLASSIFICATION	8.041119177250242E-7	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999945267332195	WITHOUT_CLASSIFICATION	5.473266780445572E-6	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999996282272506	WITHOUT_CLASSIFICATION	3.717727493675472E-7	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999987410418661	WITHOUT_CLASSIFICATION	1.2589581338972791E-6	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.999998260363925	WITHOUT_CLASSIFICATION	1.7396360749597047E-6	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999900404634087	WITHOUT_CLASSIFICATION	9.959536591409764E-6	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999962751453803	WITHOUT_CLASSIFICATION	3.7248546196480703E-6	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.999999816963307	WITHOUT_CLASSIFICATION	1.83036693045921E-7	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999962751453803	WITHOUT_CLASSIFICATION	3.7248546196480703E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998097955557851	WITHOUT_CLASSIFICATION	1.9020444421492298E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.999997749679495	WITHOUT_CLASSIFICATION	2.2503205050988327E-6	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999999358758069	WITHOUT_CLASSIFICATION	6.41241930784065E-8	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999919021800839	WITHOUT_CLASSIFICATION	8.097819916053233E-6	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.99999815079389	WITHOUT_CLASSIFICATION	1.8492061100840872E-6	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999993239173618	WITHOUT_CLASSIFICATION	6.760826382595294E-7	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999877223772625	WITHOUT_CLASSIFICATION	1.227762273738342E-5	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9999922021024951	WITHOUT_CLASSIFICATION	7.797897504965456E-6	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.999998642916159	WITHOUT_CLASSIFICATION	1.3570838410132392E-6	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999983063584773	WITHOUT_CLASSIFICATION	1.6936415227156724E-6	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999988847521076	WITHOUT_CLASSIFICATION	1.115247892370618E-6	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999566832618603	WITHOUT_CLASSIFICATION	4.331673813960911E-5	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999866302094029	WITHOUT_CLASSIFICATION	1.3369790596953376E-5	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9999000347952299	WITHOUT_CLASSIFICATION	9.996520476999248E-5	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999628797692477	WITHOUT_CLASSIFICATION	3.7120230752252894E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999990585212791	WITHOUT_CLASSIFICATION	9.414787208902436E-7	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999899295143361	WITHOUT_CLASSIFICATION	1.0070485664003834E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9999631052374124	WITHOUT_CLASSIFICATION	3.6894762587508626E-5	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999692469913706	WITHOUT_CLASSIFICATION	3.07530086293651E-5	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999960151004673	WITHOUT_CLASSIFICATION	3.984899532684087E-6	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999881588907165	WITHOUT_CLASSIFICATION	1.184110928353063E-5	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999986518248999	WITHOUT_CLASSIFICATION	1.348175100067412E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999952608429971	WITHOUT_CLASSIFICATION	4.739157002938963E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999877223772625	WITHOUT_CLASSIFICATION	1.227762273738342E-5	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.999997938887818	WITHOUT_CLASSIFICATION	2.0611121819306077E-6	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999984760031799	WITHOUT_CLASSIFICATION	1.5239968200779612E-6	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999984760031799	WITHOUT_CLASSIFICATION	1.5239968200779612E-6	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.999998580431807	WITHOUT_CLASSIFICATION	1.4195681930357978E-6	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999974692739771	WITHOUT_CLASSIFICATION	2.5307260229781006E-6	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999974692739771	WITHOUT_CLASSIFICATION	2.5307260229781006E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999941375111205	WITHOUT_CLASSIFICATION	5.862488879477447E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999941375111205	WITHOUT_CLASSIFICATION	5.862488879477447E-6	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9999443952997457	WITHOUT_CLASSIFICATION	5.560470025433318E-5	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.999978140889916	WITHOUT_CLASSIFICATION	2.185911008411378E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999986860163723	WITHOUT_CLASSIFICATION	1.3139836276439416E-6	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999784092810393	WITHOUT_CLASSIFICATION	2.1590718960681363E-5	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999939567562749	WITHOUT_CLASSIFICATION	6.0432437250692756E-6	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999982967842581	WITHOUT_CLASSIFICATION	1.7032157419189156E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.999988989656344	WITHOUT_CLASSIFICATION	1.101034365609783E-5	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999950937015437	WITHOUT_CLASSIFICATION	4.906298456300756E-6	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999866748944699	WITHOUT_CLASSIFICATION	1.3325105530116437E-5	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.999997721515902	WITHOUT_CLASSIFICATION	2.278484097848991E-6	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999996475139884	WITHOUT_CLASSIFICATION	3.524860115430679E-7	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999826595473232	WITHOUT_CLASSIFICATION	1.734045267670554E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999969467117106	WITHOUT_CLASSIFICATION	3.05328828953218E-6	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.999997171502552	WITHOUT_CLASSIFICATION	2.8284974480883614E-6	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999940651969924	WITHOUT_CLASSIFICATION	5.934803007548253E-6	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999949400008193	WITHOUT_CLASSIFICATION	5.05999918074464E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999961554264388	WITHOUT_CLASSIFICATION	3.844573561172486E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999935527906286	WITHOUT_CLASSIFICATION	6.447209371353997E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999935527906286	WITHOUT_CLASSIFICATION	6.447209371353997E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999997211548639	WITHOUT_CLASSIFICATION	2.788451360202219E-7	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9998808258742645	WITHOUT_CLASSIFICATION	1.1917412573547132E-4	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999995558027397	WITHOUT_CLASSIFICATION	4.441972602230183E-7	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999987138380789	WITHOUT_CLASSIFICATION	1.2861619210379116E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999999028974562	WITHOUT_CLASSIFICATION	9.71025437158151E-8	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999997133055454	WITHOUT_CLASSIFICATION	2.8669445453926606E-7	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999999550044267	WITHOUT_CLASSIFICATION	4.499557323832843E-8	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999991205273211	WITHOUT_CLASSIFICATION	8.794726788824732E-7	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999915604303654	WITHOUT_CLASSIFICATION	8.439569634484478E-6	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.999999574749385	WITHOUT_CLASSIFICATION	4.2525061506488583E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999981299486217	WITHOUT_CLASSIFICATION	1.870051378319615E-6	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999771010419238	WITHOUT_CLASSIFICATION	2.28989580761033E-5	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999806031314263	WITHOUT_CLASSIFICATION	1.939686857374741E-5	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999969287411113	WITHOUT_CLASSIFICATION	3.0712588886713592E-6	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.999990535839583	WITHOUT_CLASSIFICATION	9.464160416959916E-6	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999888700958418	WITHOUT_CLASSIFICATION	1.1129904158230814E-5	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.999884019143332	WITHOUT_CLASSIFICATION	1.1598085666807339E-4	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9998085166632935	WITHOUT_CLASSIFICATION	1.9148333670643847E-4	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9996493845941048	WITHOUT_CLASSIFICATION	3.5061540589518663E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999725762790819	WITHOUT_CLASSIFICATION	2.7423720918140812E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999736988797422	WITHOUT_CLASSIFICATION	2.630112025769714E-5	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999725513673025	WITHOUT_CLASSIFICATION	2.7448632697489942E-5	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999919809632621	WITHOUT_CLASSIFICATION	8.01903673789289E-6	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999998271329887	WITHOUT_CLASSIFICATION	1.72867011269209E-7	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999998591221866	WITHOUT_CLASSIFICATION	1.4087781335606188E-7	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999998902641569	WITHOUT_CLASSIFICATION	1.0973584296884646E-7	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999999593217845	WITHOUT_CLASSIFICATION	4.067821547581105E-8	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999974284096662	WITHOUT_CLASSIFICATION	2.5715903336904175E-6	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999853952163886	WITHOUT_CLASSIFICATION	1.4604783611383971E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999653062995462	WITHOUT_CLASSIFICATION	3.4693700453846775E-5	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9998899279472705	WITHOUT_CLASSIFICATION	1.10072052729574E-4	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999879070162425	WITHOUT_CLASSIFICATION	1.2092983757375729E-5	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9993093177876213	WITHOUT_CLASSIFICATION	6.906822123786662E-4	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999989745241593	WITHOUT_CLASSIFICATION	1.025475840585166E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999470567999765	WITHOUT_CLASSIFICATION	5.294320002349234E-5	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9993677365720613	WITHOUT_CLASSIFICATION	6.322634279386652E-4	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.999984814562423	WITHOUT_CLASSIFICATION	1.5185437576872664E-5	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999746692911218	WITHOUT_CLASSIFICATION	2.5330708878277062E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999953567524313	WITHOUT_CLASSIFICATION	4.643247568575341E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999986682059886	WITHOUT_CLASSIFICATION	1.331794011326491E-6	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999979204549394	WITHOUT_CLASSIFICATION	2.079545060596398E-6	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999931942869997	WITHOUT_CLASSIFICATION	6.8057130001763654E-6	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999990395733119	WITHOUT_CLASSIFICATION	9.60426688087747E-7	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.999998988540801	WITHOUT_CLASSIFICATION	1.0114591989686472E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999713731283884	WITHOUT_CLASSIFICATION	2.8626871611694173E-5	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999997869087232	WITHOUT_CLASSIFICATION	2.1309127673535672E-7	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999963557183691	WITHOUT_CLASSIFICATION	3.644281630907561E-6	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.999998988540801	WITHOUT_CLASSIFICATION	1.0114591989686472E-6	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999995974923174	WITHOUT_CLASSIFICATION	4.0250768259224515E-7	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.999993562846735	WITHOUT_CLASSIFICATION	6.437153264944064E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999731273378251	WITHOUT_CLASSIFICATION	2.6872662174841987E-5	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999199127527603	WITHOUT_CLASSIFICATION	8.008724723980039E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999827590283936	WITHOUT_CLASSIFICATION	1.7240971606366185E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9999713731283884	WITHOUT_CLASSIFICATION	2.8626871611694173E-5	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999963557183691	WITHOUT_CLASSIFICATION	3.644281630907561E-6	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999847931343105	WITHOUT_CLASSIFICATION	1.520686568948993E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999791523107686	WITHOUT_CLASSIFICATION	2.0847689231422574E-5	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999619314268287	WITHOUT_CLASSIFICATION	3.806857317136748E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999980771307801	WITHOUT_CLASSIFICATION	1.9228692198484675E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999990461307596	WITHOUT_CLASSIFICATION	9.538692404082226E-6	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.999526837070674	WITHOUT_CLASSIFICATION	4.731629293259057E-4	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999907175664391	WITHOUT_CLASSIFICATION	9.2824335609045E-6	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999959819395963	WITHOUT_CLASSIFICATION	4.01806040374202E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999852462578986	WITHOUT_CLASSIFICATION	1.4753742101288068E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999852462578986	WITHOUT_CLASSIFICATION	1.4753742101288068E-5	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999869874151209	WITHOUT_CLASSIFICATION	1.3012584878962323E-5	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999941479791522	WITHOUT_CLASSIFICATION	5.852020847799197E-6	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999997629903931	WITHOUT_CLASSIFICATION	2.3700960697030727E-7	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999972997040946	WITHOUT_CLASSIFICATION	2.700295905324868E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999996106789246	WITHOUT_CLASSIFICATION	3.8932107544755546E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999933251253962	WITHOUT_CLASSIFICATION	6.674874603824419E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999988301018807	WITHOUT_CLASSIFICATION	1.1698981193009424E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999988301018807	WITHOUT_CLASSIFICATION	1.1698981193009424E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999861006923092	WITHOUT_CLASSIFICATION	1.389930769094478E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999977038889483	WITHOUT_CLASSIFICATION	2.2961110517567844E-6	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999977038889483	WITHOUT_CLASSIFICATION	2.2961110517567844E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999932610289847	WITHOUT_CLASSIFICATION	6.73897101526777E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999992386017993	WITHOUT_CLASSIFICATION	7.61398200676893E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999992386017993	WITHOUT_CLASSIFICATION	7.61398200676893E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999985477467793	WITHOUT_CLASSIFICATION	1.4522532206419351E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999504160161049	WITHOUT_CLASSIFICATION	4.9583983895017755E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999992813974358	WITHOUT_CLASSIFICATION	7.186025643067501E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999817109684924	WITHOUT_CLASSIFICATION	1.8289031507636012E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958194835229	WITHOUT_CLASSIFICATION	4.1805164769978625E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999927060992504	WITHOUT_CLASSIFICATION	7.293900749541065E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999987904842201	WITHOUT_CLASSIFICATION	1.209515779769152E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999980145816691	WITHOUT_CLASSIFICATION	1.9854183308837623E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999896405708301	WITHOUT_CLASSIFICATION	1.0359429169813462E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999100850884756	WITHOUT_CLASSIFICATION	8.991491152449927E-5	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999974484927179	WITHOUT_CLASSIFICATION	2.5515072821232852E-6	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998699550279784	WITHOUT_CLASSIFICATION	1.3004497202161105E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999784000547302	WITHOUT_CLASSIFICATION	2.159994526980655E-5	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999746964402658	WITHOUT_CLASSIFICATION	2.530355973425847E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999994168226036	WITHOUT_CLASSIFICATION	5.831773963025125E-7	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999736121784184	WITHOUT_CLASSIFICATION	2.6387821581549294E-5	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999982173466541	WITHOUT_CLASSIFICATION	1.7826533459910844E-6	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999996092038632	WITHOUT_CLASSIFICATION	3.9079613670058465E-7	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999997472281504	WITHOUT_CLASSIFICATION	2.5277184960965547E-6	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9994312067514237	WITHOUT_CLASSIFICATION	5.687932485762631E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.99998779954091	WITHOUT_CLASSIFICATION	1.2200459089906233E-5	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9995137280209963	WITHOUT_CLASSIFICATION	4.862719790038028E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9991846221418885	WITHOUT_CLASSIFICATION	8.153778581115241E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999903694266777	WITHOUT_CLASSIFICATION	9.630573322216046E-6	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9993599089699401	WITHOUT_CLASSIFICATION	6.40091030059896E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9996929283460894	WITHOUT_CLASSIFICATION	3.0707165391063627E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9991582116778979	WITHOUT_CLASSIFICATION	8.417883221020512E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9997259161274209	WITHOUT_CLASSIFICATION	2.7408387257910657E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999621330006171	WITHOUT_CLASSIFICATION	3.786699938294782E-5	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999501770595772	WITHOUT_CLASSIFICATION	4.9822940422694015E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999763974951283	WITHOUT_CLASSIFICATION	2.3602504871702203E-5	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9992205389074278	WITHOUT_CLASSIFICATION	7.794610925721318E-4	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9990467268417622	WITHOUT_CLASSIFICATION	9.532731582379012E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999504160161049	WITHOUT_CLASSIFICATION	4.9583983895017755E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999992813974358	WITHOUT_CLASSIFICATION	7.186025643067501E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999817109684924	WITHOUT_CLASSIFICATION	1.8289031507636012E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999927060992504	WITHOUT_CLASSIFICATION	7.293900749541065E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984143365872	WITHOUT_CLASSIFICATION	1.585663412839222E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999980145816691	WITHOUT_CLASSIFICATION	1.9854183308837623E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999896405708301	WITHOUT_CLASSIFICATION	1.0359429169813462E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999100850884756	WITHOUT_CLASSIFICATION	8.991491152449927E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999842209337205	WITHOUT_CLASSIFICATION	1.5779066279468915E-5	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999933537075802	WITHOUT_CLASSIFICATION	6.646292419777413E-6	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999885547753087	WITHOUT_CLASSIFICATION	1.1445224691370017E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9989706598115968	WITHOUT_CLASSIFICATION	0.001029340188403243	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9993173799263373	WITHOUT_CLASSIFICATION	6.826200736626913E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9998483996438008	WITHOUT_CLASSIFICATION	1.5160035619921978E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999760694700924	WITHOUT_CLASSIFICATION	2.3930529907636674E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999760694700924	WITHOUT_CLASSIFICATION	2.3930529907636674E-5	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.999053688058678	WITHOUT_CLASSIFICATION	9.463119413220857E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9998562876041149	WITHOUT_CLASSIFICATION	1.4371239588499544E-4	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9993965302379915	WITHOUT_CLASSIFICATION	6.034697620085387E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999972510016535	WITHOUT_CLASSIFICATION	2.748998346494047E-6	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999972510016535	WITHOUT_CLASSIFICATION	2.748998346494047E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999701864628194	WITHOUT_CLASSIFICATION	2.981353718056162E-5	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.999995958380137	WITHOUT_CLASSIFICATION	4.041619862979586E-6	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999993593595952	WITHOUT_CLASSIFICATION	6.406404048733494E-7	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999986831444775	WITHOUT_CLASSIFICATION	1.3168555224503558E-6	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999932724124788	WITHOUT_CLASSIFICATION	6.727587521259286E-6	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999883621948651	WITHOUT_CLASSIFICATION	1.1637805134930537E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999683859502154	WITHOUT_CLASSIFICATION	3.161404978448076E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999859987694877	WITHOUT_CLASSIFICATION	1.4001230512334486E-5	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999729278335779	WITHOUT_CLASSIFICATION	2.7072166422080145E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999090353457639	WITHOUT_CLASSIFICATION	9.096465423605809E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999784549990882	WITHOUT_CLASSIFICATION	2.1545000911784616E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999784549990882	WITHOUT_CLASSIFICATION	2.1545000911784616E-5	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9999885435080492	WITHOUT_CLASSIFICATION	1.1456491950804927E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9997457116249906	WITHOUT_CLASSIFICATION	2.542883750093976E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9997457116249906	WITHOUT_CLASSIFICATION	2.542883750093976E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9997457116249906	WITHOUT_CLASSIFICATION	2.542883750093976E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9997957312847127	WITHOUT_CLASSIFICATION	2.0426871528736936E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9997957312847127	WITHOUT_CLASSIFICATION	2.0426871528736936E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.99998641052189	WITHOUT_CLASSIFICATION	1.3589478109990986E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.99998641052189	WITHOUT_CLASSIFICATION	1.3589478109990986E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.99998641052189	WITHOUT_CLASSIFICATION	1.3589478109990986E-5	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999669631698482	WITHOUT_CLASSIFICATION	3.303683015174033E-5	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999669631698482	WITHOUT_CLASSIFICATION	3.303683015174033E-5	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999669631698482	WITHOUT_CLASSIFICATION	3.303683015174033E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999859461851474	WITHOUT_CLASSIFICATION	1.4053814852559083E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999859461851474	WITHOUT_CLASSIFICATION	1.4053814852559083E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999334624376189	WITHOUT_CLASSIFICATION	6.653756238106473E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999334624376189	WITHOUT_CLASSIFICATION	6.653756238106473E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999928370465287	WITHOUT_CLASSIFICATION	7.16295347118167E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999928370465287	WITHOUT_CLASSIFICATION	7.16295347118167E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999997692066566	WITHOUT_CLASSIFICATION	2.307933434756087E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999997692066566	WITHOUT_CLASSIFICATION	2.307933434756087E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999735183489078	WITHOUT_CLASSIFICATION	2.648165109217021E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999735183489078	WITHOUT_CLASSIFICATION	2.648165109217021E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.99999011168155	WITHOUT_CLASSIFICATION	9.888318449881227E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.99999011168155	WITHOUT_CLASSIFICATION	9.888318449881227E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999997791397914	WITHOUT_CLASSIFICATION	2.2086020860748647E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999997791397914	WITHOUT_CLASSIFICATION	2.2086020860748647E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999859461851474	WITHOUT_CLASSIFICATION	1.4053814852559083E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999334624376189	WITHOUT_CLASSIFICATION	6.653756238106473E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999928370465287	WITHOUT_CLASSIFICATION	7.16295347118167E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999735183489078	WITHOUT_CLASSIFICATION	2.648165109217021E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.99999011168155	WITHOUT_CLASSIFICATION	9.888318449881227E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999997791397914	WITHOUT_CLASSIFICATION	2.2086020860748647E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999893111850118	WITHOUT_CLASSIFICATION	1.068881498816053E-5	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999892031429108	WITHOUT_CLASSIFICATION	1.0796857089143305E-5	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.999638488480976	WITHOUT_CLASSIFICATION	3.61511519024004E-4	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9999721613027557	WITHOUT_CLASSIFICATION	2.7838697244319857E-5	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999577432694466	WITHOUT_CLASSIFICATION	4.225673055341154E-5	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999906335134596	WITHOUT_CLASSIFICATION	9.366486540275516E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.999973300316726	WITHOUT_CLASSIFICATION	2.6699683273918825E-5	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999542204742135	WITHOUT_CLASSIFICATION	4.5779525786551847E-5	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999994683169681	WITHOUT_CLASSIFICATION	5.316830319851228E-7	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999893749177223	WITHOUT_CLASSIFICATION	1.0625082277611596E-5	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999779864245169	WITHOUT_CLASSIFICATION	2.2013575483195475E-5	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999946791809192	WITHOUT_CLASSIFICATION	5.320819080777572E-6	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999707712517184	WITHOUT_CLASSIFICATION	2.922874828161561E-5	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999675432428284	WITHOUT_CLASSIFICATION	3.245675717148952E-5	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999801256937891	WITHOUT_CLASSIFICATION	1.987430621088399E-5	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999887710054614	WITHOUT_CLASSIFICATION	1.1228994538778919E-5	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999844026099594	WITHOUT_CLASSIFICATION	1.5597390040730955E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999092691906604	WITHOUT_CLASSIFICATION	9.073080933962854E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999850594883457	WITHOUT_CLASSIFICATION	1.4940511654325434E-5	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999862861789162	WITHOUT_CLASSIFICATION	1.37138210838551E-5	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.999981338396145	WITHOUT_CLASSIFICATION	1.8661603855010425E-5	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.999993451614054	WITHOUT_CLASSIFICATION	6.548385946092087E-6	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999841327789746	WITHOUT_CLASSIFICATION	1.5867221025433533E-5	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999913435772458	WITHOUT_CLASSIFICATION	8.6564227540645E-6	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999900570528469	WITHOUT_CLASSIFICATION	9.942947153022387E-6	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9999872885567462	WITHOUT_CLASSIFICATION	1.2711443253718437E-5	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999864685261474	WITHOUT_CLASSIFICATION	1.3531473852613783E-5	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999816130926638	WITHOUT_CLASSIFICATION	1.8386907336297634E-5	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999954984183633	WITHOUT_CLASSIFICATION	4.501581636669857E-6	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.999992278293316	WITHOUT_CLASSIFICATION	7.721706683911645E-6	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999768188558728	WITHOUT_CLASSIFICATION	2.3181144127230523E-5	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.999987000169986	WITHOUT_CLASSIFICATION	1.2999830013925975E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.999993007131354	WITHOUT_CLASSIFICATION	6.992868645982116E-6	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.999993007131354	WITHOUT_CLASSIFICATION	6.992868645982116E-6	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999781189049549	WITHOUT_CLASSIFICATION	2.188109504511143E-5	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999964311785551	WITHOUT_CLASSIFICATION	3.568821444902919E-6	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999518702974263	WITHOUT_CLASSIFICATION	4.812970257372079E-5	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999979557162526	WITHOUT_CLASSIFICATION	2.044283747320336E-6	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.999837985214639	WITHOUT_CLASSIFICATION	1.6201478536115522E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.999873854773135	WITHOUT_CLASSIFICATION	1.2614522686496093E-4	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999989574227962	WITHOUT_CLASSIFICATION	1.0425772037283333E-6	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999560077877286	WITHOUT_CLASSIFICATION	4.399221227133082E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999920769781524	WITHOUT_CLASSIFICATION	7.923021847695828E-6	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999941629914085	WITHOUT_CLASSIFICATION	5.837008591360952E-6	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999820459354215	WITHOUT_CLASSIFICATION	1.7954064578500924E-5	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999130935231824	WITHOUT_CLASSIFICATION	8.690647681755573E-5	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999792571041441	WITHOUT_CLASSIFICATION	2.074289585586624E-5	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999792571041441	WITHOUT_CLASSIFICATION	2.074289585586624E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999826631649265	WITHOUT_CLASSIFICATION	1.7336835073540595E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999826631649265	WITHOUT_CLASSIFICATION	1.7336835073540595E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999826631649265	WITHOUT_CLASSIFICATION	1.7336835073540595E-5	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.999993614321616	WITHOUT_CLASSIFICATION	6.38567838390731E-6	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999809786398449	WITHOUT_CLASSIFICATION	1.9021360155173564E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999777413474764	WITHOUT_CLASSIFICATION	2.2258652523493805E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999777413474764	WITHOUT_CLASSIFICATION	2.2258652523493805E-5	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999809071830816	WITHOUT_CLASSIFICATION	1.9092816918263727E-5	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.999991268740858	WITHOUT_CLASSIFICATION	8.73125914203654E-6	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999936817813281	WITHOUT_CLASSIFICATION	6.318218671822697E-6	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999857275271681	WITHOUT_CLASSIFICATION	1.4272472832028171E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999924534795427	WITHOUT_CLASSIFICATION	7.546520457221818E-6	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999724613606571	WITHOUT_CLASSIFICATION	2.753863934285857E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999686021127661	WITHOUT_CLASSIFICATION	3.139788723392501E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999967344015929	WITHOUT_CLASSIFICATION	3.2655984071388473E-6	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999831980556113	WITHOUT_CLASSIFICATION	1.6801944388712066E-5	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999895241063669	WITHOUT_CLASSIFICATION	1.0475893633065472E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999474457226651	WITHOUT_CLASSIFICATION	5.255427733479764E-5	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999867625095279	WITHOUT_CLASSIFICATION	1.3237490472083682E-5	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999962189696814	WITHOUT_CLASSIFICATION	3.781030318559968E-6	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999570299358458	WITHOUT_CLASSIFICATION	4.2970064154235727E-5	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999539548052151	WITHOUT_CLASSIFICATION	4.6045194784992495E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.99997817608196	WITHOUT_CLASSIFICATION	2.1823918039964274E-5	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.999997770822707	WITHOUT_CLASSIFICATION	2.2291772930357726E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999821228444485	WITHOUT_CLASSIFICATION	1.7877155551511872E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999820474447034	WITHOUT_CLASSIFICATION	1.7952555296577262E-5	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999990399516904	WITHOUT_CLASSIFICATION	9.600483096172451E-7	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999796157705376	WITHOUT_CLASSIFICATION	2.038422946237626E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999904199960056	WITHOUT_CLASSIFICATION	9.58000399439582E-6	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9999628112618624	WITHOUT_CLASSIFICATION	3.7188738137663544E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999865909208911	WITHOUT_CLASSIFICATION	1.3409079108801002E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999865909208911	WITHOUT_CLASSIFICATION	1.3409079108801002E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999865909208911	WITHOUT_CLASSIFICATION	1.3409079108801002E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999867436665978	WITHOUT_CLASSIFICATION	1.3256333402065895E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999867436665978	WITHOUT_CLASSIFICATION	1.3256333402065895E-5	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999948868869118	WITHOUT_CLASSIFICATION	5.1131130881500115E-6	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999899414260508	WITHOUT_CLASSIFICATION	1.0058573949154016E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999899414260508	WITHOUT_CLASSIFICATION	1.0058573949154016E-5	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999883624198325	WITHOUT_CLASSIFICATION	1.163758016761459E-5	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999823444756205	WITHOUT_CLASSIFICATION	1.765552437953151E-5	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999948868869118	WITHOUT_CLASSIFICATION	5.1131130881500115E-6	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9998788432728655	WITHOUT_CLASSIFICATION	1.211567271344943E-4	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999948868869118	WITHOUT_CLASSIFICATION	5.1131130881500115E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999346050417901	WITHOUT_CLASSIFICATION	6.539495820992192E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999346050417901	WITHOUT_CLASSIFICATION	6.539495820992192E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999792571041441	WITHOUT_CLASSIFICATION	2.074289585586624E-5	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9998015000631196	WITHOUT_CLASSIFICATION	1.9849993688024557E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9996194934991391	WITHOUT_CLASSIFICATION	3.805065008608923E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9996695992049123	WITHOUT_CLASSIFICATION	3.304007950876982E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9996808831756799	WITHOUT_CLASSIFICATION	3.191168243200248E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9997644908598261	WITHOUT_CLASSIFICATION	2.3550914017401718E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9996899746133764	WITHOUT_CLASSIFICATION	3.100253866236532E-4	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9997189973804609	WITHOUT_CLASSIFICATION	2.8100261953902206E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9996125008257521	WITHOUT_CLASSIFICATION	3.8749917424777086E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9995993097884847	WITHOUT_CLASSIFICATION	4.006902115154332E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9996794189283945	WITHOUT_CLASSIFICATION	3.205810716054532E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.999621678268598	WITHOUT_CLASSIFICATION	3.7832173140185503E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9995856411091314	WITHOUT_CLASSIFICATION	4.14358890868578E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9996378481112648	WITHOUT_CLASSIFICATION	3.621518887352144E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9996810846292324	WITHOUT_CLASSIFICATION	3.189153707675647E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9994880965938401	WITHOUT_CLASSIFICATION	5.119034061599049E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9996259302760975	WITHOUT_CLASSIFICATION	3.740697239025727E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9997090594474536	WITHOUT_CLASSIFICATION	2.909405525463831E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9996631274921903	WITHOUT_CLASSIFICATION	3.368725078096294E-4	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9997095380854455	WITHOUT_CLASSIFICATION	2.904619145545025E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9995812167709414	WITHOUT_CLASSIFICATION	4.1878322905863956E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9996392551282882	WITHOUT_CLASSIFICATION	3.6074487171178395E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9995127543321716	WITHOUT_CLASSIFICATION	4.87245667828358E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9996046770893162	WITHOUT_CLASSIFICATION	3.953229106837753E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9996608335052332	WITHOUT_CLASSIFICATION	3.3916649476689256E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9996498640064	WITHOUT_CLASSIFICATION	3.501359935999786E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9996737511399695	WITHOUT_CLASSIFICATION	3.262488600304972E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9997185359266092	WITHOUT_CLASSIFICATION	2.8146407339080693E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9997029868537864	WITHOUT_CLASSIFICATION	2.9701314621352544E-4	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9997322020801326	WITHOUT_CLASSIFICATION	2.677979198674789E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9996537957209477	WITHOUT_CLASSIFICATION	3.4620427905226374E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9996452537318024	WITHOUT_CLASSIFICATION	3.5474626819773623E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.99967761086953	WITHOUT_CLASSIFICATION	3.2238913047004034E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.999765205073734	WITHOUT_CLASSIFICATION	2.3479492626611738E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9996935366232489	WITHOUT_CLASSIFICATION	3.0646337675114025E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9996969425793846	WITHOUT_CLASSIFICATION	3.030574206154331E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9996218744784656	WITHOUT_CLASSIFICATION	3.781255215343971E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9997139681851752	WITHOUT_CLASSIFICATION	2.860318148247229E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9995447927972353	WITHOUT_CLASSIFICATION	4.5520720276472066E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9997472846128723	WITHOUT_CLASSIFICATION	2.527153871276103E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9997319057583013	WITHOUT_CLASSIFICATION	2.680942416986302E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9996989476042376	WITHOUT_CLASSIFICATION	3.0105239576233496E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9996734396059984	WITHOUT_CLASSIFICATION	3.265603940015688E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9996903868482668	WITHOUT_CLASSIFICATION	3.096131517331358E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9996620083462664	WITHOUT_CLASSIFICATION	3.379916537335688E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9996206654928411	WITHOUT_CLASSIFICATION	3.79334507158906E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.999625896443039	WITHOUT_CLASSIFICATION	3.7410355696097667E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9996967330476734	WITHOUT_CLASSIFICATION	3.03266952326581E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9996092492779268	WITHOUT_CLASSIFICATION	3.9075072207317115E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9996974590182005	WITHOUT_CLASSIFICATION	3.025409817995653E-4	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9996983730044308	WITHOUT_CLASSIFICATION	3.0162699556930954E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9996903962548148	WITHOUT_CLASSIFICATION	3.096037451851836E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9995358316304523	WITHOUT_CLASSIFICATION	4.641683695477486E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9996143435187008	WITHOUT_CLASSIFICATION	3.856564812992059E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9995973069123814	WITHOUT_CLASSIFICATION	4.0269308761867195E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9996659029858631	WITHOUT_CLASSIFICATION	3.340970141369708E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9997032878828576	WITHOUT_CLASSIFICATION	2.9671211714241846E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9996968403832068	WITHOUT_CLASSIFICATION	3.0315961679307E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9997492204586338	WITHOUT_CLASSIFICATION	2.5077954136616616E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9996643339372399	WITHOUT_CLASSIFICATION	3.356660627601268E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9996119572586825	WITHOUT_CLASSIFICATION	3.880427413176135E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9996264246032505	WITHOUT_CLASSIFICATION	3.7357539674952783E-4	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9996171047341352	WITHOUT_CLASSIFICATION	3.828952658647739E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9996469137638639	WITHOUT_CLASSIFICATION	3.530862361360368E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9995843599290017	WITHOUT_CLASSIFICATION	4.15640070998319E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9996639680554626	WITHOUT_CLASSIFICATION	3.3603194453729417E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9996432864993504	WITHOUT_CLASSIFICATION	3.567135006496604E-4	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9997090750197585	WITHOUT_CLASSIFICATION	2.9092498024153987E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9996790759907778	WITHOUT_CLASSIFICATION	3.2092400922226807E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9996455936042108	WITHOUT_CLASSIFICATION	3.544063957891565E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9995630027847995	WITHOUT_CLASSIFICATION	4.36997215200496E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9996025914033988	WITHOUT_CLASSIFICATION	3.974085966012188E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9996257537611213	WITHOUT_CLASSIFICATION	3.742462388786433E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.999726322957402	WITHOUT_CLASSIFICATION	2.7367704259802385E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9997076337777107	WITHOUT_CLASSIFICATION	2.923662222893412E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9997290802002387	WITHOUT_CLASSIFICATION	2.7091979976132666E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9995606215880775	WITHOUT_CLASSIFICATION	4.39378411922477E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9995791781231063	WITHOUT_CLASSIFICATION	4.2082187689365295E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9996833988588111	WITHOUT_CLASSIFICATION	3.166011411888192E-4	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9997796570673677	WITHOUT_CLASSIFICATION	2.2034293263227973E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9996115999114142	WITHOUT_CLASSIFICATION	3.8840008858575517E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999964944909142	WITHOUT_CLASSIFICATION	3.505509085866109E-6	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999858843645463	WITHOUT_CLASSIFICATION	1.4115635453780744E-5	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999878487490674	WITHOUT_CLASSIFICATION	1.2151250932626762E-5	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999878776466755	WITHOUT_CLASSIFICATION	1.2122353324350583E-5	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999981923958884	WITHOUT_CLASSIFICATION	1.8076041115972002E-6	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999953261453722	WITHOUT_CLASSIFICATION	4.673854627762736E-6	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9998614943743782	WITHOUT_CLASSIFICATION	1.3850562562176417E-4	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999842547608777	WITHOUT_CLASSIFICATION	1.574523912222197E-5	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.999992749361131	WITHOUT_CLASSIFICATION	7.2506388690058E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999963352886091	WITHOUT_CLASSIFICATION	3.6647113909005217E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.999873854773135	WITHOUT_CLASSIFICATION	1.2614522686496093E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.999993614321616	WITHOUT_CLASSIFICATION	6.38567838390731E-6	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999809786398449	WITHOUT_CLASSIFICATION	1.9021360155173564E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999777413474764	WITHOUT_CLASSIFICATION	2.2258652523493805E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999821228444485	WITHOUT_CLASSIFICATION	1.7877155551511872E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999820474447034	WITHOUT_CLASSIFICATION	1.7952555296577262E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999770476776461	WITHOUT_CLASSIFICATION	2.2952322353919548E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999867436665978	WITHOUT_CLASSIFICATION	1.3256333402065895E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999792571041441	WITHOUT_CLASSIFICATION	2.074289585586624E-5	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999836718132045	WITHOUT_CLASSIFICATION	1.6328186795464242E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999866768407107	WITHOUT_CLASSIFICATION	1.3323159289135628E-5	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999921633698092	WITHOUT_CLASSIFICATION	7.836630190732847E-6	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999164887475355	WITHOUT_CLASSIFICATION	8.35112524645126E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999452111572626	WITHOUT_CLASSIFICATION	5.478884273737447E-5	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999492914063485	WITHOUT_CLASSIFICATION	5.070859365156276E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999986948920073	WITHOUT_CLASSIFICATION	1.3051079926665588E-6	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999928053128142	WITHOUT_CLASSIFICATION	7.1946871858152035E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999092691906604	WITHOUT_CLASSIFICATION	9.073080933962854E-5	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999052052960261	WITHOUT_CLASSIFICATION	9.4794703973854E-5	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999866882580896	WITHOUT_CLASSIFICATION	1.3311741910520457E-5	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999971613776184	WITHOUT_CLASSIFICATION	2.838622381485797E-6	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999956240180073	WITHOUT_CLASSIFICATION	4.375981992594037E-6	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999899925728291	WITHOUT_CLASSIFICATION	1.0007427171011165E-5	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999746168056297	WITHOUT_CLASSIFICATION	2.538319437030638E-5	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999611456238335	WITHOUT_CLASSIFICATION	3.8854376166384226E-5	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999858013730302	WITHOUT_CLASSIFICATION	1.419862696982035E-5	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999989753734534	WITHOUT_CLASSIFICATION	1.0246265465732728E-6	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999997844812136	WITHOUT_CLASSIFICATION	2.1551878630098567E-7	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999451062795215	WITHOUT_CLASSIFICATION	5.4893720478535825E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999097611988044	WITHOUT_CLASSIFICATION	9.023880119559248E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999613042213328	WITHOUT_CLASSIFICATION	3.8695778667183034E-5	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999914142604504	WITHOUT_CLASSIFICATION	8.585739549696539E-6	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999838814752138	WITHOUT_CLASSIFICATION	1.6118524786212055E-5	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999905046990659	WITHOUT_CLASSIFICATION	9.495300934083491E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999990740967329	WITHOUT_CLASSIFICATION	9.259032670993405E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999640275146682	WITHOUT_CLASSIFICATION	3.597248533184351E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999993060319904	WITHOUT_CLASSIFICATION	6.939680095665847E-7	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999314648640635	WITHOUT_CLASSIFICATION	6.853513593653092E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999980508304115	WITHOUT_CLASSIFICATION	1.9491695885458603E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999100741544605	WITHOUT_CLASSIFICATION	8.992584553946652E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999354928572223	WITHOUT_CLASSIFICATION	6.450714277769975E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999354928572223	WITHOUT_CLASSIFICATION	6.450714277769975E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.99981036959598	WITHOUT_CLASSIFICATION	1.8963040401993205E-4	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999169235466713	WITHOUT_CLASSIFICATION	8.307645332880077E-5	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999286030085216	WITHOUT_CLASSIFICATION	7.13969914784202E-5	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999750114501758	WITHOUT_CLASSIFICATION	2.4988549824309026E-5	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9998997823293474	WITHOUT_CLASSIFICATION	1.002176706526497E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999822670572905	WITHOUT_CLASSIFICATION	1.7732942709470486E-5	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9999425948439046	WITHOUT_CLASSIFICATION	5.7405156095453095E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999980352311343	WITHOUT_CLASSIFICATION	1.9647688657117663E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999976414711951	WITHOUT_CLASSIFICATION	2.3585288050295586E-6	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.999999462625194	WITHOUT_CLASSIFICATION	5.37374806081766E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999853976567485	WITHOUT_CLASSIFICATION	1.4602343251497189E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999883605132186	WITHOUT_CLASSIFICATION	1.1639486781346665E-5	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999948706454574	WITHOUT_CLASSIFICATION	5.129354542639511E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999945319170402	WITHOUT_CLASSIFICATION	5.468082959764871E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999945646329326	WITHOUT_CLASSIFICATION	5.435367067373516E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.999990586096302	WITHOUT_CLASSIFICATION	9.413903697971506E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999988730086374	WITHOUT_CLASSIFICATION	1.1269913625786929E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999199140149159	WITHOUT_CLASSIFICATION	8.008598508416274E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999992814066379	WITHOUT_CLASSIFICATION	7.185933621487424E-7	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999980006626258	WITHOUT_CLASSIFICATION	1.999337374211811E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999960645151651	WITHOUT_CLASSIFICATION	3.935484834848837E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999901936639141	WITHOUT_CLASSIFICATION	9.806336085867694E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.999988202180662	WITHOUT_CLASSIFICATION	1.1797819338044247E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999988348931406	WITHOUT_CLASSIFICATION	1.1651068593874872E-6	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999989450953218	WITHOUT_CLASSIFICATION	1.0549046782005711E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999953952994108	WITHOUT_CLASSIFICATION	4.604700589144651E-6	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999951822366838	WITHOUT_CLASSIFICATION	4.81776331619937E-6	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999861579820871	WITHOUT_CLASSIFICATION	1.3842017912887262E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999973749448403	WITHOUT_CLASSIFICATION	2.6250551596041464E-6	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999959349155336	WITHOUT_CLASSIFICATION	4.065084466445416E-6	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999815537838197	WITHOUT_CLASSIFICATION	1.8446216180388873E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999945090098478	WITHOUT_CLASSIFICATION	5.490990152283356E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999991272872716	WITHOUT_CLASSIFICATION	8.727127284933126E-7	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999981179168085	WITHOUT_CLASSIFICATION	1.8820831914674278E-6	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999995221011915	WITHOUT_CLASSIFICATION	4.778988085918453E-7	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.99999747273336	WITHOUT_CLASSIFICATION	2.527266639953438E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999999384902729	WITHOUT_CLASSIFICATION	6.15097270747669E-8	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999978626029282	WITHOUT_CLASSIFICATION	2.137397071867439E-6	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999995656256059	WITHOUT_CLASSIFICATION	4.343743940732457E-7	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999989648485439	WITHOUT_CLASSIFICATION	1.0351514560271768E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999708445391754	WITHOUT_CLASSIFICATION	2.9155460824593743E-5	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999874813960543	WITHOUT_CLASSIFICATION	1.2518603945700104E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999990805770971	WITHOUT_CLASSIFICATION	9.194229028461331E-7	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999997005693293	WITHOUT_CLASSIFICATION	2.9943067068974626E-7	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999996368637556	WITHOUT_CLASSIFICATION	3.631362444078877E-7	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999997870706524	WITHOUT_CLASSIFICATION	2.1292934762910717E-7	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999965280429548	WITHOUT_CLASSIFICATION	3.471957045118898E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999987485386285	WITHOUT_CLASSIFICATION	1.25146137157641E-6	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999852265144543	WITHOUT_CLASSIFICATION	1.4773485545713545E-5	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999425203759676	WITHOUT_CLASSIFICATION	5.7479624032333236E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999834062960075	WITHOUT_CLASSIFICATION	1.6593703992490637E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999821196465789	WITHOUT_CLASSIFICATION	1.788035342102171E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.999993551222541	WITHOUT_CLASSIFICATION	6.448777459122249E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999995795035322	WITHOUT_CLASSIFICATION	4.204964678032132E-6	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999969243461221	WITHOUT_CLASSIFICATION	3.0756538777824627E-6	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999988634745274	WITHOUT_CLASSIFICATION	1.1365254726562984E-6	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999996659569812	WITHOUT_CLASSIFICATION	3.3404301882069015E-7	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999995502404243	WITHOUT_CLASSIFICATION	4.49759575613775E-7	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999883986778075	WITHOUT_CLASSIFICATION	1.1601322192543244E-5	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999991780179396	WITHOUT_CLASSIFICATION	8.219820603177565E-7	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999998345249224	WITHOUT_CLASSIFICATION	1.6547507772284646E-7	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999971785544791	WITHOUT_CLASSIFICATION	2.821445520905892E-6	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999980407211703	WITHOUT_CLASSIFICATION	1.9592788297546693E-6	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999999035194591	WITHOUT_CLASSIFICATION	9.648054089841697E-7	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.999998295784532	WITHOUT_CLASSIFICATION	1.7042154679937975E-6	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999974295504052	WITHOUT_CLASSIFICATION	2.570449594951429E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999970402236457	WITHOUT_CLASSIFICATION	2.95977635437448E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999798953173106	WITHOUT_CLASSIFICATION	2.0104682689493708E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999928786668336	WITHOUT_CLASSIFICATION	7.1213331664401515E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999999887295675	WITHOUT_CLASSIFICATION	1.1270432603614245E-8	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999997616402434	WITHOUT_CLASSIFICATION	2.3835975668877245E-7	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999975715271407	WITHOUT_CLASSIFICATION	2.4284728592327215E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999991815340132	WITHOUT_CLASSIFICATION	8.184659868176471E-7	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999960408102831	WITHOUT_CLASSIFICATION	3.95918971689117E-6	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999883478621295	WITHOUT_CLASSIFICATION	1.1652137870458522E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9998363986737635	WITHOUT_CLASSIFICATION	1.6360132623643688E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999963442168153	WITHOUT_CLASSIFICATION	3.655783184650711E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999988032984112	WITHOUT_CLASSIFICATION	1.1967015889044378E-6	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999999677944059	WITHOUT_CLASSIFICATION	3.2205594108260435E-7	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999983839514681	WITHOUT_CLASSIFICATION	1.6160485319581832E-6	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999993627250825	WITHOUT_CLASSIFICATION	6.372749175236986E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999929285907314	WITHOUT_CLASSIFICATION	7.071409268581412E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999992511296698	WITHOUT_CLASSIFICATION	7.488703301725401E-7	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999968413802905	WITHOUT_CLASSIFICATION	3.1586197095238174E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999996417806218	WITHOUT_CLASSIFICATION	3.582193781073843E-7	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999995107466009	WITHOUT_CLASSIFICATION	4.89253399155441E-7	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9990749160947664	WITHOUT_CLASSIFICATION	9.250839052336302E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999960809182513	WITHOUT_CLASSIFICATION	3.919081748710889E-6	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999983919439128	WITHOUT_CLASSIFICATION	1.608056087136282E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999921103000062	WITHOUT_CLASSIFICATION	7.889699993716608E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999975195489328	WITHOUT_CLASSIFICATION	2.4804510671871603E-6	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999952982607382	WITHOUT_CLASSIFICATION	4.701739261755792E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999965096222119	WITHOUT_CLASSIFICATION	3.4903777880846952E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999931718513296	WITHOUT_CLASSIFICATION	6.828148670346795E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999936888099022	WITHOUT_CLASSIFICATION	6.311190097714773E-6	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.999996641211769	WITHOUT_CLASSIFICATION	3.3587882310166E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999963728237471	WITHOUT_CLASSIFICATION	3.627176252894822E-6	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999981701084777	WITHOUT_CLASSIFICATION	1.8298915223435695E-6	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999995954784636	WITHOUT_CLASSIFICATION	4.0452153632507365E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999971289136188	WITHOUT_CLASSIFICATION	2.87108638120638E-6	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.999911033736128	WITHOUT_CLASSIFICATION	8.896626387199752E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.99998526066152	WITHOUT_CLASSIFICATION	1.4739338480028386E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999913701334872	WITHOUT_CLASSIFICATION	8.629866512847545E-6	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999900659970766	WITHOUT_CLASSIFICATION	9.934002923385104E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986849744587	WITHOUT_CLASSIFICATION	1.3150255412945804E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999928582599931	WITHOUT_CLASSIFICATION	7.141740006888202E-6	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999912418786278	WITHOUT_CLASSIFICATION	8.758121372311964E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926304221576	WITHOUT_CLASSIFICATION	7.369577842503317E-6	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902391102072	WITHOUT_CLASSIFICATION	9.760889792808309E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999918636034236	WITHOUT_CLASSIFICATION	8.136396576413137E-6	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915710778217	WITHOUT_CLASSIFICATION	8.428922178291672E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999989930470951	WITHOUT_CLASSIFICATION	1.0069529048973009E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999929582143035	WITHOUT_CLASSIFICATION	7.041785696637773E-6	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999903330742921	WITHOUT_CLASSIFICATION	9.666925707805236E-6	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999991792193476	WITHOUT_CLASSIFICATION	8.207806524068123E-6	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901444361621	WITHOUT_CLASSIFICATION	9.855563837898725E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999901137523979	WITHOUT_CLASSIFICATION	9.886247602135675E-6	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999911013456899	WITHOUT_CLASSIFICATION	8.89865431016624E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899609495762	WITHOUT_CLASSIFICATION	1.0039050423819933E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999914138364849	WITHOUT_CLASSIFICATION	8.586163515158211E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999990165024549	WITHOUT_CLASSIFICATION	9.83497545107881E-6	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999885303665627	WITHOUT_CLASSIFICATION	1.1469633437257508E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999914085064668	WITHOUT_CLASSIFICATION	8.591493533188634E-6	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999898814928221	WITHOUT_CLASSIFICATION	1.0118507177898604E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915807108954	WITHOUT_CLASSIFICATION	8.419289104524758E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999912374710467	WITHOUT_CLASSIFICATION	8.762528953269511E-6	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999914876472761	WITHOUT_CLASSIFICATION	8.512352723933817E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999931648198951	WITHOUT_CLASSIFICATION	6.8351801049294815E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899609495762	WITHOUT_CLASSIFICATION	1.0039050423819933E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999931648198951	WITHOUT_CLASSIFICATION	6.8351801049294815E-6	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999912847130503	WITHOUT_CLASSIFICATION	8.715286949627463E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999926478858255	WITHOUT_CLASSIFICATION	7.352114174414535E-6	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999990246152196	WITHOUT_CLASSIFICATION	9.753847804010722E-6	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999930067592943	WITHOUT_CLASSIFICATION	6.993240705707412E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999990260750378	WITHOUT_CLASSIFICATION	9.73924962199645E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924758568057	WITHOUT_CLASSIFICATION	7.524143194227796E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924632093509	WITHOUT_CLASSIFICATION	7.53679064914468E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924632093509	WITHOUT_CLASSIFICATION	7.53679064914468E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999992064096628	WITHOUT_CLASSIFICATION	7.935903371980246E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999921575164077	WITHOUT_CLASSIFICATION	7.842483592249426E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999917182040801	WITHOUT_CLASSIFICATION	8.281795919893277E-6	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924292998689	WITHOUT_CLASSIFICATION	7.570700131105437E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999912660917212	WITHOUT_CLASSIFICATION	8.733908278845767E-6	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999989921521787	WITHOUT_CLASSIFICATION	1.0078478212949704E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999911236565701	WITHOUT_CLASSIFICATION	8.876343429901299E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899609495762	WITHOUT_CLASSIFICATION	1.0039050423819933E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999926190180505	WITHOUT_CLASSIFICATION	7.380981949418839E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924422797255	WITHOUT_CLASSIFICATION	7.557720274456856E-6	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907277402589	WITHOUT_CLASSIFICATION	9.272259741133255E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999931273840358	WITHOUT_CLASSIFICATION	6.87261596418879E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999931841308977	WITHOUT_CLASSIFICATION	6.815869102354684E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999906299350416	WITHOUT_CLASSIFICATION	9.370064958391024E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999887934408498	WITHOUT_CLASSIFICATION	1.1206559150071699E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999893444416141	WITHOUT_CLASSIFICATION	1.065555838583963E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999916502284569	WITHOUT_CLASSIFICATION	8.34977154306191E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999916502284569	WITHOUT_CLASSIFICATION	8.34977154306191E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992188909862	WITHOUT_CLASSIFICATION	7.81109013797132E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992188909862	WITHOUT_CLASSIFICATION	7.81109013797132E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902311500833	WITHOUT_CLASSIFICATION	9.768849916686177E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999906135199621	WITHOUT_CLASSIFICATION	9.386480037902081E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899609495762	WITHOUT_CLASSIFICATION	1.0039050423819933E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999914138364849	WITHOUT_CLASSIFICATION	8.586163515158211E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924632093509	WITHOUT_CLASSIFICATION	7.53679064914468E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999887934408498	WITHOUT_CLASSIFICATION	1.1206559150071699E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999916502284569	WITHOUT_CLASSIFICATION	8.34977154306191E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992188909862	WITHOUT_CLASSIFICATION	7.81109013797132E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999906135199621	WITHOUT_CLASSIFICATION	9.386480037902081E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999915691220016	WITHOUT_CLASSIFICATION	8.430877998328508E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924126046527	WITHOUT_CLASSIFICATION	7.587395347261514E-6	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999917440581674	WITHOUT_CLASSIFICATION	8.255941832627592E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999904065671854	WITHOUT_CLASSIFICATION	9.593432814687215E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999908334022075	WITHOUT_CLASSIFICATION	9.166597792552233E-6	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999916207676643	WITHOUT_CLASSIFICATION	8.379232335733876E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999871303644512	WITHOUT_CLASSIFICATION	1.2869635548876622E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924632093509	WITHOUT_CLASSIFICATION	7.53679064914468E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992644492286	WITHOUT_CLASSIFICATION	7.35550771396319E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999871303644512	WITHOUT_CLASSIFICATION	1.2869635548876622E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999991029682048	WITHOUT_CLASSIFICATION	8.970317951947493E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999916166435607	WITHOUT_CLASSIFICATION	8.383356439344385E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999991904849334	WITHOUT_CLASSIFICATION	8.095150666058954E-6	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926873535109	WITHOUT_CLASSIFICATION	7.312646489142916E-6	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999917584698301	WITHOUT_CLASSIFICATION	8.241530169848901E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999897945710517	WITHOUT_CLASSIFICATION	1.0205428948128085E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999928935898386	WITHOUT_CLASSIFICATION	7.106410161459744E-6	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999917261096904	WITHOUT_CLASSIFICATION	8.273890309503355E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999906482157792	WITHOUT_CLASSIFICATION	9.351784220781085E-6	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999872516721324	WITHOUT_CLASSIFICATION	1.274832786762863E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999922670284358	WITHOUT_CLASSIFICATION	7.732971564149595E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999905257222138	WITHOUT_CLASSIFICATION	9.474277786151635E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927713656397	WITHOUT_CLASSIFICATION	7.228634360364876E-6	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999844722641146	WITHOUT_CLASSIFICATION	1.5527735885450204E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999833021868328	WITHOUT_CLASSIFICATION	1.6697813167200374E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919670018104	WITHOUT_CLASSIFICATION	8.032998189618387E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99998940116567	WITHOUT_CLASSIFICATION	1.0598834329999829E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999856234410983	WITHOUT_CLASSIFICATION	1.4376558901538923E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999857421467755	WITHOUT_CLASSIFICATION	1.4257853224618885E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999844244354734	WITHOUT_CLASSIFICATION	1.557556452651841E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999980006626258	WITHOUT_CLASSIFICATION	1.999337374211811E-6	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999922937966155	WITHOUT_CLASSIFICATION	7.706203384606815E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999990461307596	WITHOUT_CLASSIFICATION	9.538692404082226E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999922102507809	WITHOUT_CLASSIFICATION	7.789749219075922E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999922670284358	WITHOUT_CLASSIFICATION	7.732971564149595E-6	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999911895948331	WITHOUT_CLASSIFICATION	8.810405166761887E-6	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999905135630086	WITHOUT_CLASSIFICATION	9.486436991301282E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913278644444	WITHOUT_CLASSIFICATION	8.672135555613071E-6	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999961369173707	WITHOUT_CLASSIFICATION	3.8630826293153545E-6	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999964232366434	WITHOUT_CLASSIFICATION	3.5767633566994924E-6	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999980394496395	WITHOUT_CLASSIFICATION	1.960550360425276E-6	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999959175081682	WITHOUT_CLASSIFICATION	4.082491831752483E-6	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999973178661276	WITHOUT_CLASSIFICATION	2.682133872506669E-6	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999973093288379	WITHOUT_CLASSIFICATION	2.690671162151854E-6	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999935994802032	WITHOUT_CLASSIFICATION	6.400519796848765E-6	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999970800251181	WITHOUT_CLASSIFICATION	2.919974881901112E-6	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999930540188664	WITHOUT_CLASSIFICATION	6.945981133616055E-6	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999979756011502	WITHOUT_CLASSIFICATION	2.0243988497693677E-6	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999282152161684	WITHOUT_CLASSIFICATION	7.178478383158601E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999936888099022	WITHOUT_CLASSIFICATION	6.311190097714773E-6	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999345095789302	WITHOUT_CLASSIFICATION	6.549042106981931E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.999994195975318	WITHOUT_CLASSIFICATION	5.804024682062491E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999283346751496	WITHOUT_CLASSIFICATION	7.166532485032059E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999842675553308	WITHOUT_CLASSIFICATION	1.5732444669254073E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999904796489825	WITHOUT_CLASSIFICATION	9.520351017550252E-6	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999917200963148	WITHOUT_CLASSIFICATION	8.279903685161377E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.999972157190322	WITHOUT_CLASSIFICATION	2.7842809678083266E-5	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999954864136503	WITHOUT_CLASSIFICATION	4.513586349642567E-6	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999920789853953	WITHOUT_CLASSIFICATION	7.921014604568502E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999640275146682	WITHOUT_CLASSIFICATION	3.597248533184351E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999993060319904	WITHOUT_CLASSIFICATION	6.939680095665847E-7	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999314648640635	WITHOUT_CLASSIFICATION	6.853513593653092E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999980508304115	WITHOUT_CLASSIFICATION	1.9491695885458603E-6	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999100741544605	WITHOUT_CLASSIFICATION	8.992584553946652E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999354928572223	WITHOUT_CLASSIFICATION	6.450714277769975E-5	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999169235466713	WITHOUT_CLASSIFICATION	8.307645332880077E-5	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999286030085216	WITHOUT_CLASSIFICATION	7.13969914784202E-5	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9999750114501758	WITHOUT_CLASSIFICATION	2.4988549824309026E-5	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9998997823293474	WITHOUT_CLASSIFICATION	1.002176706526497E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999822670572905	WITHOUT_CLASSIFICATION	1.7732942709470486E-5	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999875682703036	WITHOUT_CLASSIFICATION	1.2431729696438202E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999921103000062	WITHOUT_CLASSIFICATION	7.889699993716608E-6	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.999999462625194	WITHOUT_CLASSIFICATION	5.37374806081766E-7	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999883605132186	WITHOUT_CLASSIFICATION	1.1639486781346665E-5	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999988730086374	WITHOUT_CLASSIFICATION	1.1269913625786929E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999199140149159	WITHOUT_CLASSIFICATION	8.008598508416274E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999992814066379	WITHOUT_CLASSIFICATION	7.185933621487424E-7	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999976414711951	WITHOUT_CLASSIFICATION	2.3585288050295586E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999853976567485	WITHOUT_CLASSIFICATION	1.4602343251497189E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999980006626258	WITHOUT_CLASSIFICATION	1.999337374211811E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999945319170402	WITHOUT_CLASSIFICATION	5.468082959764871E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999990740967329	WITHOUT_CLASSIFICATION	9.259032670993405E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999948706454574	WITHOUT_CLASSIFICATION	5.129354542639511E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.999988202180662	WITHOUT_CLASSIFICATION	1.1797819338044247E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999988348931406	WITHOUT_CLASSIFICATION	1.1651068593874872E-6	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999989450953218	WITHOUT_CLASSIFICATION	1.0549046782005711E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999936888099022	WITHOUT_CLASSIFICATION	6.311190097714773E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999912254681118	WITHOUT_CLASSIFICATION	8.774531888250824E-6	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.999999919764108	WITHOUT_CLASSIFICATION	8.02358920905259E-8	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999951822366838	WITHOUT_CLASSIFICATION	4.81776331619937E-6	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999973749448403	WITHOUT_CLASSIFICATION	2.6250551596041464E-6	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999947180666741	WITHOUT_CLASSIFICATION	5.281933325845649E-6	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999959349155336	WITHOUT_CLASSIFICATION	4.065084466445416E-6	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999815537838197	WITHOUT_CLASSIFICATION	1.8446216180388873E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999991272872716	WITHOUT_CLASSIFICATION	8.727127284933126E-7	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999983824058281	WITHOUT_CLASSIFICATION	1.6175941720151443E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999981179168085	WITHOUT_CLASSIFICATION	1.8820831914674278E-6	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999995221011915	WITHOUT_CLASSIFICATION	4.778988085918453E-7	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.99999747273336	WITHOUT_CLASSIFICATION	2.527266639953438E-6	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999955618999836	WITHOUT_CLASSIFICATION	4.4381000163794716E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999999384902729	WITHOUT_CLASSIFICATION	6.15097270747669E-8	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999958947698643	WITHOUT_CLASSIFICATION	4.1052301356894414E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999708445391754	WITHOUT_CLASSIFICATION	2.9155460824593743E-5	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999978626029282	WITHOUT_CLASSIFICATION	2.137397071867439E-6	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999995656256059	WITHOUT_CLASSIFICATION	4.343743940732457E-7	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999990805770971	WITHOUT_CLASSIFICATION	9.194229028461331E-7	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999997005693293	WITHOUT_CLASSIFICATION	2.9943067068974626E-7	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999996368637556	WITHOUT_CLASSIFICATION	3.631362444078877E-7	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999995266494432	WITHOUT_CLASSIFICATION	4.7335055683166887E-7	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9999997870706524	WITHOUT_CLASSIFICATION	2.1292934762910717E-7	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999965280429548	WITHOUT_CLASSIFICATION	3.471957045118898E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999987485386285	WITHOUT_CLASSIFICATION	1.25146137157641E-6	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999852265144543	WITHOUT_CLASSIFICATION	1.4773485545713545E-5	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999425203759676	WITHOUT_CLASSIFICATION	5.7479624032333236E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999834062960075	WITHOUT_CLASSIFICATION	1.6593703992490637E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999821196465789	WITHOUT_CLASSIFICATION	1.788035342102171E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.999993551222541	WITHOUT_CLASSIFICATION	6.448777459122249E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999995795035322	WITHOUT_CLASSIFICATION	4.204964678032132E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999995795035322	WITHOUT_CLASSIFICATION	4.204964678032132E-6	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999969243461221	WITHOUT_CLASSIFICATION	3.0756538777824627E-6	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999988634745274	WITHOUT_CLASSIFICATION	1.1365254726562984E-6	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9999996659569812	WITHOUT_CLASSIFICATION	3.3404301882069015E-7	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999995502404243	WITHOUT_CLASSIFICATION	4.49759575613775E-7	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999991780179396	WITHOUT_CLASSIFICATION	8.219820603177565E-7	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999998345249224	WITHOUT_CLASSIFICATION	1.6547507772284646E-7	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999971785544791	WITHOUT_CLASSIFICATION	2.821445520905892E-6	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999980407211703	WITHOUT_CLASSIFICATION	1.9592788297546693E-6	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.999998295784532	WITHOUT_CLASSIFICATION	1.7042154679937975E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999959713404917	WITHOUT_CLASSIFICATION	4.028659508284825E-6	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999974295504052	WITHOUT_CLASSIFICATION	2.570449594951429E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999970402236457	WITHOUT_CLASSIFICATION	2.95977635437448E-6	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999798953173106	WITHOUT_CLASSIFICATION	2.0104682689493708E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999928786668336	WITHOUT_CLASSIFICATION	7.1213331664401515E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999999887295675	WITHOUT_CLASSIFICATION	1.1270432603614245E-8	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999975715271407	WITHOUT_CLASSIFICATION	2.4284728592327215E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999991815340132	WITHOUT_CLASSIFICATION	8.184659868176471E-7	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999960408102831	WITHOUT_CLASSIFICATION	3.95918971689117E-6	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999883478621295	WITHOUT_CLASSIFICATION	1.1652137870458522E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9998363986737635	WITHOUT_CLASSIFICATION	1.6360132623643688E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999963442168153	WITHOUT_CLASSIFICATION	3.655783184650711E-6	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999988032984112	WITHOUT_CLASSIFICATION	1.1967015889044378E-6	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999999677944059	WITHOUT_CLASSIFICATION	3.2205594108260435E-7	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999983839514681	WITHOUT_CLASSIFICATION	1.6160485319581832E-6	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999993627250825	WITHOUT_CLASSIFICATION	6.372749175236986E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999929285907314	WITHOUT_CLASSIFICATION	7.071409268581412E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999968413802905	WITHOUT_CLASSIFICATION	3.1586197095238174E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999995107466009	WITHOUT_CLASSIFICATION	4.89253399155441E-7	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9990749160947664	WITHOUT_CLASSIFICATION	9.250839052336302E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999960809182513	WITHOUT_CLASSIFICATION	3.919081748710889E-6	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999983919439128	WITHOUT_CLASSIFICATION	1.608056087136282E-6	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999848801547487	WITHOUT_CLASSIFICATION	1.5119845251244645E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999974533129528	WITHOUT_CLASSIFICATION	2.5466870471825185E-6	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999976737396057	WITHOUT_CLASSIFICATION	2.3262603943916873E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999975195489328	WITHOUT_CLASSIFICATION	2.4804510671871603E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999987823261176	WITHOUT_CLASSIFICATION	1.217673882367903E-6	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999952982607382	WITHOUT_CLASSIFICATION	4.701739261755792E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999965096222119	WITHOUT_CLASSIFICATION	3.4903777880846952E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999931718513296	WITHOUT_CLASSIFICATION	6.828148670346795E-6	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999993804931072	WITHOUT_CLASSIFICATION	6.195068927317907E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.999996641211769	WITHOUT_CLASSIFICATION	3.3587882310166E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999963728237471	WITHOUT_CLASSIFICATION	3.627176252894822E-6	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999981701084777	WITHOUT_CLASSIFICATION	1.8298915223435695E-6	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999995954784636	WITHOUT_CLASSIFICATION	4.0452153632507365E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999971289136188	WITHOUT_CLASSIFICATION	2.87108638120638E-6	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.999911033736128	WITHOUT_CLASSIFICATION	8.896626387199752E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.99998526066152	WITHOUT_CLASSIFICATION	1.4739338480028386E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999913701334872	WITHOUT_CLASSIFICATION	8.629866512847545E-6	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999900659970766	WITHOUT_CLASSIFICATION	9.934002923385104E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999928582599931	WITHOUT_CLASSIFICATION	7.141740006888202E-6	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999912418786278	WITHOUT_CLASSIFICATION	8.758121372311964E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926304221576	WITHOUT_CLASSIFICATION	7.369577842503317E-6	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902391102072	WITHOUT_CLASSIFICATION	9.760889792808309E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999911878879709	WITHOUT_CLASSIFICATION	8.812112029103658E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999918636034236	WITHOUT_CLASSIFICATION	8.136396576413137E-6	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915710778217	WITHOUT_CLASSIFICATION	8.428922178291672E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999989930470951	WITHOUT_CLASSIFICATION	1.0069529048973009E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999929582143035	WITHOUT_CLASSIFICATION	7.041785696637773E-6	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999903330742921	WITHOUT_CLASSIFICATION	9.666925707805236E-6	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999991792193476	WITHOUT_CLASSIFICATION	8.207806524068123E-6	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901444361621	WITHOUT_CLASSIFICATION	9.855563837898725E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999915954804225	WITHOUT_CLASSIFICATION	8.404519577587314E-6	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999911013456899	WITHOUT_CLASSIFICATION	8.89865431016624E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899609495762	WITHOUT_CLASSIFICATION	1.0039050423819933E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999914138364849	WITHOUT_CLASSIFICATION	8.586163515158211E-6	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999885303665627	WITHOUT_CLASSIFICATION	1.1469633437257508E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999914085064668	WITHOUT_CLASSIFICATION	8.591493533188634E-6	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999898814928221	WITHOUT_CLASSIFICATION	1.0118507177898604E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999915807108954	WITHOUT_CLASSIFICATION	8.419289104524758E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999912374710467	WITHOUT_CLASSIFICATION	8.762528953269511E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999906035462869	WITHOUT_CLASSIFICATION	9.396453713071223E-6	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999914876472761	WITHOUT_CLASSIFICATION	8.512352723933817E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999931648198951	WITHOUT_CLASSIFICATION	6.8351801049294815E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999926478858255	WITHOUT_CLASSIFICATION	7.352114174414535E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924632093509	WITHOUT_CLASSIFICATION	7.53679064914468E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924632093509	WITHOUT_CLASSIFICATION	7.53679064914468E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999921575164077	WITHOUT_CLASSIFICATION	7.842483592249426E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999931648198951	WITHOUT_CLASSIFICATION	6.8351801049294815E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999990246152196	WITHOUT_CLASSIFICATION	9.753847804010722E-6	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999930067592943	WITHOUT_CLASSIFICATION	6.993240705707412E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999990260750378	WITHOUT_CLASSIFICATION	9.73924962199645E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924758568057	WITHOUT_CLASSIFICATION	7.524143194227796E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924632093509	WITHOUT_CLASSIFICATION	7.53679064914468E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999992064096628	WITHOUT_CLASSIFICATION	7.935903371980246E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999917182040801	WITHOUT_CLASSIFICATION	8.281795919893277E-6	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924292998689	WITHOUT_CLASSIFICATION	7.570700131105437E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999912660917212	WITHOUT_CLASSIFICATION	8.733908278845767E-6	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999989921521787	WITHOUT_CLASSIFICATION	1.0078478212949704E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999911236565701	WITHOUT_CLASSIFICATION	8.876343429901299E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999897471522144	WITHOUT_CLASSIFICATION	1.0252847785565516E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999920479533847	WITHOUT_CLASSIFICATION	7.952046615262002E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924422797255	WITHOUT_CLASSIFICATION	7.557720274456856E-6	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907277402589	WITHOUT_CLASSIFICATION	9.272259741133255E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999931841308977	WITHOUT_CLASSIFICATION	6.815869102354684E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899609495762	WITHOUT_CLASSIFICATION	1.0039050423819933E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899609495762	WITHOUT_CLASSIFICATION	1.0039050423819933E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999931273840358	WITHOUT_CLASSIFICATION	6.87261596418879E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999906299350416	WITHOUT_CLASSIFICATION	9.370064958391024E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999887934408498	WITHOUT_CLASSIFICATION	1.1206559150071699E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999916502284569	WITHOUT_CLASSIFICATION	8.34977154306191E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999916502284569	WITHOUT_CLASSIFICATION	8.34977154306191E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992188909862	WITHOUT_CLASSIFICATION	7.81109013797132E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992188909862	WITHOUT_CLASSIFICATION	7.81109013797132E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902311500833	WITHOUT_CLASSIFICATION	9.768849916686177E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999902311500833	WITHOUT_CLASSIFICATION	9.768849916686177E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999906135199621	WITHOUT_CLASSIFICATION	9.386480037902081E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999915691220016	WITHOUT_CLASSIFICATION	8.430877998328508E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999914138364849	WITHOUT_CLASSIFICATION	8.586163515158211E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924632093509	WITHOUT_CLASSIFICATION	7.53679064914468E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999887934408498	WITHOUT_CLASSIFICATION	1.1206559150071699E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999916502284569	WITHOUT_CLASSIFICATION	8.34977154306191E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992188909862	WITHOUT_CLASSIFICATION	7.81109013797132E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924126046527	WITHOUT_CLASSIFICATION	7.587395347261514E-6	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999917440581674	WITHOUT_CLASSIFICATION	8.255941832627592E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999904065671854	WITHOUT_CLASSIFICATION	9.593432814687215E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999908334022075	WITHOUT_CLASSIFICATION	9.166597792552233E-6	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999916207676643	WITHOUT_CLASSIFICATION	8.379232335733876E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992644492286	WITHOUT_CLASSIFICATION	7.35550771396319E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999992644492286	WITHOUT_CLASSIFICATION	7.35550771396319E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999871303644512	WITHOUT_CLASSIFICATION	1.2869635548876622E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999991029682048	WITHOUT_CLASSIFICATION	8.970317951947493E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999916166435607	WITHOUT_CLASSIFICATION	8.383356439344385E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999991904849334	WITHOUT_CLASSIFICATION	8.095150666058954E-6	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926873535109	WITHOUT_CLASSIFICATION	7.312646489142916E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999901976770781	WITHOUT_CLASSIFICATION	9.802322921867591E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999924632093509	WITHOUT_CLASSIFICATION	7.53679064914468E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999871303644512	WITHOUT_CLASSIFICATION	1.2869635548876622E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999917584698301	WITHOUT_CLASSIFICATION	8.241530169848901E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999897945710517	WITHOUT_CLASSIFICATION	1.0205428948128085E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999928935898386	WITHOUT_CLASSIFICATION	7.106410161459744E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999906482157792	WITHOUT_CLASSIFICATION	9.351784220781085E-6	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999872516721324	WITHOUT_CLASSIFICATION	1.274832786762863E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999922670284358	WITHOUT_CLASSIFICATION	7.732971564149595E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999905257222138	WITHOUT_CLASSIFICATION	9.474277786151635E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999927713656397	WITHOUT_CLASSIFICATION	7.228634360364876E-6	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999844722641146	WITHOUT_CLASSIFICATION	1.5527735885450204E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999833021868328	WITHOUT_CLASSIFICATION	1.6697813167200374E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919670018104	WITHOUT_CLASSIFICATION	8.032998189618387E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99998940116567	WITHOUT_CLASSIFICATION	1.0598834329999829E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999856234410983	WITHOUT_CLASSIFICATION	1.4376558901538923E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999857421467755	WITHOUT_CLASSIFICATION	1.4257853224618885E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999844244354734	WITHOUT_CLASSIFICATION	1.557556452651841E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913913730583	WITHOUT_CLASSIFICATION	8.608626941788213E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999922102507809	WITHOUT_CLASSIFICATION	7.789749219075922E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999922670284358	WITHOUT_CLASSIFICATION	7.732971564149595E-6	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999911895948331	WITHOUT_CLASSIFICATION	8.810405166761887E-6	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999905135630086	WITHOUT_CLASSIFICATION	9.486436991301282E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999913278644444	WITHOUT_CLASSIFICATION	8.672135555613071E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999912254681118	WITHOUT_CLASSIFICATION	8.774531888250824E-6	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999961369173707	WITHOUT_CLASSIFICATION	3.8630826293153545E-6	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999964232366434	WITHOUT_CLASSIFICATION	3.5767633566994924E-6	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999980394496395	WITHOUT_CLASSIFICATION	1.960550360425276E-6	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999959175081682	WITHOUT_CLASSIFICATION	4.082491831752483E-6	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999973178661276	WITHOUT_CLASSIFICATION	2.682133872506669E-6	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999973093288379	WITHOUT_CLASSIFICATION	2.690671162151854E-6	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999935994802032	WITHOUT_CLASSIFICATION	6.400519796848765E-6	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999970800251181	WITHOUT_CLASSIFICATION	2.919974881901112E-6	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999930540188664	WITHOUT_CLASSIFICATION	6.945981133616055E-6	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999979756011502	WITHOUT_CLASSIFICATION	2.0243988497693677E-6	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999282152161684	WITHOUT_CLASSIFICATION	7.178478383158601E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999936888099022	WITHOUT_CLASSIFICATION	6.311190097714773E-6	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999345095789302	WITHOUT_CLASSIFICATION	6.549042106981931E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.999994195975318	WITHOUT_CLASSIFICATION	5.804024682062491E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999283346751496	WITHOUT_CLASSIFICATION	7.166532485032059E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999842675553308	WITHOUT_CLASSIFICATION	1.5732444669254073E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999980006626258	WITHOUT_CLASSIFICATION	1.999337374211811E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999904796489825	WITHOUT_CLASSIFICATION	9.520351017550252E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999904796489825	WITHOUT_CLASSIFICATION	9.520351017550252E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.999972157190322	WITHOUT_CLASSIFICATION	2.7842809678083266E-5	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999954864136503	WITHOUT_CLASSIFICATION	4.513586349642567E-6	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.999999919764108	WITHOUT_CLASSIFICATION	8.02358920905259E-8	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999989021884564	WITHOUT_CLASSIFICATION	1.0978115434912077E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999989021884564	WITHOUT_CLASSIFICATION	1.0978115434912077E-6	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9991605027215871	WITHOUT_CLASSIFICATION	8.39497278412918E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9994653608744873	WITHOUT_CLASSIFICATION	5.34639125512599E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999999804521716	WITHOUT_CLASSIFICATION	1.9547828391009803E-8	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999999809818872	WITHOUT_CLASSIFICATION	1.9018112713751997E-8	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.999998095001114	WITHOUT_CLASSIFICATION	1.9049988860130028E-6	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.999999954818271	WITHOUT_CLASSIFICATION	4.518172903030137E-8	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999593476127	WITHOUT_CLASSIFICATION	4.0652387314809847E-8	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999970115106064	WITHOUT_CLASSIFICATION	2.9884893936217504E-6	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9999962949468203	WITHOUT_CLASSIFICATION	3.7050531795747E-6	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999965747836449	WITHOUT_CLASSIFICATION	3.425216355176503E-6	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999995980158198	WITHOUT_CLASSIFICATION	4.0198418017623873E-7	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999866070174297	WITHOUT_CLASSIFICATION	1.339298257031259E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999984353613516	WITHOUT_CLASSIFICATION	1.5646386483994214E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999998475144227	WITHOUT_CLASSIFICATION	1.5248557727152494E-7	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999985244362766	WITHOUT_CLASSIFICATION	1.47556372343692E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.999999993224219	WITHOUT_CLASSIFICATION	6.775781052313157E-9	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9999999071090672	WITHOUT_CLASSIFICATION	9.289093271628677E-8	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999937607680913	WITHOUT_CLASSIFICATION	6.239231908706925E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999969280244477	WITHOUT_CLASSIFICATION	3.071975552207564E-6	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999988396604194	WITHOUT_CLASSIFICATION	1.1603395806275014E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.999997670928162	WITHOUT_CLASSIFICATION	2.329071837885174E-6	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999996633564329	WITHOUT_CLASSIFICATION	3.3664356708435913E-7	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999703591788659	WITHOUT_CLASSIFICATION	2.964082113406363E-5	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999982365179294	WITHOUT_CLASSIFICATION	1.763482070692039E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999984387079631	WITHOUT_CLASSIFICATION	1.5612920369006087E-6	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999990795827323	WITHOUT_CLASSIFICATION	9.204172676437033E-7	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999929923733558	WITHOUT_CLASSIFICATION	7.007626644215437E-6	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999999422923267	WITHOUT_CLASSIFICATION	5.770767326549324E-8	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999999464640448	WITHOUT_CLASSIFICATION	5.35359552502734E-8	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999987820360302	WITHOUT_CLASSIFICATION	1.2179639698281628E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999987820360302	WITHOUT_CLASSIFICATION	1.2179639698281628E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999987597725144	WITHOUT_CLASSIFICATION	1.2402274856358076E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999987597725144	WITHOUT_CLASSIFICATION	1.2402274856358076E-6	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999991391551805	WITHOUT_CLASSIFICATION	8.608448195455992E-7	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999998642682213	WITHOUT_CLASSIFICATION	1.3573177868912219E-7	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999778185445	WITHOUT_CLASSIFICATION	2.2181455433051614E-8	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999980248548651	WITHOUT_CLASSIFICATION	1.9751451349228458E-6	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999603837059006	WITHOUT_CLASSIFICATION	3.961629409935574E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9997277165574562	WITHOUT_CLASSIFICATION	2.722834425438248E-4	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999927426641801	WITHOUT_CLASSIFICATION	7.257335819854412E-6	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999992353728046	WITHOUT_CLASSIFICATION	7.646271953450892E-7	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.999996193271635	WITHOUT_CLASSIFICATION	3.8067283649171595E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999982375930015	WITHOUT_CLASSIFICATION	1.7624069985245923E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999982375930015	WITHOUT_CLASSIFICATION	1.7624069985245923E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999991707912707	WITHOUT_CLASSIFICATION	8.292087293583339E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999991707912707	WITHOUT_CLASSIFICATION	8.292087293583339E-7	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999990882316773	WITHOUT_CLASSIFICATION	9.117683227465605E-7	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999979062034418	WITHOUT_CLASSIFICATION	2.0937965582100965E-6	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999995400094028	WITHOUT_CLASSIFICATION	4.5999059718077136E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999998053538622	WITHOUT_CLASSIFICATION	1.9464613784811027E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999847224056818	WITHOUT_CLASSIFICATION	1.5277594318211984E-5	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999991161350524	WITHOUT_CLASSIFICATION	8.838649475509881E-7	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999995951495465	WITHOUT_CLASSIFICATION	4.048504535659902E-7	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999890570189051	WITHOUT_CLASSIFICATION	1.0942981094940948E-5	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9999997088773737	WITHOUT_CLASSIFICATION	2.911226262556969E-7	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999996489546398	WITHOUT_CLASSIFICATION	3.5104536021324966E-7	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999832641586727	WITHOUT_CLASSIFICATION	1.673584132735157E-5	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999993679243154	WITHOUT_CLASSIFICATION	6.320756845829787E-7	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999988977213126	WITHOUT_CLASSIFICATION	1.102278687378914E-6	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999988697008887	WITHOUT_CLASSIFICATION	1.1302991112417287E-6	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999998092247402	WITHOUT_CLASSIFICATION	1.907752597560697E-7	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999945297505145	WITHOUT_CLASSIFICATION	5.4702494854393005E-6	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999970041619969	WITHOUT_CLASSIFICATION	2.99583800305258E-6	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999980156707688	WITHOUT_CLASSIFICATION	1.9843292311281786E-6	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999982665317447	WITHOUT_CLASSIFICATION	1.733468255326018E-6	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999906992709383	WITHOUT_CLASSIFICATION	9.300729061710062E-6	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9999944726278825	WITHOUT_CLASSIFICATION	5.527372117460406E-6	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999746302575595	WITHOUT_CLASSIFICATION	2.5369742440412816E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999995516347308	WITHOUT_CLASSIFICATION	4.4836526929799665E-7	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.999997167420848	WITHOUT_CLASSIFICATION	2.8325791519297886E-6	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.99999960058201	WITHOUT_CLASSIFICATION	3.994179899761794E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999882402541532	WITHOUT_CLASSIFICATION	1.1759745846751683E-5	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.999973448566578	WITHOUT_CLASSIFICATION	2.6551433421939364E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999944865023519	WITHOUT_CLASSIFICATION	5.513497648109739E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999944865023519	WITHOUT_CLASSIFICATION	5.513497648109739E-6	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.999999277625978	WITHOUT_CLASSIFICATION	7.223740221744792E-7	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999992456134027	WITHOUT_CLASSIFICATION	7.543865972706223E-7	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999997976688876	WITHOUT_CLASSIFICATION	2.023311123743277E-7	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999980224309293	WITHOUT_CLASSIFICATION	1.977569070636849E-6	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999777305098698	WITHOUT_CLASSIFICATION	2.226949013012844E-5	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999957520875797	WITHOUT_CLASSIFICATION	4.247912420219317E-6	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999508972256049	WITHOUT_CLASSIFICATION	4.910277439504542E-5	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.999998989580289	WITHOUT_CLASSIFICATION	1.0104197111104725E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999987597725144	WITHOUT_CLASSIFICATION	1.2402274856358076E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999987597725144	WITHOUT_CLASSIFICATION	1.2402274856358076E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999987597725144	WITHOUT_CLASSIFICATION	1.2402274856358076E-6	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999882402541532	WITHOUT_CLASSIFICATION	1.1759745846751683E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999882899470577	WITHOUT_CLASSIFICATION	1.1710052942340046E-5	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999853628751685	WITHOUT_CLASSIFICATION	1.4637124831410629E-5	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999817197062316	WITHOUT_CLASSIFICATION	1.8280293768345907E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9999993460073727	WITHOUT_CLASSIFICATION	6.539926272799132E-7	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999917998771105	WITHOUT_CLASSIFICATION	8.200122889612694E-6	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999768620196904	WITHOUT_CLASSIFICATION	2.313798030961122E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999357222279	WITHOUT_CLASSIFICATION	6.42777720896106E-8	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.999998601006083	WITHOUT_CLASSIFICATION	1.3989939170900376E-6	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999994912970243	WITHOUT_CLASSIFICATION	5.087029757216775E-7	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999979867916488	WITHOUT_CLASSIFICATION	2.013208351206696E-6	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999994235894293	WITHOUT_CLASSIFICATION	5.764105708182472E-7	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999996391798067	WITHOUT_CLASSIFICATION	3.6082019322757545E-7	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.999977816755072	WITHOUT_CLASSIFICATION	2.218324492801358E-5	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999995528772494	WITHOUT_CLASSIFICATION	4.471227506320778E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999853872657208	WITHOUT_CLASSIFICATION	1.4612734279027594E-5	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999905587281749	WITHOUT_CLASSIFICATION	9.441271825117226E-6	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9999998532625953	WITHOUT_CLASSIFICATION	1.467374047282161E-7	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.999988901611657	WITHOUT_CLASSIFICATION	1.1098388342997468E-5	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.999999416642475	WITHOUT_CLASSIFICATION	5.833575250215916E-7	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999989045018819	WITHOUT_CLASSIFICATION	1.0954981181856591E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999969444276597	WITHOUT_CLASSIFICATION	3.055572340212741E-6	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999952106718689	WITHOUT_CLASSIFICATION	4.789328131043853E-6	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999980054065031	WITHOUT_CLASSIFICATION	1.9945934969603813E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999992234679326	WITHOUT_CLASSIFICATION	7.765320674794785E-7	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999964932678084	WITHOUT_CLASSIFICATION	3.506732191553816E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999987597725144	WITHOUT_CLASSIFICATION	1.2402274856358076E-6	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999357222279	WITHOUT_CLASSIFICATION	6.42777720896106E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999853872657208	WITHOUT_CLASSIFICATION	1.4612734279027594E-5	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999996303128571	WITHOUT_CLASSIFICATION	3.696871428278008E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999994838116725	WITHOUT_CLASSIFICATION	5.161883275161325E-7	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999997011504481	WITHOUT_CLASSIFICATION	2.988495519418032E-7	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9999958653075002	WITHOUT_CLASSIFICATION	4.134692499836045E-6	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.999998827499713	WITHOUT_CLASSIFICATION	1.1725002869652641E-6	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999908218878862	WITHOUT_CLASSIFICATION	9.178112113735761E-6	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999939584620207	WITHOUT_CLASSIFICATION	6.04153797931805E-6	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999994021537759	WITHOUT_CLASSIFICATION	5.978462239966995E-7	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9999890846594567	WITHOUT_CLASSIFICATION	1.0915340543260108E-5	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999998096572297	WITHOUT_CLASSIFICATION	1.9034277037338638E-7	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999901870562147	WITHOUT_CLASSIFICATION	9.812943785251667E-6	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999901870562147	WITHOUT_CLASSIFICATION	9.812943785251667E-6	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999987180747012	WITHOUT_CLASSIFICATION	1.2819252987601435E-6	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999975428378585	WITHOUT_CLASSIFICATION	2.4571621414472086E-6	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999998225670624	WITHOUT_CLASSIFICATION	1.7743293753716257E-7	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999960999196352	WITHOUT_CLASSIFICATION	3.900080364850276E-6	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999999294301898	WITHOUT_CLASSIFICATION	7.056981023875928E-8	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999955407521953	WITHOUT_CLASSIFICATION	4.459247804601466E-6	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999972650707629	WITHOUT_CLASSIFICATION	2.734929237005483E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999996054097445	WITHOUT_CLASSIFICATION	3.9459025547444307E-7	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999990774878496	WITHOUT_CLASSIFICATION	9.225121504846693E-7	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999945656534555	WITHOUT_CLASSIFICATION	5.4343465445311075E-6	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999989565785297	WITHOUT_CLASSIFICATION	1.0434214703393017E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999991707912707	WITHOUT_CLASSIFICATION	8.292087293583339E-7	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999995951495465	WITHOUT_CLASSIFICATION	4.048504535659902E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999853872657208	WITHOUT_CLASSIFICATION	1.4612734279027594E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999999294301898	WITHOUT_CLASSIFICATION	7.056981023875928E-8	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999955407521953	WITHOUT_CLASSIFICATION	4.459247804601466E-6	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999993536428508	WITHOUT_CLASSIFICATION	6.463571492600866E-7	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999992628562024	WITHOUT_CLASSIFICATION	7.371437975735776E-7	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999904664799752	WITHOUT_CLASSIFICATION	9.53352002467949E-6	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9999981323157463	WITHOUT_CLASSIFICATION	1.867684253669267E-6	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.999996707577745	WITHOUT_CLASSIFICATION	3.292422255011824E-6	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999994114407017	WITHOUT_CLASSIFICATION	5.885592983947261E-7	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9999788241766258	WITHOUT_CLASSIFICATION	2.1175823374224714E-5	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999936887434874	WITHOUT_CLASSIFICATION	6.311256512613252E-6	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999994961232077	WITHOUT_CLASSIFICATION	5.038767922193752E-7	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999934038982334	WITHOUT_CLASSIFICATION	6.596101766624688E-6	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999996368593281	WITHOUT_CLASSIFICATION	3.631406718315468E-7	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999997800640542	WITHOUT_CLASSIFICATION	2.199359458931443E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9997232354353126	WITHOUT_CLASSIFICATION	2.7676456468729614E-4	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999956557113726	WITHOUT_CLASSIFICATION	4.344288627360054E-6	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999972062843847	WITHOUT_CLASSIFICATION	2.793715615289301E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.999999743209794	WITHOUT_CLASSIFICATION	2.5679020604043404E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9997232354353126	WITHOUT_CLASSIFICATION	2.7676456468729614E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9997232354353126	WITHOUT_CLASSIFICATION	2.7676456468729614E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9997232354353126	WITHOUT_CLASSIFICATION	2.7676456468729614E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999997953725265	WITHOUT_CLASSIFICATION	2.0462747353227846E-7	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999932161314593	WITHOUT_CLASSIFICATION	6.783868540680804E-6	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999982407379663	WITHOUT_CLASSIFICATION	1.7592620336991976E-6	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999997513395109	WITHOUT_CLASSIFICATION	2.4866048910226544E-7	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.999997721218503	WITHOUT_CLASSIFICATION	2.278781497011708E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.999999902867551	WITHOUT_CLASSIFICATION	9.713244897269482E-8	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999969852103401	WITHOUT_CLASSIFICATION	3.0147896599367018E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999996492197349	WITHOUT_CLASSIFICATION	3.507802650426808E-7	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999997695422504	WITHOUT_CLASSIFICATION	2.3045774949466944E-7	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999915780655461	WITHOUT_CLASSIFICATION	8.421934453902916E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9998788578723512	WITHOUT_CLASSIFICATION	1.2114212764881109E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999983511627801	WITHOUT_CLASSIFICATION	1.6488372199675003E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999871006239451	WITHOUT_CLASSIFICATION	1.2899376054794205E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999904796489825	WITHOUT_CLASSIFICATION	9.520351017550252E-6	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999998142551748	WITHOUT_CLASSIFICATION	1.8574482527712665E-7	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999997837277685	WITHOUT_CLASSIFICATION	2.1627223159840991E-7	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999999320913775	WITHOUT_CLASSIFICATION	6.790862259889136E-8	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999997933254209	WITHOUT_CLASSIFICATION	2.066745790584516E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999983788350387	WITHOUT_CLASSIFICATION	1.6211649612364925E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999983788350387	WITHOUT_CLASSIFICATION	1.6211649612364925E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999981956401274	WITHOUT_CLASSIFICATION	1.8043598726488014E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999921971767505	WITHOUT_CLASSIFICATION	7.80282324952992E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999981956401274	WITHOUT_CLASSIFICATION	1.8043598726488014E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999964987794109	WITHOUT_CLASSIFICATION	3.501220589037588E-6	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999958075238339	WITHOUT_CLASSIFICATION	4.192476166160892E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999945930033186	WITHOUT_CLASSIFICATION	5.406996681428335E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999933096344498	WITHOUT_CLASSIFICATION	6.690365550298498E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999933096344498	WITHOUT_CLASSIFICATION	6.690365550298498E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999972527489583	WITHOUT_CLASSIFICATION	2.7472510415884847E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999972527489583	WITHOUT_CLASSIFICATION	2.7472510415884847E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999957573700419	WITHOUT_CLASSIFICATION	4.242629958156056E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999957573700419	WITHOUT_CLASSIFICATION	4.242629958156056E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991406580638	WITHOUT_CLASSIFICATION	8.593419360903166E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991406580638	WITHOUT_CLASSIFICATION	8.593419360903166E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991406580638	WITHOUT_CLASSIFICATION	8.593419360903166E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999832497638068	WITHOUT_CLASSIFICATION	1.675023619324516E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991406580638	WITHOUT_CLASSIFICATION	8.593419360903166E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991406580638	WITHOUT_CLASSIFICATION	8.593419360903166E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999996488059216	WITHOUT_CLASSIFICATION	3.5119407828296865E-7	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999905332898363	WITHOUT_CLASSIFICATION	9.466710163562651E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999998859497501	WITHOUT_CLASSIFICATION	1.1405024990566045E-7	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999999594883064	WITHOUT_CLASSIFICATION	4.0511693491416346E-8	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999999130959075	WITHOUT_CLASSIFICATION	8.690409250679954E-8	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999997582529039	WITHOUT_CLASSIFICATION	2.4174709613458555E-7	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999926015822452	WITHOUT_CLASSIFICATION	7.398417754760325E-6	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999999102360708	WITHOUT_CLASSIFICATION	8.976392912829157E-8	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9999930950816968	WITHOUT_CLASSIFICATION	6.904918303151513E-6	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999999502368287	WITHOUT_CLASSIFICATION	4.9763171115526677E-8	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999918534100743	WITHOUT_CLASSIFICATION	8.146589925748575E-6	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.999997899707126	WITHOUT_CLASSIFICATION	2.100292873962154E-6	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999999824412592	WITHOUT_CLASSIFICATION	1.755874083331645E-8	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999997276620493	WITHOUT_CLASSIFICATION	2.7233795077228927E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999995890764339	WITHOUT_CLASSIFICATION	4.1092356615946025E-7	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999999508233972	WITHOUT_CLASSIFICATION	4.917660289404505E-8	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999999237815731	WITHOUT_CLASSIFICATION	7.62184269053637E-8	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999991344191932	WITHOUT_CLASSIFICATION	8.655808068776882E-7	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999997292833919	WITHOUT_CLASSIFICATION	2.7071660812969266E-7	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999997549091882	WITHOUT_CLASSIFICATION	2.450908117254867E-7	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999998798687634	WITHOUT_CLASSIFICATION	1.201312365954068E-7	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.999993421496616	WITHOUT_CLASSIFICATION	6.578503384035989E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.999993421496616	WITHOUT_CLASSIFICATION	6.578503384035989E-6	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9999923799665384	WITHOUT_CLASSIFICATION	7.620033461535412E-6	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9999923799665384	WITHOUT_CLASSIFICATION	7.620033461535412E-6	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999998866235762	WITHOUT_CLASSIFICATION	1.133764237948354E-7	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999993250226193	WITHOUT_CLASSIFICATION	6.749773805474827E-7	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999992667548183	WITHOUT_CLASSIFICATION	7.332451816771692E-7	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999993927726867	WITHOUT_CLASSIFICATION	6.07227313365019E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999978461525428	WITHOUT_CLASSIFICATION	2.1538474572411724E-6	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999101359652152	WITHOUT_CLASSIFICATION	8.986403478480343E-5	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999995804403526	WITHOUT_CLASSIFICATION	4.195596473704479E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9999882258744972	WITHOUT_CLASSIFICATION	1.1774125502852229E-5	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999980121978657	WITHOUT_CLASSIFICATION	1.987802134398486E-6	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999959749367765	WITHOUT_CLASSIFICATION	4.025063223551822E-6	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999999599209324	WITHOUT_CLASSIFICATION	4.007906765125846E-8	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999984157660798	WITHOUT_CLASSIFICATION	1.5842339201416913E-6	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999946709857878	WITHOUT_CLASSIFICATION	5.329014212138543E-6	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999999458434338	WITHOUT_CLASSIFICATION	5.415656621828741E-8	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999967080384586	WITHOUT_CLASSIFICATION	3.2919615414291854E-6	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999994544517655	WITHOUT_CLASSIFICATION	5.455482345145153E-7	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999998098977494	WITHOUT_CLASSIFICATION	1.9010225066995457E-7	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999999434646035	WITHOUT_CLASSIFICATION	5.653539657351684E-8	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999867259647938	WITHOUT_CLASSIFICATION	1.3274035206202784E-5	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.999999286158941	WITHOUT_CLASSIFICATION	7.138410590172225E-7	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999990642970977	WITHOUT_CLASSIFICATION	9.357029022526605E-7	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999992941168266	WITHOUT_CLASSIFICATION	7.05883173300011E-7	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999983884433248	WITHOUT_CLASSIFICATION	1.61155667515173E-6	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9999993082179258	WITHOUT_CLASSIFICATION	6.917820741063629E-7	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999998868580633	WITHOUT_CLASSIFICATION	1.1314193670554879E-7	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999995814015783	WITHOUT_CLASSIFICATION	4.1859842166771686E-7	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999995951374298	WITHOUT_CLASSIFICATION	4.0486257033874557E-7	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999109791540519	WITHOUT_CLASSIFICATION	8.902084594810941E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999943685879408	WITHOUT_CLASSIFICATION	5.631412059239902E-6	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999948261627187	WITHOUT_CLASSIFICATION	5.173837281238438E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999996106789246	WITHOUT_CLASSIFICATION	3.8932107544755546E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999933251253962	WITHOUT_CLASSIFICATION	6.674874603824419E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999988301018807	WITHOUT_CLASSIFICATION	1.1698981193009424E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999861006923092	WITHOUT_CLASSIFICATION	1.389930769094478E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999932610289847	WITHOUT_CLASSIFICATION	6.73897101526777E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999992386017993	WITHOUT_CLASSIFICATION	7.61398200676893E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999504160161049	WITHOUT_CLASSIFICATION	4.9583983895017755E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999992813974358	WITHOUT_CLASSIFICATION	7.186025643067501E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999817109684924	WITHOUT_CLASSIFICATION	1.8289031507636012E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958194835229	WITHOUT_CLASSIFICATION	4.1805164769978625E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999927060992504	WITHOUT_CLASSIFICATION	7.293900749541065E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984143365872	WITHOUT_CLASSIFICATION	1.585663412839222E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999980145816691	WITHOUT_CLASSIFICATION	1.9854183308837623E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999925731698809	WITHOUT_CLASSIFICATION	7.426830119116346E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999989021884564	WITHOUT_CLASSIFICATION	1.0978115434912077E-6	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999823268311021	WITHOUT_CLASSIFICATION	1.767316889783263E-5	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999999210734931	WITHOUT_CLASSIFICATION	7.89265068941986E-8	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999928002705688	WITHOUT_CLASSIFICATION	7.199729431185079E-6	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999976223665064	WITHOUT_CLASSIFICATION	2.3776334936836604E-6	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999982016237828	WITHOUT_CLASSIFICATION	1.7983762172294867E-6	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.999997889733942	WITHOUT_CLASSIFICATION	2.110266058003574E-6	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999997609514877	WITHOUT_CLASSIFICATION	2.3904851238255916E-7	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.999999096318062	WITHOUT_CLASSIFICATION	9.036819378695586E-7	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999521383964249	WITHOUT_CLASSIFICATION	4.7861603575030086E-5	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.999894205553739	WITHOUT_CLASSIFICATION	1.0579444626093529E-4	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9997195608081713	WITHOUT_CLASSIFICATION	2.804391918286821E-4	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9997920179553241	WITHOUT_CLASSIFICATION	2.0798204467596882E-4	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9996934600243117	WITHOUT_CLASSIFICATION	3.065399756883017E-4	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9996998034706805	WITHOUT_CLASSIFICATION	3.001965293194723E-4	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9997978143441012	WITHOUT_CLASSIFICATION	2.0218565589885497E-4	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999874534349125	WITHOUT_CLASSIFICATION	1.2546565087423182E-5	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9998876130969951	WITHOUT_CLASSIFICATION	1.12386903004887E-4	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.999869869391819	WITHOUT_CLASSIFICATION	1.301306081809853E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999991509856693	WITHOUT_CLASSIFICATION	8.490143306500711E-7	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999982989053164	WITHOUT_CLASSIFICATION	1.7010946835654256E-6	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9988158211940611	WITHOUT_CLASSIFICATION	0.0011841788059389498	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999998320094939	WITHOUT_CLASSIFICATION	1.679905060361541E-7	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999994147427496	WITHOUT_CLASSIFICATION	5.852572503917943E-7	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9999774074038568	WITHOUT_CLASSIFICATION	2.2592596143225645E-5	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9999950587923291	WITHOUT_CLASSIFICATION	4.941207670963068E-6	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999994091667975	WITHOUT_CLASSIFICATION	5.908332025357097E-7	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999999164119987	WITHOUT_CLASSIFICATION	8.358800133576505E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999988646211863	WITHOUT_CLASSIFICATION	1.135378813694181E-6	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999709387900206	WITHOUT_CLASSIFICATION	2.906120997937437E-5	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999967226166193	WITHOUT_CLASSIFICATION	3.277383380766553E-6	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999991659464378	WITHOUT_CLASSIFICATION	8.340535621103251E-7	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999756817061405	WITHOUT_CLASSIFICATION	2.4318293859518492E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999991391313886	WITHOUT_CLASSIFICATION	8.608686114678513E-7	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999995210140127	WITHOUT_CLASSIFICATION	4.789859873070955E-7	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999890004351191	WITHOUT_CLASSIFICATION	1.099956488106016E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999989243073645	WITHOUT_CLASSIFICATION	1.0756926354709473E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999978468942209	WITHOUT_CLASSIFICATION	2.153105779142571E-6	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999987693325056	WITHOUT_CLASSIFICATION	1.230667494362693E-6	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999984412765526	WITHOUT_CLASSIFICATION	1.5587234473490092E-6	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999994176637769	WITHOUT_CLASSIFICATION	5.823362231304534E-7	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999998841603399	WITHOUT_CLASSIFICATION	1.158396601347443E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999999141047238	WITHOUT_CLASSIFICATION	8.58952761961095E-8	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999983058775247	WITHOUT_CLASSIFICATION	1.69412247526619E-6	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999999390124479	WITHOUT_CLASSIFICATION	6.098755212971283E-8	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999962947160043	WITHOUT_CLASSIFICATION	3.7052839958320498E-6	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999964979863002	WITHOUT_CLASSIFICATION	3.502013699804188E-6	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999996754932358	WITHOUT_CLASSIFICATION	3.2450676431307884E-7	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999995933955274	WITHOUT_CLASSIFICATION	4.066044726137052E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9999298822935236	WITHOUT_CLASSIFICATION	7.011770647634398E-5	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999946783885955	WITHOUT_CLASSIFICATION	5.321611404551723E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999963325083243	WITHOUT_CLASSIFICATION	3.6674916757171794E-6	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.999995599360683	WITHOUT_CLASSIFICATION	4.400639317008802E-6	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999980124181309	WITHOUT_CLASSIFICATION	1.9875818690377807E-6	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999991584397917	WITHOUT_CLASSIFICATION	8.415602082780047E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999990352945867	WITHOUT_CLASSIFICATION	9.647054132731788E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999990352945867	WITHOUT_CLASSIFICATION	9.647054132731788E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999993482612863	WITHOUT_CLASSIFICATION	6.517387135909814E-7	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999994196015694	WITHOUT_CLASSIFICATION	5.803984306588273E-7	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999967606104964	WITHOUT_CLASSIFICATION	3.239389503713425E-6	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999966592962366	WITHOUT_CLASSIFICATION	3.3407037634633845E-6	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999983829264706	WITHOUT_CLASSIFICATION	1.6170735294044224E-6	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.999999184959133	WITHOUT_CLASSIFICATION	8.150408670605037E-7	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999997822139977	WITHOUT_CLASSIFICATION	2.1778600228026128E-7	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999977490976528	WITHOUT_CLASSIFICATION	2.2509023471282934E-6	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999999652987117	WITHOUT_CLASSIFICATION	3.47012882037853E-8	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999988509698414	WITHOUT_CLASSIFICATION	1.1490301585288796E-6	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999997320794827	WITHOUT_CLASSIFICATION	2.6792051733370176E-7	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9999978150993811	WITHOUT_CLASSIFICATION	2.1849006189629917E-6	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999960702313913	WITHOUT_CLASSIFICATION	3.9297686087045464E-6	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999962033084178	WITHOUT_CLASSIFICATION	3.7966915821524928E-6	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999992095826095	WITHOUT_CLASSIFICATION	7.904173905285442E-7	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9999917110136234	WITHOUT_CLASSIFICATION	8.28898637656967E-6	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999989202476319	WITHOUT_CLASSIFICATION	1.079752368060696E-6	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999998769943246	WITHOUT_CLASSIFICATION	1.2300567540889724E-7	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999985522797754	WITHOUT_CLASSIFICATION	1.447720224567299E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9999871743873188	WITHOUT_CLASSIFICATION	1.2825612681262717E-5	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999999751134739	WITHOUT_CLASSIFICATION	2.4886526004534757E-8	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999985329801081	WITHOUT_CLASSIFICATION	1.4670198919587527E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999721595664909	WITHOUT_CLASSIFICATION	2.7840433509091246E-5	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999995998138317	WITHOUT_CLASSIFICATION	4.001861682791898E-7	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.999999048794647	WITHOUT_CLASSIFICATION	9.512053529833811E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999985322268171	WITHOUT_CLASSIFICATION	1.4677731828927173E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.999984584609353	WITHOUT_CLASSIFICATION	1.5415390647007876E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991406580638	WITHOUT_CLASSIFICATION	8.593419360903166E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991406580638	WITHOUT_CLASSIFICATION	8.593419360903166E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991406580638	WITHOUT_CLASSIFICATION	8.593419360903166E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991406580638	WITHOUT_CLASSIFICATION	8.593419360903166E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.999973064246406	WITHOUT_CLASSIFICATION	2.693575359409799E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999988988835969	WITHOUT_CLASSIFICATION	1.101116403049955E-6	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999996489780412	WITHOUT_CLASSIFICATION	3.5102195885898E-7	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9999954617152765	WITHOUT_CLASSIFICATION	4.5382847234763595E-6	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999994358444956	WITHOUT_CLASSIFICATION	5.641555043912638E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999825309320738	WITHOUT_CLASSIFICATION	1.7469067926250045E-5	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999376905831558	WITHOUT_CLASSIFICATION	6.230941684417303E-5	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999998081483229	WITHOUT_CLASSIFICATION	1.918516771542648E-7	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999970941982644	WITHOUT_CLASSIFICATION	2.905801735671842E-6	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.999994330901223	WITHOUT_CLASSIFICATION	5.6690987769055175E-6	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999988029663379	WITHOUT_CLASSIFICATION	1.1970336620861264E-6	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999990634337691	WITHOUT_CLASSIFICATION	9.365662308574009E-7	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999404889006912	WITHOUT_CLASSIFICATION	5.951109930870866E-5	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999972897758022	WITHOUT_CLASSIFICATION	2.710224197916172E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.999992133266074	WITHOUT_CLASSIFICATION	7.866733926064176E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999991544919502	WITHOUT_CLASSIFICATION	8.455080497507903E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999983788350387	WITHOUT_CLASSIFICATION	1.6211649612364925E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999983788350387	WITHOUT_CLASSIFICATION	1.6211649612364925E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999981956401274	WITHOUT_CLASSIFICATION	1.8043598726488014E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999981956401274	WITHOUT_CLASSIFICATION	1.8043598726488014E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999965826051336	WITHOUT_CLASSIFICATION	3.417394866495989E-6	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999781348560087	WITHOUT_CLASSIFICATION	2.186514399130635E-5	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999966617524118	WITHOUT_CLASSIFICATION	3.338247588138281E-6	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999999568813085	WITHOUT_CLASSIFICATION	4.311869143885727E-8	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999864207628418	WITHOUT_CLASSIFICATION	1.357923715830441E-5	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999091726431288	WITHOUT_CLASSIFICATION	9.082735687121082E-5	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999994263204561	WITHOUT_CLASSIFICATION	5.736795438368055E-7	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999990888788234	WITHOUT_CLASSIFICATION	9.11121176577619E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999983813285827	WITHOUT_CLASSIFICATION	1.6186714172969963E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999983813285827	WITHOUT_CLASSIFICATION	1.6186714172969963E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999977813717291	WITHOUT_CLASSIFICATION	2.21862827092185E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999977813717291	WITHOUT_CLASSIFICATION	2.21862827092185E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.999999743209794	WITHOUT_CLASSIFICATION	2.5679020604043404E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999958075238339	WITHOUT_CLASSIFICATION	4.192476166160892E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999964987794109	WITHOUT_CLASSIFICATION	3.501220589037588E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999945930033186	WITHOUT_CLASSIFICATION	5.406996681428335E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999933096344498	WITHOUT_CLASSIFICATION	6.690365550298498E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999933096344498	WITHOUT_CLASSIFICATION	6.690365550298498E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999972527489583	WITHOUT_CLASSIFICATION	2.7472510415884847E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999972527489583	WITHOUT_CLASSIFICATION	2.7472510415884847E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999957573700419	WITHOUT_CLASSIFICATION	4.242629958156056E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999957573700419	WITHOUT_CLASSIFICATION	4.242629958156056E-6	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999204346485445	WITHOUT_CLASSIFICATION	7.956535145548856E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.99999406141593	WITHOUT_CLASSIFICATION	5.938584070032388E-6	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999888258233435	WITHOUT_CLASSIFICATION	1.1174176656426443E-5	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999979345326477	WITHOUT_CLASSIFICATION	2.065467352291052E-6	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999997377717719	WITHOUT_CLASSIFICATION	2.6222822809126035E-7	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999965024271278	WITHOUT_CLASSIFICATION	3.4975728722917372E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999992426228244	WITHOUT_CLASSIFICATION	7.57377175608073E-7	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.999999960075566	WITHOUT_CLASSIFICATION	3.992443404859081E-8	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999941683300199	WITHOUT_CLASSIFICATION	5.831669980139588E-6	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999998244975077	WITHOUT_CLASSIFICATION	1.7550249238163174E-7	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999996823865364	WITHOUT_CLASSIFICATION	3.1761346355461347E-7	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999985090555488	WITHOUT_CLASSIFICATION	1.490944451290955E-6	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999987769717164	WITHOUT_CLASSIFICATION	1.2230282835964753E-6	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999987365622759	WITHOUT_CLASSIFICATION	1.2634377240588306E-6	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999999424671182	WITHOUT_CLASSIFICATION	5.7532881716914686E-8	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999945994659238	WITHOUT_CLASSIFICATION	5.400534076203423E-6	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999995647371701	WITHOUT_CLASSIFICATION	4.352628298371605E-7	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999988048453949	WITHOUT_CLASSIFICATION	1.195154605080867E-6	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999567147695	WITHOUT_CLASSIFICATION	4.3285230547271535E-8	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999916784671068	WITHOUT_CLASSIFICATION	8.321532893102748E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999999142966354	WITHOUT_CLASSIFICATION	8.570336460753872E-8	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999754835652743	WITHOUT_CLASSIFICATION	2.4516434725648854E-5	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999976375539537	WITHOUT_CLASSIFICATION	2.3624460463752144E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999998816464714	WITHOUT_CLASSIFICATION	1.183535287246613E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999987466627485	WITHOUT_CLASSIFICATION	1.2533372515053734E-6	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999999770001495	WITHOUT_CLASSIFICATION	2.299985050160209E-8	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9999998989201341	WITHOUT_CLASSIFICATION	1.010798659596301E-7	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999995662002001	WITHOUT_CLASSIFICATION	4.337997998623964E-7	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.999998488182762	WITHOUT_CLASSIFICATION	1.5118172379727147E-6	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9999993170005772	WITHOUT_CLASSIFICATION	6.829994228486865E-7	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999982069337346	WITHOUT_CLASSIFICATION	1.793066265297722E-6	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999878650182267	WITHOUT_CLASSIFICATION	1.2134981773282547E-5	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999852077859174	WITHOUT_CLASSIFICATION	1.4792214082762714E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.999999709941014	WITHOUT_CLASSIFICATION	2.9005898605128326E-7	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999941962350667	WITHOUT_CLASSIFICATION	5.803764933244752E-6	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999983713373802	WITHOUT_CLASSIFICATION	1.6286626198060628E-6	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999999041708524	WITHOUT_CLASSIFICATION	9.582914761726837E-8	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999998887339531	WITHOUT_CLASSIFICATION	1.1126604700077818E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999999057332567	WITHOUT_CLASSIFICATION	9.426674325577992E-8	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999993401726385	WITHOUT_CLASSIFICATION	6.598273616524584E-7	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999914321565616	WITHOUT_CLASSIFICATION	8.567843438444828E-6	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999999891359458	WITHOUT_CLASSIFICATION	1.0864054165359843E-8	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.999999581533177	WITHOUT_CLASSIFICATION	4.184668229782867E-7	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999945962143808	WITHOUT_CLASSIFICATION	5.403785619166579E-6	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999992131386065	WITHOUT_CLASSIFICATION	7.868613933957641E-7	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999982026495758	WITHOUT_CLASSIFICATION	1.797350424199583E-6	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9999528994836301	WITHOUT_CLASSIFICATION	4.710051637003392E-5	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999791892777066	WITHOUT_CLASSIFICATION	2.0810722293473258E-5	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999995370709408	WITHOUT_CLASSIFICATION	4.629290591870542E-7	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999972721043461	WITHOUT_CLASSIFICATION	2.7278956538660746E-6	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999921967508194	WITHOUT_CLASSIFICATION	7.803249180486767E-6	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999926404072916	WITHOUT_CLASSIFICATION	7.35959270832704E-6	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9999507406753645	WITHOUT_CLASSIFICATION	4.925932463553044E-5	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9999653267553974	WITHOUT_CLASSIFICATION	3.467324460266787E-5	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9999798117029368	WITHOUT_CLASSIFICATION	2.0188297063173333E-5	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999991729798973	WITHOUT_CLASSIFICATION	8.27020102707462E-7	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.99999906947052	WITHOUT_CLASSIFICATION	9.305294800786888E-7	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999994281989507	WITHOUT_CLASSIFICATION	5.718010493121053E-7	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999992958232907	WITHOUT_CLASSIFICATION	7.041767092763948E-7	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999993536467469	WITHOUT_CLASSIFICATION	6.463532530971419E-7	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.999999179243942	WITHOUT_CLASSIFICATION	8.207560579455112E-7	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999994782984721	WITHOUT_CLASSIFICATION	5.217015278533442E-7	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999991474131007	WITHOUT_CLASSIFICATION	8.525868993343771E-7	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999978428412954	WITHOUT_CLASSIFICATION	2.1571587045267444E-6	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.999999838155326	WITHOUT_CLASSIFICATION	1.618446739074124E-7	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.99999973297663	WITHOUT_CLASSIFICATION	2.670233700064624E-7	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999996183689611	WITHOUT_CLASSIFICATION	3.816310388788269E-7	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999999079668206	WITHOUT_CLASSIFICATION	9.203317938475985E-8	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999992386017993	WITHOUT_CLASSIFICATION	7.61398200676893E-7	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999992216056535	WITHOUT_CLASSIFICATION	7.7839434660277E-7	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999975145632962	WITHOUT_CLASSIFICATION	2.485436703823031E-6	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999555739738	WITHOUT_CLASSIFICATION	4.4426026265875845E-8	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999932962190506	WITHOUT_CLASSIFICATION	6.703780949415183E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.999928465949849	WITHOUT_CLASSIFICATION	7.153405015097862E-5	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9998155178563711	WITHOUT_CLASSIFICATION	1.844821436288629E-4	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999869102479085	WITHOUT_CLASSIFICATION	1.3089752091432165E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999985991480452	WITHOUT_CLASSIFICATION	1.4008519546943466E-6	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999980167626611	WITHOUT_CLASSIFICATION	1.9832373389851663E-6	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9998692028873252	WITHOUT_CLASSIFICATION	1.3079711267483264E-4	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999984165011502	WITHOUT_CLASSIFICATION	1.5834988498407652E-6	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999806299499117	WITHOUT_CLASSIFICATION	1.937005008835439E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999504160161049	WITHOUT_CLASSIFICATION	4.9583983895017755E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.999995503978777	WITHOUT_CLASSIFICATION	4.496021222936424E-6	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999562791413269	WITHOUT_CLASSIFICATION	4.372085867304522E-5	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9997702982739108	WITHOUT_CLASSIFICATION	2.297017260891079E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.999998304848368	WITHOUT_CLASSIFICATION	1.6951516319918202E-6	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.999998460041463	WITHOUT_CLASSIFICATION	1.5399585370471487E-6	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9998554911485237	WITHOUT_CLASSIFICATION	1.4450885147633056E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999841505087802	WITHOUT_CLASSIFICATION	1.5849491219714702E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999897353667956	WITHOUT_CLASSIFICATION	1.026463320436703E-5	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999952684554664	WITHOUT_CLASSIFICATION	4.731544533614998E-6	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999922111321691	WITHOUT_CLASSIFICATION	7.788867830977935E-6	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999611846351858	WITHOUT_CLASSIFICATION	3.8815364814251765E-5	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9998795185293283	WITHOUT_CLASSIFICATION	1.2048147067166127E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999980496942172	WITHOUT_CLASSIFICATION	1.9503057827935744E-6	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999952039895493	WITHOUT_CLASSIFICATION	4.796010450610089E-6	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999974763130386	WITHOUT_CLASSIFICATION	2.523686961443573E-6	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999941412824394	WITHOUT_CLASSIFICATION	5.858717560602348E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.999997543466729	WITHOUT_CLASSIFICATION	2.456533271042926E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9998762801301689	WITHOUT_CLASSIFICATION	1.2371986983102546E-4	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.999990687102774	WITHOUT_CLASSIFICATION	9.312897226169798E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.999990687102774	WITHOUT_CLASSIFICATION	9.312897226169798E-6	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999982214642327	WITHOUT_CLASSIFICATION	1.7785357673570386E-6	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999938012687839	WITHOUT_CLASSIFICATION	6.198731216056245E-6	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.999998155633166	WITHOUT_CLASSIFICATION	1.8443668340934233E-6	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999994790880933	WITHOUT_CLASSIFICATION	5.209119066561201E-7	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999970951983402	WITHOUT_CLASSIFICATION	2.9048016597687886E-6	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999991939582786	WITHOUT_CLASSIFICATION	8.06041721238574E-7	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999992060098452	WITHOUT_CLASSIFICATION	7.939901547863541E-7	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999988793321063	WITHOUT_CLASSIFICATION	1.1206678936230768E-6	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999996231719331	WITHOUT_CLASSIFICATION	3.7682806681755693E-7	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999993637099579	WITHOUT_CLASSIFICATION	6.362900419990636E-7	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999894625888228	WITHOUT_CLASSIFICATION	1.0537411177132857E-5	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999559939536978	WITHOUT_CLASSIFICATION	4.400604630224062E-5	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999921960446874	WITHOUT_CLASSIFICATION	7.80395531273542E-6	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999980919991954	WITHOUT_CLASSIFICATION	1.90800080463467E-6	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9998788405817866	WITHOUT_CLASSIFICATION	1.2115941821345327E-4	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999978493386333	WITHOUT_CLASSIFICATION	2.150661366631765E-6	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999977401211234	WITHOUT_CLASSIFICATION	2.2598788766593993E-6	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999874781224175	WITHOUT_CLASSIFICATION	1.2521877582519488E-5	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999989778248252	WITHOUT_CLASSIFICATION	1.0221751748287954E-6	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999976114929843	WITHOUT_CLASSIFICATION	2.3885070158497826E-6	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999993190253219	WITHOUT_CLASSIFICATION	6.809746781340047E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999735211398078	WITHOUT_CLASSIFICATION	2.6478860192271087E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999988728218623	WITHOUT_CLASSIFICATION	1.1271781377364295E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999988949002842	WITHOUT_CLASSIFICATION	1.105099715903651E-6	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999855447146738	WITHOUT_CLASSIFICATION	1.4455285326207248E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999964668599088	WITHOUT_CLASSIFICATION	3.533140091096883E-6	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.999985330074367	WITHOUT_CLASSIFICATION	1.4669925633060534E-5	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999957175256182	WITHOUT_CLASSIFICATION	4.282474381830643E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999964169011492	WITHOUT_CLASSIFICATION	3.5830988508991732E-6	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999065348060582	WITHOUT_CLASSIFICATION	9.346519394181106E-5	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999992017499922	WITHOUT_CLASSIFICATION	7.982500078055362E-7	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.999986997806514	WITHOUT_CLASSIFICATION	1.3002193485936068E-5	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999617074749874	WITHOUT_CLASSIFICATION	3.829252501264117E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999758759333847	WITHOUT_CLASSIFICATION	2.4124066615321777E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999933562077066	WITHOUT_CLASSIFICATION	6.6437922934035745E-6	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999729776342948	WITHOUT_CLASSIFICATION	2.702236570517707E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999743778970818	WITHOUT_CLASSIFICATION	2.5622102918178865E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999964169011492	WITHOUT_CLASSIFICATION	3.5830988508991732E-6	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999973185145119	WITHOUT_CLASSIFICATION	2.6814854880498173E-6	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999999260233352	WITHOUT_CLASSIFICATION	7.397666470888174E-8	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999950749394233	WITHOUT_CLASSIFICATION	4.925060576761785E-6	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9999998088404247	WITHOUT_CLASSIFICATION	1.9115957523074013E-7	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999965854311529	WITHOUT_CLASSIFICATION	3.4145688471570175E-6	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999785523792967	WITHOUT_CLASSIFICATION	2.1447620703345903E-5	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999995283152424	WITHOUT_CLASSIFICATION	4.71684757613153E-7	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9998433070701667	WITHOUT_CLASSIFICATION	1.5669292983341648E-4	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999886452275967	WITHOUT_CLASSIFICATION	1.1354772403293779E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999955349233804	WITHOUT_CLASSIFICATION	4.465076619543098E-6	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999890492486804	WITHOUT_CLASSIFICATION	1.0950751319631201E-5	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999765799182323	WITHOUT_CLASSIFICATION	2.3420081767719405E-5	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999952826699344	WITHOUT_CLASSIFICATION	4.717330065504429E-6	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9998194870808755	WITHOUT_CLASSIFICATION	1.8051291912456446E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999780661825249	WITHOUT_CLASSIFICATION	2.1933817475063707E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9990965848110389	WITHOUT_CLASSIFICATION	9.034151889610353E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9990965848110389	WITHOUT_CLASSIFICATION	9.034151889610353E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9999988762859294	WITHOUT_CLASSIFICATION	1.1237140705610538E-6	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9999976344454623	WITHOUT_CLASSIFICATION	2.3655545377728515E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999989430804654	WITHOUT_CLASSIFICATION	1.0569195345906004E-6	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9999968532097864	WITHOUT_CLASSIFICATION	3.1467902135629873E-6	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999987261222862	WITHOUT_CLASSIFICATION	1.2738777137446908E-6	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999971504932137	WITHOUT_CLASSIFICATION	2.8495067862593507E-6	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999997914057127	WITHOUT_CLASSIFICATION	2.0859428724558998E-7	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999856347454463	WITHOUT_CLASSIFICATION	1.4365254553680408E-5	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999992267778423	WITHOUT_CLASSIFICATION	7.732221578101985E-7	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999998261776247	WITHOUT_CLASSIFICATION	1.7382237528593253E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999986672105509	WITHOUT_CLASSIFICATION	1.3327894491675956E-6	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.997953153888596	WITHOUT_CLASSIFICATION	0.002046846111404009	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999939620108966	WITHOUT_CLASSIFICATION	6.037989103437354E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999921971767505	WITHOUT_CLASSIFICATION	7.80282324952992E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999921971767505	WITHOUT_CLASSIFICATION	7.80282324952992E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999989430804654	WITHOUT_CLASSIFICATION	1.0569195345906004E-6	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999986672105509	WITHOUT_CLASSIFICATION	1.3327894491675956E-6	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999985879259522	WITHOUT_CLASSIFICATION	1.4120740477081176E-6	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9999973614974482	WITHOUT_CLASSIFICATION	2.6385025517054263E-6	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999949699201189	WITHOUT_CLASSIFICATION	5.030079881096673E-6	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9999997430729295	WITHOUT_CLASSIFICATION	2.5692707054287826E-7	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999992426745302	WITHOUT_CLASSIFICATION	7.573254698562383E-7	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999951858939199	WITHOUT_CLASSIFICATION	4.814106080153561E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999992476250257	WITHOUT_CLASSIFICATION	7.523749743111251E-7	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999898721011962	WITHOUT_CLASSIFICATION	1.0127898803809411E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999997551591069	WITHOUT_CLASSIFICATION	2.4484089313061134E-7	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999970691347235	WITHOUT_CLASSIFICATION	2.9308652764442324E-6	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9997583803830714	WITHOUT_CLASSIFICATION	2.4161961692853632E-4	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9999381099765676	WITHOUT_CLASSIFICATION	6.18900234323124E-5	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.999999427066799	WITHOUT_CLASSIFICATION	5.729332009663161E-7	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999965640558118	WITHOUT_CLASSIFICATION	3.435944188079253E-6	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999979841132657	WITHOUT_CLASSIFICATION	2.0158867342589502E-6	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999961723077339	WITHOUT_CLASSIFICATION	3.827692266176251E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999984930567575	WITHOUT_CLASSIFICATION	1.5069432425723966E-6	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999898748097718	WITHOUT_CLASSIFICATION	1.012519022821683E-5	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999863366197048	WITHOUT_CLASSIFICATION	1.3663380295293103E-5	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.999998728678606	WITHOUT_CLASSIFICATION	1.2713213940819444E-6	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9999998283287781	WITHOUT_CLASSIFICATION	1.7167122190113618E-7	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999950669313086	WITHOUT_CLASSIFICATION	4.933068691428682E-6	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9999411376387343	WITHOUT_CLASSIFICATION	5.886236126563486E-5	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999576877938338	WITHOUT_CLASSIFICATION	4.231220616633666E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999972074301495	WITHOUT_CLASSIFICATION	2.792569850559181E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999952608429971	WITHOUT_CLASSIFICATION	4.739157002938963E-6	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999946531639098	WITHOUT_CLASSIFICATION	5.346836090225956E-6	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999552366384767	WITHOUT_CLASSIFICATION	4.47633615232959E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999940163908747	WITHOUT_CLASSIFICATION	5.983609125344349E-6	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.999999616122819	WITHOUT_CLASSIFICATION	3.8387718112133383E-7	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9999992835051787	WITHOUT_CLASSIFICATION	7.164948211893599E-7	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999791453448363	WITHOUT_CLASSIFICATION	2.0854655163748117E-5	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999997465005327	WITHOUT_CLASSIFICATION	2.5349946734093607E-7	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999990187853359	WITHOUT_CLASSIFICATION	9.812146640641385E-7	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999997429947453	WITHOUT_CLASSIFICATION	2.5700525482886746E-7	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999840570682358	WITHOUT_CLASSIFICATION	1.5942931764292683E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999951592821693	WITHOUT_CLASSIFICATION	4.840717830699309E-6	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999979320890294	WITHOUT_CLASSIFICATION	2.067910970635241E-6	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999942174281551	WITHOUT_CLASSIFICATION	5.782571844961276E-6	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.999997255925646	WITHOUT_CLASSIFICATION	2.7440743539947383E-6	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999963620964302	WITHOUT_CLASSIFICATION	3.637903569736317E-6	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999965719071038	WITHOUT_CLASSIFICATION	3.428092896263404E-6	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999735482680342	WITHOUT_CLASSIFICATION	2.6451731965824454E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999318910575435	WITHOUT_CLASSIFICATION	6.810894245639108E-5	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9997380917865828	WITHOUT_CLASSIFICATION	2.619082134171974E-4	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.999975552919313	WITHOUT_CLASSIFICATION	2.444708068713694E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9996414071767102	WITHOUT_CLASSIFICATION	3.585928232898233E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999992813974358	WITHOUT_CLASSIFICATION	7.186025643067501E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999817109684924	WITHOUT_CLASSIFICATION	1.8289031507636012E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958194835229	WITHOUT_CLASSIFICATION	4.1805164769978625E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999927060992504	WITHOUT_CLASSIFICATION	7.293900749541065E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999886782848963	WITHOUT_CLASSIFICATION	1.1321715103681669E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999885716497048	WITHOUT_CLASSIFICATION	1.1428350295214074E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984143365872	WITHOUT_CLASSIFICATION	1.585663412839222E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999980145816691	WITHOUT_CLASSIFICATION	1.9854183308837623E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999908333284706	WITHOUT_CLASSIFICATION	9.166671529442869E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999925731698809	WITHOUT_CLASSIFICATION	7.426830119116346E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999980625393943	WITHOUT_CLASSIFICATION	1.937460605735067E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999907989002841	WITHOUT_CLASSIFICATION	9.201099715848103E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999765202719532	WITHOUT_CLASSIFICATION	2.3479728046822465E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999985674550418	WITHOUT_CLASSIFICATION	1.432544958157589E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999871006239451	WITHOUT_CLASSIFICATION	1.2899376054794205E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999962326918491	WITHOUT_CLASSIFICATION	3.767308150775861E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999994550533328	WITHOUT_CLASSIFICATION	5.449466672048463E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999976696190032	WITHOUT_CLASSIFICATION	2.3303809968401244E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.99999497308168	WITHOUT_CLASSIFICATION	5.026918319994018E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999999722244629	WITHOUT_CLASSIFICATION	2.777553708781762E-8	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9995853536679162	WITHOUT_CLASSIFICATION	4.1464633208365497E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9993617175526567	WITHOUT_CLASSIFICATION	6.382824473433628E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9997074588420118	WITHOUT_CLASSIFICATION	2.9254115798811543E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998031006715771	WITHOUT_CLASSIFICATION	1.968993284229051E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998031006715771	WITHOUT_CLASSIFICATION	1.968993284229051E-4	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.999765949327745	WITHOUT_CLASSIFICATION	2.3405067225490677E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9998366135145026	WITHOUT_CLASSIFICATION	1.633864854973762E-4	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.999992035974346	WITHOUT_CLASSIFICATION	7.964025653825119E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999907479923025	WITHOUT_CLASSIFICATION	9.25200769753086E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999907479923025	WITHOUT_CLASSIFICATION	9.25200769753086E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999907479923025	WITHOUT_CLASSIFICATION	9.25200769753086E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999921750481847	WITHOUT_CLASSIFICATION	7.824951815201586E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999996106789246	WITHOUT_CLASSIFICATION	3.8932107544755546E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999933251253962	WITHOUT_CLASSIFICATION	6.674874603824419E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999988301018807	WITHOUT_CLASSIFICATION	1.1698981193009424E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999861006923092	WITHOUT_CLASSIFICATION	1.389930769094478E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999932610289847	WITHOUT_CLASSIFICATION	6.73897101526777E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.999997726517607	WITHOUT_CLASSIFICATION	2.273482392995851E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999952608429971	WITHOUT_CLASSIFICATION	4.739157002938963E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999992386017993	WITHOUT_CLASSIFICATION	7.61398200676893E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999504160161049	WITHOUT_CLASSIFICATION	4.9583983895017755E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999992813974358	WITHOUT_CLASSIFICATION	7.186025643067501E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999817109684924	WITHOUT_CLASSIFICATION	1.8289031507636012E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958194835229	WITHOUT_CLASSIFICATION	4.1805164769978625E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999927060992504	WITHOUT_CLASSIFICATION	7.293900749541065E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999980145816691	WITHOUT_CLASSIFICATION	1.9854183308837623E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999907989002841	WITHOUT_CLASSIFICATION	9.201099715848103E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999765202719532	WITHOUT_CLASSIFICATION	2.3479728046822465E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999985674550418	WITHOUT_CLASSIFICATION	1.432544958157589E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999991668375667	WITHOUT_CLASSIFICATION	8.331624332397027E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999970377848036	WITHOUT_CLASSIFICATION	2.9622151964679703E-6	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999937181288444	WITHOUT_CLASSIFICATION	6.281871155525174E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999975719797464	WITHOUT_CLASSIFICATION	2.4280202537088344E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999690663774532	WITHOUT_CLASSIFICATION	3.093362254669518E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999886235067679	WITHOUT_CLASSIFICATION	1.1376493232120298E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999963418036356	WITHOUT_CLASSIFICATION	3.658196364423022E-6	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.999999993512515	WITHOUT_CLASSIFICATION	6.487485033502942E-9	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9994972829788	WITHOUT_CLASSIFICATION	5.027170211999194E-4	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9993176643501673	WITHOUT_CLASSIFICATION	6.823356498326956E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9999768635815582	WITHOUT_CLASSIFICATION	2.3136418441854232E-5	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999824144133309	WITHOUT_CLASSIFICATION	1.7585586669065892E-5	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999987584259444	WITHOUT_CLASSIFICATION	1.241574055505086E-6	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999961881889631	WITHOUT_CLASSIFICATION	3.811811036849179E-6	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9995132111500208	WITHOUT_CLASSIFICATION	4.86788849979114E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9995340471815798	WITHOUT_CLASSIFICATION	4.659528184201042E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9987857735693889	WITHOUT_CLASSIFICATION	0.0012142264306110645	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9992042231539345	WITHOUT_CLASSIFICATION	7.957768460655308E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9995391981264183	WITHOUT_CLASSIFICATION	4.608018735816666E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999991325357205	WITHOUT_CLASSIFICATION	8.674642793980391E-7	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999998448853574	WITHOUT_CLASSIFICATION	1.5511464251483393E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999980625393943	WITHOUT_CLASSIFICATION	1.937460605735067E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999994550533328	WITHOUT_CLASSIFICATION	5.449466672048463E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999976696190032	WITHOUT_CLASSIFICATION	2.3303809968401244E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.99999497308168	WITHOUT_CLASSIFICATION	5.026918319994018E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999970377848036	WITHOUT_CLASSIFICATION	2.9622151964679703E-6	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999937181288444	WITHOUT_CLASSIFICATION	6.281871155525174E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999975719797464	WITHOUT_CLASSIFICATION	2.4280202537088344E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999690663774532	WITHOUT_CLASSIFICATION	3.093362254669518E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999886235067679	WITHOUT_CLASSIFICATION	1.1376493232120298E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999986879104518	WITHOUT_CLASSIFICATION	1.3120895482815704E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999996586950758	WITHOUT_CLASSIFICATION	3.413049242583776E-7	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999998447509484	WITHOUT_CLASSIFICATION	1.5524905162292274E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999969280244477	WITHOUT_CLASSIFICATION	3.071975552207564E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999969280244477	WITHOUT_CLASSIFICATION	3.071975552207564E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999969280244477	WITHOUT_CLASSIFICATION	3.071975552207564E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999969280244477	WITHOUT_CLASSIFICATION	3.071975552207564E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999969280244477	WITHOUT_CLASSIFICATION	3.071975552207564E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999984387079631	WITHOUT_CLASSIFICATION	1.5612920369006087E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999987597725144	WITHOUT_CLASSIFICATION	1.2402274856358076E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999987597725144	WITHOUT_CLASSIFICATION	1.2402274856358076E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999987597725144	WITHOUT_CLASSIFICATION	1.2402274856358076E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999987597725144	WITHOUT_CLASSIFICATION	1.2402274856358076E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999987597725144	WITHOUT_CLASSIFICATION	1.2402274856358076E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999987597725144	WITHOUT_CLASSIFICATION	1.2402274856358076E-6	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999932211939233	WITHOUT_CLASSIFICATION	6.778806076618422E-6	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999933167916184	WITHOUT_CLASSIFICATION	6.683208381548976E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999753598365775	WITHOUT_CLASSIFICATION	2.464016342252179E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999989745250102	WITHOUT_CLASSIFICATION	1.0254749898916034E-6	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999994596445118	WITHOUT_CLASSIFICATION	5.403554882398037E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999980423182753	WITHOUT_CLASSIFICATION	1.9576817246456743E-6	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999998474224782	WITHOUT_CLASSIFICATION	1.525775218923861E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999983813285827	WITHOUT_CLASSIFICATION	1.6186714172969963E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999983813285827	WITHOUT_CLASSIFICATION	1.6186714172969963E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999983813285827	WITHOUT_CLASSIFICATION	1.6186714172969963E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.999973448566578	WITHOUT_CLASSIFICATION	2.6551433421939364E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999274087942341	WITHOUT_CLASSIFICATION	7.259120576595118E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999999373226102	WITHOUT_CLASSIFICATION	6.267738982584588E-8	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999950687684985	WITHOUT_CLASSIFICATION	4.931231501509747E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999950687684985	WITHOUT_CLASSIFICATION	4.931231501509747E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999853872657208	WITHOUT_CLASSIFICATION	1.4612734279027594E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999950687684985	WITHOUT_CLASSIFICATION	4.931231501509747E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999989045018819	WITHOUT_CLASSIFICATION	1.0954981181856591E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999969444276597	WITHOUT_CLASSIFICATION	3.055572340212741E-6	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999952106718689	WITHOUT_CLASSIFICATION	4.789328131043853E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999998674794907	WITHOUT_CLASSIFICATION	1.3252050930098553E-7	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999998674794907	WITHOUT_CLASSIFICATION	1.3252050930098553E-7	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999999336776679	WITHOUT_CLASSIFICATION	6.632233202628195E-8	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.999999621244806	WITHOUT_CLASSIFICATION	3.787551939611072E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999904838022879	WITHOUT_CLASSIFICATION	9.51619771203247E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999904838022879	WITHOUT_CLASSIFICATION	9.51619771203247E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999904838022879	WITHOUT_CLASSIFICATION	9.51619771203247E-6	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9999999830653263	WITHOUT_CLASSIFICATION	1.69346736897964E-8	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9967237873198034	WITHOUT_CLASSIFICATION	0.0032762126801966066	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999996959976477	WITHOUT_CLASSIFICATION	3.040023521910921E-7	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.999995359771672	WITHOUT_CLASSIFICATION	4.640228328075678E-6	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999840603581718	WITHOUT_CLASSIFICATION	1.593964182825846E-5	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999999480027963	WITHOUT_CLASSIFICATION	5.1997203756909384E-8	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999917897648689	WITHOUT_CLASSIFICATION	8.21023513117553E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999986094945185	WITHOUT_CLASSIFICATION	1.3905054815673036E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999917897648689	WITHOUT_CLASSIFICATION	8.21023513117553E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999921750481847	WITHOUT_CLASSIFICATION	7.824951815201586E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999907479923025	WITHOUT_CLASSIFICATION	9.25200769753086E-6	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999480531055	WITHOUT_CLASSIFICATION	5.194689456507188E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999999893684357	WITHOUT_CLASSIFICATION	1.0631564222965396E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999932152891701	WITHOUT_CLASSIFICATION	6.784710829957839E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999997602976564	WITHOUT_CLASSIFICATION	2.3970234360768694E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999921750481847	WITHOUT_CLASSIFICATION	7.824951815201586E-6	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999999995674859	WITHOUT_CLASSIFICATION	4.325141033194795E-9	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985681161266	WITHOUT_CLASSIFICATION	1.4318838733778375E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999991406580638	WITHOUT_CLASSIFICATION	8.593419360903166E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999999130959075	WITHOUT_CLASSIFICATION	8.690409250679954E-8	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999968872212245	WITHOUT_CLASSIFICATION	3.1127787755024577E-6	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999968872212245	WITHOUT_CLASSIFICATION	3.1127787755024577E-6	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999978568713892	WITHOUT_CLASSIFICATION	2.143128610801539E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999927050772851	WITHOUT_CLASSIFICATION	7.294922714899472E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999937246922714	WITHOUT_CLASSIFICATION	6.275307728608522E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999934061512585	WITHOUT_CLASSIFICATION	6.593848741505334E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999926878537911	WITHOUT_CLASSIFICATION	7.312146208767922E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999968586853153	WITHOUT_CLASSIFICATION	3.1413146847002292E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999976967079216	WITHOUT_CLASSIFICATION	2.303292078476933E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999918523902158	WITHOUT_CLASSIFICATION	8.147609784212618E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999748637180308	WITHOUT_CLASSIFICATION	2.5136281969254482E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999811392227073	WITHOUT_CLASSIFICATION	1.886077729280267E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999930238167325	WITHOUT_CLASSIFICATION	6.976183267417557E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999813623596255	WITHOUT_CLASSIFICATION	1.863764037445536E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999965499018502	WITHOUT_CLASSIFICATION	3.4500981498506034E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999682062833717	WITHOUT_CLASSIFICATION	3.179371662830582E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.999989132389767	WITHOUT_CLASSIFICATION	1.0867610232919424E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999991340082288	WITHOUT_CLASSIFICATION	8.659917711610205E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999984239747637	WITHOUT_CLASSIFICATION	1.5760252363651077E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999927696138221	WITHOUT_CLASSIFICATION	7.230386177838951E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999942453100464	WITHOUT_CLASSIFICATION	5.754689953574179E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999843709373022	WITHOUT_CLASSIFICATION	1.56290626977577E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999939954612644	WITHOUT_CLASSIFICATION	6.0045387355607005E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999949899516838	WITHOUT_CLASSIFICATION	5.01004831618467E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999991340082288	WITHOUT_CLASSIFICATION	8.659917711610205E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999960122087189	WITHOUT_CLASSIFICATION	3.987791281076653E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999991339478758	WITHOUT_CLASSIFICATION	8.660521241622564E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999949896025232	WITHOUT_CLASSIFICATION	5.010397476776204E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999938955625913	WITHOUT_CLASSIFICATION	6.1044374087011515E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999987868208314	WITHOUT_CLASSIFICATION	1.2131791685496328E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999965227469917	WITHOUT_CLASSIFICATION	3.4772530082417414E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999950037500587	WITHOUT_CLASSIFICATION	4.996249941267432E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999943339203387	WITHOUT_CLASSIFICATION	5.666079661259987E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999992673933376	WITHOUT_CLASSIFICATION	7.326066624044048E-7	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999995347127592	WITHOUT_CLASSIFICATION	4.6528724084875957E-7	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999995347127592	WITHOUT_CLASSIFICATION	4.6528724084875957E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999939954612644	WITHOUT_CLASSIFICATION	6.0045387355607005E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999993885261649	WITHOUT_CLASSIFICATION	6.114738350543004E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.999999547467099	WITHOUT_CLASSIFICATION	4.525329009830366E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999990420946596	WITHOUT_CLASSIFICATION	9.579053403476398E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999981692466814	WITHOUT_CLASSIFICATION	1.8307533185691102E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999905515321695	WITHOUT_CLASSIFICATION	9.448467830462805E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999961795617254	WITHOUT_CLASSIFICATION	3.8204382745529495E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999166078445043	WITHOUT_CLASSIFICATION	8.339215549568588E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999924017619805	WITHOUT_CLASSIFICATION	7.598238019524614E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999805648807827	WITHOUT_CLASSIFICATION	1.9435119217363926E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.999992810802395	WITHOUT_CLASSIFICATION	7.189197605094223E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999967392918706	WITHOUT_CLASSIFICATION	3.2607081294294657E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999938376658338	WITHOUT_CLASSIFICATION	6.162334166186621E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999853649938686	WITHOUT_CLASSIFICATION	1.4635006131409418E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999994008726169	WITHOUT_CLASSIFICATION	5.99127383141886E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.999997726517607	WITHOUT_CLASSIFICATION	2.273482392995851E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999994791535274	WITHOUT_CLASSIFICATION	5.208464726274121E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999987454217092	WITHOUT_CLASSIFICATION	1.2545782907898172E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999944273399438	WITHOUT_CLASSIFICATION	5.572660056210557E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.999988013096606	WITHOUT_CLASSIFICATION	1.1986903394070795E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999994791535274	WITHOUT_CLASSIFICATION	5.208464726274121E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999932246253086	WITHOUT_CLASSIFICATION	6.775374691437285E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.999997558147754	WITHOUT_CLASSIFICATION	2.4418522458751364E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999969124565485	WITHOUT_CLASSIFICATION	3.0875434515915575E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999927767305355	WITHOUT_CLASSIFICATION	7.223269464507758E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999919250539306	WITHOUT_CLASSIFICATION	8.07494606934657E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.999872074566865	WITHOUT_CLASSIFICATION	1.279254331349469E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.999872074566865	WITHOUT_CLASSIFICATION	1.279254331349469E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.999872074566865	WITHOUT_CLASSIFICATION	1.279254331349469E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.999872074566865	WITHOUT_CLASSIFICATION	1.279254331349469E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.999872074566865	WITHOUT_CLASSIFICATION	1.279254331349469E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.999872074566865	WITHOUT_CLASSIFICATION	1.279254331349469E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999709800777488	WITHOUT_CLASSIFICATION	2.901992225129189E-5	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999930152860307	WITHOUT_CLASSIFICATION	6.984713969358888E-6	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999927711923396	WITHOUT_CLASSIFICATION	7.228807660415516E-6	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999958584152532	WITHOUT_CLASSIFICATION	4.1415847468901594E-6	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999992501956083	WITHOUT_CLASSIFICATION	7.498043916226277E-7	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.999997846172122	WITHOUT_CLASSIFICATION	2.153827878111872E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999991509856693	WITHOUT_CLASSIFICATION	8.490143306500711E-7	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999931990961952	WITHOUT_CLASSIFICATION	6.800903804798816E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9989390135530241	WITHOUT_CLASSIFICATION	0.0010609864469759778	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999909929919836	WITHOUT_CLASSIFICATION	9.007008016380406E-6	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999999859687811	WITHOUT_CLASSIFICATION	1.4031218828751513E-8	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999999236050464	WITHOUT_CLASSIFICATION	7.639495358241038E-8	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999997287452089	WITHOUT_CLASSIFICATION	2.7125479113430365E-7	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999882853841923	WITHOUT_CLASSIFICATION	1.1714615807762867E-5	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.999999769711939	WITHOUT_CLASSIFICATION	2.3028806090926894E-7	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999981031480063	WITHOUT_CLASSIFICATION	1.896851993809621E-6	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999988524827518	WITHOUT_CLASSIFICATION	1.147517248252628E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999811619922	WITHOUT_CLASSIFICATION	1.8838007728072853E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999811619922	WITHOUT_CLASSIFICATION	1.8838007728072853E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999811619922	WITHOUT_CLASSIFICATION	1.8838007728072853E-8	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999721595664909	WITHOUT_CLASSIFICATION	2.7840433509091246E-5	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999845323088	WITHOUT_CLASSIFICATION	1.54676911564575E-8	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999962660149966	WITHOUT_CLASSIFICATION	3.7339850033605418E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999996106789246	WITHOUT_CLASSIFICATION	3.8932107544755546E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999996106789246	WITHOUT_CLASSIFICATION	3.8932107544755546E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999996106789246	WITHOUT_CLASSIFICATION	3.8932107544755546E-7	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9991803159404178	WITHOUT_CLASSIFICATION	8.196840595821863E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999933251253962	WITHOUT_CLASSIFICATION	6.674874603824419E-6	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999998158953278	WITHOUT_CLASSIFICATION	1.8410467216566026E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999988301018807	WITHOUT_CLASSIFICATION	1.1698981193009424E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999988301018807	WITHOUT_CLASSIFICATION	1.1698981193009424E-6	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999987466627485	WITHOUT_CLASSIFICATION	1.2533372515053734E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999861006923092	WITHOUT_CLASSIFICATION	1.389930769094478E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999861006923092	WITHOUT_CLASSIFICATION	1.389930769094478E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999861006923092	WITHOUT_CLASSIFICATION	1.389930769094478E-5	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999998407080036	WITHOUT_CLASSIFICATION	1.5929199630404463E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999977038889483	WITHOUT_CLASSIFICATION	2.2961110517567844E-6	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999997226717817	WITHOUT_CLASSIFICATION	2.773282182158069E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999917897648689	WITHOUT_CLASSIFICATION	8.21023513117553E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999917897648689	WITHOUT_CLASSIFICATION	8.21023513117553E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999921022025172	WITHOUT_CLASSIFICATION	7.897797482848981E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999932610289847	WITHOUT_CLASSIFICATION	6.73897101526777E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999932610289847	WITHOUT_CLASSIFICATION	6.73897101526777E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999852077859174	WITHOUT_CLASSIFICATION	1.4792214082762714E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999992813974358	WITHOUT_CLASSIFICATION	7.186025643067501E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999992813974358	WITHOUT_CLASSIFICATION	7.186025643067501E-7	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9999957720962154	WITHOUT_CLASSIFICATION	4.2279037845485444E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999817109684924	WITHOUT_CLASSIFICATION	1.8289031507636012E-5	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.999999853257433	WITHOUT_CLASSIFICATION	1.4674256700070264E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999958194835229	WITHOUT_CLASSIFICATION	4.1805164769978625E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999997548669917	WITHOUT_CLASSIFICATION	2.4513300837359725E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999917897648689	WITHOUT_CLASSIFICATION	8.21023513117553E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999907479923025	WITHOUT_CLASSIFICATION	9.25200769753086E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984143365872	WITHOUT_CLASSIFICATION	1.585663412839222E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984143365872	WITHOUT_CLASSIFICATION	1.585663412839222E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984143365872	WITHOUT_CLASSIFICATION	1.585663412839222E-6	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999946563991472	WITHOUT_CLASSIFICATION	5.343600852821902E-6	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999204042338	WITHOUT_CLASSIFICATION	7.95957661844615E-8	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999962817321362	WITHOUT_CLASSIFICATION	3.718267863816929E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999884260907778	WITHOUT_CLASSIFICATION	1.1573909222263899E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999884260907778	WITHOUT_CLASSIFICATION	1.1573909222263899E-5	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999981048904734	WITHOUT_CLASSIFICATION	1.895109526542997E-6	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999781454010654	WITHOUT_CLASSIFICATION	2.1854598934510943E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999926107503665	WITHOUT_CLASSIFICATION	7.389249633621631E-6	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999993860112553	WITHOUT_CLASSIFICATION	6.139887446169773E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.999997543466729	WITHOUT_CLASSIFICATION	2.456533271042926E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.999997543466729	WITHOUT_CLASSIFICATION	2.456533271042926E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999371963692921	WITHOUT_CLASSIFICATION	6.280363070783469E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9999371963692921	WITHOUT_CLASSIFICATION	6.280363070783469E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999982214642327	WITHOUT_CLASSIFICATION	1.7785357673570386E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999985322268171	WITHOUT_CLASSIFICATION	1.4677731828927173E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999848973149461	WITHOUT_CLASSIFICATION	1.5102685053998284E-5	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999995090198863	WITHOUT_CLASSIFICATION	4.909801136528023E-7	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999991027242462	WITHOUT_CLASSIFICATION	8.972757539018238E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999788932549621	WITHOUT_CLASSIFICATION	2.110674503778961E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999788932549621	WITHOUT_CLASSIFICATION	2.110674503778961E-5	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9999939978937167	WITHOUT_CLASSIFICATION	6.002106283246149E-6	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999320017573	WITHOUT_CLASSIFICATION	6.799824272182774E-8	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999994656783476	WITHOUT_CLASSIFICATION	5.343216523315907E-7	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999764189096607	WITHOUT_CLASSIFICATION	2.3581090339204125E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999964169011492	WITHOUT_CLASSIFICATION	3.5830988508991732E-6	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999997950540163	WITHOUT_CLASSIFICATION	2.0494598363689332E-7	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9999850006917427	WITHOUT_CLASSIFICATION	1.4999308257343825E-5	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999999284049552	WITHOUT_CLASSIFICATION	7.159504473273422E-8	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9999988762859294	WITHOUT_CLASSIFICATION	1.1237140705610538E-6	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999976377766884	WITHOUT_CLASSIFICATION	2.3622233116341456E-6	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999999020106145	WITHOUT_CLASSIFICATION	9.79893855522743E-8	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999980219559	WITHOUT_CLASSIFICATION	1.97804404971254E-9	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.999999744019374	WITHOUT_CLASSIFICATION	2.5598062592961737E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999984637265145	WITHOUT_CLASSIFICATION	1.536273485498462E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999984637265145	WITHOUT_CLASSIFICATION	1.536273485498462E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999984637265145	WITHOUT_CLASSIFICATION	1.536273485498462E-5	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999914119003366	WITHOUT_CLASSIFICATION	8.588099663420737E-6	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999953647565989	WITHOUT_CLASSIFICATION	4.6352434011713415E-6	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999979186934514	WITHOUT_CLASSIFICATION	2.081306548472531E-6	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999985879259522	WITHOUT_CLASSIFICATION	1.4120740477081176E-6	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.999980866349657	WITHOUT_CLASSIFICATION	1.9133650343016525E-5	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999921271759894	WITHOUT_CLASSIFICATION	7.872824010611404E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999921271759894	WITHOUT_CLASSIFICATION	7.872824010611404E-6	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999993932552429	WITHOUT_CLASSIFICATION	6.067447570954825E-7	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9999987012131413	WITHOUT_CLASSIFICATION	1.2987868587460276E-6	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999602722946938	WITHOUT_CLASSIFICATION	3.972770530627797E-5	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999989551145665	WITHOUT_CLASSIFICATION	1.0448854336118082E-6	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999991498029664	WITHOUT_CLASSIFICATION	8.501970335407331E-7	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9998307928937735	WITHOUT_CLASSIFICATION	1.692071062264235E-4	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999998547251135	WITHOUT_CLASSIFICATION	1.4527488645369254E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999967746809916	WITHOUT_CLASSIFICATION	3.2253190083710273E-6	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999987354470046	WITHOUT_CLASSIFICATION	1.2645529954745494E-6	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999999265229446	WITHOUT_CLASSIFICATION	7.347705549024432E-8	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999614477438572	WITHOUT_CLASSIFICATION	3.8552256142747135E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999740387395037	WITHOUT_CLASSIFICATION	2.5961260496205496E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9998407614417738	WITHOUT_CLASSIFICATION	1.5923855822617486E-4	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9999953869060361	WITHOUT_CLASSIFICATION	4.613093963979303E-6	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997318948117	WITHOUT_CLASSIFICATION	2.681051882604237E-7	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999850739675182	WITHOUT_CLASSIFICATION	1.4926032481796515E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999930487210897	WITHOUT_CLASSIFICATION	6.951278910166847E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999925640593489	WITHOUT_CLASSIFICATION	7.435940651135938E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999988101266712	WITHOUT_CLASSIFICATION	1.1898733288020759E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999988101266712	WITHOUT_CLASSIFICATION	1.1898733288020759E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999988101266712	WITHOUT_CLASSIFICATION	1.1898733288020759E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999988101266712	WITHOUT_CLASSIFICATION	1.1898733288020759E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916954123356	WITHOUT_CLASSIFICATION	8.304587664452503E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999988241238453	WITHOUT_CLASSIFICATION	1.1758761547266369E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999988241238453	WITHOUT_CLASSIFICATION	1.1758761547266369E-6	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999999035194591	WITHOUT_CLASSIFICATION	9.648054089841697E-7	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999974533129528	WITHOUT_CLASSIFICATION	2.5466870471825185E-6	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999976737396057	WITHOUT_CLASSIFICATION	2.3262603943916873E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999987823261176	WITHOUT_CLASSIFICATION	1.217673882367903E-6	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999888764161696	WITHOUT_CLASSIFICATION	1.1123583830448969E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999947269459855	WITHOUT_CLASSIFICATION	5.273054014578966E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999677669178971	WITHOUT_CLASSIFICATION	3.223308210292828E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999921971767505	WITHOUT_CLASSIFICATION	7.80282324952992E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999921971767505	WITHOUT_CLASSIFICATION	7.80282324952992E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999921971767505	WITHOUT_CLASSIFICATION	7.80282324952992E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.999997189401853	WITHOUT_CLASSIFICATION	2.8105981469472095E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999997831344821	WITHOUT_CLASSIFICATION	2.1686551789884796E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9999995035500883	WITHOUT_CLASSIFICATION	4.964499116582396E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999988789235772	WITHOUT_CLASSIFICATION	1.1210764227848198E-6	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999988789235772	WITHOUT_CLASSIFICATION	1.1210764227848198E-6	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999975003650956	WITHOUT_CLASSIFICATION	2.4996349043571728E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999980083572891	WITHOUT_CLASSIFICATION	1.9916427108766184E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999982859244381	WITHOUT_CLASSIFICATION	1.7140755619436131E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999992847117607	WITHOUT_CLASSIFICATION	7.15288239380613E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9994256208717217	WITHOUT_CLASSIFICATION	5.743791282781832E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999993862513758	WITHOUT_CLASSIFICATION	6.13748624199317E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.999997405248418	WITHOUT_CLASSIFICATION	2.5947515820432076E-6	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999997456303038	WITHOUT_CLASSIFICATION	2.5436969617495733E-7	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999997280772667	WITHOUT_CLASSIFICATION	2.719227332975422E-7	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999998460263181	WITHOUT_CLASSIFICATION	1.539736819482303E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999971415805754	WITHOUT_CLASSIFICATION	2.858419424621439E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997983277602107	WITHOUT_CLASSIFICATION	2.0167223978927819E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997983277602107	WITHOUT_CLASSIFICATION	2.0167223978927819E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999809509815426	WITHOUT_CLASSIFICATION	1.9049018457464666E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997175712256515	WITHOUT_CLASSIFICATION	2.824287743485229E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997175712256515	WITHOUT_CLASSIFICATION	2.824287743485229E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999718325597354	WITHOUT_CLASSIFICATION	2.8167440264583447E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999922090875949	WITHOUT_CLASSIFICATION	7.790912405059154E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999922090875949	WITHOUT_CLASSIFICATION	7.790912405059154E-6	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999774132032719	WITHOUT_CLASSIFICATION	2.2586796728006276E-5	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999992172480054	WITHOUT_CLASSIFICATION	7.827519945822748E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.999997572498163	WITHOUT_CLASSIFICATION	2.427501836911034E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999908333284706	WITHOUT_CLASSIFICATION	9.166671529442869E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999908333284706	WITHOUT_CLASSIFICATION	9.166671529442869E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999866492052194	WITHOUT_CLASSIFICATION	1.335079478067003E-5	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999999705616056	WITHOUT_CLASSIFICATION	2.9438394412932885E-8	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9999994715406147	WITHOUT_CLASSIFICATION	5.284593852516288E-7	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9991370437046732	WITHOUT_CLASSIFICATION	8.629562953268156E-4	DEFECT
// EATM must fix isSet bits.	DEFECT	0.999888072005756	WITHOUT_CLASSIFICATION	1.1192799424404549E-4	DEFECT
// EATM must fix isSet bits.	DEFECT	0.999888072005756	WITHOUT_CLASSIFICATION	1.1192799424404549E-4	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9999883696179588	WITHOUT_CLASSIFICATION	1.1630382041195412E-5	DEFECT
// is this an error???	DEFECT	0.9999843460702483	WITHOUT_CLASSIFICATION	1.5653929751752158E-5	DEFECT
// is this an error???	DEFECT	0.9999843460702483	WITHOUT_CLASSIFICATION	1.5653929751752158E-5	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9999864760305628	WITHOUT_CLASSIFICATION	1.3523969437186254E-5	DEFECT
