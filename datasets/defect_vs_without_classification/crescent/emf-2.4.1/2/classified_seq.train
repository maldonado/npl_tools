WITHOUT_CLASSIFICATION	// TBLRC // 01011 - bottom, right and center
WITHOUT_CLASSIFICATION	// TBLRC // 01100
WITHOUT_CLASSIFICATION	// TBLRC // 01101 - bottom, left and center
WITHOUT_CLASSIFICATION	// TBLRC // 01110 - bottom. left and right
WITHOUT_CLASSIFICATION	// TBLRC // 01111
WITHOUT_CLASSIFICATION	// TBLRC // 10000 - top item only
WITHOUT_CLASSIFICATION	// TBLRC // 10001 - top and center only
WITHOUT_CLASSIFICATION	// TBLRC // 10010 - right and top only
WITHOUT_CLASSIFICATION	// TBLRC // 10011 - top, right and center
WITHOUT_CLASSIFICATION	// TBLRC // 10100 - top and left only
WITHOUT_CLASSIFICATION	// range
WITHOUT_CLASSIFICATION	// units
WITHOUT_CLASSIFICATION	// interval
WITHOUT_CLASSIFICATION	// dial outline paint
WITHOUT_CLASSIFICATION	// dial shape
WITHOUT_CLASSIFICATION	// dial background paint
WITHOUT_CLASSIFICATION	// seriesPaint
WITHOUT_CLASSIFICATION	// seriesPaintList
WITHOUT_CLASSIFICATION	// baseSeriesPaint
WITHOUT_CLASSIFICATION	// seriesOutlinePaint
WITHOUT_CLASSIFICATION	// seriesOutlinePaintList
WITHOUT_CLASSIFICATION	// baseSeriesOutlinePaint
WITHOUT_CLASSIFICATION	// seriesOutlineStroke
WITHOUT_CLASSIFICATION	// seriesOutlineStrokeList
WITHOUT_CLASSIFICATION	// add an empty series
WITHOUT_CLASSIFICATION	// correct outcome
WITHOUT_CLASSIFICATION	// high
WITHOUT_CLASSIFICATION	// low
WITHOUT_CLASSIFICATION	// close
WITHOUT_CLASSIFICATION	/* XYSeries s = */
WITHOUT_CLASSIFICATION	// there should be no change event when clearing an empty series
WITHOUT_CLASSIFICATION	// clean up
WITHOUT_CLASSIFICATION	// shape
WITHOUT_CLASSIFICATION	// stroke
WITHOUT_CLASSIFICATION	// labelFont
WITHOUT_CLASSIFICATION	// labelPaint
WITHOUT_CLASSIFICATION	// upperBound
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);
WITHOUT_CLASSIFICATION	// properties // save // print // zoom // tooltips
WITHOUT_CLASSIFICATION	// properties // save // print // zoom // tooltips
WITHOUT_CLASSIFICATION	// properties // save // print // zoom // tooltips
WITHOUT_CLASSIFICATION	// do we need to redraw the buffer?
WITHOUT_CLASSIFICATION	// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)
WITHOUT_CLASSIFICATION	// suppresses compiler warning
WITHOUT_CLASSIFICATION	// create the chart...
WITHOUT_CLASSIFICATION	/* shape visible = */
WITHOUT_CLASSIFICATION	/* shape visible = */
WITHOUT_CLASSIFICATION	/* shape visible = */
WITHOUT_CLASSIFICATION	// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...
WITHOUT_CLASSIFICATION	// for efficiency, we just use the first, last and middle items to // compute a hashCode...
WITHOUT_CLASSIFICATION	// create a legend, if requested...
WITHOUT_CLASSIFICATION	// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...
WITHOUT_CLASSIFICATION	// don't zoom unless the mouse pointer is in the plot's data area
WITHOUT_CLASSIFICATION	// draw the label
WITHOUT_CLASSIFICATION	// now try to reject equality...
WITHOUT_CLASSIFICATION	// no plot, no data
WITHOUT_CLASSIFICATION	// no plot, no data
WITHOUT_CLASSIFICATION	// if fixed auto range, then derive lower bound...
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// add minor ticks (for gridlines)
WITHOUT_CLASSIFICATION	// select a tick unit that is the next one bigger than the current // (log) range divided by 50
WITHOUT_CLASSIFICATION	// look at lower and upper bounds...
WITHOUT_CLASSIFICATION	// it is unlikely that 'state' will be null, but check anyway...
WITHOUT_CLASSIFICATION	// create a new space object if one wasn't supplied...
WITHOUT_CLASSIFICATION	// work out the number of periods to skip for labelling
WITHOUT_CLASSIFICATION	// draw the arrow...
WITHOUT_CLASSIFICATION	// set flag true if negative values not allowed and the // lower bound is between 0 and 10:
WITHOUT_CLASSIFICATION	//parameter value is < -10 //calculate log using positive value:
WITHOUT_CLASSIFICATION	//calculate power using positive value; then negate
WITHOUT_CLASSIFICATION	//parameter value is <= 0 //use as-is
WITHOUT_CLASSIFICATION	//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:
WITHOUT_CLASSIFICATION	//negatives not allowed and lower range bound is zero //use data range bound instead
WITHOUT_CLASSIFICATION	//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:
WITHOUT_CLASSIFICATION	//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int
WITHOUT_CLASSIFICATION	//get log10 version of lower bound and round to integer:
WITHOUT_CLASSIFICATION	//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):
WITHOUT_CLASSIFICATION	//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:
WITHOUT_CLASSIFICATION	// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...
WITHOUT_CLASSIFICATION	// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...
WITHOUT_CLASSIFICATION	// start with the current tick unit...
WITHOUT_CLASSIFICATION	// all tick labels have the same width (equal to the height of // the font)...
WITHOUT_CLASSIFICATION	// draw the tick marks and labels...
WITHOUT_CLASSIFICATION	// we call refresh ticks just to get the maximum width or height
WITHOUT_CLASSIFICATION	// calculate midnight of first monday after 1/1/1900 relative to // current locale
WITHOUT_CLASSIFICATION	// cycle through all the segments contained in the BaseTimeline // exception segment
WITHOUT_CLASSIFICATION	// this is not one of our included segment, skip it
WITHOUT_CLASSIFICATION	// first test for equality (contains or contained)
WITHOUT_CLASSIFICATION	// key not found
WITHOUT_CLASSIFICATION	// Compute number of labels
WITHOUT_CLASSIFICATION	// TOP
WITHOUT_CLASSIFICATION	// RIGHT
WITHOUT_CLASSIFICATION	// argument checking delegated...
WITHOUT_CLASSIFICATION	//gets the outline stroke width of the plot
WITHOUT_CLASSIFICATION	// first arrange without constraints, and see if this fits within // the required ranges...
WITHOUT_CLASSIFICATION	// first arrange without constraints, and see if this fits within // the required ranges...
WITHOUT_CLASSIFICATION	// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default
WITHOUT_CLASSIFICATION	// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************
WITHOUT_CLASSIFICATION	//dmo: added this panel for colorbar control. (start dmo additions)
WITHOUT_CLASSIFICATION	//dmo: (end dmo additions)
WITHOUT_CLASSIFICATION	//  No op
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// pass on the event to the auxiliary handlers
WITHOUT_CLASSIFICATION	// pass on the event to the auxiliary handlers
WITHOUT_CLASSIFICATION	// does nothing unless overridden
WITHOUT_CLASSIFICATION	// does nothing unless overridden
WITHOUT_CLASSIFICATION	//no initial zoom rectangle exists but the handler is set //as life handler unregister
WITHOUT_CLASSIFICATION	//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));
WITHOUT_CLASSIFICATION	/// we have rotation
WITHOUT_CLASSIFICATION	// store the plot and its weight
WITHOUT_CLASSIFICATION	// store the plot and its weight
WITHOUT_CLASSIFICATION	// work out the space required by the domain axis...
WITHOUT_CLASSIFICATION	// work out the maximum height or width of the non-shared axes...
WITHOUT_CLASSIFICATION	// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height
WITHOUT_CLASSIFICATION	// set up info collection...
WITHOUT_CLASSIFICATION	// set up info collection...
WITHOUT_CLASSIFICATION	// adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	// adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	// after setting up all the subplots, the shared range axis may need // reconfiguring
WITHOUT_CLASSIFICATION	// adjust the plot area by the interior spacing value
WITHOUT_CLASSIFICATION	// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.
WITHOUT_CLASSIFICATION	// establish the coordinates of the top left corner of the drawing area
WITHOUT_CLASSIFICATION	// draw the sections at the top of the pie (and set up tooltips)...
WITHOUT_CLASSIFICATION	// the pie sections are arranged ANTICLOCKWISE
WITHOUT_CLASSIFICATION	// starts at the back and finishes at the front // (wrapping the left side)
WITHOUT_CLASSIFICATION	// if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	//turn off anti-aliasing when filling rectangles
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...
WITHOUT_CLASSIFICATION	// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...
WITHOUT_CLASSIFICATION	// is there an override?
WITHOUT_CLASSIFICATION	// is there an override?
WITHOUT_CLASSIFICATION	// nothing defined - do we autoPopulate?
WITHOUT_CLASSIFICATION	// null argument check delegated...
WITHOUT_CLASSIFICATION	// null argument check delegated...
WITHOUT_CLASSIFICATION	// null argument check delegated...
WITHOUT_CLASSIFICATION	// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.
WITHOUT_CLASSIFICATION	// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// no axis, no gridlines...
WITHOUT_CLASSIFICATION	// can't zoom domain axis
WITHOUT_CLASSIFICATION	// can't zoom domain axis
WITHOUT_CLASSIFICATION	// the above should cover all the options...
WITHOUT_CLASSIFICATION	// get the source coordinate - this plot has always a VERTICAL // orientation
WITHOUT_CLASSIFICATION	// get the source coordinate - this plot has always a VERTICAL // orientation
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	// PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	// PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	// no domain axis to zoom
WITHOUT_CLASSIFICATION	// no domain axis to zoom
WITHOUT_CLASSIFICATION	// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value
WITHOUT_CLASSIFICATION	// startAngle
WITHOUT_CLASSIFICATION	// startAngle
WITHOUT_CLASSIFICATION	// extent
WITHOUT_CLASSIFICATION	// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible
WITHOUT_CLASSIFICATION	// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)
WITHOUT_CLASSIFICATION	// PAINT
WITHOUT_CLASSIFICATION	// STROKE
WITHOUT_CLASSIFICATION	// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities
WITHOUT_CLASSIFICATION	// for value in bounds, do the lookup...
WITHOUT_CLASSIFICATION	// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow
WITHOUT_CLASSIFICATION	// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...
WITHOUT_CLASSIFICATION	// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.
WITHOUT_CLASSIFICATION	// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...
WITHOUT_CLASSIFICATION	// FIXME: calculate xx0
WITHOUT_CLASSIFICATION	// LEFT POLYGON
WITHOUT_CLASSIFICATION	// calculate the bar width
WITHOUT_CLASSIFICATION	// wait till we are at the last item for the row then draw the // whole stack at once
WITHOUT_CLASSIFICATION	// a list to store the series index and bar region, so we can draw // all the labels at the end...
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// current data point...
WITHOUT_CLASSIFICATION	// clip left and right bounds to data area
WITHOUT_CLASSIFICATION	// clip left and right bounds to data area
WITHOUT_CLASSIFICATION	// PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// calculate bar width...
WITHOUT_CLASSIFICATION	// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?
WITHOUT_CLASSIFICATION	//// ITEM LABEL PAINT  /////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// last series, so we are ready to draw the min and max
WITHOUT_CLASSIFICATION	// draw mean - SPECIAL AIMS REQUIREMENT...
WITHOUT_CLASSIFICATION	// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection
WITHOUT_CLASSIFICATION	// avoid possible sun.dc.pr.PRException: endPath: bad path
WITHOUT_CLASSIFICATION	// avoid possible sun.dc.pr.PRException: endPath: bad path
WITHOUT_CLASSIFICATION	// Add the last point (x,0)
WITHOUT_CLASSIFICATION	// Add the last point (x,0)
WITHOUT_CLASSIFICATION	// check if initial polygon needs to be clipped
WITHOUT_CLASSIFICATION	// never updated the subtrahend if it is implied to be zero
WITHOUT_CLASSIFICATION	// check if line segments are colinear
WITHOUT_CLASSIFICATION	// clear the point vectors
WITHOUT_CLASSIFICATION	//// ITEM LABELS VISIBLE //////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// we don't need the sign
WITHOUT_CLASSIFICATION	// fillType == TO_UPPER_BOUND
WITHOUT_CLASSIFICATION	/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */
WITHOUT_CLASSIFICATION	// this represents the situation // for drawing a horizontal bar.
WITHOUT_CLASSIFICATION	// draw median
WITHOUT_CLASSIFICATION	//  Check that the graph being served was created by the current user //  or that it begins with "public"
WITHOUT_CLASSIFICATION	// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...
WITHOUT_CLASSIFICATION	// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null
WITHOUT_CLASSIFICATION	/**/
WITHOUT_CLASSIFICATION	/**/
WITHOUT_CLASSIFICATION	// adjust text bounds to match string position
WITHOUT_CLASSIFICATION	// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// set up the series names...
WITHOUT_CLASSIFICATION	// is the category valid?
WITHOUT_CLASSIFICATION	//create a temporary vector // set x to some arbitary value (used below)
WITHOUT_CLASSIFICATION	// look for any keys that we don't already know about...
WITHOUT_CLASSIFICATION	//  Iterate and find all keys below threshold percentThreshold
WITHOUT_CLASSIFICATION	// handle special case of BoxAndWhiskerDataset
WITHOUT_CLASSIFICATION	// standard case - plain XYDataset
WITHOUT_CLASSIFICATION	// hasn't implemented RangeInfo, so we'll have to iterate...
WITHOUT_CLASSIFICATION	// hasn't implemented RangeInfo, so we'll have to iterate...
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Second object // -------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...
WITHOUT_CLASSIFICATION	// get the current data item...
WITHOUT_CLASSIFICATION	// get the current data item...
WITHOUT_CLASSIFICATION	// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //
WITHOUT_CLASSIFICATION	// deregister the collection as a change listener to each series in the // collection
WITHOUT_CLASSIFICATION	// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...
WITHOUT_CLASSIFICATION	// Unregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...
WITHOUT_CLASSIFICATION	// pass mouse move event if some ChartMouseListener are listening
WITHOUT_CLASSIFICATION	// row keys...
WITHOUT_CLASSIFICATION	// row keys...
WITHOUT_CLASSIFICATION	// row keys...
WITHOUT_CLASSIFICATION	// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?
WITHOUT_CLASSIFICATION	// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...
WITHOUT_CLASSIFICATION	// Dispose of any fonts we have created
WITHOUT_CLASSIFICATION	// Create the new font and set it into the title // label
WITHOUT_CLASSIFICATION	// create the new color and set it to the // SwtPaintCanvas
WITHOUT_CLASSIFICATION	// row 2: outline color
WITHOUT_CLASSIFICATION	// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.
WITHOUT_CLASSIFICATION	// backgroundPaint
WITHOUT_CLASSIFICATION	// backgroundPaint
WITHOUT_CLASSIFICATION	// backgroundPaint
WITHOUT_CLASSIFICATION	// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// labelFont
WITHOUT_CLASSIFICATION	// fillPaint
WITHOUT_CLASSIFICATION	// fillPaint
WITHOUT_CLASSIFICATION	// fillPaint
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// a null key should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	// a null key should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	//gridBandPaint
WITHOUT_CLASSIFICATION	//private double angle;
WITHOUT_CLASSIFICATION	//private double baseRadius;
WITHOUT_CLASSIFICATION	//private double arrowWidth;
WITHOUT_CLASSIFICATION	//private double labelOffset;
WITHOUT_CLASSIFICATION	// font
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// ok, exception is expected
WITHOUT_CLASSIFICATION	// stroke
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// dateFormatOverride
WITHOUT_CLASSIFICATION	// range
WITHOUT_CLASSIFICATION	// check that setting the max date to something on or before the // current min date works...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	//private boolean autoRangeStickyZero;
WITHOUT_CLASSIFICATION	// now replacing the dataset should update the axis range...
WITHOUT_CLASSIFICATION	// now replacing the dataset should update the axis range...
WITHOUT_CLASSIFICATION	// set axis bounds to be both greater than 1
WITHOUT_CLASSIFICATION	// check for bounds interval that includes 1
WITHOUT_CLASSIFICATION	// check for bounds interval that includes 1
WITHOUT_CLASSIFICATION	// tickLabelFont
WITHOUT_CLASSIFICATION	// advance line Paint
WITHOUT_CLASSIFICATION	// Add exception in included segments
WITHOUT_CLASSIFICATION	// Saturday and Sundays are non business hours
WITHOUT_CLASSIFICATION	/** These constants control test cycles in the validateXXXX methods. */
WITHOUT_CLASSIFICATION	/** These constants control test cycles in the validateXXXX methods. */
WITHOUT_CLASSIFICATION	// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //
WITHOUT_CLASSIFICATION	// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //
WITHOUT_CLASSIFICATION	// test monday though friday timeline
WITHOUT_CLASSIFICATION	// find first Monday after 2001-01-01
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// verify attributes set during object construction
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// verify all timeline segments included in the // baseTimeline.segment are now exceptions
WITHOUT_CLASSIFICATION	// 1-Jan-2000
WITHOUT_CLASSIFICATION	// tick label insets...
WITHOUT_CLASSIFICATION	// tick mark paint...
WITHOUT_CLASSIFICATION	// negativeArrowVisible;
WITHOUT_CLASSIFICATION	// axisLinePaint
WITHOUT_CLASSIFICATION	// autoRange
WITHOUT_CLASSIFICATION	// autoRangeMinimumSize
WITHOUT_CLASSIFICATION	//private double fixedAutoRange;
WITHOUT_CLASSIFICATION	//private boolean autoTickUnitSelection;
WITHOUT_CLASSIFICATION	//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;
WITHOUT_CLASSIFICATION	// TBLRC // 00001 - center item only
WITHOUT_CLASSIFICATION	// TBLRC // 00001 - center item only
WITHOUT_CLASSIFICATION	// TBLRC // 00100 - left item only
WITHOUT_CLASSIFICATION	// TBLRC // 10101 - top, left and center
WITHOUT_CLASSIFICATION	// TBLRC // 10110 - top, left and right
WITHOUT_CLASSIFICATION	// TBLRC // 11000 - top and bottom only
WITHOUT_CLASSIFICATION	// TBLRC // 11011
WITHOUT_CLASSIFICATION	// TBLRC // 11111 - all
WITHOUT_CLASSIFICATION	// standard test
WITHOUT_CLASSIFICATION	// Y format
WITHOUT_CLASSIFICATION	// some setup...
WITHOUT_CLASSIFICATION	// some setup...
WITHOUT_CLASSIFICATION	// parent plot...
WITHOUT_CLASSIFICATION	// innerSeparatorExtension
WITHOUT_CLASSIFICATION	// domainAxis - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	// rangeAxis - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	// renderer - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	// domainGridlinesVisible
WITHOUT_CLASSIFICATION	// domainGridlinePosition
WITHOUT_CLASSIFICATION	// rangeGridlinePaint
WITHOUT_CLASSIFICATION	// anchorValue
WITHOUT_CLASSIFICATION	// rangeCrosshairPaint
WITHOUT_CLASSIFICATION	// rangeCrosshairPaint
WITHOUT_CLASSIFICATION	// range markers - no longer separate fields but test anyway...
WITHOUT_CLASSIFICATION	// fixed legend items
WITHOUT_CLASSIFICATION	// domainCrosshairPaint
WITHOUT_CLASSIFICATION	// check for independence
WITHOUT_CLASSIFICATION	// check for independence
WITHOUT_CLASSIFICATION	// now check that the chart is usable...
WITHOUT_CLASSIFICATION	// now check that the chart is usable...
WITHOUT_CLASSIFICATION	// now make a change to the renderer and see if it triggers a plot // change event...
WITHOUT_CLASSIFICATION	// should get IllegalArgumentException for negative index
WITHOUT_CLASSIFICATION	// if multiple axes are mapped, the first in the list should be // returned...
WITHOUT_CLASSIFICATION	// if multiple axes are mapped, the first in the list should be // returned...
WITHOUT_CLASSIFICATION	// add a second dataset
WITHOUT_CLASSIFICATION	// units
WITHOUT_CLASSIFICATION	// tick labels visible
WITHOUT_CLASSIFICATION	// tick size
WITHOUT_CLASSIFICATION	// the clone and the original share a reference to the SAME dataset
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// labelType...
WITHOUT_CLASSIFICATION	// pieIndex...
WITHOUT_CLASSIFICATION	// ignoreZeroValues
WITHOUT_CLASSIFICATION	// sectionOutlinesVisible
WITHOUT_CLASSIFICATION	// sectionOutlineStroke
WITHOUT_CLASSIFICATION	// labelBackgroundPaint
WITHOUT_CLASSIFICATION	// labelGenerator
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// verify independence of fixed legend item collection
WITHOUT_CLASSIFICATION	// stroke sequence
WITHOUT_CLASSIFICATION	// stroke index
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// minorTickCount
WITHOUT_CLASSIFICATION	// try a default instance
WITHOUT_CLASSIFICATION	// try a customised instance
WITHOUT_CLASSIFICATION	// seriesVisibleInLegend
WITHOUT_CLASSIFICATION	//upper bound and margin OK; get log10 of upper bound
WITHOUT_CLASSIFICATION	// fillPaintList
WITHOUT_CLASSIFICATION	//apply upper margin by increasing upper bound:
WITHOUT_CLASSIFICATION	// baseStroke
WITHOUT_CLASSIFICATION	// Reference: http://www.antigrain.com/research/bezier_interpolation/
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()
WITHOUT_CLASSIFICATION	// only draw if we have good values
WITHOUT_CLASSIFICATION	// properties // save // print // zoom // tooltips
WITHOUT_CLASSIFICATION	// properties // save // print // zoom // tooltips
WITHOUT_CLASSIFICATION	// stop listening for changes to the existing chart
WITHOUT_CLASSIFICATION	// set up popup menu...
WITHOUT_CLASSIFICATION	// itemLabelsVisible
WITHOUT_CLASSIFICATION	// make the background of the buffer clear and transparent
WITHOUT_CLASSIFICATION	// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html
WITHOUT_CLASSIFICATION	// add the new chart
WITHOUT_CLASSIFICATION	// work out if scaling is required...
WITHOUT_CLASSIFICATION	// first determine the size of the chart rendering area...
WITHOUT_CLASSIFICATION	// do we need to resize the buffer?
WITHOUT_CLASSIFICATION	// are we using the chart buffer?
WITHOUT_CLASSIFICATION	// clear the flag
WITHOUT_CLASSIFICATION	// do we need to redraw the buffer?
WITHOUT_CLASSIFICATION	// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart
WITHOUT_CLASSIFICATION	// redrawing the chart every time...
WITHOUT_CLASSIFICATION	// zap the buffer onto the panel...
WITHOUT_CLASSIFICATION	// does nothing - override if necessary
WITHOUT_CLASSIFICATION	// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...
WITHOUT_CLASSIFICATION	// itemLabelFontList
WITHOUT_CLASSIFICATION	// restore original tooltip dealys
WITHOUT_CLASSIFICATION	// can we pan this plot?
WITHOUT_CLASSIFICATION	// the actual panning occurs later in the mouseDragged()  // method
WITHOUT_CLASSIFICATION	// if the popup menu has already been triggered, then ignore dragging...
WITHOUT_CLASSIFICATION	// handle panning if we have a start point
WITHOUT_CLASSIFICATION	// if no initial zoom point was set, ignore dragging...
WITHOUT_CLASSIFICATION	// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)
WITHOUT_CLASSIFICATION	// selected rectangle shouldn't extend outside the data area...
WITHOUT_CLASSIFICATION	// Draw the new zoom rectangle...
WITHOUT_CLASSIFICATION	// with no buffer, we use XOR to draw the rectangle "over" the // chart...
WITHOUT_CLASSIFICATION	// if we've been panning, we need to reset now that the mouse is  // released...
WITHOUT_CLASSIFICATION	// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true
WITHOUT_CLASSIFICATION	// erase the zoom rectangle
WITHOUT_CLASSIFICATION	// force a redraw // new entity code...
WITHOUT_CLASSIFICATION	// we need to guard against this.zoomPoint being null
WITHOUT_CLASSIFICATION	// we need to guard against this.zoomPoint being null
WITHOUT_CLASSIFICATION	// Set XOR mode to draw the zoom rectangle
WITHOUT_CLASSIFICATION	// null will be returned
WITHOUT_CLASSIFICATION	// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)
WITHOUT_CLASSIFICATION	// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)
WITHOUT_CLASSIFICATION	// use reflection to get the SVG string
WITHOUT_CLASSIFICATION	// Reset to the default 'overwrite' mode
WITHOUT_CLASSIFICATION	// Reset to the default 'overwrite' mode
WITHOUT_CLASSIFICATION	// Reset to the default 'overwrite' mode
WITHOUT_CLASSIFICATION	// null will be returned
WITHOUT_CLASSIFICATION	// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...
WITHOUT_CLASSIFICATION	// pdfDocument class will be null so the function will return false
WITHOUT_CLASSIFICATION	// null will be returned
WITHOUT_CLASSIFICATION	// null will be returned
WITHOUT_CLASSIFICATION	// null will be returned
WITHOUT_CLASSIFICATION	// fetch listeners from local storage
WITHOUT_CLASSIFICATION	// here we need to update the UI for the popup menu, if the panel // has one...
WITHOUT_CLASSIFICATION	// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...
WITHOUT_CLASSIFICATION	// register as a listener with sub-components...
WITHOUT_CLASSIFICATION	// go through each zoom menu item and decide whether or not to // enable it...
WITHOUT_CLASSIFICATION	// suppresses compiler warning
WITHOUT_CLASSIFICATION	// we create a new but empty chartMouseListeners list
WITHOUT_CLASSIFICATION	// suppresses compiler warning
WITHOUT_CLASSIFICATION	/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */
WITHOUT_CLASSIFICATION	//get absolute value of log10 value
WITHOUT_CLASSIFICATION	// suppresses compiler warning
WITHOUT_CLASSIFICATION	// suppresses compiler warning
WITHOUT_CLASSIFICATION	// create the renderer...
WITHOUT_CLASSIFICATION	// create the plot...
WITHOUT_CLASSIFICATION	// create the chart...
WITHOUT_CLASSIFICATION	// forces recalculation of the axis range
WITHOUT_CLASSIFICATION	// reduce the default margins
WITHOUT_CLASSIFICATION	// override default
WITHOUT_CLASSIFICATION	// get desired width and height from somewhere then...
WITHOUT_CLASSIFICATION	// change rendering order to ensure that bar overlapping is the // right way around
WITHOUT_CLASSIFICATION	// change rendering order to ensure that bar overlapping is the // right way around
WITHOUT_CLASSIFICATION	// no need to instantiate this    
WITHOUT_CLASSIFICATION	// seems to be the same...
WITHOUT_CLASSIFICATION	/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */
WITHOUT_CLASSIFICATION	/* shape filled = */
WITHOUT_CLASSIFICATION	/* shape visible = */
WITHOUT_CLASSIFICATION	/* shape visible = */
WITHOUT_CLASSIFICATION	/* shape visible = */
WITHOUT_CLASSIFICATION	/* shape filled = */
WITHOUT_CLASSIFICATION	/* shape filled = */
WITHOUT_CLASSIFICATION	/* shape filled = */
WITHOUT_CLASSIFICATION	/* shape filled = */
WITHOUT_CLASSIFICATION	/* shape filled = */
WITHOUT_CLASSIFICATION	/* shape outlined */
WITHOUT_CLASSIFICATION	/* shape outlined = */
WITHOUT_CLASSIFICATION	/* line visible */
WITHOUT_CLASSIFICATION	/* line visible */
WITHOUT_CLASSIFICATION	/* shape outlined = */
WITHOUT_CLASSIFICATION	/* shape outlined = */
WITHOUT_CLASSIFICATION	/* shape outlined = */
WITHOUT_CLASSIFICATION	/* line visible = */
WITHOUT_CLASSIFICATION	/* line visible = */
WITHOUT_CLASSIFICATION	/* line visible = */
WITHOUT_CLASSIFICATION	// positiveItemLabelPosition;
WITHOUT_CLASSIFICATION	// work out if scaling is required...
WITHOUT_CLASSIFICATION	/* shape outlined = */
WITHOUT_CLASSIFICATION	/* line visible = */
WITHOUT_CLASSIFICATION	// negativeItemLabelPositionList;
WITHOUT_CLASSIFICATION	// ----------------- // --- Constants --- // -----------------
WITHOUT_CLASSIFICATION	// ------------------------ // --- Member Variables --- // ------------------------
WITHOUT_CLASSIFICATION	// -------------------- // --- Constructors --- // --------------------
WITHOUT_CLASSIFICATION	// -------------------------- // --- ChartPanel Methods --- // --------------------------
WITHOUT_CLASSIFICATION	// ---------------------- // --- Public Methods --- // ----------------------
WITHOUT_CLASSIFICATION	// ----------------------- // --- Private Methods --- // -----------------------
WITHOUT_CLASSIFICATION	// do nothing at all
WITHOUT_CLASSIFICATION	// now process the plot if there is one
WITHOUT_CLASSIFICATION	// process all domain axes
WITHOUT_CLASSIFICATION	// process all domain axes
WITHOUT_CLASSIFICATION	// process all range axes
WITHOUT_CLASSIFICATION	// process all range axes
WITHOUT_CLASSIFICATION	// process all renderers
WITHOUT_CLASSIFICATION	// process all renderers
WITHOUT_CLASSIFICATION	// process all annotations
WITHOUT_CLASSIFICATION	// BarRenderer
WITHOUT_CLASSIFICATION	// BarRenderer3D
WITHOUT_CLASSIFICATION	// LineRenderer3D
WITHOUT_CLASSIFICATION	//  StatisticalBarRenderer
WITHOUT_CLASSIFICATION	// MinMaxCategoryRenderer
WITHOUT_CLASSIFICATION	// handle GradientPaint as a special case
WITHOUT_CLASSIFICATION	// create storage for listeners...
WITHOUT_CLASSIFICATION	// add the chart title, if one has been specified...
WITHOUT_CLASSIFICATION	// this fires a ChartChangeEvent
WITHOUT_CLASSIFICATION	// if the flag is being set to true, there may be queued up changes...
WITHOUT_CLASSIFICATION	// register as a listener with sub-components...
WITHOUT_CLASSIFICATION	// seem to be the same...
WITHOUT_CLASSIFICATION	// draw the label
WITHOUT_CLASSIFICATION	// clear the section attributes so that the theme's DrawingSupplier // will be used
WITHOUT_CLASSIFICATION	// for efficiency, we just use the first, last and middle items to // compute a hashCode...
WITHOUT_CLASSIFICATION	// for efficiency, we just use the first, last and middle items to // compute a hashCode...
WITHOUT_CLASSIFICATION	// default is to notify listeners when the // chart changes
WITHOUT_CLASSIFICATION	// added the following hint because of  // http://stackoverflow.com/questions/7785082/
WITHOUT_CLASSIFICATION	// record the chart area, if info is requested...
WITHOUT_CLASSIFICATION	// ensure no drawing occurs outside chart area...
WITHOUT_CLASSIFICATION	// draw the chart background...
WITHOUT_CLASSIFICATION	// draw the title and subtitles...
WITHOUT_CLASSIFICATION	// draw the plot (axes and data visualisation)
WITHOUT_CLASSIFICATION	// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;
WITHOUT_CLASSIFICATION	// get a locale-specific resource bundle...
WITHOUT_CLASSIFICATION	// load only when required
WITHOUT_CLASSIFICATION	// use ImageIcon because it waits for the image to load...
WITHOUT_CLASSIFICATION	// don't zoom unless the mouse pointer is in the plot's data area
WITHOUT_CLASSIFICATION	// do not notify while zooming each axis
WITHOUT_CLASSIFICATION	// this generates the change event too
WITHOUT_CLASSIFICATION	// if we don't have at least 2 (x, y) coordinates, just return
WITHOUT_CLASSIFICATION	// now try to reject equality
WITHOUT_CLASSIFICATION	// now try to reject equality
WITHOUT_CLASSIFICATION	// seem to be the same
WITHOUT_CLASSIFICATION	// seem to be the same
WITHOUT_CLASSIFICATION	// now try to reject equality...
WITHOUT_CLASSIFICATION	// now try to reject equality...
WITHOUT_CLASSIFICATION	/* Rectangle2D hotspot = */
WITHOUT_CLASSIFICATION	// seems to be the same...
WITHOUT_CLASSIFICATION	// FIXME //SerialUtilities.writeImage(this.image, stream);
WITHOUT_CLASSIFICATION	// FIXME //this.image = SerialUtilities.readImage(stream);
WITHOUT_CLASSIFICATION	// simple case
WITHOUT_CLASSIFICATION	// by default the outline and background won't be visible
WITHOUT_CLASSIFICATION	// now try to reject equality
WITHOUT_CLASSIFICATION	// create plot ...
WITHOUT_CLASSIFICATION	// add a second dataset and renderer...
WITHOUT_CLASSIFICATION	// return a new chart containing the overlaid plot...
WITHOUT_CLASSIFICATION	// create dataset 1...
WITHOUT_CLASSIFICATION	// seem to be the same
WITHOUT_CLASSIFICATION	// now try to reject equality...
WITHOUT_CLASSIFICATION	// seems to be the same...
WITHOUT_CLASSIFICATION	// baseNegativeItemLabelPosition;
WITHOUT_CLASSIFICATION	// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored
WITHOUT_CLASSIFICATION	// compute transform matrix elements via sample points. Assume no // rotation or shear.
WITHOUT_CLASSIFICATION	//  create transform & transform shape
WITHOUT_CLASSIFICATION	//SerialUtilities.writeImage(this.image, stream);
WITHOUT_CLASSIFICATION	//this.image = SerialUtilities.readImage(stream);
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// ensure the autorange is at least <minRange> in size...
WITHOUT_CLASSIFICATION	// apply the margins - these should apply to the exponent range
WITHOUT_CLASSIFICATION	// even though the axis is not visible, we need ticks for the // gridlines...
WITHOUT_CLASSIFICATION	// add minor ticks (for gridlines)
WITHOUT_CLASSIFICATION	// select a tick unit that is the next one bigger than the current // (log) range divided by 50
WITHOUT_CLASSIFICATION	// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label
WITHOUT_CLASSIFICATION	// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label
WITHOUT_CLASSIFICATION	// what is the available space for one unit?
WITHOUT_CLASSIFICATION	// what is the available space for one unit?
WITHOUT_CLASSIFICATION	// there are no more candidates
WITHOUT_CLASSIFICATION	// there are no more candidates
WITHOUT_CLASSIFICATION	// all tick labels have the same width (equal to the height of the // font)...
WITHOUT_CLASSIFICATION	// look at lower and upper bounds...
WITHOUT_CLASSIFICATION	// no need to create entity if we can't save it anyways...
WITHOUT_CLASSIFICATION	// it is unlikely that 'state' will be null, but check anyway...
WITHOUT_CLASSIFICATION	// It's up to the plot which clones up to restore the correct references
WITHOUT_CLASSIFICATION	// draw the category labels and axis label
WITHOUT_CLASSIFICATION	// regular number axis
WITHOUT_CLASSIFICATION	// regular number axis
WITHOUT_CLASSIFICATION	// displayStart > displayEnd, need to handle split
WITHOUT_CLASSIFICATION	// displayStart > displayEnd, need to handle split
WITHOUT_CLASSIFICATION	// create a new space object if one wasn't supplied...
WITHOUT_CLASSIFICATION	// if the axis is not visible, no additional space is required...
WITHOUT_CLASSIFICATION	// if the axis has a fixed dimension, return it...
WITHOUT_CLASSIFICATION	// get the axis label size and update the space object...
WITHOUT_CLASSIFICATION	//negative values not allowed
WITHOUT_CLASSIFICATION	// no plot, no data.
WITHOUT_CLASSIFICATION	// no plot, no data
WITHOUT_CLASSIFICATION	// if the axis is not visible, no additional space is required...
WITHOUT_CLASSIFICATION	// if the axis has a fixed dimension, return it...
WITHOUT_CLASSIFICATION	// get the axis label size and update the space object...
WITHOUT_CLASSIFICATION	// baseCreateEntities;
WITHOUT_CLASSIFICATION	// add space for the outer tick labels, if any...
WITHOUT_CLASSIFICATION	// draw minor tick marks
WITHOUT_CLASSIFICATION	// work out the initial gap
WITHOUT_CLASSIFICATION	// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...
WITHOUT_CLASSIFICATION	// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...
WITHOUT_CLASSIFICATION	// work out the trailing gap
WITHOUT_CLASSIFICATION	// draw the arrow...
WITHOUT_CLASSIFICATION	// need to work out the space used by the tick labels... // so we can update the cursor...
WITHOUT_CLASSIFICATION	// calculate the max size of the tick labels (if visible)...
WITHOUT_CLASSIFICATION	// if autoRange is true, then the current range is irrelevant
WITHOUT_CLASSIFICATION	//setup number formatter obj
WITHOUT_CLASSIFICATION	//setup number formatter obj
WITHOUT_CLASSIFICATION	// if negative then set flag and make positive
WITHOUT_CLASSIFICATION	// if negative then set flag and make positive
WITHOUT_CLASSIFICATION	//return value; negate if original value was negative:
WITHOUT_CLASSIFICATION	//invert adjustLog10
WITHOUT_CLASSIFICATION	//calculate floor using negative value:
WITHOUT_CLASSIFICATION	//calculate power using positive value; then negate
WITHOUT_CLASSIFICATION	//negative values are allowed
WITHOUT_CLASSIFICATION	//calculate ceil using negative value:
WITHOUT_CLASSIFICATION	// ensure the autorange is at least <minRange> in size...
WITHOUT_CLASSIFICATION	// legendTextPaint
WITHOUT_CLASSIFICATION	//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:
WITHOUT_CLASSIFICATION	// if < 10 then //increase so 0 translates to 0
WITHOUT_CLASSIFICATION	//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.
WITHOUT_CLASSIFICATION	//parameter value is < -10 //calculate log using positive value:
WITHOUT_CLASSIFICATION	//parameter value is -10 > val < 10 //use as-is
WITHOUT_CLASSIFICATION	//parameter value is -10 > val < 10 //use as-is
WITHOUT_CLASSIFICATION	//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.
WITHOUT_CLASSIFICATION	//parameter value is <= 0 //use as-is
WITHOUT_CLASSIFICATION	//parameter value is > 10 // The Math.log() function is based on e not 10.
WITHOUT_CLASSIFICATION	//parameter value is > 0 // The Math.log() function is based on e not 10.
WITHOUT_CLASSIFICATION	//no real data present
WITHOUT_CLASSIFICATION	//get lower bound value
WITHOUT_CLASSIFICATION	//actual data is present //get lower bound value
WITHOUT_CLASSIFICATION	//strict flag set, allow-negatives not set and values <= 0
WITHOUT_CLASSIFICATION	//apply lower margin by decreasing lower bound:
WITHOUT_CLASSIFICATION	//lower bound and margin OK; get log10 of lower bound
WITHOUT_CLASSIFICATION	//get absolute value of log10 value
WITHOUT_CLASSIFICATION	//need to account for case where upper==0.0
WITHOUT_CLASSIFICATION	//setup flag based on bounds values
WITHOUT_CLASSIFICATION	//get lower bound value:
WITHOUT_CLASSIFICATION	//get upper bound value
WITHOUT_CLASSIFICATION	//get log10 version of upper bound and round to integer:
WITHOUT_CLASSIFICATION	//for each power of 10 value; create ten ticks
WITHOUT_CLASSIFICATION	//for each tick to be displayed
WITHOUT_CLASSIFICATION	//small log values in use; create numeric value for tick
WITHOUT_CLASSIFICATION	//create tick label (force use of fmt obj):
WITHOUT_CLASSIFICATION	//no tick label to be shown
WITHOUT_CLASSIFICATION	//create tick label:
WITHOUT_CLASSIFICATION	//get lower bound value:
WITHOUT_CLASSIFICATION	//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):
WITHOUT_CLASSIFICATION	//get upper bound value
WITHOUT_CLASSIFICATION	//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):
WITHOUT_CLASSIFICATION	//get log10 version of lower bound and round to integer:
WITHOUT_CLASSIFICATION	//get log10 version of upper bound and round to integer:
WITHOUT_CLASSIFICATION	//for each tick to be displayed
WITHOUT_CLASSIFICATION	//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks
WITHOUT_CLASSIFICATION	//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer
WITHOUT_CLASSIFICATION	//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:
WITHOUT_CLASSIFICATION	//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:
WITHOUT_CLASSIFICATION	// did not do zero tick last iteration
WITHOUT_CLASSIFICATION	//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick
WITHOUT_CLASSIFICATION	// if past highest data value then exit // method
WITHOUT_CLASSIFICATION	//tick value not below lowest data value
WITHOUT_CLASSIFICATION	//for each tick with a label to be displayed
WITHOUT_CLASSIFICATION	//small log values in use
WITHOUT_CLASSIFICATION	//first tick of group; create label text
WITHOUT_CLASSIFICATION	//not "log10"-type label
WITHOUT_CLASSIFICATION	//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):
WITHOUT_CLASSIFICATION	//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks
WITHOUT_CLASSIFICATION	//tick value not below lowest data value
WITHOUT_CLASSIFICATION	// ITEM_LABEL_PAINT
WITHOUT_CLASSIFICATION	//if flag then //create "log10"-type label
WITHOUT_CLASSIFICATION	//if flag then //create "1e#"-type label
WITHOUT_CLASSIFICATION	//not "1e#"-type label // if positive exponent then // make integer
WITHOUT_CLASSIFICATION	//negative exponent; create fractional value //set exact number of fractional digits to // be shown:
WITHOUT_CLASSIFICATION	//not small log values in use; allow for values <= 0 //if did zero tick last iter then
WITHOUT_CLASSIFICATION	//decrement to do 1.0 tick now
WITHOUT_CLASSIFICATION	//first tick of group // did not do zero tick last // iteration
WITHOUT_CLASSIFICATION	// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick
WITHOUT_CLASSIFICATION	//first or last tick on graph or value is 1.0 //create label for tick:
WITHOUT_CLASSIFICATION	//create "log10"-type label
WITHOUT_CLASSIFICATION	//create "1e#"-type label
WITHOUT_CLASSIFICATION	// did zero tick last iteration //no label //clear flag
WITHOUT_CLASSIFICATION	// not first tick of group //no label //make sure flag cleared
WITHOUT_CLASSIFICATION	//if past highest data value then exit method
WITHOUT_CLASSIFICATION	//create tick object and add to list:
WITHOUT_CLASSIFICATION	//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):
WITHOUT_CLASSIFICATION	// populate deprecated fields
WITHOUT_CLASSIFICATION	// usually the range will be a DateRange, but if it isn't do a // conversion...
WITHOUT_CLASSIFICATION	// check the new minimum date relative to the current maximum date
WITHOUT_CLASSIFICATION	// check the new maximum date relative to the current minimum date
WITHOUT_CLASSIFICATION	// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3
WITHOUT_CLASSIFICATION	// date formatters
WITHOUT_CLASSIFICATION	// milliseconds
WITHOUT_CLASSIFICATION	// look at lower and upper bounds...
WITHOUT_CLASSIFICATION	// create a new space object if one wasn't supplied...
WITHOUT_CLASSIFICATION	// if the axis is not visible, no additional space is required...
WITHOUT_CLASSIFICATION	// seconds
WITHOUT_CLASSIFICATION	// minutes
WITHOUT_CLASSIFICATION	// hours
WITHOUT_CLASSIFICATION	// days
WITHOUT_CLASSIFICATION	// months
WITHOUT_CLASSIFICATION	// years
WITHOUT_CLASSIFICATION	//Timeline hasn't method getStartTime()
WITHOUT_CLASSIFICATION	// start with the current tick unit...
WITHOUT_CLASSIFICATION	// then extrapolate...
WITHOUT_CLASSIFICATION	// start with a unit that is at least 1/10th of the axis length
WITHOUT_CLASSIFICATION	// now extrapolate based on label height and unit height...
WITHOUT_CLASSIFICATION	// make final selection...
WITHOUT_CLASSIFICATION	// all tick labels have the same width (equal to the height of // the font)...
WITHOUT_CLASSIFICATION	// could add a flag to make the following correction optional...
WITHOUT_CLASSIFICATION	// could add a flag to make the following correction optional...
WITHOUT_CLASSIFICATION	// work out the value, label and position
WITHOUT_CLASSIFICATION	// work out the value, label and position
WITHOUT_CLASSIFICATION	// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...
WITHOUT_CLASSIFICATION	// draw the tick marks and labels...
WITHOUT_CLASSIFICATION	// draw the axis label (note that 'state' is passed in *and* // returned)...
WITHOUT_CLASSIFICATION	// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:
WITHOUT_CLASSIFICATION	// 'dateTickUnit' is immutable : no need to clone
WITHOUT_CLASSIFICATION	// 'tickMarkPosition' is immutable : no need to clone
WITHOUT_CLASSIFICATION	// if there is no specific font, use the general one...
WITHOUT_CLASSIFICATION	// if there is no specific paint, use the general one...
WITHOUT_CLASSIFICATION	// find first excluded base segment starting fromDomainValue
WITHOUT_CLASSIFICATION	// draw the category labels and axis label
WITHOUT_CLASSIFICATION	// get the axis label size and update the space object...
WITHOUT_CLASSIFICATION	// calculate the max size of the tick labels (if visible)...
WITHOUT_CLASSIFICATION	// nothing required
WITHOUT_CLASSIFICATION	// sanity check for data area...
WITHOUT_CLASSIFICATION	// step down in size until the current size is too small or there are  // no more units
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// make a time zone with no DST for our Calendar calculations
WITHOUT_CLASSIFICATION	// calculate midnight of first monday after 1/1/1900 relative to // current locale
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// verify that baseTimeline is compatible with us
WITHOUT_CLASSIFICATION	// - partialTimeInException;
WITHOUT_CLASSIFICATION	// - partialTimeInException;
WITHOUT_CLASSIFICATION	//return toTimelineValue(dateDomainValue.getTime());
WITHOUT_CLASSIFICATION	// calculate the result as if no exceptions
WITHOUT_CLASSIFICATION	// adjust result for any exceptions in the result calculated
WITHOUT_CLASSIFICATION	// skip all whole exception segments in the range
WITHOUT_CLASSIFICATION	// skip exception or excluded segments we may fall on
WITHOUT_CLASSIFICATION	//addException(exceptionDate.getTime());
WITHOUT_CLASSIFICATION	// find all consecutive included segments
WITHOUT_CLASSIFICATION	// add the interval as an exception
WITHOUT_CLASSIFICATION	// find all consecutive included segments
WITHOUT_CLASSIFICATION	// move forward exceptionSegmentCount segments skipping // excluded segments
WITHOUT_CLASSIFICATION	// empty
WITHOUT_CLASSIFICATION	// add the interval as an exception
WITHOUT_CLASSIFICATION	// this is not one of our included segment, skip it
WITHOUT_CLASSIFICATION	// first check that autoPopulate==false works as expected
WITHOUT_CLASSIFICATION	// cycle over all the base segments groups in the range
WITHOUT_CLASSIFICATION	// cycle through all the segments contained in the base exclusion // area
WITHOUT_CLASSIFICATION	// go to next base segment group
WITHOUT_CLASSIFICATION	// key not found
WITHOUT_CLASSIFICATION	// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();
WITHOUT_CLASSIFICATION	// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);
WITHOUT_CLASSIFICATION	// Compute number of labels
WITHOUT_CLASSIFICATION	// Cycle when necessary
WITHOUT_CLASSIFICATION	// Cycle when necessary
WITHOUT_CLASSIFICATION	// If tick overlap when cycling, update last tick too
WITHOUT_CLASSIFICATION	// continue and separate the labels only if necessary
WITHOUT_CLASSIFICATION	// TOP
WITHOUT_CLASSIFICATION	// TOP
WITHOUT_CLASSIFICATION	// TOP
WITHOUT_CLASSIFICATION	// BOTTOM
WITHOUT_CLASSIFICATION	// BOTTOM
WITHOUT_CLASSIFICATION	// BOTTOM
WITHOUT_CLASSIFICATION	// LEFT
WITHOUT_CLASSIFICATION	// LEFT
WITHOUT_CLASSIFICATION	// LEFT
WITHOUT_CLASSIFICATION	// RIGHT
WITHOUT_CLASSIFICATION	// RIGHT
WITHOUT_CLASSIFICATION	// no plot, no data
WITHOUT_CLASSIFICATION	// no plot, no data
WITHOUT_CLASSIFICATION	// if fixed auto range, then derive lower bound...
WITHOUT_CLASSIFICATION	// ensure the autorange is at least <minRange> in size...
WITHOUT_CLASSIFICATION	// ensure the autorange is at least <minRange> in size...
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// even though the axis is not visible, we need ticks for the // gridlines...
WITHOUT_CLASSIFICATION	// look at lower and upper bounds...
WITHOUT_CLASSIFICATION	// draw the tick marks and labels...
WITHOUT_CLASSIFICATION	// TOP
WITHOUT_CLASSIFICATION	// BOTTOM
WITHOUT_CLASSIFICATION	// BOTTOM
WITHOUT_CLASSIFICATION	// LEFT
WITHOUT_CLASSIFICATION	// LEFT
WITHOUT_CLASSIFICATION	// RIGHT
WITHOUT_CLASSIFICATION	// RIGHT
WITHOUT_CLASSIFICATION	// first check that autoPopulate==false works as expected
WITHOUT_CLASSIFICATION	// default make height of plotArea
WITHOUT_CLASSIFICATION	// allow fixed thickness
WITHOUT_CLASSIFICATION	// update, but dont draw tick marks (needed for stepped colors)
WITHOUT_CLASSIFICATION	// suppresses compiler warnings
WITHOUT_CLASSIFICATION	// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());
WITHOUT_CLASSIFICATION	// calculate the adjusted data area taking into account the 3D effect...
WITHOUT_CLASSIFICATION	// argument checking delegated...
WITHOUT_CLASSIFICATION	// transparent
WITHOUT_CLASSIFICATION	//gets the outline stroke width of the plot
WITHOUT_CLASSIFICATION	// ensure that all the symbols are displayed
WITHOUT_CLASSIFICATION	// this ensure that the grid bands will be displayed correctly.
WITHOUT_CLASSIFICATION	// avoid to draw overlapping tick labels
WITHOUT_CLASSIFICATION	// avoid to draw overlapping tick labels
WITHOUT_CLASSIFICATION	// don't draw this tick label
WITHOUT_CLASSIFICATION	// don't draw this tick label
WITHOUT_CLASSIFICATION	// remember these values for next comparison
WITHOUT_CLASSIFICATION	// remember these values for next comparison
WITHOUT_CLASSIFICATION	// first check that autoPopulate==false works as expected
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// even though the axis is not visible, we need ticks for the // gridlines...
WITHOUT_CLASSIFICATION	// all tick labels have the same width (equal to the height of the // font)...
WITHOUT_CLASSIFICATION	// draw the category labels and axis label
WITHOUT_CLASSIFICATION	// create a new space object if one wasn't supplied...
WITHOUT_CLASSIFICATION	// if the axis is not visible, no additional space is required...
WITHOUT_CLASSIFICATION	// start with the current tick unit...
WITHOUT_CLASSIFICATION	// start with the current tick unit...
WITHOUT_CLASSIFICATION	// then extrapolate...
WITHOUT_CLASSIFICATION	// then extrapolate...
WITHOUT_CLASSIFICATION	// check a series with no items
WITHOUT_CLASSIFICATION	// must be top or bottom
WITHOUT_CLASSIFICATION	// catches null also
WITHOUT_CLASSIFICATION	// no action required.
WITHOUT_CLASSIFICATION	// no action required.
WITHOUT_CLASSIFICATION	// check if we need to collect chart entities from the container
WITHOUT_CLASSIFICATION	// place in this row (truncated) anyway
WITHOUT_CLASSIFICATION	// start new row
WITHOUT_CLASSIFICATION	//Block b = (Block) blocks.get(i);
WITHOUT_CLASSIFICATION	// can safely ignore
WITHOUT_CLASSIFICATION	// find optimum height, then map to range
WITHOUT_CLASSIFICATION	// find optimum height
WITHOUT_CLASSIFICATION	// find optimum height
WITHOUT_CLASSIFICATION	// find optimum height and map to range
WITHOUT_CLASSIFICATION	// find optimum width and map to range
WITHOUT_CLASSIFICATION	// check a series with no items
WITHOUT_CLASSIFICATION	// check a series with no items
WITHOUT_CLASSIFICATION	// since the flow layout is relatively straightforward, // no information needs to be recorded here
WITHOUT_CLASSIFICATION	// no action required.
WITHOUT_CLASSIFICATION	// first arrange without constraints, and see if this fits within // the required ranges...
WITHOUT_CLASSIFICATION	// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width
WITHOUT_CLASSIFICATION	// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width
WITHOUT_CLASSIFICATION	// check if we need to collect chart entities from the container
WITHOUT_CLASSIFICATION	//Block b = (Block) blocks.get(i);
WITHOUT_CLASSIFICATION	// this default implementation will just fill the available // border space with a single color
WITHOUT_CLASSIFICATION	// backgroundImage
WITHOUT_CLASSIFICATION	// fixed width
WITHOUT_CLASSIFICATION	// width is OK, but height must be constrained
WITHOUT_CLASSIFICATION	// height is OK, but width must be constrained
WITHOUT_CLASSIFICATION	// nothing to clear
WITHOUT_CLASSIFICATION	// if the area has zero height or width, we shouldn't draw anything
WITHOUT_CLASSIFICATION	// since the flow layout is relatively straightforward, no information // needs to be recorded here
WITHOUT_CLASSIFICATION	// place in this column (truncated) anyway
WITHOUT_CLASSIFICATION	// start new column
WITHOUT_CLASSIFICATION	// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default
WITHOUT_CLASSIFICATION	/* x-axis label*/
WITHOUT_CLASSIFICATION	/* y-axis label */
WITHOUT_CLASSIFICATION	// chart title // data // no legend // tooltips // no URL generation
WITHOUT_CLASSIFICATION	// check a series with one item
WITHOUT_CLASSIFICATION	// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************
WITHOUT_CLASSIFICATION	// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?
WITHOUT_CLASSIFICATION	// set a custom background for the chart
WITHOUT_CLASSIFICATION	// customise the title position and font
WITHOUT_CLASSIFICATION	// use gradients and white borders for the section colours
WITHOUT_CLASSIFICATION	// customise the section label appearance
WITHOUT_CLASSIFICATION	// add a subtitle giving the data source
WITHOUT_CLASSIFICATION	// pass to the super-class for handling
WITHOUT_CLASSIFICATION	// pass to the super-class for handling
WITHOUT_CLASSIFICATION	// pass to the super-class for handling
WITHOUT_CLASSIFICATION	// don't need to do anything
WITHOUT_CLASSIFICATION	// don't need to do anything
WITHOUT_CLASSIFICATION	//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;
WITHOUT_CLASSIFICATION	// figure out what type of axis we have and instantiate the // appropriate panel
WITHOUT_CLASSIFICATION	// Insets values
WITHOUT_CLASSIFICATION	// axis.setTickMarkStroke(getTickMarkStroke());
WITHOUT_CLASSIFICATION	// create a panel for the settings...
WITHOUT_CLASSIFICATION	//dmo: added this panel for colorbar control. (start dmo additions)
WITHOUT_CLASSIFICATION	//      end fix by rfuller
WITHOUT_CLASSIFICATION	//dmo: (end dmo additions)
WITHOUT_CLASSIFICATION	// set the plot properties...
WITHOUT_CLASSIFICATION	// then the axis properties...
WITHOUT_CLASSIFICATION	// pass to super-class for handling
WITHOUT_CLASSIFICATION	//  No op
WITHOUT_CLASSIFICATION	//  No op
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	//      fix by rfuller
WITHOUT_CLASSIFICATION	// populate the deprecated fields
WITHOUT_CLASSIFICATION	//same as for ChartEntity!
WITHOUT_CLASSIFICATION	//same as for ChartEntity!
WITHOUT_CLASSIFICATION	//same as for ChartEntity!
WITHOUT_CLASSIFICATION	// update the deprecated field
WITHOUT_CLASSIFICATION	// update the deprecated fields
WITHOUT_CLASSIFICATION	// check the deprecated fields
WITHOUT_CLASSIFICATION	// try the parent plot
WITHOUT_CLASSIFICATION	// do not notify while zooming each axis
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// this generates the change event too
WITHOUT_CLASSIFICATION	/* x-axis label*/
WITHOUT_CLASSIFICATION	/* y-axis label */
WITHOUT_CLASSIFICATION	// set a custom background for the chart
WITHOUT_CLASSIFICATION	// customise the title position and font
WITHOUT_CLASSIFICATION	// use gradients and white borders for the section colours
WITHOUT_CLASSIFICATION	// customise the section label appearance
WITHOUT_CLASSIFICATION	// add a subtitle giving the data source
WITHOUT_CLASSIFICATION	//same as for ChartEntity!
WITHOUT_CLASSIFICATION	//dmo added //dmo added
WITHOUT_CLASSIFICATION	// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip
WITHOUT_CLASSIFICATION	// check a series with two items
WITHOUT_CLASSIFICATION	// FIXME
WITHOUT_CLASSIFICATION	// this is a paint we don't recognise
WITHOUT_CLASSIFICATION	// null is handled fine here...
WITHOUT_CLASSIFICATION	// we can't do anything
WITHOUT_CLASSIFICATION	// force a redraw
WITHOUT_CLASSIFICATION	// pass on the event to the auxiliary handlers
WITHOUT_CLASSIFICATION	// pass on the event to the auxiliary handlers
WITHOUT_CLASSIFICATION	// relay the event from the canvas to our registered listeners
WITHOUT_CLASSIFICATION	// relay the event from the canvas to our registered listeners
WITHOUT_CLASSIFICATION	// set the default stroke for all series
WITHOUT_CLASSIFICATION	//this.chartPanel.isDomainZoomable()) {
WITHOUT_CLASSIFICATION	//this.chartPanel.isRangeZoomable()) {
WITHOUT_CLASSIFICATION	// does nothing unless overridden
WITHOUT_CLASSIFICATION	// does nothing unless overridden
WITHOUT_CLASSIFICATION	// does nothing unless overridden        
WITHOUT_CLASSIFICATION	// selected rectangle shouldn't extend outside the data area...
WITHOUT_CLASSIFICATION	// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true
WITHOUT_CLASSIFICATION	// chart title // data // no legend // tooltips // no URL generation
WITHOUT_CLASSIFICATION	// does nothing unless overridden
WITHOUT_CLASSIFICATION	// special case - if the underlying rectangle uses ints we // need to create one that uses doubles
WITHOUT_CLASSIFICATION	// title // x-axis label // y-axis label
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// check a series with four items
WITHOUT_CLASSIFICATION	// the actual panning occurs later in the mouseDragged() method
WITHOUT_CLASSIFICATION	//handle panning if we have a start point else unregister
WITHOUT_CLASSIFICATION	//if we have been panning reset the cursor //unregister in any case
WITHOUT_CLASSIFICATION	// the URL text should already have been escaped by the URL generator
WITHOUT_CLASSIFICATION	// no fields to test
WITHOUT_CLASSIFICATION	/// we have rotation huston, please spin me
WITHOUT_CLASSIFICATION	/// we have rotation huston, please spin me
WITHOUT_CLASSIFICATION	/// we have rotation
WITHOUT_CLASSIFICATION	/// we have rotation
WITHOUT_CLASSIFICATION	/// we have rotation
WITHOUT_CLASSIFICATION	// isArrowAtTop
WITHOUT_CLASSIFICATION	//int maxX = (int) (plotArea.getMaxX());
WITHOUT_CLASSIFICATION	//int maxX = (int) (plotArea.getMaxX());
WITHOUT_CLASSIFICATION	//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));
WITHOUT_CLASSIFICATION	//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));
WITHOUT_CLASSIFICATION	/// we have rotation houston, please spin me
WITHOUT_CLASSIFICATION	// horizontal
WITHOUT_CLASSIFICATION	// store the plot and its weight
WITHOUT_CLASSIFICATION	// configure the range axis...
WITHOUT_CLASSIFICATION	// work out the space required by the domain axis...
WITHOUT_CLASSIFICATION	// work out the maximum height or width of the non-shared axes...
WITHOUT_CLASSIFICATION	// we expect the line to be vertical or horizontal // vertical
WITHOUT_CLASSIFICATION	// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height
WITHOUT_CLASSIFICATION	// calculate sub-plot area
WITHOUT_CLASSIFICATION	// adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	// calculate the data area...
WITHOUT_CLASSIFICATION	// set the width and height of non-shared axis of all sub-plots
WITHOUT_CLASSIFICATION	// draw the shared axis
WITHOUT_CLASSIFICATION	// draw all the charts
WITHOUT_CLASSIFICATION	// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...
WITHOUT_CLASSIFICATION	// default preserves previous // behaviour
WITHOUT_CLASSIFICATION	// adjust for insets...
WITHOUT_CLASSIFICATION	// make the link area a square if the pie chart is to be circular... // is circular?
WITHOUT_CLASSIFICATION	// the link area defines the dog leg points for the linking lines to // the labels
WITHOUT_CLASSIFICATION	// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.
WITHOUT_CLASSIFICATION	// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.
WITHOUT_CLASSIFICATION	// the link area defines the dog-leg point for the linking lines to // the labels
WITHOUT_CLASSIFICATION	// get the data source - return if null;
WITHOUT_CLASSIFICATION	// if too any elements
WITHOUT_CLASSIFICATION	// get a list of keys...
WITHOUT_CLASSIFICATION	// do nothing by default.
WITHOUT_CLASSIFICATION	//g2.clip(clipArea);
WITHOUT_CLASSIFICATION	// if depth is negative don't draw anything
WITHOUT_CLASSIFICATION	// draw the bottom circle
WITHOUT_CLASSIFICATION	// draw the height
WITHOUT_CLASSIFICATION	// cycle through once drawing only the sides at the back...
WITHOUT_CLASSIFICATION	// cycle through again drawing only the sides at the front...
WITHOUT_CLASSIFICATION	// add a tooltip for the section...
WITHOUT_CLASSIFICATION	// @mgs: using the method's return value was missing
WITHOUT_CLASSIFICATION	// for CLOCKWISE charts, the extent will be negative...
WITHOUT_CLASSIFICATION	// start at front
WITHOUT_CLASSIFICATION	// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again
WITHOUT_CLASSIFICATION	// starts at the front, finishes at the back (going // around the left side)
WITHOUT_CLASSIFICATION	// the segment starts at the back (still extending // CLOCKWISE)
WITHOUT_CLASSIFICATION	// whole segment stays at the back
WITHOUT_CLASSIFICATION	// starts at the back, wraps around front, and // finishes at back again
WITHOUT_CLASSIFICATION	// starts at back, finishes at front (CLOCKWISE)
WITHOUT_CLASSIFICATION	// segment starts at the front
WITHOUT_CLASSIFICATION	// and finishes at the front
WITHOUT_CLASSIFICATION	// segment only occupies the front
WITHOUT_CLASSIFICATION	// segments wraps right around the back...
WITHOUT_CLASSIFICATION	// segments starts at front and finishes at back...
WITHOUT_CLASSIFICATION	// segment starts at back
WITHOUT_CLASSIFICATION	// and finishes at back
WITHOUT_CLASSIFICATION	//dmo //zero when the parameter is not set
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list of // change listeners...
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// plot is likely registered as a listener with the existing axis...
WITHOUT_CLASSIFICATION	// plot is likely registered as a listener with the existing axis...
WITHOUT_CLASSIFICATION	// if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	// record the plot area...
WITHOUT_CLASSIFICATION	// additional dataArea modifications //check whether modification is
WITHOUT_CLASSIFICATION	// ratio represents pixels
WITHOUT_CLASSIFICATION	// ratio represents axis units
WITHOUT_CLASSIFICATION	// draw the plot background...
WITHOUT_CLASSIFICATION	// draw vertical crosshair if required...
WITHOUT_CLASSIFICATION	// draw horizontal crosshair if required...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	// work out the space required by the domain axis...
WITHOUT_CLASSIFICATION	// delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...
WITHOUT_CLASSIFICATION	// get the data points
WITHOUT_CLASSIFICATION	// this is a new column
WITHOUT_CLASSIFICATION	// end of column
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	//              }
WITHOUT_CLASSIFICATION	// both axes
WITHOUT_CLASSIFICATION	// just the horizontal axis...
WITHOUT_CLASSIFICATION	// just the vertical axis...
WITHOUT_CLASSIFICATION	// check a series with repeating items
WITHOUT_CLASSIFICATION	// adjust for insets...
WITHOUT_CLASSIFICATION	// adjust the plot area by the interior spacing value
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	//turn off anti-aliasing when filling rectangles
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// both axes
WITHOUT_CLASSIFICATION	// just the horizontal axis...
WITHOUT_CLASSIFICATION	// just the vertical axis...
WITHOUT_CLASSIFICATION	// draw the background
WITHOUT_CLASSIFICATION	//Object oldValue = this.toolTipGenerator;
WITHOUT_CLASSIFICATION	//Object oldValue = this.urlGenerator;
WITHOUT_CLASSIFICATION	// plot the data (unless the dataset is null)...
WITHOUT_CLASSIFICATION	// the following relies on the fact that the intervals are immutable
WITHOUT_CLASSIFICATION	// intentionally blank
WITHOUT_CLASSIFICATION	// can't find any difference
WITHOUT_CLASSIFICATION	// we're doing this for testing only, and make sure that we // only add data in descending order by x-value
WITHOUT_CLASSIFICATION	// work out the maximum height or width of the non-shared axes...
WITHOUT_CLASSIFICATION	// calculate sub-plot area
WITHOUT_CLASSIFICATION	// calculate sub-plot area
WITHOUT_CLASSIFICATION	// set up info collection...
WITHOUT_CLASSIFICATION	// adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	// calculate the data area...
WITHOUT_CLASSIFICATION	// set the width and height of non-shared axis of all sub-plots
WITHOUT_CLASSIFICATION	// draw the shared axis
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list of // change listeners...
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// record the plot area...
WITHOUT_CLASSIFICATION	//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);
WITHOUT_CLASSIFICATION	// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...
WITHOUT_CLASSIFICATION	// draw all the subplots
WITHOUT_CLASSIFICATION	// override is only for documentation purposes
WITHOUT_CLASSIFICATION	// send a dataset change event to self to trigger plot change event
WITHOUT_CLASSIFICATION	// adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	// y is minor
WITHOUT_CLASSIFICATION	// y is minor
WITHOUT_CLASSIFICATION	//get major dimension
WITHOUT_CLASSIFICATION	//ellipse diameter is the minor dimension
WITHOUT_CLASSIFICATION	// draw the wafer
WITHOUT_CLASSIFICATION	// no data in the parent plot
WITHOUT_CLASSIFICATION	// set up info collection...
WITHOUT_CLASSIFICATION	// set the width and height of non-shared axis of all sub-plots
WITHOUT_CLASSIFICATION	// draw the shared axis
WITHOUT_CLASSIFICATION	// draw all the charts
WITHOUT_CLASSIFICATION	// adjust for insets...
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list of // change listeners...
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...
WITHOUT_CLASSIFICATION	//set upperLeft point // x is minor
WITHOUT_CLASSIFICATION	//set upperLeft point // x is minor
WITHOUT_CLASSIFICATION	// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down
WITHOUT_CLASSIFICATION	//this.axisOffset.trim(dataArea);
WITHOUT_CLASSIFICATION	//// SECTION PAINT ////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// is there an override?
WITHOUT_CLASSIFICATION	// if not, check if there is a paint defined for the specified key
WITHOUT_CLASSIFICATION	// if not, check if there is a paint defined for the specified key
WITHOUT_CLASSIFICATION	// nothing defined - do we autoPopulate?
WITHOUT_CLASSIFICATION	// nothing defined - do we autoPopulate?
WITHOUT_CLASSIFICATION	// null argument check delegated...
WITHOUT_CLASSIFICATION	// null argument check delegated...
WITHOUT_CLASSIFICATION	// null argument check delegated...
WITHOUT_CLASSIFICATION	//// SECTION OUTLINE PAINT ////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// SECTION OUTLINE STROKE ///////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// if not, check if there is a stroke defined for the specified key
WITHOUT_CLASSIFICATION	// adjust the plot area for interior spacing and labels...
WITHOUT_CLASSIFICATION	// make the link area a square if the pie chart is to be circular...
WITHOUT_CLASSIFICATION	// work out the space required by the domain axis...
WITHOUT_CLASSIFICATION	// work out the maximum height or width of the non-shared axes...
WITHOUT_CLASSIFICATION	// calculate sub-plot area
WITHOUT_CLASSIFICATION	// adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list of // change listeners...
WITHOUT_CLASSIFICATION	// plot the data (unless the dataset is null)...
WITHOUT_CLASSIFICATION	// no data in the parent plot
WITHOUT_CLASSIFICATION	// update the linking line target for later // add an entity for the pie section
WITHOUT_CLASSIFICATION	// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left
WITHOUT_CLASSIFICATION	// classify the keys according to which side the label will appear...
WITHOUT_CLASSIFICATION	// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...
WITHOUT_CLASSIFICATION	// draw the labels...
WITHOUT_CLASSIFICATION	// draw the right labels...
WITHOUT_CLASSIFICATION	//hh * getInteriorGap();
WITHOUT_CLASSIFICATION	// line not visible
WITHOUT_CLASSIFICATION	// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...
WITHOUT_CLASSIFICATION	// can't find any difference...
WITHOUT_CLASSIFICATION	// DEPRECATED FIELDS AND METHODS...
WITHOUT_CLASSIFICATION	// no range axis // no renderer
WITHOUT_CLASSIFICATION	// backgroundImage
WITHOUT_CLASSIFICATION	// set the width and height of non-shared axis of all sub-plots
WITHOUT_CLASSIFICATION	// draw the shared axis
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list of // change listeners...
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...
WITHOUT_CLASSIFICATION	// draw all the subplots
WITHOUT_CLASSIFICATION	// send a dataset change event to self to trigger plot change event
WITHOUT_CLASSIFICATION	// adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	// delegate 'state' and 'source' argument checks...
WITHOUT_CLASSIFICATION	// after setting up all the subplots, the shared domain axis may need // reconfiguring
WITHOUT_CLASSIFICATION	// 20% // 20% // 20%
WITHOUT_CLASSIFICATION	// create the bounds for the inner arc
WITHOUT_CLASSIFICATION	// calculate inner arc in reverse direction, for later // GeneralPath construction
WITHOUT_CLASSIFICATION	// add an entity for the pie section
WITHOUT_CLASSIFICATION	// check that there is some data to display...
WITHOUT_CLASSIFICATION	// the columns variable is always >= rows
WITHOUT_CLASSIFICATION	// swap rows and columns to match plotArea shape
WITHOUT_CLASSIFICATION	// update the section colors to match the global colors...
WITHOUT_CLASSIFICATION	// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...
WITHOUT_CLASSIFICATION	// column keys provide potential keys for individual pies
WITHOUT_CLASSIFICATION	// row keys provide potential keys for individual pies
WITHOUT_CLASSIFICATION	/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */
WITHOUT_CLASSIFICATION	// allocate storage for dataset, axes and renderers
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// calculate the data area...
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	// record the plot area...
WITHOUT_CLASSIFICATION	// adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	// set the anchor value for the range axis...
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	// fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	// the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	// the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	// get the legend items for the datasets...
WITHOUT_CLASSIFICATION	// this should never happen with the existing code, but throw // an exception in case future changes make it possible...
WITHOUT_CLASSIFICATION	// should be equal...
WITHOUT_CLASSIFICATION	// reserve some space for the domain axis...
WITHOUT_CLASSIFICATION	// reserve space for the primary domain axis...
WITHOUT_CLASSIFICATION	// reserve space for any domain axes...
WITHOUT_CLASSIFICATION	// reserve some space for the range axis...
WITHOUT_CLASSIFICATION	// reserve space for the range axes (if any)...
WITHOUT_CLASSIFICATION	// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes
WITHOUT_CLASSIFICATION	// if there is a renderer, it draws the background, otherwise use the // default background...
WITHOUT_CLASSIFICATION	// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...
WITHOUT_CLASSIFICATION	// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)
WITHOUT_CLASSIFICATION	// don't let anyone draw outside the data area
WITHOUT_CLASSIFICATION	// draw the markers...
WITHOUT_CLASSIFICATION	// now render data items...
WITHOUT_CLASSIFICATION	// set up the alpha-transparency...
WITHOUT_CLASSIFICATION	// if the flag is being set to true, there may be queued up changes...
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// draw the foreground markers...
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// draw the annotations (if any)...
WITHOUT_CLASSIFICATION	// draw domain crosshair if required...
WITHOUT_CLASSIFICATION	// draw range crosshair if required...
WITHOUT_CLASSIFICATION	// draw an outline around the plot area...
WITHOUT_CLASSIFICATION	// add domain axes to lists...
WITHOUT_CLASSIFICATION	// add range axes to lists...
WITHOUT_CLASSIFICATION	// draw the top axes
WITHOUT_CLASSIFICATION	// draw the bottom axes
WITHOUT_CLASSIFICATION	// draw the left axes
WITHOUT_CLASSIFICATION	// draw the right axes
WITHOUT_CLASSIFICATION	// draw the range grid lines, if any...
WITHOUT_CLASSIFICATION	// no renderer, no gridlines...
WITHOUT_CLASSIFICATION	// iterate through the datasets that map to the axis and get the union // of the ranges.
WITHOUT_CLASSIFICATION	// add the unique categories from this dataset
WITHOUT_CLASSIFICATION	// do nothing, because the plot is not pannable along the domain axes
WITHOUT_CLASSIFICATION	// can't zoom domain axis
WITHOUT_CLASSIFICATION	// delegate to other method
WITHOUT_CLASSIFICATION	// perform the zoom on each range axis
WITHOUT_CLASSIFICATION	// get the relevant source coordinate given the plot orientation
WITHOUT_CLASSIFICATION	// AxisLocation is immutable, so we can just copy the maps
WITHOUT_CLASSIFICATION	// not currently serialized
WITHOUT_CLASSIFICATION	// some subclasses override this method completely, so don't put // anything here that *must* be done
WITHOUT_CLASSIFICATION	// provides a 'no action' default
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	// record the plot area...
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// try the parent plot
WITHOUT_CLASSIFICATION	// fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.
WITHOUT_CLASSIFICATION	// the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	// no renderer, no gridlines...
WITHOUT_CLASSIFICATION	// iterate through the datasets that map to the axis and get the union // of the ranges.
WITHOUT_CLASSIFICATION	// create the dataset...
WITHOUT_CLASSIFICATION	// the above should cover all the options...
WITHOUT_CLASSIFICATION	// define the default locations for up to 8 axes...
WITHOUT_CLASSIFICATION	// normalize angle
WITHOUT_CLASSIFICATION	// draw the plot background and axes...
WITHOUT_CLASSIFICATION	// now for each dataset, get the renderer and the appropriate axis // and render the dataset...
WITHOUT_CLASSIFICATION	// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...
WITHOUT_CLASSIFICATION	// draw the domain grid lines, if any...
WITHOUT_CLASSIFICATION	// draw the radius grid lines, if any...
WITHOUT_CLASSIFICATION	// the datasets are not cloned, but listeners need to be added...
WITHOUT_CLASSIFICATION	// square
WITHOUT_CLASSIFICATION	// circle
WITHOUT_CLASSIFICATION	// up-pointing triangle
WITHOUT_CLASSIFICATION	// diamond
WITHOUT_CLASSIFICATION	// horizontal rectangle
WITHOUT_CLASSIFICATION	// down-pointing triangle
WITHOUT_CLASSIFICATION	// horizontal ellipse
WITHOUT_CLASSIFICATION	// right-pointing triangle
WITHOUT_CLASSIFICATION	// vertical rectangle
WITHOUT_CLASSIFICATION	// left-pointing triangle
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// adjust for insets...
WITHOUT_CLASSIFICATION	// adjust the plot area by the interior spacing value
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// send a dataset change event to self to trigger plot change event
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	//// SERIES PAINT /////////////////////////
WITHOUT_CLASSIFICATION	// otherwise look up the paint list
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	//// SERIES OUTLINE PAINT ////////////////////////////
WITHOUT_CLASSIFICATION	// otherwise look up the paint list
WITHOUT_CLASSIFICATION	// otherwise look up the paint list
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// ensure we have a maximum value to use on the axes
WITHOUT_CLASSIFICATION	//// SERIES OUTLINE STROKE /////////////////////
WITHOUT_CLASSIFICATION	// Next, setup the plot area
WITHOUT_CLASSIFICATION	// make the chart area a square
WITHOUT_CLASSIFICATION	// draw the axis and category label
WITHOUT_CLASSIFICATION	// 1 = end of axis
WITHOUT_CLASSIFICATION	// Now actually plot each of the series polygons..
WITHOUT_CLASSIFICATION	// plot the data...
WITHOUT_CLASSIFICATION	// draw the polygon series...
WITHOUT_CLASSIFICATION	// Finds our starting angle from the centre for this axis
WITHOUT_CLASSIFICATION	// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);
WITHOUT_CLASSIFICATION	// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon
WITHOUT_CLASSIFICATION	// put an elipse at the point being plotted..
WITHOUT_CLASSIFICATION	// Plot the polygon
WITHOUT_CLASSIFICATION	// set the anchor value for the horizontal axis...
WITHOUT_CLASSIFICATION	/* shapeFilled=*/
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// adjust for insets...
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// plot is likely registered as a listener with the existing axis...
WITHOUT_CLASSIFICATION	// if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	// record the plot area...
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// draw the background
WITHOUT_CLASSIFICATION	// plot the data (unless the dataset is null)...
WITHOUT_CLASSIFICATION	// adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	// fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.
WITHOUT_CLASSIFICATION	// reserve some space for the domain axis...
WITHOUT_CLASSIFICATION	// reserve some space for the range axis...
WITHOUT_CLASSIFICATION	// draw the plot background and axes...
WITHOUT_CLASSIFICATION	// check that a null dataset returns null bounds
WITHOUT_CLASSIFICATION	// Lastly, fill the web polygon if this is required
WITHOUT_CLASSIFICATION	// if series are in rows, then the categories are the column keys
WITHOUT_CLASSIFICATION	// if series are in columns, then the categories are the row keys
WITHOUT_CLASSIFICATION	//          negatives = true;
WITHOUT_CLASSIFICATION	//  value = Math.pow(10,value);
WITHOUT_CLASSIFICATION	//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;
WITHOUT_CLASSIFICATION	// super.setSeriesPaint(series, paint);
WITHOUT_CLASSIFICATION	/// Squares
WITHOUT_CLASSIFICATION	/// Draw N, S, E, W
WITHOUT_CLASSIFICATION	// no zooming possible
WITHOUT_CLASSIFICATION	// clone share data sets => add the clone as listener to the dataset
WITHOUT_CLASSIFICATION	// only relevant when this is a subplot
WITHOUT_CLASSIFICATION	// allocate storage for datasets, axes and renderers (all optional)
WITHOUT_CLASSIFICATION	// reserve space for the domain axes...
WITHOUT_CLASSIFICATION	// reserve space for the range axes...
WITHOUT_CLASSIFICATION	// the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	// the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	// draw domain crosshair if required...
WITHOUT_CLASSIFICATION	// draw range crosshair if required...
WITHOUT_CLASSIFICATION	// add domain axes to lists...
WITHOUT_CLASSIFICATION	// add range axes to lists...
WITHOUT_CLASSIFICATION	// draw the top axes
WITHOUT_CLASSIFICATION	// draw the bottom axes
WITHOUT_CLASSIFICATION	// draw the left axes
WITHOUT_CLASSIFICATION	// draw the right axes
WITHOUT_CLASSIFICATION	// draw the range grid lines, if any...
WITHOUT_CLASSIFICATION	// no renderer, no gridlines...
WITHOUT_CLASSIFICATION	// no renderer, no gridlines...
WITHOUT_CLASSIFICATION	// draw the domain grid lines, if any...
WITHOUT_CLASSIFICATION	// draw the markers that are associated with a specific dataset...
WITHOUT_CLASSIFICATION	// now draw annotations and render data items...
WITHOUT_CLASSIFICATION	// draw background annotations
WITHOUT_CLASSIFICATION	// render data items...
WITHOUT_CLASSIFICATION	// draw foreground annotations
WITHOUT_CLASSIFICATION	//  0 | 1 //  --+-- //  2 | 3
WITHOUT_CLASSIFICATION	// we can't draw quadrants without a valid x-axis
WITHOUT_CLASSIFICATION	// we can't draw quadrants without a valid y-axis
WITHOUT_CLASSIFICATION	// PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	// can't render anything without axes
WITHOUT_CLASSIFICATION	// no default renderer available
WITHOUT_CLASSIFICATION	//render series in reverse order
WITHOUT_CLASSIFICATION	//render series in forward order
WITHOUT_CLASSIFICATION	// use the TextTitle class because it is a concrete subclass
WITHOUT_CLASSIFICATION	// set up info collection...
WITHOUT_CLASSIFICATION	// adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	// try the parent plot
WITHOUT_CLASSIFICATION	// try the parent plot
WITHOUT_CLASSIFICATION	// iterate through the datasets that map to the axis and get the union // of the ranges.
WITHOUT_CLASSIFICATION	// delegate to other method
WITHOUT_CLASSIFICATION	// delegate to other method
WITHOUT_CLASSIFICATION	// perform the zoom on each range axis
WITHOUT_CLASSIFICATION	// get the relevant source coordinate given the plot orientation
WITHOUT_CLASSIFICATION	// get the relevant source coordinate given the plot orientation
WITHOUT_CLASSIFICATION	// draw the plot background and axes...
WITHOUT_CLASSIFICATION	// the datasets are not cloned, but listeners need to be added...
WITHOUT_CLASSIFICATION	// if the event was caused by a change to series visibility, then // the axis ranges might need updating...
WITHOUT_CLASSIFICATION	// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)
WITHOUT_CLASSIFICATION	// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)
WITHOUT_CLASSIFICATION	// set the anchor value for the vertical axis...
WITHOUT_CLASSIFICATION	// grab the plot's annotations
WITHOUT_CLASSIFICATION	// is it a domain axis?
WITHOUT_CLASSIFICATION	// or is it a range axis?
WITHOUT_CLASSIFICATION	// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;
WITHOUT_CLASSIFICATION	// register the plot as a listener with its axes, datasets, and // renderers...
WITHOUT_CLASSIFICATION	// perform the zoom on each domain axis
WITHOUT_CLASSIFICATION	// lineVisible
WITHOUT_CLASSIFICATION	// adjust for insets...
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// draw the background
WITHOUT_CLASSIFICATION	// intentionally blank
WITHOUT_CLASSIFICATION	// get the source coordinate - this plot has always a VERTICAL // orientation
WITHOUT_CLASSIFICATION	// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?
WITHOUT_CLASSIFICATION	//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list // of change listeners...
WITHOUT_CLASSIFICATION	// plot is registered as a listener with the existing axis...
WITHOUT_CLASSIFICATION	// adjust for padding...
WITHOUT_CLASSIFICATION	// already calculated // already calculated
WITHOUT_CLASSIFICATION	// draw range indicators...
WITHOUT_CLASSIFICATION	// draw start of normal range
WITHOUT_CLASSIFICATION	// draw start of warning range
WITHOUT_CLASSIFICATION	// draw start of critical range
WITHOUT_CLASSIFICATION	// draw the axis...
WITHOUT_CLASSIFICATION	//cursor = midX - COLUMN_RADIUS - AXIS_GAP;
WITHOUT_CLASSIFICATION	// draw text value on screen
WITHOUT_CLASSIFICATION	//  draw units indicator
WITHOUT_CLASSIFICATION	// draw thermometer outline
WITHOUT_CLASSIFICATION	// no domain axis to zoom
WITHOUT_CLASSIFICATION	// work out the anchor point
WITHOUT_CLASSIFICATION	// calculate the bounds of the template value
WITHOUT_CLASSIFICATION	// align this rectangle to the frameAnchor
WITHOUT_CLASSIFICATION	// add the insets
WITHOUT_CLASSIFICATION	// draw the border
WITHOUT_CLASSIFICATION	// now find the text anchor point
WITHOUT_CLASSIFICATION	/* lineVisible= */
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// otherwise look up the paint list
WITHOUT_CLASSIFICATION	// work out the anchor point
WITHOUT_CLASSIFICATION	// urlText
WITHOUT_CLASSIFICATION	// first, expand the viewing area into a drawing frame
WITHOUT_CLASSIFICATION	// draw the background if there is one...
WITHOUT_CLASSIFICATION	// draw the pointers
WITHOUT_CLASSIFICATION	// draw the cap if there is one...
WITHOUT_CLASSIFICATION	// now do the minor tick marks
WITHOUT_CLASSIFICATION	// lowerBound
WITHOUT_CLASSIFICATION	// upperBound
WITHOUT_CLASSIFICATION	// startAngle
WITHOUT_CLASSIFICATION	// extent
WITHOUT_CLASSIFICATION	// tickRadius
WITHOUT_CLASSIFICATION	// we don't clone the listeners
WITHOUT_CLASSIFICATION	// use item paint for fills by default
WITHOUT_CLASSIFICATION	// draw the outline of the filled polygon
WITHOUT_CLASSIFICATION	// just the lines, no filling
WITHOUT_CLASSIFICATION	// draw the item shapes
WITHOUT_CLASSIFICATION	// SERIES VISIBLE (not yet respected by all renderers)
WITHOUT_CLASSIFICATION	// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)
WITHOUT_CLASSIFICATION	// PAINT
WITHOUT_CLASSIFICATION	//// FILL PAINT //////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// otherwise look up the paint table
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...
WITHOUT_CLASSIFICATION	// otherwise look up the paint table
WITHOUT_CLASSIFICATION	// otherwise look up the paint table
WITHOUT_CLASSIFICATION	// OUTLINE PAINT //////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// STROKE
WITHOUT_CLASSIFICATION	// OUTLINE STROKE
WITHOUT_CLASSIFICATION	// otherwise look up the stroke table
WITHOUT_CLASSIFICATION	// SHAPE
WITHOUT_CLASSIFICATION	// otherwise look up the shape list
WITHOUT_CLASSIFICATION	// ITEM LABEL VISIBILITY...
WITHOUT_CLASSIFICATION	// otherwise look up the boolean table
WITHOUT_CLASSIFICATION	// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.
WITHOUT_CLASSIFICATION	//// ITEM LABEL FONT //////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// ITEM LABEL PAINT  ////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// POSITIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	// otherwise look up the position table
WITHOUT_CLASSIFICATION	// NEGATIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	// otherwise look up the position list
WITHOUT_CLASSIFICATION	// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...
WITHOUT_CLASSIFICATION	// 'paint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'basePaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'outlinePaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseOutlinePaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'stroke' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseStroke' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...
WITHOUT_CLASSIFICATION	// 'basePaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// shapeList // baseShape
WITHOUT_CLASSIFICATION	// 'outlineStroke' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseOutlineStroke' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'itemLabelsVisible' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'itemLabelFont' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseItemLabelFont' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'itemLabelPaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseItemLabelPaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'postiveItemLabelAnchor' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseItemLabelAnchor' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'negativeItemLabelAnchor' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// listeners are not restored automatically, but storage must be // provided...
WITHOUT_CLASSIFICATION	// === DEPRECATED CODE ===
WITHOUT_CLASSIFICATION	// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));
WITHOUT_CLASSIFICATION	//System.err.print(" creating new outlier list ");
WITHOUT_CLASSIFICATION	//// TOOL TIP GENERATOR ///////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// URL GENERATOR ////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// handle value outside bounds...
WITHOUT_CLASSIFICATION	// handle special case where value is less that item zero
WITHOUT_CLASSIFICATION	// special case where the lowest x-value is >= xLow
WITHOUT_CLASSIFICATION	// special case where the highest x-value is < xLow
WITHOUT_CLASSIFICATION	// skip any items that don't need including...
WITHOUT_CLASSIFICATION	// skip any items that don't need including...
WITHOUT_CLASSIFICATION	// assign a color for each unique value
WITHOUT_CLASSIFICATION	// assign a color for each unique value
WITHOUT_CLASSIFICATION	// in this case, every color has a unique value
WITHOUT_CLASSIFICATION	// in this case, every color has a range of values
WITHOUT_CLASSIFICATION	// end class wafermaprenderer
WITHOUT_CLASSIFICATION	// if there is no plot, there is no dataset to access...
WITHOUT_CLASSIFICATION	// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...
WITHOUT_CLASSIFICATION	// when the x-values are descending, the upper bound is found by // comparing against xLow
WITHOUT_CLASSIFICATION	// more values than paints so map // multiple values to the same color
WITHOUT_CLASSIFICATION	// end foreach map entry // end else
WITHOUT_CLASSIFICATION	// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...
WITHOUT_CLASSIFICATION	// FIXME: calculate xxLeft and xxRight
WITHOUT_CLASSIFICATION	// handle positive value
WITHOUT_CLASSIFICATION	// LEFT POLYGON
WITHOUT_CLASSIFICATION	// LEFT POLYGON
WITHOUT_CLASSIFICATION	// RIGHT POLYGON
WITHOUT_CLASSIFICATION	// RIGHT POLYGON
WITHOUT_CLASSIFICATION	// handle negative value
WITHOUT_CLASSIFICATION	// calculate the bar width
WITHOUT_CLASSIFICATION	// '+' because v is negative
WITHOUT_CLASSIFICATION	// handle rendering separately for the two plot orientations...
WITHOUT_CLASSIFICATION	// draw the blocks
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// SHAPES VISIBLE
WITHOUT_CLASSIFICATION	// SHAPES FILLED
WITHOUT_CLASSIFICATION	// otherwise look up the paint table
WITHOUT_CLASSIFICATION	// a list to store the series index and bar region, so we can draw // all the labels at the end...
WITHOUT_CLASSIFICATION	// draw the blocks
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// LINES VISIBLE
WITHOUT_CLASSIFICATION	// preserves old behaviour
WITHOUT_CLASSIFICATION	// contained titles
WITHOUT_CLASSIFICATION	// SHAPES FILLED
WITHOUT_CLASSIFICATION	// return the overall setting, if there is one...
WITHOUT_CLASSIFICATION	// delegate
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// do nothing if both the line and shape are not visible
WITHOUT_CLASSIFICATION	// nothing is drawn for null...
WITHOUT_CLASSIFICATION	// current data point...
WITHOUT_CLASSIFICATION	// current data point...
WITHOUT_CLASSIFICATION	// previous data point...
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	// set the default item label positions
WITHOUT_CLASSIFICATION	// fill background...
WITHOUT_CLASSIFICATION	// highlight the background corners...
WITHOUT_CLASSIFICATION	// draw background image, if there is one...
WITHOUT_CLASSIFICATION	// both axes
WITHOUT_CLASSIFICATION	// === DEPRECATED CODE ===
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// cases 5, 6, 7 and 8
WITHOUT_CLASSIFICATION	// put an outline around the data area...
WITHOUT_CLASSIFICATION	// check the value we are plotting...
WITHOUT_CLASSIFICATION	// the bar is not visible
WITHOUT_CLASSIFICATION	// draw the bar...
WITHOUT_CLASSIFICATION	// ITEM LABEL GENERATOR
WITHOUT_CLASSIFICATION	// return the generator for ALL series, if there is one...
WITHOUT_CLASSIFICATION	// return the generator for ALL series, if there is one...
WITHOUT_CLASSIFICATION	// otherwise look up the generator table
WITHOUT_CLASSIFICATION	// otherwise look up the generator table
WITHOUT_CLASSIFICATION	// TOOL TIP GENERATOR
WITHOUT_CLASSIFICATION	// URL GENERATOR
WITHOUT_CLASSIFICATION	// clip left and right bounds to data area
WITHOUT_CLASSIFICATION	// clip top and bottom bounds to data area
WITHOUT_CLASSIFICATION	// now draw the outlines, if visible...
WITHOUT_CLASSIFICATION	// PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	// check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	// defensive check
WITHOUT_CLASSIFICATION	// BAR Y
WITHOUT_CLASSIFICATION	// BAR X
WITHOUT_CLASSIFICATION	// cases 1, 2, 3 and 4
WITHOUT_CLASSIFICATION	// you can add a null list - it would have been better if this // required EMPTY_LIST
WITHOUT_CLASSIFICATION	// BAR Y
WITHOUT_CLASSIFICATION	// BAR X
WITHOUT_CLASSIFICATION	// cases 1, 2, 3 and 4
WITHOUT_CLASSIFICATION	// let the superclass handle it...
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// cases 5, 6, 7 and 8
WITHOUT_CLASSIFICATION	// cases 5, 6, 7 and 8
WITHOUT_CLASSIFICATION	// cases 9, 10, 11 and 12
WITHOUT_CLASSIFICATION	// cases 9, 10, 11 and 12
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// standard deviation lines
WITHOUT_CLASSIFICATION	// standard deviation lines
WITHOUT_CLASSIFICATION	// no new methods
WITHOUT_CLASSIFICATION	// value 0
WITHOUT_CLASSIFICATION	// get the clipping values...
WITHOUT_CLASSIFICATION	// submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	// submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	// draw the bar...
WITHOUT_CLASSIFICATION	// cases 1, 2, 3 and 4
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// cases 5, 6, 7 and 8
WITHOUT_CLASSIFICATION	// cases 9, 10, 11 and 12
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// if we modify the original list, it's best if the URL generator is // not affected
WITHOUT_CLASSIFICATION	// value 1
WITHOUT_CLASSIFICATION	// DRAW THE BARS...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// Y0
WITHOUT_CLASSIFICATION	// Y1
WITHOUT_CLASSIFICATION	// nothing is drawn for null values...
WITHOUT_CLASSIFICATION	// X
WITHOUT_CLASSIFICATION	// Y
WITHOUT_CLASSIFICATION	// subtitle 1 is the legend
WITHOUT_CLASSIFICATION	// calculate the bar width
WITHOUT_CLASSIFICATION	// draw the bar...
WITHOUT_CLASSIFICATION	// BAR Y
WITHOUT_CLASSIFICATION	// BAR X
WITHOUT_CLASSIFICATION	// cases 1, 2, 3 and 4
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// cases 9, 10, 11 and 12
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// nothing is drawn for null values...
WITHOUT_CLASSIFICATION	// nothing is drawn for null values...
WITHOUT_CLASSIFICATION	// the clone contains a reference to a CLONE of the original object
WITHOUT_CLASSIFICATION	// draw the item labels if there are any...
WITHOUT_CLASSIFICATION	// calculate bar width...
WITHOUT_CLASSIFICATION	// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
WITHOUT_CLASSIFICATION	// no fields to compute...
WITHOUT_CLASSIFICATION	//plotBackgroundPaint;
WITHOUT_CLASSIFICATION	// PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	// calculate the bar width
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	// submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// the bar is not visible
WITHOUT_CLASSIFICATION	// draw the bar...
WITHOUT_CLASSIFICATION	// check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	// check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	// check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// nothing is drawn for null values...
WITHOUT_CLASSIFICATION	// draw the item labels if there are any...
WITHOUT_CLASSIFICATION	// calculate bar width...
WITHOUT_CLASSIFICATION	// check that clone is independent of the original
WITHOUT_CLASSIFICATION	// do nothing if item is not visible or null
WITHOUT_CLASSIFICATION	// 100 percent, so it will not apply unless changed
WITHOUT_CLASSIFICATION	// work out the label anchor point...
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// current data point...
WITHOUT_CLASSIFICATION	// current data point...
WITHOUT_CLASSIFICATION	// previous data point...
WITHOUT_CLASSIFICATION	// draw the item labels if there are any...
WITHOUT_CLASSIFICATION	// check key order
WITHOUT_CLASSIFICATION	// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar
WITHOUT_CLASSIFICATION	// switch x and y
WITHOUT_CLASSIFICATION	// or: x1s + 2*(x1-x1s)
WITHOUT_CLASSIFICATION	// or: x0s + 2*(x0-x0s)
WITHOUT_CLASSIFICATION	// extend x0's flat bar
WITHOUT_CLASSIFICATION	// upright bar
WITHOUT_CLASSIFICATION	// x1's flat bar
WITHOUT_CLASSIFICATION	//standard deviation lines
WITHOUT_CLASSIFICATION	//// OUTLINE PAINT /////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//plotOutlinePaint;
WITHOUT_CLASSIFICATION	// check key order
WITHOUT_CLASSIFICATION	// check key order
WITHOUT_CLASSIFICATION	// previous data point...
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// BAR Y
WITHOUT_CLASSIFICATION	// BAR X
WITHOUT_CLASSIFICATION	// Y0
WITHOUT_CLASSIFICATION	// Y1
WITHOUT_CLASSIFICATION	// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour
WITHOUT_CLASSIFICATION	// BAR WIDTH
WITHOUT_CLASSIFICATION	// BAR HEIGHT
WITHOUT_CLASSIFICATION	// there are no fields to check
WITHOUT_CLASSIFICATION	/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */
WITHOUT_CLASSIFICATION	//// PAINT /////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesPaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	// FIXME: add setBasePaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	//// FILL PAINT /////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// POSITIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	// NEGATIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	// ITEM LABEL GENERATOR
WITHOUT_CLASSIFICATION	// TOOL TIP GENERATOR
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesPaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	// ITEM LABELS VISIBLE
WITHOUT_CLASSIFICATION	// FIXME: add setBaseOutlinePaint(Paint, boolean)?
WITHOUT_CLASSIFICATION	//// STROKE ////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesStroke(int, Stroke, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseStroke(Stroke, boolean) ?
WITHOUT_CLASSIFICATION	//// OUTLINE STROKE ////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?
WITHOUT_CLASSIFICATION	//// SHAPE /////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesShape(int, Shape, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseShape(Shape, boolean) ?
WITHOUT_CLASSIFICATION	// check retrieve value by key
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)
WITHOUT_CLASSIFICATION	// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?
WITHOUT_CLASSIFICATION	//// ITEM LABEL FONT  //////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseItemLabelFont(Font, boolean) ?
WITHOUT_CLASSIFICATION	//// ITEM LABEL PAINT  /////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?
WITHOUT_CLASSIFICATION	// ITEM URL GENERATOR
WITHOUT_CLASSIFICATION	// as a special case, if the bar colour has alpha == 0, we draw // nothing.
WITHOUT_CLASSIFICATION	/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/
WITHOUT_CLASSIFICATION	// standard ResourceBundle behaviour
WITHOUT_CLASSIFICATION	// check retrieve value by key
WITHOUT_CLASSIFICATION	// nothing is drawn for null...
WITHOUT_CLASSIFICATION	// current data point...
WITHOUT_CLASSIFICATION	// previous data point...
WITHOUT_CLASSIFICATION	// previous data point...
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	// fill background...
WITHOUT_CLASSIFICATION	// draw background image, if there is one...
WITHOUT_CLASSIFICATION	// put an outline around the data area...
WITHOUT_CLASSIFICATION	// draw the bar...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// nothing is drawn for null values...
WITHOUT_CLASSIFICATION	// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow
WITHOUT_CLASSIFICATION	// 100 percent, so it will not apply unless // changed
WITHOUT_CLASSIFICATION	// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer
WITHOUT_CLASSIFICATION	// first check the number we are plotting...
WITHOUT_CLASSIFICATION	// reset the min and max
WITHOUT_CLASSIFICATION	// connect to the previous point
WITHOUT_CLASSIFICATION	// create a line renderer only
WITHOUT_CLASSIFICATION	// higlight the background corners...
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// Y0
WITHOUT_CLASSIFICATION	// Y1
WITHOUT_CLASSIFICATION	// nothing is drawn for null values...
WITHOUT_CLASSIFICATION	// BAR WIDTH
WITHOUT_CLASSIFICATION	// BAR HEIGHT
WITHOUT_CLASSIFICATION	// we'll set this to false if there is at // least one non-null data item...
WITHOUT_CLASSIFICATION	// set the default item label positions, which will only be used if // the user requests visible item labels...
WITHOUT_CLASSIFICATION	// treat the last column value as an absolute
WITHOUT_CLASSIFICATION	// only needed if calculating percentages
WITHOUT_CLASSIFICATION	// calculate the box width
WITHOUT_CLASSIFICATION	// offset the start of the boxes if the total width used is smaller // than the category width
WITHOUT_CLASSIFICATION	// offset the start of the box if the box width is smaller than // the category width
WITHOUT_CLASSIFICATION	// draw the box...
WITHOUT_CLASSIFICATION	// draw the upper shadow...
WITHOUT_CLASSIFICATION	// draw the lower shadow...
WITHOUT_CLASSIFICATION	// FIXME: add setBasePaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	// offset the start of the boxes if the total width used is smaller // than the category width
WITHOUT_CLASSIFICATION	// draw the upper shadow...
WITHOUT_CLASSIFICATION	// draw the lower shadow...
WITHOUT_CLASSIFICATION	// here we check that the average marker will in fact be // visible before drawing it...
WITHOUT_CLASSIFICATION	// draw mean - SPECIAL AIMS REQUIREMENT...
WITHOUT_CLASSIFICATION	// average radius
WITHOUT_CLASSIFICATION	// average radius
WITHOUT_CLASSIFICATION	// check retrieve value by index
WITHOUT_CLASSIFICATION	// draw median...
WITHOUT_CLASSIFICATION	// draw median...
WITHOUT_CLASSIFICATION	// offset the start of the box if the box width is smaller than the // category width
WITHOUT_CLASSIFICATION	// draw the body...
WITHOUT_CLASSIFICATION	// draw yOutliers...
WITHOUT_CLASSIFICATION	// draw farout indicators
WITHOUT_CLASSIFICATION	// start from Y = rangeBase
WITHOUT_CLASSIFICATION	// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made
WITHOUT_CLASSIFICATION	// disable visible items optimisation - it doesn't work for this // renderer...
WITHOUT_CLASSIFICATION	// Get the item count for the series, so that we can know which is the // end of the series.
WITHOUT_CLASSIFICATION	// avoid possible sun.dc.pr.PRException: endPath: bad path
WITHOUT_CLASSIFICATION	// Create a new Area for the series
WITHOUT_CLASSIFICATION	// The first point is (x, this.baseYValue)
WITHOUT_CLASSIFICATION	// get the previous data point...
WITHOUT_CLASSIFICATION	// not just a horizontal bar but need to perform a 'step'.
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// avoid possible sun.dc.pr.PRException: endPath: bad path
WITHOUT_CLASSIFICATION	// retrieve an item
WITHOUT_CLASSIFICATION	// Add each point to Area (x, y)
WITHOUT_CLASSIFICATION	// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.
WITHOUT_CLASSIFICATION	// Add the last point (x,0)
WITHOUT_CLASSIFICATION	// fill the polygon
WITHOUT_CLASSIFICATION	// draw an outline around the Area.
WITHOUT_CLASSIFICATION	// start new area when needed (see above)
WITHOUT_CLASSIFICATION	// do nothing...this is just a hook for subclasses
WITHOUT_CLASSIFICATION	// TODO getSeriesShape(n).getBounds().width / 2;
WITHOUT_CLASSIFICATION	// TODO getSeriesShape(n).getBounds().height / 2;
WITHOUT_CLASSIFICATION	// can't draw anything
WITHOUT_CLASSIFICATION	// draw optional guide lines
WITHOUT_CLASSIFICATION	// calculate the arrow head and draw it...
WITHOUT_CLASSIFICATION	// orientation is HORIZONTAL
WITHOUT_CLASSIFICATION	//labelLinkStyle;
WITHOUT_CLASSIFICATION	// request width index == itemCount
WITHOUT_CLASSIFICATION	// check if either series is a degenerate case (i.e. less than 2 points)
WITHOUT_CLASSIFICATION	// check if series are disjoint (i.e. domain-spans do not overlap)
WITHOUT_CLASSIFICATION	// polygon definitions
WITHOUT_CLASSIFICATION	// state
WITHOUT_CLASSIFICATION	// actual value set below
WITHOUT_CLASSIFICATION	// if a subtrahend is not specified, assume it is zero
WITHOUT_CLASSIFICATION	// fast-forward through leading tails
WITHOUT_CLASSIFICATION	// get the x and y coordinates
WITHOUT_CLASSIFICATION	// minuend needs to be fast forwarded
WITHOUT_CLASSIFICATION	// subtrahend needs to be fast forwarded
WITHOUT_CLASSIFICATION	// project onto subtrahend
WITHOUT_CLASSIFICATION	// project onto minuend
WITHOUT_CLASSIFICATION	// start of algorithm
WITHOUT_CLASSIFICATION	// this won't happen :)
WITHOUT_CLASSIFICATION	// deassert b_*FastForward (only matters for 1st time through loop)
WITHOUT_CLASSIFICATION	// check for intersect
WITHOUT_CLASSIFICATION	// check if line segments are colinear
WITHOUT_CLASSIFICATION	// compute common denominator
WITHOUT_CLASSIFICATION	// compute common deltas
WITHOUT_CLASSIFICATION	// compute numerators
WITHOUT_CLASSIFICATION	// check if previously colinear
WITHOUT_CLASSIFICATION	// clear colinear points and flag
WITHOUT_CLASSIFICATION	// set new starting point for the polygon
WITHOUT_CLASSIFICATION	// compute slope components
WITHOUT_CLASSIFICATION	// test if both grahphs have a vertical rise at the same x-value
WITHOUT_CLASSIFICATION	// check if the line segments intersect
WITHOUT_CLASSIFICATION	// compute the point of intersection
WITHOUT_CLASSIFICATION	// advance minuend and subtrahend to intesect
WITHOUT_CLASSIFICATION	// add intersection point to the polygon
WITHOUT_CLASSIFICATION	// add the subtrahend's points to the polygon in reverse
WITHOUT_CLASSIFICATION	// create an actual polygon
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// draw an outline around the Area.
WITHOUT_CLASSIFICATION	// project onto subtrahend
WITHOUT_CLASSIFICATION	// project onto minuend
WITHOUT_CLASSIFICATION	// add the subtrahend's points to the polygon in reverse
WITHOUT_CLASSIFICATION	// create an actual polygon
WITHOUT_CLASSIFICATION	// set the maxY and minY values to intersect y-value
WITHOUT_CLASSIFICATION	// add interection point to new polygon
WITHOUT_CLASSIFICATION	// advance the minuend if needed
WITHOUT_CLASSIFICATION	// advance the subtrahend if needed
WITHOUT_CLASSIFICATION	// check if the final polygon needs to be clipped
WITHOUT_CLASSIFICATION	// consider last point of minuend and subtrahend for determining // positivity
WITHOUT_CLASSIFICATION	// add the last point of the minuned and subtrahend
WITHOUT_CLASSIFICATION	// vertical orientation
WITHOUT_CLASSIFICATION	//// VISIBLE //////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// PAINT ////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseOutlinePaint(Paint, boolean)?
WITHOUT_CLASSIFICATION	// create the polygon // add the minuend's points to polygon
WITHOUT_CLASSIFICATION	// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.
WITHOUT_CLASSIFICATION	//// OUTLINE PAINT ////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// bad axisNumber
WITHOUT_CLASSIFICATION	// a Range object cannot be equal to a different object type
WITHOUT_CLASSIFICATION	// POSITIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	// NEGATIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	//// TOOL TIP GENERATOR ///////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// URL GENERATOR ////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesStroke(int, Stroke, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseStroke(Stroke, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesShape(int, Shape, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseShape(Shape, boolean) ?
WITHOUT_CLASSIFICATION	// allowDuplicateXValues
WITHOUT_CLASSIFICATION	//// STROKE ///////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// OUTLINE STROKE ///////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// SHAPE ////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// LEGEND ITEMS /////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// ITEM LABEL GENERATOR /////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME:
WITHOUT_CLASSIFICATION	//// ITEM LABEL FONT ///////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// ANNOTATIONS //////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// DRAWING //////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// DEPRECATED METHODS
WITHOUT_CLASSIFICATION	// need to handle cluster centering as a special case
WITHOUT_CLASSIFICATION	// may be negative
WITHOUT_CLASSIFICATION	/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// Create a new Area for the series
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// add a value
WITHOUT_CLASSIFICATION	// first pass draws the shading
WITHOUT_CLASSIFICATION	// last item in series, draw the lot... // set up the alpha-transparency...
WITHOUT_CLASSIFICATION	// second pass adds shapes where the items are ..
WITHOUT_CLASSIFICATION	// return straight away if the item is not visible
WITHOUT_CLASSIFICATION	// add an entity if this info is being collected
WITHOUT_CLASSIFICATION	//  Get height adjustment based on stack and translate to Java2D values
WITHOUT_CLASSIFICATION	//  Get series Paint and Stroke
WITHOUT_CLASSIFICATION	//  On first pass render the areas, line and outlines
WITHOUT_CLASSIFICATION	// start from previous height (ph1)
WITHOUT_CLASSIFICATION	// should not get here
WITHOUT_CLASSIFICATION	// use item paint for fills by default
WITHOUT_CLASSIFICATION	// === DEPRECATED CODE ===
WITHOUT_CLASSIFICATION	// LINES VISIBLE
WITHOUT_CLASSIFICATION	// SHAPES VISIBLE
WITHOUT_CLASSIFICATION	// SHAPES FILLED
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// Get the item count for the series, so that we can know which is the // end of the series.
WITHOUT_CLASSIFICATION	// get the previous data point...
WITHOUT_CLASSIFICATION	// Add each point to Area (x, y)
WITHOUT_CLASSIFICATION	// Add the last point (x,0)
WITHOUT_CLASSIFICATION	// Add the last point (x,0)
WITHOUT_CLASSIFICATION	// add another value
WITHOUT_CLASSIFICATION	// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only
WITHOUT_CLASSIFICATION	// The first point is (x, 0)
WITHOUT_CLASSIFICATION	//  Fill the polygon
WITHOUT_CLASSIFICATION	//  Draw an outline around the Area.
WITHOUT_CLASSIFICATION	// first pass draws the background (lines, for instance)
WITHOUT_CLASSIFICATION	//labelLinkPaint;
WITHOUT_CLASSIFICATION	// only draw if we have good values
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// get the data points
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// second pass adds shapes where the items are ..
WITHOUT_CLASSIFICATION	// Add points from last series to complete the base of the // polygon
WITHOUT_CLASSIFICATION	// On second pass render shapes and collect entity and tooltip // information
WITHOUT_CLASSIFICATION	// update path to reflect latest point
WITHOUT_CLASSIFICATION	// if this is the last item, draw the path ...
WITHOUT_CLASSIFICATION	// draw path
WITHOUT_CLASSIFICATION	// Collect points
WITHOUT_CLASSIFICATION	// construct path
WITHOUT_CLASSIFICATION	// we need at least two points to draw something
WITHOUT_CLASSIFICATION	// we need at least 3 points to spline. Draw simple line // for two points
WITHOUT_CLASSIFICATION	// construct spline // number of points // Newton form coefficients // x-coordinates of nodes
WITHOUT_CLASSIFICATION	// note that a[0]=a[np-1]=0
WITHOUT_CLASSIFICATION	// loop over intervals between nodes
WITHOUT_CLASSIFICATION	// we're running on JRE 1.3.1 so this is the best we have...
WITHOUT_CLASSIFICATION	// both axes
WITHOUT_CLASSIFICATION	// ITEM LABEL GENERATOR
WITHOUT_CLASSIFICATION	// return the generator for ALL series, if there is one...
WITHOUT_CLASSIFICATION	// return the generator for ALL series, if there is one...
WITHOUT_CLASSIFICATION	// otherwise look up the generator table
WITHOUT_CLASSIFICATION	// otherwise look up the generator table
WITHOUT_CLASSIFICATION	// TOOL TIP GENERATOR
WITHOUT_CLASSIFICATION	// URL GENERATOR
WITHOUT_CLASSIFICATION	// clip top and bottom bounds to data area
WITHOUT_CLASSIFICATION	// clip top and bottom bounds to data area
WITHOUT_CLASSIFICATION	// now draw the outlines, if visible...
WITHOUT_CLASSIFICATION	// now draw the outlines, if visible...
WITHOUT_CLASSIFICATION	// PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	// PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	// work out the label anchor point...
WITHOUT_CLASSIFICATION	// map a key to the default group
WITHOUT_CLASSIFICATION	// Add last point @ y=0 for fillPath and close path
WITHOUT_CLASSIFICATION	// fill under the curve...
WITHOUT_CLASSIFICATION	// then draw the line...
WITHOUT_CLASSIFICATION	// reset points vector
WITHOUT_CLASSIFICATION	/*      factorization and forward substitution */
WITHOUT_CLASSIFICATION	// now draw the real shape
WITHOUT_CLASSIFICATION	// should never get here
WITHOUT_CLASSIFICATION	// 'plot' : just retain reference, not a deep copy
WITHOUT_CLASSIFICATION	// just the domain axis...
WITHOUT_CLASSIFICATION	// just the range axis...
WITHOUT_CLASSIFICATION	// get the label position..
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// get the previous data point...
WITHOUT_CLASSIFICATION	// Add each point to Area (x, y)
WITHOUT_CLASSIFICATION	// vertical orientation
WITHOUT_CLASSIFICATION	// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only
WITHOUT_CLASSIFICATION	// this represents the situation // for drawing a horizontal bar.
WITHOUT_CLASSIFICATION	//this handles the need to perform a 'step'.
WITHOUT_CLASSIFICATION	// calculate the step point
WITHOUT_CLASSIFICATION	//this handles the need to perform a 'step'. // calculate the step point
WITHOUT_CLASSIFICATION	// submit this data item as a candidate for the crosshair point
WITHOUT_CLASSIFICATION	// create a new area polygon for the series
WITHOUT_CLASSIFICATION	// the first point is (x, 0)
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// otherwise look up the paint table
WITHOUT_CLASSIFICATION	// SHAPES FILLED
WITHOUT_CLASSIFICATION	// return the overall setting, if there is one...
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
WITHOUT_CLASSIFICATION	// no fields to compute...
WITHOUT_CLASSIFICATION	// Add the last point (x,0)
WITHOUT_CLASSIFICATION	// draw an outline around the Area.
WITHOUT_CLASSIFICATION	// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.
WITHOUT_CLASSIFICATION	// a new map always has 1 group (the default group)
WITHOUT_CLASSIFICATION	// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart
WITHOUT_CLASSIFICATION	// no change
WITHOUT_CLASSIFICATION	// here we use BooleanUtilities to remain compatible with JDKs < 1.4
WITHOUT_CLASSIFICATION	// need to make sure we are adding *after* any duplicates
WITHOUT_CLASSIFICATION	// update the max value
WITHOUT_CLASSIFICATION	// only draw if we have good values
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow
WITHOUT_CLASSIFICATION	// get the previous data point...
WITHOUT_CLASSIFICATION	// update path to reflect latest point
WITHOUT_CLASSIFICATION	// draw path
WITHOUT_CLASSIFICATION	// we are starting a new series path
WITHOUT_CLASSIFICATION	// only draw a line if the gap between the current and // previous data point is within the threshold
WITHOUT_CLASSIFICATION	// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...
WITHOUT_CLASSIFICATION	// this method must be overridden if you want to display images
WITHOUT_CLASSIFICATION	// draw the upper shadow
WITHOUT_CLASSIFICATION	// draw the lower shadow
WITHOUT_CLASSIFICATION	// draw the body
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// draw the upper shadow
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// draw the lower shadow
WITHOUT_CLASSIFICATION	// draw the body
WITHOUT_CLASSIFICATION	// draw median
WITHOUT_CLASSIFICATION	// draw average - SPECIAL AIMS REQUIREMENT
WITHOUT_CLASSIFICATION	// draw average - SPECIAL AIMS REQUIREMENT
WITHOUT_CLASSIFICATION	// here we check that the average marker will in fact be visible // before drawing it...
WITHOUT_CLASSIFICATION	// yOutliers can be null, but we'd prefer it to be an empty list in // that case...
WITHOUT_CLASSIFICATION	/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */
WITHOUT_CLASSIFICATION	// draw yOutliers
WITHOUT_CLASSIFICATION	// draw outliers
WITHOUT_CLASSIFICATION	// draw farout
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// get the previous data point...
WITHOUT_CLASSIFICATION	// here we check that the average marker will in fact be visible // before drawing it...
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made
WITHOUT_CLASSIFICATION	// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.
WITHOUT_CLASSIFICATION	// If null, don't draw line => then delegate to parent
WITHOUT_CLASSIFICATION	// If null, don't draw line at all
WITHOUT_CLASSIFICATION	// Now split the segment as needed
WITHOUT_CLASSIFICATION	// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0
WITHOUT_CLASSIFICATION	// If the line is not wrapping, then parent is OK
WITHOUT_CLASSIFICATION	// calculate the highest volume in the dataset...
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// as a special case, if the bar colour has alpha == 0, we draw // nothing.
WITHOUT_CLASSIFICATION	// update path to reflect latest point
WITHOUT_CLASSIFICATION	// if this is the last item, draw the path ...
WITHOUT_CLASSIFICATION	// draw path
WITHOUT_CLASSIFICATION	// transpose the dimensions, because the title is rotated
WITHOUT_CLASSIFICATION	// The split may occur in either x splitted segments, if any, but // not in both
WITHOUT_CLASSIFICATION	// the x value is not within the axis range
WITHOUT_CLASSIFICATION	// not a HighLowDataset, so just draw a line connecting this point // with the previous point...
WITHOUT_CLASSIFICATION	// include the interval if there is one
WITHOUT_CLASSIFICATION	// include the interval if there is one
WITHOUT_CLASSIFICATION	// draw the error bar for the x-interval
WITHOUT_CLASSIFICATION	// draw the error bar for the y-interval
WITHOUT_CLASSIFICATION	//domainGridlinePaint;
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// no new methods
WITHOUT_CLASSIFICATION	// set the default item label positions, which will only be used if // the user requests visible item labels...
WITHOUT_CLASSIFICATION	// handle item label drawing, now that we know all the bars have // been drawn...
WITHOUT_CLASSIFICATION	// if the renderer isn't assigned to a plot, then we don't have a // dataset...
WITHOUT_CLASSIFICATION	//initalize xValues, yValues, and zValues arrays.
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// handle positive value
WITHOUT_CLASSIFICATION	// LEFT POLYGON
WITHOUT_CLASSIFICATION	// RIGHT POLYGON
WITHOUT_CLASSIFICATION	// RIGHT POLYGON
WITHOUT_CLASSIFICATION	// handle negative value
WITHOUT_CLASSIFICATION	// clip left and right bounds to data area
WITHOUT_CLASSIFICATION	// clip top and bottom bounds to data area
WITHOUT_CLASSIFICATION	// work out the label anchor point...
WITHOUT_CLASSIFICATION	//  Get series Paint and Stroke
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	// is there an alignment adjustment to be made?
WITHOUT_CLASSIFICATION	// update the crosshair point
WITHOUT_CLASSIFICATION	// calculate the maximum allowed candle width from the axis...
WITHOUT_CLASSIFICATION	// Absolute value, since the relative x // positions are reversed for horizontal orientation
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	// pdfDocument class will be null so the function will return false
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// draw the upper shadow
WITHOUT_CLASSIFICATION	// draw the lower shadow
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// draw the body
WITHOUT_CLASSIFICATION	// this won't happen :)
WITHOUT_CLASSIFICATION	// --- DEPRECATED CODE ----------------------------------------------------
WITHOUT_CLASSIFICATION	// create the temporary directory if it doesn't exist
WITHOUT_CLASSIFICATION	//  Add chart to deletion list in session
WITHOUT_CLASSIFICATION	//  Set HTTP headers
WITHOUT_CLASSIFICATION	//  Replace ".." with "" //  This is to prevent access to the rest of the file system
WITHOUT_CLASSIFICATION	//  Check the file exists
WITHOUT_CLASSIFICATION	//  Serve it up
WITHOUT_CLASSIFICATION	// draw the block without collecting entities
WITHOUT_CLASSIFICATION	// RectangleInsets is immutable => same reference in clone OK
WITHOUT_CLASSIFICATION	// suppress compiler warning
WITHOUT_CLASSIFICATION	// suppress compiler warning
WITHOUT_CLASSIFICATION	// determine the space required for the axis
WITHOUT_CLASSIFICATION	// transpose the dimensions, because the title is rotated
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// don't bother with parsing
WITHOUT_CLASSIFICATION	// don't bother with parsing
WITHOUT_CLASSIFICATION	// no need to instantiate this class   
WITHOUT_CLASSIFICATION	//yAdj = -descent - leading + (float) bounds.getHeight();
WITHOUT_CLASSIFICATION	// svgClass will be null so the function will return false
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// argument checking delegated...
WITHOUT_CLASSIFICATION	// don't bother with parsing
WITHOUT_CLASSIFICATION	// standard ResourceBundle behaviour
WITHOUT_CLASSIFICATION	// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck
WITHOUT_CLASSIFICATION	// first point is outside, so we update it against one of the // four sides then continue
WITHOUT_CLASSIFICATION	// second point is outside, so we update it against one of the // four sides then continue
WITHOUT_CLASSIFICATION	// the line is visible - if it wasn't, we'd have // returned false from within the while loop above
WITHOUT_CLASSIFICATION	/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */
WITHOUT_CLASSIFICATION	/* Placeholder */
WITHOUT_CLASSIFICATION	/**/
WITHOUT_CLASSIFICATION	/**/
WITHOUT_CLASSIFICATION	/**/
WITHOUT_CLASSIFICATION	/* (pix-buffer is large enough for all pixels of one row) */
WITHOUT_CLASSIFICATION	// RGB (+ optional Alpha which we leave // unchanged)
WITHOUT_CLASSIFICATION	// Red // Green // Blue. Now map computed colour to // nearest in Palette...
WITHOUT_CLASSIFICATION	// Red // Green // Blue
WITHOUT_CLASSIFICATION	/* Ignore alpha-channel -> */
WITHOUT_CLASSIFICATION	// <- this is the code that actually COPIES the pixels
WITHOUT_CLASSIFICATION	/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */
WITHOUT_CLASSIFICATION	// ALWAYS null
WITHOUT_CLASSIFICATION	// all methods are static, no need to instantiate
WITHOUT_CLASSIFICATION	// substitute the filtered URL list
WITHOUT_CLASSIFICATION	// adjust text bounds to match string position
WITHOUT_CLASSIFICATION	// horizontal pass
WITHOUT_CLASSIFICATION	// substract the oldest pixel from the sum
WITHOUT_CLASSIFICATION	// substract the oldest pixel from the sum
WITHOUT_CLASSIFICATION	// get the lastest pixel
WITHOUT_CLASSIFICATION	// get the lastest pixel
WITHOUT_CLASSIFICATION	// vertical pass
WITHOUT_CLASSIFICATION	//get the coordinates of the original GradientPaint
WITHOUT_CLASSIFICATION	//get the coordinates of the shape that is to be filled
WITHOUT_CLASSIFICATION	//reserve variables to store the coordinates of the resulting GradientPaint
WITHOUT_CLASSIFICATION	//start point is upper left corner
WITHOUT_CLASSIFICATION	//end point is lower right corner --> diagonal gradient
WITHOUT_CLASSIFICATION	//start point is lower left right corner --> diagonal gradient
WITHOUT_CLASSIFICATION	// delegate argument checking to XYDataItem...
WITHOUT_CLASSIFICATION	//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient
WITHOUT_CLASSIFICATION	// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already
WITHOUT_CLASSIFICATION	// it is too slow to look at every data item, so let's just look at // the first, middle and last items...
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to a general object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// consider these to be ordered after general objects
WITHOUT_CLASSIFICATION	// the row may not have an entry for this key, in which case the // return value is null
WITHOUT_CLASSIFICATION	// check that the column key is defined in the 2D structure
WITHOUT_CLASSIFICATION	// 1. check whether the row is now empty.
WITHOUT_CLASSIFICATION	// 1. check whether the row is now empty.
WITHOUT_CLASSIFICATION	// 2. check whether the column is now empty.
WITHOUT_CLASSIFICATION	// 2. check whether the column is now empty.
WITHOUT_CLASSIFICATION	//int columnIndex = getColumnIndex(columnKey);
WITHOUT_CLASSIFICATION	// for the keys, a shallow copy should be fine because keys // should be immutable...
WITHOUT_CLASSIFICATION	// but the row data requires a deep copy
WITHOUT_CLASSIFICATION	// already know 'a' isn't null
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// this will include the case where the underlying dataset is null
WITHOUT_CLASSIFICATION	// this includes the case where the underlying dataset is null
WITHOUT_CLASSIFICATION	// we didn't find the key
WITHOUT_CLASSIFICATION	// set up the category names...
WITHOUT_CLASSIFICATION	// check arguments...
WITHOUT_CLASSIFICATION	// fetch the value...
WITHOUT_CLASSIFICATION	// does the series exist?
WITHOUT_CLASSIFICATION	// does the series exist?
WITHOUT_CLASSIFICATION	// is the category valid?
WITHOUT_CLASSIFICATION	// update the data...
WITHOUT_CLASSIFICATION	// update the data...
WITHOUT_CLASSIFICATION	// no additional methods required
WITHOUT_CLASSIFICATION	// Find min, max for the x and y axes
WITHOUT_CLASSIFICATION	// Determine the cell size
WITHOUT_CLASSIFICATION	// Generate the grid
WITHOUT_CLASSIFICATION	// Map the nongrid data into the new regular grid
WITHOUT_CLASSIFICATION	// scale by the inverse of distance^power
WITHOUT_CLASSIFICATION	//remove distance of the sum
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// we didn't find the key
WITHOUT_CLASSIFICATION	// handle the special case where the dataset has y-intervals that // we want to measure
WITHOUT_CLASSIFICATION	// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...
WITHOUT_CLASSIFICATION	// the CategoryDataset interface expects a list of series, but // we've stored them in an array...
WITHOUT_CLASSIFICATION	// if d is real small set the inverse to a large number // to avoid INF
WITHOUT_CLASSIFICATION	//store data as Long
WITHOUT_CLASSIFICATION	// store Number as Double
WITHOUT_CLASSIFICATION	// check if starting new column
WITHOUT_CLASSIFICATION	//store index where new //column starts
WITHOUT_CLASSIFICATION	// set x to most recent value
WITHOUT_CLASSIFICATION	// create array xIndex to hold // new column indices
WITHOUT_CLASSIFICATION	// store y and z axes // as Doubles
WITHOUT_CLASSIFICATION	// calculate constant values
WITHOUT_CLASSIFICATION	// look for any keys that we don't already know about...
WITHOUT_CLASSIFICATION	// fetch the series, remove the change listener, then remove the series.
WITHOUT_CLASSIFICATION	// remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	//step through all the values and add them to the hash
WITHOUT_CLASSIFICATION	// no new methods required
WITHOUT_CLASSIFICATION	// can't find any differences
WITHOUT_CLASSIFICATION	// now try to instantiate this ;-)
WITHOUT_CLASSIFICATION	//  Create new dataset with keys above threshold percentThreshold
WITHOUT_CLASSIFICATION	//  Do not add key to dataset
WITHOUT_CLASSIFICATION	//  Add key to dataset
WITHOUT_CLASSIFICATION	//  Add other category if applicable
WITHOUT_CLASSIFICATION	// now do the work...
WITHOUT_CLASSIFICATION	// if the dataset implements DomainInfo, life is easier
WITHOUT_CLASSIFICATION	// handle the standard case (plain CategoryDataset)
WITHOUT_CLASSIFICATION	// update the min value
WITHOUT_CLASSIFICATION	// handle the standard case (plain CategoryDataset)
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// handle the special case where the dataset has y-intervals that // we want to measure
WITHOUT_CLASSIFICATION	// handle three cases by dataset type
WITHOUT_CLASSIFICATION	// handle three cases by dataset type
WITHOUT_CLASSIFICATION	// handle special case of IntervalXYDataset
WITHOUT_CLASSIFICATION	// handle special case of IntervalXYDataset
WITHOUT_CLASSIFICATION	// handle special case of IntervalXYDataset
WITHOUT_CLASSIFICATION	// handle special case of OHLCDataset
WITHOUT_CLASSIFICATION	// handle special case of OHLCDataset
WITHOUT_CLASSIFICATION	// standard case - plain XYDataset
WITHOUT_CLASSIFICATION	// standard case - plain XYDataset
WITHOUT_CLASSIFICATION	// handle special case of BoxAndWhiskerXYDataset
WITHOUT_CLASSIFICATION	// if the dataset implements DomainInfo, life is easy
WITHOUT_CLASSIFICATION	// if the dataset implements DomainInfo, life is easy
WITHOUT_CLASSIFICATION	// hasn't implemented DomainInfo, so iterate...
WITHOUT_CLASSIFICATION	// hasn't implemented RangeInfo, so we'll have to iterate...
WITHOUT_CLASSIFICATION	// hasn't implemented RangeInfo, so we'll have to iterate...
WITHOUT_CLASSIFICATION	// work out the minimum value...
WITHOUT_CLASSIFICATION	// work out the minimum value...
WITHOUT_CLASSIFICATION	// work out the minimum value...
WITHOUT_CLASSIFICATION	// '+', remember value is negative
WITHOUT_CLASSIFICATION	// create an array holding the group indices for each series...
WITHOUT_CLASSIFICATION	// minimum and maximum for each group...
WITHOUT_CLASSIFICATION	// no new methods
WITHOUT_CLASSIFICATION	// no new methods
WITHOUT_CLASSIFICATION	// we'll set this to false if there is at // least one non-null data item...
WITHOUT_CLASSIFICATION	// no additional methods required
WITHOUT_CLASSIFICATION	// no new methods required
WITHOUT_CLASSIFICATION	// no new methods required
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// handle the special case where the dataset has y-intervals that // we want to measure
WITHOUT_CLASSIFICATION	// '+', remember value is negative
WITHOUT_CLASSIFICATION	// '+', remember value is negative
WITHOUT_CLASSIFICATION	// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point
WITHOUT_CLASSIFICATION	// delegate null check on dataset
WITHOUT_CLASSIFICATION	// exact match on first item
WITHOUT_CLASSIFICATION	// no crossing of x
WITHOUT_CLASSIFICATION	// spanning match
WITHOUT_CLASSIFICATION	// exact match
WITHOUT_CLASSIFICATION	// maps our series into our parent's
WITHOUT_CLASSIFICATION	// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this
WITHOUT_CLASSIFICATION	// no new methods added.
WITHOUT_CLASSIFICATION	// first line contains column keys
WITHOUT_CLASSIFICATION	// remaining lines contain a row key and data values
WITHOUT_CLASSIFICATION	// first field contains the row key
WITHOUT_CLASSIFICATION	// update the max value
WITHOUT_CLASSIFICATION	// remaining fields contain values
WITHOUT_CLASSIFICATION	// Remove any previous old data
WITHOUT_CLASSIFICATION	// first column contains the row key...
WITHOUT_CLASSIFICATION	// suppress (value defaults to null)
WITHOUT_CLASSIFICATION	// not a value, can't use it (defaults to null)
WITHOUT_CLASSIFICATION	/// First column is X data
WITHOUT_CLASSIFICATION	/// Get the column names and cache them.
WITHOUT_CLASSIFICATION	// Might need to add, to free memory from any previous result sets
WITHOUT_CLASSIFICATION	// Are we working with a time series.
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// check arguments...
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key
WITHOUT_CLASSIFICATION	// see comments about priority of // 10 in validateObject()
WITHOUT_CLASSIFICATION	// first field is ignored, since // column 0 is for row keys
WITHOUT_CLASSIFICATION	// Get all rows. // rows = new ArrayList();
WITHOUT_CLASSIFICATION	/// Determine max and min values.
WITHOUT_CLASSIFICATION	// Tell the listeners a new table has arrived.
WITHOUT_CLASSIFICATION	// fill the bins
WITHOUT_CLASSIFICATION	// generic map for each series
WITHOUT_CLASSIFICATION	// pretty sure this shouldn't ever happen
WITHOUT_CLASSIFICATION	// lower bounds are the same
WITHOUT_CLASSIFICATION	// overridden to make public
WITHOUT_CLASSIFICATION	// update the cached range values...
WITHOUT_CLASSIFICATION	// check that the new bin doesn't overlap with any existing bin
WITHOUT_CLASSIFICATION	// pass values to other constructor
WITHOUT_CLASSIFICATION	// update cached min and max values
WITHOUT_CLASSIFICATION	// defer null argument checks
WITHOUT_CLASSIFICATION	// check for zero pivot element
WITHOUT_CLASSIFICATION	// treat nulls the same as NaNs
WITHOUT_CLASSIFICATION	// calculate the sum and count
WITHOUT_CLASSIFICATION	// intercept
WITHOUT_CLASSIFICATION	// sum of x, x^2, x * y, y
WITHOUT_CLASSIFICATION	// holds the moving average sum
WITHOUT_CLASSIFICATION	// defer null argument checks
WITHOUT_CLASSIFICATION	// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min
WITHOUT_CLASSIFICATION	// iterate over all data items and update mins and maxes
WITHOUT_CLASSIFICATION	// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...
WITHOUT_CLASSIFICATION	// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************
WITHOUT_CLASSIFICATION	// update cached range values
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// update the min value
WITHOUT_CLASSIFICATION	// iterate over all data items and update mins and maxes
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// we are at the last minute in the hour...
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Minute object // -------------------------------------------
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// won't get here...
WITHOUT_CLASSIFICATION	// remove old items and notify if necessary
WITHOUT_CLASSIFICATION	// make the change (if it's not a duplicate time period)...
WITHOUT_CLASSIFICATION	// check if this addition will exceed the maximum item count...
WITHOUT_CLASSIFICATION	// check if this addition will exceed the maximum item count...
WITHOUT_CLASSIFICATION	// find the serial index of the period specified by 'latest'
WITHOUT_CLASSIFICATION	// it is too slow to look at every data item, so let's just look at // the first, middle and last items...
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// since the items are ordered, we could be more clever here and avoid // iterating over all the data
WITHOUT_CLASSIFICATION	// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...
WITHOUT_CLASSIFICATION	// figure out if we need to iterate through all the y-values // to find the revised minY / maxY
WITHOUT_CLASSIFICATION	// check if there are any values earlier than specified by the history // count...
WITHOUT_CLASSIFICATION	// check if there are any values earlier than specified by the history // count...
WITHOUT_CLASSIFICATION	// start is after last data item
WITHOUT_CLASSIFICATION	// update the time series appropriately
WITHOUT_CLASSIFICATION	// we are at the first hour in the day...
WITHOUT_CLASSIFICATION	// we are at the last hour in the day...
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Hour object // -----------------------------------------
WITHOUT_CLASSIFICATION	// if the hour is 0 - 23 then create an hour
WITHOUT_CLASSIFICATION	// parse the string...
WITHOUT_CLASSIFICATION	// create the year...
WITHOUT_CLASSIFICATION	// get the current data item...
WITHOUT_CLASSIFICATION	// work out the average for the earlier values...
WITHOUT_CLASSIFICATION	// work out the average for the earlier values...
WITHOUT_CLASSIFICATION	// remove the point i-periodCount out of the rolling sum.
WITHOUT_CLASSIFICATION	// an arbitrary safe default value
WITHOUT_CLASSIFICATION	// default value;
WITHOUT_CLASSIFICATION	// as a class variable, initializes == 0
WITHOUT_CLASSIFICATION	// cached values used for interface DomainInfo:
WITHOUT_CLASSIFICATION	//rangeGridlinePaint;
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// autoinit's to null.
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Year object // -----------------------------------------
WITHOUT_CLASSIFICATION	// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...
WITHOUT_CLASSIFICATION	//}
WITHOUT_CLASSIFICATION	//}
WITHOUT_CLASSIFICATION	// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...
WITHOUT_CLASSIFICATION	// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection
WITHOUT_CLASSIFICATION	///  .. etc....
WITHOUT_CLASSIFICATION	/// Expand the following for all defined TimePeriods:
WITHOUT_CLASSIFICATION	// initialize the members of "seriesNames" array so they won't be null:
WITHOUT_CLASSIFICATION	//{ // deep copy from values[], caller // can safely discard that array
WITHOUT_CLASSIFICATION	// Avoid IndexOutOfBoundsException:
WITHOUT_CLASSIFICATION	// But if that series array already exists, just overwrite its contents
WITHOUT_CLASSIFICATION	// But if that series array already exists, just overwrite its contents //synchronized(this) //{
WITHOUT_CLASSIFICATION	// all arrays equal length, // so ignore argument:
WITHOUT_CLASSIFICATION	// Methods for managing the FIFO's:
WITHOUT_CLASSIFICATION	// no translation needed
WITHOUT_CLASSIFICATION	// else  [implicit here]
WITHOUT_CLASSIFICATION	// newestAt takes value previously held // by oldestAT
WITHOUT_CLASSIFICATION	// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:
WITHOUT_CLASSIFICATION	// deregister the collection as a change listener to each series in the // collection
WITHOUT_CLASSIFICATION	//  wipe the next (about to be used) set of data slots
WITHOUT_CLASSIFICATION	// Update the array of TimePeriods:
WITHOUT_CLASSIFICATION	// Now advance "oldestAt", wrapping at end of the array
WITHOUT_CLASSIFICATION	// Update the domain limits: //(time is kept in msec)
WITHOUT_CLASSIFICATION	//  If data can be < 0, the next 2 methods should be modified
WITHOUT_CLASSIFICATION	// index to select the "series"
WITHOUT_CLASSIFICATION	/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */
WITHOUT_CLASSIFICATION	// a Long kept updated by advanceTime()
WITHOUT_CLASSIFICATION	// a Long kept updated by advanceTime()
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// try a null argument
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// parse the string...
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:
WITHOUT_CLASSIFICATION	// check whether the "valueHistory" array member exists; if not, // create them:
WITHOUT_CLASSIFICATION	// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.
WITHOUT_CLASSIFICATION	// Don't synchronize this!! // Instead, synchronize the loop that calls it.
WITHOUT_CLASSIFICATION	// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Quarter object // --------------------------------------------
WITHOUT_CLASSIFICATION	// find the Q and the integer following it (remove both from the // string)...
WITHOUT_CLASSIFICATION	// replace any / , or - with a space
WITHOUT_CLASSIFICATION	// do nothing, so null is returned
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Day object // ----------------------------------------
WITHOUT_CLASSIFICATION	// check arguments...delegated // fetch the series name...
WITHOUT_CLASSIFICATION	// deregister the collection as a change listener to each series in the // collection
WITHOUT_CLASSIFICATION	// if it is not the series name, then we have no interest
WITHOUT_CLASSIFICATION	// to be defensive, let's check that the source series does in fact // belong to this collection
WITHOUT_CLASSIFICATION	// check if the new series name already exists for another series
WITHOUT_CLASSIFICATION	// we need to work out if the previous year has 52 or 53 weeks...
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to a general object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Second object // -------------------------------------------
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// won't get here...
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Week object // --------------------------------------------
WITHOUT_CLASSIFICATION	// trim whitespace from either end of the string
WITHOUT_CLASSIFICATION	// trim whitespace from either end of the string
WITHOUT_CLASSIFICATION	// suppress
WITHOUT_CLASSIFICATION	// suppress
WITHOUT_CLASSIFICATION	// suppress
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Month object // --------------------------------------------
WITHOUT_CLASSIFICATION	// if there is no separator, we assume the first four characters // are YYYY
WITHOUT_CLASSIFICATION	// now it is trickier to determine if the month or year is first
WITHOUT_CLASSIFICATION	// --- DEPRECATED METHODS -------------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------
WITHOUT_CLASSIFICATION	//private Comparable key;
WITHOUT_CLASSIFICATION	//this.key = null;
WITHOUT_CLASSIFICATION	// no attributes to read
WITHOUT_CLASSIFICATION	//axisOffset;
WITHOUT_CLASSIFICATION	// check arguments...
WITHOUT_CLASSIFICATION	// fetch the series, remove the change listener, then remove the series.
WITHOUT_CLASSIFICATION	// remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	// if it is not the series name, then we have no interest
WITHOUT_CLASSIFICATION	// check if the new series name already exists for another series
WITHOUT_CLASSIFICATION	// Remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	// XYDataset only provides methods for reading a dataset...
WITHOUT_CLASSIFICATION	// check arguments...delegated
WITHOUT_CLASSIFICATION	// check arguments...delegated
WITHOUT_CLASSIFICATION	// Remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	// Unregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// add a new series
WITHOUT_CLASSIFICATION	// need to configure the intervalDelegate to match the original
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// we can't be sure of the order
WITHOUT_CLASSIFICATION	// replace an existing series
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// either autoWidth is off or autoIntervalWidth was not set.
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// argument checking delegated...
WITHOUT_CLASSIFICATION	// argument checking delegated...
WITHOUT_CLASSIFICATION	// delegate argument checking to XYDataItem...
WITHOUT_CLASSIFICATION	// need to make sure we are adding *after* any duplicates
WITHOUT_CLASSIFICATION	// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to a general object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// check arguments...
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// won't get here...
WITHOUT_CLASSIFICATION	// check if this addition will exceed the maximum item count...
WITHOUT_CLASSIFICATION	// to be defensive, let's check that the source series does in fact // belong to this collection
WITHOUT_CLASSIFICATION	// Unregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// Unregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// Remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	// need to configure the intervalDelegate to match the original
WITHOUT_CLASSIFICATION	// add a new series
WITHOUT_CLASSIFICATION	// add a new series
WITHOUT_CLASSIFICATION	// replace an existing series
WITHOUT_CLASSIFICATION	// replace an existing series
WITHOUT_CLASSIFICATION	// null is ignored
WITHOUT_CLASSIFICATION	// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.
WITHOUT_CLASSIFICATION	// first get the range without the interval, then expand it for the // interval width
WITHOUT_CLASSIFICATION	// all series have the same number of items in // this dataset
WITHOUT_CLASSIFICATION	// this.x is not allowed to be null...
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------
WITHOUT_CLASSIFICATION	// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.
WITHOUT_CLASSIFICATION	// figure out if we need to iterate through all the y-values
WITHOUT_CLASSIFICATION	// figure out if we need to iterate through all the y-values
WITHOUT_CLASSIFICATION	// if we get to here, we know that duplicate X values are not permitted
WITHOUT_CLASSIFICATION	/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */
WITHOUT_CLASSIFICATION	// add the series...
WITHOUT_CLASSIFICATION	// try a class that isn't a listener
WITHOUT_CLASSIFICATION	// set up popup menu...
WITHOUT_CLASSIFICATION	// stop listening for changes to the existing chart
WITHOUT_CLASSIFICATION	// add the new chart
WITHOUT_CLASSIFICATION	// work out if scaling is required...
WITHOUT_CLASSIFICATION	// are we using the chart buffer?
WITHOUT_CLASSIFICATION	// does nothing - override if necessary
WITHOUT_CLASSIFICATION	// selected rectangle shouldn't extend outside the data area...
WITHOUT_CLASSIFICATION	// we need to guard against this.zoomPoint being null
WITHOUT_CLASSIFICATION	// we need to guard against this.zoomPoint being null
WITHOUT_CLASSIFICATION	// force a redraw
WITHOUT_CLASSIFICATION	// it is too slow to look at every data item, so let's just look at // the first, middle and last items...
WITHOUT_CLASSIFICATION	// fetch the series, remove the change listener, then remove the series.
WITHOUT_CLASSIFICATION	// Unregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// Unregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// check that minItem limit is observed
WITHOUT_CLASSIFICATION	//assert itemIndex >= 0 && itemIndex < getItemCount();
WITHOUT_CLASSIFICATION	//assert itemIndex >= 0 && itemIndex < getItemCount();
WITHOUT_CLASSIFICATION	//TODO private boolean fillZoomRectangle = true;
WITHOUT_CLASSIFICATION	// create the canvas and add the required listeners
WITHOUT_CLASSIFICATION	//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);
WITHOUT_CLASSIFICATION	/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */
WITHOUT_CLASSIFICATION	// do nothing, override if necessary
WITHOUT_CLASSIFICATION	// new entity code
WITHOUT_CLASSIFICATION	// new entity code
WITHOUT_CLASSIFICATION	// pass mouse down event if some ChartMouseListener are listening
WITHOUT_CLASSIFICATION	// if the box has been drawn backwards, restore the auto bounds
WITHOUT_CLASSIFICATION	// handle axis trace
WITHOUT_CLASSIFICATION	// handle tool tips in a simple way
WITHOUT_CLASSIFICATION	// handle zoom box
WITHOUT_CLASSIFICATION	// skip if chart is null
WITHOUT_CLASSIFICATION	//axisLabelPaint;
WITHOUT_CLASSIFICATION	// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)
WITHOUT_CLASSIFICATION	// go through each zoom menu item and decide whether or not to // enable it...
WITHOUT_CLASSIFICATION	// create the chart...
WITHOUT_CLASSIFICATION	// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?
WITHOUT_CLASSIFICATION	// check that minItem limit is observed
WITHOUT_CLASSIFICATION	//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);
WITHOUT_CLASSIFICATION	// do we need to fill the buffer?
WITHOUT_CLASSIFICATION	// Performs the actual drawing here ...
WITHOUT_CLASSIFICATION	// anti-aliasing
WITHOUT_CLASSIFICATION	// zap the buffer onto the canvas...
WITHOUT_CLASSIFICATION	// or redrawing the chart every time...
WITHOUT_CLASSIFICATION	// de-register the composite as a listener for the chart.
WITHOUT_CLASSIFICATION	// AXIS 2
WITHOUT_CLASSIFICATION	// AXIS 3
WITHOUT_CLASSIFICATION	//axis3.setPositiveArrowVisible(true);
WITHOUT_CLASSIFICATION	// AXIS 4
WITHOUT_CLASSIFICATION	// column keys...
WITHOUT_CLASSIFICATION	// create the dataset...
WITHOUT_CLASSIFICATION	// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...
WITHOUT_CLASSIFICATION	// get a reference to the plot for further customisation...
WITHOUT_CLASSIFICATION	// set the range axis to display integers only...
WITHOUT_CLASSIFICATION	// disable bar outlines...
WITHOUT_CLASSIFICATION	// OPTIONAL CUSTOMISATION COMPLETED.
WITHOUT_CLASSIFICATION	// chart title // data // include legend
WITHOUT_CLASSIFICATION	//frame.setDisplayToolTips(false);
WITHOUT_CLASSIFICATION	// row 1: antialiasing
WITHOUT_CLASSIFICATION	//row 2: background paint for the chart
WITHOUT_CLASSIFICATION	// row 1
WITHOUT_CLASSIFICATION	//empty cell // row 2
WITHOUT_CLASSIFICATION	// Create the color-change dialog
WITHOUT_CLASSIFICATION	// Dispose of any fonts we have created
WITHOUT_CLASSIFICATION	// build second tab
WITHOUT_CLASSIFICATION	// don't need to do anything
WITHOUT_CLASSIFICATION	// set the plot properties...
WITHOUT_CLASSIFICATION	// row 1
WITHOUT_CLASSIFICATION	// Create the color-change dialog
WITHOUT_CLASSIFICATION	// Create the color-change dialog
WITHOUT_CLASSIFICATION	// Dispose of any fonts we have created
WITHOUT_CLASSIFICATION	// check a regular value
WITHOUT_CLASSIFICATION	// Create the new font and set it into the title // label
WITHOUT_CLASSIFICATION	// Create the new font and set it into the title // label
WITHOUT_CLASSIFICATION	//label.setFont(font);
WITHOUT_CLASSIFICATION	// row 3
WITHOUT_CLASSIFICATION	// row 3
WITHOUT_CLASSIFICATION	// Use a colored text field to show the color
WITHOUT_CLASSIFICATION	//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));
WITHOUT_CLASSIFICATION	// Create the font-change dialog
WITHOUT_CLASSIFICATION	// Create the font-change dialog
WITHOUT_CLASSIFICATION	//tickLabelFontField.setFont(font);
WITHOUT_CLASSIFICATION	// return the appropriate axis editor
WITHOUT_CLASSIFICATION	//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);
WITHOUT_CLASSIFICATION	//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);
WITHOUT_CLASSIFICATION	// verify min value
WITHOUT_CLASSIFICATION	// verify max value
WITHOUT_CLASSIFICATION	//deal with domain axis
WITHOUT_CLASSIFICATION	//deal with range axis
WITHOUT_CLASSIFICATION	//deal with plot appearance
WITHOUT_CLASSIFICATION	// set the axis properties
WITHOUT_CLASSIFICATION	// row 1: stroke
WITHOUT_CLASSIFICATION	// row 3: background paint
WITHOUT_CLASSIFICATION	// row 4: orientation
WITHOUT_CLASSIFICATION	// row 2
WITHOUT_CLASSIFICATION	//titleField.setFont(font);
WITHOUT_CLASSIFICATION	// row 4
WITHOUT_CLASSIFICATION	// build first tab
WITHOUT_CLASSIFICATION	// we can't do anything
WITHOUT_CLASSIFICATION	// backgroundImage
WITHOUT_CLASSIFICATION	// row keys...
WITHOUT_CLASSIFICATION	// column keys...
WITHOUT_CLASSIFICATION	// since this is only used by clearRect(), we don't update the GC yet
WITHOUT_CLASSIFICATION	// build the third tab
WITHOUT_CLASSIFICATION	// ok and cancel buttons
WITHOUT_CLASSIFICATION	// to be consistent with other Graphics2D implementations
WITHOUT_CLASSIFICATION	// padding
WITHOUT_CLASSIFICATION	// apply dash style if any
WITHOUT_CLASSIFICATION	// handle transparency and compositing.
WITHOUT_CLASSIFICATION	// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));
WITHOUT_CLASSIFICATION	// set the line style to solid by default
WITHOUT_CLASSIFICATION	// retrieve the swt font description in an os indept way
WITHOUT_CLASSIFICATION	// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours
WITHOUT_CLASSIFICATION	// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer
WITHOUT_CLASSIFICATION	// create a new awt font with the appropiate data
WITHOUT_CLASSIFICATION	// we dispose resources we own but user must dispose gc
WITHOUT_CLASSIFICATION	// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);
WITHOUT_CLASSIFICATION	// SWT and AWT share the same style constants.
WITHOUT_CLASSIFICATION	// convert the font size (in pt for awt) to height in pixels for swt
WITHOUT_CLASSIFICATION	//this.myColor = new Color(getDisplay(), color.getRGB());
WITHOUT_CLASSIFICATION	// renderingHints
WITHOUT_CLASSIFICATION	// borderStroke
WITHOUT_CLASSIFICATION	// borderVisible
WITHOUT_CLASSIFICATION	// borderPaint
WITHOUT_CLASSIFICATION	// title
WITHOUT_CLASSIFICATION	// subtitles
WITHOUT_CLASSIFICATION	// plot
WITHOUT_CLASSIFICATION	// backgroundPaint
WITHOUT_CLASSIFICATION	// backgroundImageAlignment
WITHOUT_CLASSIFICATION	// backgroundImageAlpha
WITHOUT_CLASSIFICATION	// no event is generated if the dataset is already empty
WITHOUT_CLASSIFICATION	// create the chart...
WITHOUT_CLASSIFICATION	// create the chart...
WITHOUT_CLASSIFICATION	// try a Double.POSITIVE_INFINITY
WITHOUT_CLASSIFICATION	// adding something to the returned list should NOT change the chart
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// fillPaintTransformer
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// labelFont
WITHOUT_CLASSIFICATION	// chart title
WITHOUT_CLASSIFICATION	// labelPaint
WITHOUT_CLASSIFICATION	// linePaint
WITHOUT_CLASSIFICATION	// fillPaint
WITHOUT_CLASSIFICATION	// chart title
WITHOUT_CLASSIFICATION	// the clone references the same dataset as the original
WITHOUT_CLASSIFICATION	// chart title
WITHOUT_CLASSIFICATION	// chart title
WITHOUT_CLASSIFICATION	// chart title
WITHOUT_CLASSIFICATION	// data // include legend // tooltips // urls
WITHOUT_CLASSIFICATION	// include legend
WITHOUT_CLASSIFICATION	// a null key should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	// a null key should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	// include legend
WITHOUT_CLASSIFICATION	// include legend
WITHOUT_CLASSIFICATION	// include legend
WITHOUT_CLASSIFICATION	// include legend
WITHOUT_CLASSIFICATION	// include legend
WITHOUT_CLASSIFICATION	// data
WITHOUT_CLASSIFICATION	// data
WITHOUT_CLASSIFICATION	// data
WITHOUT_CLASSIFICATION	// data
WITHOUT_CLASSIFICATION	/* BufferedImage img =*/
WITHOUT_CLASSIFICATION	// try a listener type that isn't registered
WITHOUT_CLASSIFICATION	// name
WITHOUT_CLASSIFICATION	//extraLargeFont
WITHOUT_CLASSIFICATION	//largeFont
WITHOUT_CLASSIFICATION	//regularFont;
WITHOUT_CLASSIFICATION	//titlePaint;
WITHOUT_CLASSIFICATION	//subtitlePaint;
WITHOUT_CLASSIFICATION	//chartBackgroundPaint;
WITHOUT_CLASSIFICATION	//legendBackgroundPaint;
WITHOUT_CLASSIFICATION	//legendItemPaint;
WITHOUT_CLASSIFICATION	//drawingSupplier;
WITHOUT_CLASSIFICATION	// value 1
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// test independence
WITHOUT_CLASSIFICATION	//tickLabelPaint;
WITHOUT_CLASSIFICATION	//itemLabelPaint;
WITHOUT_CLASSIFICATION	//shadowVisible;
WITHOUT_CLASSIFICATION	//shadowPaint;
WITHOUT_CLASSIFICATION	//barPainter;
WITHOUT_CLASSIFICATION	//xyBarPainter;
WITHOUT_CLASSIFICATION	//thermometerPaint;
WITHOUT_CLASSIFICATION	//wallPaint;
WITHOUT_CLASSIFICATION	//errorIndicatorPaint;
WITHOUT_CLASSIFICATION	//gridBandAlternatePaint
WITHOUT_CLASSIFICATION	//private double angle;
WITHOUT_CLASSIFICATION	//private double tipRadius;
WITHOUT_CLASSIFICATION	//private double tipRadius;
WITHOUT_CLASSIFICATION	//private double baseRadius;
WITHOUT_CLASSIFICATION	//private double arrowLength;
WITHOUT_CLASSIFICATION	//private double arrowLength;
WITHOUT_CLASSIFICATION	//private double arrowWidth;
WITHOUT_CLASSIFICATION	//private Stroke arrowStroke;
WITHOUT_CLASSIFICATION	//private Stroke arrowStroke;
WITHOUT_CLASSIFICATION	//private Paint arrowPaint;
WITHOUT_CLASSIFICATION	//private Paint arrowPaint;
WITHOUT_CLASSIFICATION	//private double labelOffset;
WITHOUT_CLASSIFICATION	// text
WITHOUT_CLASSIFICATION	// text
WITHOUT_CLASSIFICATION	// x
WITHOUT_CLASSIFICATION	// y
WITHOUT_CLASSIFICATION	// font
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// rotation anchor
WITHOUT_CLASSIFICATION	// rotation angle
WITHOUT_CLASSIFICATION	// text anchor
WITHOUT_CLASSIFICATION	// textAnchor
WITHOUT_CLASSIFICATION	// rotationAnchor
WITHOUT_CLASSIFICATION	// rotationAngle
WITHOUT_CLASSIFICATION	// category 1
WITHOUT_CLASSIFICATION	// category 2
WITHOUT_CLASSIFICATION	// value 2
WITHOUT_CLASSIFICATION	// stroke
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// stroke
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// category
WITHOUT_CLASSIFICATION	// categoryAnchor
WITHOUT_CLASSIFICATION	// value
WITHOUT_CLASSIFICATION	// x0
WITHOUT_CLASSIFICATION	// tickUnit
WITHOUT_CLASSIFICATION	// tickMarkPosition
WITHOUT_CLASSIFICATION	// timeline
WITHOUT_CLASSIFICATION	// range
WITHOUT_CLASSIFICATION	// check that setting the min date to something on or after the // current min date works...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// START: check d0
WITHOUT_CLASSIFICATION	// START: check d0
WITHOUT_CLASSIFICATION	// END: check d0
WITHOUT_CLASSIFICATION	// MIDDLE: check d0
WITHOUT_CLASSIFICATION	// MIDDLE: check d0
WITHOUT_CLASSIFICATION	// END: check d0
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// test independence
WITHOUT_CLASSIFICATION	// now repeat for a vertical axis
WITHOUT_CLASSIFICATION	// set start and end date
WITHOUT_CLASSIFICATION	// if the bug is still present, this leads to an endless loop
WITHOUT_CLASSIFICATION	//private boolean autoRangeIncludesZero;
WITHOUT_CLASSIFICATION	//private NumberTickUnit tickUnit;
WITHOUT_CLASSIFICATION	//private NumberFormat numberFormatOverride;
WITHOUT_CLASSIFICATION	// now replacing the dataset should update the axis range...
WITHOUT_CLASSIFICATION	//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);
WITHOUT_CLASSIFICATION	// check that changing a tick label font in a1 doesn't change a2
WITHOUT_CLASSIFICATION	// check that changing a tick label paint in a1 doesn't change a2
WITHOUT_CLASSIFICATION	// check that changing a category label tooltip in a1 doesn't change a2
WITHOUT_CLASSIFICATION	// set axis bounds to be both greater than 1
WITHOUT_CLASSIFICATION	// check for bounds interval that includes 1
WITHOUT_CLASSIFICATION	// check for bounds interval that includes 1
WITHOUT_CLASSIFICATION	// check for both bounds smaller than 1
WITHOUT_CLASSIFICATION	// check for both bounds smaller than 1
WITHOUT_CLASSIFICATION	// lowerMargin
WITHOUT_CLASSIFICATION	// upperMargin
WITHOUT_CLASSIFICATION	// categoryMargin
WITHOUT_CLASSIFICATION	// maxCategoryLabelWidthRatio
WITHOUT_CLASSIFICATION	// categoryLabelPositionOffset
WITHOUT_CLASSIFICATION	// categoryLabelPositions
WITHOUT_CLASSIFICATION	// check that changing a tick label font in a1 doesn't change a2
WITHOUT_CLASSIFICATION	// check that changing a tick label paint in a1 doesn't change a2
WITHOUT_CLASSIFICATION	// check that changing a category label tooltip in a1 doesn't change a2
WITHOUT_CLASSIFICATION	// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //
WITHOUT_CLASSIFICATION	// categoryLabelToolTips
WITHOUT_CLASSIFICATION	// categoryLabelURLs
WITHOUT_CLASSIFICATION	// tickLabelPaint
WITHOUT_CLASSIFICATION	// tickLabelPaint2
WITHOUT_CLASSIFICATION	// period
WITHOUT_CLASSIFICATION	// offset
WITHOUT_CLASSIFICATION	// advance line Stroke
WITHOUT_CLASSIFICATION	// advance line Visible
WITHOUT_CLASSIFICATION	// cycle bound mapping
WITHOUT_CLASSIFICATION	// Create a segmented time line (segment size : 15 minutes)
WITHOUT_CLASSIFICATION	// Set start time
WITHOUT_CLASSIFICATION	/* PUT exclusions in test */
WITHOUT_CLASSIFICATION	/** These constants control test cycles in the validateXXXX methods. */
WITHOUT_CLASSIFICATION	// test 9am-4pm Monday through Friday timeline
WITHOUT_CLASSIFICATION	// calculate 9am on the first Monday after 2001-01-01
WITHOUT_CLASSIFICATION	// verify attributes set during object construction
WITHOUT_CLASSIFICATION	// verify attributes set during object construction
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// get two consecutive segments for various tests
WITHOUT_CLASSIFICATION	// verify segments are consecutive and correct
WITHOUT_CLASSIFICATION	// verify various indices inside a segment are the same segment
WITHOUT_CLASSIFICATION	// try next segment
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// test inc() method
WITHOUT_CLASSIFICATION	// logically consecutive segments non-physically consecutive // (with non-contained time in between)
WITHOUT_CLASSIFICATION	// physically consecutive
WITHOUT_CLASSIFICATION	// test inc(n) method
WITHOUT_CLASSIFICATION	// go to another segment to continue test
WITHOUT_CLASSIFICATION	// clear any exceptions in this timeline
WITHOUT_CLASSIFICATION	// test some included and excluded segments
WITHOUT_CLASSIFICATION	// should be an included segment
WITHOUT_CLASSIFICATION	// should be an excluded segment
WITHOUT_CLASSIFICATION	// fill in the exceptions
WITHOUT_CLASSIFICATION	// verify list of exceptions
WITHOUT_CLASSIFICATION	// include current exception and last one
WITHOUT_CLASSIFICATION	// exclude current exception and last one
WITHOUT_CLASSIFICATION	// make sure there are no exceptions
WITHOUT_CLASSIFICATION	// add our exceptions and store locally in ArrayList of Longs
WITHOUT_CLASSIFICATION	// only add an exception if it is currently an included segment
WITHOUT_CLASSIFICATION	// make array of exceptions
WITHOUT_CLASSIFICATION	// add the base timeline exclusions as timeline's esceptions
WITHOUT_CLASSIFICATION	// validate base timeline exclusions added as timeline's esceptions
WITHOUT_CLASSIFICATION	// start time...
WITHOUT_CLASSIFICATION	// 1-Jan-2000
WITHOUT_CLASSIFICATION	//long v = stl.toTimelineValue(946684800020L);
WITHOUT_CLASSIFICATION	// tick labels visible flag...
WITHOUT_CLASSIFICATION	// lowerMargin
WITHOUT_CLASSIFICATION	// upperMargin
WITHOUT_CLASSIFICATION	// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// verify all timeline segments included in the // baseTimeline.segment are now exceptions
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// subcategories
WITHOUT_CLASSIFICATION	// subLabelFont
WITHOUT_CLASSIFICATION	// subLabelPaint
WITHOUT_CLASSIFICATION	// some checks that the clone is independent of the original
WITHOUT_CLASSIFICATION	// visible flag...
WITHOUT_CLASSIFICATION	// label...
WITHOUT_CLASSIFICATION	// label font...
WITHOUT_CLASSIFICATION	// label paint...
WITHOUT_CLASSIFICATION	// attributed label...
WITHOUT_CLASSIFICATION	// label insets...
WITHOUT_CLASSIFICATION	// label angle...
WITHOUT_CLASSIFICATION	// label location...
WITHOUT_CLASSIFICATION	// axis line visible...
WITHOUT_CLASSIFICATION	// axis line stroke...
WITHOUT_CLASSIFICATION	// axis line paint...
WITHOUT_CLASSIFICATION	// tick label font...
WITHOUT_CLASSIFICATION	// tick label paint...
WITHOUT_CLASSIFICATION	// tick marks visible flag...
WITHOUT_CLASSIFICATION	// tick mark inside length...
WITHOUT_CLASSIFICATION	// tick mark outside length...
WITHOUT_CLASSIFICATION	// tick mark stroke...
WITHOUT_CLASSIFICATION	// fixed dimension...
WITHOUT_CLASSIFICATION	// axis line visible flag...
WITHOUT_CLASSIFICATION	// positiveArrowVisible;
WITHOUT_CLASSIFICATION	//private Shape upArrow;
WITHOUT_CLASSIFICATION	//private Shape downArrow;
WITHOUT_CLASSIFICATION	//private Shape leftArrow;
WITHOUT_CLASSIFICATION	//private Shape rightArrow;
WITHOUT_CLASSIFICATION	// axisLineStroke
WITHOUT_CLASSIFICATION	// inverted
WITHOUT_CLASSIFICATION	//private TickUnits standardTickUnits;
WITHOUT_CLASSIFICATION	// verticalTickLabels
WITHOUT_CLASSIFICATION	// time zone
WITHOUT_CLASSIFICATION	// locale
WITHOUT_CLASSIFICATION	// chars
WITHOUT_CLASSIFICATION	// showYear[]
WITHOUT_CLASSIFICATION	// yearFormatter
WITHOUT_CLASSIFICATION	// NONE / NONE
WITHOUT_CLASSIFICATION	// NONE / RANGE
WITHOUT_CLASSIFICATION	// NONE / FIXED
WITHOUT_CLASSIFICATION	// RANGE / NONE
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// RANGE / RANGE
WITHOUT_CLASSIFICATION	// RANGE / FIXED
WITHOUT_CLASSIFICATION	// FIXED / NONE
WITHOUT_CLASSIFICATION	// FIXED / RANGE
WITHOUT_CLASSIFICATION	// FIXED / FIXED
WITHOUT_CLASSIFICATION	// TBLRC // 00010 - right item only
WITHOUT_CLASSIFICATION	// TBLRC // 00010 - right item only
WITHOUT_CLASSIFICATION	// TBLRC // 00011 - right and center items
WITHOUT_CLASSIFICATION	// TBLRC // 00011 - right and center items
WITHOUT_CLASSIFICATION	// try case where right item is shorter than center item
WITHOUT_CLASSIFICATION	// TBLRC // 00100 - left item only
WITHOUT_CLASSIFICATION	// TBLRC // 00101 - left and center items
WITHOUT_CLASSIFICATION	// TBLRC // 00101 - left and center items
WITHOUT_CLASSIFICATION	// try case where left item is shorter than center item
WITHOUT_CLASSIFICATION	// TBLRC // 00110 - left and right items
WITHOUT_CLASSIFICATION	// TBLRC // 00111 - left, right and center items
WITHOUT_CLASSIFICATION	// TBLRC // 01000 - bottom item only
WITHOUT_CLASSIFICATION	// TBLRC // 01001 - bottom and center only
WITHOUT_CLASSIFICATION	// TBLRC // 01010 - bottom and right only
WITHOUT_CLASSIFICATION	// TBLRC // 10110 - top, left and right
WITHOUT_CLASSIFICATION	// TBLRC // 10111
WITHOUT_CLASSIFICATION	// TBLRC // 11000 - top and bottom only
WITHOUT_CLASSIFICATION	// TBLRC // 11001
WITHOUT_CLASSIFICATION	// TBLRC // 11010 - top, bottom and right
WITHOUT_CLASSIFICATION	// TBLRC // 11100
WITHOUT_CLASSIFICATION	// TBLRC // 11101
WITHOUT_CLASSIFICATION	// TBLRC // 11110
WITHOUT_CLASSIFICATION	// TBLRC // 11111 - all
WITHOUT_CLASSIFICATION	// create dataset 1...
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// TBLRC // 00110 - left and right items
WITHOUT_CLASSIFICATION	// TBLRC // 00111 - left, right and center items
WITHOUT_CLASSIFICATION	// TBLRC // 01000 - bottom item only
WITHOUT_CLASSIFICATION	// TBLRC // 01001 - bottom and center only
WITHOUT_CLASSIFICATION	// TBLRC // 01010 - bottom and right only
WITHOUT_CLASSIFICATION	// TBLRC // 01011 - bottom, right and center
WITHOUT_CLASSIFICATION	// TBLRC // 01100
WITHOUT_CLASSIFICATION	// TBLRC // 01101 - bottom, left and center
WITHOUT_CLASSIFICATION	// TBLRC // 01110 - bottom. left and right
WITHOUT_CLASSIFICATION	// TBLRC // 01111
WITHOUT_CLASSIFICATION	// TBLRC // 10000 - top item only
WITHOUT_CLASSIFICATION	// TBLRC // 10001 - top and center only
WITHOUT_CLASSIFICATION	// TBLRC // 10010 - right and top only
WITHOUT_CLASSIFICATION	// TBLRC // 10011 - top, right and center
WITHOUT_CLASSIFICATION	// TBLRC // 10100 - top and left only
WITHOUT_CLASSIFICATION	// TBLRC // 10101 - top, left and center
WITHOUT_CLASSIFICATION	// TBLRC // 10111
WITHOUT_CLASSIFICATION	// standard test
WITHOUT_CLASSIFICATION	// tooltip format
WITHOUT_CLASSIFICATION	// tooltip format
WITHOUT_CLASSIFICATION	// date format
WITHOUT_CLASSIFICATION	// Y format
WITHOUT_CLASSIFICATION	// some setup...
WITHOUT_CLASSIFICATION	// some setup...
WITHOUT_CLASSIFICATION	// another test...
WITHOUT_CLASSIFICATION	// try a null value
WITHOUT_CLASSIFICATION	// format string...
WITHOUT_CLASSIFICATION	// x number format
WITHOUT_CLASSIFICATION	// y number format
WITHOUT_CLASSIFICATION	// z number format
WITHOUT_CLASSIFICATION	// x date format
WITHOUT_CLASSIFICATION	// y date format
WITHOUT_CLASSIFICATION	// z date format
WITHOUT_CLASSIFICATION	// remove plot2, but plot1 is removed instead
WITHOUT_CLASSIFICATION	// create subplot 1...
WITHOUT_CLASSIFICATION	// create subplot 2...
WITHOUT_CLASSIFICATION	// add the subplots...
WITHOUT_CLASSIFICATION	// separatorsVisible
WITHOUT_CLASSIFICATION	// separatorStroke
WITHOUT_CLASSIFICATION	// separatorPaint
WITHOUT_CLASSIFICATION	// outerSeparatorExtension
WITHOUT_CLASSIFICATION	// sectionDepth
WITHOUT_CLASSIFICATION	// orientation...
WITHOUT_CLASSIFICATION	// axisOffset...
WITHOUT_CLASSIFICATION	// domainAxes...
WITHOUT_CLASSIFICATION	// TBLRC // 00000 - no items
WITHOUT_CLASSIFICATION	// TBLRC // 11001
WITHOUT_CLASSIFICATION	// TBLRC // 11010 - top, bottom and right
WITHOUT_CLASSIFICATION	// TBLRC // 11011
WITHOUT_CLASSIFICATION	// TBLRC // 11100
WITHOUT_CLASSIFICATION	// TBLRC // 11101
WITHOUT_CLASSIFICATION	// TBLRC // 11110
WITHOUT_CLASSIFICATION	// check handling when the dataset is a regular XYDataset, not an // XYZDataset...
WITHOUT_CLASSIFICATION	// domainAxisLocation - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	// domainAxisLocations...
WITHOUT_CLASSIFICATION	// draw shared domain axis...
WITHOUT_CLASSIFICATION	// rangeAxes...
WITHOUT_CLASSIFICATION	// rangeAxisLocation - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	// rangeAxisLocations...
WITHOUT_CLASSIFICATION	// datasetToDomainAxisMap...
WITHOUT_CLASSIFICATION	// datasetToRangeAxisMap...
WITHOUT_CLASSIFICATION	// renderers...
WITHOUT_CLASSIFICATION	// rendering order...
WITHOUT_CLASSIFICATION	// columnRenderingOrder...
WITHOUT_CLASSIFICATION	// rowRenderingOrder...
WITHOUT_CLASSIFICATION	// domainGridlinesVisible
WITHOUT_CLASSIFICATION	// domainGridlineStroke
WITHOUT_CLASSIFICATION	// domainGridlinePaint
WITHOUT_CLASSIFICATION	// rangeGridlinesVisible
WITHOUT_CLASSIFICATION	// rangeGridlineStroke
WITHOUT_CLASSIFICATION	// rangeGridlinePaint
WITHOUT_CLASSIFICATION	// rangeCrosshairVisible
WITHOUT_CLASSIFICATION	// rangeCrosshairValue
WITHOUT_CLASSIFICATION	// rangeCrosshairStroke
WITHOUT_CLASSIFICATION	// rangeCrosshairLockedOnData
WITHOUT_CLASSIFICATION	// foreground domain markers
WITHOUT_CLASSIFICATION	// background domain markers
WITHOUT_CLASSIFICATION	// foreground range markers...
WITHOUT_CLASSIFICATION	// background range markers...
WITHOUT_CLASSIFICATION	// annotations
WITHOUT_CLASSIFICATION	// weight
WITHOUT_CLASSIFICATION	// fixed domain axis space...
WITHOUT_CLASSIFICATION	// fixed range axis space...
WITHOUT_CLASSIFICATION	// crosshairDatasetIndex
WITHOUT_CLASSIFICATION	// domainCrosshairColumnKey
WITHOUT_CLASSIFICATION	// domainCrosshairRowKey
WITHOUT_CLASSIFICATION	// domainCrosshairVisible
WITHOUT_CLASSIFICATION	// domainCrosshairStroke
WITHOUT_CLASSIFICATION	// shadowGenerator
WITHOUT_CLASSIFICATION	// check for independence
WITHOUT_CLASSIFICATION	// we didn't get an exception so all is good
WITHOUT_CLASSIFICATION	// should get IllegalArgumentException for negative index
WITHOUT_CLASSIFICATION	// should get IllegalArgumentException for negative index
WITHOUT_CLASSIFICATION	// we should be able to give a dataset an arbitrary index
WITHOUT_CLASSIFICATION	// labelFont
WITHOUT_CLASSIFICATION	// labelPaint
WITHOUT_CLASSIFICATION	// dial outline paint
WITHOUT_CLASSIFICATION	// if multiple axes are mapped, the first in the list should be // returned...
WITHOUT_CLASSIFICATION	// we should be able to give a renderer an arbitrary index
WITHOUT_CLASSIFICATION	// add a second dataset
WITHOUT_CLASSIFICATION	// add a second dataset
WITHOUT_CLASSIFICATION	// add a second dataset
WITHOUT_CLASSIFICATION	// by default, the renderer with index 0 is used
WITHOUT_CLASSIFICATION	// add a second renderer with the same index as dataset2, now it will // be used
WITHOUT_CLASSIFICATION	// now map the dataset to the second xAxis
WITHOUT_CLASSIFICATION	// now map the dataset to the second xAxis
WITHOUT_CLASSIFICATION	// add a second dataset, plotted against a second x axis
WITHOUT_CLASSIFICATION	// add a second dataset, plotted against a second axis
WITHOUT_CLASSIFICATION	// needle paint
WITHOUT_CLASSIFICATION	// value font
WITHOUT_CLASSIFICATION	// value paint
WITHOUT_CLASSIFICATION	// tick label font
WITHOUT_CLASSIFICATION	// tick label paint
WITHOUT_CLASSIFICATION	// tick label format
WITHOUT_CLASSIFICATION	// tick paint
WITHOUT_CLASSIFICATION	// draw border
WITHOUT_CLASSIFICATION	// meter angle
WITHOUT_CLASSIFICATION	//key
WITHOUT_CLASSIFICATION	//paint
WITHOUT_CLASSIFICATION	//stroke
WITHOUT_CLASSIFICATION	//outlinePaint
WITHOUT_CLASSIFICATION	//outlineStroke
WITHOUT_CLASSIFICATION	//alpha
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// drawBorder
WITHOUT_CLASSIFICATION	// rosePaint
WITHOUT_CLASSIFICATION	// roseCenterPaint
WITHOUT_CLASSIFICATION	// roseHighlightPaint
WITHOUT_CLASSIFICATION	// interiorGap...
WITHOUT_CLASSIFICATION	// circular
WITHOUT_CLASSIFICATION	// direction
WITHOUT_CLASSIFICATION	// ignoreNullValues
WITHOUT_CLASSIFICATION	// sectionPaint
WITHOUT_CLASSIFICATION	// sectionPaintMap
WITHOUT_CLASSIFICATION	// baseSectionPaint
WITHOUT_CLASSIFICATION	// sectionOutlinePaint
WITHOUT_CLASSIFICATION	// sectionOutlinePaintList
WITHOUT_CLASSIFICATION	// baseSectionOutlinePaint
WITHOUT_CLASSIFICATION	// sectionOutlineStrokeList
WITHOUT_CLASSIFICATION	// baseSectionOutlineStroke
WITHOUT_CLASSIFICATION	// shadowPaint
WITHOUT_CLASSIFICATION	// shadowXOffset
WITHOUT_CLASSIFICATION	// shadowYOffset
WITHOUT_CLASSIFICATION	// labelOutlinePaint
WITHOUT_CLASSIFICATION	// labelOutlineStroke
WITHOUT_CLASSIFICATION	// labelShadowPaint
WITHOUT_CLASSIFICATION	// explodePercentages
WITHOUT_CLASSIFICATION	// backgroundImage
WITHOUT_CLASSIFICATION	// startAngle
WITHOUT_CLASSIFICATION	// backgroundImageAlignment
WITHOUT_CLASSIFICATION	// backgroundImageAlpha
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// shadowGenerator
WITHOUT_CLASSIFICATION	// direction
WITHOUT_CLASSIFICATION	// labelLinkPaint
WITHOUT_CLASSIFICATION	// maximumLabelWidth
WITHOUT_CLASSIFICATION	// links visible
WITHOUT_CLASSIFICATION	// labelGap
WITHOUT_CLASSIFICATION	// toolTipGenerator
WITHOUT_CLASSIFICATION	// linkMargin
WITHOUT_CLASSIFICATION	// legendItemShape
WITHOUT_CLASSIFICATION	// labelLinkStroke
WITHOUT_CLASSIFICATION	// minimumArcAngleToDraw
WITHOUT_CLASSIFICATION	// urlGenerator
WITHOUT_CLASSIFICATION	// legendLabelGenerator
WITHOUT_CLASSIFICATION	// legendItemShape
WITHOUT_CLASSIFICATION	// legendLabelToolTipGenerator
WITHOUT_CLASSIFICATION	// legendLabelURLGenerator
WITHOUT_CLASSIFICATION	// autoPopulateSectionPaint
WITHOUT_CLASSIFICATION	// autoPopulateSectionOutlinePaint
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// autoPopulateSectionOutlineStroke
WITHOUT_CLASSIFICATION	// check that the URL generator has been cloned
WITHOUT_CLASSIFICATION	// check that the URL generator has been cloned
WITHOUT_CLASSIFICATION	// change the shape and make sure it only affects p1
WITHOUT_CLASSIFICATION	// change the generator and make sure it only affects p1
WITHOUT_CLASSIFICATION	// change the generator and make sure it only affects p1
WITHOUT_CLASSIFICATION	// check that null items are ignored if requested
WITHOUT_CLASSIFICATION	// check that zero items are ignored if requested
WITHOUT_CLASSIFICATION	// check that negative items are always ignored
WITHOUT_CLASSIFICATION	// noDataMessage
WITHOUT_CLASSIFICATION	// noDataMessageFont
WITHOUT_CLASSIFICATION	// noDataMessagePaint
WITHOUT_CLASSIFICATION	// outlineVisible
WITHOUT_CLASSIFICATION	// outlineStroke
WITHOUT_CLASSIFICATION	// foregroundAlpha
WITHOUT_CLASSIFICATION	// backgroundAlpha
WITHOUT_CLASSIFICATION	// drawingSupplier
WITHOUT_CLASSIFICATION	// try a null collection
WITHOUT_CLASSIFICATION	// dataExtractOrder
WITHOUT_CLASSIFICATION	// headPercent
WITHOUT_CLASSIFICATION	// interiorGap
WITHOUT_CLASSIFICATION	// maxValue
WITHOUT_CLASSIFICATION	// secondary renderers
WITHOUT_CLASSIFICATION	// row keys...
WITHOUT_CLASSIFICATION	// row keys...
WITHOUT_CLASSIFICATION	// column keys...
WITHOUT_CLASSIFICATION	// padding
WITHOUT_CLASSIFICATION	// column keys...
WITHOUT_CLASSIFICATION	// column keys...
WITHOUT_CLASSIFICATION	// column keys...
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// labelFont
WITHOUT_CLASSIFICATION	// labelPaint
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// axisLinePaint
WITHOUT_CLASSIFICATION	// axisLineStroke
WITHOUT_CLASSIFICATION	// remove plot2, but plot1 is removed instead
WITHOUT_CLASSIFICATION	// orientation...
WITHOUT_CLASSIFICATION	// axisOffset...
WITHOUT_CLASSIFICATION	// labelGenerator
WITHOUT_CLASSIFICATION	// toolTipGenerator
WITHOUT_CLASSIFICATION	// urlGenerator
WITHOUT_CLASSIFICATION	// change a series paint
WITHOUT_CLASSIFICATION	// baseSeriesOutlineStroke
WITHOUT_CLASSIFICATION	// valueFont
WITHOUT_CLASSIFICATION	// webFilled
WITHOUT_CLASSIFICATION	// change a series outline paint
WITHOUT_CLASSIFICATION	// axisLabelGap
WITHOUT_CLASSIFICATION	// thermometerPaint
WITHOUT_CLASSIFICATION	// change the legendItemShape
WITHOUT_CLASSIFICATION	// secondary DomainAxisLocations...
WITHOUT_CLASSIFICATION	// change a series outline stroke
WITHOUT_CLASSIFICATION	// valueLocation
WITHOUT_CLASSIFICATION	// thermometerStroke
WITHOUT_CLASSIFICATION	// valuePaint
WITHOUT_CLASSIFICATION	// axisLocation
WITHOUT_CLASSIFICATION	// showValueLines
WITHOUT_CLASSIFICATION	// domainAxisLocation...
WITHOUT_CLASSIFICATION	// valueFormat
WITHOUT_CLASSIFICATION	// this doesn't work
WITHOUT_CLASSIFICATION	// mercuryPaint
WITHOUT_CLASSIFICATION	// rangeAxisLocation...
WITHOUT_CLASSIFICATION	// domainAxis...
WITHOUT_CLASSIFICATION	// secondary DomainAxes...
WITHOUT_CLASSIFICATION	// secondary RangeAxisLocations...
WITHOUT_CLASSIFICATION	// rangeAxis...
WITHOUT_CLASSIFICATION	// renderer
WITHOUT_CLASSIFICATION	// secondary RangeAxes...
WITHOUT_CLASSIFICATION	// secondaryDatasetRangeAxisMap...
WITHOUT_CLASSIFICATION	// secondary DatasetDomainAxisMap...
WITHOUT_CLASSIFICATION	// try a collection with a single number plus a null
WITHOUT_CLASSIFICATION	// create dataset 1...
WITHOUT_CLASSIFICATION	// create dataset 1...
WITHOUT_CLASSIFICATION	// lowerBound
WITHOUT_CLASSIFICATION	// remove plot2, but plot1 is removed instead
WITHOUT_CLASSIFICATION	// create subplot 1...
WITHOUT_CLASSIFICATION	// create subplot 2...
WITHOUT_CLASSIFICATION	// parent plot...
WITHOUT_CLASSIFICATION	// add the subplots...
WITHOUT_CLASSIFICATION	// domainGridlineStroke
WITHOUT_CLASSIFICATION	// domainGridlinePaint
WITHOUT_CLASSIFICATION	// rangeGridlinesVisible
WITHOUT_CLASSIFICATION	// rangeGridlineStroke
WITHOUT_CLASSIFICATION	// rangeCrosshairVisible
WITHOUT_CLASSIFICATION	// rangeCrosshairValue
WITHOUT_CLASSIFICATION	// rangeCrosshairStroke
WITHOUT_CLASSIFICATION	// rangeCrosshairLockedOnData
WITHOUT_CLASSIFICATION	// weight
WITHOUT_CLASSIFICATION	// fixed legend items
WITHOUT_CLASSIFICATION	// shadowGenerator
WITHOUT_CLASSIFICATION	// should get IllegalArgumentException for negative index
WITHOUT_CLASSIFICATION	// we should be able to give a dataset an arbitrary index
WITHOUT_CLASSIFICATION	// we should be able to give a renderer an arbitrary index
WITHOUT_CLASSIFICATION	// add a second dataset
WITHOUT_CLASSIFICATION	// add a second dataset
WITHOUT_CLASSIFICATION	// by default, the renderer with index 0 is used
WITHOUT_CLASSIFICATION	// now map the dataset to the second xAxis
WITHOUT_CLASSIFICATION	// now map the dataset to the second xAxis
WITHOUT_CLASSIFICATION	// add a second dataset, plotted against a second x axis
WITHOUT_CLASSIFICATION	// add a second dataset, plotted against a second axis
WITHOUT_CLASSIFICATION	// rangeZeroBaselineVisible
WITHOUT_CLASSIFICATION	// rangeZeroBaselineStroke
WITHOUT_CLASSIFICATION	// rangeZeroBaselinePaint
WITHOUT_CLASSIFICATION	// range markers
WITHOUT_CLASSIFICATION	// secondary range markers
WITHOUT_CLASSIFICATION	// quadrant origin
WITHOUT_CLASSIFICATION	// quadrant paint
WITHOUT_CLASSIFICATION	// verify that the plot is listening to the cloned renderer
WITHOUT_CLASSIFICATION	// no renderer 1
WITHOUT_CLASSIFICATION	// actually removes a1
WITHOUT_CLASSIFICATION	// set up some objects...
WITHOUT_CLASSIFICATION	// paint sequence
WITHOUT_CLASSIFICATION	// outline paint sequence
WITHOUT_CLASSIFICATION	// outline stroke sequence
WITHOUT_CLASSIFICATION	// shape sequence
WITHOUT_CLASSIFICATION	// paint index
WITHOUT_CLASSIFICATION	// outline paint index
WITHOUT_CLASSIFICATION	// outline stroke index
WITHOUT_CLASSIFICATION	// shape index
WITHOUT_CLASSIFICATION	// create dataset 2...
WITHOUT_CLASSIFICATION	// lowerBound
WITHOUT_CLASSIFICATION	// upperBound
WITHOUT_CLASSIFICATION	// startAngle
WITHOUT_CLASSIFICATION	// extent
WITHOUT_CLASSIFICATION	// tickRadius
WITHOUT_CLASSIFICATION	// backgroundPaint
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// font
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// textAnchor
WITHOUT_CLASSIFICATION	// stroke
WITHOUT_CLASSIFICATION	// now make a change to the renderer and see if it triggers a plot // change event...
WITHOUT_CLASSIFICATION	// if multiple axes are mapped, the first in the list should be // returned...
WITHOUT_CLASSIFICATION	// add a second renderer with the same index as dataset2, now it will // be used
WITHOUT_CLASSIFICATION	// outlineStroke
WITHOUT_CLASSIFICATION	// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)
WITHOUT_CLASSIFICATION	// now remove a3, but since a3.equals(a1), this will in fact remove // a1...
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// visible
WITHOUT_CLASSIFICATION	// radius
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// radius
WITHOUT_CLASSIFICATION	// radius
WITHOUT_CLASSIFICATION	// foregroundPaint
WITHOUT_CLASSIFICATION	// background paint
WITHOUT_CLASSIFICATION	// foreground paint
WITHOUT_CLASSIFICATION	// inner radius
WITHOUT_CLASSIFICATION	// outer radius
WITHOUT_CLASSIFICATION	// dataset index
WITHOUT_CLASSIFICATION	// dataset index
WITHOUT_CLASSIFICATION	// angle
WITHOUT_CLASSIFICATION	// frameAnchor
WITHOUT_CLASSIFICATION	// templateValue
WITHOUT_CLASSIFICATION	// valueAnchor
WITHOUT_CLASSIFICATION	// fill paint
WITHOUT_CLASSIFICATION	// outline paint
WITHOUT_CLASSIFICATION	// outline stroke
WITHOUT_CLASSIFICATION	// test a customised instance
WITHOUT_CLASSIFICATION	// test a custom instance
WITHOUT_CLASSIFICATION	// background
WITHOUT_CLASSIFICATION	// dial cap
WITHOUT_CLASSIFICATION	// frame
WITHOUT_CLASSIFICATION	// view
WITHOUT_CLASSIFICATION	// layer
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// font
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// stroke
WITHOUT_CLASSIFICATION	// shape
WITHOUT_CLASSIFICATION	// tickLabelFont
WITHOUT_CLASSIFICATION	// tickLabelPaint
WITHOUT_CLASSIFICATION	// outlineStroke
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// radius
WITHOUT_CLASSIFICATION	// angle
WITHOUT_CLASSIFICATION	// test a customised instance
WITHOUT_CLASSIFICATION	// test a customised instance
WITHOUT_CLASSIFICATION	// test a custom instance
WITHOUT_CLASSIFICATION	// majorTickIncrement
WITHOUT_CLASSIFICATION	// majorTickLength
WITHOUT_CLASSIFICATION	// majorTickPaint
WITHOUT_CLASSIFICATION	// majorTickStroke
WITHOUT_CLASSIFICATION	// minorTickLength
WITHOUT_CLASSIFICATION	// tickLabelOffset
WITHOUT_CLASSIFICATION	// try a default instance
WITHOUT_CLASSIFICATION	// try a customised instance
WITHOUT_CLASSIFICATION	// label
WITHOUT_CLASSIFICATION	// gradient paint transformer
WITHOUT_CLASSIFICATION	// test default instance
WITHOUT_CLASSIFICATION	// have to use a concrete subclass...
WITHOUT_CLASSIFICATION	// seriesVisible
WITHOUT_CLASSIFICATION	// seriesVisibleList
WITHOUT_CLASSIFICATION	// baseSeriesVisible
WITHOUT_CLASSIFICATION	// seriesVisibleInLegendList
WITHOUT_CLASSIFICATION	// baseSeriesVisibleInLegend
WITHOUT_CLASSIFICATION	// paintList
WITHOUT_CLASSIFICATION	// basePaint
WITHOUT_CLASSIFICATION	// baseFillPaint
WITHOUT_CLASSIFICATION	// outlinePaintList
WITHOUT_CLASSIFICATION	// baseOutlinePaint
WITHOUT_CLASSIFICATION	// strokeList
WITHOUT_CLASSIFICATION	// outlineStrokeList
WITHOUT_CLASSIFICATION	// baseOutlineStroke
WITHOUT_CLASSIFICATION	// shapeList
WITHOUT_CLASSIFICATION	// baseShape
WITHOUT_CLASSIFICATION	// itemLabelsVisibleList
WITHOUT_CLASSIFICATION	// baseItemLabelsVisible
WITHOUT_CLASSIFICATION	// itemLabelFont
WITHOUT_CLASSIFICATION	// baseItemLabelFont
WITHOUT_CLASSIFICATION	// itemLabelPaint
WITHOUT_CLASSIFICATION	// itemLabelPaintList
WITHOUT_CLASSIFICATION	// baseItemLabelPaint
WITHOUT_CLASSIFICATION	// positiveItemLabelPositionList;
WITHOUT_CLASSIFICATION	// basePositiveItemLabelPosition;
WITHOUT_CLASSIFICATION	// negativeItemLabelPosition;
WITHOUT_CLASSIFICATION	// OUTLINE STROKE
WITHOUT_CLASSIFICATION	// SHAPE
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// baseOutlinePaint
WITHOUT_CLASSIFICATION	// itemLabelAnchorOffset
WITHOUT_CLASSIFICATION	// createEntities;
WITHOUT_CLASSIFICATION	// createEntitiesList;
WITHOUT_CLASSIFICATION	// legendShape
WITHOUT_CLASSIFICATION	// baseLegendShape
WITHOUT_CLASSIFICATION	// legendTextFont
WITHOUT_CLASSIFICATION	// baseLegendTextFont
WITHOUT_CLASSIFICATION	// OUTLINE PAINT
WITHOUT_CLASSIFICATION	// ITEM_LABELS_VISIBLE
WITHOUT_CLASSIFICATION	// ITEM_LABEL_FONT
WITHOUT_CLASSIFICATION	// POSITIVE ITEM LABEL POSITION
WITHOUT_CLASSIFICATION	// NEGATIVE ITEM LABEL ANCHOR
WITHOUT_CLASSIFICATION	// failed
WITHOUT_CLASSIFICATION	// now check autoPopulate==true
WITHOUT_CLASSIFICATION	// now check autoPopulate==true
WITHOUT_CLASSIFICATION	// now check autoPopulate==true
WITHOUT_CLASSIFICATION	/*CategoryPlot plot =*/
WITHOUT_CLASSIFICATION	/*CategoryPlot plot =*/
WITHOUT_CLASSIFICATION	/*CategoryPlot plot =*/
WITHOUT_CLASSIFICATION	// check a series with no items
WITHOUT_CLASSIFICATION	// check a series with no items
WITHOUT_CLASSIFICATION	// check a series with one item
WITHOUT_CLASSIFICATION	// check a series with one item
WITHOUT_CLASSIFICATION	// check a series with one item
WITHOUT_CLASSIFICATION	// check a series with one item
WITHOUT_CLASSIFICATION	// check a series with two items
WITHOUT_CLASSIFICATION	// check a series with two items
WITHOUT_CLASSIFICATION	// check a series with two items
WITHOUT_CLASSIFICATION	// check a series with two items
WITHOUT_CLASSIFICATION	// check a series with three items
WITHOUT_CLASSIFICATION	// check a series with three items
WITHOUT_CLASSIFICATION	// check a series with three items
WITHOUT_CLASSIFICATION	// check a series with three items
WITHOUT_CLASSIFICATION	// check a series with three items
WITHOUT_CLASSIFICATION	// check a series with four items
WITHOUT_CLASSIFICATION	// check a series with four items
WITHOUT_CLASSIFICATION	// check a series with four items
WITHOUT_CLASSIFICATION	// check a series with four items
WITHOUT_CLASSIFICATION	// check a series with repeating items
WITHOUT_CLASSIFICATION	// check a series with repeating items
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// check a series with no items
WITHOUT_CLASSIFICATION	// check a series with one item
WITHOUT_CLASSIFICATION	// check a series with two items
WITHOUT_CLASSIFICATION	// check a series with three items
WITHOUT_CLASSIFICATION	// check a series with four items
WITHOUT_CLASSIFICATION	// check a series with repeating items
WITHOUT_CLASSIFICATION	// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value
WITHOUT_CLASSIFICATION	// we're doing this for testing only, and make sure that we // only add data in descending order by x-value
WITHOUT_CLASSIFICATION	// try with gradient paint
WITHOUT_CLASSIFICATION	// should be equal...
WITHOUT_CLASSIFICATION	// should be equal...
WITHOUT_CLASSIFICATION	// and independent...
WITHOUT_CLASSIFICATION	// and independent...
WITHOUT_CLASSIFICATION	// and independent...
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	// the renderer should not be equal to a BarRenderer
WITHOUT_CLASSIFICATION	// firstBarPaint;
WITHOUT_CLASSIFICATION	// lastBarPaint;
WITHOUT_CLASSIFICATION	// positiveBarPaint;
WITHOUT_CLASSIFICATION	//private Paint negativeBarPaint;
WITHOUT_CLASSIFICATION	// quick check for independence
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// shadowXOffset
WITHOUT_CLASSIFICATION	// shadowYOffset
WITHOUT_CLASSIFICATION	// toolTipGenerator
WITHOUT_CLASSIFICATION	// urlGenerator
WITHOUT_CLASSIFICATION	// should be equal...
WITHOUT_CLASSIFICATION	// and independent...
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	// check that the series visible flag is observed
WITHOUT_CLASSIFICATION	// map
WITHOUT_CLASSIFICATION	// toolTipGeneratorList
WITHOUT_CLASSIFICATION	// baseToolTipGenerator
WITHOUT_CLASSIFICATION	// itemLabelGenerator
WITHOUT_CLASSIFICATION	// itemLabelGeneratorList
WITHOUT_CLASSIFICATION	// baseItemLabelGenerator
WITHOUT_CLASSIFICATION	// urlGeneratorList
WITHOUT_CLASSIFICATION	// baseItemURLGenerator
WITHOUT_CLASSIFICATION	// legendItemLabelGenerator
WITHOUT_CLASSIFICATION	// legendItemToolTipGenerator
WITHOUT_CLASSIFICATION	// legendItemURLGenerator
WITHOUT_CLASSIFICATION	// check that the generator has been cloned
WITHOUT_CLASSIFICATION	// check that the generator has been cloned
WITHOUT_CLASSIFICATION	// check that the generator has been cloned
WITHOUT_CLASSIFICATION	// base value
WITHOUT_CLASSIFICATION	// itemMargin
WITHOUT_CLASSIFICATION	// drawBarOutline
WITHOUT_CLASSIFICATION	// maximumBarWidth
WITHOUT_CLASSIFICATION	// minimumBarLength
WITHOUT_CLASSIFICATION	// gradientPaintTransformer
WITHOUT_CLASSIFICATION	// positiveItemLabelPositionFallback
WITHOUT_CLASSIFICATION	// negativeItemLabelPositionFallback
WITHOUT_CLASSIFICATION	// barPainter
WITHOUT_CLASSIFICATION	// shadowsVisible
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// shadowXOffset
WITHOUT_CLASSIFICATION	// shadowYOffset
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	// check that the series visible flag is observed
WITHOUT_CLASSIFICATION	// barPainter
WITHOUT_CLASSIFICATION	// shadowsVisible
WITHOUT_CLASSIFICATION	// try null argument
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// check that super class fields are being looked at...
WITHOUT_CLASSIFICATION	// setUseYInterval
WITHOUT_CLASSIFICATION	// setBase()
WITHOUT_CLASSIFICATION	// try empty dataset
WITHOUT_CLASSIFICATION	// setGradientPaintTransformer()
WITHOUT_CLASSIFICATION	// setDrawBarOutline()
WITHOUT_CLASSIFICATION	// setMargin()
WITHOUT_CLASSIFICATION	// legendBar
WITHOUT_CLASSIFICATION	// positiveItemLabelFallbackPosition
WITHOUT_CLASSIFICATION	// negativeItemLabelFallbackPosition
WITHOUT_CLASSIFICATION	// check a list containing a non-Number object
WITHOUT_CLASSIFICATION	// try something from the base class
WITHOUT_CLASSIFICATION	// positive paint
WITHOUT_CLASSIFICATION	// negative paint
WITHOUT_CLASSIFICATION	// shapesVisible
WITHOUT_CLASSIFICATION	// legendLine
WITHOUT_CLASSIFICATION	// roundXCoordinates
WITHOUT_CLASSIFICATION	// drawOpenTicks
WITHOUT_CLASSIFICATION	// drawCloseTicks
WITHOUT_CLASSIFICATION	// openTickPaint
WITHOUT_CLASSIFICATION	// closeTickPaint
WITHOUT_CLASSIFICATION	// tickLength
WITHOUT_CLASSIFICATION	// try an empty dataset - should return a null range
WITHOUT_CLASSIFICATION	// try a null dataset - should return a null range
WITHOUT_CLASSIFICATION	// drawXError
WITHOUT_CLASSIFICATION	// drawYError
WITHOUT_CLASSIFICATION	// capLength
WITHOUT_CLASSIFICATION	// errorPaint
WITHOUT_CLASSIFICATION	// errorStroke
WITHOUT_CLASSIFICATION	// check boxPaint null also
WITHOUT_CLASSIFICATION	// upPaint
WITHOUT_CLASSIFICATION	// downPaint
WITHOUT_CLASSIFICATION	// drawVolume
WITHOUT_CLASSIFICATION	// candleWidth
WITHOUT_CLASSIFICATION	// maxCandleWidthInMilliseconds
WITHOUT_CLASSIFICATION	// autoWidthMethod
WITHOUT_CLASSIFICATION	// autoWidthFactor
WITHOUT_CLASSIFICATION	// backgroundPaint
WITHOUT_CLASSIFICATION	// padding
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// fillPaintTransformer
WITHOUT_CLASSIFICATION	// fillPaint
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// linePaint
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// shape
WITHOUT_CLASSIFICATION	// outlineStroke
WITHOUT_CLASSIFICATION	// axisLocation
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	// check that the generator has been cloned
WITHOUT_CLASSIFICATION	// check that the generator has been cloned
WITHOUT_CLASSIFICATION	// check that the generator has been cloned
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// try an empty dataset - should return a null range
WITHOUT_CLASSIFICATION	// try a null dataset - should return a null range
WITHOUT_CLASSIFICATION	// locale shouldn't matter here
WITHOUT_CLASSIFICATION	// autoWidthGap
WITHOUT_CLASSIFICATION	// check that a null dataset returns null bounds
WITHOUT_CLASSIFICATION	// check that a null dataset returns null bounds
WITHOUT_CLASSIFICATION	// check the bounds of a simple dataset
WITHOUT_CLASSIFICATION	// test findDomainBounds as well
WITHOUT_CLASSIFICATION	// blockHeight
WITHOUT_CLASSIFICATION	// blockWidth
WITHOUT_CLASSIFICATION	// paintScale
WITHOUT_CLASSIFICATION	// paintScale
WITHOUT_CLASSIFICATION	// the following fields are inherited from the AbstractXYItemRenderer
WITHOUT_CLASSIFICATION	// axis
WITHOUT_CLASSIFICATION	// axisOffset
WITHOUT_CLASSIFICATION	// stripWidth
WITHOUT_CLASSIFICATION	// stripOutlineVisible
WITHOUT_CLASSIFICATION	// stripOutlinePaint
WITHOUT_CLASSIFICATION	// stripOutlineStroke
WITHOUT_CLASSIFICATION	// shapeVisible
WITHOUT_CLASSIFICATION	// shapeFilled
WITHOUT_CLASSIFICATION	// shapeOutlineVisible
WITHOUT_CLASSIFICATION	// shapeAnchor
WITHOUT_CLASSIFICATION	// shapeLocation
WITHOUT_CLASSIFICATION	// line
WITHOUT_CLASSIFICATION	// lineStroke
WITHOUT_CLASSIFICATION	// maximumLinesToDisplay
WITHOUT_CLASSIFICATION	// toolTipText
WITHOUT_CLASSIFICATION	// expandToFitSpace
WITHOUT_CLASSIFICATION	// margin
WITHOUT_CLASSIFICATION	// border
WITHOUT_CLASSIFICATION	// is the clone independent
WITHOUT_CLASSIFICATION	// case 1 - object is mutable but not PublicCloneable
WITHOUT_CLASSIFICATION	// simple case
WITHOUT_CLASSIFICATION	// try a null value
WITHOUT_CLASSIFICATION	// try null argument
WITHOUT_CLASSIFICATION	// you can add a null list - it would have been better if this // required EMPTY_LIST
WITHOUT_CLASSIFICATION	// case 1 - object is mutable but not PublicCloneable
WITHOUT_CLASSIFICATION	// if we modify the original list, it's best if the URL generator is // not affected
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// the clone contains a reference to the original object
WITHOUT_CLASSIFICATION	// the clone contains a reference to the original object
WITHOUT_CLASSIFICATION	// CASE 2 - object is mutable AND PublicCloneable
WITHOUT_CLASSIFICATION	// CASE 2 - object is mutable AND PublicCloneable
WITHOUT_CLASSIFICATION	// the clone contains a reference to a CLONE of the original object
WITHOUT_CLASSIFICATION	// check that clone is independent of the original
WITHOUT_CLASSIFICATION	// check sorted rows
WITHOUT_CLASSIFICATION	// check for unknown column
WITHOUT_CLASSIFICATION	// try null key
WITHOUT_CLASSIFICATION	// try null key
WITHOUT_CLASSIFICATION	/*v =*/
WITHOUT_CLASSIFICATION	// confirm that the clone is independent of the original
WITHOUT_CLASSIFICATION	// check null argument 1
WITHOUT_CLASSIFICATION	/* ComparableObjectItem item1 = */
WITHOUT_CLASSIFICATION	// check key order
WITHOUT_CLASSIFICATION	// check retrieve value by index
WITHOUT_CLASSIFICATION	// retrieve an item
WITHOUT_CLASSIFICATION	// request with a negative index
WITHOUT_CLASSIFICATION	// request with a negative index
WITHOUT_CLASSIFICATION	// request width index == itemCount
WITHOUT_CLASSIFICATION	// check null argument
WITHOUT_CLASSIFICATION	// replace an existing value
WITHOUT_CLASSIFICATION	// try a null key - should throw an exception
WITHOUT_CLASSIFICATION	// try unknown key
WITHOUT_CLASSIFICATION	// try negative key index
WITHOUT_CLASSIFICATION	// try key index == itemCount
WITHOUT_CLASSIFICATION	/*Range r2 =*/
WITHOUT_CLASSIFICATION	// Expand by 0% does not change the range
WITHOUT_CLASSIFICATION	// Lower > upper: mid point is used
WITHOUT_CLASSIFICATION	// Shifting with a delta of 0 does not change the range
WITHOUT_CLASSIFICATION	// Scaling with a factor of 1 does not change the range
WITHOUT_CLASSIFICATION	/*s1 = */
WITHOUT_CLASSIFICATION	// key
WITHOUT_CLASSIFICATION	// autoSort
WITHOUT_CLASSIFICATION	// add a value
WITHOUT_CLASSIFICATION	// add another value
WITHOUT_CLASSIFICATION	// remove an item
WITHOUT_CLASSIFICATION	// map a key to a new group
WITHOUT_CLASSIFICATION	// clear a mapping
WITHOUT_CLASSIFICATION	// check handling of null key
WITHOUT_CLASSIFICATION	// a new map always has 1 group (the default group)
WITHOUT_CLASSIFICATION	// now overwrite group "G2"...
WITHOUT_CLASSIFICATION	// if there is an explicit mapping to the default group, it is counted
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// confirm that the clone is independent of the original
WITHOUT_CLASSIFICATION	// check key order
WITHOUT_CLASSIFICATION	// check key order
WITHOUT_CLASSIFICATION	// check retrieve value by key
WITHOUT_CLASSIFICATION	// check retrieve value by key
WITHOUT_CLASSIFICATION	// check retrieve value by key
WITHOUT_CLASSIFICATION	// check retrieve value by key
WITHOUT_CLASSIFICATION	// check retrieve value by index
WITHOUT_CLASSIFICATION	// check retrieve value by index
WITHOUT_CLASSIFICATION	// check retrieve value by index
WITHOUT_CLASSIFICATION	// check retrieve value by index
WITHOUT_CLASSIFICATION	// now overwrite group "G2"...
WITHOUT_CLASSIFICATION	// if the default group is not mapped to, it should still count towards // the group count...
WITHOUT_CLASSIFICATION	// now when the default group is mapped to, it shouldn't increase the // group count...
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// the default group is always at index 0
WITHOUT_CLASSIFICATION	// a non-existent group should return -1
WITHOUT_CLASSIFICATION	// indices are assigned in the order that groups are originally mapped
WITHOUT_CLASSIFICATION	// a key that hasn't been mapped should return the default group
WITHOUT_CLASSIFICATION	// a null argument should throw an exception
WITHOUT_CLASSIFICATION	// a small check for independence
WITHOUT_CLASSIFICATION	// check invalid indices
WITHOUT_CLASSIFICATION	// check invalid indices
WITHOUT_CLASSIFICATION	// confirm overwriting an existing value
WITHOUT_CLASSIFICATION	// try null keys
WITHOUT_CLASSIFICATION	// try negative row index
WITHOUT_CLASSIFICATION	// try row index too high
WITHOUT_CLASSIFICATION	// try negative column index
WITHOUT_CLASSIFICATION	// try column index too high
WITHOUT_CLASSIFICATION	// try unknown row key
WITHOUT_CLASSIFICATION	// try null row key
WITHOUT_CLASSIFICATION	// try unknown column key
WITHOUT_CLASSIFICATION	// try null column key
WITHOUT_CLASSIFICATION	/* Comparable k = */
WITHOUT_CLASSIFICATION	/* Comparable k = */
WITHOUT_CLASSIFICATION	// try null
WITHOUT_CLASSIFICATION	// it's OK to use an index equal to the size of the list
WITHOUT_CLASSIFICATION	// try replacing an existing value
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// try a null source
WITHOUT_CLASSIFICATION	// check negative index throws exception
WITHOUT_CLASSIFICATION	// check negative index throws exception
WITHOUT_CLASSIFICATION	// this is expected
WITHOUT_CLASSIFICATION	// this is expected
WITHOUT_CLASSIFICATION	// this is expected
WITHOUT_CLASSIFICATION	// check index == getItemCount() throws exception
WITHOUT_CLASSIFICATION	// test null source
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	// try null
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// this is expected
WITHOUT_CLASSIFICATION	// this is expected
WITHOUT_CLASSIFICATION	// this is expected
WITHOUT_CLASSIFICATION	// check index == getItemCount() throws exception
WITHOUT_CLASSIFICATION	// test null source
WITHOUT_CLASSIFICATION	// another item
WITHOUT_CLASSIFICATION	/* Number n =*/
WITHOUT_CLASSIFICATION	// increment a null value
WITHOUT_CLASSIFICATION	// increment an unknown row
WITHOUT_CLASSIFICATION	// increment an unknown column
WITHOUT_CLASSIFICATION	// a row of all null values is still counted...
WITHOUT_CLASSIFICATION	// a column of all null values is still counted...
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	// check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	// check that two empty datasets are equal
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// make sure that modifying the returned array doesn't change the // function
WITHOUT_CLASSIFICATION	// note that we don't define taskB1
WITHOUT_CLASSIFICATION	// define subtasks
WITHOUT_CLASSIFICATION	/* Number start = */
WITHOUT_CLASSIFICATION	// test collection 3, which doesn't define all tasks in all series
WITHOUT_CLASSIFICATION	// test collection 3, which doesn't define all tasks in all series
WITHOUT_CLASSIFICATION	// test collection 3, which doesn't define all tasks in all series
WITHOUT_CLASSIFICATION	/* int count = */
WITHOUT_CLASSIFICATION	/* Number end = */
WITHOUT_CLASSIFICATION	// try a single item
WITHOUT_CLASSIFICATION	// simple check for independence
WITHOUT_CLASSIFICATION	// what if we don't want the interval?
WITHOUT_CLASSIFICATION	// an item in series 2
WITHOUT_CLASSIFICATION	// another empty series
WITHOUT_CLASSIFICATION	// a dataset with a single value
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// a dataset with a single value
WITHOUT_CLASSIFICATION	// null is ignored
WITHOUT_CLASSIFICATION	// a Double.NaN should be ignored
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// try null argument
WITHOUT_CLASSIFICATION	// try null argument
WITHOUT_CLASSIFICATION	// check that clone is independent of the original
WITHOUT_CLASSIFICATION	/* Number n =*/
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	// simple check for independence
WITHOUT_CLASSIFICATION	// simple check for independence
WITHOUT_CLASSIFICATION	// try a single item
WITHOUT_CLASSIFICATION	// another item
WITHOUT_CLASSIFICATION	// another empty series
WITHOUT_CLASSIFICATION	// an item in series 2
WITHOUT_CLASSIFICATION	// Double.NaN DOESN'T mess things up
WITHOUT_CLASSIFICATION	// got it!
WITHOUT_CLASSIFICATION	// check that empty dataset is handled OK
WITHOUT_CLASSIFICATION	// and that simple aggregation works
WITHOUT_CLASSIFICATION	// an empty dataset should return a null max
WITHOUT_CLASSIFICATION	// an empty dataset should return a null max
WITHOUT_CLASSIFICATION	// null dataset throws IllegalArgumentException
WITHOUT_CLASSIFICATION	// null list throws IllegalArgumentException
WITHOUT_CLASSIFICATION	// null range throws IllegalArgumentException
WITHOUT_CLASSIFICATION	// empty dataset returns null
WITHOUT_CLASSIFICATION	// add an empty series
WITHOUT_CLASSIFICATION	// check a null value
WITHOUT_CLASSIFICATION	// check a NaN
WITHOUT_CLASSIFICATION	// check another regular value
WITHOUT_CLASSIFICATION	// add a second series
WITHOUT_CLASSIFICATION	// add a value to the second series
WITHOUT_CLASSIFICATION	// add a value that isn't in the xRange
WITHOUT_CLASSIFICATION	// try some nulls
WITHOUT_CLASSIFICATION	// an empty dataset should return null for bounds
WITHOUT_CLASSIFICATION	// try a dataset with a single value
WITHOUT_CLASSIFICATION	// try a dataset with two values
WITHOUT_CLASSIFICATION	// try a Double.NaN
WITHOUT_CLASSIFICATION	// try a Double.NEGATIVE_INFINITY
WITHOUT_CLASSIFICATION	// overwrite the value
WITHOUT_CLASSIFICATION	// test independence
WITHOUT_CLASSIFICATION	// now overwrite this item with another
WITHOUT_CLASSIFICATION	// try null list
WITHOUT_CLASSIFICATION	// try a list containing a single value
WITHOUT_CLASSIFICATION	// try null array
WITHOUT_CLASSIFICATION	// try an array containing no items
WITHOUT_CLASSIFICATION	// try an array containing a single Number
WITHOUT_CLASSIFICATION	// try an array containing a single Number and a null
WITHOUT_CLASSIFICATION	// try an array containing a single Number and a NaN
WITHOUT_CLASSIFICATION	// try a null argument
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// try null argument
WITHOUT_CLASSIFICATION	// test independence
WITHOUT_CLASSIFICATION	// try an empty collection
WITHOUT_CLASSIFICATION	// try a collection with a single number
WITHOUT_CLASSIFICATION	// try a collection with a single number plus a NaN
WITHOUT_CLASSIFICATION	// try a collection with several numbers
WITHOUT_CLASSIFICATION	// a Collection containing a NaN will return Double.NaN for the result
WITHOUT_CLASSIFICATION	// check null list
WITHOUT_CLASSIFICATION	// check empty list
WITHOUT_CLASSIFICATION	// check list containing null
WITHOUT_CLASSIFICATION	// try zero length array
WITHOUT_CLASSIFICATION	// try single value
WITHOUT_CLASSIFICATION	// locale shouldn't matter here
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try deleting a time period that doesn't exist...
WITHOUT_CLASSIFICATION	// try deleting null
WITHOUT_CLASSIFICATION	// copy a range before the start of the series data...
WITHOUT_CLASSIFICATION	// copy a range that includes only the first item in the series...
WITHOUT_CLASSIFICATION	// copy a range that begins before and ends in the middle of the // series...
WITHOUT_CLASSIFICATION	// copy just the first item...
WITHOUT_CLASSIFICATION	// copy the first two items...
WITHOUT_CLASSIFICATION	// copy the middle three items...
WITHOUT_CLASSIFICATION	// copy the last two items...
WITHOUT_CLASSIFICATION	// copy the last item...
WITHOUT_CLASSIFICATION	// check negative first argument
WITHOUT_CLASSIFICATION	/* TimeSeries result = */
WITHOUT_CLASSIFICATION	/* TimeSeries result = */
WITHOUT_CLASSIFICATION	// check second argument less than first argument
WITHOUT_CLASSIFICATION	// changing the overwritten record shouldn't affect the series
WITHOUT_CLASSIFICATION	// changing the item that was added should not change the series
WITHOUT_CLASSIFICATION	// can't get anything yet...just an exception
WITHOUT_CLASSIFICATION	/*TimeSeriesDataItem item =*/
WITHOUT_CLASSIFICATION	/*item = */
WITHOUT_CLASSIFICATION	/* TimeSeriesDataItem item = */
WITHOUT_CLASSIFICATION	// test empty series
WITHOUT_CLASSIFICATION	// test series with one item
WITHOUT_CLASSIFICATION	// test series with two items
WITHOUT_CLASSIFICATION	// milliseconds somewhere in 2006
WITHOUT_CLASSIFICATION	// test a series with 1 item
WITHOUT_CLASSIFICATION	// test a series with two items
WITHOUT_CLASSIFICATION	// this line triggers the defect
WITHOUT_CLASSIFICATION	// check that removing by index also works
WITHOUT_CLASSIFICATION	// null items are ignored
WITHOUT_CLASSIFICATION	// if there are only null items, we get a NaNRange
WITHOUT_CLASSIFICATION	// locale should not matter here
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// locale should not matter here
WITHOUT_CLASSIFICATION	// locale should not matter here
WITHOUT_CLASSIFICATION	// test 3...
WITHOUT_CLASSIFICATION	// test 1...
WITHOUT_CLASSIFICATION	// test 1...
WITHOUT_CLASSIFICATION	// domain description - null
WITHOUT_CLASSIFICATION	// test 2...
WITHOUT_CLASSIFICATION	// a null item should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	/*Quarter q =*/
WITHOUT_CLASSIFICATION	/*Quarter q =*/
WITHOUT_CLASSIFICATION	// range description
WITHOUT_CLASSIFICATION	// domain description
WITHOUT_CLASSIFICATION	// check dataset with one time period
WITHOUT_CLASSIFICATION	// check empty dataset
WITHOUT_CLASSIFICATION	// range description - null
WITHOUT_CLASSIFICATION	// check dataset with one time period
WITHOUT_CLASSIFICATION	// check empty dataset
WITHOUT_CLASSIFICATION	// add a fourth time period
WITHOUT_CLASSIFICATION	// add a third time period
WITHOUT_CLASSIFICATION	// check dataset with two time periods
WITHOUT_CLASSIFICATION	// check dataset with two time periods
WITHOUT_CLASSIFICATION	// first day of week is Sunday
WITHOUT_CLASSIFICATION	// first day of week is monday
WITHOUT_CLASSIFICATION	// try null zone
WITHOUT_CLASSIFICATION	// add series to collection 1, should be not equal
WITHOUT_CLASSIFICATION	// newly created collections should be equal
WITHOUT_CLASSIFICATION	// now add the same series to collection 2 to make them equal again...
WITHOUT_CLASSIFICATION	// now remove series 2 from collection 2
WITHOUT_CLASSIFICATION	// now remove series 2 from collection 1 to make them equal again
WITHOUT_CLASSIFICATION	// for a series with no data, we expect {-1, -1}...
WITHOUT_CLASSIFICATION	// now test with a single value in the series...
WITHOUT_CLASSIFICATION	// now add a second value to the series...
WITHOUT_CLASSIFICATION	// now add a third value to the series...
WITHOUT_CLASSIFICATION	/* TimeSeries s = */
WITHOUT_CLASSIFICATION	// correct outcome
WITHOUT_CLASSIFICATION	// wrong outcome
WITHOUT_CLASSIFICATION	// store the current time zone
WITHOUT_CLASSIFICATION	// restore the default time zone
WITHOUT_CLASSIFICATION	// when the dataset contains no series, we expect the range to be null
WITHOUT_CLASSIFICATION	// tests with values
WITHOUT_CLASSIFICATION	// adding a second series
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// x
WITHOUT_CLASSIFICATION	// y
WITHOUT_CLASSIFICATION	// period
WITHOUT_CLASSIFICATION	// autoSort
WITHOUT_CLASSIFICATION	// autoSort
WITHOUT_CLASSIFICATION	// add a value
WITHOUT_CLASSIFICATION	// add a value
WITHOUT_CLASSIFICATION	// add another value
WITHOUT_CLASSIFICATION	// add another value
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// add an empty series
WITHOUT_CLASSIFICATION	// locale shouldn't matter here
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// locale should not matter here
WITHOUT_CLASSIFICATION	// locale should not matter here
WITHOUT_CLASSIFICATION	// test 1...
WITHOUT_CLASSIFICATION	// test 1...
WITHOUT_CLASSIFICATION	// test 1...
WITHOUT_CLASSIFICATION	// test 2...
WITHOUT_CLASSIFICATION	// test 2...
WITHOUT_CLASSIFICATION	// test 2...
WITHOUT_CLASSIFICATION	// test 3...
WITHOUT_CLASSIFICATION	// test 3...
WITHOUT_CLASSIFICATION	// correct outcome
WITHOUT_CLASSIFICATION	// wrong outcome
WITHOUT_CLASSIFICATION	// now test that the clone is independent of the original
WITHOUT_CLASSIFICATION	// Make sure there's nothing left
WITHOUT_CLASSIFICATION	// seriesKey
WITHOUT_CLASSIFICATION	// seriesKey
WITHOUT_CLASSIFICATION	// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)
WITHOUT_CLASSIFICATION	// add a series
WITHOUT_CLASSIFICATION	// seriesKey
WITHOUT_CLASSIFICATION	/* XYSeries s = */
WITHOUT_CLASSIFICATION	// remove a value
WITHOUT_CLASSIFICATION	// remove a value
WITHOUT_CLASSIFICATION	// remove a value
WITHOUT_CLASSIFICATION	// and check the first series too...
WITHOUT_CLASSIFICATION	// now add another series
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	// yLow
WITHOUT_CLASSIFICATION	// allowDuplicateValues
WITHOUT_CLASSIFICATION	// allowDuplicateValues
WITHOUT_CLASSIFICATION	// check for series key out of bounds
WITHOUT_CLASSIFICATION	// yHigh
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// x
WITHOUT_CLASSIFICATION	// y
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// autoSort
WITHOUT_CLASSIFICATION	// add a value
WITHOUT_CLASSIFICATION	// add another value
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	// check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	// add an empty series
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// wrong outcome
WITHOUT_CLASSIFICATION	// wrong outcome
WITHOUT_CLASSIFICATION	// tests with values
WITHOUT_CLASSIFICATION	// seriesKey
WITHOUT_CLASSIFICATION	// remove a value
WITHOUT_CLASSIFICATION	// add a series
WITHOUT_CLASSIFICATION	/* XYSeries s = */
WITHOUT_CLASSIFICATION	/* XYSeries s = */
WITHOUT_CLASSIFICATION	// and check the first series too...
WITHOUT_CLASSIFICATION	// allowDuplicateValues
WITHOUT_CLASSIFICATION	// check for series key out of bounds
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	// check that adding a series will overwrite the old series
WITHOUT_CLASSIFICATION	// check that adding a series will overwrite the old series
WITHOUT_CLASSIFICATION	// check that adding a series will overwrite the old series
WITHOUT_CLASSIFICATION	// check null key
WITHOUT_CLASSIFICATION	// check null key
WITHOUT_CLASSIFICATION	// check null key
WITHOUT_CLASSIFICATION	// try an index out of bounds
WITHOUT_CLASSIFICATION	// now add some more data
WITHOUT_CLASSIFICATION	// xLow
WITHOUT_CLASSIFICATION	// xHigh
WITHOUT_CLASSIFICATION	// first check that a valid renaming works
WITHOUT_CLASSIFICATION	// next, check that setting a duplicate key fails
WITHOUT_CLASSIFICATION	// create an array of items in reverse order
WITHOUT_CLASSIFICATION	// got the required exception
WITHOUT_CLASSIFICATION	// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default
WITHOUT_CLASSIFICATION	// call parent method // setup flag based on bounds values
WITHOUT_CLASSIFICATION	//if flag then change to log version of lowest value // to make range begin at a 10^n value:
WITHOUT_CLASSIFICATION	//if less than 1.0 then make it 1.0 //add in margin and get exponential value:
WITHOUT_CLASSIFICATION	//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:
WITHOUT_CLASSIFICATION	//not first tick to be displayed //no tick label
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// x
WITHOUT_CLASSIFICATION	// y
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// TBLRC // 00000 - no items
WITHOUT_CLASSIFICATION	// try a few checks to ensure that the clone is independent of the // original
WITHOUT_CLASSIFICATION	// autoSort
WITHOUT_CLASSIFICATION	// add a value
WITHOUT_CLASSIFICATION	// add another value
WITHOUT_CLASSIFICATION	// add an empty series
WITHOUT_CLASSIFICATION	// now we should be allowed to change s1's key to anything but "S2"
WITHOUT_CLASSIFICATION	// after s1 is removed from the collection, we should be able to set // the key to anything we want...
WITHOUT_CLASSIFICATION	// check that removing by index also works
WITHOUT_CLASSIFICATION	// correct outcome
WITHOUT_CLASSIFICATION	// wrong outcome
WITHOUT_CLASSIFICATION	// remove a value
WITHOUT_CLASSIFICATION	// add a series
WITHOUT_CLASSIFICATION	/* XYSeries s = */
WITHOUT_CLASSIFICATION	// yLow
WITHOUT_CLASSIFICATION	// yHigh
WITHOUT_CLASSIFICATION	// xLow
WITHOUT_CLASSIFICATION	// xHigh
WITHOUT_CLASSIFICATION	// when the dataset contains no series, we expect the value range to  // be null
WITHOUT_CLASSIFICATION	// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null
WITHOUT_CLASSIFICATION	// the series name should not  // change because "C" is already the key for the other series in the // collection
WITHOUT_CLASSIFICATION	//  Test that there are 6 X points and some specific values
WITHOUT_CLASSIFICATION	// after adding a point to a series, check that there are now 7 // items in each series
WITHOUT_CLASSIFICATION	//  Remove series 1
WITHOUT_CLASSIFICATION	//  Test that there are still 7 X points
WITHOUT_CLASSIFICATION	//  Remove series 2 and add new series
WITHOUT_CLASSIFICATION	//  Test that there are now 4 X points
WITHOUT_CLASSIFICATION	// WITH AUTOPRUNING
WITHOUT_CLASSIFICATION	// should be 2 items
WITHOUT_CLASSIFICATION	// should be 2 items
WITHOUT_CLASSIFICATION	// still 2
WITHOUT_CLASSIFICATION	// still 2
WITHOUT_CLASSIFICATION	// 1 value pruned.
WITHOUT_CLASSIFICATION	// WITHOUT AUTOPRUNING
WITHOUT_CLASSIFICATION	// still 2.
WITHOUT_CLASSIFICATION	// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************
WITHOUT_CLASSIFICATION	// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...
WITHOUT_CLASSIFICATION	// since the flow layout is relatively straightforward, // no information needs to be recorded here
WITHOUT_CLASSIFICATION	// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...
WITHOUT_CLASSIFICATION	// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation
WITHOUT_CLASSIFICATION	// the link area defines the dog leg points for the linking lines to // the labels
WITHOUT_CLASSIFICATION	// if the current stroke is not a BasicStroke then it is handled as // a special case
WITHOUT_CLASSIFICATION	// after setting up all the subplots, the shared range axis may need // reconfiguring
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list of // change listeners...
WITHOUT_CLASSIFICATION	// the segment is entirely at the // front of the chart
WITHOUT_CLASSIFICATION	// starts at back and wraps right around to the // back again
WITHOUT_CLASSIFICATION	// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...
WITHOUT_CLASSIFICATION	//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);
WITHOUT_CLASSIFICATION	// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...
WITHOUT_CLASSIFICATION	// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.
WITHOUT_CLASSIFICATION	// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...
WITHOUT_CLASSIFICATION	// if the 'notify' flag has been switched to false, we don't notify // the listeners
WITHOUT_CLASSIFICATION	// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead
WITHOUT_CLASSIFICATION	// For the case were the first tick is greater // than minZ
WITHOUT_CLASSIFICATION	// add an entity for the item, but only if it falls within the // data area...
WITHOUT_CLASSIFICATION	// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...
WITHOUT_CLASSIFICATION	// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value
WITHOUT_CLASSIFICATION	// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow
WITHOUT_CLASSIFICATION	// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow
WITHOUT_CLASSIFICATION	// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?
WITHOUT_CLASSIFICATION	// average radius // outlier radius
WITHOUT_CLASSIFICATION	// false preserves the old behaviour // prior to introducing this flag
WITHOUT_CLASSIFICATION	// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.
WITHOUT_CLASSIFICATION	// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...
WITHOUT_CLASSIFICATION	// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...
WITHOUT_CLASSIFICATION	// deregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// handle the special case where the dataset has y-intervals that // we want to measure
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Second object // -------------------------------------------
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end
WITHOUT_CLASSIFICATION	// the first initialization must precede creation of the ValueSet array: // establishes length of each array
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// here we check that the average marker will in fact be // visible before drawing it...
WITHOUT_CLASSIFICATION	// draw outliers // outlier radius
WITHOUT_CLASSIFICATION	// NULL value -> insert point on base line // instead of 'step point'
WITHOUT_CLASSIFICATION	// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point
WITHOUT_CLASSIFICATION	// the intersect is at the next point for both the minuend // and subtrahend
WITHOUT_CLASSIFICATION	// create the polygon // add the minuend's points to polygon
WITHOUT_CLASSIFICATION	// the following code handles the line for the y-values...it's // all done by code in the super class
WITHOUT_CLASSIFICATION	// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.
WITHOUT_CLASSIFICATION	// use item paint for outlines by // default, not outline paint
WITHOUT_CLASSIFICATION	// add an entity for the item, but only if it falls within the data // area...
WITHOUT_CLASSIFICATION	// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one
WITHOUT_CLASSIFICATION	// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// create the new color and set it to the // SwtPaintCanvas
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// have to use a subclass of // AbstractRenderer
WITHOUT_CLASSIFICATION	// include legend // tooltips // urls
WITHOUT_CLASSIFICATION	// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// now check that all datasets, renderers and axes are being listened // too...
WITHOUT_CLASSIFICATION	// now check that all datasets, renderers and axes are being listened // too...
WITHOUT_CLASSIFICATION	// after clearing, reverts to // default group
WITHOUT_CLASSIFICATION	// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...
WITHOUT_CLASSIFICATION	// these methods should throw an IndexOutOfBoundsException since the // column is too high...
WITHOUT_CLASSIFICATION	// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item
WITHOUT_CLASSIFICATION	// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset
WITHOUT_CLASSIFICATION	/*item = */
WITHOUT_CLASSIFICATION	// test empty series
WITHOUT_CLASSIFICATION	// now we should be allowed to change s1's key to anything but "S2"
WITHOUT_CLASSIFICATION	// after s1 is removed from the collection, we should be able to set // the key to anything we want...
WITHOUT_CLASSIFICATION	// locale should not matter here
WITHOUT_CLASSIFICATION	// correct outcome
WITHOUT_CLASSIFICATION	// correct outcome
WITHOUT_CLASSIFICATION	// wrong outcome
WITHOUT_CLASSIFICATION	// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null
WITHOUT_CLASSIFICATION	// tests with values
WITHOUT_CLASSIFICATION	// tests with values
WITHOUT_CLASSIFICATION	// seriesKey
WITHOUT_CLASSIFICATION	// open
WITHOUT_CLASSIFICATION	// add a series
WITHOUT_CLASSIFICATION	// allowDuplicateValues
WITHOUT_CLASSIFICATION	// check for series key out of bounds
WITHOUT_CLASSIFICATION	// check for series key out of bounds
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	// when the dataset contains no series, we expect the value range to  // be null
WITHOUT_CLASSIFICATION	// when the dataset contains no series, we expect the value range to  // be null
WITHOUT_CLASSIFICATION	// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null
WITHOUT_CLASSIFICATION	// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null
WITHOUT_CLASSIFICATION	// complicate things a little...
WITHOUT_CLASSIFICATION	// seem to be the same...
WITHOUT_CLASSIFICATION	// what is our alignment?
WITHOUT_CLASSIFICATION	// what is our alignment?
WITHOUT_CLASSIFICATION	// seem to be the same...
WITHOUT_CLASSIFICATION	// slope
WITHOUT_CLASSIFICATION	// complicate things a little...
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	//}
WITHOUT_CLASSIFICATION	// find out where to place the label...
WITHOUT_CLASSIFICATION	// find out where to place the label...
WITHOUT_CLASSIFICATION	// Anwender hat abgebrochen.
WITHOUT_CLASSIFICATION	// insets
WITHOUT_CLASSIFICATION	// insets
WITHOUT_CLASSIFICATION	// ...but this does!
WITHOUT_CLASSIFICATION	// insets
WITHOUT_CLASSIFICATION	// check defaults
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// OK
DEFECT	// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that
DEFECT	// todo: not serialized yet
DEFECT	// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3
DEFECT	// TODO: we didn't check the height yet
DEFECT	// TODO: we didn't check the height yet
DEFECT	// TODO: Check this result...
DEFECT	// TODO: Check this result...
DEFECT	//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3
DEFECT	// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3
WITHOUT_CLASSIFICATION	// MUST do this for background to show up.
WITHOUT_CLASSIFICATION	// XmlElement.printNode(item.getRoot(), "");
WITHOUT_CLASSIFICATION	// private MainInterface mainInterface;
WITHOUT_CLASSIFICATION	// retrieve list of all group members
WITHOUT_CLASSIFICATION	// example configuration (tree.xml): // // <filter description="gnome" enabled="true"> // <rules condition="matchany"> // <criteria criteria="contains" headerfield="To or Cc" pattern="gnome" type="To // or Cc"></criteria> // </rules> // <actionlist> // <action uid="120" type="Move Message"></action> // </actionlist> // </filter> //
WITHOUT_CLASSIFICATION	// if not specified return empty iterator
WITHOUT_CLASSIFICATION	// add all suffixes
WITHOUT_CLASSIFICATION	// list of prefixes
WITHOUT_CLASSIFICATION	// email addresses and phone numbers
WITHOUT_CLASSIFICATION	// ensure that we are currently in the contact component
WITHOUT_CLASSIFICATION	//	public String marshall(IStructureType type); //	public IStructureType unmarshall(String xmlString);
WITHOUT_CLASSIFICATION	/*   * public FilterCriteria getCriteria(int index) { return (FilterCriteria)   * list.get(index); }   */
WITHOUT_CLASSIFICATION	// passive: if not initialized do it now
WITHOUT_CLASSIFICATION	// passive: if not initialized do it now
WITHOUT_CLASSIFICATION	// still not ready, exit!
WITHOUT_CLASSIFICATION	// still not ready, exit!
WITHOUT_CLASSIFICATION	/*         * wait for stream threads to die         *          */
WITHOUT_CLASSIFICATION	// Set text, possibly with a mnemonic if defined using &
WITHOUT_CLASSIFICATION	// Set text, possibly with a mnemonic if defined using &
WITHOUT_CLASSIFICATION	// update table
WITHOUT_CLASSIFICATION	// set display text - possible with a mnemonic defined using &
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// close DB
WITHOUT_CLASSIFICATION	// get source reference
WITHOUT_CLASSIFICATION	// score message
WITHOUT_CLASSIFICATION	// if message is spam
WITHOUT_CLASSIFICATION	// mark message as spam
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// !!! Size = 12 // create filter configuration // -> check if <Subject> <contains> pattern <test>
WITHOUT_CLASSIFICATION	/*		 * xp[0] = x + 6; xp[1] = x + 12; xp[2] = x; yp[0] = y - (c.getHeight() /		 * 4); yp[1] = y + (c.getHeight() / 4); yp[2] = y + (c.getHeight() / 4);		 * 		 * g2.setColor(Color.white); g2.drawLine(xp[0], yp[0], xp[1], yp[1]);		 * g2.drawLine(xp[1], yp[1], xp[2], yp[2]); g2.setColor(Color.gray);		 * g2.drawLine(xp[2], yp[2], xp[0], yp[0]);		 */
WITHOUT_CLASSIFICATION	/*		 * l_year = new JLabel(); p1.add(l_year);		 */
WITHOUT_CLASSIFICATION	/*		 * JPanel p2 = new JPanel(); p2.setLayout(new		 * FlowLayout(FlowLayout.LEFT)); top.add("East", p2);		 * 		 * b_lyear = new JButton("<"); b_lyear.addActionListener( this );		 * //b_lyear.setMargin(KiwiUtils.emptyInsets);		 * b_lyear.setFocusPainted(false); b_lyear.setOpaque(false);		 * //b_lyear.addActionListener(this); p2.add(b_lyear);		 * 		 * l_year = new JLabel(); p2.add(l_year);		 * 		 * b_ryear = new JButton(">"); b_ryear.addActionListener( this );		 * //b_ryear.setMargin(KiwiUtils.emptyInsets);		 * b_ryear.setFocusPainted(false); b_ryear.setOpaque(false);		 * //b_ryear.addActionListener(this); p2.add(b_ryear);		 */
WITHOUT_CLASSIFICATION	// gc.draw3DRect(xp, yp, cellSize, cellSize, true); // if the cell is selected, fill it with the highlight color
WITHOUT_CLASSIFICATION	// apply transparent icon
WITHOUT_CLASSIFICATION	// search for mnemonic
WITHOUT_CLASSIFICATION	// mnemonic found // ...and not at the end of the string (which doesn't make sence)
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	// super(str); // set menu text incl. mnemonic if specified
WITHOUT_CLASSIFICATION	// icon (we can't use the setIcon-method this time, as it relies on the border being set)
WITHOUT_CLASSIFICATION	// Changing the Divider Border Visibility *********************************
WITHOUT_CLASSIFICATION	//if we stopped at line break, increase array index pointer
WITHOUT_CLASSIFICATION	// look and feel
WITHOUT_CLASSIFICATION	// look and feel
WITHOUT_CLASSIFICATION	// remember if Look And Feel has been changed
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// theme selection changed
WITHOUT_CLASSIFICATION	// Init PGP
WITHOUT_CLASSIFICATION	// get notified if search result arrived, to update view
WITHOUT_CLASSIFICATION	// use the collapse/expand icons from the JTree UI
WITHOUT_CLASSIFICATION	// use the collapse/expand icons from the JTree UI
WITHOUT_CLASSIFICATION	// if the collapsible is collapsed, we do not want its border to be // painted.
WITHOUT_CLASSIFICATION	//			g.setColor(borderColor2); //			g.drawLine(x, y + height - 1, x + width, y + height - 1);
WITHOUT_CLASSIFICATION	//		JScrollPane scrollPane = new JScrollPane(tree); //		scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED); //		 //		add(scrollPane, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	// Init Plugins
WITHOUT_CLASSIFICATION	//		titlebar.setMidColor(INACTIVE_MID_COLOR); //		titlebar.setFillColor(INACTIVE_FILL_COLOR); // //		titlebar.setTitleColor(INACTIVE_LABEL_COLOR, INACTIVE_MID_COLOR, false);
WITHOUT_CLASSIFICATION	// contentPanel.setBorder(new LineBorder(ACTIVE_BORDER_COLOR, 1));
WITHOUT_CLASSIFICATION	// setBorder(BorderFactory.createEmptyBorder(2, 5, 3, 0)); //setBorder(BorderFactory.createEmptyBorder(2, 2, 2, 2));
WITHOUT_CLASSIFICATION	// builder2.addFixedNarrow((JButton) leftButtonVector.get(i)); // builder2.addStrut(Sizes.pixel(2));
WITHOUT_CLASSIFICATION	// GradientPaint painter = new GradientPaint(0, 0, midColor.brighter(), // 0, 5, midColor); // g2.setPaint(painter); //		 // g2.fillRect(0,0,w,5); //		 // new GradientPaint(0, h-1, midColor, 0, h-1-5, Color.red); // g2.setPaint(painter); //		 // g2.fillRect(0,h-5,w,5);
WITHOUT_CLASSIFICATION	// GeneralPath path = generatePath(h, w); // g2.setColor(fillColor); // g2.fill(path); // // path = generateTopPath(w); // GradientPaint painter = new GradientPaint(0, 0, startColor, 0, 5, // midColor); // g2.setPaint(painter); // g2.fill(path); // // path = generatePath(h, w); // g2.setColor(UIManager.getColor("controlDkShadow")); // g2.draw(path);
WITHOUT_CLASSIFICATION	// the indent-number attribute causes an IllegalArgumentException under 1.4 
WITHOUT_CLASSIFICATION	//		titleBar.addButton(new PinIcon(), //				new PinAction(this.getPersistentId()), BorderLayout.EAST); //		titleBar.addButton(new MaximizeIcon(), new MaximizeAction(this //				.getPersistentId()), BorderLayout.EAST);
WITHOUT_CLASSIFICATION	// this is executed on shutdown: store all open frames so that they // can be restored on the next start
WITHOUT_CLASSIFICATION	// clear the tooltip message previously displayed in the status bar
WITHOUT_CLASSIFICATION	// overwrite this method
WITHOUT_CLASSIFICATION	// remove from old mediator's listener list
WITHOUT_CLASSIFICATION	// use new viewitem
WITHOUT_CLASSIFICATION	// use new viewitem
WITHOUT_CLASSIFICATION	// *20030831, karlpeder* Also location is restored
WITHOUT_CLASSIFICATION	// awt-event-thread
WITHOUT_CLASSIFICATION	// awt-event-thread
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// short cut key
WITHOUT_CLASSIFICATION	//		OptionsItem optionsItem = MailConfig.getInstance().getOptionsItem(); //		String selectedBrowser = optionsItem.getStringWithDefault( //				OptionsItem.MESSAGEVIEWER, OptionsItem.SELECTED_BROWSER, //				"Default");
WITHOUT_CLASSIFICATION	// in case of an error -> fall-back to Swing's built-in JTextPane
WITHOUT_CLASSIFICATION	// update tree model
WITHOUT_CLASSIFICATION	/*            PluginManager.getInstance().setEnabled(id,                ((Boolean) value).booleanValue());                */
WITHOUT_CLASSIFICATION	// mainPanel.add( topBorderPanel, BorderLayout.NORTH );
WITHOUT_CLASSIFICATION	/*		 * listView = new FilterListTable(filterList, this);		 * listView.getSelectionModel().addListSelectionListener(this);		 * JScrollPane scrollPane = new JScrollPane(listView);		 * scrollPane.setPreferredSize(new Dimension(300, 250));		 * scrollPane.getViewport().setBackground(Color.white);		 * centerPanel.add(scrollPane);		 */
WITHOUT_CLASSIFICATION	/*         * Component strut2 = Box.createRigidArea(new Dimension(30, 5));         * gridBagLayout.setConstraints(strut2, c); eastPanel.add(strut2);         *         * gridBagLayout.setConstraints(defaultButton, c);         * eastPanel.add(defaultButton);         */
WITHOUT_CLASSIFICATION	// save to profiles.xml
WITHOUT_CLASSIFICATION	// save to profiles.xml
WITHOUT_CLASSIFICATION	// save to profiles.xml
WITHOUT_CLASSIFICATION	//top.setBackground(titleBackground);
WITHOUT_CLASSIFICATION	// start a new search -> clear all previous search results
WITHOUT_CLASSIFICATION	// start a new search -> clear all previous search results
WITHOUT_CLASSIFICATION	// add result panel as listener for new search results
WITHOUT_CLASSIFICATION	// create list of search requests
WITHOUT_CLASSIFICATION	// create a rounded clip LARGER than the comp
WITHOUT_CLASSIFICATION	// fill the clipped area // g2d.setPaint(LIGHT_GRADIENT);
WITHOUT_CLASSIFICATION	// paint inner border // g2d.setPaint(INNER);
WITHOUT_CLASSIFICATION	// builder.append(moreButton);
WITHOUT_CLASSIFICATION	// get first provider //				ISearchProvider provider = searchPanel.getSearchManager() //						.getAllProviders().next(); //				ISearchCriteria defaultCriteria = null; // //				SearchBar.this.searchPanel.searchInCriteria( //						textField.getText(), provider.getTechnicalName(), //						provider.getDefaultCriteria(textField.getText()) //								.getTechnicalName(), searchInsideCheckBox //								.isSelected());
WITHOUT_CLASSIFICATION	// Map<String, ISearchProvider> historyMap = SearchHistoryList // .getInstance().getHistoryMap();
WITHOUT_CLASSIFICATION	// setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
WITHOUT_CLASSIFICATION	// layoutComponents();
WITHOUT_CLASSIFICATION	//		taskButton = new JButton(); //		taskButton.setIcon(ImageLoader.getImageIcon("group_small.png")); //		taskButton.setToolTipText("Show list of running tasks"); //		taskButton.setRolloverEnabled(true); //		taskButton.setActionCommand("TASKMANAGER"); //		taskButton.addActionListener(this); // //		taskButton.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
WITHOUT_CLASSIFICATION	// protected void layoutComponents() { // setLayout(new BorderLayout()); // // leftMainPanel = new JPanel(); // leftMainPanel.setLayout(new BorderLayout()); // // JPanel taskPanel = new JPanel(); // taskPanel.setLayout(new BorderLayout()); // // // Border border = getDefaultBorder(); // //Border margin = new EmptyBorder(0, 0, 0, 2); // // // taskPanel.setBorder(new CompoundBorder(border, margin)); // // taskPanel.add(taskButton, BorderLayout.CENTER); // // leftMainPanel.add(taskPanel, BorderLayout.WEST); // JPanel labelPanel = new JPanel(); // labelPanel.setLayout(new BorderLayout()); // // margin = new EmptyBorder(0, 10, 0, 10); // // labelPanel.setBorder(new CompoundBorder(border, margin)); // // // margin = new EmptyBorder(0, 0, 0, 2); // labelPanel.add(label, BorderLayout.CENTER); // // leftMainPanel.add(labelPanel, BorderLayout.CENTER); // // add(leftMainPanel, BorderLayout.CENTER); // // mainRightPanel = new JPanel(); // mainRightPanel.setLayout(new BorderLayout()); // // JPanel progressPanel = new JPanel(); // progressPanel.setLayout(new BorderLayout()); // // progressPanel.setBorder(new CompoundBorder(border, margin)); // // progressPanel.add(progressBar, BorderLayout.CENTER); // // JPanel rightPanel = new JPanel(); // rightPanel.setLayout(new BorderLayout()); // // rightPanel.add(progressPanel, BorderLayout.CENTER); // // JPanel onlinePanel = new JPanel(); // onlinePanel.setLayout(new BorderLayout()); // // onlinePanel.setBorder(new CompoundBorder(border, margin)); // // onlinePanel.add(onlineButton, BorderLayout.CENTER); // // rightPanel.add(onlinePanel, BorderLayout.EAST); // add(rightPanel, BorderLayout.EAST); // } // public Border getDefaultBorder() { // return UIManager.getBorder("TableHeader.cellBorder"); // }
WITHOUT_CLASSIFICATION	//	public static JButton createAnimatedIconButton() { //		ImageSequenceTimer button = new ImageSequenceTimer(); // //		return button; //	}
WITHOUT_CLASSIFICATION	// menu.add(new CMenuItem(new OpenNewMailWindowAction(null))); // menu.add(new CMenuItem(new // OpenNewAddressbookWindowAction(null))); // menu.addSeparator(); // menu.add(new CMenuItem(new AboutDialogAction(null))); // menu.add(new CMenuItem(new ShowHelpAction(null))); // menu.addSeparator(); // menu.add(new CMenuItem(new ExitAction(null)));
WITHOUT_CLASSIFICATION	// does not occur
WITHOUT_CLASSIFICATION	// does not occur
WITHOUT_CLASSIFICATION	// register interested on changes in the running worker list
WITHOUT_CLASSIFICATION	// register as configuration change listener
WITHOUT_CLASSIFICATION	// should we really overwrite the Look and Feel font settings
WITHOUT_CLASSIFICATION	/*        UIManager.put("Label.font", mainFont);        UIManager.put("Textfield.font", mainFont);        UIManager.put("TextArea.font", mainFont);        UIManager.put("MenuItem.font", mainFont);        UIManager.put("MenuItem.acceleratorFont", mainFont);        UIManager.put("Menu.font", mainFont);        UIManager.put("Menu.acceleratorFont", mainFont);        UIManager.put("MenuBar.font", mainFont);        UIManager.put("Tree.font", mainFont);        UIManager.put("Table.font", mainFont);        UIManager.put("Button.font", mainFont);        UIManager.put("CheckBoxButton.font", mainFont);        UIManager.put("RadioButton.font", mainFont);        UIManager.put("ComboBox.font", mainFont);        UIManager.put("ToggleButton.font", mainFont);        UIManager.put("CheckBoxMenuItem.font", mainFont);        UIManager.put("RadioButtonMenuItem.font", mainFont);        UIManager.put("TabbedPane.font", mainFont);        UIManager.put("List.font", mainFont);        */
WITHOUT_CLASSIFICATION	// mark found pattern (select) //text.grabFocus();				
WITHOUT_CLASSIFICATION	// attempt
WITHOUT_CLASSIFICATION	// If the fifo could not be restored initialize it
WITHOUT_CLASSIFICATION	// // we can't just load the first constructor // -> go find the correct constructor based // -> based on the arguments //
WITHOUT_CLASSIFICATION	// // we can't just load the first constructor // -> go find the correct constructor based // -> based on the arguments //
WITHOUT_CLASSIFICATION	// do nothinh here ... use finalClose
WITHOUT_CLASSIFICATION	// cancel
WITHOUT_CLASSIFICATION	// cancel
WITHOUT_CLASSIFICATION	// cancel
WITHOUT_CLASSIFICATION	// e.printStackTrace();
WITHOUT_CLASSIFICATION	// System.setProperty("javax.net.debug", // "ssl,handshake,data,trustmanager"); // init java.net.ssl // debugging
WITHOUT_CLASSIFICATION	// retrieve inputstream from resource
WITHOUT_CLASSIFICATION	// use default Java classlodaer
WITHOUT_CLASSIFICATION	// startup Columba
WITHOUT_CLASSIFICATION	// stop server when shutting down
WITHOUT_CLASSIFICATION	// we add every jar-file in /lib, too // plugin-directory
WITHOUT_CLASSIFICATION	// client isn't from local machine
WITHOUT_CLASSIFICATION	// "store" html in jTextPane container // reset starting position in y-direction
WITHOUT_CLASSIFICATION	// set Look & Feel
WITHOUT_CLASSIFICATION	/*             * *20030609, karlpeder* Introduced scaling             */
WITHOUT_CLASSIFICATION	/*             * *20030609, karlpeder* Introduced scaling             */
WITHOUT_CLASSIFICATION	//		 handle commandline parameters
WITHOUT_CLASSIFICATION	// child views exist - operate recursively on these
WITHOUT_CLASSIFICATION	// Add the tray icon to the System tray // ColumbaTrayIcon.getInstance().addToSystemTray( // FrameManager.getInstance().getActiveFrameMediator() // .getFrameMediator());
WITHOUT_CLASSIFICATION	// no childs - we have a leaf view (i.e. with contents)
WITHOUT_CLASSIFICATION	// call the postStartups of the modules // e.g. check for default mailclient
WITHOUT_CLASSIFICATION	/*         * calculate a new break height according to the contents, possibly         * smaller to break before some content (i.e. not to break in the         * middle of something         */
WITHOUT_CLASSIFICATION	// // following internal components plugin registration //
WITHOUT_CLASSIFICATION	// oops, something went wrong
WITHOUT_CLASSIFICATION	// Platform maintainers: add your platform here
WITHOUT_CLASSIFICATION	/*                 * If the height of a view exceeds the paperheight, there should                 * be no break before (since it will be impossible to fit it in                 * anywhere => an infinite loop). We don't have access to the                 * pageheight here, therefore an "educated guess" is made:                 * No breaks are inserted before views starting within the first                 * 1% (chosen to avoid round-off errors) of the available space                 * given by actBreakHeight. If the view starts after the first 1%,                 * a break is inserted and the view will start at the top of the                 * next page (i.e. withing the first 1% this time).                 */
WITHOUT_CLASSIFICATION	// no configuration available, create default config
WITHOUT_CLASSIFICATION	// no configuration available, create default config
WITHOUT_CLASSIFICATION	// create new locale xml treenode
WITHOUT_CLASSIFICATION	/*			 * classLoader = ClassLoader.getSystemClassLoader();			 */
WITHOUT_CLASSIFICATION	// use ResourceBundle's internal classloader
WITHOUT_CLASSIFICATION	// use ResourceBundle's internal classloader
WITHOUT_CLASSIFICATION	/*           * I specifically want this here to ensure that the directory exists and           * this method never returns null.           *           * Any files that were in the observation list have already been           * previously removed by checkFiles().           */
WITHOUT_CLASSIFICATION	/* remove from script list */
WITHOUT_CLASSIFICATION	// add toolbar button between last button and cancel button
WITHOUT_CLASSIFICATION	/*        * it's the script responsability to define the "metadata" by invoking        * .setName(), .setAuthor() and .setDescription()        */
WITHOUT_CLASSIFICATION	/*        * it's the script responsability to define the "metadata" by invoking        * .setName(), .setAuthor() and .setDescription()        */
WITHOUT_CLASSIFICATION	// stop background-manager so it doesn't interfere with // shutdown manager
WITHOUT_CLASSIFICATION	// wait 10 seconds and check for pending commands again // this is useful if a command causes a deadlock
WITHOUT_CLASSIFICATION	// clear
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// is true if the last search was successful // a position of the word after the last search ivokation; -1 if nothing found // a position of the word after the last replace ivokation; -1 if nothing was replaced
WITHOUT_CLASSIFICATION	// false if search/replace is currently working
WITHOUT_CLASSIFICATION	// some other version of the constructor
WITHOUT_CLASSIFICATION	// the implementation of the search function. It returns always the position of the FIRST found word.
WITHOUT_CLASSIFICATION	// Determine whether there are 1, 2, or 3 names specified. These names should be separated by spaces //	or commas. If a comma separates the first two names, assume that the last name is specified first,  //	Otherwise, assume the first name is specified first. Middle name is always specified after the first name.
WITHOUT_CLASSIFICATION	// Buffer for collecting data from // the "characters" SAX event.
WITHOUT_CLASSIFICATION	// setup and load constructor
WITHOUT_CLASSIFICATION	// Create the XML reader... // xr = XMLReaderFactory.createXMLReader();
WITHOUT_CLASSIFICATION	// Set the ContentHandler... // xr.setContentHandler( this );
WITHOUT_CLASSIFICATION	// Resetting contents buffer. // Assuming that tags either tag content or children, not both. // This is usually the case with XML that is representing // data strucutures in a programming language independant way. // This assumption is not typically valid where XML is being // used in the classical text mark up style where tagging // is used to style content and several styles may overlap // at once.
WITHOUT_CLASSIFICATION	/* * Test for int hashCode(). */
WITHOUT_CLASSIFICATION	/* * Test for boolean equals(Object) */
WITHOUT_CLASSIFICATION	/* * Test for boolean equals(Object) */
WITHOUT_CLASSIFICATION	// top-level structure
WITHOUT_CLASSIFICATION	// top-level structure
WITHOUT_CLASSIFICATION	// mandatory String-based attribute
WITHOUT_CLASSIFICATION	// remove configuration directory
WITHOUT_CLASSIFICATION	/*LinkedList testList = new LinkedList(listFull_I);ListTools.intersect(testList,listFull_I);assertTrue(testList.equals(listFull_I));testList = new LinkedList(listFull_I);ListTools.intersect(testList,new LinkedList());assertTrue(testList.size()==0);testList = new LinkedList(listFull_I);ListTools.intersect(testList,listPart1_I);assertTrue(testList.equals(listPart1_I));testList = new LinkedList(listFull_I);ListTools.intersect(testList,listPart2_I);assertTrue(testList.equals(listPart2_I));testList = new LinkedList(listPart1_I);ListTools.intersect(testList,listPart2_I);assertTrue(testList.size()==0);*/
WITHOUT_CLASSIFICATION	//mod: 20040629 SWITT for redirecting feature //If FROM value was set, take this as From, else take Identity
WITHOUT_CLASSIFICATION	/*			 * BufferedReader in = new BufferedReader( new InputStreamReader(			 * new FileInputStream(file), model.getCharsetName()));			 */
WITHOUT_CLASSIFICATION	// Set Default Charset or selected
WITHOUT_CLASSIFICATION	// check if the charset is US-ASCII then there is something wrong // -> switch to UTF-8 and write to log-file
WITHOUT_CLASSIFICATION	/*		 * *20030921, karlpeder* The old code was (accidentially!?) modifying		 * the attachment list of the model. This affects the composing when		 * called a second time for saving the message after sending!		 */
WITHOUT_CLASSIFICATION	// Set recipients from the recipients vector
WITHOUT_CLASSIFICATION	/*     * validates a hostname, i.e.:     * mail.myhost.com     * mail.us.myhost.com     * 127.0.0.1     * */
WITHOUT_CLASSIFICATION	// return default-account ImapItem instead 
WITHOUT_CLASSIFICATION	// return default-account ImapItem instead 
WITHOUT_CLASSIFICATION	// return default-account ImapItem instead 
WITHOUT_CLASSIFICATION	//private File file;
WITHOUT_CLASSIFICATION	/*public AdapterNode addEmptyFilterCriteria(AdapterNode filterRuleNode) {        Element child = createElementNode("filtercriteria");        Element subNode = createTextElementNode("headeritem", "Subject");        addElement(child, subNode);        subNode = createTextElementNode("criteria", "contains");        addElement(child, subNode);        subNode = createTextElementNode("pattern", "pattern");        addElement(child, subNode);        subNode = createTextElementNode("type", "Subject");        addElement(child, subNode);        filterRuleNode.domNode.appendChild(child);        return new AdapterNode(child);}*/
WITHOUT_CLASSIFICATION	//  // options.xml // //<options> // <gui> //  <messageviewer inline_attachments="false"> //   <smilies enabled="true" /> //   <quote color="0" enabled="true" /> //  </messageviewer> //  <tree> //   <sorting sorted="true" ascending="true" comparator="alphabetic" /> //  </tree> // </gui> // <html prefer="true" /> // <markasread delay="2" enabled="true" /> // <headerviewer style="0" headerfields="Subject Date Reply-To From To Cc Bcc" /> //</options>
WITHOUT_CLASSIFICATION	// Choice btw. text and html will be based on stored option
WITHOUT_CLASSIFICATION	// example: "columba://org.columba.mail/<folder-id>/<message-id>"
WITHOUT_CLASSIFICATION	// retrieve Command of filter action
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// if there is no search engine, try the default one
WITHOUT_CLASSIFICATION	// iterate through all foldertypes to find suitable ones
WITHOUT_CLASSIFICATION	// Add child to parent
WITHOUT_CLASSIFICATION	// register interest on tree node changes
WITHOUT_CLASSIFICATION	// no filterlist treenode found // -> create a new one
WITHOUT_CLASSIFICATION	// get message with UID
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// parse header
WITHOUT_CLASSIFICATION	// message is already cached // try to compare the headerfield count of // the actually parsed message with the cached // headerfield count
WITHOUT_CLASSIFICATION	// We need to parse // get message with UID
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	/*		 * // use wrapper class for easier handling of references array adapter =		 * new FolderCommandAdapter( (MailFolderCommandReference[])		 * getReferences());		 *  // get array of source references MailFolderCommandReference[] r =		 * adapter.getSourceFolderReferences();		 */
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// skip if message is *not* marked as spam
WITHOUT_CLASSIFICATION	// move message to user-configured folder (generally "Junk" // folder)
WITHOUT_CLASSIFICATION	// get color from factory // ->factory shares color objects to save memory
WITHOUT_CLASSIFICATION	// create virtual folder (is attached to parentFolder)
WITHOUT_CLASSIFICATION	// get destination foldedr
WITHOUT_CLASSIFICATION	// two different root folders // -> get inputstream from source-folder and add it to // -> destination-folder as inputstream // -----> moving of raw message source // (works also for copying from local to IMAP folders, etc.
WITHOUT_CLASSIFICATION	// We are done - clear the status message with a delay
WITHOUT_CLASSIFICATION	// setup dialog title, active filter and file name
WITHOUT_CLASSIFICATION	// save message
WITHOUT_CLASSIFICATION	// Does the user prefer html or plain text?
WITHOUT_CLASSIFICATION	// decode message body with respect to charset
WITHOUT_CLASSIFICATION	// decode message body with respect to charset
WITHOUT_CLASSIFICATION	// use body as is
WITHOUT_CLASSIFICATION	// insert into message right after <body...>
WITHOUT_CLASSIFICATION	// test on extension
WITHOUT_CLASSIFICATION	// check if virtual folder, if yes, do not use these uids, use the // real uids instead
WITHOUT_CLASSIFICATION	// DateFormat
WITHOUT_CLASSIFICATION	/*                 * *20031216, karlpeder* Changed handling of dates.                 * Previously columba.date header was used. Now we                 * use the Date header instead                 */
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// skip, if filter is disabled
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	// First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	// First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	// First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	// message size should be at least 1 KB
WITHOUT_CLASSIFICATION	// save boolean headerfields, compressing them to one int value
WITHOUT_CLASSIFICATION	// If we have new messages add them to the headerlist
WITHOUT_CLASSIFICATION	// -2 because of the decrement in line 317 // removedLocalUids = localUids.size() - 2 - position;
WITHOUT_CLASSIFICATION	// Find missing uids loop
WITHOUT_CLASSIFICATION	// Sanity tests
WITHOUT_CLASSIFICATION	// update headerlist of destination-folder // -> this is necessary to reflect the changes visually // but only do it if the target folder is still in sync!
WITHOUT_CLASSIFICATION	// super(node, folderItem); // super(getDefaultItem("IMAPRootFolder", getDefaultProperties()));
WITHOUT_CLASSIFICATION	// if have already a suitable folder skip the search
WITHOUT_CLASSIFICATION	// parse line by line
WITHOUT_CLASSIFICATION	// if line doesn't start with "From" or line length is 0 //  -> save everything in StringBuffer
WITHOUT_CLASSIFICATION	// setup filter configuration
WITHOUT_CLASSIFICATION	// only create new subfolders if we used the default "Search Folder"
WITHOUT_CLASSIFICATION	// update tree-node (for renaming the new folder)
WITHOUT_CLASSIFICATION	// if the parent is a virtual folder the search cannot be applied directly // look for the correct uids by finding the first non virtual folder
WITHOUT_CLASSIFICATION	// Now we can search this folder since no mail from // this folder will come in the list
WITHOUT_CLASSIFICATION	// get list of plugins
WITHOUT_CLASSIFICATION	// load plugin
WITHOUT_CLASSIFICATION	// notify observers (sorting state submenu)
WITHOUT_CLASSIFICATION	// String definitions for the charsetnames // NOTE: these are also used to look up the // menuentries from the resourceloader
WITHOUT_CLASSIFICATION	// simulate charset changed to initialize selectedMenuItem
WITHOUT_CLASSIFICATION	// set default html or text based on stored option // ... can be overridden by setting the composer model
WITHOUT_CLASSIFICATION	// default value is 200 pixel // int pos = // viewItem.getIntegerWithDefault("splitpanes","attachment", 200);
WITHOUT_CLASSIFICATION	/*		 * *20030906, karlpeder* Method signature changed to return an		 * AbstractEditorController		 */
WITHOUT_CLASSIFICATION	// don't prompt user if composer should be closed
WITHOUT_CLASSIFICATION	// close Columba, if composer is only visible frame
WITHOUT_CLASSIFICATION	// close Columba, if composer is only visible frame
WITHOUT_CLASSIFICATION	//setText(accountName);
WITHOUT_CLASSIFICATION	/*		 * int index = locationToIndex(new Point(x, y));		 * 		 * setSelectedIndex(index);		 */
WITHOUT_CLASSIFICATION	/*			 * model.setSignMessage(signMenuItem.isSelected());			 * model.setEncryptMessage(encryptMenuItem.isSelected());			 */
WITHOUT_CLASSIFICATION	// attachment controller doesn't support paste actions
WITHOUT_CLASSIFICATION	// attachment controller doesn't support redo operation
WITHOUT_CLASSIFICATION	// get first selected message
WITHOUT_CLASSIFICATION	// get first selected message
WITHOUT_CLASSIFICATION	// get headerfields
WITHOUT_CLASSIFICATION	// get headerfields
WITHOUT_CLASSIFICATION	// create composer model
WITHOUT_CLASSIFICATION	// set subject
WITHOUT_CLASSIFICATION	// setup to, references and account
WITHOUT_CLASSIFICATION	// Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	// Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	// Do decoding stuff
WITHOUT_CLASSIFICATION	// Quote original message - different methods for text and html
WITHOUT_CLASSIFICATION	// Html: Insertion of text before and after original message // get necessary headerfields
WITHOUT_CLASSIFICATION	// Html: Insertion of text before and after original message // get necessary headerfields
WITHOUT_CLASSIFICATION	// Remove duplicates or the mail address from the receiver account
WITHOUT_CLASSIFICATION	// select the account this mail was received from
WITHOUT_CLASSIFICATION	// remove the bodypart from the mimeparts // that are added to the attachment viewer
WITHOUT_CLASSIFICATION	// debug output
WITHOUT_CLASSIFICATION	// choose addressbook
WITHOUT_CLASSIFICATION	// try to fill the contact list
WITHOUT_CLASSIFICATION	// folder selection changed
WITHOUT_CLASSIFICATION	// register for text selection changes // controller.getEditorController().addObserver(this);
WITHOUT_CLASSIFICATION	// set initial enabled state of combo boxes // XmlElement optionsElement = MailConfig.getInstance().get( // "composer_options").getElement("/options"); // XmlElement htmlElement = optionsElement.getElement("html"); // String s = htmlElement.getAttribute("enable", "false"); // boolean enableHtml = Boolean.valueOf(s).booleanValue();
WITHOUT_CLASSIFICATION	// FormLayout layout = new FormLayout( // "default, 3dlu, default, 3dlu, default, 3dlu, " // + "default, 3dlu, default, 3dlu, default, 3dlu, " // + "default, 6dlu, default, 3dlu, default, 3dlu, " // + "default, 3dlu", "fill:default"); // PanelBuilder b = new PanelBuilder(this, layout); // // CellConstraints c = new CellConstraints(); // // b.add(paragraphComboBox, cc.xy(1, 1)); // b.add(sizeLabel, cc.xy(3, 1)); // b.add(sizeComboBox, cc.xy(5, 1)); // b.add(boldFormatButton, cc.xy(7, 1)); // b.add(italicFormatButton, cc.xy(9, 1)); // b.add(underlineFormatButton, cc.xy(11, 1)); // b.add(strikeoutFormatButton, cc.xy(13, 1)); // b.add(leftJustifyButton, cc.xy(15, 1)); // b.add(centerJustifyButton, cc.xy(17, 1)); // b.add(rightJustifyButton, cc.xy(19, 1));
WITHOUT_CLASSIFICATION	// Handling of paragraph combo box // select the item in the combo box corresponding to present format
WITHOUT_CLASSIFICATION	// this can throw a ChangedCharsetException
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// register interest on configuratin changes
WITHOUT_CLASSIFICATION	/*		 * *20030906, karlpeder* Method signature changed to take an		 * AbstractEditorController (instead of an TextEditorView) as parameter		 * since the view is no longer directly available		 */
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them // here)
WITHOUT_CLASSIFICATION	// Add components to the panel: //		builder.append(defaultAccountCheckBox, 7); //		builder.nextLine();
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need // to // define them here)
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need // to // define them here)
WITHOUT_CLASSIFICATION	/*		 * builder.append(sslLabel, 3); builder.nextLine();		 *		 * builder.append(disableSSLConnectionRadioButton, 2);		 * builder.nextLine(); builder.append(enableSSLConnectionRadioButton,		 * 2); builder.nextLine();		 * builder.append(enableSTARTTLSExtensionRadioButton, 2);		 * builder.nextLine();		 */
WITHOUT_CLASSIFICATION	// Account is an IMAP account -> change root folder name
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	// setBorder(selectedBorder);
WITHOUT_CLASSIFICATION	// list.repaint();
WITHOUT_CLASSIFICATION	// ask the user about the destination file
WITHOUT_CLASSIFICATION	// ask the user about the destination file
WITHOUT_CLASSIFICATION	/*	 * private JTextField textField; private JPanel leftPanel; private	 * JTabbedPane rightPanel; private JButton addButton; private JButton	 * removeButton; private JButton editButton; private JButton upButton;	 * private JButton downButton;	 * 	 * private JFrame frame;	 */
WITHOUT_CLASSIFICATION	// this probably means that the configuration // is wrong // -> change this to a sane default value
WITHOUT_CLASSIFICATION	// if it is in a table, then we need to insert it at the // selected position.
WITHOUT_CLASSIFICATION	/*		 * matchComboBox.addItem("is"); matchComboBox.addItem("is not");		 * matchComboBox.addItem("begins with"); matchComboBox.addItem("ends		 * with");		 */
WITHOUT_CLASSIFICATION	// remove all options
WITHOUT_CLASSIFICATION	/*		 * builder.append(quotedColorCheckBox, quotedColorButton);		 * builder.nextLine();		 */
WITHOUT_CLASSIFICATION	// add filter criteria
WITHOUT_CLASSIFICATION	// add filter criteria
WITHOUT_CLASSIFICATION	// add filter criteria
WITHOUT_CLASSIFICATION	// don't search in subfolders recursively
WITHOUT_CLASSIFICATION	// messageController.createPopupMenu();
WITHOUT_CLASSIFICATION	// Unregister/register as Folder listener
WITHOUT_CLASSIFICATION	// get selected row
WITHOUT_CLASSIFICATION	/*	 * protected XmlElement createDefaultConfiguration(String id) { XmlElement	 * child = super.createDefaultConfiguration(id);	 * 	 * XmlElement splitpanes = new XmlElement("splitpanes");	 * splitpanes.addAttribute("main", "200"); splitpanes.addAttribute("header",	 * "200"); splitpanes.addAttribute("attachment", "100");	 * child.addElement(splitpanes);	 * 	 * return child; }	 */
WITHOUT_CLASSIFICATION	// putValue(LARGE_ICON, ImageLoader.getIcon(IconKeys.DOCUMENT_SAVE_AS));
WITHOUT_CLASSIFICATION	// get selected message UID
WITHOUT_CLASSIFICATION	// if the message it not yet seen
WITHOUT_CLASSIFICATION	// date area grid line
WITHOUT_CLASSIFICATION	// horizontal grid lines
WITHOUT_CLASSIFICATION	// vertical light gray column separator line
WITHOUT_CLASSIFICATION	// horizontal light gray column separator line
WITHOUT_CLASSIFICATION	// define activity layout
WITHOUT_CLASSIFICATION	// dateAreaBean.setActivityDepositoryContext(); // dateAreaBean.getDateArea().setActivitiesSupported(true);
WITHOUT_CLASSIFICATION	// showing the week number
WITHOUT_CLASSIFICATION	// // activity setup // 
WITHOUT_CLASSIFICATION	// wrap with observable stream for progress bar updates
WITHOUT_CLASSIFICATION	// monthlyActivityAShapeBean = new ActivityAShapeBean();
WITHOUT_CLASSIFICATION	//      map selection to this temporary message
WITHOUT_CLASSIFICATION	// something really got wrong here -> show error dialog // JOptionPane.showMessageDialog(null, e.getMessage());
WITHOUT_CLASSIFICATION	// There is no charset info -> the default system charset is // used
WITHOUT_CLASSIFICATION	// enable timer
WITHOUT_CLASSIFICATION	/*	 * private String body;	 *	 * private URL url;	 */
WITHOUT_CLASSIFICATION	// if HTML stripping is enabled
WITHOUT_CLASSIFICATION	// read configuration from options.xml file // create css-stylesheet string // set font of html-element <P>
WITHOUT_CLASSIFICATION	// vertical // grid // lines
WITHOUT_CLASSIFICATION	// dark gray line at 12 and 13
WITHOUT_CLASSIFICATION	// vertical grid lines
WITHOUT_CLASSIFICATION	// light gray line every day
WITHOUT_CLASSIFICATION	// select current day
WITHOUT_CLASSIFICATION	// // activity setup // 
WITHOUT_CLASSIFICATION	// define activity layout
WITHOUT_CLASSIFICATION	/*		 * css = "<style type=\"text/css\">\n" + "body {font-family:\"" + name +		 * "\"; font-size:\"" + size + "pt; \"} \n" + "a { color: blue;		 * text-decoration: underline }\n" + "font.quoting {color:#949494;} \n" + "</style>\n";		 */
WITHOUT_CLASSIFICATION	// layout.setVisualDateRangeRounder(new BoundaryRounder(DateRangeI.RANGE_TYPE_DAY, true, false, false)); // DateRangeRounder for AllDay Events
WITHOUT_CLASSIFICATION	// convert special characters
WITHOUT_CLASSIFICATION	// set the start to 00:00:00
WITHOUT_CLASSIFICATION	// if the end is on 00:00:00, round it to 23:59:59.999
WITHOUT_CLASSIFICATION	// TextAShape titleText = new TextAShape(DEFAULT_TITLE_TEXT_SHAPE_NAME, //		"$startTime$ - $endTimeExcl$ ($timeZoneShort$)", //		titleTextAbsRect, TextAShape.TYPE_SINGE_LINE, textFont, //		textPaint, new AtStart(0), new AtStart(-3), GfxUtil.AA_HINT_ON);
WITHOUT_CLASSIFICATION	// different border for recurrent events // ActivityInteractor.setStaticOverride( // AShapeUtil.DEFAULT_OUTLINE_SHAPE_NAME, AShape.A_STROKE, // new OverrideFilter() { // public Object getOverride(Object subject, // Object defaultObject) { // return ((ActivityView) subject).getModel() // .isRecurrent() ? new BasicStroke(1.0f, // BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, // 0, new float[] { 9 }, 0) : defaultObject; // } // });
WITHOUT_CLASSIFICATION	// Color shadowPaint = new Color(0, 0, 0, 100);
WITHOUT_CLASSIFICATION	// bgAShape.addSubShape(mainText);
WITHOUT_CLASSIFICATION	// Drag, resize interactions
WITHOUT_CLASSIFICATION	// Block mouse moves to the underlaying component won't restore the // Cursor
WITHOUT_CLASSIFICATION	// all day events
WITHOUT_CLASSIFICATION	// AShapeUtil.addResizeBoxes(root, SwingConstants.HORIZONTAL, 4);
WITHOUT_CLASSIFICATION	// setBackground(UIManager.getColor("TextField.background"));
WITHOUT_CLASSIFICATION	// get header from folder
WITHOUT_CLASSIFICATION	// get header from folder
WITHOUT_CLASSIFICATION	// create a view more button, responsible for // opening the attachment viewer popup
WITHOUT_CLASSIFICATION	// remove old activity
WITHOUT_CLASSIFICATION	// TODO: re-enable feature, the following code violates our // design, accessing folders is only allowed in Command.execute()
WITHOUT_CLASSIFICATION	/*		 * TreeController treeController = (TreeController) ((TreeViewOwner)		 * frameController) .getTreeController();		 * 		 * TreeView treeView = treeController.getView();		 */
WITHOUT_CLASSIFICATION	// changing the selection to the first row
WITHOUT_CLASSIFICATION	// and getting the uid for this node
WITHOUT_CLASSIFICATION	//			 @author: fdietz never request focus //requestFocus();
WITHOUT_CLASSIFICATION	// com.miginfocom.util.LicenseValidator.setLicenseKey("Cu=Frederik_Dietz\nCo=OpenSource\nDm=false\nEx=0\nSignature=302C021408B54A0B041E79362B1951E9FDB9AFEAD0EBFBDD021409F4830B4AD832766388107CB1D38126A9473C0C");
WITHOUT_CLASSIFICATION	// enabled event-firing
WITHOUT_CLASSIFICATION	// we currently only support a single category per activity
WITHOUT_CLASSIFICATION	/* version 4 */
WITHOUT_CLASSIFICATION	/* IETF variant */
WITHOUT_CLASSIFICATION	/* multicast bit */
WITHOUT_CLASSIFICATION	// retrieve event from store
WITHOUT_CLASSIFICATION	// retrieve event from store
WITHOUT_CLASSIFICATION	// set new calendar id
WITHOUT_CLASSIFICATION	// set new calendar id
WITHOUT_CLASSIFICATION	// persist modified calendar
WITHOUT_CLASSIFICATION	// persist modified calendar
WITHOUT_CLASSIFICATION	// update start/end time
WITHOUT_CLASSIFICATION	// update store
WITHOUT_CLASSIFICATION	// update store
WITHOUT_CLASSIFICATION	// get Columba's top-level configuration directory
WITHOUT_CLASSIFICATION	// create top-level configuration directory
WITHOUT_CLASSIFICATION	// load configuration from persistence
WITHOUT_CLASSIFICATION	// make sure configuration is saved when exiting
WITHOUT_CLASSIFICATION	// we only use the first message
WITHOUT_CLASSIFICATION	// retrieve subject
WITHOUT_CLASSIFICATION	// generate default unique id
WITHOUT_CLASSIFICATION	// create new event with new UUID
WITHOUT_CLASSIFICATION	// copy all attributes
WITHOUT_CLASSIFICATION	// copy all attributes
WITHOUT_CLASSIFICATION	// java.util.Calendar stamp = event.getDtStamp();
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// FIXME r.setPos();
WITHOUT_CLASSIFICATION	// create recurrence
WITHOUT_CLASSIFICATION	// ensure tzid matches date-time timezone.. // Parameter tzId = // dtStart1.getParameters().getParameter( // Parameter.TZID);
WITHOUT_CLASSIFICATION	// we only update changes for events currently
WITHOUT_CLASSIFICATION	// ensure tzid matches date-time timezone.. // Parameter tzId = dtEnd1.getParameters().getParameter( // Parameter.TZID);
WITHOUT_CLASSIFICATION	// ensure tzid matches date-time timezone.. // Parameter tzId = // dtStamp1.getParameters().getParameter( // Parameter.TZID);
WITHOUT_CLASSIFICATION	// remove everything which is not A-Za-z0-9-_
WITHOUT_CLASSIFICATION	// create recurrence
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.store.api.ICalendarStoreFactory#getLocaleStore()	 */
WITHOUT_CLASSIFICATION	// RRULE:FREQ=YEARLY;COUNT=5;INTERVAL=1 // RRULE:FREQ=WEEKLY;UNTIL=20060725T215959;INTERVAL=1;BYDAY=TU // RRULE:FREQ=YEARLY;INTERVAL=1
WITHOUT_CLASSIFICATION	// MouseListener sorts table when clicking on a column header
WITHOUT_CLASSIFICATION	// RRULE:FREQ=WEEKLY;COUNT=8;INTERVAL=2;BYDAY=TU,TH // RRULE:FREQ=MONTHLY;UNTIL=20070627T215959;INTERVAL=2;BYDAY=4WE // RRULE:FREQ=YEARLY;INTERVAL=1 // RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=-1SU;BYMONTH=3 // RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=-1SU;BYMONTH=10
WITHOUT_CLASSIFICATION	// skip, if UID, dtStart or dtEnd is not defined
WITHOUT_CLASSIFICATION	// if there is no string given, return a number
WITHOUT_CLASSIFICATION	/*		 * DocType docType = factory .docType("iCalendar", "-//IETF//DTD		 * XCAL/iCalendar XML//EN",		 * "http://www.ietf.org/internet-drafts/draft-hare-xcalendar-01.txt");		 * doc.setDocType(docType);		 */
WITHOUT_CLASSIFICATION	// wrong xml-format
WITHOUT_CLASSIFICATION	// found category
WITHOUT_CLASSIFICATION	//Element child = getParentElement().getChild(ICALENDAR.CATEGORIES); //List list = child.getChildren();
WITHOUT_CLASSIFICATION	// find the property in the rrule string
WITHOUT_CLASSIFICATION	// no recurrency, so nothing in the string
WITHOUT_CLASSIFICATION	// build string
WITHOUT_CLASSIFICATION	// optional parts
WITHOUT_CLASSIFICATION	//UNTIL=20070627T215959
WITHOUT_CLASSIFICATION	// generate new UUID if it does not exist yet
WITHOUT_CLASSIFICATION	// remove old data
WITHOUT_CLASSIFICATION	// generate xml document
WITHOUT_CLASSIFICATION	// add new data to local store
WITHOUT_CLASSIFICATION	// builder.setValidation(true);
WITHOUT_CLASSIFICATION	// filename = "uuid.xcs"
WITHOUT_CLASSIFICATION	// remove ".xcs"
WITHOUT_CLASSIFICATION	// we only update changes for events currently
WITHOUT_CLASSIFICATION	//ICalendarStore store = (ICalendarStore) next.getSource();
WITHOUT_CLASSIFICATION	// retrieve event from store
WITHOUT_CLASSIFICATION	// retrieve event from store
WITHOUT_CLASSIFICATION	// update store
WITHOUT_CLASSIFICATION	// update store
WITHOUT_CLASSIFICATION	// remove old activity
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// create new activity
WITHOUT_CLASSIFICATION	// process all events collected until now
WITHOUT_CLASSIFICATION	// putValue(AbstractColumbaAction.LARGE_ICON, ResourceLoader // .getImageIcon("new_appointment-32.png")); // putValue(AbstractColumbaAction.SMALL_ICON, ResourceLoader // .getImageIcon("new_appointment.png"));
WITHOUT_CLASSIFICATION	// copy activity
WITHOUT_CLASSIFICATION	// enable all menuitems
WITHOUT_CLASSIFICATION	// enable all menuitems
WITHOUT_CLASSIFICATION	// retrieve selected activity
WITHOUT_CLASSIFICATION	// retrieve selected activity
WITHOUT_CLASSIFICATION	// activity belongs to calendar id ?
WITHOUT_CLASSIFICATION	// activity belongs to calendar id ?
WITHOUT_CLASSIFICATION	// disable this calendar's id
WITHOUT_CLASSIFICATION	// disable this calendar's id
WITHOUT_CLASSIFICATION	// get selected calendar id
WITHOUT_CLASSIFICATION	// get selected calendar
WITHOUT_CLASSIFICATION	// A recurring event
WITHOUT_CLASSIFICATION	// this is for the calendar component and only used internally
WITHOUT_CLASSIFICATION	// 2 columns
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// we need this for the focus manager
WITHOUT_CLASSIFICATION	// background
WITHOUT_CLASSIFICATION	// Drag, resize interactions
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// DocumentListener Methods
WITHOUT_CLASSIFICATION	// select first item
WITHOUT_CLASSIFICATION	// glocal grid line colors
WITHOUT_CLASSIFICATION	// activityAShapeBean = new ActivityAShapeBean();
WITHOUT_CLASSIFICATION	// general grid size - if we don't set this property there won't be // vertical scrollbars
WITHOUT_CLASSIFICATION	// west header
WITHOUT_CLASSIFICATION	// first row showing the hour
WITHOUT_CLASSIFICATION	// north header background
WITHOUT_CLASSIFICATION	// north header cell decorator
WITHOUT_CLASSIFICATION	// first header showing Day info
WITHOUT_CLASSIFICATION	// date area grid line
WITHOUT_CLASSIFICATION	// horizontal grid lines
WITHOUT_CLASSIFICATION	// dark gray line every hour
WITHOUT_CLASSIFICATION	// light gray line every 30 min
WITHOUT_CLASSIFICATION	// vertical grid lines
WITHOUT_CLASSIFICATION	// light gray line every day
WITHOUT_CLASSIFICATION	// horizontal light gray column separator line
WITHOUT_CLASSIFICATION	// select current day
WITHOUT_CLASSIFICATION	// select nodes
WITHOUT_CLASSIFICATION	// differnt outline color is selected
WITHOUT_CLASSIFICATION	// bold outline if selected
WITHOUT_CLASSIFICATION	// Color titleBgPaint = null;//new Color(200, 50, 50, 255);
WITHOUT_CLASSIFICATION	// Color selectedTitlePaint = new Color(200, 100, 100);
WITHOUT_CLASSIFICATION	// Color bulletPaint = new Color(100, 100, 100);
WITHOUT_CLASSIFICATION	// Color textPaint = new Color(0, 0, 0, 50);
WITHOUT_CLASSIFICATION	// even
WITHOUT_CLASSIFICATION	// First (left) tab
WITHOUT_CLASSIFICATION	// Second (right) tab
WITHOUT_CLASSIFICATION	// Fallback shape for small sizes
WITHOUT_CLASSIFICATION	// Resize events
WITHOUT_CLASSIFICATION	// **************************************** // * Static example shape creation // ****************************************
WITHOUT_CLASSIFICATION	// AShapeUtil.addMouseFireEvent(outlineAShape, trigger, // DefaultDateArea.AE_CATEGORY_DRAG_PRESSED, false, false, button);
WITHOUT_CLASSIFICATION	// END1 because the draw should be // correct
WITHOUT_CLASSIFICATION	// States
WITHOUT_CLASSIFICATION	// Shadow
WITHOUT_CLASSIFICATION	// Shadow
WITHOUT_CLASSIFICATION	// PlaceRect bgAbsRect = new AbsRect(new AtStart(0), new AtStart(0), new // AtEnd(0), new AtEnd(0), null, null, shadowInsets);
WITHOUT_CLASSIFICATION	// FillAShape filledShadow = new FillAShape("shadowShape", new // RoundRectangle(0, 0, 1, 1, 5, 5), bgAbsRect, new Color(0, 0, 0, 100), // GfxUtil.AA_HINT_ON);
WITHOUT_CLASSIFICATION	// SliceSpec shwSI = new SliceSpec(new Insets(10, 10, 10, 10), // SliceSpec.TYPE_TILE_CUT, SliceSpec.OPT_BORDER);
WITHOUT_CLASSIFICATION	// FeatherAShape shadow = new FeatherAShape("shadow", filledShadow, new // Color(255, 255, 255, 0), 5, shwSI);
WITHOUT_CLASSIFICATION	// AbsRect textRect = new AbsRect(new AtStart(4), AtStart.START0, new // AtEnd(-4), AtEnd.END0);
WITHOUT_CLASSIFICATION	// root.addSubShape(shadow);
WITHOUT_CLASSIFICATION	// root.addSubShape(shadow);
WITHOUT_CLASSIFICATION	// root.addSubShape(textShape);
WITHOUT_CLASSIFICATION	// root.addSubShape(textShape);
WITHOUT_CLASSIFICATION	// root.addSubShape(outlineShape);
WITHOUT_CLASSIFICATION	// root.setAttribute(AShape.A_REPORT_HIT_SHAPE, Boolean.TRUE);
WITHOUT_CLASSIFICATION	// Animations for text
WITHOUT_CLASSIFICATION	// textAShape.setAttribute(AShape.A_REPORT_HIT_SHAPE, Boolean.TRUE);
WITHOUT_CLASSIFICATION	// Title
WITHOUT_CLASSIFICATION	// Content
WITHOUT_CLASSIFICATION	// Outline
WITHOUT_CLASSIFICATION	// Build tree
WITHOUT_CLASSIFICATION	// Color moOutlinePaint = new Color(0, 0, 0);
WITHOUT_CLASSIFICATION	// private ThemeDateAreaContainer view;
WITHOUT_CLASSIFICATION	// every year?
WITHOUT_CLASSIFICATION	// for leap years!
WITHOUT_CLASSIFICATION	// start with week view
WITHOUT_CLASSIFICATION	// LOG.severe("no number!")
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// SliceSpec shwSI = new SliceSpec(new Insets(10, 10, 10, 10), // SliceSpec.TYPE_TILE_CUT, SliceSpec.OPT_BORDER);
WITHOUT_CLASSIFICATION	// FeatherAShape shadow = new FeatherAShape("shadow", filledShadow, new // Color(255, 255, 255, 0), 5, shwSI);
WITHOUT_CLASSIFICATION	// FillAShape filledShadow = new FillAShape("shadowShape", new // RoundRectangle(0, 0, 1, 1, 5, 5), bgAbsRect, new Color(0, 0, 0, 100), // Boolean.TRUE);
WITHOUT_CLASSIFICATION	// DrawAShape outlineShape = new DrawAShape("bgFill", new Rectangle(0, // 0, 1, 1), AbsRect.FILL, outlinePaint, new BasicStroke(1f), // Boolean.FALSE);
WITHOUT_CLASSIFICATION	// SizeConstraint sConstr1 = new SizeConstraint(new AtFixed(10), new // AtFraction(1), 1.0f);
WITHOUT_CLASSIFICATION	// SizeConstraint sConstr2 = new SizeConstraint(new AtFixed(0), new // AtFraction(0.5f), 1.0f);
WITHOUT_CLASSIFICATION	// SizeConstraint sConstr3 = new SizeConstraint(new AtFixed(0), new // AtFraction(1), 0.0f);
WITHOUT_CLASSIFICATION	// SizeConstraint sConstr4 = new SizeConstraint(new AtFixed(0), new // AtFraction(1), 0.0f);
WITHOUT_CLASSIFICATION	// ShapeGradientPaint bgPaint = new ShapeGradientPaint(new Color(235, // 235, 235), new Color(255, 255, 255), 180, 1f, 0.5f, false);
WITHOUT_CLASSIFICATION	// ShapeGradientPaint titlePaint = new ShapeGradientPaint(new Color(255, // 150, 150), new Color(255, 200, 200), 0, 0.7f, 0.7f, false);
WITHOUT_CLASSIFICATION	// addEnterExitOverride(outlineAShape, outlineAShape, AShape.A_PAINT, // moOutlinePaint, false, true);
WITHOUT_CLASSIFICATION	// toolTip.setForeground(Color.DARK_GRAY);
WITHOUT_CLASSIFICATION	// ((DefaultDateArea) localDateAreaBean.getDateArea()) // .addActivityMoveListener(this);
WITHOUT_CLASSIFICATION	// mouse hovers over activity
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// retrieve new selection
WITHOUT_CLASSIFICATION	// remember selected activity
WITHOUT_CLASSIFICATION	// notify all listeners
WITHOUT_CLASSIFICATION	// check if happens on the selected activity
WITHOUT_CLASSIFICATION	// check if happens in calendar, but not on activity
WITHOUT_CLASSIFICATION	// trigged if activity is moved or daterange is modified
WITHOUT_CLASSIFICATION	// the java methods return a nice week of year, we need hard facts
WITHOUT_CLASSIFICATION	// update modification timestamp
WITHOUT_CLASSIFICATION	// its always possible that no folder is currenlty selected
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// retrieve new selection
WITHOUT_CLASSIFICATION	// remember selected activity
WITHOUT_CLASSIFICATION	// notify all listeners
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#viewNext()	 */
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	// select activity before opening context context-menu // selectedInternalActivitiy.getStates().setStates( // GenericStates.SELECTED_BIT, true);
WITHOUT_CLASSIFICATION	// double-click on empty calendar // mediator.fireCreateActivity(null);
WITHOUT_CLASSIFICATION	// it will not be done correctly, if the first statement is // omitted
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// TimeSpan span = activityList.get(i);
WITHOUT_CLASSIFICATION	// clicked on calendar - not activity
WITHOUT_CLASSIFICATION	// table.put(item.getId(), item.getName());
WITHOUT_CLASSIFICATION	// custom renderer to convert from calendar id to calendar name
WITHOUT_CLASSIFICATION	// regexp for correct timestamp
WITHOUT_CLASSIFICATION	// check value before :
WITHOUT_CLASSIFICATION	// correct value!
WITHOUT_CLASSIFICATION	// correct value!
WITHOUT_CLASSIFICATION	// check value after :
WITHOUT_CLASSIFICATION	// both values are okay, so create a correct time
WITHOUT_CLASSIFICATION	// there is no :
WITHOUT_CLASSIFICATION	// no correct value!
WITHOUT_CLASSIFICATION	// in case we have to add another "0"
WITHOUT_CLASSIFICATION	// enable selection
WITHOUT_CLASSIFICATION	// click on this button will open the recurrence dialog
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// disable time pickers
WITHOUT_CLASSIFICATION	// disable time pickers
WITHOUT_CLASSIFICATION	// enable time pickers
WITHOUT_CLASSIFICATION	// enable time pickers
WITHOUT_CLASSIFICATION	// scrolling to the selected row
WITHOUT_CLASSIFICATION	// A recurring event
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// private Hashtable<String, String> table = new Hashtable<String, // String>(10);
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// disable time pickers
WITHOUT_CLASSIFICATION	// enable time pickers
WITHOUT_CLASSIFICATION	// it has to be set
WITHOUT_CLASSIFICATION	// check if the user entered valid data
WITHOUT_CLASSIFICATION	// enable button
WITHOUT_CLASSIFICATION	// disable button
WITHOUT_CLASSIFICATION	// frequency
WITHOUT_CLASSIFICATION	// no end
WITHOUT_CLASSIFICATION	// maximum occurrences
WITHOUT_CLASSIFICATION	// end date
WITHOUT_CLASSIFICATION	// enable all radio buttons
WITHOUT_CLASSIFICATION	// disable all
WITHOUT_CLASSIFICATION	// load options of newly selected folder
WITHOUT_CLASSIFICATION	// disable date picker
WITHOUT_CLASSIFICATION	// enable max occurrences
WITHOUT_CLASSIFICATION	// enable until
WITHOUT_CLASSIFICATION	// disable other
WITHOUT_CLASSIFICATION	// TestDataGenerator.generateTestData();
WITHOUT_CLASSIFICATION	// calendar list
WITHOUT_CLASSIFICATION	// create empty value
WITHOUT_CLASSIFICATION	// create identity value
WITHOUT_CLASSIFICATION	// summary
WITHOUT_CLASSIFICATION	// description
WITHOUT_CLASSIFICATION	// location
WITHOUT_CLASSIFICATION	// date range
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// glocal grid line colors
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// date area grid line
WITHOUT_CLASSIFICATION	// horizontal grid lines
WITHOUT_CLASSIFICATION	// dark gray line at 12 and 13
WITHOUT_CLASSIFICATION	// vertical grid lines
WITHOUT_CLASSIFICATION	// light gray line every day
WITHOUT_CLASSIFICATION	// vertical light gray column separator line
WITHOUT_CLASSIFICATION	// horizontal light gray column separator line
WITHOUT_CLASSIFICATION	// select current day
WITHOUT_CLASSIFICATION	// monthlyActivityAShapeBean = new ActivityAShapeBean();
WITHOUT_CLASSIFICATION	// showing the week number
WITHOUT_CLASSIFICATION	// enable selection
WITHOUT_CLASSIFICATION	// JScrollPane tableScrollPane = new JScrollPane(navigationController // .getView()); // tableScrollPane.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, // 0));
WITHOUT_CLASSIFICATION	//checkbox.setBackground(item.getColor());
WITHOUT_CLASSIFICATION	//item.setSelected(checkbox.isSelected());
WITHOUT_CLASSIFICATION	//Make the renderer reappear.
WITHOUT_CLASSIFICATION	// create default root nodes <Local> and <Web>
WITHOUT_CLASSIFICATION	// category filtering is disabled as default
WITHOUT_CLASSIFICATION	// calendar is selected as default
WITHOUT_CLASSIFICATION	// two column
WITHOUT_CLASSIFICATION	//setBorder(BorderFactory.createEmptyBorder(2, 4, 2, 4));
WITHOUT_CLASSIFICATION	//setBorder(BorderFactory.createEmptyBorder(2, 4, 2, 4));
WITHOUT_CLASSIFICATION	// private CheckableItemListTableModel model;
WITHOUT_CLASSIFICATION	// do not show header
WITHOUT_CLASSIFICATION	// no grid lines
WITHOUT_CLASSIFICATION	// setIntercellSpacing(new Dimension(2, 2));
WITHOUT_CLASSIFICATION	// setRowMargin(5);
WITHOUT_CLASSIFICATION	//setBackground(item.getColor());
WITHOUT_CLASSIFICATION	// showing the month number
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// // activity setup // 
WITHOUT_CLASSIFICATION	// vertical // grid // lines
WITHOUT_CLASSIFICATION	// monthlyWestDateHeaderBean // .setLabelRotation(TextAShape.TYPE_SINGE_LINE_ROT_CCW);
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// check if its a calendar component
WITHOUT_CLASSIFICATION	// get calendar ui component depository
WITHOUT_CLASSIFICATION	// add tag id as last
WITHOUT_CLASSIFICATION	// set all tags/categories to be *not* selected
WITHOUT_CLASSIFICATION	// retrieve tag/category to be selected
WITHOUT_CLASSIFICATION	// create new one
WITHOUT_CLASSIFICATION	// mark it as selected
WITHOUT_CLASSIFICATION	// update calendar viewer
WITHOUT_CLASSIFICATION	// check if calendar item is tagged
WITHOUT_CLASSIFICATION	// check three entries
WITHOUT_CLASSIFICATION	// Event: Anniversary
WITHOUT_CLASSIFICATION	// 204524
WITHOUT_CLASSIFICATION	// Event: All Day Event
WITHOUT_CLASSIFICATION	// Event: Normal Event
WITHOUT_CLASSIFICATION	// this is the expected cases
WITHOUT_CLASSIFICATION	// delete all data in directory
WITHOUT_CLASSIFICATION	// delete folder
WITHOUT_CLASSIFICATION	// int column = view.convertColumnIndexToModel(viewColumn); // int column2 = view.convertColumnIndexToView(viewColumn);
WITHOUT_CLASSIFICATION	// // mark all activities with the tag // 
WITHOUT_CLASSIFICATION	// example: // "columba://org.columba.contact/<folder-id>/<contact-id>"
WITHOUT_CLASSIFICATION	// // now change all global categories // 
WITHOUT_CLASSIFICATION	// that is the expected case
WITHOUT_CLASSIFICATION	// ************ // normal cases // ************
WITHOUT_CLASSIFICATION	// *********** // edge values // ***********
WITHOUT_CLASSIFICATION	// ****************** // more than one year // ******************
WITHOUT_CLASSIFICATION	// *************** // MONTH VIEW TEST // ***************
WITHOUT_CLASSIFICATION	// new vis range = Start: Sep 23, 2007 12:00:00 AM (RAW:1.0, DST:-1.0)   End: Nov 3, 2007 11:59:59 PM (RAW:1.0, DST:0.0)  Time zone: null  Locale: null // new vis range = Start: Oct 1, 2007 12:00:00 AM (RAW:1.0, DST:-1.0)   End: Nov 11, 2007 11:59:59 PM (RAW:1.0, DST:0.0)  Time zone: null  Locale: null // should be // new vis range = Start: Oct 1, 2007 12:00:00 AM (RAW:1.0, DST:-1.0)   End: Nov 10, 2007 11:59:59 PM (RAW:1.0, DST:0.0)  Time zone: null  Locale: null
WITHOUT_CLASSIFICATION	// valid inputs
WITHOUT_CLASSIFICATION	// recoverable inputs
WITHOUT_CLASSIFICATION	// unrecoverable inputs
WITHOUT_CLASSIFICATION	// city
WITHOUT_CLASSIFICATION	// state/province/county
WITHOUT_CLASSIFICATION	// This should never happen since superclass is Object
WITHOUT_CLASSIFICATION	/*AdapterNode name;AdapterNode uid;AdapterNode type;AdapterNode rootNode;*/
WITHOUT_CLASSIFICATION	/*this.rootNode = root;parse();createMissingElements();*/
WITHOUT_CLASSIFICATION	//filterList = new Vector();
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.addressbook.gui.tree.AddressbookTreeNode#getName() */
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// 
WITHOUT_CLASSIFICATION	//private File addressbookFile;
WITHOUT_CLASSIFICATION	// skip if contact item is not valid
WITHOUT_CLASSIFICATION	// check if contact with given email address exists already
WITHOUT_CLASSIFICATION	// check if it contains comma character
WITHOUT_CLASSIFICATION	// retrieve all contact items and add those to the list only
WITHOUT_CLASSIFICATION	// simply all all group items to the list
WITHOUT_CLASSIFICATION	// add group items
WITHOUT_CLASSIFICATION	// example: "columba://org.columba.contact/<folder-id>/<contact-id>"
WITHOUT_CLASSIFICATION	// modify card properties in folder
WITHOUT_CLASSIFICATION	// create list containing all contact item of this folder
WITHOUT_CLASSIFICATION	/*	 * public AddressbookTreeNode(String name) { super(name); this.name = name; }	 */
WITHOUT_CLASSIFICATION	// FAILURE!!!
WITHOUT_CLASSIFICATION	// public abstract Class getDefaultChild();
WITHOUT_CLASSIFICATION	// Put properties that should be copied from parent here
WITHOUT_CLASSIFICATION	// remove xml config
WITHOUT_CLASSIFICATION	// remove node
WITHOUT_CLASSIFICATION	// header file found
WITHOUT_CLASSIFICATION	// skip, if null
WITHOUT_CLASSIFICATION	// contact doesn't exist in parent folder anymore // -> remove it
WITHOUT_CLASSIFICATION	// start parsing line by line
WITHOUT_CLASSIFICATION	// empty line, means new contactcard
WITHOUT_CLASSIFICATION	// parse key:value lines
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// create URI representing the contact
WITHOUT_CLASSIFICATION	// if next node is null (the end of the list) return
WITHOUT_CLASSIFICATION	// start parsing line
WITHOUT_CLASSIFICATION	// found new token
WITHOUT_CLASSIFICATION	// backwards compatibility
WITHOUT_CLASSIFICATION	// protected AddressbookFolder tempFolder;
WITHOUT_CLASSIFICATION	// tempFolder = new AddressbookFolder(null,addressbookInterface);
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// add new group to folder
WITHOUT_CLASSIFICATION	// get parent
WITHOUT_CLASSIFICATION	// notify model
WITHOUT_CLASSIFICATION	// register interest on table selection changes
WITHOUT_CLASSIFICATION	// register interest on tree selection changes
WITHOUT_CLASSIFICATION	// register interest on tree selection changes
WITHOUT_CLASSIFICATION	// remember last selected folder treenode
WITHOUT_CLASSIFICATION	// remember last selected folder treenode
WITHOUT_CLASSIFICATION	// remember last selected folder treenode
WITHOUT_CLASSIFICATION	// enable, if more than zero treenodes selected
WITHOUT_CLASSIFICATION	// enable, if more than zero treenodes selected
WITHOUT_CLASSIFICATION	//		 get selected folder
WITHOUT_CLASSIFICATION	//		 get selected contact/group card
WITHOUT_CLASSIFICATION	// create open file dialog
WITHOUT_CLASSIFICATION	//if user pressed OK button
WITHOUT_CLASSIFICATION	// add contact to folder
WITHOUT_CLASSIFICATION	// register interest on contact selection changes
WITHOUT_CLASSIFICATION	// check if contact is tagged
WITHOUT_CLASSIFICATION	// modify card properties in folder
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get parent
WITHOUT_CLASSIFICATION	// notify model
WITHOUT_CLASSIFICATION	// remember last selected folder treenode
WITHOUT_CLASSIFICATION	// remember last selected folder treenode
WITHOUT_CLASSIFICATION	// enable, if more than zero treenodes selected
WITHOUT_CLASSIFICATION	// enable, if more than zero treenodes selected
WITHOUT_CLASSIFICATION	// create open file dialog
WITHOUT_CLASSIFICATION	//if user pressed OK button
WITHOUT_CLASSIFICATION	//		 register interest on tree selection changes
WITHOUT_CLASSIFICATION	// read VCARD file into string buffer
WITHOUT_CLASSIFICATION	// create contact card
WITHOUT_CLASSIFICATION	// add to folder
WITHOUT_CLASSIFICATION	// update table
WITHOUT_CLASSIFICATION	// get selected contact/group card
WITHOUT_CLASSIFICATION	//					 re-select folder
WITHOUT_CLASSIFICATION	// tree has focus
WITHOUT_CLASSIFICATION	// tree has focus
WITHOUT_CLASSIFICATION	// tree has focus
WITHOUT_CLASSIFICATION	// re-select folder
WITHOUT_CLASSIFICATION	// table has focus
WITHOUT_CLASSIFICATION	// table has focus
WITHOUT_CLASSIFICATION	// remove contacts/group cards from folder
WITHOUT_CLASSIFICATION	//		 re-select folder
WITHOUT_CLASSIFICATION	// remove folder from parent
WITHOUT_CLASSIFICATION	//_editor.moveCaretPosition(cursor_pos);
WITHOUT_CLASSIFICATION	// contacts item
WITHOUT_CLASSIFICATION	// group item
WITHOUT_CLASSIFICATION	// for each JComboBox item
WITHOUT_CLASSIFICATION	// to lower case
WITHOUT_CLASSIFICATION	// compare if item starts with str
WITHOUT_CLASSIFICATION	// initialize completer
WITHOUT_CLASSIFICATION	// can be only one
WITHOUT_CLASSIFICATION	// can be only one
WITHOUT_CLASSIFICATION	// ======== this ========
WITHOUT_CLASSIFICATION	// leave dialog empty if no source contact model specified
WITHOUT_CLASSIFICATION	// model -> view
WITHOUT_CLASSIFICATION	// fall back to default image
WITHOUT_CLASSIFICATION	// we support up to 4 email addresses
WITHOUT_CLASSIFICATION	// we support up to 4 email addresses
WITHOUT_CLASSIFICATION	// we support up to 4 phone entries
WITHOUT_CLASSIFICATION	// we support up to 4 im entries
WITHOUT_CLASSIFICATION	// we support up to 3 address entries (work/private/other)
WITHOUT_CLASSIFICATION	// view -> model
WITHOUT_CLASSIFICATION	// we support up to 4 phones
WITHOUT_CLASSIFICATION	// we support up to 4 im
WITHOUT_CLASSIFICATION	// we support 3 address types (work/home/other)
WITHOUT_CLASSIFICATION	// ======== dialogPane ========
WITHOUT_CLASSIFICATION	// ======== contentPane ========
WITHOUT_CLASSIFICATION	// ======== tabbedPane2 ========
WITHOUT_CLASSIFICATION	// ======== contactPanel ========
WITHOUT_CLASSIFICATION	// ======== panel7 ========
WITHOUT_CLASSIFICATION	// ---- pictureButton ----
WITHOUT_CLASSIFICATION	// ---- nicknameLabel ----
WITHOUT_CLASSIFICATION	// ---- fileunderLabel ----
WITHOUT_CLASSIFICATION	// ---- categoriesButton ----
WITHOUT_CLASSIFICATION	// ---- emailTextField1 ----
WITHOUT_CLASSIFICATION	// ---- emailTextField3 ----
WITHOUT_CLASSIFICATION	// ---- emailTextField4 ----
WITHOUT_CLASSIFICATION	// ---- preferHtmlCheckBox ----
WITHOUT_CLASSIFICATION	// ---- telephoneTextField1 ----
WITHOUT_CLASSIFICATION	// ---- telephoneTextField3 ----
WITHOUT_CLASSIFICATION	// ---- telephoneTextField4 ----
WITHOUT_CLASSIFICATION	// ---- imTextField1 ----
WITHOUT_CLASSIFICATION	// ---- imTextField2 ----
WITHOUT_CLASSIFICATION	// ---- imTextField3 ----
WITHOUT_CLASSIFICATION	// ======== personalInfoPanel ========
WITHOUT_CLASSIFICATION	// ---- homepageLabel ----
WITHOUT_CLASSIFICATION	// ======== panel1 ========
WITHOUT_CLASSIFICATION	// ---- homepageTextField ----
WITHOUT_CLASSIFICATION	// ---- weblogLabel ----
WITHOUT_CLASSIFICATION	// ======== panel5 ========
WITHOUT_CLASSIFICATION	// ---- weblogTextField ----
WITHOUT_CLASSIFICATION	// ---- weblogButton ----
WITHOUT_CLASSIFICATION	// ======== panel6 ========
WITHOUT_CLASSIFICATION	// ---- calendarTextField ----
WITHOUT_CLASSIFICATION	// ---- calendarButton ----
WITHOUT_CLASSIFICATION	// ---- freebusyLabel ----
WITHOUT_CLASSIFICATION	// ---- freebusyTextField ----
WITHOUT_CLASSIFICATION	// ---- freebusyButton ----
WITHOUT_CLASSIFICATION	// ---- professionLabel ----
WITHOUT_CLASSIFICATION	// ---- professionTextField ----
WITHOUT_CLASSIFICATION	// ---- titleLabel ----
WITHOUT_CLASSIFICATION	// ---- companyLabel ----
WITHOUT_CLASSIFICATION	// ---- departmentTextField ----
WITHOUT_CLASSIFICATION	// ---- companyTextField ----
WITHOUT_CLASSIFICATION	// ---- managerTextField ----
WITHOUT_CLASSIFICATION	// ---- departmentLabel ----
WITHOUT_CLASSIFICATION	// ---- officeTextField ----
WITHOUT_CLASSIFICATION	// ---- managerLabel ----
WITHOUT_CLASSIFICATION	// ---- notesLabel ----
WITHOUT_CLASSIFICATION	// ---- officeLabel ----
WITHOUT_CLASSIFICATION	// ======== mailingAddressPanel ========
WITHOUT_CLASSIFICATION	// ---- birthdayLabel ----
WITHOUT_CLASSIFICATION	// ---- notesTextArea ----
WITHOUT_CLASSIFICATION	// ======== scrollPane3 ========
WITHOUT_CLASSIFICATION	// ---- privateCityLabel ----
WITHOUT_CLASSIFICATION	// ======== scrollPane1 ========
WITHOUT_CLASSIFICATION	// ---- privateAddressLabel ----
WITHOUT_CLASSIFICATION	// ---- privateCityTextField ----
WITHOUT_CLASSIFICATION	// ---- privateZipPostalCodeLabel ----
WITHOUT_CLASSIFICATION	// ---- label1 ----
WITHOUT_CLASSIFICATION	// ---- privateStateProvinceCountyLabel ----
WITHOUT_CLASSIFICATION	// ---- privatePOBoxLabel ----
WITHOUT_CLASSIFICATION	// ---- privateCountryLabel ----
WITHOUT_CLASSIFICATION	// shortcut key //putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke("B"));
WITHOUT_CLASSIFICATION	// ---- workAddressLabel ----
WITHOUT_CLASSIFICATION	// ======== scrollPane2 ========
WITHOUT_CLASSIFICATION	// ---- workCityLabel ----
WITHOUT_CLASSIFICATION	// ---- workCityTextField ----
WITHOUT_CLASSIFICATION	// ---- workZipPostalCodeLabel ----
WITHOUT_CLASSIFICATION	// ---- label2 ----
WITHOUT_CLASSIFICATION	// ---- workStateProvinceCountyLabel ----
WITHOUT_CLASSIFICATION	// ---- workPOBoxLabel ----
WITHOUT_CLASSIFICATION	// ---- workCountryLabel ----
WITHOUT_CLASSIFICATION	// ---- otherAddressLabel ----
WITHOUT_CLASSIFICATION	// ======== scrollPane4 ========
WITHOUT_CLASSIFICATION	// ---- otherCityLabel ----
WITHOUT_CLASSIFICATION	// ---- otherZipPostalCodeLabel ----
WITHOUT_CLASSIFICATION	// ---- label3 ----
WITHOUT_CLASSIFICATION	// ---- otherStateProvinceCountyLabel ----
WITHOUT_CLASSIFICATION	// ---- otherPOBoxLabel ----
WITHOUT_CLASSIFICATION	// ---- otherCountryLabel ----
WITHOUT_CLASSIFICATION	// ======== buttonBar ========
WITHOUT_CLASSIFICATION	// ---- okButton ----
WITHOUT_CLASSIFICATION	// ---- cancelButton ----
WITHOUT_CLASSIFICATION	// contains "," comma character
WITHOUT_CLASSIFICATION	// contains "," comma character
WITHOUT_CLASSIFICATION	// set title
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	// gettext //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// settext //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//FocusOwner lost = (FocusOwner) map.get(event.getSource());
WITHOUT_CLASSIFICATION	// remove all children
WITHOUT_CLASSIFICATION	// scrollPane.setPreferredSize( new Dimension(200,200) );
WITHOUT_CLASSIFICATION	// add children
WITHOUT_CLASSIFICATION	// this is a headeritem from autocompletion
WITHOUT_CLASSIFICATION	// c.gridwidth = GridBagConstraints.RELATIVE;
WITHOUT_CLASSIFICATION	// in the future, it will be possible to also add new addresses
WITHOUT_CLASSIFICATION	//current = lost;
WITHOUT_CLASSIFICATION	//destinationButton.setText(destinationFolder.getTreePath());
WITHOUT_CLASSIFICATION	// adjust description field
WITHOUT_CLASSIFICATION	// id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	// associate ui component with FocusOwner
WITHOUT_CLASSIFICATION	// true if action is enabled, false otherwiese
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isCutActionEnabled() */
WITHOUT_CLASSIFICATION	//  no component has the focus // -> disable all actions
WITHOUT_CLASSIFICATION	// uncomment to enable action
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	// 
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// create empty value
WITHOUT_CLASSIFICATION	// create identity value
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// modify card properties in folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected contact/group card
WITHOUT_CLASSIFICATION	//					 re-select folder
WITHOUT_CLASSIFICATION	// define false < true
WITHOUT_CLASSIFICATION	// this is needed to update the titlebar
WITHOUT_CLASSIFICATION	// getContainer().setContentPane(this);
WITHOUT_CLASSIFICATION	// initPerspective(this.perspective);
WITHOUT_CLASSIFICATION	// retrieve contact model from folder
WITHOUT_CLASSIFICATION	// manipulateModel(TableModelPlugin.STRUCTURE_CHANGE);
WITHOUT_CLASSIFICATION	// Where, in the drag image, the mouse was clicked
WITHOUT_CLASSIFICATION	// debug messages for diagnostics
WITHOUT_CLASSIFICATION	/*			 * HeaderItem[] items = new HeaderItem[selection1.length]; items =			 * selection1;			 * HeaderItemDNDManager.getInstance().setHeaderItemList(items);			 */
WITHOUT_CLASSIFICATION	/*			 * HeaderItem[] items = new HeaderItem[selection2.length]; items =			 * selection2;			 * HeaderItemDNDManager.getInstance().setHeaderItemList(items);			 */
WITHOUT_CLASSIFICATION	/*		 * dragSource.startDrag( event, new Cursor(Cursor.DEFAULT_CURSOR),		 * ImageLoader.getImageIcon("contact_small","Add16").getImage(), new		 * Point(5, 5), new StringSelection("contact"), this);		 */
WITHOUT_CLASSIFICATION	// removeElement();
WITHOUT_CLASSIFICATION	//setCellRenderer(new AddressbookListRenderer());
WITHOUT_CLASSIFICATION	/*	   * does exactly the same thing as EditPropertiesAction when contact	   * table is focused	   * */
WITHOUT_CLASSIFICATION	// Plain text components don't fire these events
WITHOUT_CLASSIFICATION	// register as focus owner
WITHOUT_CLASSIFICATION	// define false < true
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// TreePath path = tree.getPathForRow(row);
WITHOUT_CLASSIFICATION	// we use the SortDecorator, because the indices are sorted
WITHOUT_CLASSIFICATION	// this.addressbookModel = addressbookModel;
WITHOUT_CLASSIFICATION	// set renderers for columns
WITHOUT_CLASSIFICATION	// return new DefaultHeaderRenderer(controller.getSortDecorator(), // name);
WITHOUT_CLASSIFICATION	// the model which is decorated
WITHOUT_CLASSIFICATION	//setBorder(selectedBorder);
WITHOUT_CLASSIFICATION	//setBorder(unselectedBorder);
WITHOUT_CLASSIFICATION	// create a virtual folder with all messages holding this tag
WITHOUT_CLASSIFICATION	// check if its a contact component
WITHOUT_CLASSIFICATION	// update folder selection
WITHOUT_CLASSIFICATION	// XmlElement.printNode(item.getRoot(), "");
WITHOUT_CLASSIFICATION	// now instanciate the folder classes
WITHOUT_CLASSIFICATION	//		 register as focus owner
WITHOUT_CLASSIFICATION	// private TreeView treeViewer;
WITHOUT_CLASSIFICATION	// public SelectFolderTree tree;
WITHOUT_CLASSIFICATION	/*		 * FolderTreeNode node = tree.getSelectedNode(); FolderItem item =		 * node.getFolderItem();		 */
WITHOUT_CLASSIFICATION	// return item.getUid();
WITHOUT_CLASSIFICATION	// init addressbook plugin handlers //		PluginManager.getInstance().addHandlers( //				"org/columba/addressbook/plugin/pluginhandler.xml");
WITHOUT_CLASSIFICATION	//mainInterface.addressbookInterface.
WITHOUT_CLASSIFICATION	//timer.start();
WITHOUT_CLASSIFICATION	// fall-back to formatted name
WITHOUT_CLASSIFICATION	// fall-back to email address
WITHOUT_CLASSIFICATION	// <sortstring>value</sortstring>
WITHOUT_CLASSIFICATION	// <fn>value</fn>
WITHOUT_CLASSIFICATION	// <nickname>value</nickname>
WITHOUT_CLASSIFICATION	/* multicast bit */
WITHOUT_CLASSIFICATION	// backwards compatibility
WITHOUT_CLASSIFICATION	// backwards compatibility
WITHOUT_CLASSIFICATION	// <email> // <work>value</work> // <home>value</home> // </email>
WITHOUT_CLASSIFICATION	// <n> // <family>value</family> // <given>value</given> // <prefix>value</prefix> // <suffix>value</suffix> // <additionalnames>value</additionalnames> // </n>
WITHOUT_CLASSIFICATION	// <org>value</org>
WITHOUT_CLASSIFICATION	// <url>value</url>
WITHOUT_CLASSIFICATION	// <office>value</office>
WITHOUT_CLASSIFICATION	// <department>value</department>
WITHOUT_CLASSIFICATION	// comma-separated category list // <category>value1,value2,value3</category>
WITHOUT_CLASSIFICATION	// <phone> // <business>value</business> // <home>value</home> // </phone>
WITHOUT_CLASSIFICATION	// <im> // <aol>value</aol> // <yahoo>value</yahoo> // <jabber>value</jabber> // </im>
WITHOUT_CLASSIFICATION	// <adr> // <work> // <pobox>value</pobox> // <street>value</street // .. // </work> // .. // </adr>
WITHOUT_CLASSIFICATION	// base64 encode photo byte[] to string
WITHOUT_CLASSIFICATION	// backwards compatiblity // -> its not possible anymore to create a contact model without email // address
WITHOUT_CLASSIFICATION	// comma-separated category list // <category>value1,value2,value3</category>
WITHOUT_CLASSIFICATION	// compatibility - using SORTSTRING internally
WITHOUT_CLASSIFICATION	// get first item
WITHOUT_CLASSIFICATION	//tstich: CA-41 bugfix
WITHOUT_CLASSIFICATION	// We need a place to store the color the JLabel should be returned // to after its foreground and background colors have been set // to the selection background color. // These ivars will be made protected when their names are finalized.
WITHOUT_CLASSIFICATION	// public String getAgent() { // return agent; // }
WITHOUT_CLASSIFICATION	// create <email> element, if it doesn't exist yet
WITHOUT_CLASSIFICATION	// create <type> element
WITHOUT_CLASSIFICATION	// create <type> element
WITHOUT_CLASSIFICATION	// if not specified return empty iterator
WITHOUT_CLASSIFICATION	// if not specified return empty iterator
WITHOUT_CLASSIFICATION	// if not specified return empty iterator
WITHOUT_CLASSIFICATION	// iterate over all type elements
WITHOUT_CLASSIFICATION	// create <adr>, if it doesn't exist
WITHOUT_CLASSIFICATION	// create a CDATA section for the label
WITHOUT_CLASSIFICATION	// exit immediately, nothing more to do
WITHOUT_CLASSIFICATION	// exit immediately, nothing more to do
WITHOUT_CLASSIFICATION	// create jpim contact instance
WITHOUT_CLASSIFICATION	// set sort-string/displayname
WITHOUT_CLASSIFICATION	// set first name
WITHOUT_CLASSIFICATION	// set formatted name
WITHOUT_CLASSIFICATION	// set last name
WITHOUT_CLASSIFICATION	// add all additional names (middle names)
WITHOUT_CLASSIFICATION	// add all nicknames
WITHOUT_CLASSIFICATION	// add all prefixes
WITHOUT_CLASSIFICATION	// set website/homepage
WITHOUT_CLASSIFICATION	// add email addresses
WITHOUT_CLASSIFICATION	// add all addresses
WITHOUT_CLASSIFICATION	// set name of organization
WITHOUT_CLASSIFICATION	// save contact to outputstream
WITHOUT_CLASSIFICATION	// sort-string
WITHOUT_CLASSIFICATION	// list of nick names
WITHOUT_CLASSIFICATION	// list of additional names (middle names)
WITHOUT_CLASSIFICATION	// list of suffices
WITHOUT_CLASSIFICATION	// formatted name
WITHOUT_CLASSIFICATION	// birthday
WITHOUT_CLASSIFICATION	// url to website/homepage
WITHOUT_CLASSIFICATION	// address list
WITHOUT_CLASSIFICATION	// not that the editor ui only supports max of 3 addresses to edit
WITHOUT_CLASSIFICATION	// name of organisation
WITHOUT_CLASSIFICATION	// dummy address
WITHOUT_CLASSIFICATION	// 2 columns
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	/*	 * @see TestCase#setUp()	 */
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// DocumentListener Methods
WITHOUT_CLASSIFICATION	// select first item
WITHOUT_CLASSIFICATION	// delete folder
WITHOUT_CLASSIFICATION	// update folder selection
WITHOUT_CLASSIFICATION	//setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
WITHOUT_CLASSIFICATION	//scrollPane.setBorder(null);
WITHOUT_CLASSIFICATION	// create list of contact folders
WITHOUT_CLASSIFICATION	// remember search result
WITHOUT_CLASSIFICATION	// doesn't support search inside yet
WITHOUT_CLASSIFICATION	/*	 * Class under test for HeaderItemList getHeaderItemList()	 */
WITHOUT_CLASSIFICATION	/*	 * Class under test for Object add(Contact)	 */
WITHOUT_CLASSIFICATION	//		 create config-folder
WITHOUT_CLASSIFICATION	//new Config(file);
WITHOUT_CLASSIFICATION	// now load all available plugins
WITHOUT_CLASSIFICATION	// delete all mails in folder
WITHOUT_CLASSIFICATION	/*	 * Class under test for void remove(Object)	 */
WITHOUT_CLASSIFICATION	// Condition
WITHOUT_CLASSIFICATION	// passive: if not initialized do it now
WITHOUT_CLASSIFICATION	//	public Object getObject(ILocator locator); //	public IStructureValue getChild(ILocator locator);
WITHOUT_CLASSIFICATION	//	String getProperty(String name); //	void setProperty(String name, String value); //	 //	Hashtable getProperties();
WITHOUT_CLASSIFICATION	// if path startsWith "/" -> skip
WITHOUT_CLASSIFICATION	// print attributes
WITHOUT_CLASSIFICATION	//Hashcode value should be buffered.
WITHOUT_CLASSIFICATION	// END public class XmlElement
WITHOUT_CLASSIFICATION	// needed for hibernate!
WITHOUT_CLASSIFICATION	// passive: if not initialized do it now
WITHOUT_CLASSIFICATION	// still not ready, exit!
WITHOUT_CLASSIFICATION	// still not ready, exit!
WITHOUT_CLASSIFICATION	// transaction is needed for the underlying jpa architecture
WITHOUT_CLASSIFICATION	// transaction is needed for the underlying jpa architecture
WITHOUT_CLASSIFICATION	// transaction is needed for the underlying jpa architecture
WITHOUT_CLASSIFICATION	// disable logging for the startup
WITHOUT_CLASSIFICATION	// set console handler to OFF
WITHOUT_CLASSIFICATION	//ShutdownManager.getInstance().register(this);
WITHOUT_CLASSIFICATION	// start HSQLDB
WITHOUT_CLASSIFICATION	// do not start a second time!
WITHOUT_CLASSIFICATION	// start JPA entity manager
WITHOUT_CLASSIFICATION	// restore log level
WITHOUT_CLASSIFICATION	// still not ready, exit!
WITHOUT_CLASSIFICATION	// creates a shallow // copy of this // object
WITHOUT_CLASSIFICATION	// passive: if not initialized do it now
WITHOUT_CLASSIFICATION	// more than one item, very strange! duplicate entries! remove // all
WITHOUT_CLASSIFICATION	// refers to the // entry in // persistence.xml
WITHOUT_CLASSIFICATION	// no item exists in table // -> nothing todo
WITHOUT_CLASSIFICATION	// shutdown hsql
WITHOUT_CLASSIFICATION	// if the database is not started, don't do it
WITHOUT_CLASSIFICATION	// shutdown entity manager
WITHOUT_CLASSIFICATION	// one second (=1000 ms)
WITHOUT_CLASSIFICATION	// sleep 5 minutes
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */
WITHOUT_CLASSIFICATION	// test if a task is already running
WITHOUT_CLASSIFICATION	// no java task running -> start background tasks
WITHOUT_CLASSIFICATION	// grab a part of aInput which does not include aOldPattern
WITHOUT_CLASSIFICATION	// add aNewPattern to take place of aOldPattern
WITHOUT_CLASSIFICATION	// the final chunk will go to the end of aInput
WITHOUT_CLASSIFICATION	// Check for no property
WITHOUT_CLASSIFICATION	// return true for new files
WITHOUT_CLASSIFICATION	// a < b
WITHOUT_CLASSIFICATION	// a < b
WITHOUT_CLASSIFICATION	// a == b
WITHOUT_CLASSIFICATION	// a == b
WITHOUT_CLASSIFICATION	// a > b
WITHOUT_CLASSIFICATION	// a > b
WITHOUT_CLASSIFICATION	// Platform identifiers: Windows, Linux, Mac OS, ...
WITHOUT_CLASSIFICATION	// Single OS identifiers: Window 95, Window 98, ...
WITHOUT_CLASSIFICATION	/* version 4 */
WITHOUT_CLASSIFICATION	/* IETF variant */
WITHOUT_CLASSIFICATION	// startIdx and idxOld delimit various chunks of aInput; these // chunks always end where aOldPattern begins
WITHOUT_CLASSIFICATION	// reset the startIdx to just after the current match, to see // if there are any further matches
WITHOUT_CLASSIFICATION	// threadVar;
WITHOUT_CLASSIFICATION	// following java guidelines I'm setting this to low priority // -> this should make the gui more responsive, because the // -> background worker has low priority whereas the gui worker // -> has normal priority
WITHOUT_CLASSIFICATION	// Is it already locked from locker ?
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.core.taskmanager.ITaskManager#register(org.columba.core.command.Worker)         */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.core.taskmanager.ITaskManager#unregister(org.columba.core.util.SwingWorker.ThreadVar)         */
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// see getValue(), setValue()
WITHOUT_CLASSIFICATION	// propagate
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// Check if locked
WITHOUT_CLASSIFICATION	// Initialize the cipher for encryption
WITHOUT_CLASSIFICATION	// Initialize the cipher for encryption
WITHOUT_CLASSIFICATION	// Encrypt the cleartext
WITHOUT_CLASSIFICATION	// Encrypt the cleartext
WITHOUT_CLASSIFICATION	// Return a String representation of the cipher text
WITHOUT_CLASSIFICATION	// Our cleartext as bytes
WITHOUT_CLASSIFICATION	// Wake up the others!
WITHOUT_CLASSIFICATION	//public int type;
WITHOUT_CLASSIFICATION	// gota go now
WITHOUT_CLASSIFICATION	// else keep waiting
WITHOUT_CLASSIFICATION	// exception handler should handle all error handling stuff
WITHOUT_CLASSIFICATION	// Must create a ExceptionProcessor
WITHOUT_CLASSIFICATION	// init event
WITHOUT_CLASSIFICATION	// "new value" is used to pass on the delay
WITHOUT_CLASSIFICATION	// fire event
WITHOUT_CLASSIFICATION	// Create the cipher //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Our cleartext as bytes //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Create the cipher //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Return a String representation of the cipher text //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// set display text stored here to an empty string (~ cleared) //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Remove bogus Operation
WITHOUT_CLASSIFICATION	// Create the workers
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.core.taskmanager.ITaskManager#addTaskManagerListener(org.columba.core.taskmanager.TaskManagerListener)         */
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// notify that a new worker is available
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$
WITHOUT_CLASSIFICATION	// make a deep copy
WITHOUT_CLASSIFICATION	// Sort in with respect to priority and synchronize: // Commands with higher priority will be processed // before commands with lower priority. // If there is a command that is of type synchronize // don't put this command in front.
WITHOUT_CLASSIFICATION	// retrieve plugin manager instance
WITHOUT_CLASSIFICATION	// We have to process this command first // -> break here!
WITHOUT_CLASSIFICATION	/*		 * XmlElement child = getRoot().getElement(pathToElement);		 * 		 * return child;		 */
WITHOUT_CLASSIFICATION	// nothing to do yet
WITHOUT_CLASSIFICATION	// nothing to do yet
WITHOUT_CLASSIFICATION	// nothing to do yet
WITHOUT_CLASSIFICATION	// load config-file from disk
WITHOUT_CLASSIFICATION	// fall back to default path
WITHOUT_CLASSIFICATION	// final String key = (String) keys.next();
WITHOUT_CLASSIFICATION	// this is no integer value
WITHOUT_CLASSIFICATION	// Do nothing if we are hovering over the root node
WITHOUT_CLASSIFICATION	// initialize default view options
WITHOUT_CLASSIFICATION	// tstich: Default values are set in the loadPostions() method
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.api.command.IStatusObservable#getCancelled()         */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.core.config.IConfig#getConfigDirectory()	 */
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// // views.xml // // <view header="100" header_enabled="true" id="ThreePaneMail" // infopanel="true" main="100"> // <window maximized="true" height="721" width="1034" y="26" x="0"></window> // <toolbars infopanel="true" main="true"></toolbars> // <splitpanes header="200" header_enabled="true" main="283" // attachment="100"></splitpanes> // </view>
WITHOUT_CLASSIFICATION	//  // options.xml: // //<gui> // <theme name="Plastic" theme="Experience Blue"></theme> // <fonts overwrite="false"> //  <text name="Default" size="12"></text> //  <main name="Default" size="12"></main> // </fonts> // <toolbar text_position="false" enable_icon="true" enable_text="true"></toolbar> //</gui>
WITHOUT_CLASSIFICATION	// callback
WITHOUT_CLASSIFICATION	// if everything worked out all right, we copy the tmp file to the destination file
WITHOUT_CLASSIFICATION	// create initial version from default configuration file
WITHOUT_CLASSIFICATION	// return plain document
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// load xml configuration from file
WITHOUT_CLASSIFICATION	// notify all listeners that search is finished
WITHOUT_CLASSIFICATION	// check if default value exists
WITHOUT_CLASSIFICATION	// remove old
WITHOUT_CLASSIFICATION	// contains already a single element
WITHOUT_CLASSIFICATION	// create empty list
WITHOUT_CLASSIFICATION	// create empty structure value
WITHOUT_CLASSIFICATION	// initialize context
WITHOUT_CLASSIFICATION	// identity definition
WITHOUT_CLASSIFICATION	// MULTIPLICITY.ZERO_TO_ONE is default
WITHOUT_CLASSIFICATION	// date time timezone definition
WITHOUT_CLASSIFICATION	// date range (start time, end time) definition
WITHOUT_CLASSIFICATION	// document definition
WITHOUT_CLASSIFICATION	// notify all listeners
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// register at shutdown manager // -> this will save all configuration data, when closing Columba
WITHOUT_CLASSIFICATION	// icons // putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("mail-read.png")); // putValue(LARGE_ICON, ImageLoader.getImageIcon("mail-read.png"));
WITHOUT_CLASSIFICATION	// notify all listeners that have a new search result // ensure this is called in the EDT
WITHOUT_CLASSIFICATION	// <context> // <core> // <identity> // </identity> // <datetime> // </datetime> // </core> // </context>
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// locale definition
WITHOUT_CLASSIFICATION	// list of attachments
WITHOUT_CLASSIFICATION	// single attachment
WITHOUT_CLASSIFICATION	// message
WITHOUT_CLASSIFICATION	// single sender - re-use identity type
WITHOUT_CLASSIFICATION	// re-use identity type for recipient list
WITHOUT_CLASSIFICATION	// message body
WITHOUT_CLASSIFICATION	// message contains list of attachments
WITHOUT_CLASSIFICATION	// replace "%1" parameter with file argument ...
WITHOUT_CLASSIFICATION	// ... or, add the file in case there was no "%1" used
WITHOUT_CLASSIFICATION	// Wait for external editor to quit
WITHOUT_CLASSIFICATION	// Try the built-in mime table
WITHOUT_CLASSIFICATION	// Try the built-in mime table
WITHOUT_CLASSIFICATION	// check if service is registered
WITHOUT_CLASSIFICATION	// retrieve service instance
WITHOUT_CLASSIFICATION	// load instance of service
WITHOUT_CLASSIFICATION	/*		 * int index = list.size() - 1;		 * 		 * remove(index);		 */
WITHOUT_CLASSIFICATION	// Condition
WITHOUT_CLASSIFICATION	/*	 * public FilterCriteria getCriteria(int index) { return (FilterCriteria)	 * list.get(index); }	 */
WITHOUT_CLASSIFICATION	// if win32 platform, prepend cmd.exe // necessary for system environment variables usage
WITHOUT_CLASSIFICATION	// check if there's already an instanciation available // we can reuse here
WITHOUT_CLASSIFICATION	/*		 * action.addAttribute( "class",		 * "org.columba.mail.filter.action.MarkMessageAsReadFilterAction");		 */
WITHOUT_CLASSIFICATION	// example configuration (tree.xml) // // <actionlist> //  <action uid="122" type="Move Message"></action> // </actionlist>
WITHOUT_CLASSIFICATION	// folder uid doesn't exist //  -> create default value
WITHOUT_CLASSIFICATION	// XmlElement.printNode(getRoot(),"");
WITHOUT_CLASSIFICATION	// condition: match all (AND) = 0, match any (OR) = 1 // private AdapterNode conditionNode;
WITHOUT_CLASSIFICATION	/*		 * setTextValue(conditionNode, s);		 */
WITHOUT_CLASSIFICATION	/*		 * //AdapterNode filterListNode = getFilterListNode();		 * 		 * AdapterNode node =		 * MailInterface.config.getFolderConfig().addEmptyFilterNode(		 * getFolder().getNode() ); Filter filter = new Filter( node );		 * 		 * add( filter );		 * 		 * return filter;		 */
WITHOUT_CLASSIFICATION	// list.add(f);
WITHOUT_CLASSIFICATION	// if folder creation failed // -> don't update tree ui
WITHOUT_CLASSIFICATION	// sorting is disabled
WITHOUT_CLASSIFICATION	//action.addAttribute("class", "org.columba.mail.filter.action.MarkMessageAsReadFilterAction");
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	// Set text, possibly with a mnemonic if defined using &
WITHOUT_CLASSIFICATION	// set display text - possible with a mnemonic defined using &
WITHOUT_CLASSIFICATION	//repaint(x, y, width, height);
WITHOUT_CLASSIFICATION	//setFont( UIManager.getFont("TextField.font") );
WITHOUT_CLASSIFICATION	//setIcon(ImageLoader.getImageIcon("stock_down-16.png"));
WITHOUT_CLASSIFICATION	//add( panel, BorderLayout.CENTER );
WITHOUT_CLASSIFICATION	//add( panel, BorderLayout.CENTER );
WITHOUT_CLASSIFICATION	// g.drawRect(0, 0, w - 3, h - 3);
WITHOUT_CLASSIFICATION	// left
WITHOUT_CLASSIFICATION	// top
WITHOUT_CLASSIFICATION	// right
WITHOUT_CLASSIFICATION	// right
WITHOUT_CLASSIFICATION	// bottom
WITHOUT_CLASSIFICATION	// bottom
WITHOUT_CLASSIFICATION	// //		 w+=1; //			h+=1; //		 g.setColor(edge); //		 // bottom //		 g.drawLine(x+2, h, x+w, h ); //		 // right //		 g.drawLine(x+w, y+ovalHeight+2, x+w , y+h);
WITHOUT_CLASSIFICATION	// Java 1.5 enumeration
WITHOUT_CLASSIFICATION	// paint original first
WITHOUT_CLASSIFICATION	// augment x.
WITHOUT_CLASSIFICATION	// augment y.
WITHOUT_CLASSIFICATION	// set display text - possibly with a mnemonic defined using &
WITHOUT_CLASSIFICATION	/* CEDRIC: not used right now. */
WITHOUT_CLASSIFICATION	// private ActionSupport asupport;
WITHOUT_CLASSIFICATION	// private JLabel l_date, l_year, l_month;
WITHOUT_CLASSIFICATION	// private JLabel l_date, l_year, l_month;
WITHOUT_CLASSIFICATION	// private JButton b_lyear, b_ryear, b_lmonth, b_rmonth;
WITHOUT_CLASSIFICATION	// private JButton b_lyear, b_ryear, b_lmonth, b_rmonth;
WITHOUT_CLASSIFICATION	// asupport = new ActionSupport(this);
WITHOUT_CLASSIFICATION	// Let's at least make a half-assed attempt at conforming to the Metal // PLAF colors.
WITHOUT_CLASSIFICATION	// top.setBorder( BorderFactory.createEtchedBorder() );
WITHOUT_CLASSIFICATION	// b_lmonth.setFocusPainted(false); // b_lmonth.setOpaque(false); // b_lmonth.addActionListener(this);
WITHOUT_CLASSIFICATION	// p1.add(l_month);
WITHOUT_CLASSIFICATION	/*		 * Font f = getFont(); setFont(new Font(f.getName(), Font.BOLD,		 * f.getSize()));		 */
WITHOUT_CLASSIFICATION	/* Copy the relevant portions of a date. */
WITHOUT_CLASSIFICATION	// asupport.addActionListener(listener);
WITHOUT_CLASSIFICATION	// asupport.removeActionListener(listener);
WITHOUT_CLASSIFICATION	/*		 * asupport.fireActionEvent(((o == b_lmonth) || (o == b_rmonth)) ?		 * MONTH_CHANGE_CMD : YEAR_CHANGE_CMD);		 */
WITHOUT_CLASSIFICATION	/*	 * Determine what day of week the first day of the month falls on. It's too	 * bad we have to resort to this hack; the Java API provides no means of	 * doing this any other way.	 */
WITHOUT_CLASSIFICATION	/*	 * This method is called whenever the month or year changes. It's job is to	 * repaint the labels and determine whether any selection range limits have	 * been reached.	 */
WITHOUT_CLASSIFICATION	// l_year.setText(String.valueOf(selectedDate.get(Calendar.YEAR)));
WITHOUT_CLASSIFICATION	// b_lyear.setEnabled(true); // b_ryear.setEnabled(true);
WITHOUT_CLASSIFICATION	// Disable anything that would cause the date to go out of range. This // logic is extremely sensitive so be very careful when making changes. // Every condition test in here is necessary, so don't remove anything.
WITHOUT_CLASSIFICATION	// b_lyear.setEnabled(y > y0);
WITHOUT_CLASSIFICATION	// allow out-of-range selection // selectedDate.set(Calendar.DATE, selectedDay);
WITHOUT_CLASSIFICATION	// allow out-of-range selection // selectedDate.set(Calendar.DATE, selectedDay);
WITHOUT_CLASSIFICATION	// b_ryear.setEnabled(y < y1);
WITHOUT_CLASSIFICATION	// repaint the calendar pane
WITHOUT_CLASSIFICATION	// figure out how many blank spaces there are before first day of // month, // and calculate coordinates of first drawn cell
WITHOUT_CLASSIFICATION	// paint the border
WITHOUT_CLASSIFICATION	// set the clip rect to exclude the border & insets
WITHOUT_CLASSIFICATION	// draw the weekday headings
WITHOUT_CLASSIFICATION	// find out how many days there are in the current month
WITHOUT_CLASSIFICATION	// draw all the day cells
WITHOUT_CLASSIFICATION	// draw the outline of the cell // gc.setColor(MetalLookAndFeel.getPrimaryControlShadow());
WITHOUT_CLASSIFICATION	// set the pen color depending on weekday or weekend, and paint // the // day number in the cell
WITHOUT_CLASSIFICATION	// advance to the next cell position
WITHOUT_CLASSIFICATION	/* Get the preferred size of the component. */
WITHOUT_CLASSIFICATION	/* Get the minimum size of the component. */
WITHOUT_CLASSIFICATION	/* Figure out which day the mouse click is on. */
WITHOUT_CLASSIFICATION	// check if totally out of range.
WITHOUT_CLASSIFICATION	/* mouse listener */
WITHOUT_CLASSIFICATION	// asupport.fireActionEvent(DATE_CHANGE_CMD);
WITHOUT_CLASSIFICATION	// border
WITHOUT_CLASSIFICATION	// Set text, possibly with a mnemonic if defined using &
WITHOUT_CLASSIFICATION	// set display text - possible with a mnemonic defined using &
WITHOUT_CLASSIFICATION	// setText(treeNode.getName()); // setIcon(getFolderIcon(treeNode, expanded));
WITHOUT_CLASSIFICATION	//setBackground(new Color(236, 233, 216));
WITHOUT_CLASSIFICATION	// don't override update(), get the default clear
WITHOUT_CLASSIFICATION	// Enable JavaHelp support if topic id is defined
WITHOUT_CLASSIFICATION	// apply transparent icon
WITHOUT_CLASSIFICATION	/*setIconTextGap(5);setVerticalAlignment(JLabel.CENTER);*/
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	// search for mnemonic
WITHOUT_CLASSIFICATION	// mnemonic found // ...and not at the end of the string (which doesn't make sence)
WITHOUT_CLASSIFICATION	// if mnemonic is first character of this string
WITHOUT_CLASSIFICATION	// if mnemonic is first character of this string
WITHOUT_CLASSIFICATION	// set display text
WITHOUT_CLASSIFICATION	// set display text
WITHOUT_CLASSIFICATION	// set mnemonic
WITHOUT_CLASSIFICATION	// set mnemonic
WITHOUT_CLASSIFICATION	// no mnemonic found - just set the text on the menu item
WITHOUT_CLASSIFICATION	// no mnemonic found - just set the text on the menu item
WITHOUT_CLASSIFICATION	//RGB values discovered using ZoomIn
WITHOUT_CLASSIFICATION	//Dimensions
WITHOUT_CLASSIFICATION	//Layout a row and column "grid"
WITHOUT_CLASSIFICATION	//Draw the white squares first, so the gray squares will overlap
WITHOUT_CLASSIFICATION	//draw the gray squares overlapping the white background squares
WITHOUT_CLASSIFICATION	// initialization
WITHOUT_CLASSIFICATION	// controller
WITHOUT_CLASSIFICATION	// draw horizontal lines
WITHOUT_CLASSIFICATION	// draw vertical lines
WITHOUT_CLASSIFICATION	// Add the default colors items.
WITHOUT_CLASSIFICATION	// The length is 1 if no item is selected
WITHOUT_CLASSIFICATION	//$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Instance Creation *****************************************************
WITHOUT_CLASSIFICATION	// Accessing Properties **************************************************
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	// Constructor...	
WITHOUT_CLASSIFICATION	//cache the old color //set the white color //draw the square //reset the old color
WITHOUT_CLASSIFICATION	//insets.top    += spacing; //insets.bottom += spacing;
WITHOUT_CLASSIFICATION	//if we stopped at line break, increase array index pointer
WITHOUT_CLASSIFICATION	//increase minimum height by line height and line spacing
WITHOUT_CLASSIFICATION	//add the component's border insets to our minimum dimension
WITHOUT_CLASSIFICATION	//check for line breaks
WITHOUT_CLASSIFICATION	//put them into the array
WITHOUT_CLASSIFICATION	//draw line
WITHOUT_CLASSIFICATION	//String userVisibleName = pluginHandler.getUserVisibleName(id);
WITHOUT_CLASSIFICATION	// button panel
WITHOUT_CLASSIFICATION	// button panel
WITHOUT_CLASSIFICATION	// look and feel
WITHOUT_CLASSIFICATION	// fonts
WITHOUT_CLASSIFICATION	// fonts
WITHOUT_CLASSIFICATION	// fonts
WITHOUT_CLASSIFICATION	// toolbar
WITHOUT_CLASSIFICATION	// language
WITHOUT_CLASSIFICATION	// language
WITHOUT_CLASSIFICATION	// HTTP proxy
WITHOUT_CLASSIFICATION	// ID of configuration plugin of this theme plugin
WITHOUT_CLASSIFICATION	// get theme plugin-handler
WITHOUT_CLASSIFICATION	// get config plugin-handler
WITHOUT_CLASSIFICATION	// enable/disable button, too
WITHOUT_CLASSIFICATION	// select Locale in ComboBox
WITHOUT_CLASSIFICATION	// get language configuration
WITHOUT_CLASSIFICATION	// set language config based on selected item
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// 3 columns
WITHOUT_CLASSIFICATION	// skip the first column
WITHOUT_CLASSIFICATION	// Add components to the panel:
WITHOUT_CLASSIFICATION	// init bottom panel with OK, Cancel buttons
WITHOUT_CLASSIFICATION	// switch to new theme
WITHOUT_CLASSIFICATION	// notify frame to update
WITHOUT_CLASSIFICATION	// set fonts
WITHOUT_CLASSIFICATION	// collapsible.getContentPane().setBackground(Color.WHITE);
WITHOUT_CLASSIFICATION	// use the collapse/expand icons from the JTree UI
WITHOUT_CLASSIFICATION	// link.setFont(link.getFont().deriveFont(Font.BOLD));
WITHOUT_CLASSIFICATION	// link.setBackground(titleBackground);
WITHOUT_CLASSIFICATION	//SystemColor.controlLtHighlight,
WITHOUT_CLASSIFICATION	// if the collapsible is collapsed, we do not want its border to be // painted.
WITHOUT_CLASSIFICATION	//			g.setColor(borderColor2); //			g.drawLine(x, y + height - 1, x + width, y + height - 1);
WITHOUT_CLASSIFICATION	/*         * bottomPanel.setBorder(new WizardTopBorder()); Border border =         * bottomPanel.getBorder(); Border margin =         * BorderFactory.createEmptyBorder(15, 10, 10, 10);         * bottomPanel.setBorder(new CompoundBorder(border, margin));         */
WITHOUT_CLASSIFICATION	// centerPanel.add(label, cc.xywh(3, 1, 1, 1));
WITHOUT_CLASSIFICATION	// buttonPanel.add(reportBugButton);
WITHOUT_CLASSIFICATION	/*		 * FormLayout layout = new FormLayout("default", "default, default");		 * IContainer c = getContentPane(); c.setLayout(layout);		 * 		 * CellConstraints cc = new CellConstraints();		 * c.add(createCenterPanel(detailsButton.isSelected()), cc.xy(1, 1));		 * c.add(bottomPanel, cc.xy(1, 2));		 */
WITHOUT_CLASSIFICATION	// Spacings
WITHOUT_CLASSIFICATION	// First Line with Labels
WITHOUT_CLASSIFICATION	// Second Line with Names
WITHOUT_CLASSIFICATION	// Third Line with Lists
WITHOUT_CLASSIFICATION	// 4. Line with PreviewLabel
WITHOUT_CLASSIFICATION	// 5. Line with Preview
WITHOUT_CLASSIFICATION	// 6. Line with Buttons
WITHOUT_CLASSIFICATION	//String envfonts[] = gEnv.getAvailableFontFamilyNames();
WITHOUT_CLASSIFICATION	//fill sizes string array with numbers from 7 to 18
WITHOUT_CLASSIFICATION	// this.contentPane = comp;
WITHOUT_CLASSIFICATION	// label.setFont(UIManager.getFont("Label.font").deriveFont(Font.PLAIN));
WITHOUT_CLASSIFICATION	// builder.addFixedNarrow((JButton) rightButtonVector.get(i));
WITHOUT_CLASSIFICATION	// ButtonBarBuilder builder2 = new ButtonBarBuilder(buttonWestPanel);
WITHOUT_CLASSIFICATION	// builder2.addGlue();
WITHOUT_CLASSIFICATION	// builder2.addStrut(Sizes.pixel(4));
WITHOUT_CLASSIFICATION	// ButtonBarBuilder builder = new ButtonBarBuilder(buttonEastPanel); // // builder.addGlue();
WITHOUT_CLASSIFICATION	// JPanel p = new JPanel(); // p.setLayout(new FlowLayout());
WITHOUT_CLASSIFICATION	// g2.setColor(fillColor); // g2.fillRect(0,0,w,h);
WITHOUT_CLASSIFICATION	/* If this is a unix-based system, check the 2 best-known areas for the * aspell binary. */
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	//setMargin(new Insets(0,0,0,0));
WITHOUT_CLASSIFICATION	// this property is ignored under java 1.5.
WITHOUT_CLASSIFICATION	// menu.setVisible(true);
WITHOUT_CLASSIFICATION	// DockingManager.(DockableView.this);
WITHOUT_CLASSIFICATION	// process exception -> show error dialog to user
WITHOUT_CLASSIFICATION	// Print the stacktrace to our log file.
WITHOUT_CLASSIFICATION	//does not happen
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	//does not happen
WITHOUT_CLASSIFICATION	// show error dialog, with exception message and stack-trace // -> dialog also provides a button for the user to easily // -> report a bug
WITHOUT_CLASSIFICATION	// result.append(", ");
WITHOUT_CLASSIFICATION	/* RIYAD: The Prefs API cannot be used to read the Window's registry, * it is coded to use the registry (if available) as a backing store * on in the SOFTWARE/JavaSoft/Prefs registry keys for HKEY_CURRENT_USER * and HKEY_LOCAL_MACHINE paths. I have seen a few java apps that use * the Windows registry and they all required a native lib to do it. */
WITHOUT_CLASSIFICATION	/* RIYAD: The Prefs API cannot be used to read the Window's registry, * it is coded to use the registry (if available) as a backing store * on in the SOFTWARE/JavaSoft/Prefs registry keys for HKEY_CURRENT_USER * and HKEY_LOCAL_MACHINE paths. I have seen a few java apps that use * the Windows registry and they all required a native lib to do it. */
WITHOUT_CLASSIFICATION	/* If this is windows, check the default installation location for the * aspell.exe binary. */
WITHOUT_CLASSIFICATION	/* Couldn't find anything, so return null and let the wizard ask the * user. */
WITHOUT_CLASSIFICATION	/* Couldn't find anything, so return null and let the wizard ask the * user. */
WITHOUT_CLASSIFICATION	// check configuration
WITHOUT_CLASSIFICATION	// create xml node
WITHOUT_CLASSIFICATION	// start the configuration wizard
WITHOUT_CLASSIFICATION	// ok, now the tool is initialized correctly
WITHOUT_CLASSIFICATION	// get location of executable
WITHOUT_CLASSIFICATION	// get plugin ID
WITHOUT_CLASSIFICATION	// get configuration
WITHOUT_CLASSIFICATION	// set configuration of this plugin
WITHOUT_CLASSIFICATION	// exit for-loop
WITHOUT_CLASSIFICATION	/* GPG for windows is an executable-only download, fortunately there is * a windows registry file included in the download and has this as the * default installation path in it. While users will probably install GPG * into many other places, this is atleast a best-guess start. */
WITHOUT_CLASSIFICATION	/* If this is a unix-based system, check the 2 best-known areas for the * gpg binary. */
WITHOUT_CLASSIFICATION	/* If this is windows, check the default installation location for the * gpg.exe binary. */
WITHOUT_CLASSIFICATION	// init component before querying for sourceFile
WITHOUT_CLASSIFICATION	// get plugin handler for handling frames
WITHOUT_CLASSIFICATION	// store every open frame in our temporary list
WITHOUT_CLASSIFICATION	// close every open frame
WITHOUT_CLASSIFICATION	// if not we haven't actually closed a frame, leave viewList as is
WITHOUT_CLASSIFICATION	// load all frames from configuration file
WITHOUT_CLASSIFICATION	// get element from view list
WITHOUT_CLASSIFICATION	// should not occur
WITHOUT_CLASSIFICATION	// fall-back
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// used to temporarily store the values while the original // viewList gets modified by the close method
WITHOUT_CLASSIFICATION	// we cannot use an iterator here because the close method // manipulates the list
WITHOUT_CLASSIFICATION	// the close method manipulates the viewList so we have to // remove the existing element and fill in our temporarily // stored ones
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// found cached instance // -> re-use this instance and remove it from cache
WITHOUT_CLASSIFICATION	// create new instance // -> get frame controller using the plugin handler found above
WITHOUT_CLASSIFICATION	// look for default view settings (if not found, null is returned)
WITHOUT_CLASSIFICATION	// look for default view settings (if not found, null is returned)
WITHOUT_CLASSIFICATION	// Create a frame controller for this view // view = null => defaults specified by frame controller is used
WITHOUT_CLASSIFICATION	// cancel, if we show already correct frame mediator
WITHOUT_CLASSIFICATION	// Create a frame controller for this view
WITHOUT_CLASSIFICATION	// save old framemediator in cache (use containers's old id)
WITHOUT_CLASSIFICATION	// If defaultViews doesn't exist, create it (backward compatibility)
WITHOUT_CLASSIFICATION	// search through defaultViews to get settings for given id
WITHOUT_CLASSIFICATION	// nothing to save
WITHOUT_CLASSIFICATION	// removed previous default values
WITHOUT_CLASSIFICATION	// store current view settings
WITHOUT_CLASSIFICATION	// Check if the frame controller has been registered, else do nothing
WITHOUT_CLASSIFICATION	// save in cache
WITHOUT_CLASSIFICATION	// this is the last frame so store its data in the viewList
WITHOUT_CLASSIFICATION	// shutdown Columba if no frame exists anymore
WITHOUT_CLASSIFICATION	//Can we use the Java way to maximize the window
WITHOUT_CLASSIFICATION	//We can use the Java way to maximize the window
WITHOUT_CLASSIFICATION	// clear the tooltip message previously displayed in the status bar
WITHOUT_CLASSIFICATION	// Menuitems use this to display a string in the statusbar
WITHOUT_CLASSIFICATION	// init selection handler
WITHOUT_CLASSIFICATION	// overwrite this method
WITHOUT_CLASSIFICATION	// overwrite this method
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// make sure there is nothing within the root dockingport
WITHOUT_CLASSIFICATION	// overwrite this method
WITHOUT_CLASSIFICATION	// overwrite this method
WITHOUT_CLASSIFICATION	// overwrite this method
WITHOUT_CLASSIFICATION	// createMenuBar();
WITHOUT_CLASSIFICATION	// load docking settings from last user session
WITHOUT_CLASSIFICATION	// JPanel panel = (JPanel) this.getContentPane();
WITHOUT_CLASSIFICATION	// convert region enum to flexdock string
WITHOUT_CLASSIFICATION	// create new default frame controller
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// create menu
WITHOUT_CLASSIFICATION	// add statusbar
WITHOUT_CLASSIFICATION	// Set the icon and the title
WITHOUT_CLASSIFICATION	// create toolbar
WITHOUT_CLASSIFICATION	// register statusbar at global taskmanager
WITHOUT_CLASSIFICATION	// contentPane.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
WITHOUT_CLASSIFICATION	// remove from old mediator's listener list
WITHOUT_CLASSIFICATION	// contentPane.add(dockingPort, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// add window listener
WITHOUT_CLASSIFICATION	// turn on floating support
WITHOUT_CLASSIFICATION	// enable flexdock ghost preview
WITHOUT_CLASSIFICATION	// update content-pane
WITHOUT_CLASSIFICATION	// update content-pane
WITHOUT_CLASSIFICATION	// add to new mediator's listener list
WITHOUT_CLASSIFICATION	// add to new mediator's listener list
WITHOUT_CLASSIFICATION	// default core menu
WITHOUT_CLASSIFICATION	// setJMenuBar(menubar);
WITHOUT_CLASSIFICATION	// default toolbar
WITHOUT_CLASSIFICATION	// *20030831, karlpeder* Also location is restored
WITHOUT_CLASSIFICATION	// if window is maximized -> ignore the window size properties // otherwise, use window size property // but ensure that the window is completly visible on the // desktop
WITHOUT_CLASSIFICATION	// *20030831, karlpeder* Now also location is stored
WITHOUT_CLASSIFICATION	// retrieve metadata
WITHOUT_CLASSIFICATION	// add action to menu
WITHOUT_CLASSIFICATION	// remove old content pane
WITHOUT_CLASSIFICATION	// contentPane.remove(mediator.getContentPane());
WITHOUT_CLASSIFICATION	// add animated icon to right-hand side corner of menubar
WITHOUT_CLASSIFICATION	// // add new componnet
WITHOUT_CLASSIFICATION	// show/hide new toolbar
WITHOUT_CLASSIFICATION	// getContentPane().validate();
WITHOUT_CLASSIFICATION	// save window position
WITHOUT_CLASSIFICATION	// hide window
WITHOUT_CLASSIFICATION	// don't do anything
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// if window is maximized -> ignore the window size properties // otherwise, use window size property // but ensure that the window is completly visible on the // desktop
WITHOUT_CLASSIFICATION	// Some error in the client/server communication // --> fall back to default login process
WITHOUT_CLASSIFICATION	// make window visible // LOG.finest("setVisible()");
WITHOUT_CLASSIFICATION	// load window position // loadPositions(getViewItem());
WITHOUT_CLASSIFICATION	// public ColumbaMenu getMenuBar() { // return menu; // }
WITHOUT_CLASSIFICATION	// // Tell frame model that frame is closing. If this frame hasn't been // opened using FrameManager methods, FrameManager.close does nothing. //
WITHOUT_CLASSIFICATION	// getContentPane().remove(this.toolbar);
WITHOUT_CLASSIFICATION	// remove old toolbar
WITHOUT_CLASSIFICATION	//searchToolBar.addSeparator();
WITHOUT_CLASSIFICATION	//searchBar.install(searchToolBar);
WITHOUT_CLASSIFICATION	// add search bar to main toolbar, in case its a managed frame mediator
WITHOUT_CLASSIFICATION	// // getContentPane().validate();
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// register for change of the frame mediator
WITHOUT_CLASSIFICATION	// check if mediator supports docking
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// awt-event-thread
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	/*	 * Uses the FrameManager instance in MainInterface to open a new addressbook	 * window.	 */
WITHOUT_CLASSIFICATION	//putValue(SMALL_ICON, ImageLoader.getIcon("script.png"));
WITHOUT_CLASSIFICATION	//putValue(SMALL_ICON, ImageLoader.getIcon("script.png"));
WITHOUT_CLASSIFICATION	//putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("mail-new.png"));
WITHOUT_CLASSIFICATION	/*	 * Opens a new mail window using the FrameManager instance in MainInterface.	 */
WITHOUT_CLASSIFICATION	// small icon for JMenuItem
WITHOUT_CLASSIFICATION	// big icon for JToolBar
WITHOUT_CLASSIFICATION	// set JavaHelp topic ID // setTopicID("cancel");
WITHOUT_CLASSIFICATION	// short cut key
WITHOUT_CLASSIFICATION	// FocusManager.getInstance().setDeleteAction(this);
WITHOUT_CLASSIFICATION	// enable/disable search bar during search
WITHOUT_CLASSIFICATION	// We need to sort the uids in order // to have the correct association // between the new and old uid
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// short cut key
WITHOUT_CLASSIFICATION	// check if this is a management frame instance // -> if so create submenu to switch perspectives // -> otherwise, don't create submenu
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// FocusManager.getInstance().delete();
WITHOUT_CLASSIFICATION	// create menuitems for all registered frame extensions
WITHOUT_CLASSIFICATION	// create menuitems for all registered new items
WITHOUT_CLASSIFICATION	/*     * Close all open frames, which leads to exiting Columba     */
WITHOUT_CLASSIFICATION	//FrameManager.getInstance().storeViews();
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)   */
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// short cut key
WITHOUT_CLASSIFICATION	// textPane.setMargin(new Insets(5, 5, 5, 5));
WITHOUT_CLASSIFICATION	// setup base url in order to be able to display images // in html-component
WITHOUT_CLASSIFICATION	// scroll window to the beginning
WITHOUT_CLASSIFICATION	// First find the beginning element
WITHOUT_CLASSIFICATION	// in case of an error -> fall-back to Swing's built-in JTextPane
WITHOUT_CLASSIFICATION	// we insert new menus between the "Edit" and the "Utilities, Help" menu
WITHOUT_CLASSIFICATION	// extend existing menu
WITHOUT_CLASSIFICATION	// extend existing menu
WITHOUT_CLASSIFICATION	// create new menu
WITHOUT_CLASSIFICATION	// create new menu
WITHOUT_CLASSIFICATION	// make sure that we don't end up with two separators
WITHOUT_CLASSIFICATION	// make sure that we don't end up with two separators
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// view -> model
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	//	This method is called when a cell value is edited by the user.
WITHOUT_CLASSIFICATION	// Configure the component with the specified value
WITHOUT_CLASSIFICATION	// Return the configured component
WITHOUT_CLASSIFICATION	// This method is called when editing is completed. // It must return the new value to be stored in the cell.
WITHOUT_CLASSIFICATION	// enable/disable tree node
WITHOUT_CLASSIFICATION	// enable/disable tree node
WITHOUT_CLASSIFICATION	/*// enable/disable pluginString id = currentNode.getId();MainInterface.pluginManager.setEnabled(id, b.booleanValue());*/
WITHOUT_CLASSIFICATION	// modal dialog
WITHOUT_CLASSIFICATION	// model->view
WITHOUT_CLASSIFICATION	// centerPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 5));
WITHOUT_CLASSIFICATION	// setContentPane(mainPanel);
WITHOUT_CLASSIFICATION	//int iconOffset = getHorizontalAlignment() + getIcon().getIconWidth() + 1;
WITHOUT_CLASSIFICATION	// ((DefaultTreeModel) // model.getTree().getModel()).setAsksAllowsChildren(true);
WITHOUT_CLASSIFICATION	// make "version" column fixed size
WITHOUT_CLASSIFICATION	// make "enabled" column fixed size
WITHOUT_CLASSIFICATION	// plugin wasn't correctly loaded
WITHOUT_CLASSIFICATION	// this plugin doesn't define a category to which it belongs
WITHOUT_CLASSIFICATION	// unknown category found // -> just add this plugin to "Uncategorized"
WITHOUT_CLASSIFICATION	// add node
WITHOUT_CLASSIFICATION	// notify tree model
WITHOUT_CLASSIFICATION	// make new node visible
WITHOUT_CLASSIFICATION	// notify tree
WITHOUT_CLASSIFICATION	// first column is a tree
WITHOUT_CLASSIFICATION	// third column is a JCheckBox column
WITHOUT_CLASSIFICATION	// checkbox pressed
WITHOUT_CLASSIFICATION	// enabled/disabled checkbox must be editable
WITHOUT_CLASSIFICATION	// tree must be editable, otherwise you can't collapse/expand tree nodes
WITHOUT_CLASSIFICATION	// modal JDialog
WITHOUT_CLASSIFICATION	// top panel
WITHOUT_CLASSIFICATION	// topPanel.setLayout( );
WITHOUT_CLASSIFICATION	// start search
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	// topBorderPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, // 0));
WITHOUT_CLASSIFICATION	// mainPanel.add( topBorderPanel, BorderLayout.NORTH );
WITHOUT_CLASSIFICATION	// c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	// get plugin directory
WITHOUT_CLASSIFICATION	// delete plugin from disk
WITHOUT_CLASSIFICATION	// remove plugin from view
WITHOUT_CLASSIFICATION	// this is just a folder // ->disable all actions
WITHOUT_CLASSIFICATION	// if plugin has config extension point
WITHOUT_CLASSIFICATION	// use user's config folder in his/her home-folder // all plugins reside in "<config-folder>/plugins"
WITHOUT_CLASSIFICATION	// extract plugin
WITHOUT_CLASSIFICATION	// the plugin directory is "<config-folder>/plugins/<plugin-id>"
WITHOUT_CLASSIFICATION	// the path to the plugin.xml descriptor file is: // "<config-folder>/plugins/<plugin-id>/plugin.xml
WITHOUT_CLASSIFICATION	// this node is category folder // -> don't make it editable
WITHOUT_CLASSIFICATION	//protected JButton defaultButton;
WITHOUT_CLASSIFICATION	//		 top panel
WITHOUT_CLASSIFICATION	//topPanel.setLayout( );
WITHOUT_CLASSIFICATION	//topBorderPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, // 0));
WITHOUT_CLASSIFICATION	//mainPanel.add( topBorderPanel, BorderLayout.NORTH );
WITHOUT_CLASSIFICATION	//c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	// add profile to profiles.xml
WITHOUT_CLASSIFICATION	// add profile to profiles.xml
WITHOUT_CLASSIFICATION	// add to listmodel
WITHOUT_CLASSIFICATION	// add to listmodel
WITHOUT_CLASSIFICATION	// rename profile in profiles.xml
WITHOUT_CLASSIFICATION	// rename profile in profiles.xml
WITHOUT_CLASSIFICATION	// modify listmodel
WITHOUT_CLASSIFICATION	// modify listmodel
WITHOUT_CLASSIFICATION	//defaultButton.setEnabled(enabled);
WITHOUT_CLASSIFICATION	// user's can't edit default account
WITHOUT_CLASSIFICATION	// protected JButton defaultButton;
WITHOUT_CLASSIFICATION	// can't delete currently running profile
WITHOUT_CLASSIFICATION	// delete directory recursivly
WITHOUT_CLASSIFICATION	// delete all files
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// get current list selection
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.profiles.IProfileManager#getProfileForName(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.profiles.IProfileManager#getSelectedProfile()	 */
WITHOUT_CLASSIFICATION	// user's can't delete default account
WITHOUT_CLASSIFICATION	// create directory, if it doesn't already exist
WITHOUT_CLASSIFICATION	// load profiles.xml
WITHOUT_CLASSIFICATION	// prompt user for profile
WITHOUT_CLASSIFICATION	// use commandline-specified location
WITHOUT_CLASSIFICATION	// try name first
WITHOUT_CLASSIFICATION	// try directory
WITHOUT_CLASSIFICATION	// create profile
WITHOUT_CLASSIFICATION	// save to profiles.xml
WITHOUT_CLASSIFICATION	// save to profiles.xml
WITHOUT_CLASSIFICATION	// save to profiles.xml
WITHOUT_CLASSIFICATION	// use preselected profile
WITHOUT_CLASSIFICATION	// fall back to default profile
WITHOUT_CLASSIFICATION	// show profile choosing dialog
WITHOUT_CLASSIFICATION	// create profile config file
WITHOUT_CLASSIFICATION	// load profile config file
WITHOUT_CLASSIFICATION	// Is the location still existing?
WITHOUT_CLASSIFICATION	// delete all directories
WITHOUT_CLASSIFICATION	// remove profile xml-element
WITHOUT_CLASSIFICATION	// do something with link
WITHOUT_CLASSIFICATION	// setPreferredSize(list.getPreferredSize());
WITHOUT_CLASSIFICATION	// private JLabel iconLabel = new JLabel();
WITHOUT_CLASSIFICATION	// titleLabel.setBackground(UIManager.getColor("Label.background"));
WITHOUT_CLASSIFICATION	// topPanel.add(iconLabel, BorderLayout.WEST);
WITHOUT_CLASSIFICATION	// initialization
WITHOUT_CLASSIFICATION	// controller
WITHOUT_CLASSIFICATION	// link.setFont(link.getFont().deriveFont(Font.BOLD));
WITHOUT_CLASSIFICATION	// if the collapsible is collapsed, we do not want its border to be // painted.
WITHOUT_CLASSIFICATION	//			g.setColor(borderColor2); //			g.drawLine(x, y + height - 1, x + width, y + height - 1);
WITHOUT_CLASSIFICATION	// if config-folder is really empty // -> delete folder
WITHOUT_CLASSIFICATION	// Border border = BorderFactory.createCompoundBorder(new // ShadowBorder(),BorderFactory.createEmptyBorder(10, 10, 10,10)); // ((JPanel) getContentPane()).setBorder(border);
WITHOUT_CLASSIFICATION	//		Border border = new CompoundBorder(BorderFactory.createEmptyBorder(2, //				4, 2, 4), border1);
WITHOUT_CLASSIFICATION	//iconLabel.setOpaque(true);
WITHOUT_CLASSIFICATION	//top.setOpaque(true);
WITHOUT_CLASSIFICATION	//		popupMenu.setFocusable( false ); //		popupMenu.setRequestFocusEnabled(false); 
WITHOUT_CLASSIFICATION	// icon (we can't use the setIcon-method this time, as it relies on the // border being set)
WITHOUT_CLASSIFICATION	//popupMenu.getSelectionModel().clearSelection();
WITHOUT_CLASSIFICATION	//popupMenu.getSelectionModel().setSelectedIndex(0);
WITHOUT_CLASSIFICATION	//collapsible.getContentPane().setBackground(Color.WHITE);
WITHOUT_CLASSIFICATION	//link.setBackground(titleBackground);
WITHOUT_CLASSIFICATION	//iconLabel.setBackground(titleBackground);
WITHOUT_CLASSIFICATION	// private SearchResultView searchResultView;
WITHOUT_CLASSIFICATION	//private StackedBox box;
WITHOUT_CLASSIFICATION	//box = new StackedBox();
WITHOUT_CLASSIFICATION	//topPanel.setBackground(UIManager.getColor("TextField.background"));
WITHOUT_CLASSIFICATION	//createDefaultStackedBox();
WITHOUT_CLASSIFICATION	// if in debug mode, register context debugger view
WITHOUT_CLASSIFICATION	// search individual provider and individual criteria
WITHOUT_CLASSIFICATION	// start a new search -> clear all previous search results
WITHOUT_CLASSIFICATION	// search individual provider
WITHOUT_CLASSIFICATION	// start a new search -> clear all previous search results
WITHOUT_CLASSIFICATION	//box.setBackground(new Color(248, 248, 248)); //		JScrollPane pane = new JScrollPane(box); //		pane.setBorder(null);
WITHOUT_CLASSIFICATION	// search across all providers
WITHOUT_CLASSIFICATION	// search across all providers
WITHOUT_CLASSIFICATION	// search across a few specific search criteria at once
WITHOUT_CLASSIFICATION	//remove(topPanel);
WITHOUT_CLASSIFICATION	//remove(topPanel);
WITHOUT_CLASSIFICATION	//remove(topPanel);
WITHOUT_CLASSIFICATION	// first, create bucket for each provider
WITHOUT_CLASSIFICATION	// now search through all buckets
WITHOUT_CLASSIFICATION	//defaultBox.removeAll();
WITHOUT_CLASSIFICATION	// clear previous search results
WITHOUT_CLASSIFICATION	// create new stacked box
WITHOUT_CLASSIFICATION	// search all criteria in specific provider only
WITHOUT_CLASSIFICATION	// search in specific criteria
WITHOUT_CLASSIFICATION	// query with only a single criteria
WITHOUT_CLASSIFICATION	// query only a single provider
WITHOUT_CLASSIFICATION	// query all criteria of all providers
WITHOUT_CLASSIFICATION	// repaint box
WITHOUT_CLASSIFICATION	// add result panel as listener for new search results
WITHOUT_CLASSIFICATION	// create visual container for result panel
WITHOUT_CLASSIFICATION	// create visual container for result panel
WITHOUT_CLASSIFICATION	// add to search panel
WITHOUT_CLASSIFICATION	// add to search panel
WITHOUT_CLASSIFICATION	// show search docking view
WITHOUT_CLASSIFICATION	// show docking view
WITHOUT_CLASSIFICATION	// execute background search
WITHOUT_CLASSIFICATION	//addRightComponent(taskButton, 30);
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// init result view //createContextStackedBox();
WITHOUT_CLASSIFICATION	// skip if user didn't specify search term for this criteria
WITHOUT_CLASSIFICATION	// execute search
WITHOUT_CLASSIFICATION	// toolbar container
WITHOUT_CLASSIFICATION	// user pressed "Search" button
WITHOUT_CLASSIFICATION	// show search dialog
WITHOUT_CLASSIFICATION	// on "RETURN" start seach
WITHOUT_CLASSIFICATION	// to enable button again after search is finished
WITHOUT_CLASSIFICATION	// skip "Search All"
WITHOUT_CLASSIFICATION	// intersect this with the existing clip
WITHOUT_CLASSIFICATION	// restore original clip
WITHOUT_CLASSIFICATION	// make it translucent
WITHOUT_CLASSIFICATION	// paint the text and icon
WITHOUT_CLASSIFICATION	// builder.append(moreButton);
WITHOUT_CLASSIFICATION	// builder.append(searchButton);
WITHOUT_CLASSIFICATION	// searchInsideCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	// paint outer border // g2d.setPaint(OUTER);
WITHOUT_CLASSIFICATION	// paint right outside border // g2d.setPaint(p1);
WITHOUT_CLASSIFICATION	// paint right inside border // g2d.setPaint(p2);
WITHOUT_CLASSIFICATION	// builder.append(contextButton); // builder.append(providerComboBox);
WITHOUT_CLASSIFICATION	// update popup menu based on searchterm
WITHOUT_CLASSIFICATION	// create all individual search criteria for this provider
WITHOUT_CLASSIFICATION	// create search history
WITHOUT_CLASSIFICATION	// search is finished // -> enable search button again
WITHOUT_CLASSIFICATION	// do layout again
WITHOUT_CLASSIFICATION	//private JButton taskButton;
WITHOUT_CLASSIFICATION	// layoutComponents();
WITHOUT_CLASSIFICATION	// update connection state
WITHOUT_CLASSIFICATION	// init update timer
WITHOUT_CLASSIFICATION	// updateTimer.start();
WITHOUT_CLASSIFICATION	// The Stream finished before the header was completely // read!
WITHOUT_CLASSIFICATION	// update text and progress bar
WITHOUT_CLASSIFICATION	// update text and progress bar
WITHOUT_CLASSIFICATION	// remember last message
WITHOUT_CLASSIFICATION	// immediately update text and progress bar // updateGui();
WITHOUT_CLASSIFICATION	// if only one task left
WITHOUT_CLASSIFICATION	// stop update timer
WITHOUT_CLASSIFICATION	// set text
WITHOUT_CLASSIFICATION	// clear text with delay
WITHOUT_CLASSIFICATION	// update timer event
WITHOUT_CLASSIFICATION	// clear label
WITHOUT_CLASSIFICATION	// stop clear timer
WITHOUT_CLASSIFICATION	// return super.getListCellRendererComponent(arg0, arg1, arg2, arg3, // arg4);
WITHOUT_CLASSIFICATION	// disabled Kill button, because feature is not supported
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	// get configuration
WITHOUT_CLASSIFICATION	// fall-back
WITHOUT_CLASSIFICATION	// create a panel with all 4 buttons of the window // columns  // rows
WITHOUT_CLASSIFICATION	/*		 * Component strut1 = Box.createRigidArea(new Dimension(30, 6));		 * gridBagLayout.setConstraints(strut1, c); eastPanel.add(strut1);		 * 		 * gridBagLayout.setConstraints(killButton, c);		 * eastPanel.add(killButton);		 */
WITHOUT_CLASSIFICATION	// force repaint
WITHOUT_CLASSIFICATION	// fill list model with tags
WITHOUT_CLASSIFICATION	// popup menu 
WITHOUT_CLASSIFICATION	// update tag list if mode changes
WITHOUT_CLASSIFICATION	// descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(Font.ITALIC));
WITHOUT_CLASSIFICATION	// update menu if tags are changed
WITHOUT_CLASSIFICATION	// fire callback to remove all tags from selected items
WITHOUT_CLASSIFICATION	// don't want to have two separators
WITHOUT_CLASSIFICATION	// add all existing tags to the menu
WITHOUT_CLASSIFICATION	// mark tag, if the current selection is tagged with it
WITHOUT_CLASSIFICATION	// listener updates menu in case the tags where changed
WITHOUT_CLASSIFICATION	// get plugin-handler
WITHOUT_CLASSIFICATION	// if no theme available -> set "Plastic" as default
WITHOUT_CLASSIFICATION	// instanciate theme
WITHOUT_CLASSIFICATION	// apply theme
WITHOUT_CLASSIFICATION	/*		 * Gets the platform specific default theme. This is in all cases but		 * MacOS X the Plastic theme. On MacOs X we use the System L&F.		 *		 */
WITHOUT_CLASSIFICATION	// try the system aqua look and feel
WITHOUT_CLASSIFICATION	// set the Quaqua Look and Feel in the UIManager
WITHOUT_CLASSIFICATION	// set UI manager properties here that affect Quaqua
WITHOUT_CLASSIFICATION	// UIManager.setLookAndFeel(lafName);
WITHOUT_CLASSIFICATION	// setFloatable(true);
WITHOUT_CLASSIFICATION	// no text!
WITHOUT_CLASSIFICATION	// apply transparent icon
WITHOUT_CLASSIFICATION	/* (non-Javadoc)		 * @see java.lang.Thread#run()		 */
WITHOUT_CLASSIFICATION	// replace with "MyListCellRenderer" for simple one-line renderer // replace with "MyComplexListCellRenderer" for an additional description line
WITHOUT_CLASSIFICATION	// JavaHelp support
WITHOUT_CLASSIFICATION	// toolbar buttons always need an icon
WITHOUT_CLASSIFICATION	// apply transparent icon //button.setDisabledIcon(ImageUtil.createTransparentIcon(icon));
WITHOUT_CLASSIFICATION	// deprecated config-file support
WITHOUT_CLASSIFICATION	// deprecated config-file support // -> skip creation of "Cancel" button
WITHOUT_CLASSIFICATION	// tray icon not supported on Mac
WITHOUT_CLASSIFICATION	//titleLabel.setAlignmentY(0);
WITHOUT_CLASSIFICATION	//IServiceManager.getInstance().createService("");
WITHOUT_CLASSIFICATION	// found email address
WITHOUT_CLASSIFICATION	//openWithBrowser(getLink());
WITHOUT_CLASSIFICATION	// Font font = MainInterface.columbaTheme.getControlTextFont();
WITHOUT_CLASSIFICATION	// does not occur
WITHOUT_CLASSIFICATION	// 50k
WITHOUT_CLASSIFICATION	// just the animation, if there are more than zero // workers running
WITHOUT_CLASSIFICATION	// columns  // rows
WITHOUT_CLASSIFICATION	// if some action was performed
WITHOUT_CLASSIFICATION	// setup the finder
WITHOUT_CLASSIFICATION	// find action performed
WITHOUT_CLASSIFICATION	// mark found pattern
WITHOUT_CLASSIFICATION	//text.grabFocus();
WITHOUT_CLASSIFICATION	// delete marks
WITHOUT_CLASSIFICATION	//replace action performed
WITHOUT_CLASSIFICATION	// grant "all-permissions"
WITHOUT_CLASSIFICATION	// columns  // rows
WITHOUT_CLASSIFICATION	// if some action was performed
WITHOUT_CLASSIFICATION	// create a panel with a border and 3 options // columns  // rows
WITHOUT_CLASSIFICATION	// create a panel with a border and 3 options // columns  // rows
WITHOUT_CLASSIFICATION	// create a panel with all 4 buttons of the window // columns  // rows
WITHOUT_CLASSIFICATION	//text.grabFocus();
WITHOUT_CLASSIFICATION	//text.grabFocus();
WITHOUT_CLASSIFICATION	// delete marks
WITHOUT_CLASSIFICATION	// get text where to find pattern
WITHOUT_CLASSIFICATION	//replaceall action performed
WITHOUT_CLASSIFICATION	// to mark a text in the JTextPane
WITHOUT_CLASSIFICATION	// register as configuration change listener
WITHOUT_CLASSIFICATION	// patch submitted by forum user Turbo Chen // FIXED: user wasn't able to enter chinese text in Composer Subject textfield
WITHOUT_CLASSIFICATION	// we got this from headerfieldtree
WITHOUT_CLASSIFICATION	//private JTextPane textpane;
WITHOUT_CLASSIFICATION	//list[2].setHorizontalTextPosition( JLabel.LEADING );
WITHOUT_CLASSIFICATION	// get position of the pattern in the text
WITHOUT_CLASSIFICATION	// mark found pattern //text.grabFocus();
WITHOUT_CLASSIFICATION	// find pattern
WITHOUT_CLASSIFICATION	// delete marks (unselect)
WITHOUT_CLASSIFICATION	// name of helpset resource
WITHOUT_CLASSIFICATION	// could not find it!
WITHOUT_CLASSIFICATION	// maybe based on HS?
WITHOUT_CLASSIFICATION	// don't instantiate this class
WITHOUT_CLASSIFICATION	// Open the ZIP file
WITHOUT_CLASSIFICATION	// Open the ZIP file
WITHOUT_CLASSIFICATION	// Get the first entry
WITHOUT_CLASSIFICATION	// Get the first entry
WITHOUT_CLASSIFICATION	// Open the output file
WITHOUT_CLASSIFICATION	// Transfer bytes from the ZIP file to the output file
WITHOUT_CLASSIFICATION	// Close the stream
WITHOUT_CLASSIFICATION	// Close the stream
WITHOUT_CLASSIFICATION	// Close the stream
WITHOUT_CLASSIFICATION	// don't instantiate this
WITHOUT_CLASSIFICATION	// ensureDirectory
WITHOUT_CLASSIFICATION	// saveStringInFile
WITHOUT_CLASSIFICATION	// shutdown Columba
WITHOUT_CLASSIFICATION	// saveStringInFile
WITHOUT_CLASSIFICATION	// JMenu options = (JMenu) menuBar.add(new JMenu("Options")); // options.setMnemonic('O');
WITHOUT_CLASSIFICATION	// deleteDirectory
WITHOUT_CLASSIFICATION	// emptyDirectory
WITHOUT_CLASSIFICATION	// getResourceStream
WITHOUT_CLASSIFICATION	// throws // java.io.IOException
WITHOUT_CLASSIFICATION	// url = ClassLoader.getSystemResource(path);
WITHOUT_CLASSIFICATION	// getResourceURL
WITHOUT_CLASSIFICATION	// setResourceRoot
WITHOUT_CLASSIFICATION	// copyFile
WITHOUT_CLASSIFICATION	// attempt
WITHOUT_CLASSIFICATION	// copyResource
WITHOUT_CLASSIFICATION	// Byte
WITHOUT_CLASSIFICATION	// try to restore from previous session
WITHOUT_CLASSIFICATION	// Never mind
WITHOUT_CLASSIFICATION	// Try again after shutdown
WITHOUT_CLASSIFICATION	// ignore this yet
WITHOUT_CLASSIFICATION	// do nothing here
WITHOUT_CLASSIFICATION	// make sure file is deleted automatically when closing VM
WITHOUT_CLASSIFICATION	// add a new inputstream to read from
WITHOUT_CLASSIFICATION	// only if tempfile was corrupted
WITHOUT_CLASSIFICATION	// Delete the tempfile immedietly
WITHOUT_CLASSIFICATION	// init console handler
WITHOUT_CLASSIFICATION	// create logging file in "<users config-folder>/log"
WITHOUT_CLASSIFICATION	// Setup file logging
WITHOUT_CLASSIFICATION	// don't use // standard // XML // formatting
WITHOUT_CLASSIFICATION	//create new client and try to connect to server
WITHOUT_CLASSIFICATION	//no server running, start our own
WITHOUT_CLASSIFICATION	//display error message
WITHOUT_CLASSIFICATION	// prompt user for profile
WITHOUT_CLASSIFICATION	// set global class loader to null
WITHOUT_CLASSIFICATION	// force object finalization
WITHOUT_CLASSIFICATION	// run garbage collector
WITHOUT_CLASSIFICATION	// initialize global class loader
WITHOUT_CLASSIFICATION	// use global class loader to bootstrap Columba
WITHOUT_CLASSIFICATION	// do nothing here, just continue
WITHOUT_CLASSIFICATION	// create random port number within range
WITHOUT_CLASSIFICATION	// store port number in file
WITHOUT_CLASSIFICATION	// port is in use, try next
WITHOUT_CLASSIFICATION	// only accept client from local machine
WITHOUT_CLASSIFICATION	// do something with the arguments..
WITHOUT_CLASSIFICATION	// through reflection
WITHOUT_CLASSIFICATION	// memorize all URLs
WITHOUT_CLASSIFICATION	// initialize configuration with selected profile
WITHOUT_CLASSIFICATION	// if user doesn't overwrite logger settings with commandline arguments // just initialize default logging // Logging.createDefaultHandler();
WITHOUT_CLASSIFICATION	// enable debugging of repaint manager to track down swing gui // access from outside the awt-event dispatcher thread
WITHOUT_CLASSIFICATION	// use heavy-weight popups to ensure they are always on top
WITHOUT_CLASSIFICATION	// keep track of active windows (used by dialogs which don't have a // direct parent)
WITHOUT_CLASSIFICATION	// show splash screen
WITHOUT_CLASSIFICATION	// register protocol handler
WITHOUT_CLASSIFICATION	// load user-customised language pack
WITHOUT_CLASSIFICATION	// init all components
WITHOUT_CLASSIFICATION	// initialize platform-dependant services
WITHOUT_CLASSIFICATION	// init font configuration
WITHOUT_CLASSIFICATION	// set application wide font
WITHOUT_CLASSIFICATION	// handle the commandline arguments of the modules
WITHOUT_CLASSIFICATION	// now load all available plugins // PluginManager.getInstance().initExternalPlugins();
WITHOUT_CLASSIFICATION	// restore frames of last session
WITHOUT_CLASSIFICATION	/* initialize services before dismissing the splash screen */
WITHOUT_CLASSIFICATION	// register shutdown manager
WITHOUT_CLASSIFICATION	// initialize tagging
WITHOUT_CLASSIFICATION	// register for cleanup
WITHOUT_CLASSIFICATION	// hide splash screen
WITHOUT_CLASSIFICATION	//$NON-NLS-2$
WITHOUT_CLASSIFICATION	/* everything is up and running, start services */
WITHOUT_CLASSIFICATION	// // first load all extension handlers //
WITHOUT_CLASSIFICATION	// load core extension handlers
WITHOUT_CLASSIFICATION	// load addressbook extension handler
WITHOUT_CLASSIFICATION	// load mail extension handler
WITHOUT_CLASSIFICATION	// load all internal core plugins
WITHOUT_CLASSIFICATION	// load all internal addressbook plugins
WITHOUT_CLASSIFICATION	// load all internal mail plugins
WITHOUT_CLASSIFICATION	// load all internal calendar plugins
WITHOUT_CLASSIFICATION	// // now load all external plugins residing in /plugins directory //
WITHOUT_CLASSIFICATION	// This is necessary because getArgList returns the path in // square brackets
WITHOUT_CLASSIFICATION	// Do not exit
WITHOUT_CLASSIFICATION	// Platform maintainers: add your platform here
WITHOUT_CLASSIFICATION	// Setup the path // Platform maintainers: add your platform here // see also initPlatformServices() method
WITHOUT_CLASSIFICATION	// Find all native jars
WITHOUT_CLASSIFICATION	// Get the current classpath from the sysloader // through reflection
WITHOUT_CLASSIFICATION	// add all native jars
WITHOUT_CLASSIFICATION	// add the old classpath
WITHOUT_CLASSIFICATION	// replace with the modified classpath
WITHOUT_CLASSIFICATION	// Initialise system dependent stuff
WITHOUT_CLASSIFICATION	// switch for restoring last session of Columba. // if true, restores all windows.
WITHOUT_CLASSIFICATION	// automatically generate the help statement
WITHOUT_CLASSIFICATION	// remove directories which don't contain a plugin
WITHOUT_CLASSIFICATION	/*	 * protected static ClassLoader loader = ClassLoader.getSystemClassLoader();	 */
WITHOUT_CLASSIFICATION	// couldn't find correct constructor
WITHOUT_CLASSIFICATION	// couldn't find correct constructor
WITHOUT_CLASSIFICATION	// we can't just load the first constructor // -> go find the correct constructor // -> based on the arguments
WITHOUT_CLASSIFICATION	// find all possible plugin directories
WITHOUT_CLASSIFICATION	// parse "/plugin.xml" file
WITHOUT_CLASSIFICATION	// cancel
WITHOUT_CLASSIFICATION	// register all extensions
WITHOUT_CLASSIFICATION	// register all extensions
WITHOUT_CLASSIFICATION	// loop through all extensions this plugin uses // -> search the corresponding extension handler // -> register the extension at the extension handler
WITHOUT_CLASSIFICATION	// we have a plugin-handler for this kind of extension
WITHOUT_CLASSIFICATION	// if extension wasn't already registered
WITHOUT_CLASSIFICATION	// if no plugin directory exists -> return
WITHOUT_CLASSIFICATION	// if no plugin directory exists -> return
WITHOUT_CLASSIFICATION	// try to load all plugins
WITHOUT_CLASSIFICATION	// skip if it doesn't exist
WITHOUT_CLASSIFICATION	// skip if it doesn't exist
WITHOUT_CLASSIFICATION	// try all possible version of readme files...
WITHOUT_CLASSIFICATION	// retrieve inputstream from resource
WITHOUT_CLASSIFICATION	// parse plugin metadata
WITHOUT_CLASSIFICATION	// remember plugin metadata // pluginMap.put(id, pluginMetadata);
WITHOUT_CLASSIFICATION	// try to load extensin handlers of all plugins
WITHOUT_CLASSIFICATION	// this constructor has the correct number // of arguments
WITHOUT_CLASSIFICATION	// skip non-matching elements
WITHOUT_CLASSIFICATION	// loop through all extensions this plugin uses
WITHOUT_CLASSIFICATION	// skip if no <extensionlist> element found
WITHOUT_CLASSIFICATION	// skip if no <extension> element found
WITHOUT_CLASSIFICATION	// retrieve JDom Document from inputstream
WITHOUT_CLASSIFICATION	// if external plugin, we need the directory of it
WITHOUT_CLASSIFICATION	// if available, load cached instance
WITHOUT_CLASSIFICATION	// couldn't find correct constructor
WITHOUT_CLASSIFICATION	// ok, we found a matching constructor // -> create correct list of arguments
WITHOUT_CLASSIFICATION	// use default Java classlodaer
WITHOUT_CLASSIFICATION	// // external plugin //				
WITHOUT_CLASSIFICATION	// just in case that someone who developers on a plugin // adds the plugin files to his classpath, we try to // load // them with the default classloader
WITHOUT_CLASSIFICATION	// use external Java URL classloader
WITHOUT_CLASSIFICATION	// remember instance
WITHOUT_CLASSIFICATION	// disable extension
WITHOUT_CLASSIFICATION	// disable extension
WITHOUT_CLASSIFICATION	// all Java plugins package their class-files in "plugin.jar"
WITHOUT_CLASSIFICATION	// append URLs to global classloader
WITHOUT_CLASSIFICATION	//plugin = instanciateJavaClass(className, arguments);
WITHOUT_CLASSIFICATION	// create new class loader using the global class loader as parent
WITHOUT_CLASSIFICATION	// use our global class loader
WITHOUT_CLASSIFICATION	// plugin-directory
WITHOUT_CLASSIFICATION	// jar-file found
WITHOUT_CLASSIFICATION	// get plugin id
WITHOUT_CLASSIFICATION	// disable plugin
WITHOUT_CLASSIFICATION	/*         * By using an instance of SyncHTMLEditorKit, the html should load         * synchroniously - so everything is loaded before printing starts         */
WITHOUT_CLASSIFICATION	// reset starting position in y-direction
WITHOUT_CLASSIFICATION	/*             * *20030609, karlpeder* Introduced scaling             */
WITHOUT_CLASSIFICATION	// get origin & size information (height as "total" height minus current pos.)
WITHOUT_CLASSIFICATION	// set size of mPane according to the available width // and fetch root view
WITHOUT_CLASSIFICATION	// scale the graphics
WITHOUT_CLASSIFICATION	// set clipping for the graphics object
WITHOUT_CLASSIFICATION	// translate g to line up with origin of print area (trans 1)
WITHOUT_CLASSIFICATION	// set allocation (defines print area together with the clipping // and translation made above), and print...
WITHOUT_CLASSIFICATION	// translate graphics object back to original position and reset clip and scaling
WITHOUT_CLASSIFICATION	// child views exist - operate recursively on these
WITHOUT_CLASSIFICATION	// handle child view by recursive call
WITHOUT_CLASSIFICATION	// no childs - we have a leaf view (i.e. with contents)
WITHOUT_CLASSIFICATION	// view starts on page - print it
WITHOUT_CLASSIFICATION	// resize jTextPane component to calculate height and get it
WITHOUT_CLASSIFICATION	// correct for starting position if printing should not start at the top
WITHOUT_CLASSIFICATION	// calculate size and return it
WITHOUT_CLASSIFICATION	// width unchanged
WITHOUT_CLASSIFICATION	// height of content // + top margin // + bottom margin // height corrected for scaling
WITHOUT_CLASSIFICATION	// ensure contents is layed out properly
WITHOUT_CLASSIFICATION	// calculate scaling and return it
WITHOUT_CLASSIFICATION	// do not scale up, i.e. no scale factor above 1.0
WITHOUT_CLASSIFICATION	// create remainder
WITHOUT_CLASSIFICATION	// modify "this" to start where remainder ends
WITHOUT_CLASSIFICATION	// this happends if there's nothing left for the next page
WITHOUT_CLASSIFICATION	// return (possibly) updated value
WITHOUT_CLASSIFICATION	// define allocation rectangle (startY is used to compensate for // different start point if printing shall not start from the top)
WITHOUT_CLASSIFICATION	// set initial value for height where this print object should be broken // in points, without scale
WITHOUT_CLASSIFICATION	// calculate break height for child, and use updated // value in the further processing
WITHOUT_CLASSIFICATION	// view starts on page and exceeds it
WITHOUT_CLASSIFICATION	// unchanged, i.e. no breaks before this view
WITHOUT_CLASSIFICATION	// view can be broken
WITHOUT_CLASSIFICATION	// break before start of view
WITHOUT_CLASSIFICATION	// unchanged
WITHOUT_CLASSIFICATION	// unchanged
WITHOUT_CLASSIFICATION	/*	 * Methods called by the Variable parsers	 */
WITHOUT_CLASSIFICATION	// For getHeight() to return the right Value
WITHOUT_CLASSIFICATION	// SizePolicy
WITHOUT_CLASSIFICATION	// Margins
WITHOUT_CLASSIFICATION	// Orientation
WITHOUT_CLASSIFICATION	// ensure that the text does not start with a newline
WITHOUT_CLASSIFICATION	// insert space btw. double newlines
WITHOUT_CLASSIFICATION	/* really delete file */
WITHOUT_CLASSIFICATION	// this is ok
WITHOUT_CLASSIFICATION	//does not occur
WITHOUT_CLASSIFICATION	// using default english language, shipped with Columba
WITHOUT_CLASSIFICATION	// use ResourceBundle's internal classloader
WITHOUT_CLASSIFICATION	//Find out if we already loaded the needed ResourceBundle //object in the hashtable.
WITHOUT_CLASSIFICATION	//should not occur, otherwise the static initializer should have thrown // a RuntimeException
WITHOUT_CLASSIFICATION	//retrieve new bundle // use ResourceBundle's internal classloader
WITHOUT_CLASSIFICATION	//overwrite old bundle
WITHOUT_CLASSIFICATION	/* check if script directory exists */
WITHOUT_CLASSIFICATION	/*           * initialize file observer thread with a reference to our           * beanshellScripts map           */
WITHOUT_CLASSIFICATION	/* nothing to dispose, yet... */
WITHOUT_CLASSIFICATION	/* start pooling thread */
WITHOUT_CLASSIFICATION	/*in case of a stop-start */
WITHOUT_CLASSIFICATION	// check current file list for changes
WITHOUT_CLASSIFICATION	// it isn't possible to undo whatever the script did
WITHOUT_CLASSIFICATION	/* check for new files in the scripts directory */
WITHOUT_CLASSIFICATION	// seconds
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// scripts should reside in <config-folder>/scripts/ directory
WITHOUT_CLASSIFICATION	// scripting.xml configuration file should reside in <config-folder>
WITHOUT_CLASSIFICATION	// oh oh! casting to a specific implementation here ;-)
WITHOUT_CLASSIFICATION	/*        * it's the script responsability to define the "metadata" by invoking        * .setName(), .setAuthor() and .setDescription()        */
WITHOUT_CLASSIFICATION	/* find out if the interpreter is already registered */
WITHOUT_CLASSIFICATION	/* if so, remove it */
WITHOUT_CLASSIFICATION	/* any errors that may occur cannot stop other scripts from running */
WITHOUT_CLASSIFICATION	// retrieving the instance for the first time // creates an instance in ExtensionHandler subclass //  // instance reference is kept in hashmap automatically
WITHOUT_CLASSIFICATION	// This method is called just after a new entry has been added
WITHOUT_CLASSIFICATION	// ensure map can be used by multiple threads
WITHOUT_CLASSIFICATION	// ensure map can be used by multiple threads
WITHOUT_CLASSIFICATION	// temporary hashtable to check for duplicated
WITHOUT_CLASSIFICATION	// if result is already in hashtable remove from result set
WITHOUT_CLASSIFICATION	// memorize location URI
WITHOUT_CLASSIFICATION	// fire up search command
WITHOUT_CLASSIFICATION	// fire up search command
WITHOUT_CLASSIFICATION	// fire up search command
WITHOUT_CLASSIFICATION	// first, create bucket for each provider
WITHOUT_CLASSIFICATION	// now search through all buckets
WITHOUT_CLASSIFICATION	// execute search
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// execute search
WITHOUT_CLASSIFICATION	// query using all criteria
WITHOUT_CLASSIFICATION	// query using all criteria
WITHOUT_CLASSIFICATION	// notify all listeners that new search results arrived
WITHOUT_CLASSIFICATION	// notify all listeners that new search results arrived
WITHOUT_CLASSIFICATION	// ensure this is called in the EDT
WITHOUT_CLASSIFICATION	// ensure this is called in the EDT
WITHOUT_CLASSIFICATION	// notify that search is finished
WITHOUT_CLASSIFICATION	// query provider
WITHOUT_CLASSIFICATION	// retrieve total result count
WITHOUT_CLASSIFICATION	// init Map
WITHOUT_CLASSIFICATION	// wait for 2 seconds until the dialog is openened
WITHOUT_CLASSIFICATION	// ask user to kill pending running commands or wait
WITHOUT_CLASSIFICATION	// create tag vector
WITHOUT_CLASSIFICATION	// ensure root exists
WITHOUT_CLASSIFICATION	// Do not allow an empty name
WITHOUT_CLASSIFICATION	// create uuid
WITHOUT_CLASSIFICATION	// very unlikely to happen
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// don't wait, just continue shutdown procedure, // commands will be killed
WITHOUT_CLASSIFICATION	// we don't need to check for running commands here because // there aren't any, shutdown plugins only use this thread
WITHOUT_CLASSIFICATION	// load xml configuration // -> will be automatically saved every couple of minutes and on // shutdown
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// this will overwrite the "old" tag with same id
WITHOUT_CLASSIFICATION	//private Hashtable properties = new Hashtable();
WITHOUT_CLASSIFICATION	//intern variable which is used for text replace purposes 
WITHOUT_CLASSIFICATION	// constructor for the class
WITHOUT_CLASSIFICATION	// some other version of the constructor
WITHOUT_CLASSIFICATION	// need to be called before search/replace to set up all the states we need
WITHOUT_CLASSIFICATION	// find backwards
WITHOUT_CLASSIFICATION	// match whole word
WITHOUT_CLASSIFICATION	// create pattern
WITHOUT_CLASSIFICATION	//	 need to be called after search/replace to make some changes in the states
WITHOUT_CLASSIFICATION	//lastreplaceposition = lastfoundposition;
WITHOUT_CLASSIFICATION	//lastreplaceposition = lastfoundposition; //+ replaceWith.length();
WITHOUT_CLASSIFICATION	// the implementation of the search next function. It returns always the  position of the NEXT found word.	
WITHOUT_CLASSIFICATION	// end of text was reached -> begin at the start
WITHOUT_CLASSIFICATION	//	the implementation of the replace function. It returns always the  position of the NEXT replaced word.
WITHOUT_CLASSIFICATION	//	the implementation of the replace all function.
WITHOUT_CLASSIFICATION	//$NON-NLS-2$
WITHOUT_CLASSIFICATION	// optional String-based attribute
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// text which we are looking for, or want to replace // replaced text which we want to have   // text where we make a search // search/replace is case sensitive  // search/replace matches whole words only // search/replace works backwards on the text
WITHOUT_CLASSIFICATION	//	private static final String[] SALUTATIONS = { "Mr.", "Mrs.", "Ms.", "Dr.", "Congressman", "Congresswoman", "Senator", "President", //		"Chancellor", "Minister", "Prime Minister" };
WITHOUT_CLASSIFICATION	//	private static final String[] TITLES = { "PhD", "Ph.D.", "PhD.", "Esq.", "Esquire" };
WITHOUT_CLASSIFICATION	// Initialize salutation strings
WITHOUT_CLASSIFICATION	// Initialize title strings
WITHOUT_CLASSIFICATION	// Treat a null name input string the same as an empty input string
WITHOUT_CLASSIFICATION	// Get the salutation if one is specified
WITHOUT_CLASSIFICATION	// Remove the salutation
WITHOUT_CLASSIFICATION	// Get the title if one is specified
WITHOUT_CLASSIFICATION	// Remove the title and the preceding comma
WITHOUT_CLASSIFICATION	// Assume last name only
WITHOUT_CLASSIFICATION	// More than 3 tokens. Assume the last token is the last name and take the rest of the names as the first name. // This handles names like this: "Sue & Gene Stark".
WITHOUT_CLASSIFICATION	// abort if not in debugging mode
WITHOUT_CLASSIFICATION	// abort if not in debugging mode
WITHOUT_CLASSIFICATION	// current time
WITHOUT_CLASSIFICATION	// store profiling point data
WITHOUT_CLASSIFICATION	// this profiling point is parent of the next one
WITHOUT_CLASSIFICATION	// store id
WITHOUT_CLASSIFICATION	// print all collected profile data
WITHOUT_CLASSIFICATION	// current path is the parent of the current element
WITHOUT_CLASSIFICATION	// Use static variables so the date is only updated once // during runtime
WITHOUT_CLASSIFICATION	// Top level element (Used to hold everything else)
WITHOUT_CLASSIFICATION	// The current element you are working on
WITHOUT_CLASSIFICATION	// For writing out the data // Indent for each level
WITHOUT_CLASSIFICATION	// Maximum data to put on a "one liner"
WITHOUT_CLASSIFICATION	/*	 * // Default constructor public XmlIO() { }	 */
WITHOUT_CLASSIFICATION	/*	 * // setup and load constructor public XmlIO(String FilePath) {	 * currentElement = null;	 *  }	 */
WITHOUT_CLASSIFICATION	// setup and load constructor
WITHOUT_CLASSIFICATION	// this.file = F;
WITHOUT_CLASSIFICATION	// Load a file. This is what starts things off.
WITHOUT_CLASSIFICATION	// Create the XML reader... // xr = XMLReaderFactory.createXMLReader();
WITHOUT_CLASSIFICATION	// Set the ContentHandler... // xr.setContentHandler( this );
WITHOUT_CLASSIFICATION	// Error
WITHOUT_CLASSIFICATION	// Error
WITHOUT_CLASSIFICATION	// XmlElement.printNode( getRoot(), "");
WITHOUT_CLASSIFICATION	// XmlElement.printNode( getRoot(), "");
WITHOUT_CLASSIFICATION	// element name
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// namespaceAware = false
WITHOUT_CLASSIFICATION	// Attr name
WITHOUT_CLASSIFICATION	// accumulate the contents into a buffer.
WITHOUT_CLASSIFICATION	// // Writer interface //
WITHOUT_CLASSIFICATION	// End class XmlIO
WITHOUT_CLASSIFICATION	// Important!! // -> replacing this character must happen first
WITHOUT_CLASSIFICATION	// *20030621, karlpeder*
WITHOUT_CLASSIFICATION	//builder.setValidation(true);
WITHOUT_CLASSIFICATION	//store.shutdown();
WITHOUT_CLASSIFICATION	// empty the worker list until one is left
WITHOUT_CLASSIFICATION	/* * Test for int hashCode(). */
WITHOUT_CLASSIFICATION	/* * Test for boolean equals(Object) */
WITHOUT_CLASSIFICATION	/* * Test for clone() */
WITHOUT_CLASSIFICATION	// top-level structure
WITHOUT_CLASSIFICATION	// top-level structure
WITHOUT_CLASSIFICATION	// mandatory String-based attribute
WITHOUT_CLASSIFICATION	// mandatory String-based attribute
WITHOUT_CLASSIFICATION	// mandatory String-based attribute
WITHOUT_CLASSIFICATION	// optional String-based attribute
WITHOUT_CLASSIFICATION	// optional String-based attribute
WITHOUT_CLASSIFICATION	// optional String-based attribute
WITHOUT_CLASSIFICATION	// should throw exception as attribute type "name2" is not defined in // type structure
WITHOUT_CLASSIFICATION	// user struct
WITHOUT_CLASSIFICATION	// identity definition
WITHOUT_CLASSIFICATION	// MULTIPLICITY.ZERO_TO_ONE is default
WITHOUT_CLASSIFICATION	// date time timezone definition
WITHOUT_CLASSIFICATION	// date range (start time, end time) definition
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	// document definition
WITHOUT_CLASSIFICATION	// locale definition
WITHOUT_CLASSIFICATION	// list of attachments
WITHOUT_CLASSIFICATION	// single attachment
WITHOUT_CLASSIFICATION	// message
WITHOUT_CLASSIFICATION	// single sender - re-use identity type
WITHOUT_CLASSIFICATION	// re-use identity type for recipient list
WITHOUT_CLASSIFICATION	// message body
WITHOUT_CLASSIFICATION	// message contains list of attachments
WITHOUT_CLASSIFICATION	// find all possible plugin directories
WITHOUT_CLASSIFICATION	/* * Test for clone() */
WITHOUT_CLASSIFICATION	// user struct
WITHOUT_CLASSIFICATION	/*(.*://.*?)"  "something" with ://          (could be .*? but then the Pattern would match whitespace)             (      (&gt;).*  a html-Encoded > followed by anything                                                  |  or(["+punc+"]*)"  any Punctuation        (<br>)? 0 or 1 trailing <br>             )$  end of String*/
WITHOUT_CLASSIFICATION	// create test userlist data
WITHOUT_CLASSIFICATION	// MULTIPLICITY.ONE is default
WITHOUT_CLASSIFICATION	/* * Test for getColor() */
WITHOUT_CLASSIFICATION	// create config-folder
WITHOUT_CLASSIFICATION	// create config-folder
WITHOUT_CLASSIFICATION	// remove configuration directory
WITHOUT_CLASSIFICATION	/*	 * Test method for 'org.columba.core.tagging.TagManager.addTag(String)'	 */
WITHOUT_CLASSIFICATION	/*	 * Test method for 'org.columba.core.tagging.TagManager.getAllTags()'	 */
WITHOUT_CLASSIFICATION	/*	 * Test method for 'org.columba.core.tagging.TagManager.getTag(String)'	 */
WITHOUT_CLASSIFICATION	// getByName
WITHOUT_CLASSIFICATION	/*	 * Test method for 'org.columba.core.tagging.TagManager.removeTag(String)'	 */
WITHOUT_CLASSIFICATION	// test if the size of self substracted list is 0
WITHOUT_CLASSIFICATION	// tests, if the list substracted with an empty list is equal to itself
WITHOUT_CLASSIFICATION	// tests, if the listPart substracted
WITHOUT_CLASSIFICATION	// Setup the XML that is to be written
WITHOUT_CLASSIFICATION	/* * Test for boolean not equals(Object) */
WITHOUT_CLASSIFICATION	/* * Test for hashCode() */
WITHOUT_CLASSIFICATION	/* * Test for XmlElement(String,String) */
WITHOUT_CLASSIFICATION	//AbstractFolderOptionsPlugin getPlugin(String name);
WITHOUT_CLASSIFICATION	//TableView getView();
WITHOUT_CLASSIFICATION	//MessageNode getRootNode();
WITHOUT_CLASSIFICATION	//MessageNode getMessageNode(Object uid);
WITHOUT_CLASSIFICATION	// get configuration
WITHOUT_CLASSIFICATION	// for example: "Re: this is a subject"
WITHOUT_CLASSIFICATION	//int getRow(MessageNode node);
WITHOUT_CLASSIFICATION	//MessageNode getMessageNodeAtRow(int index);
WITHOUT_CLASSIFICATION	// if subject doesn't start already with "Re:" prepend it
WITHOUT_CLASSIFICATION	// for example: "[columba-users]Re: this is a subject"
WITHOUT_CLASSIFICATION	// if subject doesn't start already with "Fwd:" prepend it
WITHOUT_CLASSIFICATION	// create To headerfield
WITHOUT_CLASSIFICATION	// Reply-To headerfield isn't specified, try to use From instead
WITHOUT_CLASSIFICATION	// Quote according model type (text/html)
WITHOUT_CLASSIFICATION	// if Reply-To headerfield isn't specified, try to use from
WITHOUT_CLASSIFICATION	// example: X-BeenThere: columba-devel@lists.sourceforge.net
WITHOUT_CLASSIFICATION	// plain text
WITHOUT_CLASSIFICATION	// *20040229, karlpeder* Use default account as fall back
WITHOUT_CLASSIFICATION	// RFC822 - Header
WITHOUT_CLASSIFICATION	// create html element, if it doesn't exist
WITHOUT_CLASSIFICATION	// get enable attribute
WITHOUT_CLASSIFICATION	// reply-to
WITHOUT_CLASSIFICATION	// date
WITHOUT_CLASSIFICATION	//attachments
WITHOUT_CLASSIFICATION	// copy flags
WITHOUT_CLASSIFICATION	// compose text part
WITHOUT_CLASSIFICATION	// compose html part
WITHOUT_CLASSIFICATION	// merge mimeparts and return
WITHOUT_CLASSIFICATION	// Init Mime-Header with Default-Values (text/html)
WITHOUT_CLASSIFICATION	// Set Default Charset or selected
WITHOUT_CLASSIFICATION	// insert link tags for urls and email addresses
WITHOUT_CLASSIFICATION	// for text comparisons
WITHOUT_CLASSIFICATION	// insert document type decl.
WITHOUT_CLASSIFICATION	// insert head section with charset def.
WITHOUT_CLASSIFICATION	// add <head> section
WITHOUT_CLASSIFICATION	// replace <head> section
WITHOUT_CLASSIFICATION	// add rest of body until start of </body>
WITHOUT_CLASSIFICATION	// add signature if defined
WITHOUT_CLASSIFICATION	// add the rest of the original body - and transfer back to body var.
WITHOUT_CLASSIFICATION	// add encoding if necessary
WITHOUT_CLASSIFICATION	// check if the charset is US-ASCII then there is something wrong // -> switch to UTF-8 and write to log-file
WITHOUT_CLASSIFICATION	// to allow empty messages
WITHOUT_CLASSIFICATION	// to allow empty messages
WITHOUT_CLASSIFICATION	// Init Mime-Header with Default-Values (text/plain)
WITHOUT_CLASSIFICATION	/*		 * *20030918, karlpeder* Tags are stripped if the model contains a html		 * message (since we are composing a plain text message here.		 */
WITHOUT_CLASSIFICATION	// write charset to header
WITHOUT_CLASSIFICATION	//List mimeParts = model.getAttachments();
WITHOUT_CLASSIFICATION	// *20030919, karlpeder* Added handling of html messages
WITHOUT_CLASSIFICATION	// compose message body as multipart/alternative
WITHOUT_CLASSIFICATION	// send as multipart/alternative
WITHOUT_CLASSIFICATION	// send as text/html
WITHOUT_CLASSIFICATION	// compose message body as text/plain
WITHOUT_CLASSIFICATION	// Create Multipart/Mixed if necessary
WITHOUT_CLASSIFICATION	// if the id not currently set (for example in the security panel in // the account-config
WITHOUT_CLASSIFICATION	//  Set id on from address
WITHOUT_CLASSIFICATION	// model -> view
WITHOUT_CLASSIFICATION	// size
WITHOUT_CLASSIFICATION	//Do not access the inputstream after this line!
WITHOUT_CLASSIFICATION	/*  	 * Add supported account formats here  	 * */
WITHOUT_CLASSIFICATION	//private boolean pop3;
WITHOUT_CLASSIFICATION	// return default-account ImapItem instead 
WITHOUT_CLASSIFICATION	// return default-account ImapItem instead 
WITHOUT_CLASSIFICATION	// create if not available
WITHOUT_CLASSIFICATION	// return default-account SpamItem instead 
WITHOUT_CLASSIFICATION	// return default-account identityItem instead
WITHOUT_CLASSIFICATION	// same object
WITHOUT_CLASSIFICATION	/*         * The fields on this object is in fact represented in the xml         * structure found as getRoot(). Therefore super.equals()         * should do the job         */
WITHOUT_CLASSIFICATION	/*         * The fields on this object is in fact represented in the xml         * structure found as getRoot(). Therefore super.hashCode()         * should do the job.         */
WITHOUT_CLASSIFICATION	//XmlElement.printNode(e,"");
WITHOUT_CLASSIFICATION	/*     * search for SecurityItem based on To headerfield     *     */
WITHOUT_CLASSIFICATION	// found match
WITHOUT_CLASSIFICATION	// path to account templates for POP3/IMAP
WITHOUT_CLASSIFICATION	// load xml document
WITHOUT_CLASSIFICATION	// get pop3 or imap account xml node
WITHOUT_CLASSIFICATION	// Default signature
WITHOUT_CLASSIFICATION	//Do nothing
WITHOUT_CLASSIFICATION	// fall back to first account as default
WITHOUT_CLASSIFICATION	//private File file;
WITHOUT_CLASSIFICATION	// example: "columba://org.columba.mail/<folder-id>/<message-id>"
WITHOUT_CLASSIFICATION	// found mail component frame
WITHOUT_CLASSIFICATION	// // composer_options.xml: // //<options> //<gui> //  <view id="0"> //    <window maximized="false" height="700" width="600" y="0" x="0" /> //    <toolbars infopanel="true" main="true" /> //    <splitpanes header="200" attachment="100" main="200" /> //    <addressbook enabled="false" /> //  </view> //</gui> //<spellcheck executable="/usr/bin/aspell" /> //<external_editor enabled="false" /> //<forward style="attachment" /> //<subject ask_if_empty="true" /> //<html send_as_multipart="true" enable="false" /> //</options>
WITHOUT_CLASSIFICATION	//apply initial version information
WITHOUT_CLASSIFICATION	// add initial messageframe treenode
WITHOUT_CLASSIFICATION	//      use global table options
WITHOUT_CLASSIFICATION	// Choice btw. text and html will be based on stored option
WITHOUT_CLASSIFICATION	// dismiss char
WITHOUT_CLASSIFICATION	// model -> view
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// Choice btw. text and html will be based on stored option
WITHOUT_CLASSIFICATION	// type-cast here is safe
WITHOUT_CLASSIFICATION	//	 header-item
WITHOUT_CLASSIFICATION	// get plugin handler for filter actions
WITHOUT_CLASSIFICATION	// get list of all filter actions
WITHOUT_CLASSIFICATION	// interate through all filter actions
WITHOUT_CLASSIFICATION	// name is used to load plugin
WITHOUT_CLASSIFICATION	// try to get instance of FilterAction
WITHOUT_CLASSIFICATION	// add command to CompoundCommand
WITHOUT_CLASSIFICATION	// get headerfield to search in (for example: Subject)
WITHOUT_CLASSIFICATION	// get headerfield to search in (for example: Subject)
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// get message header
WITHOUT_CLASSIFICATION	// cancel if headerfield doesn't exist
WITHOUT_CLASSIFICATION	// decode headerfield
WITHOUT_CLASSIFICATION	// see if theirs a match
WITHOUT_CLASSIFICATION	// skip if message doesn't contain the requested headerfield
WITHOUT_CLASSIFICATION	// get condition and convert it to constant as defined in // FilterCriteria
WITHOUT_CLASSIFICATION	// we don't need any configuration here
WITHOUT_CLASSIFICATION	// match all matches
WITHOUT_CLASSIFICATION	// transform string to Date representation
WITHOUT_CLASSIFICATION	// get date
WITHOUT_CLASSIFICATION	//      convert criteria into int-value
WITHOUT_CLASSIFICATION	// get message body
WITHOUT_CLASSIFICATION	// if something goes wrong here, fall back to "mark as read"
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// create command
WITHOUT_CLASSIFICATION	// implement your own search-engine here
WITHOUT_CLASSIFICATION	// used by virtual folder only
WITHOUT_CLASSIFICATION	// only used by VirtualFolder
WITHOUT_CLASSIFICATION	// update treenode
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// update treenode
WITHOUT_CLASSIFICATION	// update treenode
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	/*                    case '\'':                        sb.append("&apos;");                        i++;                        break;*/
WITHOUT_CLASSIFICATION	// @author fdietz // -> Moved code for updating mailfolderinfo to markMessage() // intentionally! //
WITHOUT_CLASSIFICATION	// on startup, there's shouldn't be any recent messages // -> we simply remember 0 recent messages here // property.addAttribute("recent", "0");
WITHOUT_CLASSIFICATION	// Check if the MessageFolderInfo is sane
WITHOUT_CLASSIFICATION	// get list of all uids
WITHOUT_CLASSIFICATION	// if message with uid doesn't exist -> skip
WITHOUT_CLASSIFICATION	// move message to trash if marked as expunged
WITHOUT_CLASSIFICATION	// remove message
WITHOUT_CLASSIFICATION	// remove from header-list
WITHOUT_CLASSIFICATION	// public abstract IHeaderListStorage getHeaderListStorage();
WITHOUT_CLASSIFICATION	// set folder changed flag // -> if not, the header cache wouldn't notice that something // -> has changed. And wouldn't save the changes.
WITHOUT_CLASSIFICATION	// if there is no search engine, try the default one
WITHOUT_CLASSIFICATION	// Sanity checks
WITHOUT_CLASSIFICATION	//protected RemoteSearchEngine searchEngine;
WITHOUT_CLASSIFICATION	// Groups are separated by at least one WS character
WITHOUT_CLASSIFICATION	// parent directory for mail folders // for example: ".columba/mail/"
WITHOUT_CLASSIFICATION	// Get the handler
WITHOUT_CLASSIFICATION	// which parents are possible ?
WITHOUT_CLASSIFICATION	// the group of the given parent
WITHOUT_CLASSIFICATION	// iterate through all foldertypes to find suitable ones
WITHOUT_CLASSIFICATION	// Add child to parent
WITHOUT_CLASSIFICATION	// Add child to parent
WITHOUT_CLASSIFICATION	// get root folder
WITHOUT_CLASSIFICATION	// create mandatory IMAP Inbox folder
WITHOUT_CLASSIFICATION	// associate inbox with root folder
WITHOUT_CLASSIFICATION	// notify folder tree model
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// the next new folder will get this UID
WITHOUT_CLASSIFICATION	// folderitem wraps xml configuration from tree.xml
WITHOUT_CLASSIFICATION	// locking mechanism
WITHOUT_CLASSIFICATION	// Root folder cache
WITHOUT_CLASSIFICATION	// register interest on tree node changes
WITHOUT_CLASSIFICATION	// register interest on tree node changes
WITHOUT_CLASSIFICATION	/*	public MailFolderCommandReference getCommandReference(MailFolderCommandReference r) {		return r;	}	*/
WITHOUT_CLASSIFICATION	// remove XmlElement
WITHOUT_CLASSIFICATION	// Check the type
WITHOUT_CLASSIFICATION	// do the same for the XmlElement node
WITHOUT_CLASSIFICATION	// do the same for the XmlElement of child
WITHOUT_CLASSIFICATION	// If rootFolder is not cached traverse the tree
WITHOUT_CLASSIFICATION	// There is no parent
WITHOUT_CLASSIFICATION	// no filterlist treenode found // -> create a new one
WITHOUT_CLASSIFICATION	// create filterlist datastructure
WITHOUT_CLASSIFICATION	// delete folder from your harddrive
WITHOUT_CLASSIFICATION	// if this worked, remove it from tree.xml configuration, too
WITHOUT_CLASSIFICATION	// get message with UID
WITHOUT_CLASSIFICATION	// get message with UID
WITHOUT_CLASSIFICATION	// get tree-like structure of mimeparts
WITHOUT_CLASSIFICATION	// Get the mimepart
WITHOUT_CLASSIFICATION	// Get the mimepart
WITHOUT_CLASSIFICATION	// skip this message, if it doesn't exist in source folder
WITHOUT_CLASSIFICATION	/*			 * ((AbstractLocalFolder) destFolder).setFlags(destuid, (Flags)			 * getFlags( uids[i]).clone());			 */
WITHOUT_CLASSIFICATION	// destFolder.fireMessageAdded(uids[i]);
WITHOUT_CLASSIFICATION	// we are done - clear the progress bar
WITHOUT_CLASSIFICATION	// generate UID for new message
WITHOUT_CLASSIFICATION	// save message stream to file
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// save header and attributes. Copy the flags!
WITHOUT_CLASSIFICATION	// Check if the message is already cached
WITHOUT_CLASSIFICATION	// this message is already cached
WITHOUT_CLASSIFICATION	// Parse Message from DataStorage
WITHOUT_CLASSIFICATION	// number of headerfields
WITHOUT_CLASSIFICATION	// number of headerfields
WITHOUT_CLASSIFICATION	// get header from cache
WITHOUT_CLASSIFICATION	// message doesn't exist (this shouldn't happen here)
WITHOUT_CLASSIFICATION	// if header contains more fields than the cached header
WITHOUT_CLASSIFICATION	// message isn't cached // -> just return header from cache
WITHOUT_CLASSIFICATION	// remove message from disk
WITHOUT_CLASSIFICATION	// fireMessageRemoved(uid, getFlags(uid));
WITHOUT_CLASSIFICATION	// update MessageFolderInfo
WITHOUT_CLASSIFICATION	// cached headerfield list
WITHOUT_CLASSIFICATION	// make sure to close all file handles // to the currently cached message // -> necessary for windows to be able to delete the local file
WITHOUT_CLASSIFICATION	// header cache is stored in "headerlist" subfolder
WITHOUT_CLASSIFICATION	// Must be out of sync!
WITHOUT_CLASSIFICATION	// Check if still consistent
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// create output stream
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// initialize progressbar with total number of messages
WITHOUT_CLASSIFICATION	// for each message in folder i
WITHOUT_CLASSIFICATION	// get message source from folder
WITHOUT_CLASSIFICATION	// prepend From line
WITHOUT_CLASSIFICATION	// write message source to file
WITHOUT_CLASSIFICATION	// append newline
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// close output stream
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// which kind of mark?
WITHOUT_CLASSIFICATION	// add check box for incl. of headers
WITHOUT_CLASSIFICATION	// create command
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// un-mark messages
WITHOUT_CLASSIFICATION	// train bayesian filter
WITHOUT_CLASSIFICATION	// train bayesian filter
WITHOUT_CLASSIFICATION	// mark messages
WITHOUT_CLASSIFICATION	// mark as spam /as not spam // for each message
WITHOUT_CLASSIFICATION	// increase progressbar value
WITHOUT_CLASSIFICATION	// cancel here if user requests
WITHOUT_CLASSIFICATION	// message belongs to which account?
WITHOUT_CLASSIFICATION	// skip if account information is not available
WITHOUT_CLASSIFICATION	// if spam filter is not enabled -> return
WITHOUT_CLASSIFICATION	// execute command
WITHOUT_CLASSIFICATION	// skip if user didn't enable this option
WITHOUT_CLASSIFICATION	// move message to user-configured folder (generally "Junk" // folder)
WITHOUT_CLASSIFICATION	// move message to trash
WITHOUT_CLASSIFICATION	// get array of source references
WITHOUT_CLASSIFICATION	// which kind of color?
WITHOUT_CLASSIFICATION	// saving last selected Message to the folder
WITHOUT_CLASSIFICATION	// for each message
WITHOUT_CLASSIFICATION	// set columba.color flag
WITHOUT_CLASSIFICATION	//vfolder.showFilterDialog((AbstractMailFrameController) getFrameMediator());
WITHOUT_CLASSIFICATION	// get references to selected folder and message
WITHOUT_CLASSIFICATION	// uid for messages to save
WITHOUT_CLASSIFICATION	// no message selected.
WITHOUT_CLASSIFICATION	//register for status events
WITHOUT_CLASSIFICATION	// get value of Subject, From or To header
WITHOUT_CLASSIFICATION	// create virtual folder
WITHOUT_CLASSIFICATION	// should be virtual
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// for each message
WITHOUT_CLASSIFICATION	// uid for messages to save
WITHOUT_CLASSIFICATION	// set properties for virtual folder // default is inbox if parent is null
WITHOUT_CLASSIFICATION	// define filter rule
WITHOUT_CLASSIFICATION	// define criteria
WITHOUT_CLASSIFICATION	// get folder that is going to be moved
WITHOUT_CLASSIFICATION	// get destination folder
WITHOUT_CLASSIFICATION	// AbstractFolder.append also automatically removes the folder // from its parent
WITHOUT_CLASSIFICATION	// get reference
WITHOUT_CLASSIFICATION	// get header of message
WITHOUT_CLASSIFICATION	// get sender
WITHOUT_CLASSIFICATION	// add sender to addressbook
WITHOUT_CLASSIFICATION	// add contact to addressbook
WITHOUT_CLASSIFICATION	// skip if no reference available
WITHOUT_CLASSIFICATION	// if folder is message folder // ->TODO (@author fdietz):  there should be an interface, instead of the AbstractMessageFolder // class
WITHOUT_CLASSIFICATION	// save headercache
WITHOUT_CLASSIFICATION	//	register for status events
WITHOUT_CLASSIFICATION	// Save message source for each selected message
WITHOUT_CLASSIFICATION	//setup save dialog
WITHOUT_CLASSIFICATION	// show dialog
WITHOUT_CLASSIFICATION	// file exists, user needs to confirm overwrite
WITHOUT_CLASSIFICATION	// save message source under selected filename
WITHOUT_CLASSIFICATION	// end of loop over selected messages
WITHOUT_CLASSIFICATION	// remove source folder
WITHOUT_CLASSIFICATION	// setting lastSelection for srcFolder to null
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// which kind of mark?
WITHOUT_CLASSIFICATION	// uid for messages to save
WITHOUT_CLASSIFICATION	//	register for status events
WITHOUT_CLASSIFICATION	// initialize progress bar with total number of messages
WITHOUT_CLASSIFICATION	// add source to destination folder
WITHOUT_CLASSIFICATION	//retry copy
WITHOUT_CLASSIFICATION	// update progress bar
WITHOUT_CLASSIFICATION	//reset progress bar
WITHOUT_CLASSIFICATION	// We are done - clear the status message with a delay
WITHOUT_CLASSIFICATION	/*		 * // use wrapper class for easier handling of references array adapter =		 * new FolderCommandAdapter( (MailFolderCommandReference[])		 * getReferences()); // get array of source references		 * MailFolderCommandReference[] r = adapter.getSourceFolderReferences();		 */
WITHOUT_CLASSIFICATION	// saving last selected message to the folder
WITHOUT_CLASSIFICATION	// mark message
WITHOUT_CLASSIFICATION	// get name of folder
WITHOUT_CLASSIFICATION	// rename folder
WITHOUT_CLASSIFICATION	// get source references
WITHOUT_CLASSIFICATION	// expunge folder
WITHOUT_CLASSIFICATION	//System.getProperty("line.separator");
WITHOUT_CLASSIFICATION	// save each message
WITHOUT_CLASSIFICATION	// determine type of body part
WITHOUT_CLASSIFICATION	// setup filters and filename for file chooser dialog
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get array of source references
WITHOUT_CLASSIFICATION	// show dialog
WITHOUT_CLASSIFICATION	// file exists, user needs to confirm overwrite
WITHOUT_CLASSIFICATION	// dismiss char
WITHOUT_CLASSIFICATION	// substitute special characters like: <,>,&,\t,\n
WITHOUT_CLASSIFICATION	// Add default extension if no extension is given by the user
WITHOUT_CLASSIFICATION	// store whether all headers should be incl.
WITHOUT_CLASSIFICATION	// save message
WITHOUT_CLASSIFICATION	// save message
WITHOUT_CLASSIFICATION	// end of for loop over uids to save
WITHOUT_CLASSIFICATION	// default value
WITHOUT_CLASSIFICATION	// create new
WITHOUT_CLASSIFICATION	// Does the user prefer html or plain text?
WITHOUT_CLASSIFICATION	// Get body of message depending on user preferences
WITHOUT_CLASSIFICATION	// First determine which charset to use
WITHOUT_CLASSIFICATION	// get charset from message
WITHOUT_CLASSIFICATION	// decode using default charset
WITHOUT_CLASSIFICATION	// test on extension
WITHOUT_CLASSIFICATION	// parse for urls / email adr. and substite with HTML-code
WITHOUT_CLASSIFICATION	// mark quotings with special font
WITHOUT_CLASSIFICATION	// encapsulate bodytext in html-code
WITHOUT_CLASSIFICATION	// use body as is
WITHOUT_CLASSIFICATION	// headers
WITHOUT_CLASSIFICATION	// headers
WITHOUT_CLASSIFICATION	// read configuration from options.xml file
WITHOUT_CLASSIFICATION	// create css-stylesheet string
WITHOUT_CLASSIFICATION	// create header table
WITHOUT_CLASSIFICATION	// process header value
WITHOUT_CLASSIFICATION	// strip tags //body = parser.stripHTMLTags(decodedBody, true); //body = parser.restoreSpecialCharacters(body);
WITHOUT_CLASSIFICATION	// message composed of headers and body
WITHOUT_CLASSIFICATION	// loop over all headers
WITHOUT_CLASSIFICATION	// ignore - columba.date is used instead
WITHOUT_CLASSIFICATION	// all headers should be included
WITHOUT_CLASSIFICATION	// add from, to, date, subj so they are the last elements
WITHOUT_CLASSIFICATION	// create array and return
WITHOUT_CLASSIFICATION	// get original folder
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	//register for status events
WITHOUT_CLASSIFICATION	// get reference
WITHOUT_CLASSIFICATION	// get header of message
WITHOUT_CLASSIFICATION	// add sender to addressbook
WITHOUT_CLASSIFICATION	// add contact to addressbook
WITHOUT_CLASSIFICATION	// Get body of message depending on user preferences
WITHOUT_CLASSIFICATION	// First determine which charset to use
WITHOUT_CLASSIFICATION	// get charset from message
WITHOUT_CLASSIFICATION	// decode using default charset
WITHOUT_CLASSIFICATION	// decode message body with respect to charset
WITHOUT_CLASSIFICATION	// check if virtual folder, if yes, do not use these uids, use the // real uids instead
WITHOUT_CLASSIFICATION	// selected messages
WITHOUT_CLASSIFICATION	// selected folder
WITHOUT_CLASSIFICATION	// for every message
WITHOUT_CLASSIFICATION	// the header key for date field
WITHOUT_CLASSIFICATION	// Header
WITHOUT_CLASSIFICATION	// Footer
WITHOUT_CLASSIFICATION	/*                 * *20030604, karlpeder* Fixed minor flaws to be able to print text                 * messages. Further more added support for html messages.                 */
WITHOUT_CLASSIFICATION	// uid for messages to print
WITHOUT_CLASSIFICATION	// Print each message
WITHOUT_CLASSIFICATION	// Setup print document for message
WITHOUT_CLASSIFICATION	// Add header information to print
WITHOUT_CLASSIFICATION	// *20030531, karlpeder* setting headerKeys to lowercase for // lookup!
WITHOUT_CLASSIFICATION	// special handling for dates
WITHOUT_CLASSIFICATION	// ignore leading weekday name (e.g. "Mon,"), since this // seems to give problems during parsing
WITHOUT_CLASSIFICATION	// fall back to use the Date header contents directly
WITHOUT_CLASSIFICATION	// Add list of attachments if applicable
WITHOUT_CLASSIFICATION	// Add body of message to print
WITHOUT_CLASSIFICATION	// print the print document (i.e. the message)
WITHOUT_CLASSIFICATION	// end of for loop over uids to print
WITHOUT_CLASSIFICATION	// create a print object and return it
WITHOUT_CLASSIFICATION	// create new local xml treenode
WITHOUT_CLASSIFICATION	// add to options if possible (so it will be saved)
WITHOUT_CLASSIFICATION	// try to fix broken html-strings
WITHOUT_CLASSIFICATION	// create temporary file and save validated body
WITHOUT_CLASSIFICATION	// true ~ scaling allowed
WITHOUT_CLASSIFICATION	// if we have a result
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// process all events collected until now
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// get references to selected folder and message
WITHOUT_CLASSIFICATION	// uid for messages to save
WITHOUT_CLASSIFICATION	// no message selected.
WITHOUT_CLASSIFICATION	// get value of Subject, From or To header
WITHOUT_CLASSIFICATION	// get folder that is going to be moved
WITHOUT_CLASSIFICATION	// get reference
WITHOUT_CLASSIFICATION	// get destination foldedr
WITHOUT_CLASSIFICATION	// expunge folder
WITHOUT_CLASSIFICATION	// cancel, if source equals destination folder
WITHOUT_CLASSIFICATION	// calling CopyMessageCommand.execute() here! //super.execute(worker);
WITHOUT_CLASSIFICATION	// get messgae UIDs
WITHOUT_CLASSIFICATION	// setting lastSelection to null
WITHOUT_CLASSIFICATION	// mark all messages as expunged
WITHOUT_CLASSIFICATION	// We are done - clear the status message after a delay
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// get filter list from folder
WITHOUT_CLASSIFICATION	// initialize progressbar
WITHOUT_CLASSIFICATION	// for each filter
WITHOUT_CLASSIFICATION	// update progressbar
WITHOUT_CLASSIFICATION	// get filter
WITHOUT_CLASSIFICATION	// search all messages which match this filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	// Collect the uids for one folder
WITHOUT_CLASSIFICATION	// Collect the uids for one folder
WITHOUT_CLASSIFICATION	// new folder, fire to the old folder
WITHOUT_CLASSIFICATION	// new folder, fire to the old folder
WITHOUT_CLASSIFICATION	// clear list and collect uids for new folder
WITHOUT_CLASSIFICATION	// clear list and collect uids for new folder
WITHOUT_CLASSIFICATION	// If there is still a parent -> remove it
WITHOUT_CLASSIFICATION	// add child to this node
WITHOUT_CLASSIFICATION	// perform other environment configurations
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// date
WITHOUT_CLASSIFICATION	// make sure that we have a Message-ID
WITHOUT_CLASSIFICATION	// add command to scheduler //MainInterface.processor.addOp(command);
WITHOUT_CLASSIFICATION	// size of message
WITHOUT_CLASSIFICATION	// perform other database configurations
WITHOUT_CLASSIFICATION	// message size should be at least 1 KB
WITHOUT_CLASSIFICATION	// parse all message files to recreate the header cache
WITHOUT_CLASSIFICATION	// we are done
WITHOUT_CLASSIFICATION	// headerList.clear();
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	//	true/false
WITHOUT_CLASSIFICATION	// set the attachment flag
WITHOUT_CLASSIFICATION	//Update is unnecessary
WITHOUT_CLASSIFICATION	// Can't happen
WITHOUT_CLASSIFICATION	// was this message already fetched from the server?
WITHOUT_CLASSIFICATION	// message flags
WITHOUT_CLASSIFICATION	// priority as integer value
WITHOUT_CLASSIFICATION	//	true, if message has attachments, false otherwise
WITHOUT_CLASSIFICATION	// properly decoded subject
WITHOUT_CLASSIFICATION	// short from, containing only name of person
WITHOUT_CLASSIFICATION	// Cc
WITHOUT_CLASSIFICATION	// host from which this message was downloaded
WITHOUT_CLASSIFICATION	// show attachment panel
WITHOUT_CLASSIFICATION	// message color
WITHOUT_CLASSIFICATION	// these are cached by default
WITHOUT_CLASSIFICATION	// account ID
WITHOUT_CLASSIFICATION	//return h;
WITHOUT_CLASSIFICATION	// to
WITHOUT_CLASSIFICATION	// POP3 message UID
WITHOUT_CLASSIFICATION	//		copy all internally used headerfields
WITHOUT_CLASSIFICATION	// header cache is stored in "headerlist" subfolder
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// internally used headerfields // these are all boolean values, which are saved using // a single int value
WITHOUT_CLASSIFICATION	// this internally used headerfields can be of every basic // type, including String, Integer, Boolean, Date, etc.
WITHOUT_CLASSIFICATION	// load boolean headerfields, which are compressed in one int value
WITHOUT_CLASSIFICATION	// load other internal headerfields, non-boolean type
WITHOUT_CLASSIFICATION	//load default headerfields, as defined in RFC822
WITHOUT_CLASSIFICATION	// if value doesn't exist, use false as default
WITHOUT_CLASSIFICATION	// save other internal headerfields, of non-boolean type
WITHOUT_CLASSIFICATION	// save default headerfields, as defined in RFC822
WITHOUT_CLASSIFICATION	// only called by FolderFactory
WITHOUT_CLASSIFICATION	// if creating new folder
WITHOUT_CLASSIFICATION	// Trigger Synchronization
WITHOUT_CLASSIFICATION	// Check if the mailbox has changed
WITHOUT_CLASSIFICATION	// Sort the uid list
WITHOUT_CLASSIFICATION	// Seems to be no change!
WITHOUT_CLASSIFICATION	// Ensure sizes are correct
WITHOUT_CLASSIFICATION	// Compute the number of new messages
WITHOUT_CLASSIFICATION	// Find the index of the largest local Uid
WITHOUT_CLASSIFICATION	// Still not found -> do a binary search
WITHOUT_CLASSIFICATION	// removedLocalUids = localUids.size() - 1 - position;
WITHOUT_CLASSIFICATION	// Check if all local uids have been deleted
WITHOUT_CLASSIFICATION	// all messages are new
WITHOUT_CLASSIFICATION	// all messages are new
WITHOUT_CLASSIFICATION	// Find the messages that have been deleted
WITHOUT_CLASSIFICATION	// Pack size is min 10, max 200 else mailboxsize / 10
WITHOUT_CLASSIFICATION	// Fetch Pack outer loop
WITHOUT_CLASSIFICATION	// Compare inner loop
WITHOUT_CLASSIFICATION	// next position in the local uid list
WITHOUT_CLASSIFICATION	// All the other local mails are deleted
WITHOUT_CLASSIFICATION	// Build a list of the new uids
WITHOUT_CLASSIFICATION	// Update the list of new and local uids
WITHOUT_CLASSIFICATION	// Fetch the headers of the new messages ...
WITHOUT_CLASSIFICATION	// .. and set the flags
WITHOUT_CLASSIFICATION	// fire message added updates
WITHOUT_CLASSIFICATION	// cached headerfield list
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// Trigger Synchronization
WITHOUT_CLASSIFICATION	// Sort the uid list
WITHOUT_CLASSIFICATION	// Build the remote lists of messages that are UNSEEN, FLAGGED, DELETED, // JUNK
WITHOUT_CLASSIFICATION	// Number of deleted messages is computed from exists on imap and // local // newMessages
WITHOUT_CLASSIFICATION	// First deleted all local uids that // are larger than the largest remote uid
WITHOUT_CLASSIFICATION	// Fetch these uids and compare them to the // local list
WITHOUT_CLASSIFICATION	// Search in packs beginning from newest to oldest // -> in most cases this should save us a lot of uid fetchings to // find the deleted messages
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.Folder#getObservable()	 */
WITHOUT_CLASSIFICATION	// Copy the header
WITHOUT_CLASSIFICATION	// We found the uid of a deleted message // -> remove it from the headerlist
WITHOUT_CLASSIFICATION	// Check if maybe no message at all got copied // In this case we are finished here
WITHOUT_CLASSIFICATION	// update the local flags and ensure that the MailboxInfo is correct
WITHOUT_CLASSIFICATION	// get IMAP rootfolder
WITHOUT_CLASSIFICATION	// Junk flag
WITHOUT_CLASSIFICATION	// Was this message actually copied?
WITHOUT_CLASSIFICATION	// update the HeaderList
WITHOUT_CLASSIFICATION	// We need IMAPFlags
WITHOUT_CLASSIFICATION	// update the HeaderList
WITHOUT_CLASSIFICATION	// Parser the header
WITHOUT_CLASSIFICATION	// Apply filter if enabled
WITHOUT_CLASSIFICATION	// get header with UID
WITHOUT_CLASSIFICATION	// Reenable Updating the mailbox
WITHOUT_CLASSIFICATION	// remember parent path // (this is necessary for IMAPRootFolder sync operations)
WITHOUT_CLASSIFICATION	// IMAP Folders have no own lock ,but share the lock from the Root // to ensure that only one operation can be processed simultanous
WITHOUT_CLASSIFICATION	// Since JUNK is a non-system Flag we have to set it with // an addtitional STORE command
WITHOUT_CLASSIFICATION	// Number of deleted messages is computed from exists on imap and local // newMessages
WITHOUT_CLASSIFICATION	// if "automatically apply filter" is selected & there // are // new // messages
WITHOUT_CLASSIFICATION	//cache.clear();
WITHOUT_CLASSIFICATION	// private ImapOperator operator;
WITHOUT_CLASSIFICATION	// super(node, folderItem);
WITHOUT_CLASSIFICATION	// delimiter found // -> recursively create all necessary folders to create // -> the final folder
WITHOUT_CLASSIFICATION	// if folder doesn't exist already
WITHOUT_CLASSIFICATION	// this is the final folder // subFolder = addIMAPChildFolder(parent, info, subchild);
WITHOUT_CLASSIFICATION	// recursively go on
WITHOUT_CLASSIFICATION	// no delimiter found // -> this is already the final folder // if folder doesn't exist already
WITHOUT_CLASSIFICATION	// Check the Noselect flag
WITHOUT_CLASSIFICATION	// Check the Noinferior flag
WITHOUT_CLASSIFICATION	// first remove all subfolders recursively
WITHOUT_CLASSIFICATION	// A child got removed -> stay at this position to // get the next
WITHOUT_CLASSIFICATION	// maybe remove this folder
WITHOUT_CLASSIFICATION	// Find special
WITHOUT_CLASSIFICATION	// search for a folder thats on the IMAP account // first try to find the local translation of special
WITHOUT_CLASSIFICATION	// fall back to the english version
WITHOUT_CLASSIFICATION	// we found a suitable folder -> set it
WITHOUT_CLASSIFICATION	// first clear all flags
WITHOUT_CLASSIFICATION	// create and tag all subfolders on server
WITHOUT_CLASSIFICATION	// don't care
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// fire event
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// This fixes the strange behaviour of the courier imapserver // which sets the \Noselect flag on INBOX
WITHOUT_CLASSIFICATION	// If we are online sync the subscribed folders on first // connection
WITHOUT_CLASSIFICATION	// MainInterface.processor.addOp(c);
WITHOUT_CLASSIFICATION	// Trigger synchronization of the selected Folder
WITHOUT_CLASSIFICATION	// Trigger synchronization of the IMAPFolder
WITHOUT_CLASSIFICATION	// has the imap account no trash folder using the default trash folder
WITHOUT_CLASSIFICATION	// Find old numbers
WITHOUT_CLASSIFICATION	// check for new headers
WITHOUT_CLASSIFICATION	// Get the new numbers
WITHOUT_CLASSIFICATION	// fire new message event to interested listeners
WITHOUT_CLASSIFICATION	// create reference of newly arrived messages
WITHOUT_CLASSIFICATION	// Reenable the action
WITHOUT_CLASSIFICATION	// Trigger any pending Flag syncs
WITHOUT_CLASSIFICATION	// parse line by line
WITHOUT_CLASSIFICATION	// parse line by line
WITHOUT_CLASSIFICATION	// if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	// if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	// found new message
WITHOUT_CLASSIFICATION	// this is necessary to do!
WITHOUT_CLASSIFICATION	// Do not take existing link tags into account
WITHOUT_CLASSIFICATION	// parse line by line
WITHOUT_CLASSIFICATION	// if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	// found new message
WITHOUT_CLASSIFICATION	// line contains "@" (evolution mbox style) or //  -> import message in Columba
WITHOUT_CLASSIFICATION	// found new message
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.mail.folder.mailboximport.AbstractMailboxImporter#importMailbox(java.io.File, org.columba.api.command.IWorkerStatusController) */
WITHOUT_CLASSIFICATION	// MATCH ANY
WITHOUT_CLASSIFICATION	// save last message, because while loop aborted before being able to // save message
WITHOUT_CLASSIFICATION	// save last message, because while loop aborted before being able to // save message
WITHOUT_CLASSIFICATION	// line contains "-" (mozilla mbox style) //  -> import message in Columba
WITHOUT_CLASSIFICATION	// if line doesn't start with "From ???@???" or line length is 0 //  -> save everything in StringBuffer
WITHOUT_CLASSIFICATION	// enable lucene search index by default
WITHOUT_CLASSIFICATION	// enable lucene search index by default
WITHOUT_CLASSIFICATION	// update message starts of following messages
WITHOUT_CLASSIFICATION	//delete the file containing the message in the file system
WITHOUT_CLASSIFICATION	// Could not delete the file - possibly someone has a lock on it
WITHOUT_CLASSIFICATION	// ... delete it when Columba exists instead
WITHOUT_CLASSIFICATION	// try to re-use already instanciated class
WITHOUT_CLASSIFICATION	// setup filter configuration
WITHOUT_CLASSIFICATION	// MATCH_ALL
WITHOUT_CLASSIFICATION	// Add all found virtual uids to the result
WITHOUT_CLASSIFICATION	// initialisation
WITHOUT_CLASSIFICATION	// selecting the message
WITHOUT_CLASSIFICATION	// get header with UID
WITHOUT_CLASSIFICATION	// save last message, because while loop aborted before being able to // save message
WITHOUT_CLASSIFICATION	/*		 * worker.setDisplayText( "Search Result: " +		 * notDefaultEngineResult.size() + " messages found in " +		 * (System.currentTimeMillis() - startTime) + " ms");		 */
WITHOUT_CLASSIFICATION	// A list of all files that seem to be messages (only numbers in the name) //new Object[list.length];
WITHOUT_CLASSIFICATION	// MATCH_ALL
WITHOUT_CLASSIFICATION	// result = mergeFilterResult(v, uids, match); // only for debugging purpose // printList( result );
WITHOUT_CLASSIFICATION	// filter is disabled
WITHOUT_CLASSIFICATION	// this search request is covered by the query engine
WITHOUT_CLASSIFICATION	// clear status bar message now we are done (with a delay)
WITHOUT_CLASSIFICATION	// MATCH_ANY
WITHOUT_CLASSIFICATION	// method is not needed by IMAP
WITHOUT_CLASSIFICATION	// return searchMessages(filter, null);
WITHOUT_CLASSIFICATION	// method is not needed by IMAP
WITHOUT_CLASSIFICATION	//  This list is reduced, because most search requests can be  // answered anyway, using locally cached headerfields
WITHOUT_CLASSIFICATION	// pass the work to IMAPStore
WITHOUT_CLASSIFICATION	// method is not needed by IMAP
WITHOUT_CLASSIFICATION	// method is not needed by IMAP
WITHOUT_CLASSIFICATION	// If there is an existing lock then it must be from a // previous crash -> remove it!
WITHOUT_CLASSIFICATION	// pass the work to IMAPStore
WITHOUT_CLASSIFICATION	// Check if index is consitent with mailbox
WITHOUT_CLASSIFICATION	// Remove of lock didn't work -> delete by hand
WITHOUT_CLASSIFICATION	// Search again
WITHOUT_CLASSIFICATION	// Find all VirtualFolders and rewrite the FolderReference
WITHOUT_CLASSIFICATION	// show neat error dialog here
WITHOUT_CLASSIFICATION	// Find the body text part
WITHOUT_CLASSIFICATION	// current position in s
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// already handled
WITHOUT_CLASSIFICATION	//super.removeFolder(); // do nothing
WITHOUT_CLASSIFICATION	// Check if the parentfolder is remote & we are online				
WITHOUT_CLASSIFICATION	// only called by FolderTreeModel.createDirectories() and FolderTreeModel.add()
WITHOUT_CLASSIFICATION	// Analyze the Filter
WITHOUT_CLASSIFICATION	// If no flags filter the seach is still valid
WITHOUT_CLASSIFICATION	// redo the seach for the flags criteria
WITHOUT_CLASSIFICATION	// (tstich) reduced to 3 because all need to be // search when activated on startup // we only want 3 subfolders // -> if more children exist remove them
WITHOUT_CLASSIFICATION	// create new subfolder
WITHOUT_CLASSIFICATION	// if creation failed
WITHOUT_CLASSIFICATION	// copy all properties to the subfolder
WITHOUT_CLASSIFICATION	// lets find a good name for our new vfolder
WITHOUT_CLASSIFICATION	// update tree-view
WITHOUT_CLASSIFICATION	// get source folder reference
WITHOUT_CLASSIFICATION	// get source folder reference
WITHOUT_CLASSIFICATION	// VirtualMessage m = new VirtualMessage(f, uid, index);
WITHOUT_CLASSIFICATION	// Check if all uids are still exisiting
WITHOUT_CLASSIFICATION	// change to new folder
WITHOUT_CLASSIFICATION	// remove from source folder
WITHOUT_CLASSIFICATION	// remove from virtual folder
WITHOUT_CLASSIFICATION	// Now we can search this folder since no mail from // this folder will come in the list
WITHOUT_CLASSIFICATION	// Create a src uid array
WITHOUT_CLASSIFICATION	// Create a src uid array
WITHOUT_CLASSIFICATION	// search the src folder with the src uid array
WITHOUT_CLASSIFICATION	// search the src folder with the src uid array
WITHOUT_CLASSIFICATION	// Convert the src uids back to virtual uids
WITHOUT_CLASSIFICATION	// Convert the src uids back to virtual uids
WITHOUT_CLASSIFICATION	// Add all found virtual uids to the result
WITHOUT_CLASSIFICATION	// Add this header to the list for later searching
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// get header with UID
WITHOUT_CLASSIFICATION	// Check if all uids are still exisiting
WITHOUT_CLASSIFICATION	// change to new folder
WITHOUT_CLASSIFICATION	// can be an email address in a link BUG CA-174 // fix that with looking for an open link in the same line before // on the way from left to the current position of the email at s1 // find the last open link <a
WITHOUT_CLASSIFICATION	// First try to get the lock of the virtual folder
WITHOUT_CLASSIFICATION	/*		 * ColumbaHeader header = (ColumbaHeader) headerList.get(uid);		 * header.getAttributes().put(key, value);		 */
WITHOUT_CLASSIFICATION	// We need to get the locks of all folders
WITHOUT_CLASSIFICATION	// not supported
WITHOUT_CLASSIFICATION	// not supported
WITHOUT_CLASSIFICATION	// deactivate the folder
WITHOUT_CLASSIFICATION	// Copy the rest
WITHOUT_CLASSIFICATION	// Update the Virtual Header
WITHOUT_CLASSIFICATION	// fire updates
WITHOUT_CLASSIFICATION	// create scrollapen
WITHOUT_CLASSIFICATION	// don't care
WITHOUT_CLASSIFICATION	// shall we insert a link?
WITHOUT_CLASSIFICATION	// not supported by virtual folder
WITHOUT_CLASSIFICATION	// global option
WITHOUT_CLASSIFICATION	// use folder specific options
WITHOUT_CLASSIFICATION	// create element if not available
WITHOUT_CLASSIFICATION	// check if this folder is overwriting global options
WITHOUT_CLASSIFICATION	// use folder-based options
WITHOUT_CLASSIFICATION	// use global options
WITHOUT_CLASSIFICATION	// only local options have overwrite attribute
WITHOUT_CLASSIFICATION	// check if there are columns which need to be saved
WITHOUT_CLASSIFICATION	// remove all child nodes
WITHOUT_CLASSIFICATION	// save width
WITHOUT_CLASSIFICATION	// add columns
WITHOUT_CLASSIFICATION	// add column to JTable column model
WITHOUT_CLASSIFICATION	//tc.setModelIndex(position);
WITHOUT_CLASSIFICATION	// resize column width
WITHOUT_CLASSIFICATION	// these are the items, enabled as default
WITHOUT_CLASSIFICATION	// TableView view = tableController.getView();
WITHOUT_CLASSIFICATION	// should we re-use the last remembered selection?
WITHOUT_CLASSIFICATION	// sorting order
WITHOUT_CLASSIFICATION	// row count
WITHOUT_CLASSIFICATION	// row count == 0 --> empty table
WITHOUT_CLASSIFICATION	// if the last selection for the current folder is null, then we show // the // first/last message in the table and scroll to it.
WITHOUT_CLASSIFICATION	// changing the selection to the first/last row based on ascending // state
WITHOUT_CLASSIFICATION	// no messages in this folder
WITHOUT_CLASSIFICATION	// no messages in this folder
WITHOUT_CLASSIFICATION	// if a lastSelection for this folder is set // getting the last selected uid
WITHOUT_CLASSIFICATION	// this message doesn't exit in this folder anymore
WITHOUT_CLASSIFICATION	// init plugin handler
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// use folder specific options
WITHOUT_CLASSIFICATION	// check if this folder is overwriting global options
WITHOUT_CLASSIFICATION	// use folder-based options
WITHOUT_CLASSIFICATION	// use global options
WITHOUT_CLASSIFICATION	// get list of plugins
WITHOUT_CLASSIFICATION	// get list of plugins
WITHOUT_CLASSIFICATION	// if no folder was passed as argument, use global options
WITHOUT_CLASSIFICATION	// load plugin
WITHOUT_CLASSIFICATION	// create default configuration
WITHOUT_CLASSIFICATION	// use global settings
WITHOUT_CLASSIFICATION	// notify observers (sorting state submenu)
WITHOUT_CLASSIFICATION	// if we search in The MessageConroller
WITHOUT_CLASSIFICATION	// get the message controller
WITHOUT_CLASSIFICATION	// *20030614, karlpeder* In main view only enabled when // message(s) selected
WITHOUT_CLASSIFICATION	// check if we should use the folder-based configuration // or the global table configuration
WITHOUT_CLASSIFICATION	// toolbar text
WITHOUT_CLASSIFICATION	// check for new messages
WITHOUT_CLASSIFICATION	// send all unsent messages found in Outbox
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// model -> view
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// set small icon for menu // putValue(SMALL_ICON, ImageLoader.getImageIcon("stock_convert-16.png"));
WITHOUT_CLASSIFICATION	// "menu_edit_findagain_tooltip").replaceAll("&", ""));
WITHOUT_CLASSIFICATION	// @author Erich Schaer, Dmytro Podalyuk
WITHOUT_CLASSIFICATION	// if no account exists, return
WITHOUT_CLASSIFICATION	// Global # 1
WITHOUT_CLASSIFICATION	// West Europe # 4
WITHOUT_CLASSIFICATION	// East Europe # 10
WITHOUT_CLASSIFICATION	// East Asian # 17
WITHOUT_CLASSIFICATION	// West Asian # 30
WITHOUT_CLASSIFICATION	// protected CharsetMenuItem selectedMenuItem = new CharsetMenuItem(null);
WITHOUT_CLASSIFICATION	//setIcon(ImageLoader.getImageIcon("stock_font_16.png"));
WITHOUT_CLASSIFICATION	// Automatic Generation of Groups
WITHOUT_CLASSIFICATION	// selectedMenuItem.setCharset(e.getCharset());
WITHOUT_CLASSIFICATION	// init model (defaults to empty plain text message)
WITHOUT_CLASSIFICATION	// init controllers for different parts of the composer
WITHOUT_CLASSIFICATION	// listen to changes in the Subject to update the title bar // of the message composer window
WITHOUT_CLASSIFICATION	// composer can either edit in html or plain text mode // listen for configuration changes
WITHOUT_CLASSIFICATION	// init controller for the editor depending on message type
WITHOUT_CLASSIFICATION	// add JPanel with useful HTML related actions.
WITHOUT_CLASSIFICATION	// Hack to ensure charset is set correctly at start-up
WITHOUT_CLASSIFICATION	// ignore this
WITHOUT_CLASSIFICATION	// Setup DnD for the text and attachment list control.
WITHOUT_CLASSIFICATION	// create default element if not available
WITHOUT_CLASSIFICATION	// set model based on configuration
WITHOUT_CLASSIFICATION	// remove all components from container
WITHOUT_CLASSIFICATION	// re-add all top components like recipient editor/subject editor
WITHOUT_CLASSIFICATION	// if message contains attachments
WITHOUT_CLASSIFICATION	// show signature viewer
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// create splitpane containing the bodytext editor and the // attachment panel
WITHOUT_CLASSIFICATION	// add splitpane to the center
WITHOUT_CLASSIFICATION	// ViewItem viewItem = getViewItem();
WITHOUT_CLASSIFICATION	// no attachments // -> only show bodytext editor
WITHOUT_CLASSIFICATION	// no attachments // -> only show bodytext editor
WITHOUT_CLASSIFICATION	// re-paint composer-view
WITHOUT_CLASSIFICATION	// update panel
WITHOUT_CLASSIFICATION	/*		 * return isToolbarEnabled(ACCOUNTINFOPANEL);		 */
WITHOUT_CLASSIFICATION	// update ComposerModel based on user-changes in ComposerView
WITHOUT_CLASSIFICATION	// show attachment panel if necessary
WITHOUT_CLASSIFICATION	// Update all component according to the new model
WITHOUT_CLASSIFICATION	// sync model with the current (old) view
WITHOUT_CLASSIFICATION	// convert body text to comply with new editor format
WITHOUT_CLASSIFICATION	// switch editor and resync view with model
WITHOUT_CLASSIFICATION	// sync view with new update to date model
WITHOUT_CLASSIFICATION	// change ui container
WITHOUT_CLASSIFICATION	// enable/disable html toolbar
WITHOUT_CLASSIFICATION	// only prompt user, if composer contains some text
WITHOUT_CLASSIFICATION	// close Columba, if composer is only visible frame
WITHOUT_CLASSIFICATION	// default button title
WITHOUT_CLASSIFICATION	// save changes
WITHOUT_CLASSIFICATION	// close composer
WITHOUT_CLASSIFICATION	// close composer
WITHOUT_CLASSIFICATION	// cancel question dialog and don't close composer
WITHOUT_CLASSIFICATION	// save charset
WITHOUT_CLASSIFICATION	// save html state
WITHOUT_CLASSIFICATION	// hide signature viewer
WITHOUT_CLASSIFICATION	// original: "^[a-zA-Z0-9]+@[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,4}+$";
WITHOUT_CLASSIFICATION	// make sure that JFrame is not closed automatically // -> we want to prompt the user to save his work
WITHOUT_CLASSIFICATION	// Display error ? // As it is inmutable
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.frapuccino.addresscombobox.PatternSeparatedAutoCompleter#acceptedListItem(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	//private ImageIcon image2 = null; //private ImageIcon image3 = null;
WITHOUT_CLASSIFICATION	// default ~ plain text
WITHOUT_CLASSIFICATION	// set message
WITHOUT_CLASSIFICATION	// set whether the model should handle html or plain text
WITHOUT_CLASSIFICATION	// more initialization
WITHOUT_CLASSIFICATION	// notifyListeners();
WITHOUT_CLASSIFICATION	// notifyListeners();
WITHOUT_CLASSIFICATION	/*			 * *20030917, karlpeder* Set the model to html or text based on the			 * body specified on the command line. This is done using a simple			 * check: Does the body contain <html> and </html>			 */
WITHOUT_CLASSIFICATION	// set the body text
WITHOUT_CLASSIFICATION	// if this is no URI
WITHOUT_CLASSIFICATION	// Remove leading space after the separator character so that it is not removed from the text component's document, below. 
WITHOUT_CLASSIFICATION	// Surround the selected element with double-quotes, if necessary
WITHOUT_CLASSIFICATION	// clear autocomplete hashmap
WITHOUT_CLASSIFICATION	// fill hashmap with all available contacts and groups
WITHOUT_CLASSIFICATION	// view.table.getModel().addTableModelListener(this);
WITHOUT_CLASSIFICATION	// skip empty strings
WITHOUT_CLASSIFICATION	//setText(accountName);
WITHOUT_CLASSIFICATION	//view.setSelectedItem( model.getHeaderField("X-Priority") );
WITHOUT_CLASSIFICATION	//model.setHeaderField("X-Priority",(String) view.getSelectedItem());
WITHOUT_CLASSIFICATION	//setModel(listModel);
WITHOUT_CLASSIFICATION	//setCellRenderer(new ListRenderer());
WITHOUT_CLASSIFICATION	//      Get Tooltip for Icon
WITHOUT_CLASSIFICATION	// remove from model
WITHOUT_CLASSIFICATION	// remove from view
WITHOUT_CLASSIFICATION	// clear model
WITHOUT_CLASSIFICATION	// clear view
WITHOUT_CLASSIFICATION	// pass contact data along to AddressComboBox
WITHOUT_CLASSIFICATION	/*			 * encryptMenuItem.setSelected(model.isEncryptMessage());			 * signMenuItem.setSelected(model.isSignMessage());			 */
WITHOUT_CLASSIFICATION	// view.addListSelectionListener(this);
WITHOUT_CLASSIFICATION	// transfer attachments from model to view
WITHOUT_CLASSIFICATION	/*			 * clear existing attachments from the view *20031105, karlpeder*			 * Added to avoid dupplicating attachments when switching btw. html			 * and plain text.			 */
WITHOUT_CLASSIFICATION	// add attachments (mimeparts) from model to the view
WITHOUT_CLASSIFICATION	// transfer attachments from view to model // clear existing attachments from the model
WITHOUT_CLASSIFICATION	// add attachments (mimeparts) from view to the model
WITHOUT_CLASSIFICATION	// hide/show attachment panel
WITHOUT_CLASSIFICATION	// attachment controller doesn't support copy-operation
WITHOUT_CLASSIFICATION	// attachment controller doesn't support copy actions
WITHOUT_CLASSIFICATION	// attachment controller doesn't support paste actions
WITHOUT_CLASSIFICATION	// attachment controller doesn't support redo operation
WITHOUT_CLASSIFICATION	// attachment controller doesn't support undo operation
WITHOUT_CLASSIFICATION	// attachment controller doesn't support undo operation
WITHOUT_CLASSIFICATION	// view.setSelectionInterval(0, view.count() - 1);
WITHOUT_CLASSIFICATION	// FocusManager.getInstance().updateActions();
WITHOUT_CLASSIFICATION	//	name of font
WITHOUT_CLASSIFICATION	// size of font
WITHOUT_CLASSIFICATION	// currently used font
WITHOUT_CLASSIFICATION	// font configuration
WITHOUT_CLASSIFICATION	// overwrite look and feel font settings
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// fonts
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	/*     * Gets fired if configuration has changed.     *     * @see org.columba.mail.gui.config.general.MailOptionsDialog     *     * @see java.util.Observer#update(java.util.Observable, java.lang.Object)     */
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// "menu_edit_findagain_tooltip").replaceAll("&", ""));
WITHOUT_CLASSIFICATION	// @author Erich Schaer, Dmytro Podalyuk
WITHOUT_CLASSIFICATION	// overwrite look and feel font settings
WITHOUT_CLASSIFICATION	// register for configuration changes
WITHOUT_CLASSIFICATION	// ********** Methods necessary to hide view from clients ********
WITHOUT_CLASSIFICATION	// use default font settings
WITHOUT_CLASSIFICATION	// setBorder(BorderFactory.createCompoundBorder(BorderFactory // .createEmptyBorder(5, 5, 5, 5), BorderFactory // .createCompoundBorder(new RoundedBorder( // new Color(220, 220, 220)), BorderFactory // .createEmptyBorder(5, 5, 5, 5))));
WITHOUT_CLASSIFICATION	// textPane.setEnabled(false);
WITHOUT_CLASSIFICATION	// register interest on configuration changes
WITHOUT_CLASSIFICATION	// if account selection changes, reload signature file
WITHOUT_CLASSIFICATION	// add listener to changes
WITHOUT_CLASSIFICATION	// add listener to changes
WITHOUT_CLASSIFICATION	// remove listener from old account selection
WITHOUT_CLASSIFICATION	//SubjectDialog dialog = new SubjectDialog(composerInterface.composerFrame);
WITHOUT_CLASSIFICATION	// view data ->model
WITHOUT_CLASSIFICATION	// get selected account
WITHOUT_CLASSIFICATION	// get "Drafts" folder of account
WITHOUT_CLASSIFICATION	// check if we are currently editing a draft message
WITHOUT_CLASSIFICATION	// -> we need to replace old message
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// Add components to the panel:
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// create command
WITHOUT_CLASSIFICATION	// toolbar text
WITHOUT_CLASSIFICATION	// toolbar text
WITHOUT_CLASSIFICATION	// view data ->model
WITHOUT_CLASSIFICATION	// delete source message
WITHOUT_CLASSIFICATION	// mark as read, mark as draft
WITHOUT_CLASSIFICATION	// create command reference
WITHOUT_CLASSIFICATION	// disable text in toolbar
WITHOUT_CLASSIFICATION	// disable text in toolbar
WITHOUT_CLASSIFICATION	//shortcut key
WITHOUT_CLASSIFICATION	//shortcut key
WITHOUT_CLASSIFICATION	//String checked = //	composerController.getComposerSpellCheck().checkText( //		composerController.getEditorController().getView().getText());
WITHOUT_CLASSIFICATION	//composerController.getEditorController().getView().setText(checked);
WITHOUT_CLASSIFICATION	// update view accordingly
WITHOUT_CLASSIFICATION	// small icon for menu //putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("send-later-16.png"));
WITHOUT_CLASSIFICATION	//      -> get source reference of message // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// mark message as answered
WITHOUT_CLASSIFICATION	// close composer view
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// Runs on the event-dispatching thread.
WITHOUT_CLASSIFICATION	// required for SwingWorker 3
WITHOUT_CLASSIFICATION	//setEnabled(false);
WITHOUT_CLASSIFICATION	//setEnabled(false);
WITHOUT_CLASSIFICATION	//getFrameController().close();
WITHOUT_CLASSIFICATION	/*        composerInterface.composerController.saveWindowPosition();        composerInterface.composerController.hideComposerWindow();        */
WITHOUT_CLASSIFICATION	//ComposerModel model = (ComposerModel) // ((ComposerController)getFrameController()).getModel();
WITHOUT_CLASSIFICATION	// open composer frame
WITHOUT_CLASSIFICATION	// apply model
WITHOUT_CLASSIFICATION	// model->view update
WITHOUT_CLASSIFICATION	// get first selected message
WITHOUT_CLASSIFICATION	// get headerfields
WITHOUT_CLASSIFICATION	// create composer model
WITHOUT_CLASSIFICATION	// create composer model
WITHOUT_CLASSIFICATION	//      ->set source reference in composermodel // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// set subject
WITHOUT_CLASSIFICATION	// initialize MimeHeader as RFC822-compliant-message
WITHOUT_CLASSIFICATION	// add mimepart to model
WITHOUT_CLASSIFICATION	// setup to, references and account
WITHOUT_CLASSIFICATION	// get mimeparts
WITHOUT_CLASSIFICATION	// setup charset and html
WITHOUT_CLASSIFICATION	/*			 * *20040210, karlpeder* Remove html comments - they are not			 * displayed properly in the composer			 */
WITHOUT_CLASSIFICATION	//  add all attachments
WITHOUT_CLASSIFICATION	// skip if bodypart (already added as quoted text)
WITHOUT_CLASSIFICATION	// add attachment
WITHOUT_CLASSIFICATION	// builder.setLeadingColumnOffset(2);
WITHOUT_CLASSIFICATION	// get first selected message
WITHOUT_CLASSIFICATION	// get headerfields
WITHOUT_CLASSIFICATION	// create composer model
WITHOUT_CLASSIFICATION	// set subject
WITHOUT_CLASSIFICATION	// set subject
WITHOUT_CLASSIFICATION	// setup to, references and account
WITHOUT_CLASSIFICATION	// get mimeparts
WITHOUT_CLASSIFICATION	// Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	// setup charset and html
WITHOUT_CLASSIFICATION	// Select the charset of the original message
WITHOUT_CLASSIFICATION	// Stick with the default charset
WITHOUT_CLASSIFICATION	// Do decoding stuff
WITHOUT_CLASSIFICATION	// Quote original message - different methods for text and html
WITHOUT_CLASSIFICATION	// build "quoted" message
WITHOUT_CLASSIFICATION	// comments are not displayed // correctly in composer
WITHOUT_CLASSIFICATION	// Text: Addition of > before each line
WITHOUT_CLASSIFICATION	// ->set source reference in composermodel // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// get answer from template
WITHOUT_CLASSIFICATION	// template folder has uid=107
WITHOUT_CLASSIFICATION	// retrieve headerlist of tempate folder
WITHOUT_CLASSIFICATION	// choose template
WITHOUT_CLASSIFICATION	// user pressed OK
WITHOUT_CLASSIFICATION	// get bodytext of template message
WITHOUT_CLASSIFICATION	// *20030926, karlpeder* Added html support // MimePart mp = tree.getFirstTextPart("plain");
WITHOUT_CLASSIFICATION	// Add all recipients to the collected addresses
WITHOUT_CLASSIFICATION	// From which account is this mail?
WITHOUT_CLASSIFICATION	// remove duplicates
WITHOUT_CLASSIFICATION	// Add addresses to the addressbook
WITHOUT_CLASSIFICATION	// create In-Reply-To:, References: headerfields
WITHOUT_CLASSIFICATION	// select the account this mail was received from
WITHOUT_CLASSIFICATION	// open composer frame
WITHOUT_CLASSIFICATION	// apply model
WITHOUT_CLASSIFICATION	// model->view update
WITHOUT_CLASSIFICATION	// get first selected message
WITHOUT_CLASSIFICATION	// get headerfields
WITHOUT_CLASSIFICATION	// create composer model
WITHOUT_CLASSIFICATION	// set subject
WITHOUT_CLASSIFICATION	// setup to, references and account
WITHOUT_CLASSIFICATION	// get mimeparts
WITHOUT_CLASSIFICATION	// Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	// setup charset and html
WITHOUT_CLASSIFICATION	/*			 * *20040210, karlpeder* Remove html comments - they are not			 * displayed properly in the composer			 */
WITHOUT_CLASSIFICATION	// skip if bodypart (already added as quoted text)
WITHOUT_CLASSIFICATION	// add attachment
WITHOUT_CLASSIFICATION	// Select the charset of the original message
WITHOUT_CLASSIFICATION	// Stick with the default charset
WITHOUT_CLASSIFICATION	// Do decoding stuff
WITHOUT_CLASSIFICATION	// ->set source reference in composermodel // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// create In-Reply-To:, References: headerfields
WITHOUT_CLASSIFICATION	// select the account this mail was received from
WITHOUT_CLASSIFICATION	// Use reply-to field if given, else use from
WITHOUT_CLASSIFICATION	// get selected messages
WITHOUT_CLASSIFICATION	// we only need the first message
WITHOUT_CLASSIFICATION	// get message flags
WITHOUT_CLASSIFICATION	// store reference to source message
WITHOUT_CLASSIFICATION	// html
WITHOUT_CLASSIFICATION	// copy every headerfield the original message contains
WITHOUT_CLASSIFICATION	// Get all MimeParts
WITHOUT_CLASSIFICATION	// add all attachments
WITHOUT_CLASSIFICATION	// set subject ; mod:20040629 SWITT
WITHOUT_CLASSIFICATION	// set From for redirecting; new: 20040629 SWITT
WITHOUT_CLASSIFICATION	// Html: Insertion of text before and after original message
WITHOUT_CLASSIFICATION	// build message orginal ; mod:2004629 SWITT
WITHOUT_CLASSIFICATION	// Text: take org. message; mod:20040629 SWITT
WITHOUT_CLASSIFICATION	// open composer frame
WITHOUT_CLASSIFICATION	// apply model
WITHOUT_CLASSIFICATION	// model->view update
WITHOUT_CLASSIFICATION	// get first selected message
WITHOUT_CLASSIFICATION	// get headerfields
WITHOUT_CLASSIFICATION	// create composer model
WITHOUT_CLASSIFICATION	//      ->set source reference in composermodel // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// set subject
WITHOUT_CLASSIFICATION	// initialize MimeHeader as RFC822-compliant-message
WITHOUT_CLASSIFICATION	// add mimepart to model
WITHOUT_CLASSIFICATION	// setup to, references and account
WITHOUT_CLASSIFICATION	// get mimeparts
WITHOUT_CLASSIFICATION	// Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	// setup charset and html
WITHOUT_CLASSIFICATION	// Select the charset of the original message
WITHOUT_CLASSIFICATION	// Stick with the default charset
WITHOUT_CLASSIFICATION	// Quote original message - different methods for text and html
WITHOUT_CLASSIFICATION	// build "quoted" message
WITHOUT_CLASSIFICATION	// Text: Addition of > before each line
WITHOUT_CLASSIFICATION	// ->set source reference in composermodel // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// Add addresses to the addressbook
WITHOUT_CLASSIFICATION	// create In-Reply-To:, References: headerfields
WITHOUT_CLASSIFICATION	// select the account this mail was received from
WITHOUT_CLASSIFICATION	// Use reply-to field if given, else use from
WITHOUT_CLASSIFICATION	// Set the focus to the editor pane and set cursor to the top
WITHOUT_CLASSIFICATION	// 	Stick with the default charset
WITHOUT_CLASSIFICATION	// recipient lists
WITHOUT_CLASSIFICATION	// addressbook list
WITHOUT_CLASSIFICATION	// action buttons for moving contacts
WITHOUT_CLASSIFICATION	// labels
WITHOUT_CLASSIFICATION	// models for addressbook/recipients lists
WITHOUT_CLASSIFICATION	// b2.nextLine();
WITHOUT_CLASSIFICATION	// comments are not displayed // correctly in composer
WITHOUT_CLASSIFICATION	/*	 * public IHeaderItemList[] getHeaderItemLists() { return headerItemList; }	 */
WITHOUT_CLASSIFICATION	//			toListModel.clear(); //			ccListModel.clear(); //			bccListModel.clear();
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// register for changes to the editor // controller.addContainerListenerForEditor(this);
WITHOUT_CLASSIFICATION	// register for changes to editor type (text / html)
WITHOUT_CLASSIFICATION	// CellConstraints cc = new CellConstraints();
WITHOUT_CLASSIFICATION	// we generate most buttons using the actions already instanciated
WITHOUT_CLASSIFICATION	// paragraphComboBox.setEnabled(enableHtml);
WITHOUT_CLASSIFICATION	// builder.add(paraLabel, cc.xy(1, 7));
WITHOUT_CLASSIFICATION	// builder.add(panel, cc.xy(1, 7));
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// need to change selection // Set ignore flag
WITHOUT_CLASSIFICATION	// clear ignore flag
WITHOUT_CLASSIFICATION	// selection in the paragraph combo box
WITHOUT_CLASSIFICATION	// only do something if ignore flag is not set
WITHOUT_CLASSIFICATION	// set paragraph formatting according to the selection
WITHOUT_CLASSIFICATION	// int selectedIndex = sizeComboBox.getSelectedIndex();
WITHOUT_CLASSIFICATION	// select the "Normal" entry as default
WITHOUT_CLASSIFICATION	// enable controls if we are not in html edit mode
WITHOUT_CLASSIFICATION	// private JTextPane view;
WITHOUT_CLASSIFICATION	// view = editor.getView();
WITHOUT_CLASSIFICATION	// // This doesn't handle ChangedCharsetExceptions correctly. // view.setText(text);
WITHOUT_CLASSIFICATION	// try again, but ignore charset specification in the html
WITHOUT_CLASSIFICATION	// other IOExceptions than ChangedCharsetException
WITHOUT_CLASSIFICATION	// clear existing text
WITHOUT_CLASSIFICATION	// delete old contents
WITHOUT_CLASSIFICATION	// if no text is specified, we are done now
WITHOUT_CLASSIFICATION	// load contents into document
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// select the "Normal" entry as default
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// register for model changes to enable/disable when // user switches between html or text plain mode
WITHOUT_CLASSIFICATION	// register for text cursor/caret and formatting changes // to select/deselect action
WITHOUT_CLASSIFICATION	// register for text cursor/caret and formatting changes // to select/deselect action
WITHOUT_CLASSIFICATION	//  view.addCaretListener(this);
WITHOUT_CLASSIFICATION	// set paragraph formatting according to the given action
WITHOUT_CLASSIFICATION	// Enable when implemented
WITHOUT_CLASSIFICATION	// select the menu item corresponding to present format
WITHOUT_CLASSIFICATION	// Update the composer
WITHOUT_CLASSIFICATION	// reset
WITHOUT_CLASSIFICATION	// group item
WITHOUT_CLASSIFICATION	// to lower case
WITHOUT_CLASSIFICATION	// compare if item starts with str
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// END public ExternalEditor()
WITHOUT_CLASSIFICATION	// END public ExternalEditor(String EditorCommand)
WITHOUT_CLASSIFICATION	// write text to file
WITHOUT_CLASSIFICATION	// remember old font properties
WITHOUT_CLASSIFICATION	// create big size font to display in the composer textfield
WITHOUT_CLASSIFICATION	// execute application, enabling blocking
WITHOUT_CLASSIFICATION	// rafter the user saved the file and closed the // external text editor, we read the new text from the file
WITHOUT_CLASSIFICATION	// set old font properties
WITHOUT_CLASSIFICATION	// set new text
WITHOUT_CLASSIFICATION	// END public boolean startExternalEditor()
WITHOUT_CLASSIFICATION	// END public class ExternalEditor
WITHOUT_CLASSIFICATION	//dialog.getContentPane().setLayout( new BoxLayout( dialog.getContentPane(), BoxLayout.Y_AXIS ) );
WITHOUT_CLASSIFICATION	//centerPanel.setLayout( new BoxLayout( centerPanel, BoxLayout.Y_AXIS ) );
WITHOUT_CLASSIFICATION	/*TitledBorder etched = javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), " Login ");centerPanel.setBorder( etched );*/
WITHOUT_CLASSIFICATION	//centerPanel.add( Box.createRigidArea( new java.awt.Dimension(0,5) ) );
WITHOUT_CLASSIFICATION	/*JPanel panel = new JPanel();panel.setLayout( new BoxLayout( panel, BoxLayout.X_AXIS ) );panel.add( hostLabel );centerPanel.add( panel );*/
WITHOUT_CLASSIFICATION	//centerPanel.add( Box.createRigidArea( new java.awt.Dimension(0,5) ) ); //centerPanel.add( Box.createRigidArea( new java.awt.Dimension(0,5) ) );
WITHOUT_CLASSIFICATION	//Plain text components don't fire these events
WITHOUT_CLASSIFICATION	// First print a quote
WITHOUT_CLASSIFICATION	// Do we have to insert a quoteprefix?
WITHOUT_CLASSIFICATION	//		 for each JComboBox item
WITHOUT_CLASSIFICATION	//$NON-NLS-1$		
WITHOUT_CLASSIFICATION	//$NON-NLS-1$			
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// check if the user entered valid data
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// defaultAccountCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	// attributPanel.add(imapPanel, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	/*		 * mainConstraints.fill = GridBagConstraints.BOTH;		 * mainConstraints.insets = new Insets(0, 0, 0, 0);		 * mainConstraints.gridwidth = GridBagConstraints.REMAINDER;		 * mainConstraints.weightx = 1.0; mainConstraints.weighty = 1.0;		 */
WITHOUT_CLASSIFICATION	// disable components
WITHOUT_CLASSIFICATION	// update configuration
WITHOUT_CLASSIFICATION	// update signature -> will notify all listeners that signature changed
WITHOUT_CLASSIFICATION	// mainPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 10, 0));
WITHOUT_CLASSIFICATION	// update tree label
WITHOUT_CLASSIFICATION	// @author: fdietz
WITHOUT_CLASSIFICATION	// notify all observers
WITHOUT_CLASSIFICATION	// here)
WITHOUT_CLASSIFICATION	// restart timer
WITHOUT_CLASSIFICATION	//Create the file
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them
WITHOUT_CLASSIFICATION	// user didn't select any folder // -> make Inbox the default folder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// skip the first column
WITHOUT_CLASSIFICATION	// skip the first column
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them // here)
WITHOUT_CLASSIFICATION	/*		 * mainConstraints.fill = GridBagConstraints.BOTH;		 * mainConstraints.insets = new Insets(0, 0, 0, 0);		 * mainConstraints.gridwidth = GridBagConstraints.REMAINDER;		 * mainConstraints.weightx = 1.0; mainConstraints.weighty = 1.0;		 */
WITHOUT_CLASSIFICATION	// defaultAccountCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	// defaultAccountCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	// user didn't select any folder // -> make Inbox the default folder
WITHOUT_CLASSIFICATION	// Add components to the panel: //		builder.append(defaultAccountCheckBox, 7); //		builder.nextLine();
WITHOUT_CLASSIFICATION	// builder.setLeadingColumnOffset(1);
WITHOUT_CLASSIFICATION	// builder.setLeadingColumnOffset(1);
WITHOUT_CLASSIFICATION	// builder.setLeadingColumnOffset(1);
WITHOUT_CLASSIFICATION	// builder.nextLine();
WITHOUT_CLASSIFICATION	// builder.nextLine();
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need // to // define them here)
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need // to // define them here)
WITHOUT_CLASSIFICATION	// b.nextLine(); // b.append(loginLabel, loginTextField);
WITHOUT_CLASSIFICATION	// authenticationComboBox.addActionListener(this);
WITHOUT_CLASSIFICATION	// Add previously fetch authentication modes
WITHOUT_CLASSIFICATION	// Add previously fetch authentication modes
WITHOUT_CLASSIFICATION	// let exception handler process other errors
WITHOUT_CLASSIFICATION	// Save the authentication modes
WITHOUT_CLASSIFICATION	// private ConfigFrame frame;
WITHOUT_CLASSIFICATION	// disable the actionlistener for this period // to avoid an unwanted port check
WITHOUT_CLASSIFICATION	// reactivate
WITHOUT_CLASSIFICATION	// if securest write DEFAULT
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to // define them here)
WITHOUT_CLASSIFICATION	// Update the Port
WITHOUT_CLASSIFICATION	// Default Port
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// skip the first column
WITHOUT_CLASSIFICATION	// skip the first column
WITHOUT_CLASSIFICATION	// Add components to the panel:
WITHOUT_CLASSIFICATION	// Add components to the panel:
WITHOUT_CLASSIFICATION	//does not occur
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them // here)
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them // here)
WITHOUT_CLASSIFICATION	// let exception handler process other errors
WITHOUT_CLASSIFICATION	// let exception handler process other errors
WITHOUT_CLASSIFICATION	// Save the authentication modes
WITHOUT_CLASSIFICATION	// POP3s / IMAPs
WITHOUT_CLASSIFICATION	// Check for default Ports
WITHOUT_CLASSIFICATION	/* accountItem.getPopItem() */
WITHOUT_CLASSIFICATION	//private ConfigFrame frame;
WITHOUT_CLASSIFICATION	//this.frame = frame;
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	// 3 columns // rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	//b.append(selectSignatureButton);
WITHOUT_CLASSIFICATION	/*         * JPanel innerPanel = builder.getPanel();         * FormDebugUtils.dumpAll(innerPanel); setLayout(new BorderLayout());         * add(innerPanel, BorderLayout.CENTER);         */
WITHOUT_CLASSIFICATION	//enableCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	/*		 * builder.append(alwaysEncryptCheckBox, 3); builder.nextLine();		 */
WITHOUT_CLASSIFICATION	//typeComboBox.setMargin( new Insets( 0,0,0,0 ) );
WITHOUT_CLASSIFICATION	//pathButton.setMargin( new Insets( 0,0,0,0 ) );
WITHOUT_CLASSIFICATION	//typeComboBox.setEnabled(b);
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// MUST do this for background to show up.
WITHOUT_CLASSIFICATION	// top panel
WITHOUT_CLASSIFICATION	// topPanel.setLayout( );
WITHOUT_CLASSIFICATION	// mainPanel.add( topBorderPanel, BorderLayout.NORTH );
WITHOUT_CLASSIFICATION	// c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	// notify all observers
WITHOUT_CLASSIFICATION	// String value = (String) theList.getSelectedValue();
WITHOUT_CLASSIFICATION	// remove mail-checking stuff
WITHOUT_CLASSIFICATION	//MUST do this for background to show up.
WITHOUT_CLASSIFICATION	//setBorder( BorderFactory.createEmptyBorder(0,1,0,0) );
WITHOUT_CLASSIFICATION	// setBorder(unselectedBorder);
WITHOUT_CLASSIFICATION	// this should not happen, the templates seem to be missing
WITHOUT_CLASSIFICATION	//				IMAPRootFolder parentFolder = FolderFactory.getInstance() //						.createIMAPRootFolder(account); //				IMailFolder inbox = FolderFactory.getInstance() //						.createIMAPFolder(parentFolder, "INBOX");
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	// execute the command
WITHOUT_CLASSIFICATION	// top panel
WITHOUT_CLASSIFICATION	// topPanel.setLayout( );
WITHOUT_CLASSIFICATION	// topBorderPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, // 0));
WITHOUT_CLASSIFICATION	// c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	// notify all observers
WITHOUT_CLASSIFICATION	// add welcome message to new account inbox
WITHOUT_CLASSIFICATION	// add account to mail-checking manager
WITHOUT_CLASSIFICATION	// generally we can just use the same login for both servers
WITHOUT_CLASSIFICATION	// get column of list
WITHOUT_CLASSIFICATION	// find colum
WITHOUT_CLASSIFICATION	// remove disabled column
WITHOUT_CLASSIFICATION	// make sure this configuration is also visually working immediately
WITHOUT_CLASSIFICATION	// list.repaint();
WITHOUT_CLASSIFICATION	// disable selected item
WITHOUT_CLASSIFICATION	// ask the user about the destination file
WITHOUT_CLASSIFICATION	// get list of all folders
WITHOUT_CLASSIFICATION	// get list of all selected folders
WITHOUT_CLASSIFICATION	// create command reference array for the command
WITHOUT_CLASSIFICATION	// TreePath path = tree.getSelectionPath();
WITHOUT_CLASSIFICATION	// I need revalidate if node is root. but why?
WITHOUT_CLASSIFICATION	// private AdapterNode actNode;
WITHOUT_CLASSIFICATION	// private Filter filter; // private JDialog dialog;
WITHOUT_CLASSIFICATION	/*	 * private JButton enableButton; private JButton disableButton;	 */
WITHOUT_CLASSIFICATION	// Must go backwards or else the list will remove the wrong filters.
WITHOUT_CLASSIFICATION	/*	 * private TitledBorderLabel m_titledborderlabel1 = new TitledBorderLabel();	 * 	 * private TitledBorderLabel m_titledborderlabel2 = new TitledBorderLabel();	 */
WITHOUT_CLASSIFICATION	// jpanel1.add(addCriteriaButton, cc.xy(1, 1));
WITHOUT_CLASSIFICATION	// jpanel1.add(addActionButton, cc.xy(1, 1));
WITHOUT_CLASSIFICATION	// description
WITHOUT_CLASSIFICATION	// id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	// id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	//String userVisibleName = pluginHandler.getUserVisibleName(id);
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// cancel
WITHOUT_CLASSIFICATION	// user didn't select any folder // -> make Inbox the default folder
WITHOUT_CLASSIFICATION	// set component values
WITHOUT_CLASSIFICATION	// filter description JTextField
WITHOUT_CLASSIFICATION	// all / match any JComboBox
WITHOUT_CLASSIFICATION	// get values from components
WITHOUT_CLASSIFICATION	// frame.listView.update();
WITHOUT_CLASSIFICATION	// int type = action.getActionInt();
WITHOUT_CLASSIFICATION	// maybe the plugin wasn't loaded correctly // -> use default // row = new MarkActionRow(this,action);
WITHOUT_CLASSIFICATION	/*				 * c.gridx = GridBagConstraints.REMAINDER; c.anchor =				 * GridBagConstraints.NORTHEAST; gridbag.setConstraints(				 * removeButton, c ); panel.add( removeButton );				 */
WITHOUT_CLASSIFICATION	// fall-back if error occurs
WITHOUT_CLASSIFICATION	// block transfer to self!
WITHOUT_CLASSIFICATION	// if it is in a scroll pane, then we add to the end of the // list.
WITHOUT_CLASSIFICATION	// enabled/disabled
WITHOUT_CLASSIFICATION	/*		 * matchComboBox.addItem("is"); matchComboBox.addItem("is not");		 * matchComboBox.addItem("begins with"); matchComboBox.addItem("ends		 * with");		 */
WITHOUT_CLASSIFICATION	// Fall back to today
WITHOUT_CLASSIFICATION	// textField.setText(criteria.getPattern());
WITHOUT_CLASSIFICATION	// criteria.setPattern((String) textField.getText());
WITHOUT_CLASSIFICATION	// Ok
WITHOUT_CLASSIFICATION	// couldn't find folder associated with this uid // -> open the select folder dialog
WITHOUT_CLASSIFICATION	// treePathButton.setMargin(new Insets(0,0,0,0));
WITHOUT_CLASSIFICATION	// use "mark as read" as default fallback mechanism
WITHOUT_CLASSIFICATION	// Add the custom color item.
WITHOUT_CLASSIFICATION	// String userVisibleName = pluginHandler.getUserVisibleName(id);
WITHOUT_CLASSIFICATION	//private JLabel enableTextIndexingLabel;
WITHOUT_CLASSIFICATION	// JCheckBox overwriteOptionsCheckBox;
WITHOUT_CLASSIFICATION	// focus name textfield
WITHOUT_CLASSIFICATION	// 3 columns //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Create a FormLayout instance. //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// Add components to the panel:
WITHOUT_CLASSIFICATION	//enableTextIndexingLabel.setEnabled(false);
WITHOUT_CLASSIFICATION	// @author tstich: Added Lucene gui element here //builder.add(enableTextIndexingLabel, cc.xy(2, 13));
WITHOUT_CLASSIFICATION	/*		 * builder.addSeparator("Full-text indexing");		 * 		 * builder.add(enableLabel, cc.xywh(1, 7, 5, 1));		 * builder.add(enableTextIndexingCheckBox, cc.xywh(2, 9, 4, 1));		 */
WITHOUT_CLASSIFICATION	/*		 * JPanel panel= new JPanel(); panel.setLayout(new BorderLayout());		 * panel.add(resetButton, BorderLayout.EAST); builder.add(panel,		 * cc.xywh(5, 7, 1, 1));		 */
WITHOUT_CLASSIFICATION	/*		 * overwriteOptionsCheckBox = new JCheckBox("Overwrite global		 * settings"); overwriteOptionsCheckBox.addActionListener(this);		 * overwriteOptionsCheckBox.setActionCommand("OVERWRITE");		 */
WITHOUT_CLASSIFICATION	// user changed folder name
WITHOUT_CLASSIFICATION	// bottom.add( Box.createHorizontalGlue() );
WITHOUT_CLASSIFICATION	// only local folders have an full-text indexing capability
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// enable lucene search index by default //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// c.gridwidth = GridBagConstraints.RELATIVE;
WITHOUT_CLASSIFICATION	// adjust description field
WITHOUT_CLASSIFICATION	// debug messages for diagnostics
WITHOUT_CLASSIFICATION	// notify configuration changes listeners // @see org.columba.mail.gui.table.util.MarkAsReadTimer
WITHOUT_CLASSIFICATION	// notify configuration changes listeners // @see org.columba.mail.gui.message.TextViewer
WITHOUT_CLASSIFICATION	// send notification event // @see org.columba.mail.gui.message.TextViewer
WITHOUT_CLASSIFICATION	// notify listeners // @see org.columba.mail.gui.composer.SubjectController
WITHOUT_CLASSIFICATION	// general
WITHOUT_CLASSIFICATION	// button panel
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// skip the first column
WITHOUT_CLASSIFICATION	// Add components to the panel:
WITHOUT_CLASSIFICATION	// init bottom panel with OK, Cancel buttons
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// ask the user about the destination file
WITHOUT_CLASSIFICATION	// only local folders have an full-text indexing capability
WITHOUT_CLASSIFICATION	// bottom.setBorder(new SingleSideEtchedBorder(SwingConstants.TOP)); // bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) ); // bottom.add( Box.createHorizontalStrut());
WITHOUT_CLASSIFICATION	// Create the closing boundary
WITHOUT_CLASSIFICATION	// remove all old elements
WITHOUT_CLASSIFICATION	// add new element
WITHOUT_CLASSIFICATION	// cast to Local AbstractMessageFolder is safe here
WITHOUT_CLASSIFICATION	// execute resyncing command
WITHOUT_CLASSIFICATION	// restore settings
WITHOUT_CLASSIFICATION	// re-select folder to make changes visible to the user
WITHOUT_CLASSIFICATION	// create new default options
WITHOUT_CLASSIFICATION	// update list view
WITHOUT_CLASSIFICATION	// if size > than 1000 KB, transform to MB
WITHOUT_CLASSIFICATION	// composer
WITHOUT_CLASSIFICATION	//builder.nextLine();
WITHOUT_CLASSIFICATION	//layout.setRowGroups(new int[][]{ {1, 3, 5, 7, 9, 11, 13, 15} });
WITHOUT_CLASSIFICATION	/*		 * builder.append(spellLabel, spellButton); builder.nextLine();		 */
WITHOUT_CLASSIFICATION	//Set up color chooser for setting quoted color
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// model -> view
WITHOUT_CLASSIFICATION	// view -> model
WITHOUT_CLASSIFICATION	// id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	// Where, in the drag image, the mouse was clicked
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	// top panel
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList,	 *      java.lang.Object, int, boolean, boolean)	 */
WITHOUT_CLASSIFICATION	// topPanel.setLayout( );
WITHOUT_CLASSIFICATION	// c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	// 3 columns // rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	// get values from components
WITHOUT_CLASSIFICATION	// If f==null because of deleted AbstractMessageFolder fallback to // Inbox
WITHOUT_CLASSIFICATION	//		builder.append(showAttachmentsInlineCheckBox, 4); //		builder.nextLine();
WITHOUT_CLASSIFICATION	// Create list of unsubscribed folders
WITHOUT_CLASSIFICATION	// Deactivate this vFolder because changes are about to happen // and the search needs to be redone.
WITHOUT_CLASSIFICATION	// create default namespace
WITHOUT_CLASSIFICATION	// Process shared namespaces
WITHOUT_CLASSIFICATION	// Does the server support the namespace extension?
WITHOUT_CLASSIFICATION	// Process personal namespaces
WITHOUT_CLASSIFICATION	// Process other users namespaces
WITHOUT_CLASSIFICATION	// Handle special case in which INBOX has a NIL delimiter // -> there might exist a pseudo hierarchy under INBOX+delimiter
WITHOUT_CLASSIFICATION	// Now we have the subscribed folders in subscribedFolders // and the unsubscribed folders in unsubscribedFolders // Next step: Create a treestructure
WITHOUT_CLASSIFICATION	// INBOX is always subscribed
WITHOUT_CLASSIFICATION	//bottom.add( Box.createHorizontalGlue() );
WITHOUT_CLASSIFICATION	// split the hierarchical name with at the delimiters
WITHOUT_CLASSIFICATION	// Create the header of the multipart
WITHOUT_CLASSIFICATION	// can be only one
WITHOUT_CLASSIFICATION	// manipulateModel(TableModelPlugin.STRUCTURE_CHANGE);
WITHOUT_CLASSIFICATION	/*			 * HeaderItem[] items = new HeaderItem[selection2.length]; items =			 * selection2;			 * HeaderItemDNDManager.getInstance().setHeaderItemList(items);			 */
WITHOUT_CLASSIFICATION	/*		 * dragSource.startDrag( event, new Cursor(Cursor.DEFAULT_CURSOR),		 * ImageLoader.getImageIcon("contact_small","Add16").getImage(), new		 * Point(5, 5), new StringSelection("contact"), this);		 */
WITHOUT_CLASSIFICATION	// removeElement();
WITHOUT_CLASSIFICATION	// Plain text components don't fire these events
WITHOUT_CLASSIFICATION	/*JSCFDriverManager.registerJSCFDriver(new GPGDriver());JSCFConnection con = JSCFDriverManager.getConnection("jscf:gpg:"+pgpItem.get("path"));*/
WITHOUT_CLASSIFICATION	// show all search results
WITHOUT_CLASSIFICATION	// select search folder
WITHOUT_CLASSIFICATION	// select search folder
WITHOUT_CLASSIFICATION	// get selected search criteria
WITHOUT_CLASSIFICATION	// create filter criteria based on selected type
WITHOUT_CLASSIFICATION	// set criteria for search folder
WITHOUT_CLASSIFICATION	// add search to history
WITHOUT_CLASSIFICATION	// get search folder
WITHOUT_CLASSIFICATION	// remove old filters
WITHOUT_CLASSIFICATION	// add filter criteria
WITHOUT_CLASSIFICATION	// set source folder UID
WITHOUT_CLASSIFICATION	// execute custom search
WITHOUT_CLASSIFICATION	// enable/disable textfield in-dependency of selected criteria
WITHOUT_CLASSIFICATION	// directly execute search
WITHOUT_CLASSIFICATION	// get currently selected folder
WITHOUT_CLASSIFICATION	// create selection handlers
WITHOUT_CLASSIFICATION	// double-click mouse listener
WITHOUT_CLASSIFICATION	// table registers interest in tree selection events
WITHOUT_CLASSIFICATION	// Register F2 hotkey for renaming folder when the message panel has // focus
WITHOUT_CLASSIFICATION	// Register F2 hotkey for renaming folder when the folder tree itself // has focus
WITHOUT_CLASSIFICATION	// Register Alt-Up hotkey for moving up folder when folder tree or // table have focus
WITHOUT_CLASSIFICATION	// Register Alt-Down hotkey for moving up folder when folder tree or // table have focus
WITHOUT_CLASSIFICATION	// public JComponent getContentPane() { // JComponent c = super.getContentPane(); // // // // return c; // }
WITHOUT_CLASSIFICATION	// public IContentPane getContentPane() { // return this; // }
WITHOUT_CLASSIFICATION	// tree selection event
WITHOUT_CLASSIFICATION	// view headerlist in message list viewer
WITHOUT_CLASSIFICATION	// update frame title
WITHOUT_CLASSIFICATION	// show message content
WITHOUT_CLASSIFICATION	// update message list view title
WITHOUT_CLASSIFICATION	// simply demonstration of how to change the docking title
WITHOUT_CLASSIFICATION	// get selected row
WITHOUT_CLASSIFICATION	// get message node at selected row
WITHOUT_CLASSIFICATION	// is the message marked as draft ?
WITHOUT_CLASSIFICATION	// edit message in composer
WITHOUT_CLASSIFICATION	// open message in new message-frame
WITHOUT_CLASSIFICATION	// select node
WITHOUT_CLASSIFICATION	// folder-based configuration
WITHOUT_CLASSIFICATION	// mail folder tree
WITHOUT_CLASSIFICATION	// message list
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// short cut key
WITHOUT_CLASSIFICATION	// add contact to addressbook
WITHOUT_CLASSIFICATION	// apply model
WITHOUT_CLASSIFICATION	// Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	//		TagList tagList = new MailTagList(this); //		JScrollPane tagListScrollPane = new JScrollPane(tagList); //		tagListScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER); //		tagListScrollPane //				.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	// fire in EDT
WITHOUT_CLASSIFICATION	// needs to be private so that subclasses won't forget calling // fireCharsetChanged
WITHOUT_CLASSIFICATION	//splitPane.setDividerSize(1); //setDividerSize(5);
WITHOUT_CLASSIFICATION	// this has to be set by themes //setDividerSize( 5 );
WITHOUT_CLASSIFICATION	// bottom.add(c, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	// if necessary decrypt/verify message
WITHOUT_CLASSIFICATION	// map to new reference
WITHOUT_CLASSIFICATION	// notify all interested listeners
WITHOUT_CLASSIFICATION	// exit immediately
WITHOUT_CLASSIFICATION	// create Address from URL
WITHOUT_CLASSIFICATION	// copy selected URL to clipboard as string
WITHOUT_CLASSIFICATION	// putValue(LARGE_ICON, ImageLoader.getIcon(IconKeys.FOLDER_OPEN));
WITHOUT_CLASSIFICATION	// putValue(LARGE_ICON, ImageLoader.getSmallIcon(IconKeys.FOLDER_OPEN));
WITHOUT_CLASSIFICATION	// some server have a bogus apop // try user/pass to check if the password is // correct
WITHOUT_CLASSIFICATION	// create empty value
WITHOUT_CLASSIFICATION	// create identity value
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// putValue(LARGE_ICON, ImageLoader.getIcon(IconKeys.DOCUMENT_SAVE_AS));
WITHOUT_CLASSIFICATION	// this has to be set by themes //splitPane.setDividerSize( 5 );
WITHOUT_CLASSIFICATION	//splitPane.resetToPreferredSizes(); //hideAttachmentViewer();
WITHOUT_CLASSIFICATION	// JPanel bottom = new JPanel(); // bottom.setBackground(backgroundColor); // // bottom.setLayout(new BorderLayout());
WITHOUT_CLASSIFICATION	// ensure that there is an HTML part in the email, otherwise JTextPanel // throws a RuntimeException
WITHOUT_CLASSIFICATION	// login and get # of messages on server
WITHOUT_CLASSIFICATION	// show selected message
WITHOUT_CLASSIFICATION	// clear message viewer
WITHOUT_CLASSIFICATION	// Update only if the selection did not change
WITHOUT_CLASSIFICATION	// display changes
WITHOUT_CLASSIFICATION	// create message value
WITHOUT_CLASSIFICATION	// set value
WITHOUT_CLASSIFICATION	// get command reference
WITHOUT_CLASSIFICATION	// get selected message UID
WITHOUT_CLASSIFICATION	// get flags
WITHOUT_CLASSIFICATION	// get messagecontroller of frame
WITHOUT_CLASSIFICATION	// fill semantic context
WITHOUT_CLASSIFICATION	// Synchronize the complete folder
WITHOUT_CLASSIFICATION	// from email address
WITHOUT_CLASSIFICATION	// old command-specific selection
WITHOUT_CLASSIFICATION	// new selection
WITHOUT_CLASSIFICATION	// abort if nothing selected
WITHOUT_CLASSIFICATION	// if attachment can't be opened, save it only
WITHOUT_CLASSIFICATION	// wrap with observable stream for progress bar updates
WITHOUT_CLASSIFICATION	// write to temporary file
WITHOUT_CLASSIFICATION	// substitute special characters like: // <,>,&,\t,\n
WITHOUT_CLASSIFICATION	// cancel command execution/updateGUI methods, if folder or message // selection // has been modified
WITHOUT_CLASSIFICATION	// in case no attachment handler was executed correctly // -> fall back to default handler
WITHOUT_CLASSIFICATION	// rename "*.part" file to destination file
WITHOUT_CLASSIFICATION	// reset progress bar
WITHOUT_CLASSIFICATION	// decode filename
WITHOUT_CLASSIFICATION	// add message to temporary folder
WITHOUT_CLASSIFICATION	// create reference to this message
WITHOUT_CLASSIFICATION	// this is needed to be able to open attachments of the decrypted // message
WITHOUT_CLASSIFICATION	//messageController.setAttachmentSelectionReference(local);
WITHOUT_CLASSIFICATION	// Check if the message still exists // or has been moved by e.g. a filter
WITHOUT_CLASSIFICATION	// the second child must be the encrypted message
WITHOUT_CLASSIFICATION	// return null;
WITHOUT_CLASSIFICATION	// just show the encrypted raw message
WITHOUT_CLASSIFICATION	// if the pgp mode is active we should get the decrypted part
WITHOUT_CLASSIFICATION	// check if the returned String is has a length != 0
WITHOUT_CLASSIFICATION	// else we set the body to the i18n String
WITHOUT_CLASSIFICATION	// construct new Message from decrypted string
WITHOUT_CLASSIFICATION	// call AbstractFilter to do the tricky part
WITHOUT_CLASSIFICATION	// header = (ColumbaHeader) message.getHeaderInterface();
WITHOUT_CLASSIFICATION	// the first child must be the signed part
WITHOUT_CLASSIFICATION	// the second child must be the pgp-signature
WITHOUT_CLASSIFICATION	/* * * make quotes font-color darkgray * */
WITHOUT_CLASSIFICATION	//layoutComponents(isSpam);
WITHOUT_CLASSIFICATION	// only show view if message is marked as spam
WITHOUT_CLASSIFICATION	// get selected message
WITHOUT_CLASSIFICATION	// mark as not spam
WITHOUT_CLASSIFICATION	// pass command to scheduler
WITHOUT_CLASSIFICATION	// register as configuration change listener
WITHOUT_CLASSIFICATION	// encapsulate bodytext in html-code
WITHOUT_CLASSIFICATION	// register for configuration changes
WITHOUT_CLASSIFICATION	// register interest on configuratin changes
WITHOUT_CLASSIFICATION	// parse for urls and substite with HTML-code
WITHOUT_CLASSIFICATION	// parse for email addresses and substite with HTML-code
WITHOUT_CLASSIFICATION	// parse for quotings and color the darkgray
WITHOUT_CLASSIFICATION	// add smilies
WITHOUT_CLASSIFICATION	/*	 * 	 * encapsulate bodytext in HTML code	 * 	 */
WITHOUT_CLASSIFICATION	// prepend
WITHOUT_CLASSIFICATION	// append
WITHOUT_CLASSIFICATION	// default encoding is plain
WITHOUT_CLASSIFICATION	// ((CharsetOwnerInterface) mediator).setCharset(charset);
WITHOUT_CLASSIFICATION	// updateBackground();
WITHOUT_CLASSIFICATION	// set double-click action for attachment viewer
WITHOUT_CLASSIFICATION	// Display resulting MimeParts
WITHOUT_CLASSIFICATION	// Get Text for Icon
WITHOUT_CLASSIFICATION	// Get Tooltip for Icon
WITHOUT_CLASSIFICATION	// definition of a second
WITHOUT_CLASSIFICATION	// timer to use
WITHOUT_CLASSIFICATION	// Singleton
WITHOUT_CLASSIFICATION	// listen for configuration changes
WITHOUT_CLASSIFICATION	// get interval value
WITHOUT_CLASSIFICATION	// stylesheet is created dynamically because // user configurable fonts are used
WITHOUT_CLASSIFICATION	// enable/disable smilies configuration
WITHOUT_CLASSIFICATION	// name of font
WITHOUT_CLASSIFICATION	// Shall we use the HTML-IViewer?
WITHOUT_CLASSIFICATION	// Which Charset shall we use ?
WITHOUT_CLASSIFICATION	// Read Stream in String
WITHOUT_CLASSIFICATION	// strip HTML message -> remove all HTML tags
WITHOUT_CLASSIFICATION	// this is a HTML message
WITHOUT_CLASSIFICATION	// Download any CIDs in the html mail
WITHOUT_CLASSIFICATION	// FocusManager.getInstance().updateActions();
WITHOUT_CLASSIFICATION	// default
WITHOUT_CLASSIFICATION	// apply model
WITHOUT_CLASSIFICATION	// get inbox-folder from pop3-server preferences
WITHOUT_CLASSIFICATION	// XmlElement selectedBrowser = // messageviewer.getElement(OptionsItem.SELECTED_BROWSER); // selectedBrowser.addObserver(this);
WITHOUT_CLASSIFICATION	// this is a text/plain message
WITHOUT_CLASSIFICATION	// setText(body);
WITHOUT_CLASSIFICATION	// remove old renderer
WITHOUT_CLASSIFICATION	// init new renderer
WITHOUT_CLASSIFICATION	// add new renderer
WITHOUT_CLASSIFICATION	// open composer
WITHOUT_CLASSIFICATION	// final URL url = extractURL(ev);
WITHOUT_CLASSIFICATION	// open context-menu // -> this has to happen in the awt-event dispatcher thread
WITHOUT_CLASSIFICATION	// builder.setDefaultButtonBarGapBorder();
WITHOUT_CLASSIFICATION	// TODO i18n "Close" button
WITHOUT_CLASSIFICATION	// TODO i18n "Help" button
WITHOUT_CLASSIFICATION	// scale image
WITHOUT_CLASSIFICATION	// convert special characters
WITHOUT_CLASSIFICATION	// buf.append("<b>" + title + "</b><br>");
WITHOUT_CLASSIFICATION	// contains headerfields which are to be displayed
WITHOUT_CLASSIFICATION	// TODO (@author fdietz): this should be changed into a "real" window
WITHOUT_CLASSIFICATION	// top.setBackground(UIManager.getColor("TextField.background"));
WITHOUT_CLASSIFICATION	// add headerfields which are about to show up
WITHOUT_CLASSIFICATION	// get header from folder
WITHOUT_CLASSIFICATION	// get header from folder
WITHOUT_CLASSIFICATION	// transform headers if necessary
WITHOUT_CLASSIFICATION	// transform headers if necessary
WITHOUT_CLASSIFICATION	// transform headers if necessary
WITHOUT_CLASSIFICATION	// custom headers
WITHOUT_CLASSIFICATION	// TODO i18n "attachments" label
WITHOUT_CLASSIFICATION	// Display resulting MimeParts
WITHOUT_CLASSIFICATION	// Get Text for Icon
WITHOUT_CLASSIFICATION	// Get Tooltip for Icon
WITHOUT_CLASSIFICATION	// builder.setDefaultButtonBarGapBorder();
WITHOUT_CLASSIFICATION	// TODO i18n "Close" button
WITHOUT_CLASSIFICATION	// TODO i18n "Help" button
WITHOUT_CLASSIFICATION	// scale image
WITHOUT_CLASSIFICATION	// setBackground(UIManager.getColor("TextField.background"));
WITHOUT_CLASSIFICATION	// substitute special characters like: // <,>,&,\t,\n,"
WITHOUT_CLASSIFICATION	// remove body part if already shown in text viewer
WITHOUT_CLASSIFICATION	// // create a view more button, responsible for // // opening the attachment viewer popup // JButton moreButton = createAttachmentMoreButton();
WITHOUT_CLASSIFICATION	// vector.add(moreButton);
WITHOUT_CLASSIFICATION	// button.setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 0));
WITHOUT_CLASSIFICATION	// Remove the BodyPart(s) if any
WITHOUT_CLASSIFICATION	// message doesn't contain this headerfield
WITHOUT_CLASSIFICATION	// headerfield is empty
WITHOUT_CLASSIFICATION	// substitute special characters like: // <,>,&,\t,\n,"
WITHOUT_CLASSIFICATION	// substitute special characters like: // <,>,&,\t,\n,"
WITHOUT_CLASSIFICATION	// create search folder
WITHOUT_CLASSIFICATION	// button.setOpaque(false);
WITHOUT_CLASSIFICATION	// button.addMouseListener(new LinkMouseListener());
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// setPreferredSize(list.getPreferredSize());
WITHOUT_CLASSIFICATION	// Get all MimeParts
WITHOUT_CLASSIFICATION	// Remove the BodyPart(s) if any
WITHOUT_CLASSIFICATION	// create search folder
WITHOUT_CLASSIFICATION	// Color backgroundColor = // UIManager.getColor("TextField.background");
WITHOUT_CLASSIFICATION	// button.addMouseListener(new LabelMouseListener());
WITHOUT_CLASSIFICATION	// If the same message is still shown // Mark it as read
WITHOUT_CLASSIFICATION	// pass it along to parent frame
WITHOUT_CLASSIFICATION	//	public JComponent getComponent() { //		JPanel panel = new JPanel(); //		panel.setLayout(new BorderLayout()); // //		panel.add(messageController, BorderLayout.CENTER); // //		 // //		return panel; //	}
WITHOUT_CLASSIFICATION	//super.dock(messageViewerDockable, IDock.REGION.CENTER);
WITHOUT_CLASSIFICATION	// Current column whose tooltip is being displayed. // This variable is used to minimize the calls to setToolTipText().
WITHOUT_CLASSIFICATION	// Maps TableColumn objects to tooltips
WITHOUT_CLASSIFICATION	// If tooltip is null, removes any tooltip text.
WITHOUT_CLASSIFICATION	// Return if not clicked on any column header
WITHOUT_CLASSIFICATION	// copy
WITHOUT_CLASSIFICATION	// UnsupportedFlavorException, IOException
WITHOUT_CLASSIFICATION	/*		 * AbstractMessageFolder destFolder = (AbstractMessageFolder) treeView		 * .getDropTargetFolder();		 */
WITHOUT_CLASSIFICATION	// move
WITHOUT_CLASSIFICATION	// load plugin handler used for the columns
WITHOUT_CLASSIFICATION	// disable subject column renderer, use tree-cellrenderer instead
WITHOUT_CLASSIFICATION	// tc.setCellEditor(new CustomTreeTableCellEditor());
WITHOUT_CLASSIFICATION	// change subject column renderer back to default
WITHOUT_CLASSIFICATION	// set name of column
WITHOUT_CLASSIFICATION	// no specific renderer found // -> use default renderer
WITHOUT_CLASSIFICATION	// Logging.log.info("setting size =" + size);
WITHOUT_CLASSIFICATION	// if there are entries in the table
WITHOUT_CLASSIFICATION	// if there are entries in the table
WITHOUT_CLASSIFICATION	// changing the selection to the first row
WITHOUT_CLASSIFICATION	// getting the node
WITHOUT_CLASSIFICATION	// getting the node
WITHOUT_CLASSIFICATION	// and getting the uid for this node
WITHOUT_CLASSIFICATION	// scrolling to the first row
WITHOUT_CLASSIFICATION	// scrolling to the first row
WITHOUT_CLASSIFICATION	//			 @author: fdietz never request focus //requestFocus();
WITHOUT_CLASSIFICATION	// expand all rows
WITHOUT_CLASSIFICATION	// select all rows
WITHOUT_CLASSIFICATION	//		 @author: fdietz never request focus //requestFocus();
WITHOUT_CLASSIFICATION	/*			 * // scrolling to the first row			 * scrollRectToVisible(getCellRect(row, 0, false)); requestFocus();			 */
WITHOUT_CLASSIFICATION	// don't clear selection
WITHOUT_CLASSIFICATION	// init table model
WITHOUT_CLASSIFICATION	// init threaded-view model
WITHOUT_CLASSIFICATION	// init sorting model
WITHOUT_CLASSIFICATION	// init view
WITHOUT_CLASSIFICATION	// pass tree to model, used by the threaded-view
WITHOUT_CLASSIFICATION	// clear model
WITHOUT_CLASSIFICATION	// register interest on folder events
WITHOUT_CLASSIFICATION	// Assign a tooltip for each of the columns
WITHOUT_CLASSIFICATION	// column IDs are all lower case
WITHOUT_CLASSIFICATION	// append "_tooltip"
WITHOUT_CLASSIFICATION	// get translation
WITHOUT_CLASSIFICATION	// selected rows before updating the model // -> used later to restore the selection
WITHOUT_CLASSIFICATION	// folder in which the update occurs
WITHOUT_CLASSIFICATION	// get current selection
WITHOUT_CLASSIFICATION	// update infopanel (gray panel below the toolbar) // showing total/unread/recent messages count
WITHOUT_CLASSIFICATION	// only update table if, this folder is the same // as the currently selected
WITHOUT_CLASSIFICATION	// when marking messages, don't touch selection
WITHOUT_CLASSIFICATION	// re-select previous selection
WITHOUT_CLASSIFICATION	// only re-select if only a single row was formerly selected
WITHOUT_CLASSIFICATION	// if message was removed from JTable
WITHOUT_CLASSIFICATION	// select row
WITHOUT_CLASSIFICATION	// save previously selected folder options
WITHOUT_CLASSIFICATION	// load options of newly selected folder
WITHOUT_CLASSIFICATION	// remember previously selected folder
WITHOUT_CLASSIFICATION	// enable/disable cut/copy/paste/selectall actions // FocusManager.getInstance().updateActions();
WITHOUT_CLASSIFICATION	// if user is currently changing selection, don't do anything // -> wait until the final selection is available
WITHOUT_CLASSIFICATION	// selected nodes
WITHOUT_CLASSIFICATION	// expand all unread message nodes
WITHOUT_CLASSIFICATION	// remove all columns from table model
WITHOUT_CLASSIFICATION	// reset row height
WITHOUT_CLASSIFICATION	// remove all columns for column model
WITHOUT_CLASSIFICATION	// if new columns were added, we have to initialize the tooltips
WITHOUT_CLASSIFICATION	// remember selected node
WITHOUT_CLASSIFICATION	// repaint table header
WITHOUT_CLASSIFICATION	// clear messagenode cache
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// notify observers (sorting state submenu)
WITHOUT_CLASSIFICATION	//setEnabled(false);
WITHOUT_CLASSIFICATION	// remember selected node
WITHOUT_CLASSIFICATION	// for some weird reason the table loses its inter-cell spacing // property, when changing the underlying column model // -> setting this to (0,0) again
WITHOUT_CLASSIFICATION	// int column = view.convertColumnIndexToModel(viewColumn); // int column2 = view.convertColumnIndexToView(viewColumn);
WITHOUT_CLASSIFICATION	// disable every icon // -> set appropriate icon for selected column
WITHOUT_CLASSIFICATION	// disable every icon // -> set appropriate icon for selected column
WITHOUT_CLASSIFICATION	// repaint table header
WITHOUT_CLASSIFICATION	// notify the model to sort the table // sorter.sort(column);
WITHOUT_CLASSIFICATION	// notify the model to sort the table // sorter.sort(column);
WITHOUT_CLASSIFICATION	// make selected row visible again
WITHOUT_CLASSIFICATION	// make selected row visible again
WITHOUT_CLASSIFICATION	//      putValue(LARGE_ICON, ImageLoader.getImageIcon("reply_small.png"));
WITHOUT_CLASSIFICATION	//    shortcut key
WITHOUT_CLASSIFICATION	// getting last selection
WITHOUT_CLASSIFICATION	// getting current uid
WITHOUT_CLASSIFICATION	// getting current node (under the selection)
WITHOUT_CLASSIFICATION	// getting next node
WITHOUT_CLASSIFICATION	// getting from the next node the uid
WITHOUT_CLASSIFICATION	// and set this to the actual ref
WITHOUT_CLASSIFICATION	// check if the node is not null
WITHOUT_CLASSIFICATION	// if the node is not null
WITHOUT_CLASSIFICATION	// select it
WITHOUT_CLASSIFICATION	// saving the last selection for the current folder
WITHOUT_CLASSIFICATION	// view the message under the new node
WITHOUT_CLASSIFICATION	/*		 * ((MailFrameMediator)		 * frameMediator).registerTableSelectionListener(this);		 */
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// toolbar text
WITHOUT_CLASSIFICATION	// toolbar text
WITHOUT_CLASSIFICATION	// getting last selection
WITHOUT_CLASSIFICATION	// getting current uid
WITHOUT_CLASSIFICATION	// getting current node (under the selection)
WITHOUT_CLASSIFICATION	// check if the node is not null
WITHOUT_CLASSIFICATION	// if the node is not null
WITHOUT_CLASSIFICATION	// select it
WITHOUT_CLASSIFICATION	// saving the last selection for the current folder
WITHOUT_CLASSIFICATION	// view the message under the new node
WITHOUT_CLASSIFICATION	//		 necessary for the message-frame only
WITHOUT_CLASSIFICATION	//		 select message in message list
WITHOUT_CLASSIFICATION	// clear message list
WITHOUT_CLASSIFICATION	// clear message-list selection
WITHOUT_CLASSIFICATION	// clear message-viewer
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// add command for execution
WITHOUT_CLASSIFICATION	// add command for execution
WITHOUT_CLASSIFICATION	// icon for menu
WITHOUT_CLASSIFICATION	// icon for toolbar
WITHOUT_CLASSIFICATION	//      shortcut key
WITHOUT_CLASSIFICATION	// set toolbar text
WITHOUT_CLASSIFICATION	// getting prev node
WITHOUT_CLASSIFICATION	// create new search folder, but re-use old search folder
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// add command for execution
WITHOUT_CLASSIFICATION	// add command for execution
WITHOUT_CLASSIFICATION	// do the search
WITHOUT_CLASSIFICATION	//mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	// toolbar text is usually a bit shorter ;mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	// tooltip text ;mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	// icons ;mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	/*        putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("redirect_small.png"));        putValue(LARGE_ICON, ImageLoader.getImageIcon("redirect.png"));        */
WITHOUT_CLASSIFICATION	// shortcut key is STRG-E ;mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	// icons //        putValue(SMALL_ICON, //            MailImageLoader.getIcon("email_edit.png")); //        putValue(LARGE_ICON, MailImageLoader.getIcon("email_edit.png"));
WITHOUT_CLASSIFICATION	//		 putValue(SMALL_ICON, //		            MailImageLoader.getIcon("email_open.png"));
WITHOUT_CLASSIFICATION	/*		 * folder.getConfiguration().set("property", "enable_threaded_view",		 * enableThreadedView);		 */
WITHOUT_CLASSIFICATION	// get current message list selection
WITHOUT_CLASSIFICATION	// pass command to scheduler
WITHOUT_CLASSIFICATION	// pass command to scheduler
WITHOUT_CLASSIFICATION	// which menuitem was selected?
WITHOUT_CLASSIFICATION	// add color selection to reference
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// toolbar text
WITHOUT_CLASSIFICATION	//setEnabled(false);
WITHOUT_CLASSIFICATION	// listen for configuration changes
WITHOUT_CLASSIFICATION	// uncomment to enable action
WITHOUT_CLASSIFICATION	/*		 * ((MailFrameMediator)		 * frameMediator).registerTableSelectionListener(this);		 */
WITHOUT_CLASSIFICATION	//		 necessary for the message-frame only
WITHOUT_CLASSIFICATION	//		 select message in message list
WITHOUT_CLASSIFICATION	// icon for menu
WITHOUT_CLASSIFICATION	// icon for menu
WITHOUT_CLASSIFICATION	// icon for toolbar
WITHOUT_CLASSIFICATION	// icon for toolbar
WITHOUT_CLASSIFICATION	// get current message list selection
WITHOUT_CLASSIFICATION	// shortcut key //putValue(ACCELERATOR_KEY, // KeyStroke.getKeyStroke(KeyEvent.VK_BRACELEFT, 0));
WITHOUT_CLASSIFICATION	// remove color //			add color selection to reference
WITHOUT_CLASSIFICATION	// remember search folder for "show total results" action
WITHOUT_CLASSIFICATION	// register as Observer
WITHOUT_CLASSIFICATION	// createSubMenu();
WITHOUT_CLASSIFICATION	// *20040510, karlpeder* columns may be null (first time we visit a // folder!?)
WITHOUT_CLASSIFICATION	// all headerfields are lowercase in property file
WITHOUT_CLASSIFICATION	// update(observable, null);
WITHOUT_CLASSIFICATION	// update(observable, null);
WITHOUT_CLASSIFICATION	// *20040510, karlpeder* columns may be null (first time we // visit a folder!?) // IDefaultItem item = new DefaultItem(xmlElement);
WITHOUT_CLASSIFICATION	// Mark the messages as deleted
WITHOUT_CLASSIFICATION	// -> move messages to trash
WITHOUT_CLASSIFICATION	// close window
WITHOUT_CLASSIFICATION	// toolbar text is usually a bit shorter
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// get original folder
WITHOUT_CLASSIFICATION	// should be virtual
WITHOUT_CLASSIFICATION	//setEnabled(false);
WITHOUT_CLASSIFICATION	// uncomment to enable action
WITHOUT_CLASSIFICATION	/*		 * ((MailFrameMediator)		 * frameMediator).registerTableSelectionListener(this);		 */
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// add command for execution
WITHOUT_CLASSIFICATION	//      shortcut key
WITHOUT_CLASSIFICATION	//      shortcut key
WITHOUT_CLASSIFICATION	// get current message list selection
WITHOUT_CLASSIFICATION	// get current message list selection
WITHOUT_CLASSIFICATION	// get current message list selection
WITHOUT_CLASSIFICATION	// pass command to scheduler
WITHOUT_CLASSIFICATION	//        putValue(LARGE_ICON, ImageLoader.getImageIcon("drafts-16.png"));
WITHOUT_CLASSIFICATION	// trash folder is selected // -> delete message
WITHOUT_CLASSIFICATION	// listener updates selection status, when ever a message selection changes
WITHOUT_CLASSIFICATION	// if this is a message-viewer frame viewing a message only // the window should be closed, too
WITHOUT_CLASSIFICATION	//		putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_L, //				Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()));
WITHOUT_CLASSIFICATION	// if all messages are tagged with tag, then return true, else false
WITHOUT_CLASSIFICATION	// necessary for the message-frame only
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	//setEnabled(false);
WITHOUT_CLASSIFICATION	// uncomment to enable action
WITHOUT_CLASSIFICATION	//		 necessary for the message-frame only
WITHOUT_CLASSIFICATION	//		 select message in message list
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// add command for execution
WITHOUT_CLASSIFICATION	//      shortcut key
WITHOUT_CLASSIFICATION	// toolbar text is usually a bit shorter
WITHOUT_CLASSIFICATION	// shortcut key //putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_F, 0));
WITHOUT_CLASSIFICATION	// select message in message list
WITHOUT_CLASSIFICATION	// Shortcut key //putValue(ACCELERATOR_KEY, // KeyStroke.getKeyStroke(KeyEvent.VK_BRACELEFT,0));
WITHOUT_CLASSIFICATION	/*		 * ( ( AbstractMailFrameController) frameMediator)		 * .registerTableSelectionListener( this);		 */
WITHOUT_CLASSIFICATION	// *20030614, karlpeder* only enabled when message(s) selected
WITHOUT_CLASSIFICATION	// get active charset - necessary to decode msg for saving
WITHOUT_CLASSIFICATION	// view message list
WITHOUT_CLASSIFICATION	// clear message list viewer
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// Register as listener to the SelectionManger // to check for selection changes
WITHOUT_CLASSIFICATION	// Update only if the selection did not change
WITHOUT_CLASSIFICATION	// old command-specific selection
WITHOUT_CLASSIFICATION	// new selection
WITHOUT_CLASSIFICATION	// abort if nothing selected
WITHOUT_CLASSIFICATION	// add every header from HeaderList to the table as MessageNode
WITHOUT_CLASSIFICATION	// Register as SelectionListener to track the selection // of the tree
WITHOUT_CLASSIFICATION	// add array to vector
WITHOUT_CLASSIFICATION	// fetch the headerlist
WITHOUT_CLASSIFICATION	// add array to vector
WITHOUT_CLASSIFICATION	// Reset the selection
WITHOUT_CLASSIFICATION	// add this node to cache
WITHOUT_CLASSIFICATION	// cancel command execution/updateGUI methods, if folder selection // has been modified
WITHOUT_CLASSIFICATION	// update treemodel
WITHOUT_CLASSIFICATION	// get unique id
WITHOUT_CLASSIFICATION	// remove all children from tree
WITHOUT_CLASSIFICATION	// create tree structure
WITHOUT_CLASSIFICATION	// add node to tree
WITHOUT_CLASSIFICATION	// get header
WITHOUT_CLASSIFICATION	// if no Message-Id: available create bogus
WITHOUT_CLASSIFICATION	// create MessageNode
WITHOUT_CLASSIFICATION	// save every MessageNode in hashmap for later reference
WITHOUT_CLASSIFICATION	// the last element is the direct parent
WITHOUT_CLASSIFICATION	// save every message-id in hashtable for later reference
WITHOUT_CLASSIFICATION	// send from address and recipient list to SMTP server // ->all addresses have to be normalized
WITHOUT_CLASSIFICATION	// save every message in a list
WITHOUT_CLASSIFICATION	// table is empty // -> just display empty table			
WITHOUT_CLASSIFICATION	// for each element in the message-header-reference or in-reply-to // headerfield: - find a container whose message-id matches and add // message, otherwise create empty container
WITHOUT_CLASSIFICATION	// has children
WITHOUT_CLASSIFICATION	// check if there are messages marked as recent //  -> in case underline parent node
WITHOUT_CLASSIFICATION	// recent found
WITHOUT_CLASSIFICATION	//		 go through whole tree and sort the siblings after date
WITHOUT_CLASSIFICATION	// observable connects the sorting table with the sort menu (View->Sort // Messages)
WITHOUT_CLASSIFICATION	// get a list of MessageNode objects of the first // hierachy level
WITHOUT_CLASSIFICATION	// do the sorting
WITHOUT_CLASSIFICATION	//      notify tree //getRealModel().getTreeModel().nodeStructureChanged(getRootNode()); //}
WITHOUT_CLASSIFICATION	// define false < true
WITHOUT_CLASSIFICATION	// setOpaque(true); //MUST do this for background to show up.
WITHOUT_CLASSIFICATION	// setOpaque(true); //MUST do this for background to show up.
WITHOUT_CLASSIFICATION	// use local date settings
WITHOUT_CLASSIFICATION	// private Border unselectedBorder = null; // // private Border selectedBorder = null; // // private Color background; // // private Color foreground;
WITHOUT_CLASSIFICATION	// private boolean isBordered = true;
WITHOUT_CLASSIFICATION	// TreePath path = tree.getPathForRow(row);
WITHOUT_CLASSIFICATION	// mark as bold if message is unseen
WITHOUT_CLASSIFICATION	// mark as bold if message is unseen
WITHOUT_CLASSIFICATION	// p2.setBorder(BorderFactory.createEmptyBorder(0,0,2,0));
WITHOUT_CLASSIFICATION	// setBorder(UIManager.getBorder("Table.focusCellHighlightBorder"));
WITHOUT_CLASSIFICATION	// setBorder(noFocusBorder);
WITHOUT_CLASSIFICATION	//setForeground( Color.red );
WITHOUT_CLASSIFICATION	//setText("!");
WITHOUT_CLASSIFICATION	//setText("!");
WITHOUT_CLASSIFICATION	//eteTextForeground( Color.blue );
WITHOUT_CLASSIFICATION	//setForeground( Color.blue );
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// create a virtual folder with all messages holding this tag
WITHOUT_CLASSIFICATION	//setForeground( Color.red ); //setText("!!");
WITHOUT_CLASSIFICATION	//setText("!!");
WITHOUT_CLASSIFICATION	// if this is set to true, we use the local selection, instead // of using the table selection
WITHOUT_CLASSIFICATION	// user is still manipulating the selection
WITHOUT_CLASSIFICATION	// no rows are selected
WITHOUT_CLASSIFICATION	// setBackground(list.getSelectionBackground()); // setForeground(list.getSelectionForeground());
WITHOUT_CLASSIFICATION	// setBackground(list.getSelectionBackground()); // setForeground(list.getSelectionForeground());
WITHOUT_CLASSIFICATION	// do not only update the tag search result when click on a different // tag, also do a refresh of the same tag when double click on it
WITHOUT_CLASSIFICATION	// if there is nothing selected return
WITHOUT_CLASSIFICATION	// create a virtual folder
WITHOUT_CLASSIFICATION	// should be a MutableTreeNode
WITHOUT_CLASSIFICATION	// skip all non-mail component items
WITHOUT_CLASSIFICATION	// ensure that we are currently in the mail component
WITHOUT_CLASSIFICATION	// select invisible virtual folder
WITHOUT_CLASSIFICATION	// update message list
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// copy
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// now instanciate the folder classes
WITHOUT_CLASSIFICATION	// get search folder
WITHOUT_CLASSIFICATION	// set source folder UID
WITHOUT_CLASSIFICATION	// UnsupportedFlavorException, IOException
WITHOUT_CLASSIFICATION	// move
WITHOUT_CLASSIFICATION	// search in subfolders recursively
WITHOUT_CLASSIFICATION	// We're always doing a MOVE // and this is handled in the exportDone method.
WITHOUT_CLASSIFICATION	/*		 * // copy CopyMessageCommand command = new CopyMessageCommand(result);		 * CommandProcessor.getInstance().addOp(command);		 */
WITHOUT_CLASSIFICATION	//setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 0));
WITHOUT_CLASSIFICATION	// get configuration from tree.xml file
WITHOUT_CLASSIFICATION	// expand folder
WITHOUT_CLASSIFICATION	// recursivly expand all children
WITHOUT_CLASSIFICATION	// Do nothing if we are hovering over the root node
WITHOUT_CLASSIFICATION	/*		 * view.setLeadSelectionPath(path); view.setAnchorSelectionPath(path);		 */
WITHOUT_CLASSIFICATION	// save expanded state
WITHOUT_CLASSIFICATION	// save expanded state
WITHOUT_CLASSIFICATION	// no sorting
WITHOUT_CLASSIFICATION	// safe to cast to IMailFolder here, because only those are visible to the user
WITHOUT_CLASSIFICATION	// create temporary folder in "<your-config-folder>/mail/"
WITHOUT_CLASSIFICATION	// i18n stuff
WITHOUT_CLASSIFICATION	// warn user
WITHOUT_CLASSIFICATION	// warn user in any other cases
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// parent directory for mail folders // for example: ".columba/mail/"
WITHOUT_CLASSIFICATION	// icons //		putValue(SMALL_ICON, ImageLoader.getIcon("folder_delete.png")); //		putValue(LARGE_ICON, ImageLoader.getIcon("folder_delete.png"));
WITHOUT_CLASSIFICATION	// Note: we negate the expanded state because this is // a will-expand/collapse listener
WITHOUT_CLASSIFICATION	// register at shutdownmanager // -> when closing Columba, this will automatically save all folder data
WITHOUT_CLASSIFICATION	// icon for menu //		putValue(SMALL_ICON, ImageLoader //				.getSmallImageIcon("16_configure_folder.png"));
WITHOUT_CLASSIFICATION	// it is safe here to cast to AbstractMailFrameControlller
WITHOUT_CLASSIFICATION	// calculate mailbox size in background worker
WITHOUT_CLASSIFICATION	// cast to Folder
WITHOUT_CLASSIFICATION	// only use the first selected folder
WITHOUT_CLASSIFICATION	// set parent folder uid
WITHOUT_CLASSIFICATION	// ok pressed
WITHOUT_CLASSIFICATION	// ok pressed
WITHOUT_CLASSIFICATION	// open search dialog
WITHOUT_CLASSIFICATION	// cancel pressed
WITHOUT_CLASSIFICATION	// select folder again after move operation
WITHOUT_CLASSIFICATION	//  -> uncomment to enable/disable action
WITHOUT_CLASSIFICATION	/*        ((MailFrameController) frameMediator).registerTreeSelectionListener(                this);        */
WITHOUT_CLASSIFICATION	// we are done - clear status text with a delay // (if this is not done, the initial text will stay in // case no messages were sent)
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// button panel
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// init bottom panel with OK, Cancel buttons
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// select folder again after move operation
WITHOUT_CLASSIFICATION	// select node in JTree
WITHOUT_CLASSIFICATION	// implement this
WITHOUT_CLASSIFICATION	// show error message
WITHOUT_CLASSIFICATION	// icon //		putValue(SMALL_ICON, ImageLoader //				.getSmallImageIcon("apply-filters-16.png"));
WITHOUT_CLASSIFICATION	// BUGFIX but don't know why that bug occurs
WITHOUT_CLASSIFICATION	//Folder folder = (AbstractMessageFolder) r[0].getFolder();
WITHOUT_CLASSIFICATION	/*			 * MailInterface.treeModel.nodeStructureChanged(parentFolder);			 */
WITHOUT_CLASSIFICATION	// get global sorting state
WITHOUT_CLASSIFICATION	// try to set selection
WITHOUT_CLASSIFICATION	// layout center panel
WITHOUT_CLASSIFICATION	// apply sorting state
WITHOUT_CLASSIFICATION	// Init components
WITHOUT_CLASSIFICATION	// We have a special Command for VFolders
WITHOUT_CLASSIFICATION	// sorting is enabled
WITHOUT_CLASSIFICATION	// if the character / is found shows the user a error message
WITHOUT_CLASSIFICATION	// sorting is disabled
WITHOUT_CLASSIFICATION	/*		 * RIYAD: Even though we don't do anything with this value, what it is		 * doing is setting up the selection colors and such as implemented per		 * the default cell rendered.		 */
WITHOUT_CLASSIFICATION	// If no exception happened we have successfully logged // in
WITHOUT_CLASSIFICATION	// successfully connected and autenthenticated to SMTP server
WITHOUT_CLASSIFICATION	// ok pressed
WITHOUT_CLASSIFICATION	// cancel pressed
WITHOUT_CLASSIFICATION	// get global sorting state
WITHOUT_CLASSIFICATION	// If it isnt a message folder, then it must be a root, and those // should not be sorted.
WITHOUT_CLASSIFICATION	// If the tree is in a DND action then we dont need to update all // listeners, since this only a temporary folder selection.
WITHOUT_CLASSIFICATION	// skip the first column // builder.setLeadingColumnOffset(1); // Add components to the panel:
WITHOUT_CLASSIFICATION	// sorting is enabled
WITHOUT_CLASSIFICATION	// apply sorting state
WITHOUT_CLASSIFICATION	// sorting is disabled
WITHOUT_CLASSIFICATION	// setting default Values // setFont(plainFont); // setToolTipText("");
WITHOUT_CLASSIFICATION	// getting folder info
WITHOUT_CLASSIFICATION	// get folder item configuration
WITHOUT_CLASSIFICATION	// set tooltip text
WITHOUT_CLASSIFICATION	// set label text
WITHOUT_CLASSIFICATION	// set label text
WITHOUT_CLASSIFICATION	// name of folder
WITHOUT_CLASSIFICATION	// append unseen count to folder name
WITHOUT_CLASSIFICATION	// if IMAP selectable folder
WITHOUT_CLASSIFICATION	// if mediator contains a sortable treemodel
WITHOUT_CLASSIFICATION	// default selection is local Inbox
WITHOUT_CLASSIFICATION	// add selection listener
WITHOUT_CLASSIFICATION	// name = textField.getText();
WITHOUT_CLASSIFICATION	// Constants...
WITHOUT_CLASSIFICATION	// Member variables...
WITHOUT_CLASSIFICATION	// Set the width, height and image type
WITHOUT_CLASSIFICATION	// Create a graphics context for this buffered image
WITHOUT_CLASSIFICATION	//SystemColor.controlLtHighlight,
WITHOUT_CLASSIFICATION	// The type of DnD object being dragged...
WITHOUT_CLASSIFICATION	// Transferable interface methods...
WITHOUT_CLASSIFICATION	// DataFlavor.javaJVMLocalObjectMimeType))
WITHOUT_CLASSIFICATION	// create message
WITHOUT_CLASSIFICATION	// convert to inputstream
WITHOUT_CLASSIFICATION	// result.append(", ");
WITHOUT_CLASSIFICATION	// don't care
WITHOUT_CLASSIFICATION	// bottom.add( Box.createHorizontalGlue() );
WITHOUT_CLASSIFICATION	//bottom.add( Box.createHorizontalGlue() );
WITHOUT_CLASSIFICATION	// if IMAP selectable folder // -> lightgray font color and italic
WITHOUT_CLASSIFICATION	// draw folder name and unseen count // -> using bold font
WITHOUT_CLASSIFICATION	// append recent message count // -> using blue font
WITHOUT_CLASSIFICATION	//tstich: Someone added <html> tags here. This is not the right place!
WITHOUT_CLASSIFICATION	// only update if timestamp is equal
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getDelimiter()	 */
WITHOUT_CLASSIFICATION	// implemented for completeness. // Time-out for clearing text is ignored here.
WITHOUT_CLASSIFICATION	/*				 * case WorkerStatusChangedEvent.FINISHED : setVisible(false);				 * break;				 */
WITHOUT_CLASSIFICATION	// send cancel event to worker
WITHOUT_CLASSIFICATION	// private JFrame frame;
WITHOUT_CLASSIFICATION	// private JTextField loginTextField;
WITHOUT_CLASSIFICATION	// bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) );
WITHOUT_CLASSIFICATION	// bottom.add( Box.createHorizontalStrut());
WITHOUT_CLASSIFICATION	// JButton[] buttons = new JButton[2];
WITHOUT_CLASSIFICATION	// user = loginTextField.getText();
WITHOUT_CLASSIFICATION	// loginMethod = (String) loginMethodComboBox.getSelectedItem();
WITHOUT_CLASSIFICATION	//bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) );
WITHOUT_CLASSIFICATION	//bottom.add( Box.createHorizontalStrut());
WITHOUT_CLASSIFICATION	// create IMAP protocol
WITHOUT_CLASSIFICATION	// register interest on status updates
WITHOUT_CLASSIFICATION	// try to determine delimiter
WITHOUT_CLASSIFICATION	// open a port to the server
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// reopen the port
WITHOUT_CLASSIFICATION	// reopen the port
WITHOUT_CLASSIFICATION	// shall we switch to SSL?
WITHOUT_CLASSIFICATION	// if CAPA was not support just give it a try...
WITHOUT_CLASSIFICATION	// CAPAs say that SSL is not supported
WITHOUT_CLASSIFICATION	// Just use the default as fallback
WITHOUT_CLASSIFICATION	// LOGIN is always supported
WITHOUT_CLASSIFICATION	// private JComboBox loginMethodComboBox; // String loginMethod;
WITHOUT_CLASSIFICATION	// AUTH?
WITHOUT_CLASSIFICATION	// Used to control the state in which // the automatic updated mechanism is
WITHOUT_CLASSIFICATION	// Login loop until authenticated
WITHOUT_CLASSIFICATION	// combine them to one string
WITHOUT_CLASSIFICATION	// CAPA not supported
WITHOUT_CLASSIFICATION	// remove // the // 'AUTH='
WITHOUT_CLASSIFICATION	// Show the password dialog
WITHOUT_CLASSIFICATION	// On the first try check if we need to show the password dialog // -> not necessary when password was stored
WITHOUT_CLASSIFICATION	// Try to get Password from Configuration
WITHOUT_CLASSIFICATION	// ensure that we are logged in already
WITHOUT_CLASSIFICATION	// User cancelled authentication
WITHOUT_CLASSIFICATION	// User pressed OK
WITHOUT_CLASSIFICATION	// AUTH
WITHOUT_CLASSIFICATION	// Save or Clear the password in the configuration
WITHOUT_CLASSIFICATION	// From this point we have a username and password // from configuration of from the dialog
WITHOUT_CLASSIFICATION	// Convert to a MailboxStatus
WITHOUT_CLASSIFICATION	// login failed?
WITHOUT_CLASSIFICATION	// Here we get the new mailboxinfo for the folder
WITHOUT_CLASSIFICATION	// if mailbox is not already selected select it
WITHOUT_CLASSIFICATION	// Set the readOnly flag
WITHOUT_CLASSIFICATION	// delete any cached information
WITHOUT_CLASSIFICATION	// if none selected select this folder instead of getting the status
WITHOUT_CLASSIFICATION	// No response means zero!
WITHOUT_CLASSIFICATION	// make sure we are already logged in
WITHOUT_CLASSIFICATION	// -> get source reference of message // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// make sure we are already logged in
WITHOUT_CLASSIFICATION	// close the mailbox if it is selected
WITHOUT_CLASSIFICATION	// make sure we are logged in
WITHOUT_CLASSIFICATION	// concate the full name of the new mailbox
WITHOUT_CLASSIFICATION	// check if the mailbox already exists -> subscribe only
WITHOUT_CLASSIFICATION	// set the attachment flag
WITHOUT_CLASSIFICATION	// If no exception happened we have successfully logged // in
WITHOUT_CLASSIFICATION	// load database from file
WITHOUT_CLASSIFICATION	// If the cause is a IMAPExcpetion then only password // wrong // else bogus authentication mechanism
WITHOUT_CLASSIFICATION	// We don't need to issue a additional NOOP // here since the ensureLogin() call above // ensures also the correct Status in a // MIN_IDLE interval timeframe.
WITHOUT_CLASSIFICATION	// Some error in the client/server communication // --> fall back to default login process
WITHOUT_CLASSIFICATION	// make sure we are already logged in
WITHOUT_CLASSIFICATION	// This exception is not because wrong username or // password
WITHOUT_CLASSIFICATION	// make sure we are already logged in
WITHOUT_CLASSIFICATION	// Sync subscribed folders if this is the first login // in this session
WITHOUT_CLASSIFICATION	// make sure we are already logged in
WITHOUT_CLASSIFICATION	// make sure we are already logged in
WITHOUT_CLASSIFICATION	// subscribe to the new mailbox
WITHOUT_CLASSIFICATION	// create the mailbox on the server
WITHOUT_CLASSIFICATION	// divide in packs
WITHOUT_CLASSIFICATION	// the UIDS start UIDNext till UIDNext + uids.length
WITHOUT_CLASSIFICATION	// make sure this mailbox is selected
WITHOUT_CLASSIFICATION	// update the progress
WITHOUT_CLASSIFICATION	// update the progress
WITHOUT_CLASSIFICATION	// update the progress
WITHOUT_CLASSIFICATION	// update the progress
WITHOUT_CLASSIFICATION	// dont forget the rest
WITHOUT_CLASSIFICATION	// store the intermediate results in a list
WITHOUT_CLASSIFICATION	// get list of user-defined headerfields
WITHOUT_CLASSIFICATION	// Combine the results in one array
WITHOUT_CLASSIFICATION	// add it to the headerlist
WITHOUT_CLASSIFICATION	// make sure that we have a Message-ID
WITHOUT_CLASSIFICATION	// One or many arguments?
WITHOUT_CLASSIFICATION	// Entry does not exist on server // -> add nothing
WITHOUT_CLASSIFICATION	// Now the state of the procotol is more certain correct
WITHOUT_CLASSIFICATION	// One is the easiest case
WITHOUT_CLASSIFICATION	// update this point of time as last communication // since every functio calls this before communicating with // the server
WITHOUT_CLASSIFICATION	// AFTER
WITHOUT_CLASSIFICATION	// Use a caching mechanism for this
WITHOUT_CLASSIFICATION	// AND or OR ? -> AND is implicit, OR must be specified
WITHOUT_CLASSIFICATION	// something else is wrong
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// non-ascii
WITHOUT_CLASSIFICATION	// AND : simply create a list of arguments
WITHOUT_CLASSIFICATION	// OR : the arguments must be glued by a OR SearchKey
WITHOUT_CLASSIFICATION	// Also set the delimiter
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// split key/value pairs
WITHOUT_CLASSIFICATION	// Show first time Account Wizard
WITHOUT_CLASSIFICATION	// get inputstream of message body
WITHOUT_CLASSIFICATION	// account ID
WITHOUT_CLASSIFICATION	// account ID
WITHOUT_CLASSIFICATION	// restart timer
WITHOUT_CLASSIFICATION	// remove all items
WITHOUT_CLASSIFICATION	// If this also does not work // -> fall back to no charset specified
WITHOUT_CLASSIFICATION	// recreate menu
WITHOUT_CLASSIFICATION	// calculate rest
WITHOUT_CLASSIFICATION	// offline -> go online
WITHOUT_CLASSIFICATION	//private POP3ServerCollection popServer;
WITHOUT_CLASSIFICATION	// get list of all accounts
WITHOUT_CLASSIFICATION	// register interest on account changes
WITHOUT_CLASSIFICATION	// menuitem/toolbar button action
WITHOUT_CLASSIFICATION	// for each account that is enabled and in the fetchalllist
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// for each account
WITHOUT_CLASSIFICATION	// for each account
WITHOUT_CLASSIFICATION	// system peep on new messages 
WITHOUT_CLASSIFICATION	//system beep
WITHOUT_CLASSIFICATION	// found matching account
WITHOUT_CLASSIFICATION	// remove whitespaces
WITHOUT_CLASSIFICATION	// remove this account
WITHOUT_CLASSIFICATION	//	generate label for menuitem
WITHOUT_CLASSIFICATION	//  check if we are online
WITHOUT_CLASSIFICATION	// new message
WITHOUT_CLASSIFICATION	// recreate name of menuitem
WITHOUT_CLASSIFICATION	// timer action
WITHOUT_CLASSIFICATION	// only do checking if we are in online state
WITHOUT_CLASSIFICATION	// found new message
WITHOUT_CLASSIFICATION	// remove whitespaces
WITHOUT_CLASSIFICATION	// Check Internet Connection
WITHOUT_CLASSIFICATION	// check if the optional value exists
WITHOUT_CLASSIFICATION	//uid = o;
WITHOUT_CLASSIFICATION	// new NewMessageAction().actionPerformed(null);
WITHOUT_CLASSIFICATION	// Activate all Virtual Folders
WITHOUT_CLASSIFICATION	// Check default mail client
WITHOUT_CLASSIFICATION	// We save only the first item in the cc-list
WITHOUT_CLASSIFICATION	// remove leading or trailing whitespaces
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// skip
WITHOUT_CLASSIFICATION	// Check if Columba is the default mail client
WITHOUT_CLASSIFICATION	// message colour should be black as default
WITHOUT_CLASSIFICATION	// Copy the commandline from the client info to the Classes mailto entry
WITHOUT_CLASSIFICATION	// We save only the first item in the to-list
WITHOUT_CLASSIFICATION	// use default account
WITHOUT_CLASSIFICATION	// Remote double-quotes
WITHOUT_CLASSIFICATION	// Create a emtpy header an back off
WITHOUT_CLASSIFICATION	// Create a emtpy header an back off
WITHOUT_CLASSIFICATION	// Remove the ending separator and whitespace, if any exist
WITHOUT_CLASSIFICATION	// do the parsing
WITHOUT_CLASSIFICATION	// the next token is an token with the whole Mailaddress
WITHOUT_CLASSIFICATION	// Remove the double-quote characters from around the addresses in the string 
WITHOUT_CLASSIFICATION	// If address contains a comma, enclose the display name portion in double-quotes
WITHOUT_CLASSIFICATION	// Convert to MessageOptions
WITHOUT_CLASSIFICATION	// found contact item in contact component
WITHOUT_CLASSIFICATION	// check if its a group item
WITHOUT_CLASSIFICATION	// the first token is irrelevant
WITHOUT_CLASSIFICATION	// The Stream finished before the header was completely // read!
WITHOUT_CLASSIFICATION	// just look if the first character alrady an < // so can use this mailaddress as the correct address
WITHOUT_CLASSIFICATION	// due to bug CA-174 changed: return EMAIL_PATTERN.matcher(s).replaceAll("<A HREF=\"mailto:$1\">$1</A>");
WITHOUT_CLASSIFICATION	/*             \\b  Start at word boundary         ((\\w*(:\\S*)?@)?  [user:[pass]]@ - Constructprot + "://  protocol and ://       ["+any+"]  match literaly anything...         ) (?=\\s|$)  ...until we find whitespace or end of String*/
WITHOUT_CLASSIFICATION	// The form of the entities must be a regexp!
WITHOUT_CLASSIFICATION	// initial check of input:
WITHOUT_CLASSIFICATION	// initial check of input:
WITHOUT_CLASSIFICATION	// remove header
WITHOUT_CLASSIFICATION	// remove extra whitespace
WITHOUT_CLASSIFICATION	// replace br, p and heading tags with newlines
WITHOUT_CLASSIFICATION	// strip remaining tags
WITHOUT_CLASSIFICATION	// tag stripping can leave some double spaces at line beginnings
WITHOUT_CLASSIFICATION	// replace <br> and </br> with newline
WITHOUT_CLASSIFICATION	// replace </p> with double newline
WITHOUT_CLASSIFICATION	// strip tags
WITHOUT_CLASSIFICATION	//First replace all special entities
WITHOUT_CLASSIFICATION	//replace the other entities
WITHOUT_CLASSIFICATION	//Convert 4 WS in a row to a tab
WITHOUT_CLASSIFICATION	// stripHtmlTags called with true ~ p & br => newlines
WITHOUT_CLASSIFICATION	// insert surrounding html tags
WITHOUT_CLASSIFICATION	//sb.append("&nbsp;");
WITHOUT_CLASSIFICATION	// error
WITHOUT_CLASSIFICATION	// error
WITHOUT_CLASSIFICATION	/* * *20030623, karlpeder* " and space handled also */
WITHOUT_CLASSIFICATION	// Check for missing  <html> tag
WITHOUT_CLASSIFICATION	// Check for missing  </html> tag
WITHOUT_CLASSIFICATION	// remove characters after </html> tag
WITHOUT_CLASSIFICATION	// Do not take existing link tags into account
WITHOUT_CLASSIFICATION	// found an url with links - is it the same?
WITHOUT_CLASSIFICATION	// initialisation
WITHOUT_CLASSIFICATION	// current position in s
WITHOUT_CLASSIFICATION	// an email adress was found - check whether its already a link
WITHOUT_CLASSIFICATION	// found an email address with links - is it the same?
WITHOUT_CLASSIFICATION	// same email adress - just append and continue
WITHOUT_CLASSIFICATION	// already handled
WITHOUT_CLASSIFICATION	// already handled
WITHOUT_CLASSIFICATION	// not the same
WITHOUT_CLASSIFICATION	// not the same
WITHOUT_CLASSIFICATION	// no match with mailto link tags
WITHOUT_CLASSIFICATION	// found an open link
WITHOUT_CLASSIFICATION	// check if it is closed
WITHOUT_CLASSIFICATION	// if the closing mark is after the s1 mark do not insert a link
WITHOUT_CLASSIFICATION	// shall we insert a link?
WITHOUT_CLASSIFICATION	// no more matches - append rest of string
WITHOUT_CLASSIFICATION	// no more matches - append rest of string
WITHOUT_CLASSIFICATION	// return result
WITHOUT_CLASSIFICATION	// return result
WITHOUT_CLASSIFICATION	// Test if there is a trailing html tag
WITHOUT_CLASSIFICATION	// an url - check whether its already a link
WITHOUT_CLASSIFICATION	// locate body start- and end tags
WITHOUT_CLASSIFICATION	// no match with link tags
WITHOUT_CLASSIFICATION	// same url - just append and continue
WITHOUT_CLASSIFICATION	// search for closing bracket separately to account for attributes in tag
WITHOUT_CLASSIFICATION	// correct limits if body tags where not found
WITHOUT_CLASSIFICATION	// return body
WITHOUT_CLASSIFICATION	// remove comments
WITHOUT_CLASSIFICATION	// Create boundary to separate the mime-parts
WITHOUT_CLASSIFICATION	// Create the header and body of the multipart
WITHOUT_CLASSIFICATION	// Add the MimePart that will be signed
WITHOUT_CLASSIFICATION	// Add the signature
WITHOUT_CLASSIFICATION	// set the attachment flag
WITHOUT_CLASSIFICATION	// Create boundary to separate the mime-parts
WITHOUT_CLASSIFICATION	// Add pgp-specific content-parameters // we take as default hash-algo SHA1
WITHOUT_CLASSIFICATION	// Create the closing boundary
WITHOUT_CLASSIFICATION	// loop until signing was sucessful or the user cancels the passphrase // dialog
WITHOUT_CLASSIFICATION	// save passphrase in hash map
WITHOUT_CLASSIFICATION	// at the moment we are only supporting gpg. So let us code hard // here the gpg driver
WITHOUT_CLASSIFICATION	// let us hard coding the gpg for each connection. Later we should // support also other variants (like smime)
WITHOUT_CLASSIFICATION	// getting the path to gpg
WITHOUT_CLASSIFICATION	// Add pgp-specific content-parameters
WITHOUT_CLASSIFICATION	// Add the ControlMimePart
WITHOUT_CLASSIFICATION	// Add the encrypted MimePart
WITHOUT_CLASSIFICATION	//con.getProperties().put("USERID", pgpItem.get("id"));
WITHOUT_CLASSIFICATION	/*		 * notifyListeners(new ModelChangedEvent(ModelChangedEvent.ADDED,		 * server));		 */
WITHOUT_CLASSIFICATION	/*		 * notifyListeners(new ModelChangedEvent(ModelChangedEvent.REMOVED));		 */
WITHOUT_CLASSIFICATION	// Get the uids from the headercache
WITHOUT_CLASSIFICATION	// Get the list of the uids on the server // Important: Use a clone of the List since // we must not change it!
WITHOUT_CLASSIFICATION	// substract the uids that we already downloaded -> // newUids contains all uids to fetch from the server
WITHOUT_CLASSIFICATION	// substract the uids on the server from the downloaded uids -> // headerUids are the uids that have been removed from the server
WITHOUT_CLASSIFICATION	// update the cache
WITHOUT_CLASSIFICATION	// return the uids that are new
WITHOUT_CLASSIFICATION	// set dirty flag
WITHOUT_CLASSIFICATION	// Message already deleted from server
WITHOUT_CLASSIFICATION	// Store the complete stream in a source so that we can parse it
WITHOUT_CLASSIFICATION	// set headercache dirty flag
WITHOUT_CLASSIFICATION	// add status information observable
WITHOUT_CLASSIFICATION	// ok pressed
WITHOUT_CLASSIFICATION	// open a port to the server
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// reopen the port
WITHOUT_CLASSIFICATION	// reopen the port
WITHOUT_CLASSIFICATION	// shall we switch to SSL?
WITHOUT_CLASSIFICATION	// if CAPA was not support just give it a try...
WITHOUT_CLASSIFICATION	// CAPAs say that SSL is not supported
WITHOUT_CLASSIFICATION	// AUTH?
WITHOUT_CLASSIFICATION	// CAPA not supported
WITHOUT_CLASSIFICATION	// Just use the default as fallback
WITHOUT_CLASSIFICATION	// AUTH
WITHOUT_CLASSIFICATION	// If the cause is a IMAPExcpetion then only password // wrong // else bogus authentication mechanism
WITHOUT_CLASSIFICATION	// Some error in the client/server communication // --> fall back to default login process
WITHOUT_CLASSIFICATION	// fill with nulls
WITHOUT_CLASSIFICATION	// put size at the specified place
WITHOUT_CLASSIFICATION	// user/pass worked -> this is indeed // a bogus server.
WITHOUT_CLASSIFICATION	// USER/PASS is always supported
WITHOUT_CLASSIFICATION	// APOP?
WITHOUT_CLASSIFICATION	// APOP not supported
WITHOUT_CLASSIFICATION	// register interest on status bar information
WITHOUT_CLASSIFICATION	// synchronize local UID list with server UID list
WITHOUT_CLASSIFICATION	// only download new messages
WITHOUT_CLASSIFICATION	// Delete old message from server if the feature is enabled
WITHOUT_CLASSIFICATION	// logout cleanly
WITHOUT_CLASSIFICATION	// display downloaded message count in statusbar
WITHOUT_CLASSIFICATION	// get inbox-folder from pop3-server preferences
WITHOUT_CLASSIFICATION	// clear statusbar message
WITHOUT_CLASSIFICATION	// clear statusbar message
WITHOUT_CLASSIFICATION	/*			 * // always enable the menuitem again			 * r[0].getPOP3ServerController().enableActions(true);			 */
WITHOUT_CLASSIFICATION	// important for cancel
WITHOUT_CLASSIFICATION	// download message
WITHOUT_CLASSIFICATION	// not needed anymore
WITHOUT_CLASSIFICATION	// try to authenticate
WITHOUT_CLASSIFICATION	// message belongs to which account?
WITHOUT_CLASSIFICATION	// if spam filter is not enabled -> return
WITHOUT_CLASSIFICATION	// move message to trash
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// remove old filters
WITHOUT_CLASSIFICATION	// add filter criteria
WITHOUT_CLASSIFICATION	// set source folder UID
WITHOUT_CLASSIFICATION	// search in subfolders recursively
WITHOUT_CLASSIFICATION	// NOTE if SSL is possible we just need the plain login // since SSL does the encryption for us.
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// server message numbers start with 1 // whereas List numbers start with 0 // -> always increase fetch number
WITHOUT_CLASSIFICATION	// which UID should be downloaded next
WITHOUT_CLASSIFICATION	// check if message isn't too big to download
WITHOUT_CLASSIFICATION	// if message-size is bigger skip download of this message
WITHOUT_CLASSIFICATION	// now download the message
WITHOUT_CLASSIFICATION	// delete message from server
WITHOUT_CLASSIFICATION	// synchronize local UID-list with server
WITHOUT_CLASSIFICATION	// mark message as recent
WITHOUT_CLASSIFICATION	// apply spam filter
WITHOUT_CLASSIFICATION	// apply filter on message
WITHOUT_CLASSIFICATION	// score message and mark as "spam" or "not spam"
WITHOUT_CLASSIFICATION	// is message marked as spam
WITHOUT_CLASSIFICATION	// create search folder
WITHOUT_CLASSIFICATION	// create search folder
WITHOUT_CLASSIFICATION	// check if string is a number
WITHOUT_CLASSIFICATION	// create search criteria
WITHOUT_CLASSIFICATION	// remember request id for "search in results"
WITHOUT_CLASSIFICATION	// remove memorized search folders
WITHOUT_CLASSIFICATION	//searchFolders.remove(searchRequestId);
WITHOUT_CLASSIFICATION	// use local date settings
WITHOUT_CLASSIFICATION	// ensure that we are currently in the mail component
WITHOUT_CLASSIFICATION	// select invisible virtual folder
WITHOUT_CLASSIFICATION	// update message list
WITHOUT_CLASSIFICATION	// create search criteria
WITHOUT_CLASSIFICATION	// remember request id for "search in results"
WITHOUT_CLASSIFICATION	// return empty result, in case the criteria doesn't match the search // term
WITHOUT_CLASSIFICATION	// create virtual folder for criteria
WITHOUT_CLASSIFICATION	// get first one
WITHOUT_CLASSIFICATION	// do the search
WITHOUT_CLASSIFICATION	// retrieve the actual search result data
WITHOUT_CLASSIFICATION	// retrieve the actual search result data
WITHOUT_CLASSIFICATION	// sort all the results
WITHOUT_CLASSIFICATION	// sort all the results
WITHOUT_CLASSIFICATION	// remember search folder for "show total results" action
WITHOUT_CLASSIFICATION	// memorize total result count
WITHOUT_CLASSIFICATION	// memorize total result count
WITHOUT_CLASSIFICATION	// remove all memorized search folders
WITHOUT_CLASSIFICATION	// create virtual folder for each criteria
WITHOUT_CLASSIFICATION	// ensure we are in existing result range
WITHOUT_CLASSIFICATION	// gather result results
WITHOUT_CLASSIFICATION	// if complex use the last search folder
WITHOUT_CLASSIFICATION	// initialise protocol layer
WITHOUT_CLASSIFICATION	// Start login procedure
WITHOUT_CLASSIFICATION	// Init Values // user's email address
WITHOUT_CLASSIFICATION	// no esmtp - use POP3-before-SMTP instead
WITHOUT_CLASSIFICATION	// ask password from user
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// NOTE if SSL is possible we just need the plain login // since SSL does the encryption for us.
WITHOUT_CLASSIFICATION	// offline -> go online
WITHOUT_CLASSIFICATION	// there seems to be no username set in the smtp-options //  -> use username from pop3 or imap options
WITHOUT_CLASSIFICATION	// Authentication is not supported
WITHOUT_CLASSIFICATION	//Turn off authentication for the future
WITHOUT_CLASSIFICATION	// Some error in the client/server communication //  --> fall back to default login process
WITHOUT_CLASSIFICATION	// authentication was successful // -> save name/password
WITHOUT_CLASSIFICATION	// Add a default PLAIN login as fallback
WITHOUT_CLASSIFICATION	// EHLO not supported -> AUTH not supported
WITHOUT_CLASSIFICATION	//Fallback to Securest Login method
WITHOUT_CLASSIFICATION	// No Authentication available
WITHOUT_CLASSIFICATION	// Close Port
WITHOUT_CLASSIFICATION	// now send message source
WITHOUT_CLASSIFICATION	// icon
WITHOUT_CLASSIFICATION	// shortcut key // no shortcut here, because F10 conflicts with system accelerator key // putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_F10, // 0));
WITHOUT_CLASSIFICATION	// check if we are online
WITHOUT_CLASSIFICATION	// get outbox folder
WITHOUT_CLASSIFICATION	// create referenc
WITHOUT_CLASSIFICATION	// start command
WITHOUT_CLASSIFICATION	// get Outbox folder from reference
WITHOUT_CLASSIFICATION	// get UID list of messages
WITHOUT_CLASSIFICATION	// send all messages
WITHOUT_CLASSIFICATION	// get account information from message
WITHOUT_CLASSIFICATION	// use the default account
WITHOUT_CLASSIFICATION	// skip message if there's no account // available to send it
WITHOUT_CLASSIFICATION	// Sent folder
WITHOUT_CLASSIFICATION	// open connection to SMTP server
WITHOUT_CLASSIFICATION	// move all successfully send messages to the Sent folder
WITHOUT_CLASSIFICATION	// start move command
WITHOUT_CLASSIFICATION	/*	 * validate command parameters. At the moment only checks if there are any	 * invalid email addresses	 *	 */
WITHOUT_CLASSIFICATION	// mark message as answered
WITHOUT_CLASSIFICATION	// close composer view
WITHOUT_CLASSIFICATION	// important for cancel
WITHOUT_CLASSIFICATION	// not needed anymore
WITHOUT_CLASSIFICATION	//String invalidRecipient = null;
WITHOUT_CLASSIFICATION	// get composer controller // -> get all the account information from the controller
WITHOUT_CLASSIFICATION	// sent folder
WITHOUT_CLASSIFICATION	// get the SendableMessage object
WITHOUT_CLASSIFICATION	// compose the message suitable for sending
WITHOUT_CLASSIFICATION	// user cancelled sending operation // open composer view
WITHOUT_CLASSIFICATION	// open composer view
WITHOUT_CLASSIFICATION	// open connection
WITHOUT_CLASSIFICATION	// send message
WITHOUT_CLASSIFICATION	// mark as read
WITHOUT_CLASSIFICATION	// save message in Sent folder
WITHOUT_CLASSIFICATION	// does not occur
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// set dirty flag
WITHOUT_CLASSIFICATION	// set dirty flag
WITHOUT_CLASSIFICATION	// open composer view
WITHOUT_CLASSIFICATION	// close connection to server
WITHOUT_CLASSIFICATION	// can no longer assume that sendMessageDialog has been displayed
WITHOUT_CLASSIFICATION	// close send message dialog
WITHOUT_CLASSIFICATION	// re-open composer view
WITHOUT_CLASSIFICATION	// do not prompt user if composer should be really closed
WITHOUT_CLASSIFICATION	// save composer window state
WITHOUT_CLASSIFICATION	// create directory <config-folder>/mail/spamdb
WITHOUT_CLASSIFICATION	// make Columba logger parent of macchiato logger
WITHOUT_CLASSIFICATION	// load database from file
WITHOUT_CLASSIFICATION	// load database from file
WITHOUT_CLASSIFICATION	// get inputstream of message body
WITHOUT_CLASSIFICATION	// get inputstream of message body
WITHOUT_CLASSIFICATION	// get stream
WITHOUT_CLASSIFICATION	// apply additional handcrafted rules
WITHOUT_CLASSIFICATION	// get headers
WITHOUT_CLASSIFICATION	// get headers
WITHOUT_CLASSIFICATION	// put headers in list
WITHOUT_CLASSIFICATION	// put headers in list
WITHOUT_CLASSIFICATION	// get new inputstream
WITHOUT_CLASSIFICATION	// get new inputstream
WITHOUT_CLASSIFICATION	// check if this message was already learned // -> only add if this is not the case
WITHOUT_CLASSIFICATION	// message already exists // --> correct token data
WITHOUT_CLASSIFICATION	// new message
WITHOUT_CLASSIFICATION	// check if this message was already learned
WITHOUT_CLASSIFICATION	// message already exists
WITHOUT_CLASSIFICATION	// --> correct token data
WITHOUT_CLASSIFICATION	// only save if changes exist
WITHOUT_CLASSIFICATION	// cleanup DB -> remove old tokens
WITHOUT_CLASSIFICATION	// mark message as *not* spam
WITHOUT_CLASSIFICATION	// train message as spam or non spam
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//does not happen
WITHOUT_CLASSIFICATION	//does not happen
WITHOUT_CLASSIFICATION	//does not happen
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// message belongs to which account?
WITHOUT_CLASSIFICATION	// get array of source references
WITHOUT_CLASSIFICATION	// get array of source references
WITHOUT_CLASSIFICATION	// mark spam messages
WITHOUT_CLASSIFICATION	// mark non spam messages
WITHOUT_CLASSIFICATION	// calculate message score
WITHOUT_CLASSIFICATION	// check if sender is already in addressbook
WITHOUT_CLASSIFICATION	// add this message to frequency database
WITHOUT_CLASSIFICATION	// train message as spam
WITHOUT_CLASSIFICATION	// train message as ham
WITHOUT_CLASSIFICATION	// try to get the account using the email address
WITHOUT_CLASSIFICATION	// use default account as fallback
WITHOUT_CLASSIFICATION	// if 1/3 of all characters are digits
WITHOUT_CLASSIFICATION	// convert to lower-case
WITHOUT_CLASSIFICATION	// whitespace detected
WITHOUT_CLASSIFICATION	// if already detected before
WITHOUT_CLASSIFICATION	/*     * wait for stream threads to die     *     */
WITHOUT_CLASSIFICATION	// spam found
WITHOUT_CLASSIFICATION	// --no-rebuild option is deprecated in recent SpamAssassin versions
WITHOUT_CLASSIFICATION	/*		ipcHelper.executeCommand(ExternalToolsHelper.getSALearn()				+ " --no-rebuild --spam --single");				*/
WITHOUT_CLASSIFICATION	// don't need this
WITHOUT_CLASSIFICATION	// don't need this
WITHOUT_CLASSIFICATION	/*         * If this is a unix-based system, check the 2 best-known areas for the         * aspell binary.         */
WITHOUT_CLASSIFICATION	/* * Test for boolean equals(Object) */
WITHOUT_CLASSIFICATION	// -- Text Fields
WITHOUT_CLASSIFICATION	// save current location statically for next time
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// -- Buttons
WITHOUT_CLASSIFICATION	// -- Other components
WITHOUT_CLASSIFICATION	// suggestionsJScrollPane.setPreferredSize(
WITHOUT_CLASSIFICATION	// new Dimension( suggestionsJScrollPane.getPreferredSize().width, 75 ) // );
WITHOUT_CLASSIFICATION	// -- Overall Dialog box
WITHOUT_CLASSIFICATION	// suggestionsJScrollPane.setMinimumSize( new Dimension( 200, 300 ) );
WITHOUT_CLASSIFICATION	// suggestionsJScrollPane.setMaximumSize( new Dimension( // Integer.MAX_VALUE, Integer.MAX_VALUE ) );
WITHOUT_CLASSIFICATION	// setSize( 750, getPreferredSize().height );
WITHOUT_CLASSIFICATION	// -- Availables Actions
WITHOUT_CLASSIFICATION	// skip '#'
WITHOUT_CLASSIFICATION	// skip '#'
WITHOUT_CLASSIFICATION	//How to retrieve the mime part's contentID: String contentID = url.getRef(); //initialize stuff here
WITHOUT_CLASSIFICATION	// Default
WITHOUT_CLASSIFICATION	// Protocol defined Mechanisms
WITHOUT_CLASSIFICATION	//SMTP
WITHOUT_CLASSIFICATION	// SASL Mechanisms
WITHOUT_CLASSIFICATION	// We compare three classes: plain, md5 and popbeforesmtp
WITHOUT_CLASSIFICATION	//$JUnit-END$	
WITHOUT_CLASSIFICATION	// first account item
WITHOUT_CLASSIFICATION	// first account item
WITHOUT_CLASSIFICATION	// second account item
WITHOUT_CLASSIFICATION	// second account item
WITHOUT_CLASSIFICATION	// third item, a bit different from the first
WITHOUT_CLASSIFICATION	// third item, a bit different from the first
WITHOUT_CLASSIFICATION	// should have the same hashcodes...
WITHOUT_CLASSIFICATION	// expect a different hashcode from a newly created item...
WITHOUT_CLASSIFICATION	// expect a different hashcode for item and item3
WITHOUT_CLASSIFICATION	// test self equality...
WITHOUT_CLASSIFICATION	// item and item2 should be equal...
WITHOUT_CLASSIFICATION	// item and item2 should be two different objects
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// item should not be equal to a newly created item or null
WITHOUT_CLASSIFICATION	// item and item3 should not be equal
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// !!! Subject: test // create filter configuration // -> check if <Subject> <contains> pattern <test>
WITHOUT_CLASSIFICATION	// !!! Subject: test // create filter configuration // -> check if <Subject> <contains> pattern <test>
WITHOUT_CLASSIFICATION	// !!! Subject: test // create filter configuration // -> check if <Subject> <contains> pattern <test>
WITHOUT_CLASSIFICATION	// !!! From: alice@mail.org // create filter configuration // -> check if <From> <contains> pattern <alice@mail.org>
WITHOUT_CLASSIFICATION	// !!! From: alice@mail.org // create filter configuration // -> check if <From> <contains> pattern <alice@mail.org>
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	//		 create MH folder // -> use homeDirectory as top-level folder // -> this has to be an absolute path
WITHOUT_CLASSIFICATION	/*		 * sourceFolder = new CachedMHFolder("test", "CachedMHFolder",		 * FolderTstHelper.homeDirectory + "/folders/");		 */
WITHOUT_CLASSIFICATION	// delete all files in folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// disabled IMAP folder tests as they require connection // to remote IMAP server // setup(suite, new IMAPTstFactory());
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// delete all files in folder
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add message "1.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// get inputstream of mimepart 0 from folder
WITHOUT_CLASSIFICATION	// create string from inputstream
WITHOUT_CLASSIFICATION	// create string from inputstream
WITHOUT_CLASSIFICATION	// create string from inputstream
WITHOUT_CLASSIFICATION	// compare both messages
WITHOUT_CLASSIFICATION	// compare both messages
WITHOUT_CLASSIFICATION	// compare both messages
WITHOUT_CLASSIFICATION	//      add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// get inputstream of this message from folder
WITHOUT_CLASSIFICATION	// get inputstream of this message from folder
WITHOUT_CLASSIFICATION	//		 add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	//		 add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	//		 add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	//		 add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// get flags of message
WITHOUT_CLASSIFICATION	// set flags
WITHOUT_CLASSIFICATION	// set flags
WITHOUT_CLASSIFICATION	// get message source stream
WITHOUT_CLASSIFICATION	// get message attributes
WITHOUT_CLASSIFICATION	// close inpustream
WITHOUT_CLASSIFICATION	// disabled IMAP folder tests as they require connection // to remote IMAP server //setup(suite, new IMAPTstFactory());
WITHOUT_CLASSIFICATION	//      get flags of message
WITHOUT_CLASSIFICATION	// mark message as read
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// create string from inputstream
WITHOUT_CLASSIFICATION	// compare both messages
WITHOUT_CLASSIFICATION	// get inputstream of this message from folder
WITHOUT_CLASSIFICATION	//		 add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// An individual 3 digit number
WITHOUT_CLASSIFICATION	//      create Command reference
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	//    	 create Command reference
WITHOUT_CLASSIFICATION	//    	 create Command reference
WITHOUT_CLASSIFICATION	//   	 create Command reference
WITHOUT_CLASSIFICATION	// create folders, etc.
WITHOUT_CLASSIFICATION	// delete folders
WITHOUT_CLASSIFICATION	// ask the user
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// disabled IMAP folder tests as they require connection // to remote IMAP server // setup(suite, new IMAPTstFactory());
WITHOUT_CLASSIFICATION	// create string from inputstream
WITHOUT_CLASSIFICATION	// compare both messages
WITHOUT_CLASSIFICATION	// get inputstream of this message from folder
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// get flags of message
WITHOUT_CLASSIFICATION	// set flags
WITHOUT_CLASSIFICATION	//      create Command reference
WITHOUT_CLASSIFICATION	//      create Command reference
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// create Command reference
WITHOUT_CLASSIFICATION	// create Command reference
WITHOUT_CLASSIFICATION	// create Command reference
WITHOUT_CLASSIFICATION	//  add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	/*		 * oldFlags.setRecent(true); oldFlags.setFlagged(true);		 * oldFlags.setExpunged(false);		 */
WITHOUT_CLASSIFICATION	/*		 * assertEquals("copied message should be marked as recent", true, flags		 * .getRecent()); assertEquals("copied message should be marked as		 * flagged", true, flags .getFlagged()); assertEquals("copied message		 * should be marked as not expunged", false, flags.getExpunged());		 */
WITHOUT_CLASSIFICATION	// Add some messages
WITHOUT_CLASSIFICATION	// Add some messages
WITHOUT_CLASSIFICATION	// Add some messages
WITHOUT_CLASSIFICATION	// Check for the new messages
WITHOUT_CLASSIFICATION	// Check for the new messages
WITHOUT_CLASSIFICATION	// Check for success
WITHOUT_CLASSIFICATION	// Check for success
WITHOUT_CLASSIFICATION	// Check for success
WITHOUT_CLASSIFICATION	// Add some new messages // and remove the same number of old messages
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	//		 create Command reference
WITHOUT_CLASSIFICATION	// remove configuration directory
WITHOUT_CLASSIFICATION	// try to get account using the account ID
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// disabled IMAP folder tests as they require connection // to remote IMAP server // setup(suite, new IMAPTstFactory());
WITHOUT_CLASSIFICATION	//      create Command reference
WITHOUT_CLASSIFICATION	//      create Command reference
WITHOUT_CLASSIFICATION	//      create Command reference
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	//  execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	//  execute command -> use mock object class as worker which does // nothing 
WITHOUT_CLASSIFICATION	//AccountList list = MailConfig.getInstance().getAccountList(); //list.addEmptyAccount("pop3");
WITHOUT_CLASSIFICATION	// 3 columns table
WITHOUT_CLASSIFICATION	// create sample headerlist
WITHOUT_CLASSIFICATION	// check number of tree nodes
WITHOUT_CLASSIFICATION	// check number of tree nodes
WITHOUT_CLASSIFICATION	// check number of cached MessageNodes //assertEquals(2, model.getMap().size());
WITHOUT_CLASSIFICATION	// check number of JTable rows
WITHOUT_CLASSIFICATION	// check number of JTable rows
WITHOUT_CLASSIFICATION	// check number of JTree rows
WITHOUT_CLASSIFICATION	// check number of JTree rows
WITHOUT_CLASSIFICATION	// remove MessageNode with uid=0
WITHOUT_CLASSIFICATION	// check number of cached MessageNodes //assertEquals(1, model.getMap().size());
WITHOUT_CLASSIFICATION	// if this is the last token, check if the last element // is the same than in the array
WITHOUT_CLASSIFICATION	// if this is the last token, check if the last element // is the same than in the array
WITHOUT_CLASSIFICATION	// check for at least 10 whitespaces
WITHOUT_CLASSIFICATION	// if this is the last token, check if the last element // is the same than in the array
WITHOUT_CLASSIFICATION	// if this is the last token, check if the last element // is the same than in the array
WITHOUT_CLASSIFICATION	/*	 * test with null list	 */
WITHOUT_CLASSIFICATION	// create group with two contacts
WITHOUT_CLASSIFICATION	/*	 * test with empty list	 */
WITHOUT_CLASSIFICATION	// url decode
WITHOUT_CLASSIFICATION	/*	 * Test with all kinds of input data	 */
WITHOUT_CLASSIFICATION	// first group contains first contact item
WITHOUT_CLASSIFICATION	// create group containing first contact
WITHOUT_CLASSIFICATION	// first group contains first contact item
WITHOUT_CLASSIFICATION	// add contact to roaster, nickname="", group=null
WITHOUT_CLASSIFICATION	/*	 * Test method for	 * 'org.columba.mail.parser.ListBuilder.createStringListFromItemList(List<IHeaderItem>)'	 */
WITHOUT_CLASSIFICATION	//public abstract IChatMediator getChatMediator();
WITHOUT_CLASSIFICATION	// mock folder class, only returns folder id
WITHOUT_CLASSIFICATION	// mock object folder facade, only returns folder list
WITHOUT_CLASSIFICATION	//public abstract void setChatMediator(IChatMediator mediator);
WITHOUT_CLASSIFICATION	// we are only interested on subscription requests
WITHOUT_CLASSIFICATION	// if already in roster
WITHOUT_CLASSIFICATION	// create chat connection, if not available yet
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// get Columba's top-level configuration directory
WITHOUT_CLASSIFICATION	// create top-level configuration directory
WITHOUT_CLASSIFICATION	// fall-back to global resource loader
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// --no-rebuild option is deprecated in recent SpamAssassin versions
WITHOUT_CLASSIFICATION	// and add it to the buddylist
WITHOUT_CLASSIFICATION	// example: fdietz@jabber.org/Jabber-client // -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// add all contacts as leafs of group folders
WITHOUT_CLASSIFICATION	// add all groups as folder to JTree
WITHOUT_CLASSIFICATION	// buddy already exists
WITHOUT_CLASSIFICATION	// add "Uncategorized" note
WITHOUT_CLASSIFICATION	// add to global buddy list
WITHOUT_CLASSIFICATION	// update status information
WITHOUT_CLASSIFICATION	// create new buddy
WITHOUT_CLASSIFICATION	// found group for buddy
WITHOUT_CLASSIFICATION	// get presence
WITHOUT_CLASSIFICATION	// persist changes on exit
WITHOUT_CLASSIFICATION	// check if this buddy belongs to a group
WITHOUT_CLASSIFICATION	// add to "Uncategorized" node
WITHOUT_CLASSIFICATION	// didn't find any group for this buddy
WITHOUT_CLASSIFICATION	// load configuraation
WITHOUT_CLASSIFICATION	// create account object
WITHOUT_CLASSIFICATION	// use key/value properties file
WITHOUT_CLASSIFICATION	// load properties from stream
WITHOUT_CLASSIFICATION	// open stream to file
WITHOUT_CLASSIFICATION	// save properties to file
WITHOUT_CLASSIFICATION	// create stream to file
WITHOUT_CLASSIFICATION	// store account data in properties
WITHOUT_CLASSIFICATION	// selected buddy in buddylist
WITHOUT_CLASSIFICATION	// selected buddy in buddylist
WITHOUT_CLASSIFICATION	// use selected buddy
WITHOUT_CLASSIFICATION	// use selected buddy
WITHOUT_CLASSIFICATION	// prompt for jabber id
WITHOUT_CLASSIFICATION	// prompt for jabber id
WITHOUT_CLASSIFICATION	// prompt for jabber id
WITHOUT_CLASSIFICATION	// if user cancelled action
WITHOUT_CLASSIFICATION	// awt-event-thread
WITHOUT_CLASSIFICATION	// send message
WITHOUT_CLASSIFICATION	/*         * If this is a unix-based system, check the 2 best-known areas for the         * aspell binary.         */
WITHOUT_CLASSIFICATION	/*         * If this is a unix-based system, check the 2 best-known areas for the         * aspell binary.         */
WITHOUT_CLASSIFICATION	// example: fdietz@jabber.org/Jabber-client // -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	// example: fdietz@jabber.org/Jabber-client // -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	// example: fdietz@jabber.org/Jabber-client // -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	//DateFormat format = DateFormat.getTimeInstance(DateFormat.SHORT); // green color
WITHOUT_CLASSIFICATION	//DateFormat format = DateFormat.getTimeInstance(DateFormat.SHORT);
WITHOUT_CLASSIFICATION	// private SendButtonController sendButton;
WITHOUT_CLASSIFICATION	// JPanel mainPanel = new JPanel(mainLayout); // mainPanel.setBorder(Borders.DIALOG_BORDER);
WITHOUT_CLASSIFICATION	// create message object
WITHOUT_CLASSIFICATION	// set message body
WITHOUT_CLASSIFICATION	// clear text box
WITHOUT_CLASSIFICATION	// return (ChatMediator) chatList.get(index);
WITHOUT_CLASSIFICATION	// private JPasswordField passwordTextField;
WITHOUT_CLASSIFICATION	// passwordTextField.setText(account.getPassword());
WITHOUT_CLASSIFICATION	// b.addSeparator("Account Options");
WITHOUT_CLASSIFICATION	// b.append("Pass&word:", passwordTextField);
WITHOUT_CLASSIFICATION	// passwordTextField = new JPasswordField(10);
WITHOUT_CLASSIFICATION	/*	 * public String getPassword() { return passwordTextField.getText(); }	 */
WITHOUT_CLASSIFICATION	// comboBox.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	/*			 * setIconTextGap(5); setVerticalAlignment(JLabel.CENTER);			 */
WITHOUT_CLASSIFICATION	// IAccount account = object.getAccount();
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	// Force that the last line in buffer does NOT have a newline
WITHOUT_CLASSIFICATION	// example: fdietz@jabber.org/Jabber-client // -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	// example: fdietz@jabber.org/Jabber-client // -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	// connect to server // new ConnectAction(this).actionPerformed(null);
WITHOUT_CLASSIFICATION	// checkBox.addItem("Custom Message...", null); // checkBox.addItem("Leave...");
WITHOUT_CLASSIFICATION	// private void addStatus(String tooltip, ImageIcon icon) { // JLabel label = new JLabel(icon); // label.setToolTipText(tooltip); // // comboBox.addItem(tooltip); // }
WITHOUT_CLASSIFICATION	// just ignore unknown people
WITHOUT_CLASSIFICATION	//IAccount account = object.getAccount();
WITHOUT_CLASSIFICATION	// contact
WITHOUT_CLASSIFICATION	// group
WITHOUT_CLASSIFICATION	// Set bean properties
WITHOUT_CLASSIFICATION	// The following methods override the defaults for performance reasons
WITHOUT_CLASSIFICATION	// Make sure we get all log info as fast as we can get ahold of it.
WITHOUT_CLASSIFICATION	//notifyTableListeners(new TableModelEvent(this, 0, logMessages.size()));
WITHOUT_CLASSIFICATION	//notifyTableListeners(new TableModelEvent(this, logMessages.size(), logMessages.size(), TableModelEvent.ALL_COLUMNS, TableModelEvent.INSERT));
WITHOUT_CLASSIFICATION	//"right:max(40dlu;pref),3dlu,
WITHOUT_CLASSIFICATION	//private JTable logTable;
WITHOUT_CLASSIFICATION	//bottomPanel.add(closeButton);
WITHOUT_CLASSIFICATION	// open configuration file 
WITHOUT_CLASSIFICATION	// navigate to treenode "text"
WITHOUT_CLASSIFICATION	// read attribute "value"
WITHOUT_CLASSIFICATION	// start parsing line
WITHOUT_CLASSIFICATION	// found new token
WITHOUT_CLASSIFICATION	// open file
WITHOUT_CLASSIFICATION	// add contact to addressbook
WITHOUT_CLASSIFICATION	// parse line by line
WITHOUT_CLASSIFICATION	// if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	// if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	// found new message
WITHOUT_CLASSIFICATION	// save last message, because while loop aborted before being able to // save message
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// model -> view // read configuration and set gui elements appropriately
WITHOUT_CLASSIFICATION	// view -> model // write configuration given the data the user entered in the gui
WITHOUT_CLASSIFICATION	// create new contact card
WITHOUT_CLASSIFICATION	// the boundary parameter
WITHOUT_CLASSIFICATION	// parameters ~ rest of string
WITHOUT_CLASSIFICATION	// strip "'s
WITHOUT_CLASSIFICATION	// Lines not starting with "From ???@???" is part of the message // (headers or body)
WITHOUT_CLASSIFICATION	// we reached "From ..." (start of new message)
WITHOUT_CLASSIFICATION	// reset for new message
WITHOUT_CLASSIFICATION	// save last message (while loop terminated before last msg was saved)
WITHOUT_CLASSIFICATION	// ** End of method importMailboxFile
WITHOUT_CLASSIFICATION	// invalid date format - not enough tokens in it!!
WITHOUT_CLASSIFICATION	// ** End of method getDateHeader
WITHOUT_CLASSIFICATION	// divide message into headers and body
WITHOUT_CLASSIFICATION	// loop over headers and modify them as needed
WITHOUT_CLASSIFICATION	// a header
WITHOUT_CLASSIFICATION	// Logging.log.severe( // "Not enough tokens in \"" // + dateStr // + "\" to create Date: header. Returning null", // e);
WITHOUT_CLASSIFICATION	// day of week // month // day of month // time // year
WITHOUT_CLASSIFICATION	// handle header
WITHOUT_CLASSIFICATION	// parse // Content-Type
WITHOUT_CLASSIFICATION	// boundary not found - Content-Type must be changed
WITHOUT_CLASSIFICATION	// just convert it to text/plain or text/html
WITHOUT_CLASSIFICATION	/*							 * mixed or unknown multipart type (to be treated as							 * mixed). This is typically a message with							 * attachments. Eudora just stores links to them -							 * therefore we create a new multipart/mixed message							 * with 2nd part = html page with links to							 * attachments							 */
WITHOUT_CLASSIFICATION	// no attachments found - just convert it to // text/plain or text/html
WITHOUT_CLASSIFICATION	/*					 * Such a header is used by Eudora to indicate attachments					 * for outgoing messages. Outgoing messages have no					 * Content-Type specified. Therefore the Content-Type header					 * can be safely set here without risk of conflicts with the					 * modifications made above					 */
WITHOUT_CLASSIFICATION	// attachments found
WITHOUT_CLASSIFICATION	// no attachments found - just insert a // Content-Type header // extra // header // necessary // X-Attachments header is // replaced
WITHOUT_CLASSIFICATION	// get unique boundary (not checked against att. // list part - but guess its ok)
WITHOUT_CLASSIFICATION	// extra // header // necessary // X-Attachments header is // replaced
WITHOUT_CLASSIFICATION	// we have now added // such a header
WITHOUT_CLASSIFICATION	// ** End of while loop over headers
WITHOUT_CLASSIFICATION	/*		 * If no Content-Type header was found, it is necessary to construct a		 * new one (for outgoing msg Eudora never includes a Content-Type =>		 * html msg is not shown correctly).		 */
WITHOUT_CLASSIFICATION	// save message to destination folder
WITHOUT_CLASSIFICATION	// ** End of method convertAndSavemessage
WITHOUT_CLASSIFICATION	// create full msg from headers and body
WITHOUT_CLASSIFICATION	// ... and save it
WITHOUT_CLASSIFICATION	// NB: This is the saveMessage method def. in // DefaultMessageImporter
WITHOUT_CLASSIFICATION	// Logging.log.severe("Error saving converted message", e);
WITHOUT_CLASSIFICATION	// ** End of method saveMessage
WITHOUT_CLASSIFICATION	// build new message body
WITHOUT_CLASSIFICATION	// initial guess
WITHOUT_CLASSIFICATION	// unique boundary found
WITHOUT_CLASSIFICATION	// ** End of method divideMessage
WITHOUT_CLASSIFICATION	// is it HTML or plain text
WITHOUT_CLASSIFICATION	// Logging.log.severe("Error while looking for charset", e);
WITHOUT_CLASSIFICATION	// for easier search / // matching
WITHOUT_CLASSIFICATION	// meta tag with content definition found
WITHOUT_CLASSIFICATION	// charset is specified - find it
WITHOUT_CLASSIFICATION	// step // past // spaces // find position of '>', '"'. or ' ' which is = end // of charset name
WITHOUT_CLASSIFICATION	// charset is found from line, not lcLine => not // forced lower case
WITHOUT_CLASSIFICATION	// we found what we were looking for
WITHOUT_CLASSIFICATION	// Logging.log.severe( // "Error while looking for charset", // e);
WITHOUT_CLASSIFICATION	// this will terminate the loop
WITHOUT_CLASSIFICATION	// end of while loop
WITHOUT_CLASSIFICATION	// ** End of method guessBodyContentType
WITHOUT_CLASSIFICATION	// handle attachment (by creating a link)
WITHOUT_CLASSIFICATION	// no attachments found - should in fact have been checked by the // caller
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// Server does not support UTF-8 // -> fall back to System default
WITHOUT_CLASSIFICATION	// We trigger an update only when the exists changed // which should be equal with a Recent change.
WITHOUT_CLASSIFICATION	// we are using this inpustream multiple times // --> istream will be closed by CloneStreamMaster
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// handle attachment (by creating a link)
WITHOUT_CLASSIFICATION	// *20030515, kpo* '\n' appended
WITHOUT_CLASSIFICATION	// body untouched
WITHOUT_CLASSIFICATION	// attachments found... // insert start and end for html
WITHOUT_CLASSIFICATION	// insert header for attachment list
WITHOUT_CLASSIFICATION	// build new body part
WITHOUT_CLASSIFICATION	// build new body part
WITHOUT_CLASSIFICATION	// return parts
WITHOUT_CLASSIFICATION	// ** End of method createAttachmentListFromHeader
WITHOUT_CLASSIFICATION	// part of body
WITHOUT_CLASSIFICATION	// insert start and end for html
WITHOUT_CLASSIFICATION	// no attachments found
WITHOUT_CLASSIFICATION	// Logging.log.severe("Error parsing body for attachments", e);
WITHOUT_CLASSIFICATION	// ** End of method createAttachmentListFromAttachmentConverted
WITHOUT_CLASSIFICATION	// ** End of class EudoraMailImportFilter
WITHOUT_CLASSIFICATION	// This Method frees a given String from Comments defined in Rfc822 
WITHOUT_CLASSIFICATION	// This Method delivers the next line
WITHOUT_CLASSIFICATION	// just a simple example
WITHOUT_CLASSIFICATION	// you need a sound.wav in your program folder
WITHOUT_CLASSIFICATION	// get the header of the message
WITHOUT_CLASSIFICATION	// convert the condition string to an int which is easier to handle
WITHOUT_CLASSIFICATION	// get the "To" headerfield from the header
WITHOUT_CLASSIFICATION	// get the "Cc" headerfield from the header
WITHOUT_CLASSIFICATION	// test if our To headerfield contains or contains not the search // string
WITHOUT_CLASSIFICATION	// do the same for the Cc headerfield and OR the results
WITHOUT_CLASSIFICATION	// return the result as boolean value true or false
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// parse for urls / email adresses and substite with HTML-code // html = HtmlParser.substituteURL(html); // html = HtmlParser.substituteEmailAddress(html);
WITHOUT_CLASSIFICATION	// since the indices on the pop server start with 1 we add // a dummy null for the 0 element in the list
WITHOUT_CLASSIFICATION	// start command which adds message to folder // and calls apply-filter on this specific message
WITHOUT_CLASSIFICATION	// If the cause is a SMTPExcpetion then only password // wrong // else bogus authentication mechanism
WITHOUT_CLASSIFICATION	// VALIDATION DISABLE ! Sebastian Witt 25.07.04, // "NAME" <email@somewhat.de> isnt true, which should :( // root@localhost is valid, but not with this check. :( // root is also valid (with local mailserver), but not with this check // :(
WITHOUT_CLASSIFICATION	// "-L" use local tests only // String cmd = "spamassassin -L"; // String cmd = "spamc -c -L";
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// if this is the last token, check if the last element // is the same than in the array
WITHOUT_CLASSIFICATION	// create config-folder //		File file = new File("test_config"); //		file.mkdir(); // //		new Config(file); // //		Logging.DEBUG = true; //		Logging.createDefaultHandler(); // //		// init mail component //		new MailMain().init(); //		new AddressbookMain().init(); // //		// now load all available plugins //		PluginManager.getInstance().initExternalPlugins();
WITHOUT_CLASSIFICATION	// @author: fdietz // Disabled this testcase, as it doesn't really fit into // this category of message operations // It fails because we would have to create a folder-hierarchy // including parent folders to execute the move
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// mock objects contact facade, only returns getContactItem() and // getAllGroups()
WITHOUT_CLASSIFICATION	// public IChatMediator getChatMediator() { // return mediator; // }
WITHOUT_CLASSIFICATION	// // Logging stuff //
WITHOUT_CLASSIFICATION	// if line doesn't start with "From" or line length is 0 // -> save everything in StringBuffer
WITHOUT_CLASSIFICATION	// Date header // we got a date header (store this // fact for later use
WITHOUT_CLASSIFICATION	// append the new Date // header
WITHOUT_CLASSIFICATION	// PlaceRect bgAbsRect = new AbsRect(new AtStart(0), new AtStart(0), new // AtEnd(0), new AtEnd(0), null, null, shadowInsets);
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// check if firstname, middlename or lastname contain only valid // characters
WITHOUT_CLASSIFICATION	//		TagList tagList = new ContactTagList(this); //		JScrollPane tagListScrollPane = new JScrollPane(tagList); //		tagListScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER); //		tagListScrollPane //				.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	// commandline arguments which can't be handled by the core // are passed along to other subcomponents
WITHOUT_CLASSIFICATION	// register at shutdown manager // -> this will save all configuration data, when closing Columba
WITHOUT_CLASSIFICATION	// g.setColor(bg); // g.fillRect(0, h - 3, 3, 3); // g.fillRect(w - 3, 0, 3, 3); // g.fillRect(w - 3, h - 3, 3, 3);
WITHOUT_CLASSIFICATION	// b_rmonth.setFocusPainted(false); // b_rmonth.setOpaque(false); // b_rmonth.addActionListener(this);
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// add toolbar // panel.add(toolbar, BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	// finally, add all external extension menu additions // for example: Hello World Plugin
WITHOUT_CLASSIFICATION	// small icon for menu // putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("stock_about-16.png"));
WITHOUT_CLASSIFICATION	// update popup menu with search term before its made visible // textField.addPopupMenuListener(this);
WITHOUT_CLASSIFICATION	//textField.showPopup(); //textField.requestFocus();
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// Implement the content hander methods that // will delegate SAX events to the tag tracker network.
WITHOUT_CLASSIFICATION	//Integer priority = Integer.valueOf(pattern); //return priority;
WITHOUT_CLASSIFICATION	// We use the attributes and flags from the cache // but the parsed header from the parsed message
WITHOUT_CLASSIFICATION	// create one list containing the marked items, which have to be "unmarked" // and another list containing the items remained to be marked
WITHOUT_CLASSIFICATION	// resync search engine // -> this is only needed for Lucene right now
WITHOUT_CLASSIFICATION	// folders have same root folder // -> for example: two IMAP folders on the same server // -----> this means we use server-side copying which // -----> is much faster than using inputstreams here // // also used for local folders, which saves some parsing work
WITHOUT_CLASSIFICATION	//DocumentParser parser = new DocumentParser(); // decode message body with respect to charset
WITHOUT_CLASSIFICATION	// one line is added to the header for each attachment // (which has a filename defined)
WITHOUT_CLASSIFICATION	// create a Command for every action of this filter // -> create a compound object which encapsulates all commands
WITHOUT_CLASSIFICATION	// First remove all headers that are in the headerlist but // not the Folder
WITHOUT_CLASSIFICATION	// There are still more messages to update // -> issue another fetch messages command
WITHOUT_CLASSIFICATION	// Something is wrong // Sync again
WITHOUT_CLASSIFICATION	// remember parent path // (this is necessary for IMAPRootFolder sync operations)
WITHOUT_CLASSIFICATION	// if line doesn't start with "From" or line length is 0 //  -> save everything in StringBuffer
WITHOUT_CLASSIFICATION	// search request isn't covered by query engine // -> fall back to default search engine
WITHOUT_CLASSIFICATION	// clear message viewer // /tableController.valueChanged(new // ListSelectionEvent(this,-1,-1,false));
WITHOUT_CLASSIFICATION	// register Component as FocusOwner // FocusManager.getInstance().registerComponent(this);
WITHOUT_CLASSIFICATION	// NOTE if SSL is possible we just need the plain login // since SSL does the encryption for us.
WITHOUT_CLASSIFICATION	// this is save because the only shutdown plugin // to stop this server, the configuration isn't touched
WITHOUT_CLASSIFICATION	// register for configuration changes for the html(enabled/disabled) // state
WITHOUT_CLASSIFICATION	// get size of content (width, height is size without scaling) // scaled size
WITHOUT_CLASSIFICATION	//should not occur, otherwise the bundlePath would not be in the // hashtable
WITHOUT_CLASSIFICATION	// small icon for menu //		putValue(SMALL_ICON, ImageLoader //				.getSmallImageIcon("configure_16_mail.png"));
WITHOUT_CLASSIFICATION	// we assume user cancelled search // -> remove cached command
WITHOUT_CLASSIFICATION	// small icon for menu //putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("16_sign.png"));
WITHOUT_CLASSIFICATION	//	public VirtualFolder(FolderItem item) { //		super(item); // //		headerList = new MemoryHeaderList(); // //		ensureValidFilterElement(); //	}
WITHOUT_CLASSIFICATION	//DefaultItem item = new DefaultItem(element); //item.set("header_enabled", getState());
WITHOUT_CLASSIFICATION	//      ->set source reference in composermodel // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// the following lines add cut/copy/paste/undo/redo/selectall // actions support using the Columba action objects. // // This means that we only have a single instance of these // specific actions, which is shared by all menuitems and // toolbar buttons.
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them // here)
WITHOUT_CLASSIFICATION	// Must go backwards or else the filters will swap places with each // other.
WITHOUT_CLASSIFICATION	// comments are not // displayed // correctly in composer
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// user may have changed hostname. use dialog settings instead of // stored settings
WITHOUT_CLASSIFICATION	// super.getTableCellRendererComponent( table, value, isSelected, // hasFocus, row, column );
WITHOUT_CLASSIFICATION	//bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) ); //bottom.add( Box.createHorizontalStrut());
WITHOUT_CLASSIFICATION	// also register interest in tree seleciton events // for updating the title
WITHOUT_CLASSIFICATION	// Register as listener to the SelectionManger // to check for selection changes
WITHOUT_CLASSIFICATION	// if we don't use this here - actions like reply would only work // on the // the encrypted message
WITHOUT_CLASSIFICATION	// no charset specified -> automatic mode // -> try to determine charset based on content parameter
WITHOUT_CLASSIFICATION	// create attachment component with text, icon // tooltip, context menu and double-click action
WITHOUT_CLASSIFICATION	// changing the selection to the specified row // changeSelection(row, 0, true, false);
WITHOUT_CLASSIFICATION	// at any time i get here uids of length 0. If this is so we should // return and do nothing
WITHOUT_CLASSIFICATION	// *20040510, karlpeder* columns may be null (first time we // visit a folder!?)
WITHOUT_CLASSIFICATION	// Folder trash = (AbstractMessageFolder) // MainInterface.treeModel.getTrashFolder(); // trash folder has uid==105
WITHOUT_CLASSIFICATION	//        putValue(LARGE_ICON, ImageLoader //                .getImageIcon("mark-as-important-16.png"));
WITHOUT_CLASSIFICATION	// table is empty // -> just display empty table
WITHOUT_CLASSIFICATION	// @author: fdietz never request focus //view.requestFocus();
WITHOUT_CLASSIFICATION	// folder.showFilterDialog(((AbstractMailFrameController) // getFrameMediator()));
WITHOUT_CLASSIFICATION	// IMAP folder specific // - Is this folder selectable (does it contain messages?)
WITHOUT_CLASSIFICATION	// minimal unchecked time is 30 Seconds // in ms
WITHOUT_CLASSIFICATION	// create config-folder //		File file = new File("test_config"); //		file.mkdir(); // //		new Config(file); // //		Logging.DEBUG = true; //		Logging.createDefaultHandler(); // //		//		 init mail component //		new MailMain().init(); // //		new AddressbookMain().init(); // //		// now load all available plugins //		PluginManager.getInstance().initExternalPlugins();
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	/*		((AbstractFolder)MailInterface.treeModel.getRoot()).add(cyrusRoot);		((AbstractFolder) MailInterface.treeModel.getRoot())        .getConfiguration().getRoot().addElement(        		cyrusRoot.getConfiguration().getRoot());		MailInterface.treeModel.nodeStructureChanged(cyrusRoot.getParent());		*/
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// setPreferredSize(new Dimension(250, 300));
WITHOUT_CLASSIFICATION	/*         * buffer.append(getShortClassName(record.getSourceClassName()));         * buffer.append("."); buffer.append(record.getSourceMethodName());         * buffer.append(" - ");         */
WITHOUT_CLASSIFICATION	// // Table model stuff //
WITHOUT_CLASSIFICATION	// // LIST model stuff //
WITHOUT_CLASSIFICATION	// -> import message in Columba
WITHOUT_CLASSIFICATION	// counts how many messages has been // processed // date fetched from "From ???@??? ..."
WITHOUT_CLASSIFICATION	// If a msg has been read, import it into Columba
WITHOUT_CLASSIFICATION	// fetch date from // "From ???@??? // ..."
WITHOUT_CLASSIFICATION	/*					 * For multipart Content-Types we need to take action (if					 * boundary is nonexistent): Eudora stores content type =					 * multipart even though the message is not really multipart -					 * e.g. because an attachment already has has been decoded					 * by Eudora)					 */
WITHOUT_CLASSIFICATION	// attachments found
WITHOUT_CLASSIFICATION	// store header after processing
WITHOUT_CLASSIFICATION	/*		 * If no Date header was found, it is necessary to contruct a new one		 * (this is the case for outgoing messages from Eudora)		 */
WITHOUT_CLASSIFICATION	/*			 * It is HTML, try to find out which charset from meta tag: NB: The			 * seach for charset below is very simple. It assumes that the meta			 * tag to find is on ITS OWN LINE, i.e. " <meta" can be found at the			 * beginning of the line, and all the content of the tag is found on			 * the same line! Could be better, but this is first shot...			 */
WITHOUT_CLASSIFICATION	// body untouched
WITHOUT_CLASSIFICATION	// insert header for attachment list
WITHOUT_CLASSIFICATION	// system beep
WITHOUT_CLASSIFICATION	// for time consuming tasks you need to create // your own Command
WITHOUT_CLASSIFICATION	// border
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //nameLabel.setFont(boldFont);
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //enableLabel.setFont(boldFont);
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	/*	 * @see TestCase#setUp()	 */
WITHOUT_CLASSIFICATION	/*	 * @see TestCase#setUp()	 */
WITHOUT_CLASSIFICATION	/*	 * @see TestCase#tearDown()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#remove(int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.store.api.IStoreListener#itemAdded(org.columba.calendar.store.api.StoreEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.store.api.IStoreListener#itemRemoved(org.columba.calendar.store.api.StoreEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.store.api.IStoreListener#itemChanged(org.columba.calendar.store.api.StoreEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.ui.calendar.api.IActivitySelectionChangedListener#selectionChanged(org.columba.calendar.ui.calendar.api.ActivitySelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#getSelectedActivity()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#getView()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#setViewMode(int)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#recreateFilterRows()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see com.miginfocom.ashape.interaction.InteractionListener#interactionOccured(com.miginfocom.ashape.interaction.InteractionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see com.miginfocom.calendar.datearea.ActivityMoveListener#activityMoved(com.miginfocom.calendar.datearea.ActivityMoveEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#viewToday()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#viewPrevious()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#setVisibleDateRange(org.columba.calendar.model.api.IDateRange)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see com.miginfocom.calendar.datearea.ActivityDragResizeListener#activityDragResized(com.miginfocom.calendar.datearea.ActivityDragResizeEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.ui.list.api.ICalendarListView#getView()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.ui.list.api.ICalendarListView#getSelected()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.facade.IHeaderItem#setId(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.facade.IGroupItem#getContacts()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.facade.IGroupItem#setContacts(java.util.List)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.facade.IGroupItem#addContact(org.columba.addressbook.facade.IContactItem)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.facade.IGroupItem#removeContact(org.columba.addressbook.facade.IContactItem)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.facade.IGroupItem#getContactCount()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isCopyActionEnabled() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isPasteActionEnabled() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isDeleteActionEnabled() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isSelectAllActionEnabled() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isUndoActionEnabled() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isRedoActionEnabled() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#cut() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#copy() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#paste() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#delete() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#undo() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#redo() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#selectAll() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#getComponent() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.gui.table.model.TableModelDecorator#getRowCount()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#getFilterActionList()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#getFilterRule()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#getEnabled()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#setEnabled(boolean)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#setName(java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#getName()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#clone()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.model.IEmailModel#getAddress()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.model.IEmailModel#getType()	 */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.core.taskmanager.ITaskManager#removeTaskManagerListener(org.columba.core.taskmanager.TaskManagerListener)         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.command.ICommand#updateGUI()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.command.ICommand#execute(org.columba.api.command.IWorkerStatusController)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.command.ICommand#getReference()	 */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.api.command.IWorkerStatusController#removeWorkerStatusChangeListener(org.columba.core.gui.statusbar.event.WorkerStatusChangeListener)         */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.api.command.IWorkerStatusController#addWorkerStatusChangeListener(org.columba.core.gui.statusbar.event.WorkerStatusChangeListener)         */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.api.command.IWorkerStatusController#getTimeStamp()         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterAction#getUid()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterAction#setUid(java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterAction#getAction()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterAction#setAction(java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#addEmptyCriteria()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#add(org.columba.core.filter.FilterCriteria)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#remove(int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#removeAll()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#removeLast()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#get(int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#count()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#getCondition()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#setCondition(java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#setCondition(int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#getConditionInt()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#add(org.columba.core.filter.Filter)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#addAll(org.columba.core.filter.FilterList)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#remove(org.columba.core.filter.Filter)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#insert(org.columba.core.filter.Filter, int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#moveUp(org.columba.core.filter.Filter)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#moveDown(org.columba.core.filter.Filter)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#move(org.columba.core.filter.Filter, int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#move(int, int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#indexOf(org.columba.core.filter.Filter)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#count()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#get(int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterCriteria#setCriteria(int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterCriteria#getCriteria()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.filter.IFilterActionList#get(int)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.filter.IFilterActionList#remove(int)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.filter.IFilterActionList#addEmptyAction()     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList,	 *      java.lang.Object, int, boolean, boolean)	 */
WITHOUT_CLASSIFICATION	// notify all listeners // @see org.columba.core.gui.util.FontProperties // @see org.columba.mail.gui.message.TextViewer // @see org.columba.mail.gui.composer.text.TextEditorController
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see net.javaprog.ui.wizard.AbstractStep#createComponent()         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see net.javaprog.ui.wizard.Step#prepareRendering() */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see net.javaprog.ui.wizard.AbstractStep#createComponent() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see net.javaprog.ui.wizard.Step#prepareRendering() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see net.javaprog.ui.wizard.AbstractStep#createComponent() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see net.javaprog.ui.wizard.Step#prepareRendering() */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.frame.IFrameManager#getActiveFrameMediator()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.frame.IFrameManager#openView(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.frame.IFrameManager#switchView(org.columba.core.gui.frame.IContainer,	 *      java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IFrameMediator#getContentPane()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IFrameMediator#loadPositions()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IFrameMediator#savePositions()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IFrameMediator#isInitialized()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#registerDockable(org.columba.api.gui.frame.IDockable)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#registerDockable(java.lang.String, java.lang.String, javax.swing.JComponent, javax.swing.JPopupMenu)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#getDockableIterator()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#dock(org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDock.REGION, float)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#dock(org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDock.REGION)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#dock(org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDock.REGION, float)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#setSplitProportion(org.columba.api.gui.frame.IDockable, float)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see junit.framework.TestCase#setUp() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*Overwrite the method to maintain line breaks when copying 		 * messages form the MessageViewer.		 * @author aoki-y		 * @see javax.swing.text.html.HTMLDocument#getReader(int)		 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see javax.swing.table.TableCellRenderer#getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.table.TableCellRenderer#getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int) */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int) */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.table.TableModel#isCellEditable(int, int) */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.table.TableCellRenderer#getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int) */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.profiles.IProfileManager#getProfile(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.profiles.IProfileManager#getProfiles()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.profiles.IProfileManager#getCurrentProfile()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList,	 *      java.lang.Object, int, boolean, boolean)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.plugin.AbstractConfigPlugin#createPanel()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.plugin.AbstractConfigPlugin#updateComponents(boolean)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see java.net.URLClassLoader#findResource(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.print.cParagraph#print(java.awt.Graphics2D)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.search.api.ISearchResult#getTitle()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.search.api.ISearchResult#getDescription()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.search.api.ISearchResult#getLocation()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.shutdown.IShutdownManager#register(java.lang.Runnable)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.shutdown.IShutdownManager#shutdown(int)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.gui.table.model.TableModelModifier#remove(java.lang.Object[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.gui.table.model.TableModelModifier#set(org.columba.mail.message.HeaderList)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.message.HeaderInterface#count()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.message.HeaderInterface#getFlags()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.message.HeaderInterface#set(java.lang.String, java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#getHeader()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#getBodyPart()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#getMimePart(int)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#getMimePartCount()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#getSource()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#setSource(org.columba.ristretto.message.io.Source)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.mail.folder.FolderTreeNode#getName() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.mail.folder.RootFolder#getTrashFolder() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.mail.folder.RootFolder#getInbox() */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.folder.AbstractMessageFolder#loadMessageFolderInfo()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#add(org.columba.mail.message.IColumbaHeader, java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#clear()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#containsValue(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#count()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#get(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#getUids()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#keySet()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#remove(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.PersistantHeaderList#persist()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#headerIterator()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#keyIterator()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#update(java.lang.Object, org.columba.mail.message.IColumbaHeader)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.message.ICloseableIterator#close()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see java.util.Iterator#hasNext()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see java.util.Iterator#next()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see java.util.Iterator#remove()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.FolderTreeNode#addSubfolder(org.columba.mail.folder.FolderTreeNode)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getHeaderFields(java.lang.Object,	 *      java.lang.String[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getMessageSourceStream(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getMimePartSourceStream(java.lang.Object,	 *      java.lang.Integer[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.Folder#isInboxFolder()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.Folder#isTrashFolder()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream,	 *      org.columba.ristretto.message.Attributes)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.AbstractMessageFolder#save()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.FolderTreeNode#addSubfolder(org.columba.mail.folder.FolderTreeNode)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.Folder#save()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.RootFolder#getTrashFolder()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.RootFolder#getInbox()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.mail.folder.IDataStorage#getMessages()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.mail.folder.IDataStorage#getFileSource(java.lang.Object)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.mail.folder.IDataStorage#saveInputStream(java.lang.Object, java.io.InputStream)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.columba.mail.folder.IMailbox#getAttribute(java.lang.Object,     *      java.lang.String)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.columba.mail.folder.IMailbox#getFlags(java.lang.Object)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.columba.mail.folder.IMailbox#getHeaderFields(java.lang.Object,     *      java.lang.String[])     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.columba.mail.folder.IMailbox#getMessageSourceStream(java.lang.Object)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.columba.mail.folder.IMailbox#getMimePartBodyStream(java.lang.Object,     *      java.lang.Integer[])     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.columba.mail.folder.IMailbox#getMimePartSourceStream(java.lang.Object,     *      java.lang.Integer[])     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream, org.columba.ristretto.message.Attributes)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.Folder#getUids(org.columba.api.command.IWorkerStatusController)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getAttribute(java.lang.Object,	 *      java.lang.String)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getFlags(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getHeaderFields(java.lang.Object,	 *      java.lang.String[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getMessageSourceStream(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getMimePartBodyStream(java.lang.Object,	 *      java.lang.Integer[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getMimePartSourceStream(java.lang.Object,	 *      java.lang.Integer[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream,	 *      org.columba.ristretto.message.Attributes)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailFolder#getRootFolder()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.event.IFolderListener#messageAdded(org.columba.mail.folder.event.IFolderEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.event.IFolderListener#messageRemoved(org.columba.mail.folder.event.IFolderEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.event.IFolderListener#messageFlagChanged(org.columba.mail.folder.event.IFolderEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.event.IFolderListener#folderPropertyChanged(org.columba.mail.folder.event.IFolderEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.event.IFolderListener#folderAdded(org.columba.mail.folder.event.IFolderEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.event.IFolderListener#folderRemoved(org.columba.mail.folder.event.IFolderEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailFolder#removeFolder()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.folderoptions.AbstractFolderOptionsPlugin#restoreUISettings()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.mail.gui.composer.AbstractEditorController#setViewText(java.lang.String)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.io.InputStream#read()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.io.InputStream#read(byte[], int, int)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList,	 *      java.lang.Object, int, boolean, boolean)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList,	 *      java.lang.Object, int, boolean, boolean)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#updateGUI()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#updateGUI()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#updateGUI()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent) */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.selection.ISelectionListener#selectionChanged(org.columba.core.gui.selection.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.util.Observer#update(java.util.Observable, java.lang.Object)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.gui.config.general.MailOptionsDialog	 *	 * @see java.util.Observer#update(java.util.Observable, java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.selection.SelectionHandler#getSelection()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.selection.SelectionHandler#setSelection(org.columba.api.command.DefaultCommandReference[])	 */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)   */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.selection.ISelectionListener#selectionChanged(org.columba.core.gui.selection.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.util.Observer#update(java.util.Observable, java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.selection.ISelectionListener#selectionChanged(org.columba.core.gui.selection.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.gui.table.model.TableModelModifier#modify(java.lang.Object[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.gui.table.model.TableModelModifier#remove(java.lang.Object[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.gui.table.model.TableModelModifier#set(org.columba.mail.message.HeaderList)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.SelectionHandler#getSelection()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#logout()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#checkSupportedAuthenticationMethods()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#isSupported(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#setFirstLoginAction(org.columba.mail.imap.IFirstLoginAction)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#ensureSelectedState(org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getStatus(org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#list(java.lang.String, java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#append(java.io.InputStream, org.columba.ristretto.imap.IMAPFlags, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#append(java.io.InputStream, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#createMailbox(java.lang.String, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#deleteFolder(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#renameFolder(java.lang.String, java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#subscribeFolder(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#unsubscribeFolder(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#expunge(org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#copy(org.columba.mail.folder.imap.IMAPFolder, java.lang.Object[], org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchUid(org.columba.ristretto.imap.SequenceSet, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchUids(org.columba.ristretto.imap.SequenceSet, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchFlagsListStartFrom(int, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchFlagsListStartFrom2(int, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchNamespaces()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchHeaderList(org.columba.mail.message.IHeaderList, java.util.List, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getMimeTree(java.lang.Object, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getMimePartBodyStream(java.lang.Object, java.lang.Integer[], org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getHeaders(java.lang.Object, java.lang.String[], org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getAllHeaders(java.lang.Object, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getMimePartSourceStream(java.lang.Object, java.lang.Integer[], org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getMessageSourceStream(java.lang.Object, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#markMessage(java.lang.Object[], int, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#setFlags(java.lang.Object[], org.columba.ristretto.imap.IMAPFlags, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#search(java.lang.Object[], org.columba.core.filter.FilterRule, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getIndex(java.lang.Integer, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#search(org.columba.ristretto.imap.SearchKey, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#search(org.columba.core.filter.FilterRule, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getMessageFolderInfo(org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchSubscribedFolders()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#isSelected(org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#alertMessage(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#connectionClosed(java.lang.String, java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#existsChanged(java.lang.String, int)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#flagsChanged(java.lang.String, org.columba.ristretto.imap.IMAPFlags)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#parseError(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#recentChanged(java.lang.String, int)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#warningMessage(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getItem()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#update(java.util.Observable, java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#setExistsChangedAction(org.columba.mail.imap.IExistsChangedAction)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#setUpdateFlagAction(org.columba.mail.imap.IUpdateFlagAction)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#setObservable(org.columba.api.command.IStatusObservable)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see java.util.Iterator#hasNext() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see java.util.Iterator#next() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see java.util.Iterator#remove() */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.message.HeaderInterface#count()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.message.HeaderInterface#getFlags()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.message.HeaderInterface#set(java.lang.String,	 *      java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#getHeader()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#getBodyPart()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#getMimePart(int)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#getMimePartCount()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#getSource()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#setSource(org.columba.ristretto.message.io.Source)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.composer.MimePartRenderer#render(org.columba.ristretto.message.StreamableMimePart)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.ristretto.composer.MimePartRenderer#render(org.columba.ristretto.message.StreamableMimePart) */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#getJabberId()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#getPresenceMode()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#isSignedOn()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#getStatusMessage()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#getChatMediator()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#setChatMediator(org.columba.chat.api.IChatMediator)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#setPresenceMode(org.jivesoftware.smack.packet.Presence.Mode)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#setSignedOn(boolean)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#setStatusMessage(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#getName()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.ui.conversation.IConversationController#addChat(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.ui.conversation.IConversationController#getSelected()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.ui.conversation.IConversationController#get(int)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.ui.conversation.IConversationController#closeSelected()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.chat.ui.roaster.IRoasterTree#getSelected()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.chat.ui.roaster.IRoasterTree#updateBuddyPresence(org.columba.chat.api.IBuddyStatus)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.gui.plugin.AbstractConfigPlugin#updateComponents(boolean)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.gui.plugin.AbstractConfigPlugin#createPanel()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.folder.mailboximport.DefaultMailboxImporter#getDescription()	 */
WITHOUT_CLASSIFICATION	// size // -> @see org.columba.mail.folder.cache.CachedHeaderfields for a // -> complete // -> list of possible attributes
WITHOUT_CLASSIFICATION	// notify listeners // @see org.columba.mail.gui.table.action.ForwardAction
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// 
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	// retrieve event from store
WITHOUT_CLASSIFICATION	// create new event with new UUID
WITHOUT_CLASSIFICATION	//v.getEndDate().getParameters().add(Value.DATE);
WITHOUT_CLASSIFICATION	// FIXME r.setPos();
WITHOUT_CLASSIFICATION	// only import VEVENT and VTODO for now
WITHOUT_CLASSIFICATION	// ensure tzid matches date-time timezone.. // Parameter tzId = // dtStart1.getParameters().getParameter( // Parameter.TZID);
WITHOUT_CLASSIFICATION	// ensure tzid matches date-time timezone.. // Parameter tzId = dtEnd1.getParameters().getParameter( // Parameter.TZID);
WITHOUT_CLASSIFICATION	// ensure tzid matches date-time timezone.. // Parameter tzId = // dtStamp1.getParameters().getParameter( // Parameter.TZID);
WITHOUT_CLASSIFICATION	// RRULE:FREQ=YEARLY;COUNT=5;INTERVAL=1 // RRULE:FREQ=WEEKLY;UNTIL=20060725T215959;INTERVAL=1;BYDAY=TU // RRULE:FREQ=YEARLY;INTERVAL=1
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// wrong xml-format
WITHOUT_CLASSIFICATION	// fall-back to global resource loader
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// 2 columns
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-1$//$NON-NLS-2$
WITHOUT_CLASSIFICATION	// 3 columns //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //totalLabel.setFont(boldFont); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //unreadLabel.setFont(boldFont); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //recentLabel.setFont(boldFont); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //sizeLabel.setFont(boldFont); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //locationLabel.setFont(boldFont); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// second row showing the minutes
WITHOUT_CLASSIFICATION	// dark gray line at 12 and 13
WITHOUT_CLASSIFICATION	// light gray line every day
WITHOUT_CLASSIFICATION	// light gray line every day
WITHOUT_CLASSIFICATION	// vertical light gray column separator line
WITHOUT_CLASSIFICATION	// defaultShapeFactory.setShape(AShapeCreator.createTraslucentShapeHorizontal(), // null);
WITHOUT_CLASSIFICATION	// else set it to 23:59:59.999
WITHOUT_CLASSIFICATION	// Drag, resize interactions
WITHOUT_CLASSIFICATION	// Drag, resize interactions
WITHOUT_CLASSIFICATION	// Drag, resize interactions
WITHOUT_CLASSIFICATION	// Color bgPaint = new Color(255, 150, 150);
WITHOUT_CLASSIFICATION	// Edges of the poly shape
WITHOUT_CLASSIFICATION	// END1 because the draw should be // correct
WITHOUT_CLASSIFICATION	// Shadow
WITHOUT_CLASSIFICATION	// AShape textShape = new TextAShape("text", "$" + GridRow.NAME + "$", // textRect, TextAShape.TYPE_SINGE_LINE, font, fgColor, // AtFraction.CENTER, AtStart.START0, Boolean.FALSE);
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// check if the user entered valid data
WITHOUT_CLASSIFICATION	// it has to be set
WITHOUT_CLASSIFICATION	// disable max occurrences
WITHOUT_CLASSIFICATION	// set background of scrollpane, in case the list is smaller than the // dockable
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//		TagList tagList = new CalendarTagList(this); //		JScrollPane tagListScrollPane = new JScrollPane(tagList); //		tagListScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER); //		tagListScrollPane //				.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	// if mouse button was pressed twice times
WITHOUT_CLASSIFICATION	// if mouse button was pressed twice times
WITHOUT_CLASSIFICATION	// if mouse button was pressed twice times
WITHOUT_CLASSIFICATION	//checkbox.setBorder(BorderFactory.createEmptyBorder(2,4,2,4));
WITHOUT_CLASSIFICATION	// public CalendarItem getSelected() { // int row = getSelectedRow(); // // return ((CheckableItemListTableModel) getModel()).getElement(row); // }
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// example: // "columba://org.columba.contact/<folder-id>/<contact-id>"
WITHOUT_CLASSIFICATION	// create URI representing the contact
WITHOUT_CLASSIFICATION	// check three entries
WITHOUT_CLASSIFICATION	// check if it contains comma character
WITHOUT_CLASSIFICATION	// modify card properties in folder
WITHOUT_CLASSIFICATION	/*		 * XmlElement filter = new XmlElement("filter");		 * defaultElement.addElement(filter);		 */
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// register interest on tree selection changes
WITHOUT_CLASSIFICATION	// add to folder
WITHOUT_CLASSIFICATION	//		 register interest on tree selection changes
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// get selected contact/group card
WITHOUT_CLASSIFICATION	// get selected contact/group card
WITHOUT_CLASSIFICATION	// tree has focus
WITHOUT_CLASSIFICATION	// contacts item
WITHOUT_CLASSIFICATION	// initialize completer
WITHOUT_CLASSIFICATION	// ======== this ========
WITHOUT_CLASSIFICATION	// leave dialog empty if no source contact model specified
WITHOUT_CLASSIFICATION	// model -> view
WITHOUT_CLASSIFICATION	// fill formatted textfield
WITHOUT_CLASSIFICATION	// ---- fullnameButton ----
WITHOUT_CLASSIFICATION	// ---- emailTextField2 ----
WITHOUT_CLASSIFICATION	// ---- telephoneTextField2 ----
WITHOUT_CLASSIFICATION	// ---- imTextField4 ----
WITHOUT_CLASSIFICATION	// ---- homepageButton ----
WITHOUT_CLASSIFICATION	// ---- calendarLabel ----
WITHOUT_CLASSIFICATION	// ======== panel8 ========
WITHOUT_CLASSIFICATION	// ---- titleTextField ----
WITHOUT_CLASSIFICATION	// contains "," comma character
WITHOUT_CLASSIFICATION	// default
WITHOUT_CLASSIFICATION	// concrete implementation of actions
WITHOUT_CLASSIFICATION	// table should be updated when tree selection changes
WITHOUT_CLASSIFICATION	/*			 * HeaderItem[] items = new HeaderItem[selection1.length]; items =			 * selection1;			 * HeaderItemDNDManager.getInstance().setHeaderItemList(items);			 */
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//setCellRenderer(new AddressbookListRenderer());
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Plain text components don't fire these events
DEFECT	/** * FIXME: *  * @author fdietz: No locking of folders currently implemented! *  * @author frd */
DEFECT	// TODO: newUID, generate correctly formatted date string
DEFECT	// TODO fix doctype
DEFECT	// FIXME check if the id is a correct file name! 
DEFECT	// FIXME this is not correct
DEFECT	// FIXME correct year calculation
DEFECT	// TODO: key can't be null
DEFECT	// TODO: key can't be null
DEFECT	// TODO: fix parser exception
DEFECT	// bug #997560 (fdietz): CC: should be in Cc:, instead of To:
DEFECT	// TODO check if we have to manually set the folder/uid in  // message controller to make this work
DEFECT	// does not work: r.getFolderName() // does not work: r.getMessage().getUID()
DEFECT	// bug #997560 (fdietz): CC: should be in Cc:, instead of To: //toList.addAll(Arrays.asList(rfcHeader.getCc()));
