/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9998355507559392	WITHOUT_CLASSIFICATION	1.644492440607172E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999075359031034	WITHOUT_CLASSIFICATION	9.246409689663002E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999993193666548	WITHOUT_CLASSIFICATION	6.806333451733638E-7	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999993193666548	WITHOUT_CLASSIFICATION	6.806333451733638E-7	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999945500722007	WITHOUT_CLASSIFICATION	5.449927799199389E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.999999448838381	WITHOUT_CLASSIFICATION	5.511616190666787E-7	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999999096262342	WITHOUT_CLASSIFICATION	9.037376578839309E-8	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999994213294787	WITHOUT_CLASSIFICATION	5.786705212761361E-7	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.999998566613206	WITHOUT_CLASSIFICATION	1.4333867940348438E-6	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999997560664734	WITHOUT_CLASSIFICATION	2.4393352657858896E-7	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9999999809805472	WITHOUT_CLASSIFICATION	1.901945279495787E-8	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999474695139936	WITHOUT_CLASSIFICATION	5.2530486006350134E-5	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999987146161536	WITHOUT_CLASSIFICATION	1.2853838464058856E-6	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9998896597781105	WITHOUT_CLASSIFICATION	1.1034022188944936E-4	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999988141678854	WITHOUT_CLASSIFICATION	1.1858321146718163E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.999999408727974	WITHOUT_CLASSIFICATION	5.912720260579876E-7	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.999999408727974	WITHOUT_CLASSIFICATION	5.912720260579876E-7	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999999829427365	WITHOUT_CLASSIFICATION	1.705726342950855E-8	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.999986035426815	WITHOUT_CLASSIFICATION	1.3964573185091437E-5	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9972270893518244	WITHOUT_CLASSIFICATION	0.0027729106481756806	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999983559659215	WITHOUT_CLASSIFICATION	1.644034078529885E-6	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9997641632245737	WITHOUT_CLASSIFICATION	2.358367754261409E-4	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.999999591687719	WITHOUT_CLASSIFICATION	4.083122809420812E-7	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999997756166379	WITHOUT_CLASSIFICATION	2.2438336217507188E-7	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999994244750554	WITHOUT_CLASSIFICATION	5.755249445684859E-7	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999996454696705	WITHOUT_CLASSIFICATION	3.545303295479981E-7	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999997221783031	WITHOUT_CLASSIFICATION	2.778216969149469E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999831848417832	WITHOUT_CLASSIFICATION	1.6815158216778116E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998370000629	WITHOUT_CLASSIFICATION	1.6299993718021992E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999943026684294	WITHOUT_CLASSIFICATION	5.697331570621064E-6	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999996198412362	WITHOUT_CLASSIFICATION	3.8015876376004345E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999963561814014	WITHOUT_CLASSIFICATION	3.6438185987437814E-6	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999991486962029	WITHOUT_CLASSIFICATION	8.513037971234813E-7	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999808119219761	WITHOUT_CLASSIFICATION	1.918807802390653E-5	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.99999939280156	WITHOUT_CLASSIFICATION	6.071984399698531E-7	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.999996523890333	WITHOUT_CLASSIFICATION	3.476109667053165E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999859916084912	WITHOUT_CLASSIFICATION	1.400839150884583E-5	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999983559659215	WITHOUT_CLASSIFICATION	1.644034078529885E-6	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999982243698349	WITHOUT_CLASSIFICATION	1.775630165102913E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999953282931686	WITHOUT_CLASSIFICATION	4.67170683142545E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999953282931686	WITHOUT_CLASSIFICATION	4.67170683142545E-6	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999985040079944	WITHOUT_CLASSIFICATION	1.4959920055811655E-6	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999936941753285	WITHOUT_CLASSIFICATION	6.305824671557808E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999951523420637	WITHOUT_CLASSIFICATION	4.847657936223066E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999951523420637	WITHOUT_CLASSIFICATION	4.847657936223066E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999981325943161	WITHOUT_CLASSIFICATION	1.8674056839057765E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999921593505366	WITHOUT_CLASSIFICATION	7.840649463394693E-6	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.999997880380985	WITHOUT_CLASSIFICATION	2.119619014987694E-6	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999977195722265	WITHOUT_CLASSIFICATION	2.2804277735358043E-6	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999996208840193	WITHOUT_CLASSIFICATION	3.791159807331958E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999962140538137	WITHOUT_CLASSIFICATION	3.7859461864396928E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999999708586933	WITHOUT_CLASSIFICATION	2.9141306734989233E-8	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999996197020924	WITHOUT_CLASSIFICATION	3.8029790751013847E-7	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999996197020924	WITHOUT_CLASSIFICATION	3.8029790751013847E-7	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999995570408213	WITHOUT_CLASSIFICATION	4.429591786274965E-7	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999996800735941	WITHOUT_CLASSIFICATION	3.1992640593627704E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.999999699411348	WITHOUT_CLASSIFICATION	3.00588651966956E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.999999699411348	WITHOUT_CLASSIFICATION	3.00588651966956E-7	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999980120269661	WITHOUT_CLASSIFICATION	1.9879730338841543E-6	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999917204759375	WITHOUT_CLASSIFICATION	8.27952406251669E-6	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999750181441901	WITHOUT_CLASSIFICATION	2.498185580992547E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999492944697987	WITHOUT_CLASSIFICATION	5.070553020124239E-5	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.999999369597592	WITHOUT_CLASSIFICATION	6.30402408047885E-7	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999986798139162	WITHOUT_CLASSIFICATION	1.3201860838655373E-6	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999996883779813	WITHOUT_CLASSIFICATION	3.1162201880184654E-7	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999994391965931	WITHOUT_CLASSIFICATION	5.608034068559869E-7	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999914262162884	WITHOUT_CLASSIFICATION	8.573783711635662E-6	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999770716365703	WITHOUT_CLASSIFICATION	2.292836342957095E-5	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999928120554871	WITHOUT_CLASSIFICATION	7.187944512928825E-6	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999710509554468	WITHOUT_CLASSIFICATION	2.89490445532765E-5	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9999203763924234	WITHOUT_CLASSIFICATION	7.962360757660987E-5	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999991846509626	WITHOUT_CLASSIFICATION	8.153490373361132E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999996685033631	WITHOUT_CLASSIFICATION	3.31496636802507E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999996685033631	WITHOUT_CLASSIFICATION	3.31496636802507E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999492944697987	WITHOUT_CLASSIFICATION	5.070553020124239E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999434021533607	WITHOUT_CLASSIFICATION	5.6597846639200554E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999492944697987	WITHOUT_CLASSIFICATION	5.070553020124239E-5	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.9999182176424247	WITHOUT_CLASSIFICATION	8.178235757527787E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999434021533607	WITHOUT_CLASSIFICATION	5.6597846639200554E-5	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999115771962918	WITHOUT_CLASSIFICATION	8.842280370824949E-5	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.999928319832908	WITHOUT_CLASSIFICATION	7.168016709204065E-5	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999367904590213	WITHOUT_CLASSIFICATION	6.320954097865362E-5	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999999972282008	WITHOUT_CLASSIFICATION	2.7717991647440573E-9	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999935918937829	WITHOUT_CLASSIFICATION	6.408106217078803E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999935918937829	WITHOUT_CLASSIFICATION	6.408106217078803E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999935918937829	WITHOUT_CLASSIFICATION	6.408106217078803E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999935918937829	WITHOUT_CLASSIFICATION	6.408106217078803E-6	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999267824513285	WITHOUT_CLASSIFICATION	7.321754867148569E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999996320803025	WITHOUT_CLASSIFICATION	3.6791969751765803E-7	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999996320803025	WITHOUT_CLASSIFICATION	3.6791969751765803E-7	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999930583907647	WITHOUT_CLASSIFICATION	6.941609235383793E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999996320803025	WITHOUT_CLASSIFICATION	3.6791969751765803E-7	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999975354943251	WITHOUT_CLASSIFICATION	2.4645056748785484E-6	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9999426685482345	WITHOUT_CLASSIFICATION	5.733145176546063E-5	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999998264586577	WITHOUT_CLASSIFICATION	1.7354134234442512E-7	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999999134184314	WITHOUT_CLASSIFICATION	8.658156856854209E-8	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999848789233099	WITHOUT_CLASSIFICATION	1.5121076690138726E-5	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999986561772803	WITHOUT_CLASSIFICATION	1.3438227196235402E-6	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999967756593597	WITHOUT_CLASSIFICATION	3.224340640325207E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9999970450754154	WITHOUT_CLASSIFICATION	2.9549245845371448E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999983868196498	WITHOUT_CLASSIFICATION	1.6131803502926606E-6	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999999041718252	WITHOUT_CLASSIFICATION	9.582817486218712E-8	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999958157997136	WITHOUT_CLASSIFICATION	4.184200286421872E-6	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999989925952105	WITHOUT_CLASSIFICATION	1.0074047893801564E-6	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999984438199232	WITHOUT_CLASSIFICATION	1.5561800768106808E-6	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999888864940849	WITHOUT_CLASSIFICATION	1.111350591499835E-5	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.999990678895115	WITHOUT_CLASSIFICATION	9.321104885155527E-6	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999617637747785	WITHOUT_CLASSIFICATION	3.823622522137667E-5	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9997460736469967	WITHOUT_CLASSIFICATION	2.53926353003199E-4	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999907057868453	WITHOUT_CLASSIFICATION	9.294213154576407E-6	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999996262417776	WITHOUT_CLASSIFICATION	3.7375822240442063E-7	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999999139082066	WITHOUT_CLASSIFICATION	8.609179332174559E-8	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999812165337532	WITHOUT_CLASSIFICATION	1.8783466246882865E-5	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999996671416874	WITHOUT_CLASSIFICATION	3.3285831260285457E-7	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999823100983939	WITHOUT_CLASSIFICATION	1.768990160610026E-5	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999983868196498	WITHOUT_CLASSIFICATION	1.6131803502926606E-6	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999992703843689	WITHOUT_CLASSIFICATION	7.296156310142689E-7	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999982598848943	WITHOUT_CLASSIFICATION	1.7401151055853761E-6	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999992044354985	WITHOUT_CLASSIFICATION	7.95564501388327E-7	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999990375851934	WITHOUT_CLASSIFICATION	9.624148066570037E-7	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999991972113721	WITHOUT_CLASSIFICATION	8.027886279356383E-7	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999966964804485	WITHOUT_CLASSIFICATION	3.303519551524513E-6	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999961630776217	WITHOUT_CLASSIFICATION	3.836922378275971E-6	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999699329112065	WITHOUT_CLASSIFICATION	3.006708879352977E-5	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999932361924455	WITHOUT_CLASSIFICATION	6.763807554384909E-6	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999949443634228	WITHOUT_CLASSIFICATION	5.055636577152514E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999983605890118	WITHOUT_CLASSIFICATION	1.6394109881283123E-6	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999990425529899	WITHOUT_CLASSIFICATION	9.5744701009545E-7	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999989529971702	WITHOUT_CLASSIFICATION	1.0470028298081896E-6	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999915523853617	WITHOUT_CLASSIFICATION	8.447614638206327E-6	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999993437695758	WITHOUT_CLASSIFICATION	6.56230424141592E-7	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999969311646696	WITHOUT_CLASSIFICATION	3.068835330341988E-6	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999995553442671	WITHOUT_CLASSIFICATION	4.44655732888657E-7	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9881667727339394	WITHOUT_CLASSIFICATION	0.011833227266060684	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999101967297152	WITHOUT_CLASSIFICATION	8.980327028478341E-5	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999999550023129	WITHOUT_CLASSIFICATION	4.499768717803658E-8	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999933618047668	WITHOUT_CLASSIFICATION	6.638195233197756E-6	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999982932298593	WITHOUT_CLASSIFICATION	1.706770140747443E-6	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999996382496816	WITHOUT_CLASSIFICATION	3.61750318337857E-7	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9999998085917906	WITHOUT_CLASSIFICATION	1.9140820927498878E-7	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999997407217077	WITHOUT_CLASSIFICATION	2.592782923569805E-7	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999994614603528	WITHOUT_CLASSIFICATION	5.385396472355197E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999831972750832	WITHOUT_CLASSIFICATION	1.6802724916776498E-5	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999975722372391	WITHOUT_CLASSIFICATION	2.4277627608025145E-6	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9999994330451404	WITHOUT_CLASSIFICATION	5.669548596547737E-7	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999993181950658	WITHOUT_CLASSIFICATION	6.818049341046279E-7	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999991878722514	WITHOUT_CLASSIFICATION	8.121277486154375E-7	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999946928715722	WITHOUT_CLASSIFICATION	5.3071284278195496E-6	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999989541613659	WITHOUT_CLASSIFICATION	1.0458386341084225E-6	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.999976956096022	WITHOUT_CLASSIFICATION	2.304390397801302E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999975354943251	WITHOUT_CLASSIFICATION	2.4645056748785484E-6	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999998326599128	WITHOUT_CLASSIFICATION	1.6734008737318047E-7	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999868619501665	WITHOUT_CLASSIFICATION	1.3138049833488197E-5	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999981743937054	WITHOUT_CLASSIFICATION	1.8256062945341077E-6	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999747846632273	WITHOUT_CLASSIFICATION	2.521533677266982E-5	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9998497625418633	WITHOUT_CLASSIFICATION	1.5023745813672791E-4	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999818899697785	WITHOUT_CLASSIFICATION	1.8110030221544178E-5	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999835436658764	WITHOUT_CLASSIFICATION	1.6456334123645638E-5	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999896056484658	WITHOUT_CLASSIFICATION	1.0394351534273286E-5	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999969046686917	WITHOUT_CLASSIFICATION	3.095331308217796E-6	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999994862262588	WITHOUT_CLASSIFICATION	5.137737412524895E-7	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999997220098158	WITHOUT_CLASSIFICATION	2.779901841259341E-7	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999319210621497	WITHOUT_CLASSIFICATION	6.807893785033603E-5	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999869840531269	WITHOUT_CLASSIFICATION	1.3015946873051498E-5	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999851069089107	WITHOUT_CLASSIFICATION	1.4893091089179464E-5	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9999935418541727	WITHOUT_CLASSIFICATION	6.458145827265897E-6	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999991849886595	WITHOUT_CLASSIFICATION	8.150113405597266E-7	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999990913515306	WITHOUT_CLASSIFICATION	9.0864846939706E-7	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999737037659292	WITHOUT_CLASSIFICATION	2.6296234070875923E-5	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999904705404365	WITHOUT_CLASSIFICATION	9.529459563459829E-6	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.999998946420197	WITHOUT_CLASSIFICATION	1.0535798029882697E-6	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.999997375500945	WITHOUT_CLASSIFICATION	2.6244990549588885E-6	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999998259864863	WITHOUT_CLASSIFICATION	1.7401351369108202E-7	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999984317726459	WITHOUT_CLASSIFICATION	1.5682273541339864E-6	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999995200890206	WITHOUT_CLASSIFICATION	4.799109794497505E-7	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999995200890206	WITHOUT_CLASSIFICATION	4.799109794497505E-7	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.999997522105256	WITHOUT_CLASSIFICATION	2.477894743946721E-6	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999939068670568	WITHOUT_CLASSIFICATION	6.0931329431825245E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999981783386682	WITHOUT_CLASSIFICATION	1.8216613316802944E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999981783386682	WITHOUT_CLASSIFICATION	1.8216613316802944E-6	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999996350463672	WITHOUT_CLASSIFICATION	3.649536327754052E-7	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999996679347022	WITHOUT_CLASSIFICATION	3.3206529783088434E-7	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999114787473086	WITHOUT_CLASSIFICATION	8.852125269139002E-5	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999994008456181	WITHOUT_CLASSIFICATION	5.991543818869076E-7	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999730532747396	WITHOUT_CLASSIFICATION	2.694672526038952E-5	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999980479330537	WITHOUT_CLASSIFICATION	1.9520669462543963E-6	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999819612352819	WITHOUT_CLASSIFICATION	1.803876471802101E-5	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.997211946536997	WITHOUT_CLASSIFICATION	0.0027880534630030716	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.999988282576655	WITHOUT_CLASSIFICATION	1.1717423345102843E-5	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999993869373895	WITHOUT_CLASSIFICATION	6.13062610422834E-7	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999972823989274	WITHOUT_CLASSIFICATION	2.717601072607516E-6	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999970290052443	WITHOUT_CLASSIFICATION	2.970994755728942E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998263605879	WITHOUT_CLASSIFICATION	1.7363941210510682E-6	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999994213294787	WITHOUT_CLASSIFICATION	5.786705212761361E-7	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.999998566613206	WITHOUT_CLASSIFICATION	1.4333867940348438E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999996685033631	WITHOUT_CLASSIFICATION	3.31496636802507E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998263605879	WITHOUT_CLASSIFICATION	1.7363941210510682E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9981609997173746	WITHOUT_CLASSIFICATION	0.0018390002826253202	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998856148687366	WITHOUT_CLASSIFICATION	1.1438513126328251E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998856148687366	WITHOUT_CLASSIFICATION	1.1438513126328251E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998856148687366	WITHOUT_CLASSIFICATION	1.1438513126328251E-4	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999981355963405	WITHOUT_CLASSIFICATION	1.864403659448469E-6	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999975804316109	WITHOUT_CLASSIFICATION	2.4195683891944187E-6	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999973726268883	WITHOUT_CLASSIFICATION	2.6273731118132643E-6	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9787687845230933	WITHOUT_CLASSIFICATION	0.021231215476906685	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999697780048123	WITHOUT_CLASSIFICATION	3.0221995187631143E-5	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.999980878927233	WITHOUT_CLASSIFICATION	1.912107276694518E-5	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9981609997173746	WITHOUT_CLASSIFICATION	0.0018390002826253202	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999920640058123	WITHOUT_CLASSIFICATION	7.93599418767391E-6	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.999985442300788	WITHOUT_CLASSIFICATION	1.4557699211918502E-5	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.999999965189334	WITHOUT_CLASSIFICATION	3.48106659230548E-8	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999993761621536	WITHOUT_CLASSIFICATION	6.238378463399953E-7	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999994424328458	WITHOUT_CLASSIFICATION	5.575671542874821E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999996685033631	WITHOUT_CLASSIFICATION	3.31496636802507E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999996685033631	WITHOUT_CLASSIFICATION	3.31496636802507E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.999988282576655	WITHOUT_CLASSIFICATION	1.1717423345102843E-5	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999920640058123	WITHOUT_CLASSIFICATION	7.93599418767391E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999988459993513	WITHOUT_CLASSIFICATION	1.154000648672244E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999988459993513	WITHOUT_CLASSIFICATION	1.154000648672244E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999988459993513	WITHOUT_CLASSIFICATION	1.154000648672244E-6	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999821428908089	WITHOUT_CLASSIFICATION	1.7857109191133866E-5	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999821428908089	WITHOUT_CLASSIFICATION	1.7857109191133866E-5	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999682000130558	WITHOUT_CLASSIFICATION	3.179998694428186E-5	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999682000130558	WITHOUT_CLASSIFICATION	3.179998694428186E-5	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999855809124812	WITHOUT_CLASSIFICATION	1.4419087518871054E-5	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999902077207488	WITHOUT_CLASSIFICATION	9.7922792512473E-6	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999902077207488	WITHOUT_CLASSIFICATION	9.7922792512473E-6	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999986663729068	WITHOUT_CLASSIFICATION	1.3336270931468795E-6	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999970574193897	WITHOUT_CLASSIFICATION	2.9425806102688522E-6	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999835369960995	WITHOUT_CLASSIFICATION	1.6463003900476945E-5	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999916060429991	WITHOUT_CLASSIFICATION	8.393957000914259E-6	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999916060429991	WITHOUT_CLASSIFICATION	8.393957000914259E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999773103544861	WITHOUT_CLASSIFICATION	2.2689645513949587E-5	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999773103544861	WITHOUT_CLASSIFICATION	2.2689645513949587E-5	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999873195236721	WITHOUT_CLASSIFICATION	1.2680476327741787E-5	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999936695104346	WITHOUT_CLASSIFICATION	6.330489565407779E-6	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999659312906655	WITHOUT_CLASSIFICATION	3.406870933462645E-5	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999782193456549	WITHOUT_CLASSIFICATION	2.1780654345071818E-5	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999888021821052	WITHOUT_CLASSIFICATION	1.1197817894807023E-5	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999718612921965	WITHOUT_CLASSIFICATION	2.813870780359072E-5	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999952714970024	WITHOUT_CLASSIFICATION	4.728502997631621E-6	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999998160812429	WITHOUT_CLASSIFICATION	1.839187571629389E-7	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9999441399005093	WITHOUT_CLASSIFICATION	5.5860099490579916E-5	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999998041940376	WITHOUT_CLASSIFICATION	1.9580596248407633E-7	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.999995269918198	WITHOUT_CLASSIFICATION	4.730081802043439E-6	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999990009432285	WITHOUT_CLASSIFICATION	9.99056771514274E-7	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999988189104283	WITHOUT_CLASSIFICATION	1.181089571641754E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999872232346502	WITHOUT_CLASSIFICATION	1.277676534988226E-5	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9982841664606813	WITHOUT_CLASSIFICATION	0.0017158335393187639	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999984255646016	WITHOUT_CLASSIFICATION	1.5744353983987986E-6	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999997380950393	WITHOUT_CLASSIFICATION	2.619049606871741E-7	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999872232346502	WITHOUT_CLASSIFICATION	1.277676534988226E-5	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999962121691949	WITHOUT_CLASSIFICATION	3.787830805097652E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999872232346502	WITHOUT_CLASSIFICATION	1.277676534988226E-5	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9982841664606813	WITHOUT_CLASSIFICATION	0.0017158335393187639	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999988762605218	WITHOUT_CLASSIFICATION	1.1237394782124668E-6	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999994241211607	WITHOUT_CLASSIFICATION	5.758788392772036E-7	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999990589249097	WITHOUT_CLASSIFICATION	9.410750903343872E-7	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999990792002234	WITHOUT_CLASSIFICATION	9.207997766371469E-7	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.999998545233034	WITHOUT_CLASSIFICATION	1.4547669660701793E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999962479998767	WITHOUT_CLASSIFICATION	3.752000123236146E-6	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999992887253017	WITHOUT_CLASSIFICATION	7.112746982480776E-7	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999854787293291	WITHOUT_CLASSIFICATION	1.4521270670878311E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999962479998767	WITHOUT_CLASSIFICATION	3.752000123236146E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999962479998767	WITHOUT_CLASSIFICATION	3.752000123236146E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999962479998767	WITHOUT_CLASSIFICATION	3.752000123236146E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999962479998767	WITHOUT_CLASSIFICATION	3.752000123236146E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999991964576085	WITHOUT_CLASSIFICATION	8.035423913850172E-7	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999848594952497	WITHOUT_CLASSIFICATION	1.5140504750325152E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999996869806468	WITHOUT_CLASSIFICATION	3.1301935323700635E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999996869806468	WITHOUT_CLASSIFICATION	3.1301935323700635E-7	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999999777473072	WITHOUT_CLASSIFICATION	2.2252692721334335E-8	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999997717296085	WITHOUT_CLASSIFICATION	2.2827039153157007E-7	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999997973653164	WITHOUT_CLASSIFICATION	2.0263468371305513E-7	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.999999827485186	WITHOUT_CLASSIFICATION	1.7251481391968467E-7	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999998667138207	WITHOUT_CLASSIFICATION	1.3328617937237967E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999996922337935	WITHOUT_CLASSIFICATION	3.077662064159418E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999996922337935	WITHOUT_CLASSIFICATION	3.077662064159418E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999996922337935	WITHOUT_CLASSIFICATION	3.077662064159418E-7	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999995772793873	WITHOUT_CLASSIFICATION	4.2272061274857734E-7	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999999599622014	WITHOUT_CLASSIFICATION	4.003779872158022E-8	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.999999951525667	WITHOUT_CLASSIFICATION	4.847433291106207E-8	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999788911644625	WITHOUT_CLASSIFICATION	2.110883553746204E-5	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.999992788504361	WITHOUT_CLASSIFICATION	7.21149563902251E-6	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999993273861085	WITHOUT_CLASSIFICATION	6.726138915145426E-7	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999856570357077	WITHOUT_CLASSIFICATION	1.434296429239837E-5	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999904600424702	WITHOUT_CLASSIFICATION	9.539957529858449E-6	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.999998142158915	WITHOUT_CLASSIFICATION	1.8578410848973115E-6	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.999951847525353	WITHOUT_CLASSIFICATION	4.815247464705962E-5	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999393941688332	WITHOUT_CLASSIFICATION	6.060583116693259E-5	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999487565508508	WITHOUT_CLASSIFICATION	5.124344914917506E-5	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999999299800013	WITHOUT_CLASSIFICATION	7.001999871369742E-8	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999968081223107	WITHOUT_CLASSIFICATION	3.1918776893032816E-6	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999886892192221	WITHOUT_CLASSIFICATION	1.1310780777859838E-5	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.999999286693702	WITHOUT_CLASSIFICATION	7.133062979736991E-7	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999886892192221	WITHOUT_CLASSIFICATION	1.1310780777859838E-5	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999994692071672	WITHOUT_CLASSIFICATION	5.307928328035257E-7	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.999997928810355	WITHOUT_CLASSIFICATION	2.0711896449294097E-6	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999844007639035	WITHOUT_CLASSIFICATION	1.5599236096463188E-5	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999997983814081	WITHOUT_CLASSIFICATION	2.016185919035994E-7	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999085571937	WITHOUT_CLASSIFICATION	9.144280623199493E-8	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999999865003417	WITHOUT_CLASSIFICATION	1.3499658306914886E-8	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999980320086033	WITHOUT_CLASSIFICATION	1.967991396791628E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999403536852771	WITHOUT_CLASSIFICATION	5.96463147228126E-5	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999465352982452	WITHOUT_CLASSIFICATION	5.346470175487637E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999904173098576	WITHOUT_CLASSIFICATION	9.582690142395966E-6	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.999999996188351	WITHOUT_CLASSIFICATION	3.8116489841688015E-9	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999989828495414	WITHOUT_CLASSIFICATION	1.0171504586854058E-6	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999972809951456	WITHOUT_CLASSIFICATION	2.719004854344723E-6	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999991297931266	WITHOUT_CLASSIFICATION	8.702068734651312E-7	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.999999409575082	WITHOUT_CLASSIFICATION	5.904249180499833E-7	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999993844122383	WITHOUT_CLASSIFICATION	6.155877616686275E-7	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999996700011354	WITHOUT_CLASSIFICATION	3.299988646324191E-7	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999999475302057	WITHOUT_CLASSIFICATION	5.2469794305374806E-8	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999990618916669	WITHOUT_CLASSIFICATION	9.381083331875557E-7	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999999684685386	WITHOUT_CLASSIFICATION	3.153146146695746E-8	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999999749724249	WITHOUT_CLASSIFICATION	2.5027575177972512E-8	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999955075549951	WITHOUT_CLASSIFICATION	4.492445004838555E-6	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999993970693511	WITHOUT_CLASSIFICATION	6.029306489027802E-7	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999993970693511	WITHOUT_CLASSIFICATION	6.029306489027802E-7	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999998506091831	WITHOUT_CLASSIFICATION	1.4939081691195343E-7	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999998506091831	WITHOUT_CLASSIFICATION	1.4939081691195343E-7	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999703280728549	WITHOUT_CLASSIFICATION	2.9671927145025566E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999654612963522	WITHOUT_CLASSIFICATION	3.453870364778115E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999654612963522	WITHOUT_CLASSIFICATION	3.453870364778115E-5	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999998272444933	WITHOUT_CLASSIFICATION	1.7275550674334857E-7	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999998272444933	WITHOUT_CLASSIFICATION	1.7275550674334857E-7	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.999997183739208	WITHOUT_CLASSIFICATION	2.8162607919982082E-6	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999993590117633	WITHOUT_CLASSIFICATION	6.409882367607104E-7	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999998154475128	WITHOUT_CLASSIFICATION	1.8455248713613015E-7	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.999999706122058	WITHOUT_CLASSIFICATION	2.938779419779163E-7	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999590158775323	WITHOUT_CLASSIFICATION	4.0984122467672945E-5	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999971283304442	WITHOUT_CLASSIFICATION	2.8716695557553448E-6	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999950912566961	WITHOUT_CLASSIFICATION	4.9087433039609345E-6	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999926304682367	WITHOUT_CLASSIFICATION	7.369531763371787E-6	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999997785276349	WITHOUT_CLASSIFICATION	2.2147236511235735E-7	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9999928696031596	WITHOUT_CLASSIFICATION	7.1303968403422E-6	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999999385391809	WITHOUT_CLASSIFICATION	6.146081910982428E-8	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999986339131826	WITHOUT_CLASSIFICATION	1.3660868174085137E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999999836150484	WITHOUT_CLASSIFICATION	1.6384951605973583E-8	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999992115921866	WITHOUT_CLASSIFICATION	7.884078132499476E-7	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999988916625745	WITHOUT_CLASSIFICATION	1.108337425455346E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999859916084912	WITHOUT_CLASSIFICATION	1.400839150884583E-5	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999980320086033	WITHOUT_CLASSIFICATION	1.967991396791628E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999904173098576	WITHOUT_CLASSIFICATION	9.582690142395966E-6	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.999994574071341	WITHOUT_CLASSIFICATION	5.425928659013128E-6	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.999999923554433	WITHOUT_CLASSIFICATION	7.644556698595427E-8	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999858043746082	WITHOUT_CLASSIFICATION	1.4195625391799467E-5	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999994132169778	WITHOUT_CLASSIFICATION	5.867830222118686E-7	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999995928724706	WITHOUT_CLASSIFICATION	4.071275293069528E-7	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999816160540003	WITHOUT_CLASSIFICATION	1.8383945999716648E-5	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999981886814499	WITHOUT_CLASSIFICATION	1.8113185501138799E-6	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999993377261449	WITHOUT_CLASSIFICATION	6.622738551062314E-7	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999919536815282	WITHOUT_CLASSIFICATION	8.046318471832008E-6	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999925786315705	WITHOUT_CLASSIFICATION	7.421368429537166E-6	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999902171933163	WITHOUT_CLASSIFICATION	9.782806683795247E-6	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999974965985904	WITHOUT_CLASSIFICATION	2.5034014096368417E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999992190475008	WITHOUT_CLASSIFICATION	7.809524993272434E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999992190475008	WITHOUT_CLASSIFICATION	7.809524993272434E-7	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9999978074230311	WITHOUT_CLASSIFICATION	2.192576968955025E-6	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9999957917902906	WITHOUT_CLASSIFICATION	4.208209709363332E-6	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999971461677044	WITHOUT_CLASSIFICATION	2.8538322956448827E-6	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999922564994954	WITHOUT_CLASSIFICATION	7.74350050457187E-6	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999947730397561	WITHOUT_CLASSIFICATION	5.226960243912468E-6	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999988928643025	WITHOUT_CLASSIFICATION	1.1071356974677318E-6	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999974144624778	WITHOUT_CLASSIFICATION	2.5855375221347054E-6	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999720654541479	WITHOUT_CLASSIFICATION	2.7934545852120164E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9999936435521065	WITHOUT_CLASSIFICATION	6.356447893466732E-6	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999944137739059	WITHOUT_CLASSIFICATION	5.586226094060714E-6	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999951025712418	WITHOUT_CLASSIFICATION	4.897428758228372E-6	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.999998716882829	WITHOUT_CLASSIFICATION	1.2831171708978882E-6	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999997072378235	WITHOUT_CLASSIFICATION	2.9276217640234355E-7	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999974370152895	WITHOUT_CLASSIFICATION	2.5629847104761554E-6	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999956622727465	WITHOUT_CLASSIFICATION	4.337727253547864E-6	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999545876915638	WITHOUT_CLASSIFICATION	4.541230843633359E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999887664767007	WITHOUT_CLASSIFICATION	1.1233523299383891E-5	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999978634262185	WITHOUT_CLASSIFICATION	2.1365737813479583E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999831848417832	WITHOUT_CLASSIFICATION	1.6815158216778116E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998370000629	WITHOUT_CLASSIFICATION	1.6299993718021992E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999943026684294	WITHOUT_CLASSIFICATION	5.697331570621064E-6	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999943026684294	WITHOUT_CLASSIFICATION	5.697331570621064E-6	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999963561814014	WITHOUT_CLASSIFICATION	3.6438185987437814E-6	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999963561814014	WITHOUT_CLASSIFICATION	3.6438185987437814E-6	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999984184392449	WITHOUT_CLASSIFICATION	1.5815607551544324E-6	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999942983272437	WITHOUT_CLASSIFICATION	5.701672756192645E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.99999696698162	WITHOUT_CLASSIFICATION	3.0330183800699884E-6	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9999868365291406	WITHOUT_CLASSIFICATION	1.3163470859535687E-5	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999981762743152	WITHOUT_CLASSIFICATION	1.8237256847716748E-6	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9921198424721436	WITHOUT_CLASSIFICATION	0.007880157527856391	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9991653800685805	WITHOUT_CLASSIFICATION	8.34619931419442E-4	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999926327554752	WITHOUT_CLASSIFICATION	7.367244524756684E-6	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999926327554752	WITHOUT_CLASSIFICATION	7.367244524756684E-6	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999969116505545	WITHOUT_CLASSIFICATION	3.0883494455539916E-6	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999997514018801	WITHOUT_CLASSIFICATION	2.4859811988126144E-7	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999835438262047	WITHOUT_CLASSIFICATION	1.64561737952217E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999835438262047	WITHOUT_CLASSIFICATION	1.64561737952217E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999981301009975	WITHOUT_CLASSIFICATION	1.8698990025586484E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9993852084623696	WITHOUT_CLASSIFICATION	6.147915376303374E-4	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999795037481789	WITHOUT_CLASSIFICATION	2.0496251821147178E-5	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999548969436679	WITHOUT_CLASSIFICATION	4.510305633210676E-5	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.999956376061742	WITHOUT_CLASSIFICATION	4.3623938257938675E-5	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999945546844421	WITHOUT_CLASSIFICATION	5.4453155579811045E-6	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999810185193156	WITHOUT_CLASSIFICATION	1.898148068438559E-5	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999810185193156	WITHOUT_CLASSIFICATION	1.898148068438559E-5	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999898265707756	WITHOUT_CLASSIFICATION	1.0173429224367E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.999976232856453	WITHOUT_CLASSIFICATION	2.376714354706106E-5	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999869733236698	WITHOUT_CLASSIFICATION	1.3026676330182704E-5	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999994338482066	WITHOUT_CLASSIFICATION	5.661517933619011E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999997695947893	WITHOUT_CLASSIFICATION	2.304052107642158E-7	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999874811264995	WITHOUT_CLASSIFICATION	1.251887350061128E-5	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999349667638368	WITHOUT_CLASSIFICATION	6.503323616327052E-5	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.999999718028917	WITHOUT_CLASSIFICATION	2.8197108304469924E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999996820391696	WITHOUT_CLASSIFICATION	3.1796083039869765E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999996820391696	WITHOUT_CLASSIFICATION	3.1796083039869765E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999996820391696	WITHOUT_CLASSIFICATION	3.1796083039869765E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999996820391696	WITHOUT_CLASSIFICATION	3.1796083039869765E-6	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999925055928947	WITHOUT_CLASSIFICATION	7.4944071053773155E-6	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999996318239917	WITHOUT_CLASSIFICATION	3.6817600833935483E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999974346288489	WITHOUT_CLASSIFICATION	2.5653711510359566E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999948164464181	WITHOUT_CLASSIFICATION	5.183553581976259E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999948164464181	WITHOUT_CLASSIFICATION	5.183553581976259E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999954324597945	WITHOUT_CLASSIFICATION	4.567540205403206E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999954324597945	WITHOUT_CLASSIFICATION	4.567540205403206E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999961766023682	WITHOUT_CLASSIFICATION	3.823397631809167E-6	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999962559251556	WITHOUT_CLASSIFICATION	3.744074844297487E-6	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999825857182766	WITHOUT_CLASSIFICATION	1.7414281723416615E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999892961130205	WITHOUT_CLASSIFICATION	1.070388697967676E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999930865986685	WITHOUT_CLASSIFICATION	6.913401331562094E-6	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999977894976428	WITHOUT_CLASSIFICATION	2.210502357022963E-6	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999994306664628	WITHOUT_CLASSIFICATION	5.69333537176473E-7	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9998698543588623	WITHOUT_CLASSIFICATION	1.3014564113763847E-4	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999813016054961	WITHOUT_CLASSIFICATION	1.8698394503885244E-5	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999999281585977	WITHOUT_CLASSIFICATION	7.184140222772697E-8	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999997570711298	WITHOUT_CLASSIFICATION	2.4292887019496903E-7	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999987753813121	WITHOUT_CLASSIFICATION	1.2246186879725067E-6	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999999975996717	WITHOUT_CLASSIFICATION	2.4003283148171486E-9	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999919217470155	WITHOUT_CLASSIFICATION	8.078252984495431E-6	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9997199954938535	WITHOUT_CLASSIFICATION	2.8000450614653445E-4	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999999455997486	WITHOUT_CLASSIFICATION	5.440025153990992E-8	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999996568207064	WITHOUT_CLASSIFICATION	3.431792936620918E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9998696314214978	WITHOUT_CLASSIFICATION	1.3036857850221332E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9998696314214978	WITHOUT_CLASSIFICATION	1.3036857850221332E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9998696314214978	WITHOUT_CLASSIFICATION	1.3036857850221332E-4	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999917442916498	WITHOUT_CLASSIFICATION	8.255708350097755E-6	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999911011686244	WITHOUT_CLASSIFICATION	8.89883137557063E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999988753789048	WITHOUT_CLASSIFICATION	1.1246210953135561E-6	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.998880503481263	WITHOUT_CLASSIFICATION	0.0011194965187370516	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999999613723933	WITHOUT_CLASSIFICATION	3.8627606657778126E-8	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999962018907286	WITHOUT_CLASSIFICATION	3.7981092714620115E-6	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999767370609761	WITHOUT_CLASSIFICATION	2.3262939023855254E-5	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999999231871305	WITHOUT_CLASSIFICATION	7.68128694885109E-8	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999954370966037	WITHOUT_CLASSIFICATION	4.562903396385121E-6	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.999904999686114	WITHOUT_CLASSIFICATION	9.500031388600484E-5	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999993888735537	WITHOUT_CLASSIFICATION	6.111264462815116E-7	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999950734929334	WITHOUT_CLASSIFICATION	4.926507066576736E-6	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999998134466034	WITHOUT_CLASSIFICATION	1.8655339658618486E-7	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9999793047730592	WITHOUT_CLASSIFICATION	2.0695226940878793E-5	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.999990891941414	WITHOUT_CLASSIFICATION	9.108058585975352E-6	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.999999315548519	WITHOUT_CLASSIFICATION	6.844514811832695E-7	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999971164763153	WITHOUT_CLASSIFICATION	2.883523684676713E-6	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.999999737261716	WITHOUT_CLASSIFICATION	2.627382840267219E-7	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999569803082	WITHOUT_CLASSIFICATION	4.301969180931444E-8	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.999999133485834	WITHOUT_CLASSIFICATION	8.665141659816686E-7	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999986891637243	WITHOUT_CLASSIFICATION	1.3108362757532406E-6	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9999860973363934	WITHOUT_CLASSIFICATION	1.3902663606635216E-5	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999659528517	WITHOUT_CLASSIFICATION	3.4047148400219026E-8	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999615616853479	WITHOUT_CLASSIFICATION	3.843831465204227E-5	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999981504541389	WITHOUT_CLASSIFICATION	1.8495458610549524E-6	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9999467349452448	WITHOUT_CLASSIFICATION	5.326505475521406E-5	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999846427132466	WITHOUT_CLASSIFICATION	1.5357286753331524E-5	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999997092432625	WITHOUT_CLASSIFICATION	2.907567375005501E-7	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999994315118363	WITHOUT_CLASSIFICATION	5.684881637493229E-7	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999441683673	WITHOUT_CLASSIFICATION	5.583163267516931E-8	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999990012351394	WITHOUT_CLASSIFICATION	9.987648606032686E-7	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999935563181686	WITHOUT_CLASSIFICATION	6.443681831392738E-6	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.999994677181945	WITHOUT_CLASSIFICATION	5.3228180549008455E-6	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9999771783446876	WITHOUT_CLASSIFICATION	2.2821655312467848E-5	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.999800751644066	WITHOUT_CLASSIFICATION	1.9924835593390777E-4	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999430369976814	WITHOUT_CLASSIFICATION	5.6963002318586244E-5	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999919177900168	WITHOUT_CLASSIFICATION	8.082209983159145E-6	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9994694361767087	WITHOUT_CLASSIFICATION	5.305638232913542E-4	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999992019558254	WITHOUT_CLASSIFICATION	7.980441746425823E-7	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999964964497692	WITHOUT_CLASSIFICATION	3.503550230858813E-6	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999997217901366	WITHOUT_CLASSIFICATION	2.782098633969541E-7	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9999743367943618	WITHOUT_CLASSIFICATION	2.5663205638250485E-5	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999996162748577	WITHOUT_CLASSIFICATION	3.837251422644603E-7	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999972025684366	WITHOUT_CLASSIFICATION	2.797431563406181E-6	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999992996387551	WITHOUT_CLASSIFICATION	7.003612448690849E-7	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.999997459648657	WITHOUT_CLASSIFICATION	2.5403513428871935E-6	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999949338388429	WITHOUT_CLASSIFICATION	5.066161157192326E-6	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.999997842955607	WITHOUT_CLASSIFICATION	2.1570443929936856E-6	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999946788927941	WITHOUT_CLASSIFICATION	5.321107205879986E-6	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.999997536486331	WITHOUT_CLASSIFICATION	2.4635136689857264E-6	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999993304514252	WITHOUT_CLASSIFICATION	6.695485747781471E-7	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999987377399573	WITHOUT_CLASSIFICATION	1.2622600427374954E-6	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.99999961537168	WITHOUT_CLASSIFICATION	3.846283199071181E-7	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999999521879889	WITHOUT_CLASSIFICATION	4.781201111557805E-8	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999997937831162	WITHOUT_CLASSIFICATION	2.0621688367176804E-7	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.999982708975072	WITHOUT_CLASSIFICATION	1.7291024927942232E-5	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999994504966323	WITHOUT_CLASSIFICATION	5.495033677034038E-7	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999953918204891	WITHOUT_CLASSIFICATION	4.60817951080594E-6	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999996039820177	WITHOUT_CLASSIFICATION	3.960179821799806E-7	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.999995253441444	WITHOUT_CLASSIFICATION	4.746558556053556E-6	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999998584481132	WITHOUT_CLASSIFICATION	1.4155188681712427E-7	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999996822112139	WITHOUT_CLASSIFICATION	3.177887859953814E-7	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9999775771664723	WITHOUT_CLASSIFICATION	2.2422833527758618E-5	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.999999779321033	WITHOUT_CLASSIFICATION	2.2067896699072962E-7	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9998276350515739	WITHOUT_CLASSIFICATION	1.7236494842608936E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9997061527100656	WITHOUT_CLASSIFICATION	2.938472899344352E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999972266382591	WITHOUT_CLASSIFICATION	2.773361740945147E-6	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999711048552092	WITHOUT_CLASSIFICATION	2.8895144790781903E-5	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999999128836725	WITHOUT_CLASSIFICATION	8.711632741227284E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999991089446625	WITHOUT_CLASSIFICATION	8.910553374325634E-7	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999996643000443	WITHOUT_CLASSIFICATION	3.356999557178416E-7	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9999398326349047	WITHOUT_CLASSIFICATION	6.016736509542915E-5	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.999999997488273	WITHOUT_CLASSIFICATION	2.5117270161808276E-9	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999981949542	WITHOUT_CLASSIFICATION	1.8050458345190146E-9	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.999999998365906	WITHOUT_CLASSIFICATION	1.6340939590775207E-9	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999973153199206	WITHOUT_CLASSIFICATION	2.684680079374903E-6	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999357363316639	WITHOUT_CLASSIFICATION	6.426366833606641E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996110527979538	WITHOUT_CLASSIFICATION	3.8894720204620843E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996110527979538	WITHOUT_CLASSIFICATION	3.8894720204620843E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996110527979538	WITHOUT_CLASSIFICATION	3.8894720204620843E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.99999941166162	WITHOUT_CLASSIFICATION	5.88338380018412E-7	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999976181890474	WITHOUT_CLASSIFICATION	2.3818109524733226E-6	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999996670935861	WITHOUT_CLASSIFICATION	3.3290641386083063E-7	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999996203083166	WITHOUT_CLASSIFICATION	3.796916834309826E-7	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999990595394742	WITHOUT_CLASSIFICATION	9.40460525786389E-7	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999986467525337	WITHOUT_CLASSIFICATION	1.3532474663536314E-6	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999970195365979	WITHOUT_CLASSIFICATION	2.98046340197765E-6	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999961405264042	WITHOUT_CLASSIFICATION	3.859473595760753E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998531024907	WITHOUT_CLASSIFICATION	1.468975092295935E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998531024907	WITHOUT_CLASSIFICATION	1.468975092295935E-7	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999960128641519	WITHOUT_CLASSIFICATION	3.987135848158089E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999997857486996	WITHOUT_CLASSIFICATION	2.1425130042065327E-7	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.999999998365906	WITHOUT_CLASSIFICATION	1.6340939590775207E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999879907315218	WITHOUT_CLASSIFICATION	1.200926847821243E-5	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999997452401957	WITHOUT_CLASSIFICATION	2.547598043401449E-7	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999901170195773	WITHOUT_CLASSIFICATION	9.882980422662938E-6	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9999615519249437	WITHOUT_CLASSIFICATION	3.8448075056208985E-5	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.999980800540752	WITHOUT_CLASSIFICATION	1.9199459247966333E-5	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999996189336033	WITHOUT_CLASSIFICATION	3.810663967062835E-7	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999905843219463	WITHOUT_CLASSIFICATION	9.415678053732535E-6	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9999819776215836	WITHOUT_CLASSIFICATION	1.8022378416426776E-5	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9999554144984445	WITHOUT_CLASSIFICATION	4.4585501555583585E-5	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.999998972854895	WITHOUT_CLASSIFICATION	1.027145104989867E-6	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9943147422929067	WITHOUT_CLASSIFICATION	0.005685257707093276	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999924447134737	WITHOUT_CLASSIFICATION	7.5552865263811775E-6	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.999973799449516	WITHOUT_CLASSIFICATION	2.620055048395326E-5	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999970564096125	WITHOUT_CLASSIFICATION	2.9435903875342707E-6	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999968314278672	WITHOUT_CLASSIFICATION	3.1685721328366366E-6	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9999961524664992	WITHOUT_CLASSIFICATION	3.8475335008262315E-6	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9999939961885663	WITHOUT_CLASSIFICATION	6.00381143367198E-6	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9998927607081624	WITHOUT_CLASSIFICATION	1.0723929183766782E-4	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9998982115169426	WITHOUT_CLASSIFICATION	1.0178848305741011E-4	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999723548628625	WITHOUT_CLASSIFICATION	2.7645137137595012E-5	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999997277430251	WITHOUT_CLASSIFICATION	2.7225697479927814E-7	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.999998762799496	WITHOUT_CLASSIFICATION	1.2372005039999078E-6	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999944900641559	WITHOUT_CLASSIFICATION	5.509935844183569E-6	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999993400835361	WITHOUT_CLASSIFICATION	6.599164639097792E-7	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.999996839568205	WITHOUT_CLASSIFICATION	3.1604317950854128E-6	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999916365445465	WITHOUT_CLASSIFICATION	8.363455453510944E-6	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.999934571200179	WITHOUT_CLASSIFICATION	6.542879982094973E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999996268840585	WITHOUT_CLASSIFICATION	3.7311594150675884E-7	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999991502560733	WITHOUT_CLASSIFICATION	8.497439266263015E-7	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999994885687301	WITHOUT_CLASSIFICATION	5.114312699164094E-7	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999979969391	WITHOUT_CLASSIFICATION	2.0030610425040486E-9	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9999284575788097	WITHOUT_CLASSIFICATION	7.15424211903456E-5	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999977803714512	WITHOUT_CLASSIFICATION	2.21962854885901E-6	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999996968775182	WITHOUT_CLASSIFICATION	3.0312248170216663E-7	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999302968728918	WITHOUT_CLASSIFICATION	6.970312710814132E-5	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.999997189327256	WITHOUT_CLASSIFICATION	2.810672744062929E-6	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999812771591375	WITHOUT_CLASSIFICATION	1.8722840862483193E-5	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999996801013666	WITHOUT_CLASSIFICATION	3.198986334260842E-7	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999970141043293	WITHOUT_CLASSIFICATION	2.9858956706222743E-6	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999877064038342	WITHOUT_CLASSIFICATION	1.2293596165780598E-5	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.999998498360707	WITHOUT_CLASSIFICATION	1.501639293027654E-6	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999983976755579	WITHOUT_CLASSIFICATION	1.6023244420559802E-6	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9999876202695304	WITHOUT_CLASSIFICATION	1.237973046968347E-5	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999907897182325	WITHOUT_CLASSIFICATION	9.210281767581047E-6	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999974323287117	WITHOUT_CLASSIFICATION	2.5676712883652885E-6	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999828196473118	WITHOUT_CLASSIFICATION	1.7180352688159766E-5	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999992253950185	WITHOUT_CLASSIFICATION	7.746049815343501E-7	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999941356979805	WITHOUT_CLASSIFICATION	5.8643020195758745E-6	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9999948219863722	WITHOUT_CLASSIFICATION	5.178013627784421E-6	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999974002426204	WITHOUT_CLASSIFICATION	2.5997573796532836E-6	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9999896522407388	WITHOUT_CLASSIFICATION	1.0347759261189556E-5	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9999745170916108	WITHOUT_CLASSIFICATION	2.548290838914972E-5	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999918972700724	WITHOUT_CLASSIFICATION	8.10272992749877E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999378072948448	WITHOUT_CLASSIFICATION	6.219270515518185E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999925156415478	WITHOUT_CLASSIFICATION	7.484358452186647E-6	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999984585473999	WITHOUT_CLASSIFICATION	1.5414526001151198E-6	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999949932290287	WITHOUT_CLASSIFICATION	5.0067709712171275E-6	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999997091581116	WITHOUT_CLASSIFICATION	2.9084188840616675E-7	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999995800247521	WITHOUT_CLASSIFICATION	4.1997524800757083E-7	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.999994026886744	WITHOUT_CLASSIFICATION	5.973113256047442E-6	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999998684407266	WITHOUT_CLASSIFICATION	1.3155927336991846E-7	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999843390130728	WITHOUT_CLASSIFICATION	1.5660986927115677E-5	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.999341081421851	WITHOUT_CLASSIFICATION	6.58918578148932E-4	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9995309586695429	WITHOUT_CLASSIFICATION	4.690413304571597E-4	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999375071427556	WITHOUT_CLASSIFICATION	6.249285724444989E-5	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999996376036479	WITHOUT_CLASSIFICATION	3.6239635217175633E-7	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999993222325296	WITHOUT_CLASSIFICATION	6.777674702654145E-7	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999947125330559	WITHOUT_CLASSIFICATION	5.287466944062994E-6	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999990447676463	WITHOUT_CLASSIFICATION	9.552323536583552E-7	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9998231511813056	WITHOUT_CLASSIFICATION	1.768488186944134E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9997061527100656	WITHOUT_CLASSIFICATION	2.938472899344352E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999993222325296	WITHOUT_CLASSIFICATION	6.777674702654145E-7	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999947125330559	WITHOUT_CLASSIFICATION	5.287466944062994E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999993688628778	WITHOUT_CLASSIFICATION	6.311371223660298E-7	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999999996216428	WITHOUT_CLASSIFICATION	3.7835713373725496E-10	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999981515277271	WITHOUT_CLASSIFICATION	1.8484722728629527E-6	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999998022356194	WITHOUT_CLASSIFICATION	1.977643805486187E-7	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999982872144355	WITHOUT_CLASSIFICATION	1.7127855644909724E-6	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999848482940181	WITHOUT_CLASSIFICATION	1.5151705981776126E-5	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999741734998734	WITHOUT_CLASSIFICATION	2.58265001266454E-5	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999936440125621	WITHOUT_CLASSIFICATION	6.355987437931343E-6	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999966233629657	WITHOUT_CLASSIFICATION	3.3766370344271675E-6	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999993943931357	WITHOUT_CLASSIFICATION	6.056068642962599E-7	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999977625579425	WITHOUT_CLASSIFICATION	2.2374420574892775E-6	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999984177487328	WITHOUT_CLASSIFICATION	1.5822512671983076E-6	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9998044762230531	WITHOUT_CLASSIFICATION	1.9552377694690042E-4	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999983573116769	WITHOUT_CLASSIFICATION	1.6426883231786217E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9998559846160187	WITHOUT_CLASSIFICATION	1.4401538398143535E-4	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999930731910716	WITHOUT_CLASSIFICATION	6.926808928444881E-6	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999194336744824	WITHOUT_CLASSIFICATION	8.056632551756978E-5	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9996461822696648	WITHOUT_CLASSIFICATION	3.538177303351098E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999990928456549	WITHOUT_CLASSIFICATION	9.071543451334023E-7	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9998993949641112	WITHOUT_CLASSIFICATION	1.0060503588875919E-4	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999910330231913	WITHOUT_CLASSIFICATION	8.966976808649473E-6	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999893740813445	WITHOUT_CLASSIFICATION	1.0625918655479787E-5	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999743801269655	WITHOUT_CLASSIFICATION	2.56198730345952E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999999128836725	WITHOUT_CLASSIFICATION	8.711632741227284E-8	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999997542587167	WITHOUT_CLASSIFICATION	2.457412833287624E-7	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999993018483344	WITHOUT_CLASSIFICATION	6.981516656474397E-7	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9999941399852871	WITHOUT_CLASSIFICATION	5.860014712899489E-6	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9999073018192717	WITHOUT_CLASSIFICATION	9.269818072825913E-5	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9999946193068289	WITHOUT_CLASSIFICATION	5.380693171173906E-6	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999942569757634	WITHOUT_CLASSIFICATION	5.743024236522317E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999993716705515	WITHOUT_CLASSIFICATION	6.28329448347867E-7	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999937317685648	WITHOUT_CLASSIFICATION	6.268231435263527E-6	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999926372524948	WITHOUT_CLASSIFICATION	7.362747505231069E-6	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.99999927232968	WITHOUT_CLASSIFICATION	7.276703200892926E-7	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999995486297559	WITHOUT_CLASSIFICATION	4.513702440925795E-7	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999943822830002	WITHOUT_CLASSIFICATION	5.617716999772526E-6	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999877593170765	WITHOUT_CLASSIFICATION	1.2240682923552447E-5	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.999999476789731	WITHOUT_CLASSIFICATION	5.232102689757245E-7	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999929524716964	WITHOUT_CLASSIFICATION	7.0475283036712666E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999854113846	WITHOUT_CLASSIFICATION	1.4588615282359861E-8	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999937161399957	WITHOUT_CLASSIFICATION	6.283860004373968E-6	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999748100406723	WITHOUT_CLASSIFICATION	2.5189959327690734E-5	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.999996687264676	WITHOUT_CLASSIFICATION	3.3127353239555035E-6	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.999995916809655	WITHOUT_CLASSIFICATION	4.083190344981758E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999924925719018	WITHOUT_CLASSIFICATION	7.507428098230776E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999968639060873	WITHOUT_CLASSIFICATION	3.136093912696027E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999968639060873	WITHOUT_CLASSIFICATION	3.136093912696027E-6	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999979403831945	WITHOUT_CLASSIFICATION	2.059616805524928E-6	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999906225152076	WITHOUT_CLASSIFICATION	9.377484792278988E-6	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999915492778134	WITHOUT_CLASSIFICATION	8.450722186658423E-6	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.999999969355815	WITHOUT_CLASSIFICATION	3.0644184901783223E-8	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999986033535906	WITHOUT_CLASSIFICATION	1.3966464093755244E-6	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999924535488754	WITHOUT_CLASSIFICATION	7.54645112462293E-6	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999821719898988	WITHOUT_CLASSIFICATION	1.7828010101266953E-5	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999797601872169	WITHOUT_CLASSIFICATION	2.02398127829888E-5	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.999999679529927	WITHOUT_CLASSIFICATION	3.2047007300086795E-7	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999970367553301	WITHOUT_CLASSIFICATION	2.9632446699035516E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999997404578813	WITHOUT_CLASSIFICATION	2.5954211873487886E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999944421906458	WITHOUT_CLASSIFICATION	5.557809354240165E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999998400247394	WITHOUT_CLASSIFICATION	1.5997526066362386E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999998400247394	WITHOUT_CLASSIFICATION	1.5997526066362386E-7	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999994444752273	WITHOUT_CLASSIFICATION	5.555247726726926E-7	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999950484381506	WITHOUT_CLASSIFICATION	4.951561849450145E-6	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999995092383016	WITHOUT_CLASSIFICATION	4.907616983971365E-7	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999992447072765	WITHOUT_CLASSIFICATION	7.552927234583398E-7	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999998396468319	WITHOUT_CLASSIFICATION	1.6035316805534916E-7	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999985251744438	WITHOUT_CLASSIFICATION	1.4748255562941646E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999995200722615	WITHOUT_CLASSIFICATION	4.799277384962232E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999674341267788	WITHOUT_CLASSIFICATION	3.256587322116329E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999674341267788	WITHOUT_CLASSIFICATION	3.256587322116329E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999674341267788	WITHOUT_CLASSIFICATION	3.256587322116329E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999674341267788	WITHOUT_CLASSIFICATION	3.256587322116329E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999674341267788	WITHOUT_CLASSIFICATION	3.256587322116329E-5	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999861143897095	WITHOUT_CLASSIFICATION	1.3885610290499751E-5	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999980695312795	WITHOUT_CLASSIFICATION	1.9304687206068818E-6	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999986033535906	WITHOUT_CLASSIFICATION	1.3966464093755244E-6	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999985179310809	WITHOUT_CLASSIFICATION	1.4820689191112588E-6	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.999998821838749	WITHOUT_CLASSIFICATION	1.1781612509738385E-6	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999998055294336	WITHOUT_CLASSIFICATION	1.9447056644599573E-7	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999950270673175	WITHOUT_CLASSIFICATION	4.972932682569108E-6	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999993835847816	WITHOUT_CLASSIFICATION	6.164152184376476E-7	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999940353695106	WITHOUT_CLASSIFICATION	5.964630489355534E-6	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999989081293077	WITHOUT_CLASSIFICATION	1.0918706923207977E-6	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999989079840953	WITHOUT_CLASSIFICATION	1.092015904714653E-6	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999988046476538	WITHOUT_CLASSIFICATION	1.1953523461843618E-6	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999994630844647	WITHOUT_CLASSIFICATION	5.369155353450645E-7	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999999704302435	WITHOUT_CLASSIFICATION	2.9569756491473246E-8	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999992549731049	WITHOUT_CLASSIFICATION	7.450268950650726E-7	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9976216293407769	WITHOUT_CLASSIFICATION	0.002378370659223018	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999976208178201	WITHOUT_CLASSIFICATION	2.3791821800373865E-6	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9998016259593767	WITHOUT_CLASSIFICATION	1.9837404062324898E-4	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999996754039021	WITHOUT_CLASSIFICATION	3.245960978883182E-7	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999972838713868	WITHOUT_CLASSIFICATION	2.71612861316593E-6	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.999998044434804	WITHOUT_CLASSIFICATION	1.9555651960930003E-6	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999996236523526	WITHOUT_CLASSIFICATION	3.763476473945062E-7	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999999007004506	WITHOUT_CLASSIFICATION	9.929954927916793E-8	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999997300102333	WITHOUT_CLASSIFICATION	2.699897666222022E-7	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999999922428149	WITHOUT_CLASSIFICATION	7.757185073275067E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.999999934760577	WITHOUT_CLASSIFICATION	6.523942299038807E-8	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999988278422891	WITHOUT_CLASSIFICATION	1.1721577108726513E-6	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9998983050210815	WITHOUT_CLASSIFICATION	1.0169497891853607E-4	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999782690992686	WITHOUT_CLASSIFICATION	2.1730900731355727E-5	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999975256601558	WITHOUT_CLASSIFICATION	2.474339844176718E-6	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.999996616503603	WITHOUT_CLASSIFICATION	3.383496396876327E-6	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.999993951345657	WITHOUT_CLASSIFICATION	6.048654343006751E-6	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999959509342699	WITHOUT_CLASSIFICATION	4.049065730128885E-6	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999855031305117	WITHOUT_CLASSIFICATION	1.4496869488184744E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999980890923017	WITHOUT_CLASSIFICATION	1.910907698208534E-6	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999996107388539	WITHOUT_CLASSIFICATION	3.8926114612089617E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999994713892297	WITHOUT_CLASSIFICATION	5.286107703024664E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999994713892297	WITHOUT_CLASSIFICATION	5.286107703024664E-7	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999948212922459	WITHOUT_CLASSIFICATION	5.178707754118211E-6	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999988117889643	WITHOUT_CLASSIFICATION	1.1882110356392776E-6	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999985188679914	WITHOUT_CLASSIFICATION	1.4811320085389882E-6	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999974368970443	WITHOUT_CLASSIFICATION	2.5631029555939885E-6	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999996921823551	WITHOUT_CLASSIFICATION	3.078176449564745E-7	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.999924088381037	WITHOUT_CLASSIFICATION	7.59116189630619E-5	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999986998344781	WITHOUT_CLASSIFICATION	1.3001655219071221E-6	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999577848651374	WITHOUT_CLASSIFICATION	4.2215134862608204E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999970210727498	WITHOUT_CLASSIFICATION	2.978927250241294E-6	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999997179116542	WITHOUT_CLASSIFICATION	2.820883457360797E-7	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999555206420332	WITHOUT_CLASSIFICATION	4.447935796678934E-5	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9999246074264151	WITHOUT_CLASSIFICATION	7.53925735848804E-5	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999953225505062	WITHOUT_CLASSIFICATION	4.677449493876753E-6	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9999866058297	WITHOUT_CLASSIFICATION	1.3394170300005811E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999980890923017	WITHOUT_CLASSIFICATION	1.910907698208534E-6	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999996921823551	WITHOUT_CLASSIFICATION	3.078176449564745E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999973012006103	WITHOUT_CLASSIFICATION	2.6987993897732772E-6	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999981929822409	WITHOUT_CLASSIFICATION	1.807017759158289E-6	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.999987821206747	WITHOUT_CLASSIFICATION	1.2178793252853013E-5	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999993971774964	WITHOUT_CLASSIFICATION	6.028225035736623E-7	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999993943169353	WITHOUT_CLASSIFICATION	6.056830647533853E-7	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9999460046599914	WITHOUT_CLASSIFICATION	5.3995340008548965E-5	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999998682300422	WITHOUT_CLASSIFICATION	1.3176995785769608E-7	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.999999892875132	WITHOUT_CLASSIFICATION	1.0712486798363317E-7	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999836851629378	WITHOUT_CLASSIFICATION	1.6314837062203375E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999982109553236	WITHOUT_CLASSIFICATION	1.7890446764693403E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999999968716197	WITHOUT_CLASSIFICATION	3.128380296106649E-8	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999999872014381	WITHOUT_CLASSIFICATION	1.2798561948960185E-8	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999247351554679	WITHOUT_CLASSIFICATION	7.52648445321394E-5	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9977679682446999	WITHOUT_CLASSIFICATION	0.002232031755300079	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.999817554816868	WITHOUT_CLASSIFICATION	1.824451831319266E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9998815002546696	WITHOUT_CLASSIFICATION	1.1849974533039592E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999965768349687	WITHOUT_CLASSIFICATION	3.4231650312815804E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9999720071840534	WITHOUT_CLASSIFICATION	2.7992815946603227E-5	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9985582430606881	WITHOUT_CLASSIFICATION	0.001441756939311884	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999967977073364	WITHOUT_CLASSIFICATION	3.202292663615817E-6	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999990750191194	WITHOUT_CLASSIFICATION	9.249808805517458E-7	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999983444950307	WITHOUT_CLASSIFICATION	1.6555049692473605E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.999999792731672	WITHOUT_CLASSIFICATION	2.0726832782951572E-7	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999996909089918	WITHOUT_CLASSIFICATION	3.090910082748252E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999997052674274	WITHOUT_CLASSIFICATION	2.947325725027121E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999998284622903	WITHOUT_CLASSIFICATION	1.7153770981250702E-7	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999984295275982	WITHOUT_CLASSIFICATION	1.5704724017998343E-6	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9993396912721396	WITHOUT_CLASSIFICATION	6.603087278604356E-4	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999922217840894	WITHOUT_CLASSIFICATION	7.778215910492797E-6	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999612295031008	WITHOUT_CLASSIFICATION	3.8770496899054614E-5	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999973755572845	WITHOUT_CLASSIFICATION	2.624442715566217E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999999283355234	WITHOUT_CLASSIFICATION	7.166447658161964E-8	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999998982083953	WITHOUT_CLASSIFICATION	1.017916047130234E-7	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999943655973793	WITHOUT_CLASSIFICATION	5.634402620623157E-6	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999974545387599	WITHOUT_CLASSIFICATION	2.5454612402166863E-6	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999974420452418	WITHOUT_CLASSIFICATION	2.5579547583306926E-6	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999975570660283	WITHOUT_CLASSIFICATION	2.4429339715459123E-6	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999988601601424	WITHOUT_CLASSIFICATION	1.1398398575710107E-6	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999976520007793	WITHOUT_CLASSIFICATION	2.347999220628842E-6	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999945274135786	WITHOUT_CLASSIFICATION	5.472586421409246E-6	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9999615761221348	WITHOUT_CLASSIFICATION	3.842387786521646E-5	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999739295009715	WITHOUT_CLASSIFICATION	2.6070499028489338E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9999993348496519	WITHOUT_CLASSIFICATION	6.651503480389815E-7	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.999997705916812	WITHOUT_CLASSIFICATION	2.2940831879673784E-6	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.999567810299852	WITHOUT_CLASSIFICATION	4.3218970014801945E-4	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999813788719892	WITHOUT_CLASSIFICATION	1.8621128010720564E-5	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999946901956323	WITHOUT_CLASSIFICATION	5.309804367691491E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999991395781198	WITHOUT_CLASSIFICATION	8.604218801627398E-7	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999961199613732	WITHOUT_CLASSIFICATION	3.880038626762618E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9999933171552877	WITHOUT_CLASSIFICATION	6.6828447123205285E-6	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999956489219599	WITHOUT_CLASSIFICATION	4.351078040134156E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999053408082	WITHOUT_CLASSIFICATION	9.465919184882554E-8	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.99996604292169	WITHOUT_CLASSIFICATION	3.395707831000755E-5	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999996463734597	WITHOUT_CLASSIFICATION	3.5362654025813696E-7	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999985229728304	WITHOUT_CLASSIFICATION	1.4770271696205382E-6	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9989823534253882	WITHOUT_CLASSIFICATION	0.001017646574611754	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999996427420154	WITHOUT_CLASSIFICATION	3.5725798464959227E-7	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999999102358145	WITHOUT_CLASSIFICATION	8.976418555018008E-8	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999971410798928	WITHOUT_CLASSIFICATION	2.858920107094507E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999948745805407	WITHOUT_CLASSIFICATION	5.125419459250361E-6	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999979902710362	WITHOUT_CLASSIFICATION	2.009728963844928E-6	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999991339986017	WITHOUT_CLASSIFICATION	8.660013982842833E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999971410798928	WITHOUT_CLASSIFICATION	2.858920107094507E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999910103517484	WITHOUT_CLASSIFICATION	8.989648251619088E-6	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999958029385414	WITHOUT_CLASSIFICATION	4.197061458557882E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999996626705788	WITHOUT_CLASSIFICATION	3.373294212082327E-7	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999996334190492	WITHOUT_CLASSIFICATION	3.665809507214563E-7	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.999920790126446	WITHOUT_CLASSIFICATION	7.920987355394009E-5	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999995543498432	WITHOUT_CLASSIFICATION	4.456501567145907E-7	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999972402441821	WITHOUT_CLASSIFICATION	2.7597558178987646E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999993621146966	WITHOUT_CLASSIFICATION	6.378853033883483E-7	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999993702678939	WITHOUT_CLASSIFICATION	6.297321061834507E-7	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999950337359599	WITHOUT_CLASSIFICATION	4.966264040155397E-6	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9999990028400405	WITHOUT_CLASSIFICATION	9.971599595001627E-7	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999999566433584	WITHOUT_CLASSIFICATION	4.3356641566056194E-8	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999990556228814	WITHOUT_CLASSIFICATION	9.443771185961337E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999962949381613	WITHOUT_CLASSIFICATION	3.705061838630323E-6	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999906456716	WITHOUT_CLASSIFICATION	9.354328481096985E-9	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.999999549729333	WITHOUT_CLASSIFICATION	4.502706669465084E-7	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999988670055623	WITHOUT_CLASSIFICATION	1.1329944377654063E-6	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999915360854438	WITHOUT_CLASSIFICATION	8.463914556202588E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999373687442946	WITHOUT_CLASSIFICATION	6.263125570534042E-5	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999965614996812	WITHOUT_CLASSIFICATION	3.4385003187173987E-6	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999958731429569	WITHOUT_CLASSIFICATION	4.126857043075494E-6	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999998754555417	WITHOUT_CLASSIFICATION	1.2454445838235777E-7	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.999999069559817	WITHOUT_CLASSIFICATION	9.304401828990798E-7	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999997943228957	WITHOUT_CLASSIFICATION	2.056771044569653E-7	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999998850991374	WITHOUT_CLASSIFICATION	1.1490086270314546E-7	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999997038557192	WITHOUT_CLASSIFICATION	2.9614428082987213E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999357353722	WITHOUT_CLASSIFICATION	6.426462790387101E-8	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.999999880565997	WITHOUT_CLASSIFICATION	1.1943400301267637E-7	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.9997766389893231	WITHOUT_CLASSIFICATION	2.233610106768235E-4	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999989321872185	WITHOUT_CLASSIFICATION	1.067812781502934E-6	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999941632229212	WITHOUT_CLASSIFICATION	5.836777078848252E-6	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999995120882298	WITHOUT_CLASSIFICATION	4.879117701903946E-7	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999994761975256	WITHOUT_CLASSIFICATION	5.238024744563606E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999357353722	WITHOUT_CLASSIFICATION	6.426462790387101E-8	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999992210398613	WITHOUT_CLASSIFICATION	7.789601387773911E-7	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999992210398613	WITHOUT_CLASSIFICATION	7.789601387773911E-7	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999993316450402	WITHOUT_CLASSIFICATION	6.683549598916162E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999357353722	WITHOUT_CLASSIFICATION	6.426462790387101E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999357353722	WITHOUT_CLASSIFICATION	6.426462790387101E-8	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999993157667613	WITHOUT_CLASSIFICATION	6.8423323884779E-7	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999995467532022	WITHOUT_CLASSIFICATION	4.532467978157977E-7	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999984601443798	WITHOUT_CLASSIFICATION	1.5398556202898267E-6	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999984601443798	WITHOUT_CLASSIFICATION	1.5398556202898267E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999999596034276	WITHOUT_CLASSIFICATION	4.039657243345211E-8	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999653129535617	WITHOUT_CLASSIFICATION	3.46870464382165E-5	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999997126896454	WITHOUT_CLASSIFICATION	2.8731035463208093E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999373687442946	WITHOUT_CLASSIFICATION	6.263125570534042E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999373687442946	WITHOUT_CLASSIFICATION	6.263125570534042E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999999596034276	WITHOUT_CLASSIFICATION	4.039657243345211E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999998113154294	WITHOUT_CLASSIFICATION	1.8868457055725977E-7	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999955362162947	WITHOUT_CLASSIFICATION	4.463783705321787E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999853960577223	WITHOUT_CLASSIFICATION	1.460394227783238E-5	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999996004927777	WITHOUT_CLASSIFICATION	3.9950722232836126E-7	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999684500859023	WITHOUT_CLASSIFICATION	3.154991409769828E-5	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999873920042015	WITHOUT_CLASSIFICATION	1.2607995798555752E-5	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999968818544911	WITHOUT_CLASSIFICATION	3.1181455089704374E-6	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999955180326491	WITHOUT_CLASSIFICATION	4.481967350849471E-6	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999989004467416	WITHOUT_CLASSIFICATION	1.099553258412564E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999999278089937	WITHOUT_CLASSIFICATION	7.219100631448837E-8	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.999996491389465	WITHOUT_CLASSIFICATION	3.5086105349754855E-6	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999990654048837	WITHOUT_CLASSIFICATION	9.345951163641868E-7	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999592455321259	WITHOUT_CLASSIFICATION	4.075446787416506E-5	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999998095719324	WITHOUT_CLASSIFICATION	1.9042806768250783E-7	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999900253527414	WITHOUT_CLASSIFICATION	9.974647258608106E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999986585308468	WITHOUT_CLASSIFICATION	1.3414691532013956E-6	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999978818781063	WITHOUT_CLASSIFICATION	2.1181218935486192E-6	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999504046413138	WITHOUT_CLASSIFICATION	4.959535868611705E-5	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9999998986649798	WITHOUT_CLASSIFICATION	1.0133502014272102E-7	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999926147144285	WITHOUT_CLASSIFICATION	7.385285571539049E-6	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9997557616290523	WITHOUT_CLASSIFICATION	2.4423837094774044E-4	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999994175167685	WITHOUT_CLASSIFICATION	5.82483231508116E-7	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999980015421878	WITHOUT_CLASSIFICATION	1.99845781217517E-6	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9999749550226658	WITHOUT_CLASSIFICATION	2.5044977334247084E-5	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999951638265024	WITHOUT_CLASSIFICATION	4.83617349751987E-6	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999971850271062	WITHOUT_CLASSIFICATION	2.8149728938792693E-6	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999979258648706	WITHOUT_CLASSIFICATION	2.074135129362577E-6	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9997433904708808	WITHOUT_CLASSIFICATION	2.566095291191316E-4	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999928236733531	WITHOUT_CLASSIFICATION	7.176326646932944E-6	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999992923679928	WITHOUT_CLASSIFICATION	7.076320072565911E-7	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9999324717214771	WITHOUT_CLASSIFICATION	6.752827852285984E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9999590430347143	WITHOUT_CLASSIFICATION	4.0956965285678536E-5	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999998157320777	WITHOUT_CLASSIFICATION	1.84267922222685E-7	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999986032459601	WITHOUT_CLASSIFICATION	1.3967540399257907E-6	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999997232194817	WITHOUT_CLASSIFICATION	2.7678051823069185E-7	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999996941676896	WITHOUT_CLASSIFICATION	3.058323102801336E-7	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999941721061002	WITHOUT_CLASSIFICATION	5.827893899728433E-6	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999897887647521	WITHOUT_CLASSIFICATION	1.021123524792307E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999996196649777	WITHOUT_CLASSIFICATION	3.803350222341639E-7	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9997260694805237	WITHOUT_CLASSIFICATION	2.7393051947634717E-4	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999975648482419	WITHOUT_CLASSIFICATION	2.435151758149407E-6	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.999998602967208	WITHOUT_CLASSIFICATION	1.3970327920633941E-6	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999954498937935	WITHOUT_CLASSIFICATION	4.550106206472913E-6	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999956332763634	WITHOUT_CLASSIFICATION	4.366723636532844E-6	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999950892821058	WITHOUT_CLASSIFICATION	4.910717894227669E-6	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9999750632590333	WITHOUT_CLASSIFICATION	2.493674096672425E-5	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9997745284724203	WITHOUT_CLASSIFICATION	2.254715275796902E-4	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999984242347136	WITHOUT_CLASSIFICATION	1.5757652863372867E-6	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999998072376783	WITHOUT_CLASSIFICATION	1.927623215968397E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999976091644841	WITHOUT_CLASSIFICATION	2.3908355158077584E-6	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9999324547120629	WITHOUT_CLASSIFICATION	6.754528793707976E-5	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999805207347259	WITHOUT_CLASSIFICATION	1.947926527416847E-5	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999997217967891	WITHOUT_CLASSIFICATION	2.782032109384102E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.999999486084687	WITHOUT_CLASSIFICATION	5.139153130296271E-7	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999915761421669	WITHOUT_CLASSIFICATION	8.423857833070615E-6	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999995455959484	WITHOUT_CLASSIFICATION	4.5440405154993616E-7	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999964154111668	WITHOUT_CLASSIFICATION	3.5845888331356138E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999938138749122	WITHOUT_CLASSIFICATION	6.186125087837681E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999993275089353	WITHOUT_CLASSIFICATION	6.724910646946892E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999997223766749	WITHOUT_CLASSIFICATION	2.7762332511414104E-7	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999999618384874	WITHOUT_CLASSIFICATION	3.816151256103058E-8	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.999997451255677	WITHOUT_CLASSIFICATION	2.54874432307323E-6	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999947083786327	WITHOUT_CLASSIFICATION	5.29162136732104E-6	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999999799032715	WITHOUT_CLASSIFICATION	2.0096728491144266E-8	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9655879893294448	WITHOUT_CLASSIFICATION	0.034412010670555174	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999981261878342	WITHOUT_CLASSIFICATION	1.8738121656542151E-6	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999975583669304	WITHOUT_CLASSIFICATION	2.4416330697308434E-6	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9982397337576614	WITHOUT_CLASSIFICATION	0.0017602662423386408	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9999880713731112	WITHOUT_CLASSIFICATION	1.1928626888718246E-5	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9997519919077696	WITHOUT_CLASSIFICATION	2.480080922304246E-4	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999796434582342	WITHOUT_CLASSIFICATION	2.035654176572666E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999863440203772	WITHOUT_CLASSIFICATION	1.365597962266466E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999983107398367	WITHOUT_CLASSIFICATION	1.6892601633745665E-6	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9999912920947175	WITHOUT_CLASSIFICATION	8.70790528251343E-6	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999995593544089	WITHOUT_CLASSIFICATION	4.406455911666232E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999988865348036	WITHOUT_CLASSIFICATION	1.113465196374973E-6	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999988865348036	WITHOUT_CLASSIFICATION	1.113465196374973E-6	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999989996009259	WITHOUT_CLASSIFICATION	1.000399074206579E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9999952844351047	WITHOUT_CLASSIFICATION	4.715564895313291E-6	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999998397818691	WITHOUT_CLASSIFICATION	1.6021813086190595E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9995244588305571	WITHOUT_CLASSIFICATION	4.755411694428972E-4	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999841446129738	WITHOUT_CLASSIFICATION	1.585538702620225E-5	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999995215405921	WITHOUT_CLASSIFICATION	4.784594078047308E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9999749616144276	WITHOUT_CLASSIFICATION	2.5038385572378157E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999987916151971	WITHOUT_CLASSIFICATION	1.208384802894057E-6	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.999838560343586	WITHOUT_CLASSIFICATION	1.61439656413976E-4	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999999841694185	WITHOUT_CLASSIFICATION	1.5830581497562714E-8	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999999128338568	WITHOUT_CLASSIFICATION	8.716614320578707E-8	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999999690997189	WITHOUT_CLASSIFICATION	3.0900281059448106E-8	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999998881486034	WITHOUT_CLASSIFICATION	1.1185139662324884E-7	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999993536307543	WITHOUT_CLASSIFICATION	6.463692457448143E-7	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999999452665581	WITHOUT_CLASSIFICATION	5.4733441931508545E-8	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999973210055794	WITHOUT_CLASSIFICATION	2.67899442051852E-6	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999977528709104	WITHOUT_CLASSIFICATION	2.2471290895280666E-6	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999994512966232	WITHOUT_CLASSIFICATION	5.487033768240942E-7	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9998533812961795	WITHOUT_CLASSIFICATION	1.466187038204378E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999835536250249	WITHOUT_CLASSIFICATION	1.644637497501057E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999895922434223	WITHOUT_CLASSIFICATION	1.0407756577651134E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9998926683219821	WITHOUT_CLASSIFICATION	1.0733167801789649E-4	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999975394506309	WITHOUT_CLASSIFICATION	2.4605493691604647E-6	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.999978314300195	WITHOUT_CLASSIFICATION	2.1685699805044388E-5	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9997487853042382	WITHOUT_CLASSIFICATION	2.512146957618915E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999277311396072	WITHOUT_CLASSIFICATION	7.226886039281406E-5	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9999818382996679	WITHOUT_CLASSIFICATION	1.816170033208471E-5	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999977797239474	WITHOUT_CLASSIFICATION	2.2202760525529678E-6	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999928835201827	WITHOUT_CLASSIFICATION	7.116479817289112E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999835536250249	WITHOUT_CLASSIFICATION	1.644637497501057E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9998926683219821	WITHOUT_CLASSIFICATION	1.0733167801789649E-4	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999999368647564	WITHOUT_CLASSIFICATION	6.31352435962781E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999986956769992	WITHOUT_CLASSIFICATION	1.3043230007922512E-6	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999941420579713	WITHOUT_CLASSIFICATION	5.857942028736206E-6	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9675668942304272	WITHOUT_CLASSIFICATION	0.03243310576957288	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.999998643152893	WITHOUT_CLASSIFICATION	1.3568471070313296E-6	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999941789234231	WITHOUT_CLASSIFICATION	5.821076576802875E-6	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999995926642044	WITHOUT_CLASSIFICATION	4.073357957149174E-7	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9999344145547345	WITHOUT_CLASSIFICATION	6.558544526544568E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999963483744644	WITHOUT_CLASSIFICATION	3.6516255354867956E-6	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999983370213759	WITHOUT_CLASSIFICATION	1.662978624120771E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999924809500564	WITHOUT_CLASSIFICATION	7.519049943468351E-6	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999990092198374	WITHOUT_CLASSIFICATION	9.907801625745259E-7	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999951496762015	WITHOUT_CLASSIFICATION	4.850323798535377E-6	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.999999405286504	WITHOUT_CLASSIFICATION	5.947134961114016E-7	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999991797003862	WITHOUT_CLASSIFICATION	8.202996138747976E-7	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999991330927056	WITHOUT_CLASSIFICATION	8.66907294317817E-7	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9997951405548052	WITHOUT_CLASSIFICATION	2.0485944519469323E-4	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9999939634950059	WITHOUT_CLASSIFICATION	6.036504994046851E-6	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999953168623847	WITHOUT_CLASSIFICATION	4.683137615230761E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999997038557192	WITHOUT_CLASSIFICATION	2.9614428082987213E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999585979611505	WITHOUT_CLASSIFICATION	4.140203884948873E-5	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999999363568034	WITHOUT_CLASSIFICATION	6.364319663839476E-8	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999996952082257	WITHOUT_CLASSIFICATION	3.0479177421782717E-7	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999982939710306	WITHOUT_CLASSIFICATION	1.7060289694678796E-6	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999998173732626	WITHOUT_CLASSIFICATION	1.8262673730045014E-7	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999852648842068	WITHOUT_CLASSIFICATION	1.4735115793180947E-5	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999604520707033	WITHOUT_CLASSIFICATION	3.954792929680936E-5	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999973001792082	WITHOUT_CLASSIFICATION	2.699820791916428E-6	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999997755874372	WITHOUT_CLASSIFICATION	2.2441256282404284E-7	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999893970090271	WITHOUT_CLASSIFICATION	1.0602990972930687E-5	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999955039628634	WITHOUT_CLASSIFICATION	4.496037136599774E-6	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999983886722053	WITHOUT_CLASSIFICATION	1.6113277947206577E-6	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999973484855845	WITHOUT_CLASSIFICATION	2.6515144155703596E-6	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999994602766725	WITHOUT_CLASSIFICATION	5.397233274607619E-7	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999995739065377	WITHOUT_CLASSIFICATION	4.260934623370304E-7	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999990077280261	WITHOUT_CLASSIFICATION	9.922719738303378E-7	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999998787367671	WITHOUT_CLASSIFICATION	1.2126323287806314E-7	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999997895692261	WITHOUT_CLASSIFICATION	2.1043077378784603E-7	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999991988787014	WITHOUT_CLASSIFICATION	8.01121298582669E-7	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999966613459688	WITHOUT_CLASSIFICATION	3.338654031148784E-6	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.99999760910074	WITHOUT_CLASSIFICATION	2.390899259997198E-6	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999325627094788	WITHOUT_CLASSIFICATION	6.743729052122186E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9999622385020066	WITHOUT_CLASSIFICATION	3.776149799331112E-5	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999975490837397	WITHOUT_CLASSIFICATION	2.450916260339425E-6	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.999998263505741	WITHOUT_CLASSIFICATION	1.7364942589755308E-6	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9999970671230335	WITHOUT_CLASSIFICATION	2.93287696645758E-6	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.999999081041785	WITHOUT_CLASSIFICATION	9.189582150144589E-7	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999122926553301	WITHOUT_CLASSIFICATION	8.770734466998562E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999978633143641	WITHOUT_CLASSIFICATION	2.1366856359369526E-6	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.999986377868873	WITHOUT_CLASSIFICATION	1.3622131126965263E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999837842072008	WITHOUT_CLASSIFICATION	1.621579279925949E-5	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999999618909543	WITHOUT_CLASSIFICATION	3.8109045605178517E-8	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999999677743944	WITHOUT_CLASSIFICATION	3.222560559844608E-8	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.999999819407143	WITHOUT_CLASSIFICATION	1.8059285702624195E-7	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999995171741373	WITHOUT_CLASSIFICATION	4.828258626810385E-7	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999993122195717	WITHOUT_CLASSIFICATION	6.877804282145575E-7	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999928118319567	WITHOUT_CLASSIFICATION	7.188168043250297E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999950260443919	WITHOUT_CLASSIFICATION	4.973955608062157E-6	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999998010622196	WITHOUT_CLASSIFICATION	1.9893778026316295E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999915360854438	WITHOUT_CLASSIFICATION	8.463914556202588E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999990511050911	WITHOUT_CLASSIFICATION	9.488949088131794E-7	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999992892599037	WITHOUT_CLASSIFICATION	7.10740096395552E-7	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999994773763577	WITHOUT_CLASSIFICATION	5.226236423294494E-7	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999994773763577	WITHOUT_CLASSIFICATION	5.226236423294494E-7	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999969732745897	WITHOUT_CLASSIFICATION	3.026725410208989E-6	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999929940057619	WITHOUT_CLASSIFICATION	7.0059942381199255E-6	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999994163925072	WITHOUT_CLASSIFICATION	5.836074927075821E-7	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9999948954374442	WITHOUT_CLASSIFICATION	5.104562555800776E-6	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999998132032452	WITHOUT_CLASSIFICATION	1.8679675483407476E-7	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999983475587586	WITHOUT_CLASSIFICATION	1.6524412414143844E-6	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999998714632833	WITHOUT_CLASSIFICATION	1.2853671674971057E-7	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9999819254915189	WITHOUT_CLASSIFICATION	1.8074508481204242E-5	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999937779372111	WITHOUT_CLASSIFICATION	6.222062788858178E-6	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9999999938927252	WITHOUT_CLASSIFICATION	6.107274875460976E-9	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999989696029836	WITHOUT_CLASSIFICATION	1.0303970163766678E-6	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999999340107402	WITHOUT_CLASSIFICATION	6.59892597719328E-8	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999999669973288	WITHOUT_CLASSIFICATION	3.30026711165239E-8	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999980494911135	WITHOUT_CLASSIFICATION	1.9505088865424E-6	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999063205567633	WITHOUT_CLASSIFICATION	9.367944323657245E-5	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.999986293386813	WITHOUT_CLASSIFICATION	1.370661318691298E-5	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9996969175238657	WITHOUT_CLASSIFICATION	3.030824761343036E-4	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999983084953892	WITHOUT_CLASSIFICATION	1.691504610785177E-6	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999930063810974	WITHOUT_CLASSIFICATION	6.993618902500124E-6	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999893127176177	WITHOUT_CLASSIFICATION	1.0687282382234887E-5	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999861729639714	WITHOUT_CLASSIFICATION	1.3827036028700097E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999943097005412	WITHOUT_CLASSIFICATION	5.6902994588522235E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999996484643662	WITHOUT_CLASSIFICATION	3.5153563382026244E-7	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999999011505265	WITHOUT_CLASSIFICATION	9.884947349422646E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999993400835361	WITHOUT_CLASSIFICATION	6.599164639097792E-7	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.999996839568205	WITHOUT_CLASSIFICATION	3.1604317950854128E-6	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999943097005412	WITHOUT_CLASSIFICATION	5.6902994588522235E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999923306779047	WITHOUT_CLASSIFICATION	7.669322095393628E-6	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9999228774783139	WITHOUT_CLASSIFICATION	7.712252168620736E-5	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999906440699899	WITHOUT_CLASSIFICATION	9.355930010181294E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999992430729159	WITHOUT_CLASSIFICATION	7.56927084076355E-7	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9999966941548815	WITHOUT_CLASSIFICATION	3.3058451185229634E-6	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999989429995305	WITHOUT_CLASSIFICATION	1.0570004694549813E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999979554138445	WITHOUT_CLASSIFICATION	2.044586155613849E-6	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.999999243355092	WITHOUT_CLASSIFICATION	7.566449078746057E-7	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.999996145095051	WITHOUT_CLASSIFICATION	3.854904949096373E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999995095967413	WITHOUT_CLASSIFICATION	4.904032586312534E-7	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999987801220178	WITHOUT_CLASSIFICATION	1.219877982084897E-6	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999885418464802	WITHOUT_CLASSIFICATION	1.1458153519844047E-5	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999994132606843	WITHOUT_CLASSIFICATION	5.867393157644634E-7	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.999999630959801	WITHOUT_CLASSIFICATION	3.690401989541519E-7	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999968580067513	WITHOUT_CLASSIFICATION	3.1419932486570738E-6	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999995944161783	WITHOUT_CLASSIFICATION	4.0558382181994213E-7	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999888020878999	WITHOUT_CLASSIFICATION	1.1197912100092778E-5	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999997816632548	WITHOUT_CLASSIFICATION	2.1833674524638275E-7	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999993681219022	WITHOUT_CLASSIFICATION	6.318780978334679E-7	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999983212843131	WITHOUT_CLASSIFICATION	1.6787156869808043E-6	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999981920736714	WITHOUT_CLASSIFICATION	1.8079263285498606E-6	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999999426133913	WITHOUT_CLASSIFICATION	5.738660870995256E-8	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999992908814689	WITHOUT_CLASSIFICATION	7.091185310793061E-7	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999990940816359	WITHOUT_CLASSIFICATION	9.059183640126013E-7	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999970124091256	WITHOUT_CLASSIFICATION	2.987590874437269E-6	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.999999294997441	WITHOUT_CLASSIFICATION	7.050025590683889E-7	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999995576508565	WITHOUT_CLASSIFICATION	4.4234914360443715E-7	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999104444637329	WITHOUT_CLASSIFICATION	8.955553626709612E-5	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999969801308954	WITHOUT_CLASSIFICATION	3.0198691046954024E-6	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9999966525515518	WITHOUT_CLASSIFICATION	3.3474484481988256E-6	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999991986294453	WITHOUT_CLASSIFICATION	8.013705546915148E-7	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999991450038764	WITHOUT_CLASSIFICATION	8.549961234583012E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999924925719018	WITHOUT_CLASSIFICATION	7.507428098230776E-6	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9999966941548815	WITHOUT_CLASSIFICATION	3.3058451185229634E-6	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999989429995305	WITHOUT_CLASSIFICATION	1.0570004694549813E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999979554138445	WITHOUT_CLASSIFICATION	2.044586155613849E-6	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.999996145095051	WITHOUT_CLASSIFICATION	3.854904949096373E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999995095967413	WITHOUT_CLASSIFICATION	4.904032586312534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9999337305619865	WITHOUT_CLASSIFICATION	6.626943801339918E-5	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.999999995905229	WITHOUT_CLASSIFICATION	4.094770990036683E-9	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.999999167381633	WITHOUT_CLASSIFICATION	8.326183669574494E-7	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999961144932387	WITHOUT_CLASSIFICATION	3.885506761248135E-6	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9998269509263129	WITHOUT_CLASSIFICATION	1.7304907368702362E-4	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999975916297051	WITHOUT_CLASSIFICATION	2.408370294841006E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999998639091071	WITHOUT_CLASSIFICATION	1.360908928441889E-7	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9999992865226814	WITHOUT_CLASSIFICATION	7.134773185959968E-7	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999989485826318	WITHOUT_CLASSIFICATION	1.051417368074707E-6	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999994859165151	WITHOUT_CLASSIFICATION	5.140834849574599E-7	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999930436160057	WITHOUT_CLASSIFICATION	6.956383994250985E-6	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999952726355895	WITHOUT_CLASSIFICATION	4.7273644104849485E-6	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.999999708425395	WITHOUT_CLASSIFICATION	2.9157460503576796E-7	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999959997432387	WITHOUT_CLASSIFICATION	4.000256761280918E-6	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.999998926056977	WITHOUT_CLASSIFICATION	1.073943022890596E-6	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999969568086565	WITHOUT_CLASSIFICATION	3.0431913435259185E-6	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999998992160066	WITHOUT_CLASSIFICATION	1.007839934398089E-7	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999997181346875	WITHOUT_CLASSIFICATION	2.818653124809302E-7	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999997436002944	WITHOUT_CLASSIFICATION	2.563997055562123E-7	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999970240438445	WITHOUT_CLASSIFICATION	2.9759561555162647E-6	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999977916776441	WITHOUT_CLASSIFICATION	2.20832235582062E-6	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999934178022354	WITHOUT_CLASSIFICATION	6.582197764630225E-6	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999929630915824	WITHOUT_CLASSIFICATION	7.036908417633848E-6	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999999280700556	WITHOUT_CLASSIFICATION	7.192994442877929E-8	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999977071050427	WITHOUT_CLASSIFICATION	2.2928949573792403E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999956489219599	WITHOUT_CLASSIFICATION	4.351078040134156E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999852648842068	WITHOUT_CLASSIFICATION	1.4735115793180947E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999837842072008	WITHOUT_CLASSIFICATION	1.621579279925949E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999995095967413	WITHOUT_CLASSIFICATION	4.904032586312534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999999471909563	WITHOUT_CLASSIFICATION	5.28090437604224E-8	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999980459775384	WITHOUT_CLASSIFICATION	1.9540224616348553E-6	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999726169534	WITHOUT_CLASSIFICATION	2.7383046548491396E-8	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9998867422128411	WITHOUT_CLASSIFICATION	1.1325778715885773E-4	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9998867422128411	WITHOUT_CLASSIFICATION	1.1325778715885773E-4	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999825868686	WITHOUT_CLASSIFICATION	1.741313147787619E-8	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.999966798069778	WITHOUT_CLASSIFICATION	3.3201930222051815E-5	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999985848930585	WITHOUT_CLASSIFICATION	1.4151069414641926E-6	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999944040041749	WITHOUT_CLASSIFICATION	5.595995824989587E-6	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9999918342216585	WITHOUT_CLASSIFICATION	8.165778341577065E-6	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.999662588269836	WITHOUT_CLASSIFICATION	3.37411730163948E-4	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999966837697544	WITHOUT_CLASSIFICATION	3.316230245698815E-6	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999811464675871	WITHOUT_CLASSIFICATION	1.8853532412919457E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999335927493453	WITHOUT_CLASSIFICATION	6.64072506545937E-5	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999977385565625	WITHOUT_CLASSIFICATION	2.2614434374845697E-6	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999962692615229	WITHOUT_CLASSIFICATION	3.730738477223653E-6	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999563875015651	WITHOUT_CLASSIFICATION	4.361249843481685E-5	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9998685004257776	WITHOUT_CLASSIFICATION	1.3149957422237428E-4	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9995836052560713	WITHOUT_CLASSIFICATION	4.1639474392878804E-4	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9999572682736263	WITHOUT_CLASSIFICATION	4.2731726373732574E-5	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.999999591388102	WITHOUT_CLASSIFICATION	4.0861189801118974E-7	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999986823705876	WITHOUT_CLASSIFICATION	1.3176294123841517E-6	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999995486953813	WITHOUT_CLASSIFICATION	4.5130461861628375E-7	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999974158897296	WITHOUT_CLASSIFICATION	2.584110270410585E-6	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999994405929444	WITHOUT_CLASSIFICATION	5.594070556148943E-7	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.999999591388102	WITHOUT_CLASSIFICATION	4.0861189801118974E-7	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999989017917207	WITHOUT_CLASSIFICATION	1.0982082793491194E-6	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999995495171458	WITHOUT_CLASSIFICATION	4.504828541362636E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999995495171458	WITHOUT_CLASSIFICATION	4.504828541362636E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999995486953813	WITHOUT_CLASSIFICATION	4.5130461861628375E-7	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999988321546542	WITHOUT_CLASSIFICATION	1.167845345702208E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999993383471315	WITHOUT_CLASSIFICATION	6.616528685121719E-7	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999993383471315	WITHOUT_CLASSIFICATION	6.616528685121719E-7	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999994780944548	WITHOUT_CLASSIFICATION	5.21905545338894E-7	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999956926559698	WITHOUT_CLASSIFICATION	4.307344030160192E-6	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9993156483734793	WITHOUT_CLASSIFICATION	6.843516265206879E-4	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999991169916365	WITHOUT_CLASSIFICATION	8.830083634168744E-7	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999959747515612	WITHOUT_CLASSIFICATION	4.025248438708775E-6	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999741493497764	WITHOUT_CLASSIFICATION	2.585065022361664E-5	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9999987965396528	WITHOUT_CLASSIFICATION	1.2034603471341004E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999394598732823	WITHOUT_CLASSIFICATION	6.054012671778207E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999425217699331	WITHOUT_CLASSIFICATION	5.7478230066774274E-5	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999947364112389	WITHOUT_CLASSIFICATION	5.2635887611354966E-6	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999941839370949	WITHOUT_CLASSIFICATION	5.816062905081813E-6	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.999999873233558	WITHOUT_CLASSIFICATION	1.267664419583958E-7	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9999814951732633	WITHOUT_CLASSIFICATION	1.8504826736725843E-5	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999737884457174	WITHOUT_CLASSIFICATION	2.6211554282600297E-5	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.999997266225	WITHOUT_CLASSIFICATION	2.733774999992597E-6	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999985210569362	WITHOUT_CLASSIFICATION	1.4789430637547726E-6	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999981840239837	WITHOUT_CLASSIFICATION	1.8159760163733631E-6	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999991489358017	WITHOUT_CLASSIFICATION	8.510641983710527E-7	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999198776662699	WITHOUT_CLASSIFICATION	8.012233373002116E-5	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999835874287164	WITHOUT_CLASSIFICATION	1.6412571283566404E-5	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999983482178275	WITHOUT_CLASSIFICATION	1.651782172419966E-6	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999994046020523	WITHOUT_CLASSIFICATION	5.953979477857274E-7	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999970249141868	WITHOUT_CLASSIFICATION	2.9750858132074974E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999335927493453	WITHOUT_CLASSIFICATION	6.64072506545937E-5	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999999586842656	WITHOUT_CLASSIFICATION	4.131573432887161E-8	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999999372394474	WITHOUT_CLASSIFICATION	6.276055266624527E-8	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999999354870944	WITHOUT_CLASSIFICATION	6.451290557511101E-8	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999987119022723	WITHOUT_CLASSIFICATION	1.2880977276347575E-6	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999992234821611	WITHOUT_CLASSIFICATION	7.765178388811197E-7	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999930593283749	WITHOUT_CLASSIFICATION	6.9406716250536E-6	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999974468767837	WITHOUT_CLASSIFICATION	2.553123216413705E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999987588359616	WITHOUT_CLASSIFICATION	1.2411640384033904E-6	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999996643067198	WITHOUT_CLASSIFICATION	3.356932801770095E-7	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999996812523987	WITHOUT_CLASSIFICATION	3.187476013427474E-7	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9999766417547743	WITHOUT_CLASSIFICATION	2.3358245225718108E-5	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999997002103177	WITHOUT_CLASSIFICATION	2.997896823269422E-7	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9999815654462597	WITHOUT_CLASSIFICATION	1.84345537402969E-5	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999896811808836	WITHOUT_CLASSIFICATION	1.031881911635633E-5	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999949856287871	WITHOUT_CLASSIFICATION	5.014371212962158E-6	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999992950202661	WITHOUT_CLASSIFICATION	7.049797338560056E-7	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999997327268294	WITHOUT_CLASSIFICATION	2.6727317061836867E-7	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999872734214419	WITHOUT_CLASSIFICATION	1.2726578558111557E-5	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9995999194871151	WITHOUT_CLASSIFICATION	4.0008051288482373E-4	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9996581080091868	WITHOUT_CLASSIFICATION	3.418919908132904E-4	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999940603462691	WITHOUT_CLASSIFICATION	5.939653730873635E-6	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999918416841839	WITHOUT_CLASSIFICATION	8.1583158160646E-6	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9999876796425	WITHOUT_CLASSIFICATION	1.2320357499967247E-5	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9999988840809538	WITHOUT_CLASSIFICATION	1.1159190461358309E-6	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999920735444693	WITHOUT_CLASSIFICATION	7.926455530787645E-6	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999967290888728	WITHOUT_CLASSIFICATION	3.2709111271138274E-6	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999979069305206	WITHOUT_CLASSIFICATION	2.093069479300049E-6	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999926573754283	WITHOUT_CLASSIFICATION	7.342624571736147E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999997952210959	WITHOUT_CLASSIFICATION	2.047789040463025E-7	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999893446659424	WITHOUT_CLASSIFICATION	1.0655334057643019E-5	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999987295431735	WITHOUT_CLASSIFICATION	1.2704568264959715E-6	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.999991064239593	WITHOUT_CLASSIFICATION	8.935760406931224E-6	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.999996590018394	WITHOUT_CLASSIFICATION	3.4099816059435007E-6	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9999832651009695	WITHOUT_CLASSIFICATION	1.6734899030491447E-5	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.999992632436859	WITHOUT_CLASSIFICATION	7.367563141016842E-6	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999931898702141	WITHOUT_CLASSIFICATION	6.810129785809379E-6	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999921850108299	WITHOUT_CLASSIFICATION	7.814989170162728E-6	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999921850108299	WITHOUT_CLASSIFICATION	7.814989170162728E-6	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999940660632304	WITHOUT_CLASSIFICATION	5.9339367695779966E-6	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999989782437543	WITHOUT_CLASSIFICATION	1.0217562457447083E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999999553519465	WITHOUT_CLASSIFICATION	4.464805349450404E-8	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9999102067930229	WITHOUT_CLASSIFICATION	8.979320697712133E-5	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999999713401084	WITHOUT_CLASSIFICATION	2.865989158713707E-8	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9999995336937127	WITHOUT_CLASSIFICATION	4.663062872069696E-7	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9998698468735074	WITHOUT_CLASSIFICATION	1.301531264926823E-4	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9997476644602035	WITHOUT_CLASSIFICATION	2.523355397965733E-4	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999524486167776	WITHOUT_CLASSIFICATION	4.755138322246367E-5	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.999999789889492	WITHOUT_CLASSIFICATION	2.101105079748241E-7	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999989682565974	WITHOUT_CLASSIFICATION	1.0317434026006646E-6	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999996786543264	WITHOUT_CLASSIFICATION	3.21345673620344E-7	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999995670778339	WITHOUT_CLASSIFICATION	4.329221661633341E-7	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.999994000705509	WITHOUT_CLASSIFICATION	5.9992944909978146E-6	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.999997963647068	WITHOUT_CLASSIFICATION	2.0363529321220524E-6	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999924976617696	WITHOUT_CLASSIFICATION	7.502338230343872E-6	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999996534409707	WITHOUT_CLASSIFICATION	3.4655902929797944E-7	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999988965026325	WITHOUT_CLASSIFICATION	1.1034973675946152E-6	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999667490267167	WITHOUT_CLASSIFICATION	3.325097328334252E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.999999201050154	WITHOUT_CLASSIFICATION	7.989498459136123E-7	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999378072948448	WITHOUT_CLASSIFICATION	6.219270515518185E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999378072948448	WITHOUT_CLASSIFICATION	6.219270515518185E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999995787591696	WITHOUT_CLASSIFICATION	4.212408305020374E-7	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999999114029534	WITHOUT_CLASSIFICATION	8.859704660719414E-8	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999999816988003	WITHOUT_CLASSIFICATION	1.830119964196222E-8	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999997809802396	WITHOUT_CLASSIFICATION	2.1901976041650978E-7	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9996798584825206	WITHOUT_CLASSIFICATION	3.201415174793967E-4	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999336710293075	WITHOUT_CLASSIFICATION	6.632897069256134E-5	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999977864446655	WITHOUT_CLASSIFICATION	2.213555334536931E-6	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9989102061718008	WITHOUT_CLASSIFICATION	0.0010897938281991888	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9999782281585721	WITHOUT_CLASSIFICATION	2.1771841427948566E-5	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.999723318685305	WITHOUT_CLASSIFICATION	2.7668131469501503E-4	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999979924692358	WITHOUT_CLASSIFICATION	2.007530764207667E-6	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.999697101234815	WITHOUT_CLASSIFICATION	3.028987651849893E-4	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9998739796199495	WITHOUT_CLASSIFICATION	1.2602038005040195E-4	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999996483198572	WITHOUT_CLASSIFICATION	3.5168014279179197E-7	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.99999945249601	WITHOUT_CLASSIFICATION	5.475039901303393E-7	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999993618696845	WITHOUT_CLASSIFICATION	6.381303154005953E-7	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.999966162253082	WITHOUT_CLASSIFICATION	3.383774691801156E-5	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999043534102631	WITHOUT_CLASSIFICATION	9.564658973693657E-5	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999979630000037	WITHOUT_CLASSIFICATION	2.036999996341558E-6	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9998405267208813	WITHOUT_CLASSIFICATION	1.594732791187347E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999926147144285	WITHOUT_CLASSIFICATION	7.385285571539049E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999986956769992	WITHOUT_CLASSIFICATION	1.3043230007922512E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999694960619365	WITHOUT_CLASSIFICATION	3.050393806354348E-5	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999964013436808	WITHOUT_CLASSIFICATION	3.598656319208333E-6	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9999997809054566	WITHOUT_CLASSIFICATION	2.1909454344701142E-7	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999999557882537	WITHOUT_CLASSIFICATION	4.421174617353084E-8	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.999999894701756	WITHOUT_CLASSIFICATION	1.0529824401147352E-7	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999732592784616	WITHOUT_CLASSIFICATION	2.6740721538466207E-5	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.99999412953684	WITHOUT_CLASSIFICATION	5.870463160046625E-6	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999999441813932	WITHOUT_CLASSIFICATION	5.58186066945136E-8	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9999877621245286	WITHOUT_CLASSIFICATION	1.223787547140984E-5	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999715796989469	WITHOUT_CLASSIFICATION	2.842030105305036E-5	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999994818556528	WITHOUT_CLASSIFICATION	5.181443471930382E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999994818556528	WITHOUT_CLASSIFICATION	5.181443471930382E-7	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9998864164677745	WITHOUT_CLASSIFICATION	1.1358353222550569E-4	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999457548936039	WITHOUT_CLASSIFICATION	5.42451063960064E-5	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.999999628667163	WITHOUT_CLASSIFICATION	3.713328369542365E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.99978461063633	WITHOUT_CLASSIFICATION	2.1538936367013426E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999949977563619	WITHOUT_CLASSIFICATION	5.002243638027289E-6	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999995652103437	WITHOUT_CLASSIFICATION	4.34789656257059E-7	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9999697506719777	WITHOUT_CLASSIFICATION	3.0249328022309945E-5	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999965344635063	WITHOUT_CLASSIFICATION	3.4655364936755234E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999995750447054	WITHOUT_CLASSIFICATION	4.24955294577967E-7	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.999998509469078	WITHOUT_CLASSIFICATION	1.4905309221127728E-6	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999977226879355	WITHOUT_CLASSIFICATION	2.2773120645227726E-6	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999898370458606	WITHOUT_CLASSIFICATION	1.01629541393647E-5	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999993779104935	WITHOUT_CLASSIFICATION	6.220895065309795E-7	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999976615477326	WITHOUT_CLASSIFICATION	2.33845226739831E-6	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999982238517496	WITHOUT_CLASSIFICATION	1.7761482503209604E-6	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999968828317362	WITHOUT_CLASSIFICATION	3.11716826385255E-6	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9998831563723306	WITHOUT_CLASSIFICATION	1.1684362766932635E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9992744547888656	WITHOUT_CLASSIFICATION	7.255452111344481E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999053408082	WITHOUT_CLASSIFICATION	9.465919184882554E-8	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999991395781198	WITHOUT_CLASSIFICATION	8.604218801627398E-7	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999335927493453	WITHOUT_CLASSIFICATION	6.64072506545937E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999998776534533	WITHOUT_CLASSIFICATION	1.2234654668858908E-7	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9999792457372287	WITHOUT_CLASSIFICATION	2.0754262771227996E-5	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999957161471986	WITHOUT_CLASSIFICATION	4.283852801304758E-6	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9986460096077329	WITHOUT_CLASSIFICATION	0.001353990392267056	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999861005666011	WITHOUT_CLASSIFICATION	1.3899433399026593E-5	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999997271358937	WITHOUT_CLASSIFICATION	2.7286410633644365E-7	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999992060184226	WITHOUT_CLASSIFICATION	7.93981577340095E-7	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999997342160917	WITHOUT_CLASSIFICATION	2.657839084060664E-7	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999955368387499	WITHOUT_CLASSIFICATION	4.463161250150142E-6	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.999998491601234	WITHOUT_CLASSIFICATION	1.5083987659711871E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999998206127735	WITHOUT_CLASSIFICATION	1.7938722651049558E-7	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.999746326677228	WITHOUT_CLASSIFICATION	2.5367332277202503E-4	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999990183640322	WITHOUT_CLASSIFICATION	9.816359677465591E-7	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9999655855951737	WITHOUT_CLASSIFICATION	3.441440482641667E-5	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999991073807728	WITHOUT_CLASSIFICATION	8.926192270792791E-7	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999997168823881	WITHOUT_CLASSIFICATION	2.831176119739508E-7	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999996318482559	WITHOUT_CLASSIFICATION	3.6815174407668766E-7	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999994289034566	WITHOUT_CLASSIFICATION	5.710965434778602E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999995095967413	WITHOUT_CLASSIFICATION	4.904032586312534E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999913083548332	WITHOUT_CLASSIFICATION	8.691645166912448E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999992678804642	WITHOUT_CLASSIFICATION	7.321195358219713E-7	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9997438394699316	WITHOUT_CLASSIFICATION	2.561605300683888E-4	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999095093578958	WITHOUT_CLASSIFICATION	9.049064210419312E-5	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999912475059283	WITHOUT_CLASSIFICATION	8.752494071746249E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.999999976010958	WITHOUT_CLASSIFICATION	2.3989041895805197E-8	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999982807174693	WITHOUT_CLASSIFICATION	1.7192825306479943E-6	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999975900276118	WITHOUT_CLASSIFICATION	2.4099723882261404E-6	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999993694751178	WITHOUT_CLASSIFICATION	6.305248821956963E-7	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999708367861371	WITHOUT_CLASSIFICATION	2.916321386295077E-5	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999979641231348	WITHOUT_CLASSIFICATION	2.0358768651186385E-6	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.99999966855985	WITHOUT_CLASSIFICATION	3.3144014993978477E-7	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999980700095092	WITHOUT_CLASSIFICATION	1.929990490863914E-6	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.999999752628118	WITHOUT_CLASSIFICATION	2.4737188201276687E-7	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999988055972651	WITHOUT_CLASSIFICATION	1.1944027349811328E-6	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999994772376447	WITHOUT_CLASSIFICATION	5.227623553323174E-7	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999945973151035	WITHOUT_CLASSIFICATION	5.40268489635532E-6	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999999288459801	WITHOUT_CLASSIFICATION	7.11540199130365E-8	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999998257298581	WITHOUT_CLASSIFICATION	1.7427014173961813E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999995797657002	WITHOUT_CLASSIFICATION	4.202342997504597E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999995797657002	WITHOUT_CLASSIFICATION	4.202342997504597E-7	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999929126907356	WITHOUT_CLASSIFICATION	7.087309264298166E-6	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9998571846282668	WITHOUT_CLASSIFICATION	1.428153717332659E-4	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999791565654201	WITHOUT_CLASSIFICATION	2.084343457984043E-5	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9999990988543646	WITHOUT_CLASSIFICATION	9.011456354544487E-7	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999990362716673	WITHOUT_CLASSIFICATION	9.63728332700743E-7	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999826685996386	WITHOUT_CLASSIFICATION	1.733140036136847E-5	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9996332633226428	WITHOUT_CLASSIFICATION	3.667366773572063E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999950046884416	WITHOUT_CLASSIFICATION	4.995311558462005E-6	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999950046884416	WITHOUT_CLASSIFICATION	4.995311558462005E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999992649485134	WITHOUT_CLASSIFICATION	7.350514865348854E-7	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999991692476768	WITHOUT_CLASSIFICATION	8.307523231277623E-7	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999788593911009	WITHOUT_CLASSIFICATION	2.1140608899073385E-5	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999965702682818	WITHOUT_CLASSIFICATION	3.4297317180918616E-6	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999980967407327	WITHOUT_CLASSIFICATION	1.9032592673209643E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999978169462733	WITHOUT_CLASSIFICATION	2.183053726689143E-6	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999944578981207	WITHOUT_CLASSIFICATION	5.542101879261763E-6	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999595158114206	WITHOUT_CLASSIFICATION	4.0484188579331825E-5	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999997377696164	WITHOUT_CLASSIFICATION	2.622303836310351E-7	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.999998521445885	WITHOUT_CLASSIFICATION	1.4785541150152896E-6	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.999997265002295	WITHOUT_CLASSIFICATION	2.7349977049125118E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999983798964595	WITHOUT_CLASSIFICATION	1.6201035405026517E-6	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999995785008843	WITHOUT_CLASSIFICATION	4.2149911576753676E-7	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999845917125629	WITHOUT_CLASSIFICATION	1.540828743706279E-5	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999995929007623	WITHOUT_CLASSIFICATION	4.0709923758881164E-7	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.999995397475547	WITHOUT_CLASSIFICATION	4.60252445305628E-6	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9999416194542874	WITHOUT_CLASSIFICATION	5.8380545712541704E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999979537031435	WITHOUT_CLASSIFICATION	2.0462968564851096E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999589332767129	WITHOUT_CLASSIFICATION	4.106672328707125E-5	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999998169448315	WITHOUT_CLASSIFICATION	1.8305516847621656E-7	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999816610473932	WITHOUT_CLASSIFICATION	1.8338952606827756E-5	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999932939598762	WITHOUT_CLASSIFICATION	6.706040123817496E-6	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.999996988215908	WITHOUT_CLASSIFICATION	3.0117840920713727E-6	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999796347492638	WITHOUT_CLASSIFICATION	2.036525073631944E-5	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999987943489024	WITHOUT_CLASSIFICATION	1.2056510975868423E-6	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999138733747602	WITHOUT_CLASSIFICATION	8.61266252397869E-5	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999981343530095	WITHOUT_CLASSIFICATION	1.8656469903888946E-6	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9998694565924829	WITHOUT_CLASSIFICATION	1.305434075170256E-4	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999998349771949	WITHOUT_CLASSIFICATION	1.6502280507392323E-7	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9999974501155113	WITHOUT_CLASSIFICATION	2.5498844887512653E-6	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.999994380859403	WITHOUT_CLASSIFICATION	5.619140597055809E-6	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999845277851112	WITHOUT_CLASSIFICATION	1.5472214888757295E-5	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9999851093981343	WITHOUT_CLASSIFICATION	1.4890601865762037E-5	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999961051668489	WITHOUT_CLASSIFICATION	3.894833151079506E-6	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999990797286653	WITHOUT_CLASSIFICATION	9.202713346844491E-7	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9999896883902735	WITHOUT_CLASSIFICATION	1.0311609726485745E-5	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999911127187111	WITHOUT_CLASSIFICATION	8.887281288859204E-6	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999981126753483	WITHOUT_CLASSIFICATION	1.8873246517816237E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9999792648963804	WITHOUT_CLASSIFICATION	2.0735103619623946E-5	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9990339128255178	WITHOUT_CLASSIFICATION	9.660871744823036E-4	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999871322712162	WITHOUT_CLASSIFICATION	1.2867728783931204E-5	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9999995811408074	WITHOUT_CLASSIFICATION	4.188591925197871E-7	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999873708833257	WITHOUT_CLASSIFICATION	1.2629116674356446E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999913591055023	WITHOUT_CLASSIFICATION	8.64089449772421E-6	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999994177951023	WITHOUT_CLASSIFICATION	5.822048977019827E-7	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9996013228471856	WITHOUT_CLASSIFICATION	3.986771528143921E-4	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999957480265748	WITHOUT_CLASSIFICATION	4.251973425225166E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999986956769992	WITHOUT_CLASSIFICATION	1.3043230007922512E-6	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999957480265748	WITHOUT_CLASSIFICATION	4.251973425225166E-6	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999880360319638	WITHOUT_CLASSIFICATION	1.1963968036202495E-5	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9999971564939222	WITHOUT_CLASSIFICATION	2.8435060777490396E-6	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999999716790695	WITHOUT_CLASSIFICATION	2.8320930402106823E-8	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.999987138348798	WITHOUT_CLASSIFICATION	1.2861651201997832E-5	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9996013794863319	WITHOUT_CLASSIFICATION	3.9862051366814966E-4	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9997154315775517	WITHOUT_CLASSIFICATION	2.845684224482987E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999887393328837	WITHOUT_CLASSIFICATION	1.1260667116318825E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.999987763642379	WITHOUT_CLASSIFICATION	1.2236357621154015E-5	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999988405354333	WITHOUT_CLASSIFICATION	1.1594645667561307E-6	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999999469215881	WITHOUT_CLASSIFICATION	5.307841189682462E-8	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999996271735346	WITHOUT_CLASSIFICATION	3.7282646529302827E-7	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999916503591988	WITHOUT_CLASSIFICATION	8.349640801194153E-6	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999988281127135	WITHOUT_CLASSIFICATION	1.1718872864935737E-6	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999915384818984	WITHOUT_CLASSIFICATION	8.461518101640125E-6	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999991479250365	WITHOUT_CLASSIFICATION	8.520749633658426E-7	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999982688450478	WITHOUT_CLASSIFICATION	1.7311549521806227E-6	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999885999176913	WITHOUT_CLASSIFICATION	1.1400082308827093E-5	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9999270987091575	WITHOUT_CLASSIFICATION	7.290129084255316E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999756039952189	WITHOUT_CLASSIFICATION	2.4396004781066644E-5	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999468288335766	WITHOUT_CLASSIFICATION	5.317116642339469E-5	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9994533534859815	WITHOUT_CLASSIFICATION	5.466465140184911E-4	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999523582872	WITHOUT_CLASSIFICATION	4.764171285101079E-8	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.999999616170632	WITHOUT_CLASSIFICATION	3.838293679140302E-7	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999900126614	WITHOUT_CLASSIFICATION	9.98733856656441E-9	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999999916017556	WITHOUT_CLASSIFICATION	8.398244414684691E-9	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999907001530834	WITHOUT_CLASSIFICATION	9.29984691658124E-6	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9995858938737774	WITHOUT_CLASSIFICATION	4.1410612622262385E-4	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.999992997770098	WITHOUT_CLASSIFICATION	7.002229902035275E-6	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999979652141552	WITHOUT_CLASSIFICATION	2.0347858448726683E-6	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9998807346954394	WITHOUT_CLASSIFICATION	1.192653045606094E-4	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999863509337076	WITHOUT_CLASSIFICATION	1.3649066292380583E-5	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9999942578556009	WITHOUT_CLASSIFICATION	5.74214439909084E-6	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9999115868736681	WITHOUT_CLASSIFICATION	8.841312633184654E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999961253863835	WITHOUT_CLASSIFICATION	3.874613616505099E-6	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999992108922918	WITHOUT_CLASSIFICATION	7.891077080694996E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999788052858	WITHOUT_CLASSIFICATION	2.1194714304160423E-8	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999996517213398	WITHOUT_CLASSIFICATION	3.4827866015857775E-7	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999996261652335	WITHOUT_CLASSIFICATION	3.73834766562019E-7	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999996261652335	WITHOUT_CLASSIFICATION	3.73834766562019E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.999941153976913	WITHOUT_CLASSIFICATION	5.884602308704665E-5	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999961237259368	WITHOUT_CLASSIFICATION	3.876274063123118E-6	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.99999531977964	WITHOUT_CLASSIFICATION	4.680220360009866E-6	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999658360157	WITHOUT_CLASSIFICATION	3.416398428105427E-8	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999997247550318	WITHOUT_CLASSIFICATION	2.7524496821048646E-7	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999999919561038	WITHOUT_CLASSIFICATION	8.043896221826008E-9	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.999961641159576	WITHOUT_CLASSIFICATION	3.835884042396931E-5	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999857669409	WITHOUT_CLASSIFICATION	1.4233059046398827E-8	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999933353224232	WITHOUT_CLASSIFICATION	6.6646775767632486E-6	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999979380445055	WITHOUT_CLASSIFICATION	2.061955494558E-6	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9999609579851307	WITHOUT_CLASSIFICATION	3.904201486930046E-5	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9998540506679188	WITHOUT_CLASSIFICATION	1.459493320812265E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999936706796313	WITHOUT_CLASSIFICATION	6.3293203686841865E-6	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9998286783563115	WITHOUT_CLASSIFICATION	1.7132164368851918E-4	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999987351502272	WITHOUT_CLASSIFICATION	1.264849772879972E-6	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999729808802501	WITHOUT_CLASSIFICATION	2.7019119749843877E-5	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999973769526058	WITHOUT_CLASSIFICATION	2.6230473942379048E-6	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999645629315351	WITHOUT_CLASSIFICATION	3.543706846487611E-5	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999997072126697	WITHOUT_CLASSIFICATION	2.927873302794668E-7	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999853960577223	WITHOUT_CLASSIFICATION	1.460394227783238E-5	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999979246799603	WITHOUT_CLASSIFICATION	2.0753200396297353E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.999998643152893	WITHOUT_CLASSIFICATION	1.3568471070313296E-6	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9993485320769817	WITHOUT_CLASSIFICATION	6.514679230182472E-4	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.999155381998915	WITHOUT_CLASSIFICATION	8.446180010851659E-4	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9999771163474884	WITHOUT_CLASSIFICATION	2.288365251167412E-5	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999889481319397	WITHOUT_CLASSIFICATION	1.1051868060172559E-5	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9976847120786989	WITHOUT_CLASSIFICATION	0.0023152879213010342	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999039084121821	WITHOUT_CLASSIFICATION	9.609158781788412E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9999811616322203	WITHOUT_CLASSIFICATION	1.883836777962795E-5	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999860785860399	WITHOUT_CLASSIFICATION	1.392141396017806E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999766043898962	WITHOUT_CLASSIFICATION	2.339561010372086E-5	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999961448037391	WITHOUT_CLASSIFICATION	3.855196260839799E-6	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999934754791371	WITHOUT_CLASSIFICATION	6.524520862986387E-6	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999986938271007	WITHOUT_CLASSIFICATION	1.3061728992892051E-6	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9999832464997488	WITHOUT_CLASSIFICATION	1.6753500251222184E-5	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999902982417633	WITHOUT_CLASSIFICATION	9.701758236580379E-6	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999901607655588	WITHOUT_CLASSIFICATION	9.83923444125396E-6	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999901607655588	WITHOUT_CLASSIFICATION	9.83923444125396E-6	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9999560509340921	WITHOUT_CLASSIFICATION	4.3949065907925136E-5	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999756494633154	WITHOUT_CLASSIFICATION	2.4350536684594568E-5	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999938850746721	WITHOUT_CLASSIFICATION	6.114925327814524E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999993736372501	WITHOUT_CLASSIFICATION	6.263627498312975E-7	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999996828745534	WITHOUT_CLASSIFICATION	3.1712544663871026E-7	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999700655599612	WITHOUT_CLASSIFICATION	2.9934440038736513E-5	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999355407894402	WITHOUT_CLASSIFICATION	6.445921055974118E-5	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999996871239497	WITHOUT_CLASSIFICATION	3.1287605022710335E-7	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999942387843769	WITHOUT_CLASSIFICATION	5.761215623172836E-6	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999999713610455	WITHOUT_CLASSIFICATION	2.863895459274117E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999998314646151	WITHOUT_CLASSIFICATION	1.68535384908226E-7	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9999940227609126	WITHOUT_CLASSIFICATION	5.97723908727426E-6	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999972967007636	WITHOUT_CLASSIFICATION	2.7032992364449055E-6	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999994053720228	WITHOUT_CLASSIFICATION	5.946279771836526E-7	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999995334580873	WITHOUT_CLASSIFICATION	4.665419127289281E-7	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999998074311547	WITHOUT_CLASSIFICATION	1.9256884529757768E-7	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999614611614531	WITHOUT_CLASSIFICATION	3.853883854683089E-5	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999898395724479	WITHOUT_CLASSIFICATION	1.0160427552065786E-5	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999858943406691	WITHOUT_CLASSIFICATION	1.4105659330970346E-5	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999914171172859	WITHOUT_CLASSIFICATION	8.58288271399716E-6	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999998288417284	WITHOUT_CLASSIFICATION	1.711582716180391E-7	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.999971387797914	WITHOUT_CLASSIFICATION	2.861220208608295E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999960302218898	WITHOUT_CLASSIFICATION	3.969778110166669E-6	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999924107968297	WITHOUT_CLASSIFICATION	7.589203170342773E-6	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999927101486246	WITHOUT_CLASSIFICATION	7.289851375409067E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999937910478994	WITHOUT_CLASSIFICATION	6.208952100594066E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.999995875682383	WITHOUT_CLASSIFICATION	4.124317616947982E-6	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999616325237133	WITHOUT_CLASSIFICATION	3.8367476286741485E-5	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999905430998629	WITHOUT_CLASSIFICATION	9.456900137044108E-6	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999988154864635	WITHOUT_CLASSIFICATION	1.1845135364938338E-6	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999994857416404	WITHOUT_CLASSIFICATION	5.142583594491436E-7	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999999795569422	WITHOUT_CLASSIFICATION	2.0443057838897184E-8	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.999997803954353	WITHOUT_CLASSIFICATION	2.1960456468963345E-6	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999988533005686	WITHOUT_CLASSIFICATION	1.1466994313222155E-6	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999995260319613	WITHOUT_CLASSIFICATION	4.739680386971607E-7	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999995973490333	WITHOUT_CLASSIFICATION	4.0265096660343345E-7	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999986587640803	WITHOUT_CLASSIFICATION	1.3412359195879331E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999736892400537	WITHOUT_CLASSIFICATION	2.6310759946386253E-5	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999959648736624	WITHOUT_CLASSIFICATION	4.035126337557447E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999999632582174	WITHOUT_CLASSIFICATION	3.674178252919206E-8	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999993787545538	WITHOUT_CLASSIFICATION	6.212454462635625E-7	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999998546935505	WITHOUT_CLASSIFICATION	1.4530644959097746E-7	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999995984917427	WITHOUT_CLASSIFICATION	4.0150825734190525E-7	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9999982108531131	WITHOUT_CLASSIFICATION	1.7891468868362926E-6	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999999393363106	WITHOUT_CLASSIFICATION	6.066368937673693E-8	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.999998386694355	WITHOUT_CLASSIFICATION	1.6133056449584892E-6	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999964435629815	WITHOUT_CLASSIFICATION	3.5564370185077266E-6	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999989993195516	WITHOUT_CLASSIFICATION	1.0006804484048905E-6	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999935297659185	WITHOUT_CLASSIFICATION	6.470234081613706E-6	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.999999798917114	WITHOUT_CLASSIFICATION	2.0108288600659427E-7	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999982055975214	WITHOUT_CLASSIFICATION	1.7944024785253927E-6	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999997005457194	WITHOUT_CLASSIFICATION	2.994542806162052E-7	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999999054185817	WITHOUT_CLASSIFICATION	9.45814181851478E-8	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999974204177176	WITHOUT_CLASSIFICATION	2.579582282422435E-6	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999997385233707	WITHOUT_CLASSIFICATION	2.6147662929853913E-7	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.999999840319039	WITHOUT_CLASSIFICATION	1.5968096110522013E-7	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999998479470975	WITHOUT_CLASSIFICATION	1.5205290238494316E-7	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.999999407327358	WITHOUT_CLASSIFICATION	5.926726418455175E-7	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999969872894613	WITHOUT_CLASSIFICATION	3.0127105387275487E-6	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999990399502666	WITHOUT_CLASSIFICATION	9.600497333866945E-7	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9999821852237848	WITHOUT_CLASSIFICATION	1.7814776215228895E-5	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999997009636142	WITHOUT_CLASSIFICATION	2.990363857942384E-7	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9998986149780246	WITHOUT_CLASSIFICATION	1.0138502197536252E-4	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999886938779449	WITHOUT_CLASSIFICATION	1.1306122055220623E-5	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9994471366039177	WITHOUT_CLASSIFICATION	5.528633960822669E-4	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9999403296987974	WITHOUT_CLASSIFICATION	5.967030120245249E-5	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9929115042097338	WITHOUT_CLASSIFICATION	0.0070884957902661114	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999999509924626	WITHOUT_CLASSIFICATION	4.900753731320036E-8	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999991666291806	WITHOUT_CLASSIFICATION	8.333708194080292E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999852914197261	WITHOUT_CLASSIFICATION	1.4708580273882378E-5	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999919708384418	WITHOUT_CLASSIFICATION	8.029161558176143E-6	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999954490777795	WITHOUT_CLASSIFICATION	4.550922220467005E-6	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999632924453769	WITHOUT_CLASSIFICATION	3.6707554623163855E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.999997381060805	WITHOUT_CLASSIFICATION	2.6189391948202296E-6	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.999997381060805	WITHOUT_CLASSIFICATION	2.6189391948202296E-6	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999871403821432	WITHOUT_CLASSIFICATION	1.285961785678014E-5	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999909461409472	WITHOUT_CLASSIFICATION	9.053859052822846E-6	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999993458787408	WITHOUT_CLASSIFICATION	6.541212590476264E-7	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999741253529704	WITHOUT_CLASSIFICATION	2.5874647029664168E-5	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999852161460846	WITHOUT_CLASSIFICATION	1.4783853915340824E-5	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999953794476815	WITHOUT_CLASSIFICATION	4.620552318586682E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999993621146966	WITHOUT_CLASSIFICATION	6.378853033883483E-7	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999965047564912	WITHOUT_CLASSIFICATION	3.4952435088473534E-6	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9983387695471758	WITHOUT_CLASSIFICATION	0.001661230452824153	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999558254919813	WITHOUT_CLASSIFICATION	4.4174508018741286E-5	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.999985685238527	WITHOUT_CLASSIFICATION	1.4314761472939224E-5	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.999998356182716	WITHOUT_CLASSIFICATION	1.643817283904267E-6	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999973488399165	WITHOUT_CLASSIFICATION	2.651160083487817E-6	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999995712989053	WITHOUT_CLASSIFICATION	4.287010947631174E-7	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9997203905930706	WITHOUT_CLASSIFICATION	2.796094069293473E-4	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999965112037784	WITHOUT_CLASSIFICATION	3.488796221532718E-6	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999996809432643	WITHOUT_CLASSIFICATION	3.190567357118322E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999981120859036	WITHOUT_CLASSIFICATION	1.8879140964715871E-6	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999995753271209	WITHOUT_CLASSIFICATION	4.246728790416272E-7	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9998561263179938	WITHOUT_CLASSIFICATION	1.438736820061814E-4	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9999984057632236	WITHOUT_CLASSIFICATION	1.5942367763440325E-6	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999997756199379	WITHOUT_CLASSIFICATION	2.2438006206007149E-7	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999992817043193	WITHOUT_CLASSIFICATION	7.182956806610386E-7	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999976295290081	WITHOUT_CLASSIFICATION	2.3704709919396335E-6	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999975199347022	WITHOUT_CLASSIFICATION	2.4800652978396667E-6	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999998947527654	WITHOUT_CLASSIFICATION	1.0524723453786418E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999994980702476	WITHOUT_CLASSIFICATION	5.019297524532424E-7	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999997302534933	WITHOUT_CLASSIFICATION	2.697465066615024E-7	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999999846236818	WITHOUT_CLASSIFICATION	1.5376318217971813E-8	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999984593800415	WITHOUT_CLASSIFICATION	1.5406199585573503E-6	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999999724535035	WITHOUT_CLASSIFICATION	2.7546496541969746E-8	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9999940216507338	WITHOUT_CLASSIFICATION	5.978349266182255E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999996352439287	WITHOUT_CLASSIFICATION	3.647560712571751E-7	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999904555990919	WITHOUT_CLASSIFICATION	9.544400908153318E-6	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999979168958136	WITHOUT_CLASSIFICATION	2.0831041863514214E-6	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999969647593547	WITHOUT_CLASSIFICATION	3.035240645301901E-6	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999999507191123	WITHOUT_CLASSIFICATION	4.928088776911065E-8	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.999999944911892	WITHOUT_CLASSIFICATION	5.5088107852471006E-8	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999999686079495	WITHOUT_CLASSIFICATION	3.1392050581190575E-8	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999997354960468	WITHOUT_CLASSIFICATION	2.645039532262715E-7	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999946092694479	WITHOUT_CLASSIFICATION	5.390730552022029E-6	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999997847612935	WITHOUT_CLASSIFICATION	2.152387064975773E-7	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999952816336265	WITHOUT_CLASSIFICATION	4.718366373548161E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999998850991374	WITHOUT_CLASSIFICATION	1.1490086270314546E-7	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999889343469232	WITHOUT_CLASSIFICATION	1.1065653076787336E-5	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999857821052932	WITHOUT_CLASSIFICATION	1.4217894706781747E-5	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999957255638304	WITHOUT_CLASSIFICATION	4.274436169525439E-6	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999972688704671	WITHOUT_CLASSIFICATION	2.7311295327588564E-6	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999925145318241	WITHOUT_CLASSIFICATION	7.485468175769878E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999836596022549	WITHOUT_CLASSIFICATION	1.6340397745070318E-5	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999778290498508	WITHOUT_CLASSIFICATION	2.2170950149128385E-5	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999922863909151	WITHOUT_CLASSIFICATION	7.713609084797832E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.9999858747990553	WITHOUT_CLASSIFICATION	1.4125200944798164E-5	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999643827744475	WITHOUT_CLASSIFICATION	3.561722555243977E-5	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9999951049781386	WITHOUT_CLASSIFICATION	4.895021861427508E-6	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999995069501189	WITHOUT_CLASSIFICATION	4.930498812148669E-7	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999973507846582	WITHOUT_CLASSIFICATION	2.6492153417224823E-6	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999994781752515	WITHOUT_CLASSIFICATION	5.218247485459111E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999989449636192	WITHOUT_CLASSIFICATION	1.055036380815165E-6	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999899617992001	WITHOUT_CLASSIFICATION	1.003820079999039E-5	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.999992018756449	WITHOUT_CLASSIFICATION	7.981243550922574E-6	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999832181741929	WITHOUT_CLASSIFICATION	1.6781825807091753E-5	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999940636509315	WITHOUT_CLASSIFICATION	5.9363490685576415E-6	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999199956797478	WITHOUT_CLASSIFICATION	8.00043202522925E-5	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.99999822796477	WITHOUT_CLASSIFICATION	1.7720352299666826E-6	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999559450339975	WITHOUT_CLASSIFICATION	4.405496600258547E-5	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.999995842570556	WITHOUT_CLASSIFICATION	4.157429443983486E-6	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999785584083477	WITHOUT_CLASSIFICATION	2.1441591652268797E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999985169278762	WITHOUT_CLASSIFICATION	1.4830721238400788E-6	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999997547963919	WITHOUT_CLASSIFICATION	2.452036081380012E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999999226002254	WITHOUT_CLASSIFICATION	7.739977461840347E-8	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9999979526332016	WITHOUT_CLASSIFICATION	2.0473667984826365E-6	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999969267145855	WITHOUT_CLASSIFICATION	3.0732854145626002E-6	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999977499290477	WITHOUT_CLASSIFICATION	2.250070952432783E-6	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999932146658566	WITHOUT_CLASSIFICATION	6.785334143444785E-6	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999963130938256	WITHOUT_CLASSIFICATION	3.686906174333112E-6	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999973855547409	WITHOUT_CLASSIFICATION	2.614445259078486E-6	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999989867264211	WITHOUT_CLASSIFICATION	1.013273578950613E-6	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999993243091877	WITHOUT_CLASSIFICATION	6.756908122888118E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999996685033631	WITHOUT_CLASSIFICATION	3.31496636802507E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9997896741730457	WITHOUT_CLASSIFICATION	2.103258269543846E-4	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999996932630466	WITHOUT_CLASSIFICATION	3.0673695333914333E-7	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999950190931463	WITHOUT_CLASSIFICATION	4.980906853813114E-6	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999998494437184	WITHOUT_CLASSIFICATION	1.505562815509718E-7	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999990531556223	WITHOUT_CLASSIFICATION	9.468443776708515E-7	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999998074485841	WITHOUT_CLASSIFICATION	1.9255141579944284E-7	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999947546632498	WITHOUT_CLASSIFICATION	5.245336750181831E-6	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999996941616353	WITHOUT_CLASSIFICATION	3.058383647034547E-7	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999352706536542	WITHOUT_CLASSIFICATION	6.472934634586824E-5	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999996269045194	WITHOUT_CLASSIFICATION	3.730954805351329E-7	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999984534007463	WITHOUT_CLASSIFICATION	1.546599253703085E-6	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999640494232096	WITHOUT_CLASSIFICATION	3.5950576790433015E-5	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999971220536594	WITHOUT_CLASSIFICATION	2.8779463406594854E-6	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999994094005878	WITHOUT_CLASSIFICATION	5.905994121955662E-7	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999975731645238	WITHOUT_CLASSIFICATION	2.4268354763093167E-6	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999887077090115	WITHOUT_CLASSIFICATION	1.1292290988506958E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.999999985599428	WITHOUT_CLASSIFICATION	1.4400571825409622E-8	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999984098521482	WITHOUT_CLASSIFICATION	1.5901478518638123E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998360854006	WITHOUT_CLASSIFICATION	1.639145994547713E-7	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.999999901920828	WITHOUT_CLASSIFICATION	9.807917209237759E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999980361159311	WITHOUT_CLASSIFICATION	1.9638840688775767E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999997143695133	WITHOUT_CLASSIFICATION	2.8563048676693075E-7	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999990283471429	WITHOUT_CLASSIFICATION	9.716528570656924E-7	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999990805377656	WITHOUT_CLASSIFICATION	9.19462234388988E-7	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.999995899313396	WITHOUT_CLASSIFICATION	4.100686603926228E-6	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999984401174413	WITHOUT_CLASSIFICATION	1.559882558580412E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999960430759814	WITHOUT_CLASSIFICATION	3.956924018522528E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999973902208678	WITHOUT_CLASSIFICATION	2.6097791323576144E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999980361159311	WITHOUT_CLASSIFICATION	1.9638840688775767E-6	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999984445456946	WITHOUT_CLASSIFICATION	1.555454305326225E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999960430759814	WITHOUT_CLASSIFICATION	3.956924018522528E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999973902208678	WITHOUT_CLASSIFICATION	2.6097791323576144E-6	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999943267616332	WITHOUT_CLASSIFICATION	5.67323836681217E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999965853511962	WITHOUT_CLASSIFICATION	3.4146488039000593E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999965853511962	WITHOUT_CLASSIFICATION	3.4146488039000593E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999972821985451	WITHOUT_CLASSIFICATION	2.717801455015689E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999972821985451	WITHOUT_CLASSIFICATION	2.717801455015689E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999972821985451	WITHOUT_CLASSIFICATION	2.717801455015689E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999982765772883	WITHOUT_CLASSIFICATION	1.7234227116755384E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999962143245218	WITHOUT_CLASSIFICATION	3.785675478193977E-6	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999990660890417	WITHOUT_CLASSIFICATION	9.339109582687028E-7	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999956351675697	WITHOUT_CLASSIFICATION	4.3648324302680735E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999997029608425	WITHOUT_CLASSIFICATION	2.970391574112201E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.999999418906	WITHOUT_CLASSIFICATION	5.810939999407671E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999992077041161	WITHOUT_CLASSIFICATION	7.922958838556492E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999994811432377	WITHOUT_CLASSIFICATION	5.188567623744491E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999993845003903	WITHOUT_CLASSIFICATION	6.154996096242807E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999874494092652	WITHOUT_CLASSIFICATION	1.2550590734812268E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999980361159311	WITHOUT_CLASSIFICATION	1.9638840688775767E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999980361159311	WITHOUT_CLASSIFICATION	1.9638840688775767E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999980361159311	WITHOUT_CLASSIFICATION	1.9638840688775767E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999997143695133	WITHOUT_CLASSIFICATION	2.8563048676693075E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999997143695133	WITHOUT_CLASSIFICATION	2.8563048676693075E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999973902208678	WITHOUT_CLASSIFICATION	2.6097791323576144E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999965853511962	WITHOUT_CLASSIFICATION	3.4146488039000593E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999965853511962	WITHOUT_CLASSIFICATION	3.4146488039000593E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999972821985451	WITHOUT_CLASSIFICATION	2.717801455015689E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999962143245218	WITHOUT_CLASSIFICATION	3.785675478193977E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999956351675697	WITHOUT_CLASSIFICATION	4.3648324302680735E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999976077872496	WITHOUT_CLASSIFICATION	2.3922127503794572E-6	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999975708123034	WITHOUT_CLASSIFICATION	2.4291876964443245E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999985442743548	WITHOUT_CLASSIFICATION	1.4557256452676722E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999975941165566	WITHOUT_CLASSIFICATION	2.4058834433984298E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999963351779748	WITHOUT_CLASSIFICATION	3.6648220251377096E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999963351779748	WITHOUT_CLASSIFICATION	3.6648220251377096E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999980783044524	WITHOUT_CLASSIFICATION	1.9216955476173974E-6	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.999996304642239	WITHOUT_CLASSIFICATION	3.6953577610571E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999996297731487	WITHOUT_CLASSIFICATION	3.702268512237486E-7	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999998685041229	WITHOUT_CLASSIFICATION	1.3149587710290108E-6	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999993588900343	WITHOUT_CLASSIFICATION	6.411099658066037E-7	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999969598246452	WITHOUT_CLASSIFICATION	3.0401753547017493E-6	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999935460490608	WITHOUT_CLASSIFICATION	6.453950939217405E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999980361159311	WITHOUT_CLASSIFICATION	1.9638840688775767E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999960430759814	WITHOUT_CLASSIFICATION	3.956924018522528E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999965853511962	WITHOUT_CLASSIFICATION	3.4146488039000593E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999965853511962	WITHOUT_CLASSIFICATION	3.4146488039000593E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999972821985451	WITHOUT_CLASSIFICATION	2.717801455015689E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999972821985451	WITHOUT_CLASSIFICATION	2.717801455015689E-6	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999989921756145	WITHOUT_CLASSIFICATION	1.007824385586366E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999982765772883	WITHOUT_CLASSIFICATION	1.7234227116755384E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999997029608425	WITHOUT_CLASSIFICATION	2.970391574112201E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.999999418906	WITHOUT_CLASSIFICATION	5.810939999407671E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.999999418906	WITHOUT_CLASSIFICATION	5.810939999407671E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999994811432377	WITHOUT_CLASSIFICATION	5.188567623744491E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999993845003903	WITHOUT_CLASSIFICATION	6.154996096242807E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999874494092652	WITHOUT_CLASSIFICATION	1.2550590734812268E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999972325372012	WITHOUT_CLASSIFICATION	2.7674627987736034E-6	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999995157407723	WITHOUT_CLASSIFICATION	4.842592277182989E-7	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999862462265767	WITHOUT_CLASSIFICATION	1.3753773423225575E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999986866767877	WITHOUT_CLASSIFICATION	1.31332321235126E-6	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999991992035098	WITHOUT_CLASSIFICATION	8.007964902474294E-7	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999957951542199	WITHOUT_CLASSIFICATION	4.204845780155375E-6	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999992049587684	WITHOUT_CLASSIFICATION	7.95041231716583E-7	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999991784248367	WITHOUT_CLASSIFICATION	8.215751633428706E-7	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999982536533502	WITHOUT_CLASSIFICATION	1.7463466497708176E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999980361159311	WITHOUT_CLASSIFICATION	1.9638840688775767E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999965853511962	WITHOUT_CLASSIFICATION	3.4146488039000593E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999972821985451	WITHOUT_CLASSIFICATION	2.717801455015689E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999962143245218	WITHOUT_CLASSIFICATION	3.785675478193977E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.999999418906	WITHOUT_CLASSIFICATION	5.810939999407671E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999994811432377	WITHOUT_CLASSIFICATION	5.188567623744491E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999994811432377	WITHOUT_CLASSIFICATION	5.188567623744491E-7	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999976077872496	WITHOUT_CLASSIFICATION	2.3922127503794572E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999980783044524	WITHOUT_CLASSIFICATION	1.9216955476173974E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999980783044524	WITHOUT_CLASSIFICATION	1.9216955476173974E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999996297731487	WITHOUT_CLASSIFICATION	3.702268512237486E-7	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999984912493076	WITHOUT_CLASSIFICATION	1.5087506923212499E-6	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999999656338051	WITHOUT_CLASSIFICATION	3.436619489327442E-7	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999722448742074	WITHOUT_CLASSIFICATION	2.7755125792542264E-5	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999945017030609	WITHOUT_CLASSIFICATION	5.498296939029502E-6	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999994810116176	WITHOUT_CLASSIFICATION	5.18988382421778E-7	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.999999080791888	WITHOUT_CLASSIFICATION	9.192081120500775E-7	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999981997971222	WITHOUT_CLASSIFICATION	1.8002028778717207E-6	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999978349925595	WITHOUT_CLASSIFICATION	2.165007440650596E-6	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999987462510654	WITHOUT_CLASSIFICATION	1.2537489346026887E-6	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999992303264391	WITHOUT_CLASSIFICATION	7.696735609945189E-7	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999992011952344	WITHOUT_CLASSIFICATION	7.988047655870299E-7	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999955892817141	WITHOUT_CLASSIFICATION	4.410718286001236E-6	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999994861175847	WITHOUT_CLASSIFICATION	5.138824152339882E-7	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999893995638623	WITHOUT_CLASSIFICATION	1.060043613771696E-5	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999994867134868	WITHOUT_CLASSIFICATION	5.132865130849294E-7	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.999997960961463	WITHOUT_CLASSIFICATION	2.0390385369803004E-6	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999996348330107	WITHOUT_CLASSIFICATION	3.651669893343826E-7	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999989429995305	WITHOUT_CLASSIFICATION	1.0570004694549813E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999979554138445	WITHOUT_CLASSIFICATION	2.044586155613849E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999997950000705	WITHOUT_CLASSIFICATION	2.0499992953481698E-7	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999996125961002	WITHOUT_CLASSIFICATION	3.874038998401384E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.999999977063991	WITHOUT_CLASSIFICATION	2.2936008993726736E-8	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999608819903	WITHOUT_CLASSIFICATION	3.911800973159627E-8	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999998632867846	WITHOUT_CLASSIFICATION	1.3671321552635747E-7	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9999955598897019	WITHOUT_CLASSIFICATION	4.4401102980969E-6	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.999954923004591	WITHOUT_CLASSIFICATION	4.507699540893854E-5	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999759401187613	WITHOUT_CLASSIFICATION	2.405988123857441E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999812482530198	WITHOUT_CLASSIFICATION	1.8751746980257523E-5	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999912478580313	WITHOUT_CLASSIFICATION	8.752141968695614E-6	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999994549203177	WITHOUT_CLASSIFICATION	5.450796822592504E-7	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999999771448731	WITHOUT_CLASSIFICATION	2.285512689446256E-8	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.99999991802622	WITHOUT_CLASSIFICATION	8.197377998716636E-8	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999999513219319	WITHOUT_CLASSIFICATION	4.8678068107328454E-8	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999999923533216	WITHOUT_CLASSIFICATION	7.646678417345106E-9	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999996694608492	WITHOUT_CLASSIFICATION	3.30539150813005E-7	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999999661972826	WITHOUT_CLASSIFICATION	3.380271748371052E-8	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999999942950261	WITHOUT_CLASSIFICATION	5.7049739400061374E-9	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999999866696176	WITHOUT_CLASSIFICATION	1.3330382406530125E-8	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999997509053609	WITHOUT_CLASSIFICATION	2.490946392343035E-7	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999999269508429	WITHOUT_CLASSIFICATION	7.304915710458752E-8	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999996361794247	WITHOUT_CLASSIFICATION	3.6382057530224635E-7	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999998167128547	WITHOUT_CLASSIFICATION	1.8328714540174073E-7	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999999782122752	WITHOUT_CLASSIFICATION	2.178772493578982E-8	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999997691465237	WITHOUT_CLASSIFICATION	2.3085347624859405E-7	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999997067896486	WITHOUT_CLASSIFICATION	2.932103514426161E-7	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999996067557436	WITHOUT_CLASSIFICATION	3.9324425637223104E-7	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9994527985294127	WITHOUT_CLASSIFICATION	5.472014705872837E-4	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999926725863303	WITHOUT_CLASSIFICATION	7.327413669679152E-6	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.99998629321248	WITHOUT_CLASSIFICATION	1.3706787520136282E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999998984070748	WITHOUT_CLASSIFICATION	1.0159292519989964E-6	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999983573883824	WITHOUT_CLASSIFICATION	1.6426116176054598E-6	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999996890006969	WITHOUT_CLASSIFICATION	3.1099930316727813E-7	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999967157413244	WITHOUT_CLASSIFICATION	3.2842586756479685E-6	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999977748679371	WITHOUT_CLASSIFICATION	2.225132062924018E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999695118837236	WITHOUT_CLASSIFICATION	3.04881162763791E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999695118837236	WITHOUT_CLASSIFICATION	3.04881162763791E-5	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999992086097987	WITHOUT_CLASSIFICATION	7.913902013285506E-7	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999830974140882	WITHOUT_CLASSIFICATION	1.690258591176381E-5	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999914737829954	WITHOUT_CLASSIFICATION	8.526217004694038E-6	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999973153419478	WITHOUT_CLASSIFICATION	2.6846580521886298E-6	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9753968619761576	WITHOUT_CLASSIFICATION	0.024603138023842407	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999813911735597	WITHOUT_CLASSIFICATION	1.8608826440360698E-5	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9999788015161049	WITHOUT_CLASSIFICATION	2.1198483895168018E-5	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9999927677262059	WITHOUT_CLASSIFICATION	7.2322737940409E-6	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999885520789726	WITHOUT_CLASSIFICATION	1.1447921027329935E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999885520789726	WITHOUT_CLASSIFICATION	1.1447921027329935E-5	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999970708100517	WITHOUT_CLASSIFICATION	2.9291899482184754E-6	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999823376028038	WITHOUT_CLASSIFICATION	1.7662397196312175E-5	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999961083442487	WITHOUT_CLASSIFICATION	3.891655751319922E-6	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.99999852352307	WITHOUT_CLASSIFICATION	1.4764769300540474E-6	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999918834965473	WITHOUT_CLASSIFICATION	8.11650345255552E-6	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.999997418661246	WITHOUT_CLASSIFICATION	2.5813387540457105E-6	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999976148420662	WITHOUT_CLASSIFICATION	2.385157933814974E-6	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999970749464089	WITHOUT_CLASSIFICATION	2.925053591108356E-6	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999972135970249	WITHOUT_CLASSIFICATION	2.786402975169486E-6	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9999802523429003	WITHOUT_CLASSIFICATION	1.9747657099701466E-5	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999934859396518	WITHOUT_CLASSIFICATION	6.514060348299142E-6	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9999359801209596	WITHOUT_CLASSIFICATION	6.401987904037776E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999892961130205	WITHOUT_CLASSIFICATION	1.070388697967676E-5	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.99978461063633	WITHOUT_CLASSIFICATION	2.1538936367013426E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999961253863835	WITHOUT_CLASSIFICATION	3.874613616505099E-6	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999996067557436	WITHOUT_CLASSIFICATION	3.9324425637223104E-7	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999695118837236	WITHOUT_CLASSIFICATION	3.04881162763791E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999695118837236	WITHOUT_CLASSIFICATION	3.04881162763791E-5	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999830974140882	WITHOUT_CLASSIFICATION	1.690258591176381E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999983330324694	WITHOUT_CLASSIFICATION	1.6669675305633583E-6	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999931149591152	WITHOUT_CLASSIFICATION	6.885040884694323E-6	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999998871178487	WITHOUT_CLASSIFICATION	1.1288215128252915E-7	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999977641029448	WITHOUT_CLASSIFICATION	2.235897055162181E-6	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999889072207544	WITHOUT_CLASSIFICATION	1.10927792455329E-5	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999940633149643	WITHOUT_CLASSIFICATION	5.9366850357549404E-6	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999955593930125	WITHOUT_CLASSIFICATION	4.440606987556E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999929020904657	WITHOUT_CLASSIFICATION	7.09790953439391E-6	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.999860874740275	WITHOUT_CLASSIFICATION	1.3912525972492641E-4	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999998854956305	WITHOUT_CLASSIFICATION	1.1450436947686574E-7	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999967937087905	WITHOUT_CLASSIFICATION	3.2062912094895426E-6	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999998784469231	WITHOUT_CLASSIFICATION	1.2155307700756235E-7	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999985320241301	WITHOUT_CLASSIFICATION	1.4679758699253668E-6	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999883485410894	WITHOUT_CLASSIFICATION	1.1651458910603248E-5	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999984929286402	WITHOUT_CLASSIFICATION	1.5070713597527843E-6	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999177405874182	WITHOUT_CLASSIFICATION	8.225941258182112E-5	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999995824941575	WITHOUT_CLASSIFICATION	4.175058424031569E-7	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999996895972538	WITHOUT_CLASSIFICATION	3.1040274611440883E-7	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999999917909312	WITHOUT_CLASSIFICATION	8.209068834920673E-9	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999980104863873	WITHOUT_CLASSIFICATION	1.9895136127936834E-6	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9998071807447202	WITHOUT_CLASSIFICATION	1.9281925527977833E-4	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999989451225296	WITHOUT_CLASSIFICATION	1.054877470429919E-6	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999993982487152	WITHOUT_CLASSIFICATION	6.017512847461948E-7	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999949154017742	WITHOUT_CLASSIFICATION	5.084598225839501E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999999575613804	WITHOUT_CLASSIFICATION	4.2438619569602514E-8	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999992923708592	WITHOUT_CLASSIFICATION	7.076291407979755E-7	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999996912610962	WITHOUT_CLASSIFICATION	3.087389037100638E-7	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999305646550974	WITHOUT_CLASSIFICATION	6.943534490251883E-5	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999805624771836	WITHOUT_CLASSIFICATION	1.9437522816438E-5	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999395805144543	WITHOUT_CLASSIFICATION	6.041948554568369E-5	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999892531995836	WITHOUT_CLASSIFICATION	1.0746800416363596E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999272677439645	WITHOUT_CLASSIFICATION	7.273225603560731E-5	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.999994658072767	WITHOUT_CLASSIFICATION	5.3419272329852985E-6	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999946880932286	WITHOUT_CLASSIFICATION	5.311906771397337E-6	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999997522381278	WITHOUT_CLASSIFICATION	2.477618721835667E-7	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999994406862568	WITHOUT_CLASSIFICATION	5.593137431248635E-7	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999984577945101	WITHOUT_CLASSIFICATION	1.5422054899361355E-6	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999998596887218	WITHOUT_CLASSIFICATION	1.4031127818260502E-7	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999805230491629	WITHOUT_CLASSIFICATION	1.9476950837162394E-5	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999997368133107	WITHOUT_CLASSIFICATION	2.631866893796226E-7	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999999631521486	WITHOUT_CLASSIFICATION	3.684785138291188E-8	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999955612145666	WITHOUT_CLASSIFICATION	4.438785433494228E-6	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999971812007709	WITHOUT_CLASSIFICATION	2.8187992290156545E-6	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9999996727270102	WITHOUT_CLASSIFICATION	3.272729897978362E-7	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999982810434688	WITHOUT_CLASSIFICATION	1.7189565312593021E-6	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.999981097043689	WITHOUT_CLASSIFICATION	1.8902956310981985E-5	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999973194418826	WITHOUT_CLASSIFICATION	2.6805581173559527E-6	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999982097144143	WITHOUT_CLASSIFICATION	1.790285585633073E-6	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999997079743459	WITHOUT_CLASSIFICATION	2.920256540929169E-7	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999998281923382	WITHOUT_CLASSIFICATION	1.7180766174453554E-7	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999987015147145	WITHOUT_CLASSIFICATION	1.2984852854657339E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999991514883954	WITHOUT_CLASSIFICATION	8.485116045805435E-7	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999988407358393	WITHOUT_CLASSIFICATION	1.1592641606813195E-6	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999996523818804	WITHOUT_CLASSIFICATION	3.476181195141387E-7	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999980928394363	WITHOUT_CLASSIFICATION	1.9071605637058526E-6	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9999995267064511	WITHOUT_CLASSIFICATION	4.732935489017959E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999996450464544	WITHOUT_CLASSIFICATION	3.549535455456628E-7	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9999983668267529	WITHOUT_CLASSIFICATION	1.6331732471379037E-6	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999995009415807	WITHOUT_CLASSIFICATION	4.99058419333741E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999975875548925	WITHOUT_CLASSIFICATION	2.4124451074133676E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999975875548925	WITHOUT_CLASSIFICATION	2.4124451074133676E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999956692654425	WITHOUT_CLASSIFICATION	4.330734557478866E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999956692654425	WITHOUT_CLASSIFICATION	4.330734557478866E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999992111212105	WITHOUT_CLASSIFICATION	7.888787895213332E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999992111212105	WITHOUT_CLASSIFICATION	7.888787895213332E-7	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999918410572312	WITHOUT_CLASSIFICATION	8.158942768906827E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999835414750992	WITHOUT_CLASSIFICATION	1.645852490077789E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999835414750992	WITHOUT_CLASSIFICATION	1.645852490077789E-5	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999938446571972	WITHOUT_CLASSIFICATION	6.155342802763687E-6	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999977247086324	WITHOUT_CLASSIFICATION	2.2752913677046503E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999470278326187	WITHOUT_CLASSIFICATION	5.297216738143445E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999470278326187	WITHOUT_CLASSIFICATION	5.297216738143445E-5	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999944458497104	WITHOUT_CLASSIFICATION	5.554150289588968E-6	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999904139370327	WITHOUT_CLASSIFICATION	9.586062967275836E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999835414750992	WITHOUT_CLASSIFICATION	1.645852490077789E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999470278326187	WITHOUT_CLASSIFICATION	5.297216738143445E-5	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999971041520338	WITHOUT_CLASSIFICATION	2.895847966332933E-6	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.999984228010258	WITHOUT_CLASSIFICATION	1.5771989741977583E-5	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9998954465945533	WITHOUT_CLASSIFICATION	1.0455340544662728E-4	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999998109397541	WITHOUT_CLASSIFICATION	1.890602459148896E-7	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999949069845793	WITHOUT_CLASSIFICATION	5.0930154207070275E-6	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999998922553146	WITHOUT_CLASSIFICATION	1.0774468533115903E-7	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999992250933095	WITHOUT_CLASSIFICATION	7.749066905879049E-7	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999984744981771	WITHOUT_CLASSIFICATION	1.5255018228037164E-6	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999984504274723	WITHOUT_CLASSIFICATION	1.5495725277627525E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999937148483871	WITHOUT_CLASSIFICATION	6.28515161292864E-6	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999937044136239	WITHOUT_CLASSIFICATION	6.295586376167101E-6	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999986359221426	WITHOUT_CLASSIFICATION	1.3640778573924677E-6	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999992541381518	WITHOUT_CLASSIFICATION	7.458618481655921E-7	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999989422559363	WITHOUT_CLASSIFICATION	1.0577440637214272E-6	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999989849047858	WITHOUT_CLASSIFICATION	1.0150952142187541E-6	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999968803578644	WITHOUT_CLASSIFICATION	3.119642135649087E-6	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.999999222691565	WITHOUT_CLASSIFICATION	7.773084349392818E-7	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9993764351461103	WITHOUT_CLASSIFICATION	6.235648538897126E-4	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999998009522368	WITHOUT_CLASSIFICATION	1.990477630725945E-7	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999989300732844	WITHOUT_CLASSIFICATION	1.0699267155810002E-6	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999993230502514	WITHOUT_CLASSIFICATION	6.769497485905447E-7	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999971179469587	WITHOUT_CLASSIFICATION	2.8820530413495283E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999976101392779	WITHOUT_CLASSIFICATION	2.389860722076192E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999982147753668	WITHOUT_CLASSIFICATION	1.7852246333153196E-6	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999994862401312	WITHOUT_CLASSIFICATION	5.137598687829511E-7	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.999999083944341	WITHOUT_CLASSIFICATION	9.160556589325E-7	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999988952784499	WITHOUT_CLASSIFICATION	1.1047215500771054E-6	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999969444793141	WITHOUT_CLASSIFICATION	3.05552068577642E-6	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999931160247598	WITHOUT_CLASSIFICATION	6.8839752402612364E-6	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999920223959624	WITHOUT_CLASSIFICATION	7.977604037656063E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9998954465945533	WITHOUT_CLASSIFICATION	1.0455340544662728E-4	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999997781379745	WITHOUT_CLASSIFICATION	2.2186202554100623E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999989849047858	WITHOUT_CLASSIFICATION	1.0150952142187541E-6	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999999835196572	WITHOUT_CLASSIFICATION	1.648034284718559E-8	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999982147753668	WITHOUT_CLASSIFICATION	1.7852246333153196E-6	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999997474300334	WITHOUT_CLASSIFICATION	2.52569966618116E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999999052482944	WITHOUT_CLASSIFICATION	9.475170562130799E-8	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999955844331473	WITHOUT_CLASSIFICATION	4.415566852716195E-6	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999695987744028	WITHOUT_CLASSIFICATION	3.040122559718788E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999695987744028	WITHOUT_CLASSIFICATION	3.040122559718788E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999460903588961	WITHOUT_CLASSIFICATION	5.390964110381732E-5	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999999498539552	WITHOUT_CLASSIFICATION	5.0146044853886885E-8	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999999272676507	WITHOUT_CLASSIFICATION	7.273234926259806E-8	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999995893655934	WITHOUT_CLASSIFICATION	4.1063440652771054E-7	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999997345214803	WITHOUT_CLASSIFICATION	2.6547851963827405E-7	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999994373060686	WITHOUT_CLASSIFICATION	5.626939314126261E-7	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999959847734077	WITHOUT_CLASSIFICATION	4.015226592240349E-6	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999998149874271	WITHOUT_CLASSIFICATION	1.8501257301972708E-7	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999982237399868	WITHOUT_CLASSIFICATION	1.7762600132192961E-6	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.999991276228522	WITHOUT_CLASSIFICATION	8.72377147800838E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999976633315988	WITHOUT_CLASSIFICATION	2.3366684012837307E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999624418051279	WITHOUT_CLASSIFICATION	3.755819487203033E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999933702538337	WITHOUT_CLASSIFICATION	6.62974616630754E-6	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.999999521447154	WITHOUT_CLASSIFICATION	4.785528460331296E-7	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999982300930579	WITHOUT_CLASSIFICATION	1.7699069421877616E-6	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9999952044469469	WITHOUT_CLASSIFICATION	4.795553053094493E-6	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.999997618636799	WITHOUT_CLASSIFICATION	2.381363201017049E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999791087869694	WITHOUT_CLASSIFICATION	2.0891213030627796E-5	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999999596149481	WITHOUT_CLASSIFICATION	4.0385051799075246E-8	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999959877214716	WITHOUT_CLASSIFICATION	4.012278528473512E-6	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999997292881166	WITHOUT_CLASSIFICATION	2.707118833256158E-7	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999999516367025	WITHOUT_CLASSIFICATION	4.8363297587266835E-8	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9999991485100714	WITHOUT_CLASSIFICATION	8.514899286091725E-7	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999998971210824	WITHOUT_CLASSIFICATION	1.0287891758943393E-7	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999999757305988	WITHOUT_CLASSIFICATION	2.4269401165255982E-8	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999995459849436	WITHOUT_CLASSIFICATION	4.540150564029643E-7	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999995568488239	WITHOUT_CLASSIFICATION	4.43151175975875E-7	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999997922752837	WITHOUT_CLASSIFICATION	2.0772471642004583E-7	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999998848991476	WITHOUT_CLASSIFICATION	1.1510085240693916E-7	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999945665190986	WITHOUT_CLASSIFICATION	5.433480901347081E-6	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.999999754327254	WITHOUT_CLASSIFICATION	2.4567274612336607E-7	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999993064509844	WITHOUT_CLASSIFICATION	6.935490155669492E-7	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999973960801912	WITHOUT_CLASSIFICATION	2.6039198087923896E-6	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.999978848599748	WITHOUT_CLASSIFICATION	2.1151400252027053E-5	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9999956938834109	WITHOUT_CLASSIFICATION	4.306116589118117E-6	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999997522817489	WITHOUT_CLASSIFICATION	2.4771825124134706E-7	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999976999035501	WITHOUT_CLASSIFICATION	2.3000964497432963E-6	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999996791088679	WITHOUT_CLASSIFICATION	3.2089113212699823E-7	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.999999894789559	WITHOUT_CLASSIFICATION	1.0521044100859835E-7	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999828215127174	WITHOUT_CLASSIFICATION	1.7178487282598197E-5	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.999999185938672	WITHOUT_CLASSIFICATION	8.140613279244224E-7	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999988296651013	WITHOUT_CLASSIFICATION	1.1703348986796095E-6	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999695827008	WITHOUT_CLASSIFICATION	3.0417299257165595E-8	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999981265802869	WITHOUT_CLASSIFICATION	1.8734197131316945E-6	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999994975678529	WITHOUT_CLASSIFICATION	5.024321470953116E-7	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999999696891495	WITHOUT_CLASSIFICATION	3.031085049303517E-8	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999827523158863	WITHOUT_CLASSIFICATION	1.7247684113684836E-5	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999908225860505	WITHOUT_CLASSIFICATION	9.1774139495343E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999992111212105	WITHOUT_CLASSIFICATION	7.888787895213332E-7	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999709973657407	WITHOUT_CLASSIFICATION	2.9002634259269625E-5	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999996258261274	WITHOUT_CLASSIFICATION	3.741738724694742E-7	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999997270667507	WITHOUT_CLASSIFICATION	2.7293324927960465E-7	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999767971100225	WITHOUT_CLASSIFICATION	2.320288997744977E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999991872921303	WITHOUT_CLASSIFICATION	8.127078697663753E-7	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999978513073288	WITHOUT_CLASSIFICATION	2.1486926713241714E-6	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999997994042512	WITHOUT_CLASSIFICATION	2.0059574866623513E-7	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999999052377078	WITHOUT_CLASSIFICATION	9.476229229527431E-8	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999987023425677	WITHOUT_CLASSIFICATION	1.2976574323319321E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999960005404258	WITHOUT_CLASSIFICATION	3.999459574249716E-6	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999990582770004	WITHOUT_CLASSIFICATION	9.417229996798636E-7	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999992997075713	WITHOUT_CLASSIFICATION	7.002924287164587E-7	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999803796850902	WITHOUT_CLASSIFICATION	1.9620314909793143E-5	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.999966452522249	WITHOUT_CLASSIFICATION	3.354747775099606E-5	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999969035606333	WITHOUT_CLASSIFICATION	3.096439366730231E-6	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999979299069596	WITHOUT_CLASSIFICATION	2.070093040474104E-6	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999996430336178	WITHOUT_CLASSIFICATION	3.569663822145815E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999996047429728	WITHOUT_CLASSIFICATION	3.9525702727373333E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999994986991575	WITHOUT_CLASSIFICATION	5.013008425183392E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999996334555948	WITHOUT_CLASSIFICATION	3.665444052073821E-7	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999943319465062	WITHOUT_CLASSIFICATION	5.668053493869524E-6	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999927595986491	WITHOUT_CLASSIFICATION	7.240401350995831E-6	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999993448040511	WITHOUT_CLASSIFICATION	6.551959488789118E-7	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999987267516539	WITHOUT_CLASSIFICATION	1.2732483460864338E-6	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999995561958136	WITHOUT_CLASSIFICATION	4.4380418639110437E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999971545567548	WITHOUT_CLASSIFICATION	2.8454432451911266E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999999489144303	WITHOUT_CLASSIFICATION	5.108556971730935E-8	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.999996911243963	WITHOUT_CLASSIFICATION	3.088756037169523E-6	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999994366754709	WITHOUT_CLASSIFICATION	5.633245291857889E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9999928762305006	WITHOUT_CLASSIFICATION	7.123769499442219E-6	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999949154017742	WITHOUT_CLASSIFICATION	5.084598225839501E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999992111212105	WITHOUT_CLASSIFICATION	7.888787895213332E-7	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999918410572312	WITHOUT_CLASSIFICATION	8.158942768906827E-6	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999791087869694	WITHOUT_CLASSIFICATION	2.0891213030627796E-5	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999100919924	WITHOUT_CLASSIFICATION	8.990800763717426E-8	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999709973657407	WITHOUT_CLASSIFICATION	2.9002634259269625E-5	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999999305964153	WITHOUT_CLASSIFICATION	6.94035845915104E-8	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999993792512634	WITHOUT_CLASSIFICATION	6.207487366474312E-7	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999904151733875	WITHOUT_CLASSIFICATION	9.584826612454745E-6	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999790930976844	WITHOUT_CLASSIFICATION	2.0906902315594878E-5	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999963130377115	WITHOUT_CLASSIFICATION	3.6869622883438577E-6	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.999998782997294	WITHOUT_CLASSIFICATION	1.2170027061423132E-6	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999933047475609	WITHOUT_CLASSIFICATION	6.695252439134927E-6	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999986187223971	WITHOUT_CLASSIFICATION	1.3812776028868235E-6	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999998586262027	WITHOUT_CLASSIFICATION	1.4137379727208155E-7	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999917893773619	WITHOUT_CLASSIFICATION	8.210622638135055E-6	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999870828120102	WITHOUT_CLASSIFICATION	1.2917187989791602E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999941163100261	WITHOUT_CLASSIFICATION	5.883689973917028E-6	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9995402650910705	WITHOUT_CLASSIFICATION	4.5973490892946175E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999989470905464	WITHOUT_CLASSIFICATION	1.0529094536506528E-6	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999385824037186	WITHOUT_CLASSIFICATION	6.14175962814369E-5	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.99999885582877	WITHOUT_CLASSIFICATION	1.1441712300122392E-6	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.999984558353534	WITHOUT_CLASSIFICATION	1.5441646466065002E-5	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999833167108162	WITHOUT_CLASSIFICATION	1.6683289183763293E-5	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999975438099286	WITHOUT_CLASSIFICATION	2.4561900714451886E-6	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999754604592247	WITHOUT_CLASSIFICATION	2.4539540775348942E-5	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999893901702979	WITHOUT_CLASSIFICATION	1.0609829702107198E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9999939850180509	WITHOUT_CLASSIFICATION	6.014981949105199E-6	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999993356653843	WITHOUT_CLASSIFICATION	6.643346156784213E-7	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999916951935397	WITHOUT_CLASSIFICATION	8.30480646034384E-6	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999997483738667	WITHOUT_CLASSIFICATION	2.5162613322909646E-7	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999980486398637	WITHOUT_CLASSIFICATION	1.951360136315586E-6	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999961376230674	WITHOUT_CLASSIFICATION	3.862376932588277E-6	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999955350875604	WITHOUT_CLASSIFICATION	4.464912439547969E-6	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999914422031461	WITHOUT_CLASSIFICATION	8.557796853978096E-6	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999961576968331	WITHOUT_CLASSIFICATION	3.842303166906333E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999993736372501	WITHOUT_CLASSIFICATION	6.263627498312975E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999992111212105	WITHOUT_CLASSIFICATION	7.888787895213332E-7	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999960005404258	WITHOUT_CLASSIFICATION	3.999459574249716E-6	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999990582770004	WITHOUT_CLASSIFICATION	9.417229996798636E-7	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999979299069596	WITHOUT_CLASSIFICATION	2.070093040474104E-6	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999996430336178	WITHOUT_CLASSIFICATION	3.569663822145815E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999996047429728	WITHOUT_CLASSIFICATION	3.9525702727373333E-7	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999994986991575	WITHOUT_CLASSIFICATION	5.013008425183392E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999996334555948	WITHOUT_CLASSIFICATION	3.665444052073821E-7	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999999309921758	WITHOUT_CLASSIFICATION	6.900782423280432E-8	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999993448040511	WITHOUT_CLASSIFICATION	6.551959488789118E-7	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999993057514537	WITHOUT_CLASSIFICATION	6.942485462755368E-7	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9987131214193289	WITHOUT_CLASSIFICATION	0.0012868785806711355	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999852158614869	WITHOUT_CLASSIFICATION	1.4784138513057833E-5	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999999044845795	WITHOUT_CLASSIFICATION	9.551542050605015E-8	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999769940913	WITHOUT_CLASSIFICATION	2.300590870063057E-8	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999995878855189	WITHOUT_CLASSIFICATION	4.1211448103813184E-7	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999995280748573	WITHOUT_CLASSIFICATION	4.719251428430198E-7	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9999914579023669	WITHOUT_CLASSIFICATION	8.5420976331762E-6	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999944099452325	WITHOUT_CLASSIFICATION	5.590054767634127E-6	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999811629674954	WITHOUT_CLASSIFICATION	1.883703250452137E-5	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9999941571176818	WITHOUT_CLASSIFICATION	5.8428823181926805E-6	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999994394588296	WITHOUT_CLASSIFICATION	5.605411702718763E-7	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999964122626375	WITHOUT_CLASSIFICATION	3.587737362521706E-6	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999984590543229	WITHOUT_CLASSIFICATION	1.5409456770866717E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999983807459035	WITHOUT_CLASSIFICATION	1.6192540964233634E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999983807459035	WITHOUT_CLASSIFICATION	1.6192540964233634E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.999993949778117	WITHOUT_CLASSIFICATION	6.050221883083868E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999980863872306	WITHOUT_CLASSIFICATION	1.913612769443145E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999980863872306	WITHOUT_CLASSIFICATION	1.913612769443145E-6	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999728986183152	WITHOUT_CLASSIFICATION	2.7101381684741678E-5	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999888700015197	WITHOUT_CLASSIFICATION	1.1129998480269061E-5	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999995208011484	WITHOUT_CLASSIFICATION	4.791988516420835E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999993736372501	WITHOUT_CLASSIFICATION	6.263627498312975E-7	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999567466742024	WITHOUT_CLASSIFICATION	4.325332579757981E-5	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999736892400537	WITHOUT_CLASSIFICATION	2.6310759946386253E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999995571861972	WITHOUT_CLASSIFICATION	4.4281380283526634E-7	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999999041817401	WITHOUT_CLASSIFICATION	9.58182598373958E-8	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9995345010598545	WITHOUT_CLASSIFICATION	4.654989401454453E-4	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999687611896856	WITHOUT_CLASSIFICATION	3.12388103144674E-5	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999930278422878	WITHOUT_CLASSIFICATION	6.972157712185184E-6	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.999983308333704	WITHOUT_CLASSIFICATION	1.6691666295978996E-5	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999607377128752	WITHOUT_CLASSIFICATION	3.926228712479911E-5	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999991387104087	WITHOUT_CLASSIFICATION	8.612895912289157E-7	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9997273250760023	WITHOUT_CLASSIFICATION	2.7267492399772413E-4	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999979887726669	WITHOUT_CLASSIFICATION	2.011227333204768E-6	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9993468948527292	WITHOUT_CLASSIFICATION	6.531051472707713E-4	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999921986102167	WITHOUT_CLASSIFICATION	7.801389783330772E-6	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999953969850487	WITHOUT_CLASSIFICATION	4.603014951322589E-6	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999997875094867	WITHOUT_CLASSIFICATION	2.1249051319889302E-7	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999954057930766	WITHOUT_CLASSIFICATION	4.594206923461897E-6	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9999059746010034	WITHOUT_CLASSIFICATION	9.402539899651109E-5	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9999900148671504	WITHOUT_CLASSIFICATION	9.985132849620172E-6	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999992835887284	WITHOUT_CLASSIFICATION	7.164112716982507E-7	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999974229783419	WITHOUT_CLASSIFICATION	2.5770216580516686E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999982024284028	WITHOUT_CLASSIFICATION	1.797571597278739E-6	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999986124577078	WITHOUT_CLASSIFICATION	1.3875422922064604E-6	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999998747128609	WITHOUT_CLASSIFICATION	1.2528713906749739E-7	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999981647176432	WITHOUT_CLASSIFICATION	1.8352823567868186E-6	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.999999314825402	WITHOUT_CLASSIFICATION	6.851745979691032E-7	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.999998320306966	WITHOUT_CLASSIFICATION	1.6796930339376602E-6	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9999166158824716	WITHOUT_CLASSIFICATION	8.338411752843798E-5	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.999997567687472	WITHOUT_CLASSIFICATION	2.432312527979461E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999998315072088	WITHOUT_CLASSIFICATION	1.684927911261602E-7	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999999682903409	WITHOUT_CLASSIFICATION	3.1709659120468326E-8	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999996583906602	WITHOUT_CLASSIFICATION	3.4160933983984157E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999993372311221	WITHOUT_CLASSIFICATION	6.627688777976855E-7	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.999999672480993	WITHOUT_CLASSIFICATION	3.275190070860796E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999478693217	WITHOUT_CLASSIFICATION	5.21306783838957E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999920965811239	WITHOUT_CLASSIFICATION	7.90341887606462E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999795739631139	WITHOUT_CLASSIFICATION	2.0426036886101294E-5	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999993372311221	WITHOUT_CLASSIFICATION	6.627688777976855E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999975082130589	WITHOUT_CLASSIFICATION	2.491786941098232E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999981471750847	WITHOUT_CLASSIFICATION	1.8528249152918957E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999981471750847	WITHOUT_CLASSIFICATION	1.8528249152918957E-6	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999981471750847	WITHOUT_CLASSIFICATION	1.8528249152918957E-6	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999230239847	WITHOUT_CLASSIFICATION	7.697601536289577E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999230239847	WITHOUT_CLASSIFICATION	7.697601536289577E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999230239847	WITHOUT_CLASSIFICATION	7.697601536289577E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.999999228296886	WITHOUT_CLASSIFICATION	7.717031139297095E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.999999228296886	WITHOUT_CLASSIFICATION	7.717031139297095E-7	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999986777542306	WITHOUT_CLASSIFICATION	1.3222457694234592E-6	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999835077053043	WITHOUT_CLASSIFICATION	1.6492294695656188E-5	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999998638529737	WITHOUT_CLASSIFICATION	1.3614702625217044E-7	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.999991778423886	WITHOUT_CLASSIFICATION	8.22157611413072E-6	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999998029658482	WITHOUT_CLASSIFICATION	1.970341517102708E-7	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999978397350245	WITHOUT_CLASSIFICATION	2.1602649753660715E-6	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999905948077803	WITHOUT_CLASSIFICATION	9.405192219615583E-6	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999998535318324	WITHOUT_CLASSIFICATION	1.464681675351378E-7	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.999988100827898	WITHOUT_CLASSIFICATION	1.189917210200604E-5	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.999995786485602	WITHOUT_CLASSIFICATION	4.213514398014909E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9999785641996795	WITHOUT_CLASSIFICATION	2.1435800320531164E-5	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999997454643994	WITHOUT_CLASSIFICATION	2.5453560052329804E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997948055589	WITHOUT_CLASSIFICATION	2.0519444111800573E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9998890049679334	WITHOUT_CLASSIFICATION	1.1099503206660789E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999812482530198	WITHOUT_CLASSIFICATION	1.8751746980257523E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9990716904621952	WITHOUT_CLASSIFICATION	9.283095378046626E-4	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999996329183681	WITHOUT_CLASSIFICATION	3.6708163194045884E-7	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9999992703923722	WITHOUT_CLASSIFICATION	7.29607627680749E-7	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9999997059401039	WITHOUT_CLASSIFICATION	2.940598961288857E-7	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999991813885168	WITHOUT_CLASSIFICATION	8.186114831289631E-7	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9999987376649293	WITHOUT_CLASSIFICATION	1.2623350707493204E-6	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999995396775772	WITHOUT_CLASSIFICATION	4.6032242286864656E-7	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9999507670610193	WITHOUT_CLASSIFICATION	4.923293898076633E-5	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.99998615125057	WITHOUT_CLASSIFICATION	1.3848749430116813E-5	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999997259148836	WITHOUT_CLASSIFICATION	2.740851163138532E-7	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999992171697735	WITHOUT_CLASSIFICATION	7.828302266465678E-7	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999830404901838	WITHOUT_CLASSIFICATION	1.6959509816180155E-5	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999826663124459	WITHOUT_CLASSIFICATION	1.733368755407297E-5	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999991503284863	WITHOUT_CLASSIFICATION	8.49671513756654E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999729711767732	WITHOUT_CLASSIFICATION	2.7028823226779777E-5	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9999936116877157	WITHOUT_CLASSIFICATION	6.388312284290431E-6	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.999999870749711	WITHOUT_CLASSIFICATION	1.2925028898192181E-7	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999303131461665	WITHOUT_CLASSIFICATION	6.968685383346019E-5	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999948274747401	WITHOUT_CLASSIFICATION	5.172525259900933E-6	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999955339122512	WITHOUT_CLASSIFICATION	4.4660877489013594E-6	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.974261571859843	WITHOUT_CLASSIFICATION	0.025738428140157008	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999729711767732	WITHOUT_CLASSIFICATION	2.7028823226779777E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999888961380827	WITHOUT_CLASSIFICATION	1.1103861917251207E-5	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999931341130703	WITHOUT_CLASSIFICATION	6.865886929772086E-6	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999970933695002	WITHOUT_CLASSIFICATION	2.9066304999162004E-6	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999995803588756	WITHOUT_CLASSIFICATION	4.1964112436679864E-7	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999987119064517	WITHOUT_CLASSIFICATION	1.2880935482658069E-6	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999992520417986	WITHOUT_CLASSIFICATION	7.479582012525564E-7	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999987433905823	WITHOUT_CLASSIFICATION	1.2566094177221804E-6	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9999767214759365	WITHOUT_CLASSIFICATION	2.3278524063524235E-5	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999789405325556	WITHOUT_CLASSIFICATION	2.1059467444342656E-5	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999994463682702	WITHOUT_CLASSIFICATION	5.536317297089345E-7	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9988483877465129	WITHOUT_CLASSIFICATION	0.0011516122534871145	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999864365009994	WITHOUT_CLASSIFICATION	1.3563499000724564E-5	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.999999261367058	WITHOUT_CLASSIFICATION	7.386329419900398E-7	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999888961380827	WITHOUT_CLASSIFICATION	1.1103861917251207E-5	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999973286353648	WITHOUT_CLASSIFICATION	2.6713646351604883E-6	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999936652551924	WITHOUT_CLASSIFICATION	6.334744807627377E-6	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999916774384102	WITHOUT_CLASSIFICATION	8.322561589768452E-6	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9999612456060908	WITHOUT_CLASSIFICATION	3.8754393909210536E-5	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.99997653545167	WITHOUT_CLASSIFICATION	2.346454832992232E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.999999448838381	WITHOUT_CLASSIFICATION	5.511616190666787E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999892961130205	WITHOUT_CLASSIFICATION	1.070388697967676E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999930865986685	WITHOUT_CLASSIFICATION	6.913401331562094E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999053408082	WITHOUT_CLASSIFICATION	9.465919184882554E-8	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999991395781198	WITHOUT_CLASSIFICATION	8.604218801627398E-7	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999984388149866	WITHOUT_CLASSIFICATION	1.5611850133414779E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999994980702476	WITHOUT_CLASSIFICATION	5.019297524532424E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999996996538585	WITHOUT_CLASSIFICATION	3.003461414955351E-7	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999970934282308	WITHOUT_CLASSIFICATION	2.906571769201033E-6	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999965377897635	WITHOUT_CLASSIFICATION	3.462210236437569E-6	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999995309419475	WITHOUT_CLASSIFICATION	4.6905805254524323E-7	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999970413992794	WITHOUT_CLASSIFICATION	2.9586007207303427E-6	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999995110219887	WITHOUT_CLASSIFICATION	4.889780113267866E-7	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.999033319581781	WITHOUT_CLASSIFICATION	9.666804182191156E-4	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999994517063451	WITHOUT_CLASSIFICATION	5.482936548431564E-7	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999985865159956	WITHOUT_CLASSIFICATION	1.413484004469689E-6	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999991571926549	WITHOUT_CLASSIFICATION	8.428073451827524E-7	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.999997773069588	WITHOUT_CLASSIFICATION	2.226930411938967E-6	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999984149261528	WITHOUT_CLASSIFICATION	1.5850738471465335E-6	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9999525107160124	WITHOUT_CLASSIFICATION	4.748928398759322E-5	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999997232115361	WITHOUT_CLASSIFICATION	2.7678846392078566E-7	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9999797762621132	WITHOUT_CLASSIFICATION	2.0223737886808986E-5	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999961995275064	WITHOUT_CLASSIFICATION	3.800472493483386E-6	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999887749142887	WITHOUT_CLASSIFICATION	1.1225085711264289E-5	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999998307647503	WITHOUT_CLASSIFICATION	1.6923524963403094E-7	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999982524163488	WITHOUT_CLASSIFICATION	1.7475836512453874E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999990257079863	WITHOUT_CLASSIFICATION	9.742920136809745E-7	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999999511961217	WITHOUT_CLASSIFICATION	4.8803878223694505E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.999998762799496	WITHOUT_CLASSIFICATION	1.2372005039999078E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.999998643152893	WITHOUT_CLASSIFICATION	1.3568471070313296E-6	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999972879571083	WITHOUT_CLASSIFICATION	2.7120428917310706E-6	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999982524163488	WITHOUT_CLASSIFICATION	1.7475836512453874E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999998990975535	WITHOUT_CLASSIFICATION	1.0090244650194487E-7	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999865961727212	WITHOUT_CLASSIFICATION	1.3403827278740026E-5	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999933009174459	WITHOUT_CLASSIFICATION	6.69908255411391E-6	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.999997339581903	WITHOUT_CLASSIFICATION	2.6604180969652563E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999945935439716	WITHOUT_CLASSIFICATION	5.4064560285101535E-6	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999977980521141	WITHOUT_CLASSIFICATION	2.201947885985307E-6	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999933354966329	WITHOUT_CLASSIFICATION	6.664503367110522E-6	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.999967083332338	WITHOUT_CLASSIFICATION	3.291666766210884E-5	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999964153251375	WITHOUT_CLASSIFICATION	3.584674862445366E-6	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9999991625072904	WITHOUT_CLASSIFICATION	8.374927096914036E-7	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999986084413041	WITHOUT_CLASSIFICATION	1.3915586959669348E-6	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999937054131032	WITHOUT_CLASSIFICATION	6.294586896887747E-6	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999989146732383	WITHOUT_CLASSIFICATION	1.0853267616675594E-6	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999999923526555	WITHOUT_CLASSIFICATION	7.647344511315031E-9	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999779914299909	WITHOUT_CLASSIFICATION	2.2008570009141382E-5	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999996406941108	WITHOUT_CLASSIFICATION	3.5930588923009017E-7	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999983973962827	WITHOUT_CLASSIFICATION	1.6026037173980747E-6	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9999996174860838	WITHOUT_CLASSIFICATION	3.825139162222712E-7	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9997249797107112	WITHOUT_CLASSIFICATION	2.750202892887988E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999982109553236	WITHOUT_CLASSIFICATION	1.7890446764693403E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997948055589	WITHOUT_CLASSIFICATION	2.0519444111800573E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997948055589	WITHOUT_CLASSIFICATION	2.0519444111800573E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999964466498387	WITHOUT_CLASSIFICATION	3.5533501613729428E-6	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9998890049679334	WITHOUT_CLASSIFICATION	1.1099503206660789E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999982104999671	WITHOUT_CLASSIFICATION	1.7895000329707621E-6	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999999641043474	WITHOUT_CLASSIFICATION	3.589565259280735E-8	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999902101147509	WITHOUT_CLASSIFICATION	9.789885249041718E-6	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999983120274984	WITHOUT_CLASSIFICATION	1.6879725015658498E-6	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.9961558152734764	WITHOUT_CLASSIFICATION	0.0038441847265235723	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999992817890521	WITHOUT_CLASSIFICATION	7.182109479810044E-7	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999997037273587	WITHOUT_CLASSIFICATION	2.962726413150046E-7	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999690019617706	WITHOUT_CLASSIFICATION	3.0998038229303285E-5	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9999979861512459	WITHOUT_CLASSIFICATION	2.013848754018609E-6	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9999999260367558	WITHOUT_CLASSIFICATION	7.396324420338759E-8	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999998264969158	WITHOUT_CLASSIFICATION	1.7350308432729364E-7	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999995454424467	WITHOUT_CLASSIFICATION	4.5455755332856374E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999393900146758	WITHOUT_CLASSIFICATION	6.06099853243217E-5	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999992540495951	WITHOUT_CLASSIFICATION	7.459504048624392E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999603451810232	WITHOUT_CLASSIFICATION	3.965481897691393E-5	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999999025243373	WITHOUT_CLASSIFICATION	9.747566264826836E-8	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999996636676338	WITHOUT_CLASSIFICATION	3.3633236616911966E-7	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999981557635352	WITHOUT_CLASSIFICATION	1.8442364646932666E-6	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999903813912684	WITHOUT_CLASSIFICATION	9.618608731710436E-6	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9999979448654128	WITHOUT_CLASSIFICATION	2.0551345871424665E-6	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999878641868202	WITHOUT_CLASSIFICATION	1.2135813179863725E-5	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9999160699261995	WITHOUT_CLASSIFICATION	8.393007380044468E-5	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999998578789666	WITHOUT_CLASSIFICATION	1.4212103341643787E-7	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999291990195259	WITHOUT_CLASSIFICATION	7.080098047412166E-5	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999987699636196	WITHOUT_CLASSIFICATION	1.230036380404196E-6	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999982685511095	WITHOUT_CLASSIFICATION	1.7314488904502662E-6	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999807305279581	WITHOUT_CLASSIFICATION	1.9269472041879775E-5	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9994651550369449	WITHOUT_CLASSIFICATION	5.348449630550413E-4	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9984180623324774	WITHOUT_CLASSIFICATION	0.0015819376675225616	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999968655255136	WITHOUT_CLASSIFICATION	3.134474486321424E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999805884722337	WITHOUT_CLASSIFICATION	1.941152776628297E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999979244074619	WITHOUT_CLASSIFICATION	2.0755925380693342E-6	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999958528745281	WITHOUT_CLASSIFICATION	4.147125471883788E-6	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999999858725953	WITHOUT_CLASSIFICATION	1.4127404684987155E-8	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999962564309386	WITHOUT_CLASSIFICATION	3.743569061377278E-6	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999990563439426	WITHOUT_CLASSIFICATION	9.436560573443771E-7	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999965271753805	WITHOUT_CLASSIFICATION	3.472824619562316E-6	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999732104894898	WITHOUT_CLASSIFICATION	2.678951051014987E-5	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.985996570820124	WITHOUT_CLASSIFICATION	0.014003429179875864	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999928534172259	WITHOUT_CLASSIFICATION	7.1465827740277385E-6	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999984617680863	WITHOUT_CLASSIFICATION	1.5382319136608991E-6	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9999143049486372	WITHOUT_CLASSIFICATION	8.569505136276453E-5	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9999733371403788	WITHOUT_CLASSIFICATION	2.6662859621216376E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999932594045404	WITHOUT_CLASSIFICATION	6.7405954596376405E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999893350867131	WITHOUT_CLASSIFICATION	1.0664913286852438E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.999995916809655	WITHOUT_CLASSIFICATION	4.083190344981758E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999970367553301	WITHOUT_CLASSIFICATION	2.9632446699035516E-6	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999713655982142	WITHOUT_CLASSIFICATION	2.8634401785793523E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999982109553236	WITHOUT_CLASSIFICATION	1.7890446764693403E-6	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999905948077803	WITHOUT_CLASSIFICATION	9.405192219615583E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9999835696475753	WITHOUT_CLASSIFICATION	1.64303524247496E-5	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999882194683183	WITHOUT_CLASSIFICATION	1.1780531681736702E-5	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.999999941481333	WITHOUT_CLASSIFICATION	5.851866701879421E-8	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9999086486590837	WITHOUT_CLASSIFICATION	9.1351340916308E-5	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.999999663218532	WITHOUT_CLASSIFICATION	3.367814680331441E-7	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999980286017746	WITHOUT_CLASSIFICATION	1.971398225452183E-6	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999996114109616	WITHOUT_CLASSIFICATION	3.8858903835037303E-7	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9999872712436185	WITHOUT_CLASSIFICATION	1.2728756381437461E-5	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999979787314075	WITHOUT_CLASSIFICATION	2.021268592567242E-6	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999948142414101	WITHOUT_CLASSIFICATION	5.185758589878259E-6	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9999882351370287	WITHOUT_CLASSIFICATION	1.1764862971252422E-5	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999997064224005	WITHOUT_CLASSIFICATION	2.935775994174348E-7	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999999668694022	WITHOUT_CLASSIFICATION	3.313059786921289E-8	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999959541056349	WITHOUT_CLASSIFICATION	4.0458943650646586E-6	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999993183100421	WITHOUT_CLASSIFICATION	6.816899578850653E-7	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999995562145197	WITHOUT_CLASSIFICATION	4.437854802904029E-7	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999998124899575	WITHOUT_CLASSIFICATION	1.8751004243733543E-7	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999995895172631	WITHOUT_CLASSIFICATION	4.104827369206292E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.999994456698142	WITHOUT_CLASSIFICATION	5.543301858003684E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999977735101354	WITHOUT_CLASSIFICATION	2.2264898645221508E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999977735101354	WITHOUT_CLASSIFICATION	2.2264898645221508E-6	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999999867880748	WITHOUT_CLASSIFICATION	1.3211925103179729E-8	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999945028098387	WITHOUT_CLASSIFICATION	5.497190161291564E-6	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999969486307385	WITHOUT_CLASSIFICATION	3.0513692615040273E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999963360150538	WITHOUT_CLASSIFICATION	3.663984946141762E-6	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.999999918339888	WITHOUT_CLASSIFICATION	8.166011202965106E-8	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999978858298205	WITHOUT_CLASSIFICATION	2.114170179541208E-6	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999999297900524	WITHOUT_CLASSIFICATION	7.020994754669849E-8	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999800419990549	WITHOUT_CLASSIFICATION	1.9958000945159845E-5	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9999251462021531	WITHOUT_CLASSIFICATION	7.48537978468666E-5	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9996129187243268	WITHOUT_CLASSIFICATION	3.870812756731243E-4	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999968890319116	WITHOUT_CLASSIFICATION	3.110968088360785E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999999731078082	WITHOUT_CLASSIFICATION	2.6892191726407023E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999999424718587	WITHOUT_CLASSIFICATION	5.752814134643655E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999983635790892	WITHOUT_CLASSIFICATION	1.6364209107661396E-6	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999680002006709	WITHOUT_CLASSIFICATION	3.199979932915723E-5	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9999942014211738	WITHOUT_CLASSIFICATION	5.798578826290305E-6	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.999998250912925	WITHOUT_CLASSIFICATION	1.7490870749802831E-6	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999991004057038	WITHOUT_CLASSIFICATION	8.995942960857181E-7	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999999557709143	WITHOUT_CLASSIFICATION	4.422908562005682E-8	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9999965966163927	WITHOUT_CLASSIFICATION	3.403383607198777E-6	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9998650189868472	WITHOUT_CLASSIFICATION	1.3498101315274392E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999977889492717	WITHOUT_CLASSIFICATION	2.2110507282866553E-6	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999075078323029	WITHOUT_CLASSIFICATION	9.249216769710277E-5	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999824298570158	WITHOUT_CLASSIFICATION	1.757014298425692E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999680002006709	WITHOUT_CLASSIFICATION	3.199979932915723E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9999680002006709	WITHOUT_CLASSIFICATION	3.199979932915723E-5	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999791822801046	WITHOUT_CLASSIFICATION	2.0817719895372895E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999723147076588	WITHOUT_CLASSIFICATION	2.7685292341195624E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9999783668320409	WITHOUT_CLASSIFICATION	2.163316795907598E-5	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999978927427744	WITHOUT_CLASSIFICATION	2.107257225584984E-6	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999220097794714	WITHOUT_CLASSIFICATION	7.799022052845871E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999852914197261	WITHOUT_CLASSIFICATION	1.4708580273882378E-5	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999919708384418	WITHOUT_CLASSIFICATION	8.029161558176143E-6	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999908862275794	WITHOUT_CLASSIFICATION	9.113772420510348E-6	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999995691741164	WITHOUT_CLASSIFICATION	4.308258836659532E-7	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9997126131191004	WITHOUT_CLASSIFICATION	2.873868808995478E-4	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999529384806694	WITHOUT_CLASSIFICATION	4.706151933073414E-5	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999432523711212	WITHOUT_CLASSIFICATION	5.6747628878711656E-5	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999897198376326	WITHOUT_CLASSIFICATION	1.0280162367364921E-5	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999976664229746	WITHOUT_CLASSIFICATION	2.33357702535583E-6	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999958694675607	WITHOUT_CLASSIFICATION	4.130532439333962E-6	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999400426578607	WITHOUT_CLASSIFICATION	5.995734213931383E-5	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9999353021957428	WITHOUT_CLASSIFICATION	6.469780425731864E-5	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9999976447448675	WITHOUT_CLASSIFICATION	2.355255132469494E-6	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9994601592531475	WITHOUT_CLASSIFICATION	5.398407468525034E-4	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999987566934659	WITHOUT_CLASSIFICATION	1.2433065339804967E-6	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999991902604208	WITHOUT_CLASSIFICATION	8.097395790695089E-7	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999994429926391	WITHOUT_CLASSIFICATION	5.570073609443803E-7	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.999990020743308	WITHOUT_CLASSIFICATION	9.979256692057408E-6	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999488594156265	WITHOUT_CLASSIFICATION	5.1140584373501854E-5	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999998544458828	WITHOUT_CLASSIFICATION	1.455541171312772E-7	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999981838472092	WITHOUT_CLASSIFICATION	1.8161527907848056E-6	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.999997206079909	WITHOUT_CLASSIFICATION	2.793920090892642E-6	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999831436258796	WITHOUT_CLASSIFICATION	1.6856374120397984E-5	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999975892149606	WITHOUT_CLASSIFICATION	2.4107850393485743E-6	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999996547301009	WITHOUT_CLASSIFICATION	3.4526989907417084E-7	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999937686613042	WITHOUT_CLASSIFICATION	6.231338695862638E-6	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999410949080836	WITHOUT_CLASSIFICATION	5.890509191650791E-5	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999930987191595	WITHOUT_CLASSIFICATION	6.901280840548285E-6	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999958697621675	WITHOUT_CLASSIFICATION	4.130237832483286E-6	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999996950121001	WITHOUT_CLASSIFICATION	3.0498789995550217E-7	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999953651467512	WITHOUT_CLASSIFICATION	4.634853248694666E-6	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9999801640336273	WITHOUT_CLASSIFICATION	1.9835966372745605E-5	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999946455495723	WITHOUT_CLASSIFICATION	5.354450427717018E-6	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999996074870652	WITHOUT_CLASSIFICATION	3.9251293483010506E-7	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999991537121352	WITHOUT_CLASSIFICATION	8.462878647777755E-7	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999999729494008	WITHOUT_CLASSIFICATION	2.7050599245458825E-8	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999980277434565	WITHOUT_CLASSIFICATION	1.9722565434580464E-6	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9999856814788668	WITHOUT_CLASSIFICATION	1.4318521133279346E-5	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999935230228671	WITHOUT_CLASSIFICATION	6.476977132868183E-6	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999998404330686	WITHOUT_CLASSIFICATION	1.5956693142911007E-7	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999999131245716	WITHOUT_CLASSIFICATION	8.687542844817934E-8	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999998255281455	WITHOUT_CLASSIFICATION	1.744718545533653E-7	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999999549178707	WITHOUT_CLASSIFICATION	4.508212929611154E-8	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999998921512145	WITHOUT_CLASSIFICATION	1.0784878547580187E-7	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999960097084956	WITHOUT_CLASSIFICATION	3.990291504502226E-6	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999826502441924	WITHOUT_CLASSIFICATION	1.734975580753799E-5	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9998811963343481	WITHOUT_CLASSIFICATION	1.188036656517659E-4	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999980088474142	WITHOUT_CLASSIFICATION	1.9911525858141223E-6	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999988208437549	WITHOUT_CLASSIFICATION	1.1791562450444776E-6	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999850750845053	WITHOUT_CLASSIFICATION	1.4924915494634928E-5	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999975053544486	WITHOUT_CLASSIFICATION	2.494645551398804E-6	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999807966240783	WITHOUT_CLASSIFICATION	1.920337592167037E-5	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999868772914007	WITHOUT_CLASSIFICATION	1.3122708599307334E-5	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999992275300374	WITHOUT_CLASSIFICATION	7.724699625393209E-7	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9999466936181214	WITHOUT_CLASSIFICATION	5.330638187873717E-5	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9998823608174287	WITHOUT_CLASSIFICATION	1.1763918257146946E-4	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999858179268387	WITHOUT_CLASSIFICATION	1.418207316134407E-5	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999999441140742	WITHOUT_CLASSIFICATION	5.588592583459211E-8	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999999419712086	WITHOUT_CLASSIFICATION	5.802879153770198E-8	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.999735925930904	WITHOUT_CLASSIFICATION	2.6407406909597584E-4	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999917525343892	WITHOUT_CLASSIFICATION	8.24746561072442E-6	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999994878723877	WITHOUT_CLASSIFICATION	5.12127612210716E-7	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999997804098252	WITHOUT_CLASSIFICATION	2.1959017483469657E-7	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9999969457150977	WITHOUT_CLASSIFICATION	3.054284902370643E-6	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999996599051529	WITHOUT_CLASSIFICATION	3.4009484716990494E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999996074870652	WITHOUT_CLASSIFICATION	3.9251293483010506E-7	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999993237783349	WITHOUT_CLASSIFICATION	6.76221665171416E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999996450464544	WITHOUT_CLASSIFICATION	3.549535455456628E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999996450464544	WITHOUT_CLASSIFICATION	3.549535455456628E-7	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999992408331051	WITHOUT_CLASSIFICATION	7.59166894890353E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.99999890491259	WITHOUT_CLASSIFICATION	1.0950874099757263E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.99999890491259	WITHOUT_CLASSIFICATION	1.0950874099757263E-6	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999880730671676	WITHOUT_CLASSIFICATION	1.1926932832251298E-5	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999991641434514	WITHOUT_CLASSIFICATION	8.358565486017909E-7	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999981535737572	WITHOUT_CLASSIFICATION	1.8464262427955106E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999997019390369	WITHOUT_CLASSIFICATION	2.9806096318392813E-7	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9999992751578709	WITHOUT_CLASSIFICATION	7.24842129206623E-7	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999988460743862	WITHOUT_CLASSIFICATION	1.1539256138912734E-6	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999997931257205	WITHOUT_CLASSIFICATION	2.0687427939782298E-7	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999990491969395	WITHOUT_CLASSIFICATION	9.508030604851012E-7	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999995438285807	WITHOUT_CLASSIFICATION	4.5617141931956245E-7	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9999440607314051	WITHOUT_CLASSIFICATION	5.5939268594893215E-5	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999999326985434	WITHOUT_CLASSIFICATION	6.730145658975332E-8	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999997348577	WITHOUT_CLASSIFICATION	2.6514230006802954E-7	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9999857596335001	WITHOUT_CLASSIFICATION	1.4240366499742156E-5	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9999523094790869	WITHOUT_CLASSIFICATION	4.769052091305206E-5	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9999449139409256	WITHOUT_CLASSIFICATION	5.508605907445483E-5	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999983662488693	WITHOUT_CLASSIFICATION	1.63375113075168E-6	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999829931895208	WITHOUT_CLASSIFICATION	1.7006810479222373E-5	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999991171715384	WITHOUT_CLASSIFICATION	8.828284615455963E-7	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999986956769992	WITHOUT_CLASSIFICATION	1.3043230007922512E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.99999890491259	WITHOUT_CLASSIFICATION	1.0950874099757263E-6	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999880730671676	WITHOUT_CLASSIFICATION	1.1926932832251298E-5	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999983662488693	WITHOUT_CLASSIFICATION	1.63375113075168E-6	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.999999876847084	WITHOUT_CLASSIFICATION	1.2315291592162743E-7	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.99999932248134	WITHOUT_CLASSIFICATION	6.775186600289107E-7	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999998785487051	WITHOUT_CLASSIFICATION	1.2145129492485677E-7	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9999853652766532	WITHOUT_CLASSIFICATION	1.4634723346801127E-5	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999971156629163	WITHOUT_CLASSIFICATION	2.8843370837052007E-6	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.999999757065854	WITHOUT_CLASSIFICATION	2.429341459728679E-7	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999992924374699	WITHOUT_CLASSIFICATION	7.075625301481184E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999922596366987	WITHOUT_CLASSIFICATION	7.740363301395524E-6	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999919189655115	WITHOUT_CLASSIFICATION	8.081034488498564E-6	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999936567867752	WITHOUT_CLASSIFICATION	6.343213224696877E-6	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9998380844646285	WITHOUT_CLASSIFICATION	1.6191553537148152E-4	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9999756757858287	WITHOUT_CLASSIFICATION	2.43242141712822E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999977743542264	WITHOUT_CLASSIFICATION	2.225645773576442E-6	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999995937002248	WITHOUT_CLASSIFICATION	4.0629977522360326E-7	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9991320519129852	WITHOUT_CLASSIFICATION	8.679480870148992E-4	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9999965477711412	WITHOUT_CLASSIFICATION	3.4522288587768813E-6	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999988865799161	WITHOUT_CLASSIFICATION	1.1134200839294299E-6	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999987937846767	WITHOUT_CLASSIFICATION	1.206215323331234E-6	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999944219108661	WITHOUT_CLASSIFICATION	5.578089133862385E-6	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999565852299328	WITHOUT_CLASSIFICATION	4.3414770067287296E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999994062378083	WITHOUT_CLASSIFICATION	5.937621918507938E-7	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999987144292954	WITHOUT_CLASSIFICATION	1.285570704540098E-6	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999981312510772	WITHOUT_CLASSIFICATION	1.8687489228059195E-6	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999981752095353	WITHOUT_CLASSIFICATION	1.8247904647861057E-6	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999887256671679	WITHOUT_CLASSIFICATION	1.1274332832159766E-5	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999995276068083	WITHOUT_CLASSIFICATION	4.723931917668273E-7	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999960957674251	WITHOUT_CLASSIFICATION	3.9042325748987016E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.999988084203581	WITHOUT_CLASSIFICATION	1.1915796419003324E-5	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999992484639946	WITHOUT_CLASSIFICATION	7.515360053702712E-7	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9992860306986162	WITHOUT_CLASSIFICATION	7.139693013838767E-4	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999997167250217	WITHOUT_CLASSIFICATION	2.8327497824654474E-7	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999995933183932	WITHOUT_CLASSIFICATION	4.0668160686334637E-7	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999953311387613	WITHOUT_CLASSIFICATION	4.6688612387797714E-6	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999798604811788	WITHOUT_CLASSIFICATION	2.013951882111147E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999952921415716	WITHOUT_CLASSIFICATION	4.7078584283895266E-6	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999602815074293	WITHOUT_CLASSIFICATION	3.971849257066399E-5	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999970591881475	WITHOUT_CLASSIFICATION	2.9408118525921773E-6	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999916741212	WITHOUT_CLASSIFICATION	8.325878763421058E-9	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999905399842252	WITHOUT_CLASSIFICATION	9.460015774806318E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999905399842252	WITHOUT_CLASSIFICATION	9.460015774806318E-6	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999999990002574	WITHOUT_CLASSIFICATION	9.997426370116554E-10	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999895112819	WITHOUT_CLASSIFICATION	1.048871815418386E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999895112819	WITHOUT_CLASSIFICATION	1.048871815418386E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999993284835056	WITHOUT_CLASSIFICATION	6.715164944235406E-7	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999993284835056	WITHOUT_CLASSIFICATION	6.715164944235406E-7	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999624873929444	WITHOUT_CLASSIFICATION	3.7512607055731254E-5	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999429711917733	WITHOUT_CLASSIFICATION	5.702880822668779E-5	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.999997594196977	WITHOUT_CLASSIFICATION	2.405803023073662E-6	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999971972025091	WITHOUT_CLASSIFICATION	2.8027974908858407E-6	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999999790820889	WITHOUT_CLASSIFICATION	2.091791102355981E-8	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999984713661575	WITHOUT_CLASSIFICATION	1.5286338425641176E-6	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999996464807787	WITHOUT_CLASSIFICATION	3.535192214003726E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.99978461063633	WITHOUT_CLASSIFICATION	2.1538936367013426E-4	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999905399842252	WITHOUT_CLASSIFICATION	9.460015774806318E-6	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999907816796849	WITHOUT_CLASSIFICATION	9.218320314982895E-6	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999999980405623	WITHOUT_CLASSIFICATION	1.9594376993189306E-9	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999998962728908	WITHOUT_CLASSIFICATION	1.0372710912414505E-7	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.999942559034702	WITHOUT_CLASSIFICATION	5.744096529806287E-5	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.999939565254491	WITHOUT_CLASSIFICATION	6.043474550901288E-5	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999996197578084	WITHOUT_CLASSIFICATION	3.8024219159806024E-7	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999869569240665	WITHOUT_CLASSIFICATION	1.3043075933454578E-5	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999818672070342	WITHOUT_CLASSIFICATION	1.8132792965857706E-5	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999934719624451	WITHOUT_CLASSIFICATION	6.52803755480341E-6	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999934719624451	WITHOUT_CLASSIFICATION	6.52803755480341E-6	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999935219084712	WITHOUT_CLASSIFICATION	6.4780915287584295E-6	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999999198562601	WITHOUT_CLASSIFICATION	8.014373992720202E-8	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999891106639257	WITHOUT_CLASSIFICATION	1.0889336074335623E-5	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999977286913111	WITHOUT_CLASSIFICATION	2.2713086888178484E-6	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999985143724196	WITHOUT_CLASSIFICATION	1.4856275804134473E-6	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994281899574	WITHOUT_CLASSIFICATION	5.718100425879734E-7	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999984507006738	WITHOUT_CLASSIFICATION	1.5492993262204139E-6	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999999761963011	WITHOUT_CLASSIFICATION	2.38036989597067E-8	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999999054221145	WITHOUT_CLASSIFICATION	9.457788542567987E-8	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994281899574	WITHOUT_CLASSIFICATION	5.718100425879734E-7	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999989639717022	WITHOUT_CLASSIFICATION	1.0360282977506393E-6	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999990943193208	WITHOUT_CLASSIFICATION	9.056806791375143E-7	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999969398222257	WITHOUT_CLASSIFICATION	3.0601777742190957E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.999998784233889	WITHOUT_CLASSIFICATION	1.215766111051922E-6	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999997274909188	WITHOUT_CLASSIFICATION	2.725090811168524E-7	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999997206094416	WITHOUT_CLASSIFICATION	2.7939055835601634E-7	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999919067866928	WITHOUT_CLASSIFICATION	8.093213307241525E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999966681776031	WITHOUT_CLASSIFICATION	3.3318223968604787E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999966681776031	WITHOUT_CLASSIFICATION	3.3318223968604787E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999951170806943	WITHOUT_CLASSIFICATION	4.882919305730336E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999951170806943	WITHOUT_CLASSIFICATION	4.882919305730336E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999945024690946	WITHOUT_CLASSIFICATION	5.497530905502407E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999958686437787	WITHOUT_CLASSIFICATION	4.1313562212698955E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999958686437787	WITHOUT_CLASSIFICATION	4.1313562212698955E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999950151297117	WITHOUT_CLASSIFICATION	4.984870288321088E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999943021286842	WITHOUT_CLASSIFICATION	5.6978713158074896E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999943021286842	WITHOUT_CLASSIFICATION	5.6978713158074896E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99999548237519	WITHOUT_CLASSIFICATION	4.517624810001361E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99999548237519	WITHOUT_CLASSIFICATION	4.517624810001361E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999964571131126	WITHOUT_CLASSIFICATION	3.54288688740303E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999984784126124	WITHOUT_CLASSIFICATION	1.5215873875771382E-6	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.999999252919314	WITHOUT_CLASSIFICATION	7.470806860214166E-7	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999969732651015	WITHOUT_CLASSIFICATION	3.0267348985467804E-6	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999999677985548	WITHOUT_CLASSIFICATION	3.220144519154877E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999998984070748	WITHOUT_CLASSIFICATION	1.0159292519989964E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999998984070748	WITHOUT_CLASSIFICATION	1.0159292519989964E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999945504262199	WITHOUT_CLASSIFICATION	5.449573780018387E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999945504262199	WITHOUT_CLASSIFICATION	5.449573780018387E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.999999483378039	WITHOUT_CLASSIFICATION	5.166219609854443E-7	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999793494187302	WITHOUT_CLASSIFICATION	2.0650581269743917E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999954425970203	WITHOUT_CLASSIFICATION	4.5574029796074E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999893350867131	WITHOUT_CLASSIFICATION	1.0664913286852438E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999966681776031	WITHOUT_CLASSIFICATION	3.3318223968604787E-6	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999959737651316	WITHOUT_CLASSIFICATION	4.02623486842991E-6	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999997872407195	WITHOUT_CLASSIFICATION	2.1275928060498411E-7	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999951170806943	WITHOUT_CLASSIFICATION	4.882919305730336E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999951170806943	WITHOUT_CLASSIFICATION	4.882919305730336E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999945024690946	WITHOUT_CLASSIFICATION	5.497530905502407E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999958686437787	WITHOUT_CLASSIFICATION	4.1313562212698955E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999958686437787	WITHOUT_CLASSIFICATION	4.1313562212698955E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999958686437787	WITHOUT_CLASSIFICATION	4.1313562212698955E-6	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999950151297117	WITHOUT_CLASSIFICATION	4.984870288321088E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999943021286842	WITHOUT_CLASSIFICATION	5.6978713158074896E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99999548237519	WITHOUT_CLASSIFICATION	4.517624810001361E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99999548237519	WITHOUT_CLASSIFICATION	4.517624810001361E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99999548237519	WITHOUT_CLASSIFICATION	4.517624810001361E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999964571131126	WITHOUT_CLASSIFICATION	3.54288688740303E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999984784126124	WITHOUT_CLASSIFICATION	1.5215873875771382E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999998984070748	WITHOUT_CLASSIFICATION	1.0159292519989964E-6	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999478363586	WITHOUT_CLASSIFICATION	5.216364146582221E-8	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.999999788189393	WITHOUT_CLASSIFICATION	2.118106070877206E-7	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999998959126902	WITHOUT_CLASSIFICATION	1.0408730976358238E-7	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998224300953	WITHOUT_CLASSIFICATION	1.775699047192953E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999998984070748	WITHOUT_CLASSIFICATION	1.0159292519989964E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999945504262199	WITHOUT_CLASSIFICATION	5.449573780018387E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999945504262199	WITHOUT_CLASSIFICATION	5.449573780018387E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999954425970203	WITHOUT_CLASSIFICATION	4.5574029796074E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999954425970203	WITHOUT_CLASSIFICATION	4.5574029796074E-6	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999992070121686	WITHOUT_CLASSIFICATION	7.929878315283961E-7	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999953256763421	WITHOUT_CLASSIFICATION	4.674323657845969E-6	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999917104135505	WITHOUT_CLASSIFICATION	8.289586449549309E-6	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999963345112396	WITHOUT_CLASSIFICATION	3.665488760497035E-6	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999937386934797	WITHOUT_CLASSIFICATION	6.261306520179992E-6	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.999996560337931	WITHOUT_CLASSIFICATION	3.4396620690365052E-6	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999959307066308	WITHOUT_CLASSIFICATION	4.069293369199076E-6	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999997878705036	WITHOUT_CLASSIFICATION	2.1212949634451321E-7	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999920373484747	WITHOUT_CLASSIFICATION	7.962651525240592E-6	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999997282861475	WITHOUT_CLASSIFICATION	2.717138525448312E-7	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999992507194707	WITHOUT_CLASSIFICATION	7.492805293444104E-7	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999569661529508	WITHOUT_CLASSIFICATION	4.3033847049188284E-5	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999854691134296	WITHOUT_CLASSIFICATION	1.4530886570320526E-5	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999650098586508	WITHOUT_CLASSIFICATION	3.4990141349176005E-5	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.999944718204524	WITHOUT_CLASSIFICATION	5.5281795475949103E-5	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999993517847495	WITHOUT_CLASSIFICATION	6.482152505688044E-7	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999992108922918	WITHOUT_CLASSIFICATION	7.891077080694996E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999985169278762	WITHOUT_CLASSIFICATION	1.4830721238400788E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.99999971583045	WITHOUT_CLASSIFICATION	2.841695500379517E-7	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999995483758002	WITHOUT_CLASSIFICATION	4.5162419988647663E-7	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999946645575276	WITHOUT_CLASSIFICATION	5.335442472340737E-6	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9997130762018038	WITHOUT_CLASSIFICATION	2.869237981961501E-4	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999994194449724	WITHOUT_CLASSIFICATION	5.805550276088337E-7	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999994194449724	WITHOUT_CLASSIFICATION	5.805550276088337E-7	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999993862284705	WITHOUT_CLASSIFICATION	6.137715294404842E-7	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999981198714474	WITHOUT_CLASSIFICATION	1.880128552721417E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9999388579610536	WITHOUT_CLASSIFICATION	6.114203894633585E-5	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999989002434511	WITHOUT_CLASSIFICATION	1.0997565489011892E-6	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999993575989671	WITHOUT_CLASSIFICATION	6.424010328445193E-7	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999957123595711	WITHOUT_CLASSIFICATION	4.287640428847852E-6	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999886397966237	WITHOUT_CLASSIFICATION	1.1360203376352153E-5	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999978962460853	WITHOUT_CLASSIFICATION	2.1037539146807307E-6	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999920627746275	WITHOUT_CLASSIFICATION	7.93722537251564E-6	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999920627746275	WITHOUT_CLASSIFICATION	7.93722537251564E-6	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999920627746275	WITHOUT_CLASSIFICATION	7.93722537251564E-6	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999754013712	WITHOUT_CLASSIFICATION	2.4598628800108215E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999754013712	WITHOUT_CLASSIFICATION	2.4598628800108215E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999754013712	WITHOUT_CLASSIFICATION	2.4598628800108215E-5	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999990741394386	WITHOUT_CLASSIFICATION	9.258605613248627E-7	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9999990283346452	WITHOUT_CLASSIFICATION	9.71665354889837E-7	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9998898545589974	WITHOUT_CLASSIFICATION	1.101454410026109E-4	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9998759759616384	WITHOUT_CLASSIFICATION	1.2402403836162025E-4	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999993875581433	WITHOUT_CLASSIFICATION	6.124418567169789E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999855915193228	WITHOUT_CLASSIFICATION	1.4408480677215487E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999858642795091	WITHOUT_CLASSIFICATION	1.413572049090804E-4	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999998923428652	WITHOUT_CLASSIFICATION	1.0765713472651766E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999978169462733	WITHOUT_CLASSIFICATION	2.183053726689143E-6	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999996828333885	WITHOUT_CLASSIFICATION	3.1716661162873547E-7	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9999999354224204	WITHOUT_CLASSIFICATION	6.45775796107112E-8	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.999999435775001	WITHOUT_CLASSIFICATION	5.642249990149103E-7	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999870633360588	WITHOUT_CLASSIFICATION	1.2936663941233504E-5	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999991661889407	WITHOUT_CLASSIFICATION	8.338110591921771E-7	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999950614857749	WITHOUT_CLASSIFICATION	4.93851422503048E-6	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999832579246138	WITHOUT_CLASSIFICATION	1.6742075386085232E-5	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999997632962012	WITHOUT_CLASSIFICATION	2.36703798707463E-7	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999983044291967	WITHOUT_CLASSIFICATION	1.6955708033073505E-6	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9991153790997207	WITHOUT_CLASSIFICATION	8.84620900279359E-4	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999998848135861	WITHOUT_CLASSIFICATION	1.1518641377797868E-7	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999999794807535	WITHOUT_CLASSIFICATION	2.0519246500658076E-8	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999999498924996	WITHOUT_CLASSIFICATION	5.0107500461902E-8	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9999997732262937	WITHOUT_CLASSIFICATION	2.2677370617295532E-7	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999972844367	WITHOUT_CLASSIFICATION	2.715563346572432E-9	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999997176462505	WITHOUT_CLASSIFICATION	2.8235374955162706E-7	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9999215028733159	WITHOUT_CLASSIFICATION	7.849712668399269E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999949977563619	WITHOUT_CLASSIFICATION	5.002243638027289E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.999999941481333	WITHOUT_CLASSIFICATION	5.851866701879421E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.999996345970423	WITHOUT_CLASSIFICATION	3.654029577097374E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.999996345970423	WITHOUT_CLASSIFICATION	3.654029577097374E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9996748139354342	WITHOUT_CLASSIFICATION	3.251860645657664E-4	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999988219478888	WITHOUT_CLASSIFICATION	1.1780521111856635E-6	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9999970425297411	WITHOUT_CLASSIFICATION	2.9574702590168397E-6	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999968480528871	WITHOUT_CLASSIFICATION	3.1519471128596796E-6	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.999994329470403	WITHOUT_CLASSIFICATION	5.670529597011111E-6	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999937738131887	WITHOUT_CLASSIFICATION	6.226186811311582E-6	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999968675192181	WITHOUT_CLASSIFICATION	3.1324807818932082E-6	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999935548735801	WITHOUT_CLASSIFICATION	6.445126419921421E-6	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9999584193843206	WITHOUT_CLASSIFICATION	4.158061567930541E-5	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999997436127932	WITHOUT_CLASSIFICATION	2.563872067971461E-7	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999781054353072	WITHOUT_CLASSIFICATION	2.189456469282623E-5	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9994028570704586	WITHOUT_CLASSIFICATION	5.971429295413266E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9999979960854777	WITHOUT_CLASSIFICATION	2.0039145222762275E-6	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9999804377677465	WITHOUT_CLASSIFICATION	1.956223225353052E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999985169278762	WITHOUT_CLASSIFICATION	1.4830721238400788E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.999994566222901	WITHOUT_CLASSIFICATION	5.433777099098408E-6	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9986780006192691	WITHOUT_CLASSIFICATION	0.001321999380730884	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999577975001105	WITHOUT_CLASSIFICATION	4.2202499889513715E-5	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9943031651374006	WITHOUT_CLASSIFICATION	0.005696834862599408	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9998713641798821	WITHOUT_CLASSIFICATION	1.2863582011793945E-4	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999980203087303	WITHOUT_CLASSIFICATION	1.9796912697446494E-6	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9998350543491058	WITHOUT_CLASSIFICATION	1.6494565089418358E-4	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999780792589894	WITHOUT_CLASSIFICATION	2.192074101063216E-5	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999993295939212	WITHOUT_CLASSIFICATION	6.704060786719877E-7	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999394280383668	WITHOUT_CLASSIFICATION	6.057196163317523E-5	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999984944123769	WITHOUT_CLASSIFICATION	1.5055876231079615E-6	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9999335825828498	WITHOUT_CLASSIFICATION	6.641741715016937E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9999419101465157	WITHOUT_CLASSIFICATION	5.8089853484205604E-5	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999979569939307	WITHOUT_CLASSIFICATION	2.0430060692923624E-6	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999975994341882	WITHOUT_CLASSIFICATION	2.4005658116957585E-6	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999986884631269	WITHOUT_CLASSIFICATION	1.311536873003471E-6	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999875304179324	WITHOUT_CLASSIFICATION	1.2469582067463747E-5	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999997761746396	WITHOUT_CLASSIFICATION	2.2382536038866537E-7	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999995472562668	WITHOUT_CLASSIFICATION	4.527437331435671E-7	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999998825728061	WITHOUT_CLASSIFICATION	1.1742719381358499E-7	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999986003362747	WITHOUT_CLASSIFICATION	1.3996637253445844E-6	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999988510590184	WITHOUT_CLASSIFICATION	1.1489409815849326E-6	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999873082555276	WITHOUT_CLASSIFICATION	1.2691744472427893E-5	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999997591435363	WITHOUT_CLASSIFICATION	2.4085646364119265E-7	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999389665965196	WITHOUT_CLASSIFICATION	6.103340348032753E-5	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9999281688986945	WITHOUT_CLASSIFICATION	7.183110130548245E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9999964087103321	WITHOUT_CLASSIFICATION	3.5912896677650924E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999984476949447	WITHOUT_CLASSIFICATION	1.5523050553458378E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999984476949447	WITHOUT_CLASSIFICATION	1.5523050553458378E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999736892400537	WITHOUT_CLASSIFICATION	2.6310759946386253E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999852914197261	WITHOUT_CLASSIFICATION	1.4708580273882378E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999995571861972	WITHOUT_CLASSIFICATION	4.4281380283526634E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999995571861972	WITHOUT_CLASSIFICATION	4.4281380283526634E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999855915193228	WITHOUT_CLASSIFICATION	1.4408480677215487E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999858642795091	WITHOUT_CLASSIFICATION	1.413572049090804E-4	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999914051347679	WITHOUT_CLASSIFICATION	8.594865232009277E-6	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999694483753733	WITHOUT_CLASSIFICATION	3.05516246267786E-5	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9998729316494178	WITHOUT_CLASSIFICATION	1.2706835058211863E-4	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.999995379157442	WITHOUT_CLASSIFICATION	4.620842558060304E-6	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999995568418595	WITHOUT_CLASSIFICATION	4.431581404768418E-7	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999964936561017	WITHOUT_CLASSIFICATION	3.506343898367431E-6	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999862010705907	WITHOUT_CLASSIFICATION	1.3798929409370366E-5	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.999990456555291	WITHOUT_CLASSIFICATION	9.543444709015955E-6	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999984261561775	WITHOUT_CLASSIFICATION	1.5738438225222382E-6	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9999983265920207	WITHOUT_CLASSIFICATION	1.673407979282232E-6	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999999621603824	WITHOUT_CLASSIFICATION	3.783961760273133E-8	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999294246482282	WITHOUT_CLASSIFICATION	7.057535177173947E-5	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999638681127024	WITHOUT_CLASSIFICATION	3.613188729762738E-5	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999638681127024	WITHOUT_CLASSIFICATION	3.613188729762738E-5	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999771000440771	WITHOUT_CLASSIFICATION	2.289995592297667E-5	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999989094619498	WITHOUT_CLASSIFICATION	1.090538050144618E-6	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9999651031897311	WITHOUT_CLASSIFICATION	3.4896810268993556E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999925248246436	WITHOUT_CLASSIFICATION	7.475175356405731E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9997679923535434	WITHOUT_CLASSIFICATION	2.32007646456562E-4	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999998364550435	WITHOUT_CLASSIFICATION	1.6354495641844947E-7	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.999964343306546	WITHOUT_CLASSIFICATION	3.56566934539265E-5	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.999999445268072	WITHOUT_CLASSIFICATION	5.547319279879339E-7	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999958948657729	WITHOUT_CLASSIFICATION	4.10513422704576E-6	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9999659791720704	WITHOUT_CLASSIFICATION	3.402082792961728E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999526970060031	WITHOUT_CLASSIFICATION	4.7302993996909056E-5	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9997112566398073	WITHOUT_CLASSIFICATION	2.887433601927327E-4	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9999887931114163	WITHOUT_CLASSIFICATION	1.1206888583737704E-5	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999620743097776	WITHOUT_CLASSIFICATION	3.792569022245502E-5	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.999998146066736	WITHOUT_CLASSIFICATION	1.8539332641168189E-6	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9999424227444982	WITHOUT_CLASSIFICATION	5.757725550180723E-5	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999979683576674	WITHOUT_CLASSIFICATION	2.031642332633375E-6	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999815985450193	WITHOUT_CLASSIFICATION	1.8401454980593652E-5	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999759720167903	WITHOUT_CLASSIFICATION	2.40279832096663E-5	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999989244466955	WITHOUT_CLASSIFICATION	1.0755533046079407E-6	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9999411000292552	WITHOUT_CLASSIFICATION	5.8899970744821305E-5	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999978039684234	WITHOUT_CLASSIFICATION	2.196031576638388E-6	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9998519304208233	WITHOUT_CLASSIFICATION	1.4806957917658418E-4	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999984742956559	WITHOUT_CLASSIFICATION	1.525704344112463E-6	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999958499209987	WITHOUT_CLASSIFICATION	4.150079001396823E-6	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999998227140053	WITHOUT_CLASSIFICATION	1.772859947337972E-7	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999992499678751	WITHOUT_CLASSIFICATION	7.500321248434467E-7	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9998334938733527	WITHOUT_CLASSIFICATION	1.6650612664720463E-4	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999563061707957	WITHOUT_CLASSIFICATION	4.369382920428294E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999536309790352	WITHOUT_CLASSIFICATION	4.63690209647765E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999536309790352	WITHOUT_CLASSIFICATION	4.63690209647765E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999536309790352	WITHOUT_CLASSIFICATION	4.63690209647765E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999536309790352	WITHOUT_CLASSIFICATION	4.63690209647765E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999536309790352	WITHOUT_CLASSIFICATION	4.63690209647765E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999536309790352	WITHOUT_CLASSIFICATION	4.63690209647765E-5	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999998352985153	WITHOUT_CLASSIFICATION	1.6470148461890598E-7	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999995743113378	WITHOUT_CLASSIFICATION	4.256886621886935E-7	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999967291680406	WITHOUT_CLASSIFICATION	3.2708319594343505E-6	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999995617088013	WITHOUT_CLASSIFICATION	4.3829119856622717E-7	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999995617088013	WITHOUT_CLASSIFICATION	4.3829119856622717E-7	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999971008454818	WITHOUT_CLASSIFICATION	2.8991545182730628E-6	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999971008454818	WITHOUT_CLASSIFICATION	2.8991545182730628E-6	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999867473668016	WITHOUT_CLASSIFICATION	1.325263319843878E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9975818524681669	WITHOUT_CLASSIFICATION	0.0024181475318332205	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999984482688837	WITHOUT_CLASSIFICATION	1.551731116269637E-6	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999817185021889	WITHOUT_CLASSIFICATION	1.8281497811135812E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999969833819394	WITHOUT_CLASSIFICATION	3.0166180604439477E-6	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.999998490482952	WITHOUT_CLASSIFICATION	1.5095170481007056E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999967323714571	WITHOUT_CLASSIFICATION	3.2676285428286047E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999967323714571	WITHOUT_CLASSIFICATION	3.2676285428286047E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999801551485056	WITHOUT_CLASSIFICATION	1.984485149443134E-5	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999801551485056	WITHOUT_CLASSIFICATION	1.984485149443134E-5	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999801551485056	WITHOUT_CLASSIFICATION	1.984485149443134E-5	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9999870351387119	WITHOUT_CLASSIFICATION	1.2964861288098293E-5	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9999870351387119	WITHOUT_CLASSIFICATION	1.2964861288098293E-5	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999984912752986	WITHOUT_CLASSIFICATION	1.5087247013679422E-6	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.999998619580734	WITHOUT_CLASSIFICATION	1.3804192659945705E-6	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999968117824632	WITHOUT_CLASSIFICATION	3.188217536721284E-6	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999815110567509	WITHOUT_CLASSIFICATION	1.848894324901072E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999997859705514	WITHOUT_CLASSIFICATION	2.1402944851100812E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999997859705514	WITHOUT_CLASSIFICATION	2.1402944851100812E-7	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999964212239664	WITHOUT_CLASSIFICATION	3.578776033475994E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9999536309790352	WITHOUT_CLASSIFICATION	4.63690209647765E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999997859705514	WITHOUT_CLASSIFICATION	2.1402944851100812E-7	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999977774300155	WITHOUT_CLASSIFICATION	2.2225699845114072E-6	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999977774300155	WITHOUT_CLASSIFICATION	2.2225699845114072E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999997859705514	WITHOUT_CLASSIFICATION	2.1402944851100812E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999997859705514	WITHOUT_CLASSIFICATION	2.1402944851100812E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999997859705514	WITHOUT_CLASSIFICATION	2.1402944851100812E-7	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999987254814913	WITHOUT_CLASSIFICATION	1.274518508710857E-6	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999225500609	WITHOUT_CLASSIFICATION	7.744993910882936E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999620524694	WITHOUT_CLASSIFICATION	3.7947530516385106E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999620524694	WITHOUT_CLASSIFICATION	3.7947530516385106E-8	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999999194456853	WITHOUT_CLASSIFICATION	8.055431465684345E-8	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999998197152727	WITHOUT_CLASSIFICATION	1.802847273177566E-7	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999996726836379	WITHOUT_CLASSIFICATION	3.273163621132772E-7	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999490779821	WITHOUT_CLASSIFICATION	5.09220179483097E-8	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9995627287698615	WITHOUT_CLASSIFICATION	4.3727123013855696E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999999523003298	WITHOUT_CLASSIFICATION	4.769967018767447E-8	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999715172088608	WITHOUT_CLASSIFICATION	2.8482791139209543E-5	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999976072578773	WITHOUT_CLASSIFICATION	2.3927421226749295E-6	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999986301082049	WITHOUT_CLASSIFICATION	1.3698917951285497E-6	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999998199210316	WITHOUT_CLASSIFICATION	1.8007896843939124E-7	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999977828594413	WITHOUT_CLASSIFICATION	2.2171405587714982E-6	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9999987131025984	WITHOUT_CLASSIFICATION	1.286897401600481E-6	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999984553361256	WITHOUT_CLASSIFICATION	1.5446638742892584E-6	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999978265802861	WITHOUT_CLASSIFICATION	2.173419713964839E-6	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999997315320105	WITHOUT_CLASSIFICATION	2.684679895387541E-7	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999562452364361	WITHOUT_CLASSIFICATION	4.375476356397018E-5	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.999999868454902	WITHOUT_CLASSIFICATION	1.3154509793293502E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999991947902094	WITHOUT_CLASSIFICATION	8.052097906924781E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999998706758367	WITHOUT_CLASSIFICATION	1.2932416321069554E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999996232119435	WITHOUT_CLASSIFICATION	3.7678805649972786E-7	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999840281156669	WITHOUT_CLASSIFICATION	1.597188433311041E-5	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999991947902094	WITHOUT_CLASSIFICATION	8.052097906924781E-7	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.999999518139428	WITHOUT_CLASSIFICATION	4.818605720937964E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999998706758367	WITHOUT_CLASSIFICATION	1.2932416321069554E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999996232119435	WITHOUT_CLASSIFICATION	3.7678805649972786E-7	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999998334223718	WITHOUT_CLASSIFICATION	1.665776282328011E-7	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999992617490329	WITHOUT_CLASSIFICATION	7.382509670596179E-7	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999998888064064	WITHOUT_CLASSIFICATION	1.1119359354293802E-7	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999998860361495	WITHOUT_CLASSIFICATION	1.1396385052196514E-7	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999996644501224	WITHOUT_CLASSIFICATION	3.355498775714928E-7	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999998753162825	WITHOUT_CLASSIFICATION	1.2468371750858048E-7	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9999885152151488	WITHOUT_CLASSIFICATION	1.1484784851146583E-5	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999999237394643	WITHOUT_CLASSIFICATION	7.626053566339733E-8	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.999991259911968	WITHOUT_CLASSIFICATION	8.740088032018118E-6	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999905340871521	WITHOUT_CLASSIFICATION	9.465912847836625E-6	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999997801836722	WITHOUT_CLASSIFICATION	2.1981632794252446E-7	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999999685104946	WITHOUT_CLASSIFICATION	3.1489505502524766E-8	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999998754043072	WITHOUT_CLASSIFICATION	1.2459569270824242E-7	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999999881530849	WITHOUT_CLASSIFICATION	1.1846915195410132E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999979004414703	WITHOUT_CLASSIFICATION	2.0995585297073598E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999995885976065	WITHOUT_CLASSIFICATION	4.114023934465291E-7	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999439281613176	WITHOUT_CLASSIFICATION	5.607183868227707E-5	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999976838629616	WITHOUT_CLASSIFICATION	2.316137038283287E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.999999443922806	WITHOUT_CLASSIFICATION	5.560771939361048E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.999999443922806	WITHOUT_CLASSIFICATION	5.560771939361048E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.999998883293068	WITHOUT_CLASSIFICATION	1.116706932024846E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.999998883293068	WITHOUT_CLASSIFICATION	1.116706932024846E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.999993334776857	WITHOUT_CLASSIFICATION	6.665223143021024E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.999993334776857	WITHOUT_CLASSIFICATION	6.665223143021024E-6	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999988768874676	WITHOUT_CLASSIFICATION	1.1231125324054457E-6	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999984530220529	WITHOUT_CLASSIFICATION	1.5469779470197917E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999997945117736	WITHOUT_CLASSIFICATION	2.0548822641336602E-7	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999998399147736	WITHOUT_CLASSIFICATION	1.600852263995926E-7	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999973694708945	WITHOUT_CLASSIFICATION	2.6305291055788615E-6	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999995232914912	WITHOUT_CLASSIFICATION	4.76708508768852E-7	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999967005866007	WITHOUT_CLASSIFICATION	3.29941339934713E-6	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999982950378935	WITHOUT_CLASSIFICATION	1.7049621065587448E-6	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999981487885337	WITHOUT_CLASSIFICATION	1.8512114663292902E-6	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9998281489415448	WITHOUT_CLASSIFICATION	1.7185105845509636E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999986001864964	WITHOUT_CLASSIFICATION	1.3998135035197548E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999441683673	WITHOUT_CLASSIFICATION	5.583163267516931E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999990083524822	WITHOUT_CLASSIFICATION	9.916475177956897E-7	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999789716977973	WITHOUT_CLASSIFICATION	2.1028302202700404E-5	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999870704609904	WITHOUT_CLASSIFICATION	1.2929539009562221E-5	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999993030400869	WITHOUT_CLASSIFICATION	6.969599131135309E-6	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9999996796202207	WITHOUT_CLASSIFICATION	3.2037977918053296E-7	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999957604914772	WITHOUT_CLASSIFICATION	4.239508522748707E-6	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999976942900284	WITHOUT_CLASSIFICATION	2.3057099716482437E-6	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9996744651342382	WITHOUT_CLASSIFICATION	3.2553486576180853E-4	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9999928703057878	WITHOUT_CLASSIFICATION	7.129694212251717E-6	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9998980301153935	WITHOUT_CLASSIFICATION	1.019698846064485E-4	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999991869288084	WITHOUT_CLASSIFICATION	8.130711914840133E-7	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999995198754906	WITHOUT_CLASSIFICATION	4.801245093608588E-7	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.999999930607235	WITHOUT_CLASSIFICATION	6.93927649685452E-8	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999990687952486	WITHOUT_CLASSIFICATION	9.312047513768147E-7	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.999998885196789	WITHOUT_CLASSIFICATION	1.1148032109247716E-6	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999997182022745	WITHOUT_CLASSIFICATION	2.8179772549540114E-7	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999989673228804	WITHOUT_CLASSIFICATION	1.0326771196201744E-6	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999983495856196	WITHOUT_CLASSIFICATION	1.65041438035145E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999674341267788	WITHOUT_CLASSIFICATION	3.256587322116329E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999394132674145	WITHOUT_CLASSIFICATION	6.058673258548823E-5	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999986761414515	WITHOUT_CLASSIFICATION	1.3238585483809513E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9999789471898308	WITHOUT_CLASSIFICATION	2.1052810169228018E-5	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9995160368257294	WITHOUT_CLASSIFICATION	4.839631742705574E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9995160368257294	WITHOUT_CLASSIFICATION	4.839631742705574E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9983065864757013	WITHOUT_CLASSIFICATION	0.0016934135242986249	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999798049973462	WITHOUT_CLASSIFICATION	2.0195002653876307E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9997605283380769	WITHOUT_CLASSIFICATION	2.3947166192292318E-4	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999799793055324	WITHOUT_CLASSIFICATION	2.0020694467601703E-5	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999690041005365	WITHOUT_CLASSIFICATION	3.099589946348084E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999906581104705	WITHOUT_CLASSIFICATION	9.341889529602162E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999906581104705	WITHOUT_CLASSIFICATION	9.341889529602162E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999906581104705	WITHOUT_CLASSIFICATION	9.341889529602162E-6	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.999987212756532	WITHOUT_CLASSIFICATION	1.2787243467921554E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999682571642251	WITHOUT_CLASSIFICATION	3.174283577487672E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999682571642251	WITHOUT_CLASSIFICATION	3.174283577487672E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.999988364377382	WITHOUT_CLASSIFICATION	1.1635622617951883E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9999262486495167	WITHOUT_CLASSIFICATION	7.375135048327689E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999981286597829	WITHOUT_CLASSIFICATION	1.871340217094641E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999981286597829	WITHOUT_CLASSIFICATION	1.871340217094641E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999981286597829	WITHOUT_CLASSIFICATION	1.871340217094641E-6	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999973217055493	WITHOUT_CLASSIFICATION	2.67829445056544E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999890273080988	WITHOUT_CLASSIFICATION	1.0972691901104711E-5	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999845809903175	WITHOUT_CLASSIFICATION	1.541900968253732E-5	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999999735167399	WITHOUT_CLASSIFICATION	2.6483260229863344E-8	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.999997101750022	WITHOUT_CLASSIFICATION	2.8982499780036976E-6	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9999989497212687	WITHOUT_CLASSIFICATION	1.050278731260015E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999795037481789	WITHOUT_CLASSIFICATION	2.0496251821147178E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999892961130205	WITHOUT_CLASSIFICATION	1.070388697967676E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999930865986685	WITHOUT_CLASSIFICATION	6.913401331562094E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9977679682446999	WITHOUT_CLASSIFICATION	0.002232031755300079	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9999720071840534	WITHOUT_CLASSIFICATION	2.7992815946603227E-5	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999993030400869	WITHOUT_CLASSIFICATION	6.969599131135309E-6	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999957604914772	WITHOUT_CLASSIFICATION	4.239508522748707E-6	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.999991504491711	WITHOUT_CLASSIFICATION	8.495508288926391E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999993795059873	WITHOUT_CLASSIFICATION	6.204940127951564E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999996640271711	WITHOUT_CLASSIFICATION	3.359728288822587E-7	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999809818141838	WITHOUT_CLASSIFICATION	1.901818581616281E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999997725655481	WITHOUT_CLASSIFICATION	2.274344519483387E-7	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999997725655481	WITHOUT_CLASSIFICATION	2.274344519483387E-7	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999997725655481	WITHOUT_CLASSIFICATION	2.274344519483387E-7	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999922792512923	WITHOUT_CLASSIFICATION	7.72074870772724E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999922792512923	WITHOUT_CLASSIFICATION	7.72074870772724E-6	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999953098620792	WITHOUT_CLASSIFICATION	4.6901379208401285E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9998500975096528	WITHOUT_CLASSIFICATION	1.4990249034715675E-4	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999649345691961	WITHOUT_CLASSIFICATION	3.5065430803794775E-5	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999959880665227	WITHOUT_CLASSIFICATION	4.011933477330795E-6	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999354454851779	WITHOUT_CLASSIFICATION	6.455451482209631E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999354454851779	WITHOUT_CLASSIFICATION	6.455451482209631E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999954092678361	WITHOUT_CLASSIFICATION	4.5907321638634694E-6	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999986792114767	WITHOUT_CLASSIFICATION	1.3207885233097624E-6	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.999999426410567	WITHOUT_CLASSIFICATION	5.735894329764499E-7	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999978429613041	WITHOUT_CLASSIFICATION	2.157038695846437E-6	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999987934835473	WITHOUT_CLASSIFICATION	1.206516452761113E-6	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999985188534101	WITHOUT_CLASSIFICATION	1.4811465900069051E-6	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999874745338285	WITHOUT_CLASSIFICATION	1.2525466171496853E-5	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999994593575842	WITHOUT_CLASSIFICATION	5.406424157675505E-7	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999999724901848	WITHOUT_CLASSIFICATION	2.7509815263849268E-8	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999964310279815	WITHOUT_CLASSIFICATION	3.568972018614182E-6	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999992118497816	WITHOUT_CLASSIFICATION	7.881502184591458E-7	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999566149289929	WITHOUT_CLASSIFICATION	4.338507100698251E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999996640271711	WITHOUT_CLASSIFICATION	3.359728288822587E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999608819903	WITHOUT_CLASSIFICATION	3.911800973159627E-8	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999781054353072	WITHOUT_CLASSIFICATION	2.189456469282623E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999996640271711	WITHOUT_CLASSIFICATION	3.359728288822587E-7	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999959880665227	WITHOUT_CLASSIFICATION	4.011933477330795E-6	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9999981961501997	WITHOUT_CLASSIFICATION	1.8038498003136019E-6	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999999775681508	WITHOUT_CLASSIFICATION	2.2431849212330408E-8	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999998161012714	WITHOUT_CLASSIFICATION	1.8389872856365002E-7	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999998161012714	WITHOUT_CLASSIFICATION	1.8389872856365002E-7	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.99999594557775	WITHOUT_CLASSIFICATION	4.054422250137009E-6	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999986943174208	WITHOUT_CLASSIFICATION	1.3056825791253148E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999981560931291	WITHOUT_CLASSIFICATION	1.8439068707816632E-6	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999995937749254	WITHOUT_CLASSIFICATION	4.062250745468413E-7	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.999999989622514	WITHOUT_CLASSIFICATION	1.0377486001882058E-8	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999988256450253	WITHOUT_CLASSIFICATION	1.174354974624831E-6	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999996742311194	WITHOUT_CLASSIFICATION	3.2576888059825593E-7	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999973540146831	WITHOUT_CLASSIFICATION	2.645985316865242E-6	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999999192948925	WITHOUT_CLASSIFICATION	8.070510756758357E-8	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999993491554221	WITHOUT_CLASSIFICATION	6.508445778721757E-7	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9999954654234027	WITHOUT_CLASSIFICATION	4.53457659736692E-6	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999354644612733	WITHOUT_CLASSIFICATION	6.453553872661161E-5	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999976183467907	WITHOUT_CLASSIFICATION	2.3816532093156604E-6	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999999150102071	WITHOUT_CLASSIFICATION	8.498979284431843E-8	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999996988657884	WITHOUT_CLASSIFICATION	3.011342116282379E-7	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.99999983557662	WITHOUT_CLASSIFICATION	1.6442337990670527E-7	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999993437892005	WITHOUT_CLASSIFICATION	6.56210799526693E-7	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999998134324481	WITHOUT_CLASSIFICATION	1.865675517911488E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999997436779648	WITHOUT_CLASSIFICATION	2.563220351552754E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999997436779648	WITHOUT_CLASSIFICATION	2.563220351552754E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999996640271711	WITHOUT_CLASSIFICATION	3.359728288822587E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.999999977063991	WITHOUT_CLASSIFICATION	2.2936008993726736E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999992118497816	WITHOUT_CLASSIFICATION	7.881502184591458E-7	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999948510873865	WITHOUT_CLASSIFICATION	5.14891261355394E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999999831596975	WITHOUT_CLASSIFICATION	1.6840302457285127E-8	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999990794825961	WITHOUT_CLASSIFICATION	9.205174038377383E-7	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.99999817552373	WITHOUT_CLASSIFICATION	1.8244762698988526E-6	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.999999921524313	WITHOUT_CLASSIFICATION	7.847568699600968E-8	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999992118497816	WITHOUT_CLASSIFICATION	7.881502184591458E-7	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999980523334272	WITHOUT_CLASSIFICATION	1.9476665727577255E-6	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9999983817606262	WITHOUT_CLASSIFICATION	1.6182393738980826E-6	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999962842566938	WITHOUT_CLASSIFICATION	3.715743306085415E-6	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999995442058077	WITHOUT_CLASSIFICATION	4.5579419234291265E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999998610729024	WITHOUT_CLASSIFICATION	1.3892709765250145E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999854517385602	WITHOUT_CLASSIFICATION	1.4548261439760778E-5	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999987196961739	WITHOUT_CLASSIFICATION	1.2803038260316364E-6	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999938229896719	WITHOUT_CLASSIFICATION	6.1770103280340665E-6	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999986173129236	WITHOUT_CLASSIFICATION	1.3826870763895047E-6	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999986220260261	WITHOUT_CLASSIFICATION	1.3779739738834155E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999969984924028	WITHOUT_CLASSIFICATION	3.0015075972055363E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999969984924028	WITHOUT_CLASSIFICATION	3.0015075972055363E-6	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999976786683459	WITHOUT_CLASSIFICATION	2.3213316542034746E-6	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999999294868448	WITHOUT_CLASSIFICATION	7.051315527982367E-8	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999950413708139	WITHOUT_CLASSIFICATION	4.958629186096782E-6	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999995130064565	WITHOUT_CLASSIFICATION	4.869935435083608E-7	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999841779223576	WITHOUT_CLASSIFICATION	1.5822077642363152E-5	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999921043133112	WITHOUT_CLASSIFICATION	7.895686688867821E-6	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999964700229499	WITHOUT_CLASSIFICATION	3.5299770501436505E-6	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999902196814356	WITHOUT_CLASSIFICATION	9.780318564333666E-6	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999972026002447	WITHOUT_CLASSIFICATION	2.7973997552286317E-6	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999660996658919	WITHOUT_CLASSIFICATION	3.390033410804297E-5	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999999760680357	WITHOUT_CLASSIFICATION	2.3931964277950107E-8	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999991145161969	WITHOUT_CLASSIFICATION	8.854838031228333E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999991145161969	WITHOUT_CLASSIFICATION	8.854838031228333E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999991145161969	WITHOUT_CLASSIFICATION	8.854838031228333E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999991145161969	WITHOUT_CLASSIFICATION	8.854838031228333E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999991145161969	WITHOUT_CLASSIFICATION	8.854838031228333E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999991145161969	WITHOUT_CLASSIFICATION	8.854838031228333E-7	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9999736912905165	WITHOUT_CLASSIFICATION	2.6308709483546792E-5	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999968531248908	WITHOUT_CLASSIFICATION	3.146875109124083E-6	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999997879581015	WITHOUT_CLASSIFICATION	2.1204189861897683E-7	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.999999478963216	WITHOUT_CLASSIFICATION	5.210367840174697E-7	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999980285789848	WITHOUT_CLASSIFICATION	1.971421015260039E-6	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999920102898082	WITHOUT_CLASSIFICATION	7.98971019179273E-6	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999968568532428	WITHOUT_CLASSIFICATION	3.1431467572073847E-6	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999863983296697	WITHOUT_CLASSIFICATION	1.3601670330141225E-5	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9999398563306904	WITHOUT_CLASSIFICATION	6.014366930974848E-5	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999957847883845	WITHOUT_CLASSIFICATION	4.215211615604272E-6	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999963840804326	WITHOUT_CLASSIFICATION	3.615919567442709E-6	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999986876497164	WITHOUT_CLASSIFICATION	1.3123502834743642E-6	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9999955023911359	WITHOUT_CLASSIFICATION	4.497608864095462E-6	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999999560665308	WITHOUT_CLASSIFICATION	4.3933469241773565E-8	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999999471693584	WITHOUT_CLASSIFICATION	5.2830641674597904E-8	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999846891055096	WITHOUT_CLASSIFICATION	1.5310894490302968E-5	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.999952309873943	WITHOUT_CLASSIFICATION	4.7690126057047964E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999702329852544	WITHOUT_CLASSIFICATION	2.976701474549722E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999702329852544	WITHOUT_CLASSIFICATION	2.976701474549722E-5	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999920192920698	WITHOUT_CLASSIFICATION	7.980707930119807E-6	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999705570760424	WITHOUT_CLASSIFICATION	2.944292395767168E-5	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999631282891228	WITHOUT_CLASSIFICATION	3.6871710877227336E-5	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9999615297798885	WITHOUT_CLASSIFICATION	3.847022011150189E-5	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999573095408696	WITHOUT_CLASSIFICATION	4.269045913030741E-5	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999613456447272	WITHOUT_CLASSIFICATION	3.8654355272953986E-5	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999967448139973	WITHOUT_CLASSIFICATION	3.2551860027164717E-6	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999979680955601	WITHOUT_CLASSIFICATION	2.031904439987273E-6	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9998892375776645	WITHOUT_CLASSIFICATION	1.1076242233556503E-4	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.999997303032008	WITHOUT_CLASSIFICATION	2.6969679919237913E-6	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999993896583802	WITHOUT_CLASSIFICATION	6.103416199055357E-7	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999980475784241	WITHOUT_CLASSIFICATION	1.9524215757652843E-6	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999987210747776	WITHOUT_CLASSIFICATION	1.2789252224431867E-6	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.99999425802322	WITHOUT_CLASSIFICATION	5.741976780029026E-6	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999948160093631	WITHOUT_CLASSIFICATION	5.183990636764336E-6	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999935766162045	WITHOUT_CLASSIFICATION	6.423383795438927E-6	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999895691992833	WITHOUT_CLASSIFICATION	1.0430800716697706E-5	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999916533495916	WITHOUT_CLASSIFICATION	8.346650408363734E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999994428807658	WITHOUT_CLASSIFICATION	5.571192342569459E-7	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999955136069587	WITHOUT_CLASSIFICATION	4.48639304133401E-6	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999882303122395	WITHOUT_CLASSIFICATION	1.1769687760500601E-5	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999878852281759	WITHOUT_CLASSIFICATION	1.2114771824122583E-5	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999812176855888	WITHOUT_CLASSIFICATION	1.8782314411215376E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999948790293507	WITHOUT_CLASSIFICATION	5.120970649289298E-6	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999878396476916	WITHOUT_CLASSIFICATION	1.21603523085265E-5	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999929649245688	WITHOUT_CLASSIFICATION	7.035075431204283E-6	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999964677135244	WITHOUT_CLASSIFICATION	3.5322864757965386E-6	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999805406039391	WITHOUT_CLASSIFICATION	1.9459396060768964E-5	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.999999641714157	WITHOUT_CLASSIFICATION	3.582858430072554E-7	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999973748600378	WITHOUT_CLASSIFICATION	2.625139962130772E-6	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9999782767535447	WITHOUT_CLASSIFICATION	2.1723246455352015E-5	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999914356989988	WITHOUT_CLASSIFICATION	8.564301001114727E-6	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999941174679214	WITHOUT_CLASSIFICATION	5.88253207859748E-6	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999988204118573	WITHOUT_CLASSIFICATION	1.1795881426643473E-6	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.999988935262297	WITHOUT_CLASSIFICATION	1.106473770300099E-5	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999773484931584	WITHOUT_CLASSIFICATION	2.2651506841560035E-5	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999998598109593	WITHOUT_CLASSIFICATION	1.4018904069911249E-7	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999946078589104	WITHOUT_CLASSIFICATION	5.392141089579456E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999933043989031	WITHOUT_CLASSIFICATION	6.695601096907056E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999933043989031	WITHOUT_CLASSIFICATION	6.695601096907056E-6	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999237339805416	WITHOUT_CLASSIFICATION	7.626601945848335E-5	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999894231937161	WITHOUT_CLASSIFICATION	1.0576806283838213E-5	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.999962049841387	WITHOUT_CLASSIFICATION	3.795015861305761E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999958131959443	WITHOUT_CLASSIFICATION	4.18680405564653E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999999341533613	WITHOUT_CLASSIFICATION	6.58466387667393E-8	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999550630325065	WITHOUT_CLASSIFICATION	4.4936967493543645E-5	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999941723182771	WITHOUT_CLASSIFICATION	5.827681722843434E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9999759190357231	WITHOUT_CLASSIFICATION	2.4080964276950416E-5	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999998546935505	WITHOUT_CLASSIFICATION	1.4530644959097746E-7	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999995984917427	WITHOUT_CLASSIFICATION	4.0150825734190525E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999933874314059	WITHOUT_CLASSIFICATION	6.612568594182428E-6	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.999988176617561	WITHOUT_CLASSIFICATION	1.1823382438972985E-5	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999863234357411	WITHOUT_CLASSIFICATION	1.367656425895132E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999919341473394	WITHOUT_CLASSIFICATION	8.065852660524602E-6	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9998357027446548	WITHOUT_CLASSIFICATION	1.6429725534513508E-4	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999947912581335	WITHOUT_CLASSIFICATION	5.208741866554709E-6	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999993263540854	WITHOUT_CLASSIFICATION	6.736459145162956E-7	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999957899646922	WITHOUT_CLASSIFICATION	4.2100353078338275E-6	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999868795034862	WITHOUT_CLASSIFICATION	1.3120496513754256E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999992349801767	WITHOUT_CLASSIFICATION	7.65019823392142E-7	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999991818472231	WITHOUT_CLASSIFICATION	8.181527769227578E-7	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999952551057684	WITHOUT_CLASSIFICATION	4.744894231605635E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999919817793207	WITHOUT_CLASSIFICATION	8.01822067924232E-6	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9999759190357231	WITHOUT_CLASSIFICATION	2.4080964276950416E-5	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999979056515155	WITHOUT_CLASSIFICATION	2.0943484846123816E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999979056515155	WITHOUT_CLASSIFICATION	2.0943484846123816E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999919817793207	WITHOUT_CLASSIFICATION	8.01822067924232E-6	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999910501323231	WITHOUT_CLASSIFICATION	8.949867676812573E-6	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999999790972136	WITHOUT_CLASSIFICATION	2.090278644384377E-8	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999993274898985	WITHOUT_CLASSIFICATION	6.725101015332711E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999994632940493	WITHOUT_CLASSIFICATION	5.367059505845909E-7	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999989213888739	WITHOUT_CLASSIFICATION	1.0786111261871526E-6	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9999680874236981	WITHOUT_CLASSIFICATION	3.191257630187323E-5	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999969044451038	WITHOUT_CLASSIFICATION	3.0955548963277805E-6	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999965108001223	WITHOUT_CLASSIFICATION	3.489199877731326E-6	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.999998829869268	WITHOUT_CLASSIFICATION	1.1701307319411135E-6	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999873942509032	WITHOUT_CLASSIFICATION	1.2605749096890496E-5	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9995606485192582	WITHOUT_CLASSIFICATION	4.3935148074178274E-4	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999992505233335	WITHOUT_CLASSIFICATION	7.494766666140776E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999990885701542	WITHOUT_CLASSIFICATION	9.114298458753425E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999990885701542	WITHOUT_CLASSIFICATION	9.114298458753425E-7	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999968933329177	WITHOUT_CLASSIFICATION	3.1066670822371456E-6	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999965774789453	WITHOUT_CLASSIFICATION	3.4225210547044724E-6	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999942140304015	WITHOUT_CLASSIFICATION	5.785969598556119E-6	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.999999826770495	WITHOUT_CLASSIFICATION	1.732295048561739E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.999999826770495	WITHOUT_CLASSIFICATION	1.732295048561739E-7	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9998618016972786	WITHOUT_CLASSIFICATION	1.381983027214325E-4	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9998618016972786	WITHOUT_CLASSIFICATION	1.381983027214325E-4	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999949670590619	WITHOUT_CLASSIFICATION	5.03294093811421E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999869952352692	WITHOUT_CLASSIFICATION	1.3004764730693214E-5	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.999997266008427	WITHOUT_CLASSIFICATION	2.733991572946409E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999880595591856	WITHOUT_CLASSIFICATION	1.1940440814358935E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999992043212079	WITHOUT_CLASSIFICATION	7.956787922167294E-7	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999982800560541	WITHOUT_CLASSIFICATION	1.7199439458150593E-6	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.999999872050408	WITHOUT_CLASSIFICATION	1.2794959195587078E-7	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999949670590619	WITHOUT_CLASSIFICATION	5.03294093811421E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999989069305987	WITHOUT_CLASSIFICATION	1.0930694012913813E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999869952352692	WITHOUT_CLASSIFICATION	1.3004764730693214E-5	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999987458331254	WITHOUT_CLASSIFICATION	1.2541668745273673E-6	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.999997266008427	WITHOUT_CLASSIFICATION	2.733991572946409E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999880595591856	WITHOUT_CLASSIFICATION	1.1940440814358935E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999992043212079	WITHOUT_CLASSIFICATION	7.956787922167294E-7	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9998556557099387	WITHOUT_CLASSIFICATION	1.44344290061318E-4	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999980074035296	WITHOUT_CLASSIFICATION	1.992596470344861E-6	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999982181628791	WITHOUT_CLASSIFICATION	1.7818371207709438E-6	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999989078954495	WITHOUT_CLASSIFICATION	1.0921045504083614E-6	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999982626851299	WITHOUT_CLASSIFICATION	1.737314870086835E-6	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999981695582253	WITHOUT_CLASSIFICATION	1.8304417746593298E-6	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999999471454699	WITHOUT_CLASSIFICATION	5.285453011341216E-8	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999954815695503	WITHOUT_CLASSIFICATION	4.518430449678011E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999783213732173	WITHOUT_CLASSIFICATION	2.167862678264407E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999971534620535	WITHOUT_CLASSIFICATION	2.8465379464983882E-6	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999855517239606	WITHOUT_CLASSIFICATION	1.4448276039322976E-5	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999991164915885	WITHOUT_CLASSIFICATION	8.835084115835339E-7	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999843455122057	WITHOUT_CLASSIFICATION	1.565448779420368E-5	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9997997449326179	WITHOUT_CLASSIFICATION	2.0025506738202827E-4	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999738062528518	WITHOUT_CLASSIFICATION	2.619374714825838E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.999982537365038	WITHOUT_CLASSIFICATION	1.7462634962092077E-5	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999861733910014	WITHOUT_CLASSIFICATION	1.3826608998640036E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999887140025797	WITHOUT_CLASSIFICATION	1.1285997420297505E-5	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999417027886129	WITHOUT_CLASSIFICATION	5.8297211387035644E-5	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999932734391966	WITHOUT_CLASSIFICATION	6.726560803384522E-6	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9996507229088725	WITHOUT_CLASSIFICATION	3.492770911275326E-4	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999953440089001	WITHOUT_CLASSIFICATION	4.655991099888977E-6	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999952171312144	WITHOUT_CLASSIFICATION	4.782868785529354E-6	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999983605854477	WITHOUT_CLASSIFICATION	1.639414552335557E-6	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999973475947974	WITHOUT_CLASSIFICATION	2.6524052026449875E-6	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999971554934488	WITHOUT_CLASSIFICATION	2.844506551162273E-6	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.999986781933511	WITHOUT_CLASSIFICATION	1.3218066489018304E-5	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999998385346603	WITHOUT_CLASSIFICATION	1.6146533965455184E-7	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999616952774706	WITHOUT_CLASSIFICATION	3.8304722529360037E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999977147315	WITHOUT_CLASSIFICATION	2.28526849992517E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999989213888739	WITHOUT_CLASSIFICATION	1.0786111261871526E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999905565794943	WITHOUT_CLASSIFICATION	9.443420505732905E-6	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999987494126241	WITHOUT_CLASSIFICATION	1.2505873758427071E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999975523523417	WITHOUT_CLASSIFICATION	2.4476476583884687E-6	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999993197039108	WITHOUT_CLASSIFICATION	6.802960892189698E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999971545567548	WITHOUT_CLASSIFICATION	2.8454432451911266E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9999999758031122	WITHOUT_CLASSIFICATION	2.419688782296501E-8	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999999652542708	WITHOUT_CLASSIFICATION	3.474572929793626E-8	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999997854706151	WITHOUT_CLASSIFICATION	2.145293849676491E-7	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999957642957376	WITHOUT_CLASSIFICATION	4.2357042624592676E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999999210751013	WITHOUT_CLASSIFICATION	7.892489875720987E-8	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999973972910103	WITHOUT_CLASSIFICATION	2.6027089896449317E-6	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999994355754414	WITHOUT_CLASSIFICATION	5.644245586182409E-7	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999997988476046	WITHOUT_CLASSIFICATION	2.011523954373283E-7	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999969386247358	WITHOUT_CLASSIFICATION	3.0613752642047013E-6	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.999998988675254	WITHOUT_CLASSIFICATION	1.0113247459306868E-6	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999998687732974	WITHOUT_CLASSIFICATION	1.3122670272323299E-7	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999993783989749	WITHOUT_CLASSIFICATION	6.216010250233961E-7	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999991164915885	WITHOUT_CLASSIFICATION	8.835084115835339E-7	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999843455122057	WITHOUT_CLASSIFICATION	1.565448779420368E-5	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9997997449326179	WITHOUT_CLASSIFICATION	2.0025506738202827E-4	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999738062528518	WITHOUT_CLASSIFICATION	2.619374714825838E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.999982537365038	WITHOUT_CLASSIFICATION	1.7462634962092077E-5	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999861733910014	WITHOUT_CLASSIFICATION	1.3826608998640036E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999849889149801	WITHOUT_CLASSIFICATION	1.5011085019890724E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999887140025797	WITHOUT_CLASSIFICATION	1.1285997420297505E-5	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999998385346603	WITHOUT_CLASSIFICATION	1.6146533965455184E-7	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999616952774706	WITHOUT_CLASSIFICATION	3.8304722529360037E-5	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999977147315	WITHOUT_CLASSIFICATION	2.28526849992517E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999982545101299	WITHOUT_CLASSIFICATION	1.7454898700637273E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999982545101299	WITHOUT_CLASSIFICATION	1.7454898700637273E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999905565794943	WITHOUT_CLASSIFICATION	9.443420505732905E-6	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999987494126241	WITHOUT_CLASSIFICATION	1.2505873758427071E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999975523523417	WITHOUT_CLASSIFICATION	2.4476476583884687E-6	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.999991032993718	WITHOUT_CLASSIFICATION	8.967006282040022E-6	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9998564701237315	WITHOUT_CLASSIFICATION	1.4352987626857673E-4	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999974404106249	WITHOUT_CLASSIFICATION	2.5595893750177798E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999993495035171	WITHOUT_CLASSIFICATION	6.50496482842313E-7	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999901618131829	WITHOUT_CLASSIFICATION	9.838186817116264E-6	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999799937172283	WITHOUT_CLASSIFICATION	2.0006282771608234E-5	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999954994325566	WITHOUT_CLASSIFICATION	4.50056744336438E-6	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999964620298971	WITHOUT_CLASSIFICATION	3.537970102800373E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.999959897117878	WITHOUT_CLASSIFICATION	4.010288212207564E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999996373885764	WITHOUT_CLASSIFICATION	3.626114235896754E-7	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999803898453303	WITHOUT_CLASSIFICATION	1.9610154669677423E-5	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9998191785612189	WITHOUT_CLASSIFICATION	1.8082143878100424E-4	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999985987143528	WITHOUT_CLASSIFICATION	1.4012856472699098E-6	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9999993567642624	WITHOUT_CLASSIFICATION	6.432357375837896E-7	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999996345314156	WITHOUT_CLASSIFICATION	3.6546858432245364E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999995980606788	WITHOUT_CLASSIFICATION	4.0193932117759717E-7	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999063655307	WITHOUT_CLASSIFICATION	9.363446925438742E-8	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999988179727697	WITHOUT_CLASSIFICATION	1.1820272302937576E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999985442743548	WITHOUT_CLASSIFICATION	1.4557256452676722E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.999999300467753	WITHOUT_CLASSIFICATION	6.995322469822923E-7	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9999965929165997	WITHOUT_CLASSIFICATION	3.407083400174782E-6	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999991374614201	WITHOUT_CLASSIFICATION	8.625385798785062E-7	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999997781379745	WITHOUT_CLASSIFICATION	2.2186202554100623E-7	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999997431119838	WITHOUT_CLASSIFICATION	2.568880161976718E-7	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999992250303822	WITHOUT_CLASSIFICATION	7.749696178734987E-7	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9999963249130066	WITHOUT_CLASSIFICATION	3.6750869933305486E-6	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999968722373561	WITHOUT_CLASSIFICATION	3.127762643907528E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999975082130589	WITHOUT_CLASSIFICATION	2.491786941098232E-6	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9999604339059704	WITHOUT_CLASSIFICATION	3.956609402951704E-5	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999991751719964	WITHOUT_CLASSIFICATION	8.248280034624592E-7	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9997163122302098	WITHOUT_CLASSIFICATION	2.836877697901638E-4	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999984476949447	WITHOUT_CLASSIFICATION	1.5523050553458378E-6	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999999970221212	WITHOUT_CLASSIFICATION	2.977878786930458E-9	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999990934336164	WITHOUT_CLASSIFICATION	9.065663835581136E-7	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999987458331254	WITHOUT_CLASSIFICATION	1.2541668745273673E-6	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999958982959485	WITHOUT_CLASSIFICATION	4.101704051515339E-6	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999993730487151	WITHOUT_CLASSIFICATION	6.269512848358586E-7	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999991156827372	WITHOUT_CLASSIFICATION	8.843172628190879E-7	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9999215480721897	WITHOUT_CLASSIFICATION	7.84519278103826E-5	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9999879039203123	WITHOUT_CLASSIFICATION	1.20960796876499E-5	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999853377720473	WITHOUT_CLASSIFICATION	1.4662227952624033E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999948630796792	WITHOUT_CLASSIFICATION	5.136920320866279E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999948630796792	WITHOUT_CLASSIFICATION	5.136920320866279E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999948630796792	WITHOUT_CLASSIFICATION	5.136920320866279E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999948630796792	WITHOUT_CLASSIFICATION	5.136920320866279E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999948630796792	WITHOUT_CLASSIFICATION	5.136920320866279E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999948630796792	WITHOUT_CLASSIFICATION	5.136920320866279E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999973579738318	WITHOUT_CLASSIFICATION	2.642026168082051E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999960813799323	WITHOUT_CLASSIFICATION	3.918620067611694E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999888087748139	WITHOUT_CLASSIFICATION	1.1191225186208217E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999888087748139	WITHOUT_CLASSIFICATION	1.1191225186208217E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999888087748139	WITHOUT_CLASSIFICATION	1.1191225186208217E-5	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999992307115785	WITHOUT_CLASSIFICATION	7.692884214814963E-7	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.999999038160397	WITHOUT_CLASSIFICATION	9.618396028864703E-7	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999545231663141	WITHOUT_CLASSIFICATION	4.547683368595212E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999075359031034	WITHOUT_CLASSIFICATION	9.246409689663002E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999075359031034	WITHOUT_CLASSIFICATION	9.246409689663002E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999993193666548	WITHOUT_CLASSIFICATION	6.806333451733638E-7	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999999096262342	WITHOUT_CLASSIFICATION	9.037376578839309E-8	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999887014769954	WITHOUT_CLASSIFICATION	1.1298523004719491E-5	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9999998248895392	WITHOUT_CLASSIFICATION	1.7511046080954521E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999831848417832	WITHOUT_CLASSIFICATION	1.6815158216778116E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998370000629	WITHOUT_CLASSIFICATION	1.6299993718021992E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998370000629	WITHOUT_CLASSIFICATION	1.6299993718021992E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998370000629	WITHOUT_CLASSIFICATION	1.6299993718021992E-7	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999998518346802	WITHOUT_CLASSIFICATION	1.4816531985671493E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999962140538137	WITHOUT_CLASSIFICATION	3.7859461864396928E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999997520076349	WITHOUT_CLASSIFICATION	2.479923651032069E-7	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999997951411241	WITHOUT_CLASSIFICATION	2.04858875823229E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999958402931094	WITHOUT_CLASSIFICATION	4.159706890586588E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999958402931094	WITHOUT_CLASSIFICATION	4.159706890586588E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999958402931094	WITHOUT_CLASSIFICATION	4.159706890586588E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999958402931094	WITHOUT_CLASSIFICATION	4.159706890586588E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999958402931094	WITHOUT_CLASSIFICATION	4.159706890586588E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999958402931094	WITHOUT_CLASSIFICATION	4.159706890586588E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999958402931094	WITHOUT_CLASSIFICATION	4.159706890586588E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999958402931094	WITHOUT_CLASSIFICATION	4.159706890586588E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999958402931094	WITHOUT_CLASSIFICATION	4.159706890586588E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999958402931094	WITHOUT_CLASSIFICATION	4.159706890586588E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999958402931094	WITHOUT_CLASSIFICATION	4.159706890586588E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999958402931094	WITHOUT_CLASSIFICATION	4.159706890586588E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.999999562460124	WITHOUT_CLASSIFICATION	4.3753987589184195E-7	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997028710420439	WITHOUT_CLASSIFICATION	2.971289579561108E-4	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997028710420439	WITHOUT_CLASSIFICATION	2.971289579561108E-4	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999975273304657	WITHOUT_CLASSIFICATION	2.472669534293327E-6	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999996977125647	WITHOUT_CLASSIFICATION	3.022874353251583E-7	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999997783567011	WITHOUT_CLASSIFICATION	2.2164329880432802E-7	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999831972750832	WITHOUT_CLASSIFICATION	1.6802724916776498E-5	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999747846632273	WITHOUT_CLASSIFICATION	2.521533677266982E-5	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999996871663366	WITHOUT_CLASSIFICATION	3.128336634234387E-7	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9999997094018692	WITHOUT_CLASSIFICATION	2.905981308449927E-7	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.999959275251787	WITHOUT_CLASSIFICATION	4.07247482130372E-5	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999995132339208	WITHOUT_CLASSIFICATION	4.867660792189841E-7	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999999433228716	WITHOUT_CLASSIFICATION	5.6677128469748365E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998263605879	WITHOUT_CLASSIFICATION	1.7363941210510682E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998263605879	WITHOUT_CLASSIFICATION	1.7363941210510682E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998263605879	WITHOUT_CLASSIFICATION	1.7363941210510682E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998263605879	WITHOUT_CLASSIFICATION	1.7363941210510682E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998263605879	WITHOUT_CLASSIFICATION	1.7363941210510682E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999980361159311	WITHOUT_CLASSIFICATION	1.9638840688775767E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998856148687366	WITHOUT_CLASSIFICATION	1.1438513126328251E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998856148687366	WITHOUT_CLASSIFICATION	1.1438513126328251E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998856148687366	WITHOUT_CLASSIFICATION	1.1438513126328251E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9998856148687366	WITHOUT_CLASSIFICATION	1.1438513126328251E-4	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999986663729068	WITHOUT_CLASSIFICATION	1.3336270931468795E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999773103544861	WITHOUT_CLASSIFICATION	2.2689645513949587E-5	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9986918267186247	WITHOUT_CLASSIFICATION	0.001308173281375305	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999872232346502	WITHOUT_CLASSIFICATION	1.277676534988226E-5	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999999255403502	WITHOUT_CLASSIFICATION	7.445964980693874E-8	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999703280728549	WITHOUT_CLASSIFICATION	2.9671927145025566E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999998286220022	WITHOUT_CLASSIFICATION	1.7137799785655508E-7	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999995944223997	WITHOUT_CLASSIFICATION	4.0557760023736E-7	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999974965985904	WITHOUT_CLASSIFICATION	2.5034014096368417E-6	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999989880530487	WITHOUT_CLASSIFICATION	1.011946951397704E-6	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999618669443399	WITHOUT_CLASSIFICATION	3.8133055660130675E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999887664767007	WITHOUT_CLASSIFICATION	1.1233523299383891E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.999976232856453	WITHOUT_CLASSIFICATION	2.376714354706106E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999996820391696	WITHOUT_CLASSIFICATION	3.1796083039869765E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999996820391696	WITHOUT_CLASSIFICATION	3.1796083039869765E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.999996820391696	WITHOUT_CLASSIFICATION	3.1796083039869765E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999997695947893	WITHOUT_CLASSIFICATION	2.304052107642158E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999997695947893	WITHOUT_CLASSIFICATION	2.304052107642158E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999893541395799	WITHOUT_CLASSIFICATION	1.064586042017841E-5	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.999944406642364	WITHOUT_CLASSIFICATION	5.5593357636149686E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999984506687712	WITHOUT_CLASSIFICATION	1.5493312287171831E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9998696314214978	WITHOUT_CLASSIFICATION	1.3036857850221332E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9998696314214978	WITHOUT_CLASSIFICATION	1.3036857850221332E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9998696314214978	WITHOUT_CLASSIFICATION	1.3036857850221332E-4	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999938629003475	WITHOUT_CLASSIFICATION	6.13709965237356E-6	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999986001864964	WITHOUT_CLASSIFICATION	1.3998135035197548E-6	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.999994949397157	WITHOUT_CLASSIFICATION	5.050602842906879E-6	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999889079367406	WITHOUT_CLASSIFICATION	1.1092063259456472E-5	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9997320281439958	WITHOUT_CLASSIFICATION	2.679718560042965E-4	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9999973152473906	WITHOUT_CLASSIFICATION	2.684752609569796E-6	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999993554178194	WITHOUT_CLASSIFICATION	6.44582180582345E-7	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.999999909530508	WITHOUT_CLASSIFICATION	9.046949195740634E-8	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9994604775344651	WITHOUT_CLASSIFICATION	5.395224655349891E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996110527979538	WITHOUT_CLASSIFICATION	3.8894720204620843E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996110527979538	WITHOUT_CLASSIFICATION	3.8894720204620843E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.9973752987487825	WITHOUT_CLASSIFICATION	0.0026247012512174567	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999626013367451	WITHOUT_CLASSIFICATION	3.739866325488382E-5	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998531024907	WITHOUT_CLASSIFICATION	1.468975092295935E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998531024907	WITHOUT_CLASSIFICATION	1.468975092295935E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998531024907	WITHOUT_CLASSIFICATION	1.468975092295935E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998531024907	WITHOUT_CLASSIFICATION	1.468975092295935E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999998531024907	WITHOUT_CLASSIFICATION	1.468975092295935E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999879907315218	WITHOUT_CLASSIFICATION	1.200926847821243E-5	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9998173345138502	WITHOUT_CLASSIFICATION	1.8266548614964166E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999924889209378	WITHOUT_CLASSIFICATION	7.511079062220131E-6	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999996268840585	WITHOUT_CLASSIFICATION	3.7311594150675884E-7	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999828425629768	WITHOUT_CLASSIFICATION	1.715743702325572E-5	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999993936086959	WITHOUT_CLASSIFICATION	6.063913041071968E-7	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999994227400423	WITHOUT_CLASSIFICATION	5.772599576642291E-7	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999982086363655	WITHOUT_CLASSIFICATION	1.7913636344994158E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999378072948448	WITHOUT_CLASSIFICATION	6.219270515518185E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999378072948448	WITHOUT_CLASSIFICATION	6.219270515518185E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999990229722171	WITHOUT_CLASSIFICATION	9.77027782916812E-7	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.999999190771509	WITHOUT_CLASSIFICATION	8.092284909349853E-7	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9998559846160187	WITHOUT_CLASSIFICATION	1.4401538398143535E-4	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9998559846160187	WITHOUT_CLASSIFICATION	1.4401538398143535E-4	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999993688628778	WITHOUT_CLASSIFICATION	6.311371223660298E-7	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.999991029895926	WITHOUT_CLASSIFICATION	8.970104073888287E-6	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999998872982281	WITHOUT_CLASSIFICATION	1.1270177183623992E-7	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9997843349950509	WITHOUT_CLASSIFICATION	2.1566500494901483E-4	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999970249141868	WITHOUT_CLASSIFICATION	2.9750858132074974E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999854113846	WITHOUT_CLASSIFICATION	1.4588615282359861E-8	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999997404578813	WITHOUT_CLASSIFICATION	2.5954211873487886E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999713655982142	WITHOUT_CLASSIFICATION	2.8634401785793523E-5	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9999719268129493	WITHOUT_CLASSIFICATION	2.807318705069706E-5	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999997325425505	WITHOUT_CLASSIFICATION	2.6745744961694904E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999995200722615	WITHOUT_CLASSIFICATION	4.799277384962232E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999995200722615	WITHOUT_CLASSIFICATION	4.799277384962232E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999995200722615	WITHOUT_CLASSIFICATION	4.799277384962232E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999995200722615	WITHOUT_CLASSIFICATION	4.799277384962232E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999674341267788	WITHOUT_CLASSIFICATION	3.256587322116329E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999674341267788	WITHOUT_CLASSIFICATION	3.256587322116329E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999674341267788	WITHOUT_CLASSIFICATION	3.256587322116329E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999674341267788	WITHOUT_CLASSIFICATION	3.256587322116329E-5	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9976216293407769	WITHOUT_CLASSIFICATION	0.002378370659223018	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999990487045273	WITHOUT_CLASSIFICATION	9.512954727190001E-7	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998748495215	WITHOUT_CLASSIFICATION	1.2515047851827624E-7	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999997669658319	WITHOUT_CLASSIFICATION	2.330341680038668E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999982109553236	WITHOUT_CLASSIFICATION	1.7890446764693403E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999982109553236	WITHOUT_CLASSIFICATION	1.7890446764693403E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999982109553236	WITHOUT_CLASSIFICATION	1.7890446764693403E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999982109553236	WITHOUT_CLASSIFICATION	1.7890446764693403E-6	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9854314016976788	WITHOUT_CLASSIFICATION	0.014568598302321108	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999971965317436	WITHOUT_CLASSIFICATION	2.803468256364316E-6	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999998695110848	WITHOUT_CLASSIFICATION	1.3048891521330826E-7	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.999994716659023	WITHOUT_CLASSIFICATION	5.283340977021341E-6	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.999999985752843	WITHOUT_CLASSIFICATION	1.4247157019167127E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.999920790126446	WITHOUT_CLASSIFICATION	7.920987355394009E-5	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999995543498432	WITHOUT_CLASSIFICATION	4.456501567145907E-7	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999373687442946	WITHOUT_CLASSIFICATION	6.263125570534042E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999373687442946	WITHOUT_CLASSIFICATION	6.263125570534042E-5	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999988494274289	WITHOUT_CLASSIFICATION	1.1505725711097418E-6	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999993477674785	WITHOUT_CLASSIFICATION	6.522325214900346E-7	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9999896702002248	WITHOUT_CLASSIFICATION	1.0329799775334911E-5	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999991286348254	WITHOUT_CLASSIFICATION	8.713651744582259E-7	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999999596034276	WITHOUT_CLASSIFICATION	4.039657243345211E-8	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999983159741365	WITHOUT_CLASSIFICATION	1.6840258636602651E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999853960577223	WITHOUT_CLASSIFICATION	1.460394227783238E-5	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999999761532143	WITHOUT_CLASSIFICATION	2.3846785637263907E-8	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999999546569256	WITHOUT_CLASSIFICATION	4.53430743844124E-8	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999979246799603	WITHOUT_CLASSIFICATION	2.0753200396297353E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998360854006	WITHOUT_CLASSIFICATION	1.639145994547713E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998360854006	WITHOUT_CLASSIFICATION	1.639145994547713E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998360854006	WITHOUT_CLASSIFICATION	1.639145994547713E-7	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999999961057443	WITHOUT_CLASSIFICATION	3.894255656985445E-9	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999966632151546	WITHOUT_CLASSIFICATION	3.3367848453639E-6	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999999992723682	WITHOUT_CLASSIFICATION	7.276317247886845E-10	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999796434582342	WITHOUT_CLASSIFICATION	2.035654176572666E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999796434582342	WITHOUT_CLASSIFICATION	2.035654176572666E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999983107398367	WITHOUT_CLASSIFICATION	1.6892601633745665E-6	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999995758310011	WITHOUT_CLASSIFICATION	4.2416899895872746E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9999980857339331	WITHOUT_CLASSIFICATION	1.914266066826563E-6	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999995464656103	WITHOUT_CLASSIFICATION	4.535343897735018E-7	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999895922434223	WITHOUT_CLASSIFICATION	1.0407756577651134E-5	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999899520352662	WITHOUT_CLASSIFICATION	1.0047964733841476E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999986956769992	WITHOUT_CLASSIFICATION	1.3043230007922512E-6	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999832097162779	WITHOUT_CLASSIFICATION	1.6790283722166323E-5	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999997054139231	WITHOUT_CLASSIFICATION	2.945860769217346E-7	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999999194697264	WITHOUT_CLASSIFICATION	8.053027357244881E-8	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999959099488029	WITHOUT_CLASSIFICATION	4.090051197133781E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999852648842068	WITHOUT_CLASSIFICATION	1.4735115793180947E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999852648842068	WITHOUT_CLASSIFICATION	1.4735115793180947E-5	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999950930851798	WITHOUT_CLASSIFICATION	4.906914820240698E-6	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999998945914105	WITHOUT_CLASSIFICATION	1.0540858945743296E-7	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999905768309637	WITHOUT_CLASSIFICATION	9.423169036302668E-6	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999738572734644	WITHOUT_CLASSIFICATION	2.6142726535599293E-5	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999990511050911	WITHOUT_CLASSIFICATION	9.488949088131794E-7	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999594929206045	WITHOUT_CLASSIFICATION	4.0507079395502756E-5	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.999999525103292	WITHOUT_CLASSIFICATION	4.748967079872934E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.999998388854166	WITHOUT_CLASSIFICATION	1.6111458339432648E-6	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9999773976451766	WITHOUT_CLASSIFICATION	2.26023548233587E-5	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999998631853237	WITHOUT_CLASSIFICATION	1.3681467629700682E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998360854006	WITHOUT_CLASSIFICATION	1.639145994547713E-7	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999981426638461	WITHOUT_CLASSIFICATION	1.8573361538564729E-6	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999877837963	WITHOUT_CLASSIFICATION	1.2216203586300485E-8	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999997330920377	WITHOUT_CLASSIFICATION	2.669079622367259E-7	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999999868099372	WITHOUT_CLASSIFICATION	1.3190062885778593E-8	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999997715514825	WITHOUT_CLASSIFICATION	2.284485174449796E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999995495171458	WITHOUT_CLASSIFICATION	4.504828541362636E-7	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999978769145887	WITHOUT_CLASSIFICATION	2.12308541130418E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999997002103177	WITHOUT_CLASSIFICATION	2.997896823269422E-7	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999940603462691	WITHOUT_CLASSIFICATION	5.939653730873635E-6	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.999999701946215	WITHOUT_CLASSIFICATION	2.980537849875711E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999997952210959	WITHOUT_CLASSIFICATION	2.047789040463025E-7	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999940660632304	WITHOUT_CLASSIFICATION	5.9339367695779966E-6	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999924515467847	WITHOUT_CLASSIFICATION	7.5484532152335025E-6	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999988965026325	WITHOUT_CLASSIFICATION	1.1034973675946152E-6	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999667490267167	WITHOUT_CLASSIFICATION	3.325097328334252E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.99999970055157	WITHOUT_CLASSIFICATION	2.994484300195245E-7	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9996798584825206	WITHOUT_CLASSIFICATION	3.201415174793967E-4	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999997149581356	WITHOUT_CLASSIFICATION	2.850418644634501E-7	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999999125871178	WITHOUT_CLASSIFICATION	8.74128821268887E-8	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.999999980015643	WITHOUT_CLASSIFICATION	1.99843570185382E-8	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999964787919104	WITHOUT_CLASSIFICATION	3.5212080894882237E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999949977563619	WITHOUT_CLASSIFICATION	5.002243638027289E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999949977563619	WITHOUT_CLASSIFICATION	5.002243638027289E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999949977563619	WITHOUT_CLASSIFICATION	5.002243638027289E-6	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999952159252686	WITHOUT_CLASSIFICATION	4.784074731358326E-6	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999889266586408	WITHOUT_CLASSIFICATION	1.1073341359162478E-5	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999881208739293	WITHOUT_CLASSIFICATION	1.187912607067018E-5	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999991524124431	WITHOUT_CLASSIFICATION	8.475875569944166E-7	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9999997201267585	WITHOUT_CLASSIFICATION	2.7987324149749764E-7	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9998657275541096	WITHOUT_CLASSIFICATION	1.3427244589031336E-4	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999998715915905	WITHOUT_CLASSIFICATION	1.2840840944223299E-7	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999989371041973	WITHOUT_CLASSIFICATION	1.062895802699573E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999978169462733	WITHOUT_CLASSIFICATION	2.183053726689143E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999978169462733	WITHOUT_CLASSIFICATION	2.183053726689143E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999978169462733	WITHOUT_CLASSIFICATION	2.183053726689143E-6	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999999584441754	WITHOUT_CLASSIFICATION	4.155582458718817E-8	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999981312628707	WITHOUT_CLASSIFICATION	1.8687371292885936E-6	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.999981305416779	WITHOUT_CLASSIFICATION	1.8694583221019247E-5	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999997957630213	WITHOUT_CLASSIFICATION	2.04236978543872E-7	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999997382998064	WITHOUT_CLASSIFICATION	2.617001935740127E-7	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9999878368874614	WITHOUT_CLASSIFICATION	1.216311253870134E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999984388149866	WITHOUT_CLASSIFICATION	1.5611850133414779E-6	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999928065254344	WITHOUT_CLASSIFICATION	7.193474565561905E-6	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999905896949	WITHOUT_CLASSIFICATION	9.41030504028613E-9	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999847609613342	WITHOUT_CLASSIFICATION	1.5239038665824409E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999961253863835	WITHOUT_CLASSIFICATION	3.874613616505099E-6	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999063655307	WITHOUT_CLASSIFICATION	9.363446925438742E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999999063655307	WITHOUT_CLASSIFICATION	9.363446925438742E-8	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999788052858	WITHOUT_CLASSIFICATION	2.1194714304160423E-8	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9999999414911409	WITHOUT_CLASSIFICATION	5.850885910219347E-8	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999999773905518	WITHOUT_CLASSIFICATION	2.260944813142399E-8	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999946386429739	WITHOUT_CLASSIFICATION	5.361357026089317E-6	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9997561276095083	WITHOUT_CLASSIFICATION	2.4387239049173144E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998360854006	WITHOUT_CLASSIFICATION	1.639145994547713E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998360854006	WITHOUT_CLASSIFICATION	1.639145994547713E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999980361159311	WITHOUT_CLASSIFICATION	1.9638840688775767E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999997143695133	WITHOUT_CLASSIFICATION	2.8563048676693075E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999997143695133	WITHOUT_CLASSIFICATION	2.8563048676693075E-7	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999991819101154	WITHOUT_CLASSIFICATION	8.18089884613994E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999965853511962	WITHOUT_CLASSIFICATION	3.4146488039000593E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999994025089054	WITHOUT_CLASSIFICATION	5.974910945402565E-7	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999567466742024	WITHOUT_CLASSIFICATION	4.325332579757981E-5	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999999728995083	WITHOUT_CLASSIFICATION	2.710049172055519E-8	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999999645988092	WITHOUT_CLASSIFICATION	3.540119073641464E-8	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.999909601881665	WITHOUT_CLASSIFICATION	9.039811833507149E-5	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999852888185082	WITHOUT_CLASSIFICATION	1.471118149178776E-5	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999986374694028	WITHOUT_CLASSIFICATION	1.3625305972457052E-6	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999977085918785	WITHOUT_CLASSIFICATION	2.291408121547155E-6	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999996572842699	WITHOUT_CLASSIFICATION	3.427157301469812E-7	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999999973460986	WITHOUT_CLASSIFICATION	2.6539013874504315E-9	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9999975526262831	WITHOUT_CLASSIFICATION	2.4473737170334374E-6	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999988631415203	WITHOUT_CLASSIFICATION	1.1368584797143504E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999985169278762	WITHOUT_CLASSIFICATION	1.4830721238400788E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999985169278762	WITHOUT_CLASSIFICATION	1.4830721238400788E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999985169278762	WITHOUT_CLASSIFICATION	1.4830721238400788E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999985169278762	WITHOUT_CLASSIFICATION	1.4830721238400788E-6	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999993996909369	WITHOUT_CLASSIFICATION	6.003090631339555E-7	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999998781021808	WITHOUT_CLASSIFICATION	1.2189781916802238E-7	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9997896741730457	WITHOUT_CLASSIFICATION	2.103258269543846E-4	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999975731645238	WITHOUT_CLASSIFICATION	2.4268354763093167E-6	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.999999985599428	WITHOUT_CLASSIFICATION	1.4400571825409622E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998360854006	WITHOUT_CLASSIFICATION	1.639145994547713E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998360854006	WITHOUT_CLASSIFICATION	1.639145994547713E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998360854006	WITHOUT_CLASSIFICATION	1.639145994547713E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999998360854006	WITHOUT_CLASSIFICATION	1.639145994547713E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9996824419081376	WITHOUT_CLASSIFICATION	3.175580918624096E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999965853511962	WITHOUT_CLASSIFICATION	3.4146488039000593E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999972821985451	WITHOUT_CLASSIFICATION	2.717801455015689E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999972821985451	WITHOUT_CLASSIFICATION	2.717801455015689E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999835414750992	WITHOUT_CLASSIFICATION	1.645852490077789E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999951170806943	WITHOUT_CLASSIFICATION	4.882919305730336E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999951170806943	WITHOUT_CLASSIFICATION	4.882919305730336E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999951170806943	WITHOUT_CLASSIFICATION	4.882919305730336E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999986277005201	WITHOUT_CLASSIFICATION	1.372299479925332E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999470278326187	WITHOUT_CLASSIFICATION	5.297216738143445E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99999548237519	WITHOUT_CLASSIFICATION	4.517624810001361E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99999548237519	WITHOUT_CLASSIFICATION	4.517624810001361E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99999548237519	WITHOUT_CLASSIFICATION	4.517624810001361E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999998984070748	WITHOUT_CLASSIFICATION	1.0159292519989964E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.999998984070748	WITHOUT_CLASSIFICATION	1.0159292519989964E-6	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999989567074979	WITHOUT_CLASSIFICATION	1.0432925020300626E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999986277005201	WITHOUT_CLASSIFICATION	1.372299479925332E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999975626723023	WITHOUT_CLASSIFICATION	2.4373276976846473E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.999999977063991	WITHOUT_CLASSIFICATION	2.2936008993726736E-8	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999994649144169	WITHOUT_CLASSIFICATION	5.350855830868053E-7	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999997366983687	WITHOUT_CLASSIFICATION	2.633016312889342E-7	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999971251741814	WITHOUT_CLASSIFICATION	2.874825818762005E-6	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999994415905122	WITHOUT_CLASSIFICATION	5.584094877409644E-7	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999998237340316	WITHOUT_CLASSIFICATION	1.7626596831347076E-7	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9999210870432614	WITHOUT_CLASSIFICATION	7.891295673861081E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999695118837236	WITHOUT_CLASSIFICATION	3.04881162763791E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999695118837236	WITHOUT_CLASSIFICATION	3.04881162763791E-5	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9999569268143457	WITHOUT_CLASSIFICATION	4.307318565440245E-5	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9999991395500282	WITHOUT_CLASSIFICATION	8.604499717749376E-7	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999862910682179	WITHOUT_CLASSIFICATION	1.3708931782095614E-5	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999998226180646	WITHOUT_CLASSIFICATION	1.773819353715315E-7	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999999575613804	WITHOUT_CLASSIFICATION	4.2438619569602514E-8	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9998987474454039	WITHOUT_CLASSIFICATION	1.0125255459615803E-4	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.999988091124469	WITHOUT_CLASSIFICATION	1.1908875531075821E-5	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999996574732977	WITHOUT_CLASSIFICATION	3.425267022820977E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999975875548925	WITHOUT_CLASSIFICATION	2.4124451074133676E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999956692654425	WITHOUT_CLASSIFICATION	4.330734557478866E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999992111212105	WITHOUT_CLASSIFICATION	7.888787895213332E-7	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999835414750992	WITHOUT_CLASSIFICATION	1.645852490077789E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999835414750992	WITHOUT_CLASSIFICATION	1.645852490077789E-5	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999999845522828	WITHOUT_CLASSIFICATION	1.5447717190161388E-8	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999999928130986	WITHOUT_CLASSIFICATION	7.186901341506984E-9	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999997474300334	WITHOUT_CLASSIFICATION	2.52569966618116E-7	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999976633315988	WITHOUT_CLASSIFICATION	2.3366684012837307E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999998740969359	WITHOUT_CLASSIFICATION	1.2590306413671663E-7	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999914390342822	WITHOUT_CLASSIFICATION	8.560965717787503E-6	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999858948173	WITHOUT_CLASSIFICATION	1.4105182827046809E-8	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999995347049723	WITHOUT_CLASSIFICATION	4.652950277607446E-7	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999100919924	WITHOUT_CLASSIFICATION	8.990800763717426E-8	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999990312441978	WITHOUT_CLASSIFICATION	9.687558022948174E-7	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999999309921758	WITHOUT_CLASSIFICATION	6.900782423280432E-8	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999995561958136	WITHOUT_CLASSIFICATION	4.4380418639110437E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999971545567548	WITHOUT_CLASSIFICATION	2.8454432451911266E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999971545567548	WITHOUT_CLASSIFICATION	2.8454432451911266E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.999999866105101	WITHOUT_CLASSIFICATION	1.3389489900616272E-7	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.99999960556649	WITHOUT_CLASSIFICATION	3.9443351003474587E-7	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999993356653843	WITHOUT_CLASSIFICATION	6.643346156784213E-7	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999592725978	WITHOUT_CLASSIFICATION	4.0727402309784507E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999995571861972	WITHOUT_CLASSIFICATION	4.4281380283526634E-7	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999984590543229	WITHOUT_CLASSIFICATION	1.5409456770866717E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.999993949778117	WITHOUT_CLASSIFICATION	6.050221883083868E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9999937736990855	WITHOUT_CLASSIFICATION	6.226300914542008E-6	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.999983308333704	WITHOUT_CLASSIFICATION	1.6691666295978996E-5	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9999999580585767	WITHOUT_CLASSIFICATION	4.194142325531754E-8	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999986326981712	WITHOUT_CLASSIFICATION	1.3673018287389258E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999993372311221	WITHOUT_CLASSIFICATION	6.627688777976855E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.999999228296886	WITHOUT_CLASSIFICATION	7.717031139297095E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999964466498387	WITHOUT_CLASSIFICATION	3.5533501613729428E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9996824419081376	WITHOUT_CLASSIFICATION	3.175580918624096E-4	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.9990935161196068	WITHOUT_CLASSIFICATION	9.064838803931463E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9990716904621952	WITHOUT_CLASSIFICATION	9.283095378046626E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9990716904621952	WITHOUT_CLASSIFICATION	9.283095378046626E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9990716904621952	WITHOUT_CLASSIFICATION	9.283095378046626E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999729711767732	WITHOUT_CLASSIFICATION	2.7028823226779777E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999729711767732	WITHOUT_CLASSIFICATION	2.7028823226779777E-5	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.999999451281691	WITHOUT_CLASSIFICATION	5.487183089055869E-7	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.927045382993292	WITHOUT_CLASSIFICATION	0.072954617006708	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999972879571083	WITHOUT_CLASSIFICATION	2.7120428917310706E-6	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999983032153876	WITHOUT_CLASSIFICATION	1.6967846123348466E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999984241499021	WITHOUT_CLASSIFICATION	1.5758500978366493E-6	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999983120274984	WITHOUT_CLASSIFICATION	1.6879725015658498E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9996824419081376	WITHOUT_CLASSIFICATION	3.175580918624096E-4	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999999145262776	WITHOUT_CLASSIFICATION	8.547372241146257E-8	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.9999977687360515	WITHOUT_CLASSIFICATION	2.2312639484714605E-6	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9999977063729095	WITHOUT_CLASSIFICATION	2.2936270905379864E-6	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9997699007445565	WITHOUT_CLASSIFICATION	2.3009925544355118E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999932594045404	WITHOUT_CLASSIFICATION	6.7405954596376405E-6	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999866403682199	WITHOUT_CLASSIFICATION	1.3359631779995165E-5	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999996447065284	WITHOUT_CLASSIFICATION	3.5529347168319856E-7	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999977735101354	WITHOUT_CLASSIFICATION	2.2264898645221508E-6	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9999995852590503	WITHOUT_CLASSIFICATION	4.147409497794696E-7	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.999733420734539	WITHOUT_CLASSIFICATION	2.6657926546101837E-4	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999924972575605	WITHOUT_CLASSIFICATION	7.5027424395030305E-6	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999969300580834	WITHOUT_CLASSIFICATION	3.0699419164895482E-6	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999995162365389	WITHOUT_CLASSIFICATION	4.83763460968448E-7	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999963681990057	WITHOUT_CLASSIFICATION	3.6318009943693603E-6	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9999989845117309	WITHOUT_CLASSIFICATION	1.0154882691258771E-6	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999983962188825	WITHOUT_CLASSIFICATION	1.6037811174669138E-6	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999996074870652	WITHOUT_CLASSIFICATION	3.9251293483010506E-7	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999705239733	WITHOUT_CLASSIFICATION	2.9476026693562668E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999999705239733	WITHOUT_CLASSIFICATION	2.9476026693562668E-8	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9999268480530856	WITHOUT_CLASSIFICATION	7.315194691432049E-5	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999989649214014	WITHOUT_CLASSIFICATION	1.0350785986391833E-6	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999919512757484	WITHOUT_CLASSIFICATION	8.048724251616477E-6	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9845617795070133	WITHOUT_CLASSIFICATION	0.015438220492986647	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9999856805209805	WITHOUT_CLASSIFICATION	1.4319479019574332E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999977743542264	WITHOUT_CLASSIFICATION	2.225645773576442E-6	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999977743542264	WITHOUT_CLASSIFICATION	2.225645773576442E-6	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999995933183932	WITHOUT_CLASSIFICATION	4.0668160686334637E-7	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999984705339846	WITHOUT_CLASSIFICATION	1.5294660153841947E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999970591881475	WITHOUT_CLASSIFICATION	2.9408118525921773E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999970591881475	WITHOUT_CLASSIFICATION	2.9408118525921773E-6	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999916741212	WITHOUT_CLASSIFICATION	8.325878763421058E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999985734188811	WITHOUT_CLASSIFICATION	1.4265811189683172E-6	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999937120695584	WITHOUT_CLASSIFICATION	6.287930441528095E-6	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992335204829	WITHOUT_CLASSIFICATION	7.664795170080906E-7	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9998122791706239	WITHOUT_CLASSIFICATION	1.877208293761223E-4	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999994619106772	WITHOUT_CLASSIFICATION	5.380893227573155E-7	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999996983832659	WITHOUT_CLASSIFICATION	3.0161673415632176E-7	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999998078105197	WITHOUT_CLASSIFICATION	1.9218948025394992E-7	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999932395261615	WITHOUT_CLASSIFICATION	6.760473838541398E-6	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999640544441	WITHOUT_CLASSIFICATION	3.594555587294643E-8	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9999999231243057	WITHOUT_CLASSIFICATION	7.687569420071878E-8	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9999997732262937	WITHOUT_CLASSIFICATION	2.2677370617295532E-7	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999983552288543	WITHOUT_CLASSIFICATION	1.6447711457315374E-6	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999997620107528	WITHOUT_CLASSIFICATION	2.3798924734765967E-7	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999989333240474	WITHOUT_CLASSIFICATION	1.0666759525541274E-6	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999990369974006	WITHOUT_CLASSIFICATION	9.630025994597144E-7	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9754486709293535	WITHOUT_CLASSIFICATION	0.02455132907064649	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999949459702008	WITHOUT_CLASSIFICATION	5.0540297992322315E-6	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999526970060031	WITHOUT_CLASSIFICATION	4.7302993996909056E-5	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9999606402486035	WITHOUT_CLASSIFICATION	3.9359751396487234E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9975889112894529	WITHOUT_CLASSIFICATION	0.002411088710547098	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9975889112894529	WITHOUT_CLASSIFICATION	0.002411088710547098	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9975889112894529	WITHOUT_CLASSIFICATION	0.002411088710547098	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9975889112894529	WITHOUT_CLASSIFICATION	0.002411088710547098	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9975889112894529	WITHOUT_CLASSIFICATION	0.002411088710547098	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9975818524681669	WITHOUT_CLASSIFICATION	0.0024181475318332205	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999982783849283	WITHOUT_CLASSIFICATION	1.7216150717399632E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999996232119435	WITHOUT_CLASSIFICATION	3.7678805649972786E-7	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999604652504	WITHOUT_CLASSIFICATION	3.953474971694749E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999979004414703	WITHOUT_CLASSIFICATION	2.0995585297073598E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999979004414703	WITHOUT_CLASSIFICATION	2.0995585297073598E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999979004414703	WITHOUT_CLASSIFICATION	2.0995585297073598E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999979004414703	WITHOUT_CLASSIFICATION	2.0995585297073598E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999993203405513	WITHOUT_CLASSIFICATION	6.796594487147584E-7	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999999473617791	WITHOUT_CLASSIFICATION	5.263822079789613E-8	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9999789471898308	WITHOUT_CLASSIFICATION	2.1052810169228018E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999906581104705	WITHOUT_CLASSIFICATION	9.341889529602162E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999906581104705	WITHOUT_CLASSIFICATION	9.341889529602162E-6	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999960458265242	WITHOUT_CLASSIFICATION	3.9541734758261364E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999996640271711	WITHOUT_CLASSIFICATION	3.359728288822587E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999996640271711	WITHOUT_CLASSIFICATION	3.359728288822587E-7	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999649345691961	WITHOUT_CLASSIFICATION	3.5065430803794775E-5	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999997552816913	WITHOUT_CLASSIFICATION	2.4471830874078784E-7	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999934883537361	WITHOUT_CLASSIFICATION	6.511646263837333E-6	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999983615214131	WITHOUT_CLASSIFICATION	1.6384785869049597E-6	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999994267722521	WITHOUT_CLASSIFICATION	5.732277479065878E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999998610729024	WITHOUT_CLASSIFICATION	1.3892709765250145E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999998610729024	WITHOUT_CLASSIFICATION	1.3892709765250145E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9663349133951685	WITHOUT_CLASSIFICATION	0.03366508660483139	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999991145161969	WITHOUT_CLASSIFICATION	8.854838031228333E-7	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999981687231372	WITHOUT_CLASSIFICATION	1.8312768629011893E-6	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.999999307705542	WITHOUT_CLASSIFICATION	6.922944580284757E-7	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9998492821605138	WITHOUT_CLASSIFICATION	1.5071783948628087E-4	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999894066802276	WITHOUT_CLASSIFICATION	1.0593319772312335E-5	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999828789587635	WITHOUT_CLASSIFICATION	1.7121041236546375E-5	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.999995387541724	WITHOUT_CLASSIFICATION	4.612458276011485E-6	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.999984619116205	WITHOUT_CLASSIFICATION	1.5380883795062052E-5	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999819023898802	WITHOUT_CLASSIFICATION	1.8097610119828757E-5	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9999290311547991	WITHOUT_CLASSIFICATION	7.096884520084813E-5	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9999794229362001	WITHOUT_CLASSIFICATION	2.057706379989181E-5	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999952551057684	WITHOUT_CLASSIFICATION	4.744894231605635E-6	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9995282115449547	WITHOUT_CLASSIFICATION	4.717884550452586E-4	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.999999872050408	WITHOUT_CLASSIFICATION	1.2794959195587078E-7	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999989069305987	WITHOUT_CLASSIFICATION	1.0930694012913813E-6	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.999975818098717	WITHOUT_CLASSIFICATION	2.4181901282897826E-5	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999995193555854	WITHOUT_CLASSIFICATION	4.806444145087815E-7	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999849889149801	WITHOUT_CLASSIFICATION	1.5011085019890724E-5	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999910843044266	WITHOUT_CLASSIFICATION	8.915695573384696E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999982545101299	WITHOUT_CLASSIFICATION	1.7454898700637273E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999982545101299	WITHOUT_CLASSIFICATION	1.7454898700637273E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999957581539998	WITHOUT_CLASSIFICATION	4.241846000227925E-6	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9997093508564926	WITHOUT_CLASSIFICATION	2.906491435073474E-4	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.993307528161364	WITHOUT_CLASSIFICATION	0.006692471838636026	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.987109830385328	WITHOUT_CLASSIFICATION	0.012890169614672157	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9998935806598982	WITHOUT_CLASSIFICATION	1.0641934010172253E-4	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.999992187699571	WITHOUT_CLASSIFICATION	7.812300429042116E-6	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.9965994822438929	WITHOUT_CLASSIFICATION	0.003400517756107164	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9995587699540334	WITHOUT_CLASSIFICATION	4.412300459665616E-4	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.5677061278912535	WITHOUT_CLASSIFICATION	0.43229387210874654	DEFECT
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9998800787959942	WITHOUT_CLASSIFICATION	1.1992120400584194E-4	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9999744577828363	WITHOUT_CLASSIFICATION	2.5542217163738452E-5	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.9172311463647144	DEFECT	0.08276885363528563	WITHOUT_CLASSIFICATION
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.5677061278912535	WITHOUT_CLASSIFICATION	0.43229387210874654	DEFECT
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.9937479007114672	WITHOUT_CLASSIFICATION	0.006252099288532707	DEFECT
