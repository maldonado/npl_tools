/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9999662106925941	WITHOUT_CLASSIFICATION	3.3789307405927825E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998097859241637	WITHOUT_CLASSIFICATION	1.90214075836262E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999961672832499	WITHOUT_CLASSIFICATION	3.832716750107479E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999961672832499	WITHOUT_CLASSIFICATION	3.832716750107479E-6	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999607195813817	WITHOUT_CLASSIFICATION	3.928041861846109E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999733265464548	WITHOUT_CLASSIFICATION	2.6673453545334488E-5	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999994364899593	WITHOUT_CLASSIFICATION	5.635100407400606E-7	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999956632754053	WITHOUT_CLASSIFICATION	4.33672459460154E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999802037617815	WITHOUT_CLASSIFICATION	1.979623821851689E-5	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999852599044526	WITHOUT_CLASSIFICATION	1.4740095547228018E-5	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9999999779294212	WITHOUT_CLASSIFICATION	2.2070578712871787E-8	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999828796468032	WITHOUT_CLASSIFICATION	1.7120353196746158E-5	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999983278948289	WITHOUT_CLASSIFICATION	1.672105170983932E-6	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9996354031551655	WITHOUT_CLASSIFICATION	3.645968448344541E-4	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999954741215048	WITHOUT_CLASSIFICATION	4.5258784951855135E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9999966286911076	WITHOUT_CLASSIFICATION	3.3713088924414074E-6	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9999966286911076	WITHOUT_CLASSIFICATION	3.3713088924414074E-6	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999988248408307	WITHOUT_CLASSIFICATION	1.1751591692856318E-6	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999546501837998	WITHOUT_CLASSIFICATION	4.53498162001766E-5	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9986270979316313	WITHOUT_CLASSIFICATION	0.001372902068368703	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999950468348747	WITHOUT_CLASSIFICATION	4.95316512525595E-6	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.999972120794303	WITHOUT_CLASSIFICATION	2.7879205697039275E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999951323655675	WITHOUT_CLASSIFICATION	4.867634432564739E-6	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999965157466874	WITHOUT_CLASSIFICATION	3.4842533127129187E-6	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999924990405856	WITHOUT_CLASSIFICATION	7.500959414399421E-6	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.999993377182806	WITHOUT_CLASSIFICATION	6.622817194036624E-6	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999968292616672	WITHOUT_CLASSIFICATION	3.1707383327993464E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999846525139903	WITHOUT_CLASSIFICATION	1.534748600980514E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999980956642975	WITHOUT_CLASSIFICATION	1.9043357024851244E-6	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999948986871826	WITHOUT_CLASSIFICATION	5.101312817298255E-6	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999914261879262	WITHOUT_CLASSIFICATION	8.573812073746829E-6	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999990083058938	WITHOUT_CLASSIFICATION	9.916941061318517E-7	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999973910110773	WITHOUT_CLASSIFICATION	2.608988922694751E-6	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999830632449354	WITHOUT_CLASSIFICATION	1.6936755064554824E-5	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999704744048237	WITHOUT_CLASSIFICATION	2.9525595176288963E-5	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999841253250258	WITHOUT_CLASSIFICATION	1.5874674974246797E-5	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9998116750294865	WITHOUT_CLASSIFICATION	1.8832497051332866E-4	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999950468348747	WITHOUT_CLASSIFICATION	4.95316512525595E-6	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999827242479434	WITHOUT_CLASSIFICATION	1.7275752056565026E-5	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999879619621022	WITHOUT_CLASSIFICATION	1.2038037897797438E-5	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999879619621022	WITHOUT_CLASSIFICATION	1.2038037897797438E-5	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999999692367506	WITHOUT_CLASSIFICATION	3.076324929939071E-8	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999971168356666	WITHOUT_CLASSIFICATION	2.8831643334557066E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999920149235552	WITHOUT_CLASSIFICATION	7.985076444862265E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999920149235552	WITHOUT_CLASSIFICATION	7.985076444862265E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999931340563398	WITHOUT_CLASSIFICATION	6.86594366008964E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.999995698734018	WITHOUT_CLASSIFICATION	4.301265982088011E-6	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999961976808666	WITHOUT_CLASSIFICATION	3.80231913345449E-6	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999645436543195	WITHOUT_CLASSIFICATION	3.545634568047893E-5	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999961643306764	WITHOUT_CLASSIFICATION	3.835669323551691E-6	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999942096438122	WITHOUT_CLASSIFICATION	5.79035618777528E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999965254710727	WITHOUT_CLASSIFICATION	3.47452892732594E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999932536533992	WITHOUT_CLASSIFICATION	6.746346600854262E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999932536533992	WITHOUT_CLASSIFICATION	6.746346600854262E-6	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999944184752896	WITHOUT_CLASSIFICATION	5.581524710413242E-6	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999990063101393	WITHOUT_CLASSIFICATION	9.936898607415157E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999974190794672	WITHOUT_CLASSIFICATION	2.580920532880695E-6	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999974190794672	WITHOUT_CLASSIFICATION	2.580920532880695E-6	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999998440245814	WITHOUT_CLASSIFICATION	1.5597541853385652E-7	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999902547972377	WITHOUT_CLASSIFICATION	9.74520276229151E-6	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9997060145628548	WITHOUT_CLASSIFICATION	2.939854371451863E-4	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9998531353782111	WITHOUT_CLASSIFICATION	1.468646217889635E-4	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.999999394972565	WITHOUT_CLASSIFICATION	6.050274350671212E-7	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999789048444155	WITHOUT_CLASSIFICATION	2.109515558442716E-5	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999728782579748	WITHOUT_CLASSIFICATION	2.7121742025277977E-5	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999974040309437	WITHOUT_CLASSIFICATION	2.5959690562688963E-6	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999844781186904	WITHOUT_CLASSIFICATION	1.5521881309631833E-5	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999198565679782	WITHOUT_CLASSIFICATION	8.014343202183437E-5	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.999993574023035	WITHOUT_CLASSIFICATION	6.42597696503729E-6	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999763039303425	WITHOUT_CLASSIFICATION	2.3696069657534286E-5	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9994344821123211	WITHOUT_CLASSIFICATION	5.655178876789271E-4	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999985425827852	WITHOUT_CLASSIFICATION	1.4574172148293528E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999958691562795	WITHOUT_CLASSIFICATION	4.1308437205303855E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999958691562795	WITHOUT_CLASSIFICATION	4.1308437205303855E-6	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9998531353782111	WITHOUT_CLASSIFICATION	1.468646217889635E-4	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9998527345376998	WITHOUT_CLASSIFICATION	1.4726546230016787E-4	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9998531353782111	WITHOUT_CLASSIFICATION	1.468646217889635E-4	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.9998199621086422	WITHOUT_CLASSIFICATION	1.8003789135783243E-4	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9998527345376998	WITHOUT_CLASSIFICATION	1.4726546230016787E-4	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9998455953311336	WITHOUT_CLASSIFICATION	1.544046688663079E-4	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9998055326893892	WITHOUT_CLASSIFICATION	1.944673106107305E-4	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9998699820717732	WITHOUT_CLASSIFICATION	1.3001792822670938E-4	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999999421914784	WITHOUT_CLASSIFICATION	5.7808521630839985E-8	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999804000783974	WITHOUT_CLASSIFICATION	1.9599921602603277E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999804000783974	WITHOUT_CLASSIFICATION	1.9599921602603277E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999804000783974	WITHOUT_CLASSIFICATION	1.9599921602603277E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999804000783974	WITHOUT_CLASSIFICATION	1.9599921602603277E-5	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999689082428341	WITHOUT_CLASSIFICATION	3.1091757165901366E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999937152812772	WITHOUT_CLASSIFICATION	6.284718722754809E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999937152812772	WITHOUT_CLASSIFICATION	6.284718722754809E-6	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.99998649746213	WITHOUT_CLASSIFICATION	1.3502537869947988E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999937152812772	WITHOUT_CLASSIFICATION	6.284718722754809E-6	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999504925242744	WITHOUT_CLASSIFICATION	4.950747572569473E-5	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9999919486015576	WITHOUT_CLASSIFICATION	8.051398442443323E-6	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999979705981615	WITHOUT_CLASSIFICATION	2.0294018384998796E-6	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999985086362508	WITHOUT_CLASSIFICATION	1.491363749139867E-6	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999796626611165	WITHOUT_CLASSIFICATION	2.0337338883539715E-5	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.999980999695825	WITHOUT_CLASSIFICATION	1.9000304175075655E-5	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999903980044818	WITHOUT_CLASSIFICATION	9.601995518261517E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9999988406898354	WITHOUT_CLASSIFICATION	1.1593101646864428E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999953243670695	WITHOUT_CLASSIFICATION	4.675632930393192E-6	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999994423671703	WITHOUT_CLASSIFICATION	5.576328297156768E-7	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999746812227094	WITHOUT_CLASSIFICATION	2.5318777290504036E-5	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999935437172444	WITHOUT_CLASSIFICATION	6.456282755749035E-6	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9999848935537137	WITHOUT_CLASSIFICATION	1.5106446286359175E-5	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.999926992609351	WITHOUT_CLASSIFICATION	7.300739064894035E-5	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999834417263903	WITHOUT_CLASSIFICATION	1.655827360963456E-5	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999480911271955	WITHOUT_CLASSIFICATION	5.190887280449929E-5	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9999236612075778	WITHOUT_CLASSIFICATION	7.633879242217038E-5	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999898157661985	WITHOUT_CLASSIFICATION	1.0184233801495775E-5	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999943890873338	WITHOUT_CLASSIFICATION	5.610912666102834E-6	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999981566655929	WITHOUT_CLASSIFICATION	1.8433344071392456E-6	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999896152380053	WITHOUT_CLASSIFICATION	1.0384761994696913E-5	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999984451655348	WITHOUT_CLASSIFICATION	1.5548344651452159E-6	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999916042221281	WITHOUT_CLASSIFICATION	8.395777871964143E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999953243670695	WITHOUT_CLASSIFICATION	4.675632930393192E-6	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.999993450759715	WITHOUT_CLASSIFICATION	6.549240284944879E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999865410816922	WITHOUT_CLASSIFICATION	1.3458918307930642E-5	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999856110148437	WITHOUT_CLASSIFICATION	1.4388985156176934E-5	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999760585477749	WITHOUT_CLASSIFICATION	2.3941452225039893E-5	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999970407534722	WITHOUT_CLASSIFICATION	2.9592465277464743E-6	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999983584491291	WITHOUT_CLASSIFICATION	1.641550870932274E-6	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999954054171923	WITHOUT_CLASSIFICATION	4.594582807634363E-6	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999979143091206	WITHOUT_CLASSIFICATION	2.085690879396907E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999987601326433	WITHOUT_CLASSIFICATION	1.2398673566799772E-6	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999988542649829	WITHOUT_CLASSIFICATION	1.1457350171102906E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999995328442712	WITHOUT_CLASSIFICATION	4.671557287348285E-7	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999995902927604	WITHOUT_CLASSIFICATION	4.097072395748653E-7	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999968511357701	WITHOUT_CLASSIFICATION	3.1488642298627117E-6	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999974520069151	WITHOUT_CLASSIFICATION	2.547993084834991E-6	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999953668959218	WITHOUT_CLASSIFICATION	4.633104078096696E-6	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.999995586378909	WITHOUT_CLASSIFICATION	4.413621090955517E-6	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999918240933238	WITHOUT_CLASSIFICATION	8.17590667624381E-6	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9985668783476919	WITHOUT_CLASSIFICATION	0.0014331216523081416	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999487452183903	WITHOUT_CLASSIFICATION	5.1254781609753964E-5	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999980722002488	WITHOUT_CLASSIFICATION	1.927799751147062E-6	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999926210320074	WITHOUT_CLASSIFICATION	7.378967992607738E-6	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999957375425245	WITHOUT_CLASSIFICATION	4.262457475457307E-6	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999970866528829	WITHOUT_CLASSIFICATION	2.9133471170362245E-6	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9999907287098578	WITHOUT_CLASSIFICATION	9.271290142187955E-6	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999966987930469	WITHOUT_CLASSIFICATION	3.301206953115907E-6	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.999997975358137	WITHOUT_CLASSIFICATION	2.024641862970299E-6	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999896428747233	WITHOUT_CLASSIFICATION	1.0357125276763878E-5	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.999995244716542	WITHOUT_CLASSIFICATION	4.755283458063444E-6	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9999962619379047	WITHOUT_CLASSIFICATION	3.7380620952154298E-6	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999913466082413	WITHOUT_CLASSIFICATION	8.653391758684307E-6	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999753376340651	WITHOUT_CLASSIFICATION	2.4662365934891132E-5	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999895316319577	WITHOUT_CLASSIFICATION	1.0468368042302347E-5	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999971490965562	WITHOUT_CLASSIFICATION	2.8509034437968386E-6	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.999884738074386	WITHOUT_CLASSIFICATION	1.1526192561384153E-4	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999504925242744	WITHOUT_CLASSIFICATION	4.950747572569473E-5	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.99999905468192	WITHOUT_CLASSIFICATION	9.453180800262251E-7	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999792198900207	WITHOUT_CLASSIFICATION	2.0780109979326218E-5	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999959598482857	WITHOUT_CLASSIFICATION	4.040151714241323E-6	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9998862366251337	WITHOUT_CLASSIFICATION	1.1376337486624716E-4	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9999951689349503	WITHOUT_CLASSIFICATION	4.8310650496760745E-6	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999673206165034	WITHOUT_CLASSIFICATION	3.267938349670415E-5	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999655298625781	WITHOUT_CLASSIFICATION	3.447013742184912E-5	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999986794903868	WITHOUT_CLASSIFICATION	1.320509613133424E-6	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999995822465668	WITHOUT_CLASSIFICATION	4.177534331385835E-7	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999940244585782	WITHOUT_CLASSIFICATION	5.975541421742152E-6	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999973272754964	WITHOUT_CLASSIFICATION	2.672724503730174E-6	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9998835663754291	WITHOUT_CLASSIFICATION	1.1643362457081686E-4	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9998969513968848	WITHOUT_CLASSIFICATION	1.0304860311517585E-4	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999927115078293	WITHOUT_CLASSIFICATION	7.288492170684088E-6	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9999956242587174	WITHOUT_CLASSIFICATION	4.375741282645336E-6	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999960174875089	WITHOUT_CLASSIFICATION	3.982512491129322E-6	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999955774420312	WITHOUT_CLASSIFICATION	4.422557968844064E-6	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.999996877209657	WITHOUT_CLASSIFICATION	3.122790342930703E-6	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999972552451257	WITHOUT_CLASSIFICATION	2.744754874310832E-6	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999802337297938	WITHOUT_CLASSIFICATION	1.97662702061435E-5	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999841197225084	WITHOUT_CLASSIFICATION	1.5880277491577585E-5	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.999998718168027	WITHOUT_CLASSIFICATION	1.281831973023044E-6	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999825057573059	WITHOUT_CLASSIFICATION	1.7494242694229512E-5	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999763051820619	WITHOUT_CLASSIFICATION	2.3694817938118536E-5	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999763051820619	WITHOUT_CLASSIFICATION	2.3694817938118536E-5	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.999992986333727	WITHOUT_CLASSIFICATION	7.0136662730542815E-6	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999911967626327	WITHOUT_CLASSIFICATION	8.803237367276854E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999655209043443	WITHOUT_CLASSIFICATION	3.447909565567267E-5	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999655209043443	WITHOUT_CLASSIFICATION	3.447909565567267E-5	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999946879887014	WITHOUT_CLASSIFICATION	5.31201129856598E-6	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999962152446483	WITHOUT_CLASSIFICATION	3.7847553516074616E-6	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9998928175896602	WITHOUT_CLASSIFICATION	1.071824103398348E-4	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999939748269892	WITHOUT_CLASSIFICATION	6.025173010878301E-6	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999314804009353	WITHOUT_CLASSIFICATION	6.851959906479217E-5	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999945234901958	WITHOUT_CLASSIFICATION	5.4765098042268655E-6	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999048934805019	WITHOUT_CLASSIFICATION	9.510651949808552E-5	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9999574130112137	WITHOUT_CLASSIFICATION	4.258698878626499E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999857607145977	WITHOUT_CLASSIFICATION	1.4239285402365383E-5	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999966731335218	WITHOUT_CLASSIFICATION	3.3268664782057215E-6	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999929414804943	WITHOUT_CLASSIFICATION	7.058519505689276E-6	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999989138709374	WITHOUT_CLASSIFICATION	1.0861290624935888E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999801476052199	WITHOUT_CLASSIFICATION	1.9852394780090863E-5	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999956632754053	WITHOUT_CLASSIFICATION	4.33672459460154E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999802037617815	WITHOUT_CLASSIFICATION	1.979623821851689E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999958691562795	WITHOUT_CLASSIFICATION	4.1308437205303855E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999801476052199	WITHOUT_CLASSIFICATION	1.9852394780090863E-5	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9971616848681981	WITHOUT_CLASSIFICATION	0.002838315131801834	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978383981105	WITHOUT_CLASSIFICATION	2.1616018894566996E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978383981105	WITHOUT_CLASSIFICATION	2.1616018894566996E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978383981105	WITHOUT_CLASSIFICATION	2.1616018894566996E-6	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999909134004581	WITHOUT_CLASSIFICATION	9.086599541836262E-6	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999266728604035	WITHOUT_CLASSIFICATION	7.332713959655451E-5	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.999955167240292	WITHOUT_CLASSIFICATION	4.4832759708041715E-5	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9994209806175425	WITHOUT_CLASSIFICATION	5.790193824574441E-4	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9987380194592965	WITHOUT_CLASSIFICATION	0.0012619805407034768	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999926818181917	WITHOUT_CLASSIFICATION	7.318181808296525E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9971616848681981	WITHOUT_CLASSIFICATION	0.002838315131801834	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999958838508977	WITHOUT_CLASSIFICATION	4.116149102302006E-6	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.999842652132977	WITHOUT_CLASSIFICATION	1.573478670230481E-4	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.999999563065263	WITHOUT_CLASSIFICATION	4.369347370734242E-7	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999776244879509	WITHOUT_CLASSIFICATION	2.2375512049092246E-5	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999802384678057	WITHOUT_CLASSIFICATION	1.976153219425577E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999958691562795	WITHOUT_CLASSIFICATION	4.1308437205303855E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999958691562795	WITHOUT_CLASSIFICATION	4.1308437205303855E-6	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999857607145977	WITHOUT_CLASSIFICATION	1.4239285402365383E-5	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999958838508977	WITHOUT_CLASSIFICATION	4.116149102302006E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999771472606133	WITHOUT_CLASSIFICATION	2.2852739386735056E-5	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999771472606133	WITHOUT_CLASSIFICATION	2.2852739386735056E-5	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999771472606133	WITHOUT_CLASSIFICATION	2.2852739386735056E-5	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.999900912025762	WITHOUT_CLASSIFICATION	9.908797423795394E-5	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.999900912025762	WITHOUT_CLASSIFICATION	9.908797423795394E-5	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9998664698048267	WITHOUT_CLASSIFICATION	1.3353019517320358E-4	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9998664698048267	WITHOUT_CLASSIFICATION	1.3353019517320358E-4	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9998635745652729	WITHOUT_CLASSIFICATION	1.364254347271507E-4	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999133632798478	WITHOUT_CLASSIFICATION	8.663672015225015E-5	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999133632798478	WITHOUT_CLASSIFICATION	8.663672015225015E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999954635865723	WITHOUT_CLASSIFICATION	4.536413427623498E-6	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.999998203700515	WITHOUT_CLASSIFICATION	1.7962994851218722E-6	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.999910049000947	WITHOUT_CLASSIFICATION	8.995099905297071E-5	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999524224714158	WITHOUT_CLASSIFICATION	4.7577528584187266E-5	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999524224714158	WITHOUT_CLASSIFICATION	4.7577528584187266E-5	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999508429479298	WITHOUT_CLASSIFICATION	4.915705207029195E-5	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999508429479298	WITHOUT_CLASSIFICATION	4.915705207029195E-5	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999538329811518	WITHOUT_CLASSIFICATION	4.6167018848268934E-5	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999777585393574	WITHOUT_CLASSIFICATION	2.2241460642506885E-5	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9998694395002146	WITHOUT_CLASSIFICATION	1.3056049978538885E-4	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9997507060873684	WITHOUT_CLASSIFICATION	2.4929391263167497E-4	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999340516942101	WITHOUT_CLASSIFICATION	6.594830578987434E-5	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9998915055467418	WITHOUT_CLASSIFICATION	1.0849445325824849E-4	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999764648569163	WITHOUT_CLASSIFICATION	2.3535143083687423E-5	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.999998389816486	WITHOUT_CLASSIFICATION	1.6101835138939644E-6	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.999938957995856	WITHOUT_CLASSIFICATION	6.104200414400368E-5	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.999999010205948	WITHOUT_CLASSIFICATION	9.897940520410329E-7	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999919142764474	WITHOUT_CLASSIFICATION	8.085723552652722E-6	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999966470538088	WITHOUT_CLASSIFICATION	3.352946191251239E-6	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999965279225086	WITHOUT_CLASSIFICATION	3.472077491322831E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9998764594003304	WITHOUT_CLASSIFICATION	1.2354059966963236E-4	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9992472698815802	WITHOUT_CLASSIFICATION	7.527301184197356E-4	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999934398009694	WITHOUT_CLASSIFICATION	6.560199030522452E-6	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999983766106761	WITHOUT_CLASSIFICATION	1.6233893237704918E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9998764594003304	WITHOUT_CLASSIFICATION	1.2354059966963236E-4	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999989072701275	WITHOUT_CLASSIFICATION	1.0927298724867512E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9998764594003304	WITHOUT_CLASSIFICATION	1.2354059966963236E-4	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9992472698815802	WITHOUT_CLASSIFICATION	7.527301184197356E-4	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999994945865297	WITHOUT_CLASSIFICATION	5.054134704122214E-7	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999982718490373	WITHOUT_CLASSIFICATION	1.7281509626126748E-6	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.999995157381425	WITHOUT_CLASSIFICATION	4.8426185750408034E-6	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999993388824844	WITHOUT_CLASSIFICATION	6.611175156717021E-7	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999988672465772	WITHOUT_CLASSIFICATION	1.1327534227704754E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999820429575899	WITHOUT_CLASSIFICATION	1.795704241018948E-5	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999997050217603	WITHOUT_CLASSIFICATION	2.9497823970517513E-7	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999988281223203	WITHOUT_CLASSIFICATION	1.1718776797259845E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999820429575899	WITHOUT_CLASSIFICATION	1.795704241018948E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999820429575899	WITHOUT_CLASSIFICATION	1.795704241018948E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999820429575899	WITHOUT_CLASSIFICATION	1.795704241018948E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999820429575899	WITHOUT_CLASSIFICATION	1.795704241018948E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999930121901689	WITHOUT_CLASSIFICATION	6.987809830987201E-6	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999900178547357	WITHOUT_CLASSIFICATION	9.982145264235188E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999968632841114	WITHOUT_CLASSIFICATION	3.136715888588022E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999968632841114	WITHOUT_CLASSIFICATION	3.136715888588022E-6	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999995159096184	WITHOUT_CLASSIFICATION	4.840903814721739E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999989306055052	WITHOUT_CLASSIFICATION	1.0693944947823988E-6	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999982578050205	WITHOUT_CLASSIFICATION	1.7421949794370206E-6	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999977874340786	WITHOUT_CLASSIFICATION	2.212565921384372E-6	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999999353016016	WITHOUT_CLASSIFICATION	6.469839839432993E-8	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999942946403144	WITHOUT_CLASSIFICATION	5.705359685612895E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999942946403144	WITHOUT_CLASSIFICATION	5.705359685612895E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999942946403144	WITHOUT_CLASSIFICATION	5.705359685612895E-6	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999997392140834	WITHOUT_CLASSIFICATION	2.607859166443672E-7	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999966906905557	WITHOUT_CLASSIFICATION	3.3093094443154924E-6	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999994676717063	WITHOUT_CLASSIFICATION	5.323282936188452E-7	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999704730068327	WITHOUT_CLASSIFICATION	2.9526993167253284E-5	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999451844617127	WITHOUT_CLASSIFICATION	5.481553828729298E-5	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999941236779912	WITHOUT_CLASSIFICATION	5.876322008725067E-6	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.999988644034421	WITHOUT_CLASSIFICATION	1.1355965578971052E-5	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999516301028369	WITHOUT_CLASSIFICATION	4.8369897162959426E-5	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999928711822776	WITHOUT_CLASSIFICATION	7.12881772239856E-6	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999758762010151	WITHOUT_CLASSIFICATION	2.412379898487361E-5	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999905174819452	WITHOUT_CLASSIFICATION	9.482518054727726E-6	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999944758725534	WITHOUT_CLASSIFICATION	5.524127446634211E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999997331658638	WITHOUT_CLASSIFICATION	2.668341363202871E-7	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.999993421074072	WITHOUT_CLASSIFICATION	6.578925928038663E-6	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999274421310895	WITHOUT_CLASSIFICATION	7.255786891054325E-5	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999938696051586	WITHOUT_CLASSIFICATION	6.130394841350876E-6	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999274421310895	WITHOUT_CLASSIFICATION	7.255786891054325E-5	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999981789675493	WITHOUT_CLASSIFICATION	1.8210324507481704E-6	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9999689472807405	WITHOUT_CLASSIFICATION	3.105271925955432E-5	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999839495503211	WITHOUT_CLASSIFICATION	1.6050449678901392E-5	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999967971418483	WITHOUT_CLASSIFICATION	3.20285815175104E-6	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999997154914816	WITHOUT_CLASSIFICATION	2.8450851836470425E-7	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999997366923927	WITHOUT_CLASSIFICATION	2.633076072522558E-7	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999956480080247	WITHOUT_CLASSIFICATION	4.3519919753397324E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999912306515315	WITHOUT_CLASSIFICATION	8.76934846842173E-6	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999968760823866	WITHOUT_CLASSIFICATION	3.1239176134726983E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999903623505659	WITHOUT_CLASSIFICATION	9.63764943404575E-6	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999998846340512	WITHOUT_CLASSIFICATION	1.1536594874754068E-7	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.999999425316345	WITHOUT_CLASSIFICATION	5.7468365494683E-7	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999791853613323	WITHOUT_CLASSIFICATION	2.0814638667606777E-5	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999815578525949	WITHOUT_CLASSIFICATION	1.8442147405161056E-5	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999736506557182	WITHOUT_CLASSIFICATION	2.634934428181951E-5	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999755174339323	WITHOUT_CLASSIFICATION	2.448256606770476E-5	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999996604304615	WITHOUT_CLASSIFICATION	3.3956953841217246E-7	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.999998453613523	WITHOUT_CLASSIFICATION	1.5463864769637666E-6	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999840823430771	WITHOUT_CLASSIFICATION	1.5917656922935534E-5	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.99999855631019	WITHOUT_CLASSIFICATION	1.4436898100291184E-6	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999990538414455	WITHOUT_CLASSIFICATION	9.461585545739538E-7	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999690017300498	WITHOUT_CLASSIFICATION	3.099826995031433E-5	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999897844245524	WITHOUT_CLASSIFICATION	1.021557544756965E-5	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999897844245524	WITHOUT_CLASSIFICATION	1.021557544756965E-5	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.99998701860716	WITHOUT_CLASSIFICATION	1.2981392840098042E-5	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.99998701860716	WITHOUT_CLASSIFICATION	1.2981392840098042E-5	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999935087794267	WITHOUT_CLASSIFICATION	6.491220573267895E-6	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999933109336108	WITHOUT_CLASSIFICATION	6.689066389265042E-6	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999933109336108	WITHOUT_CLASSIFICATION	6.689066389265042E-6	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.999999790913662	WITHOUT_CLASSIFICATION	2.0908633801690038E-7	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.999999790913662	WITHOUT_CLASSIFICATION	2.0908633801690038E-7	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999887582133933	WITHOUT_CLASSIFICATION	1.1241786606836013E-5	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999954597512122	WITHOUT_CLASSIFICATION	4.540248787788835E-6	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999939455464368	WITHOUT_CLASSIFICATION	6.054453563228849E-6	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999944253828975	WITHOUT_CLASSIFICATION	5.574617102449922E-6	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999172657522316	WITHOUT_CLASSIFICATION	8.273424776831819E-5	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999748145201782	WITHOUT_CLASSIFICATION	2.5185479821757824E-5	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999768743100995	WITHOUT_CLASSIFICATION	2.3125689900467724E-5	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999420563496804	WITHOUT_CLASSIFICATION	5.794365031959227E-5	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.999999828832196	WITHOUT_CLASSIFICATION	1.7116780391538857E-7	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9996879649705178	WITHOUT_CLASSIFICATION	3.1203502948218666E-4	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999991565690699	WITHOUT_CLASSIFICATION	8.4343093000182E-7	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999889273037518	WITHOUT_CLASSIFICATION	1.1072696248308402E-5	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999976710341831	WITHOUT_CLASSIFICATION	2.328965816861175E-6	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999959381803467	WITHOUT_CLASSIFICATION	4.0618196533421546E-6	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.999998007950745	WITHOUT_CLASSIFICATION	1.9920492549928017E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9998116750294865	WITHOUT_CLASSIFICATION	1.8832497051332866E-4	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999956480080247	WITHOUT_CLASSIFICATION	4.3519919753397324E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999903623505659	WITHOUT_CLASSIFICATION	9.63764943404575E-6	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999963277128426	WITHOUT_CLASSIFICATION	3.6722871574759346E-6	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999994517263927	WITHOUT_CLASSIFICATION	5.482736073009325E-7	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.999999278373886	WITHOUT_CLASSIFICATION	7.21626113897059E-7	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999872947679428	WITHOUT_CLASSIFICATION	1.2705232057122014E-5	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999944332042656	WITHOUT_CLASSIFICATION	5.566795734372231E-6	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999975070121225	WITHOUT_CLASSIFICATION	2.492987877412866E-6	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999990392057517	WITHOUT_CLASSIFICATION	9.60794248217478E-7	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999985507602249	WITHOUT_CLASSIFICATION	1.449239775074851E-6	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9997118799548961	WITHOUT_CLASSIFICATION	2.881200451040279E-4	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.999994621645874	WITHOUT_CLASSIFICATION	5.378354126011693E-6	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9999937521704347	WITHOUT_CLASSIFICATION	6.247829565310465E-6	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999794323206205	WITHOUT_CLASSIFICATION	2.0567679379598197E-5	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.999993685557385	WITHOUT_CLASSIFICATION	6.314442614948415E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.999993685557385	WITHOUT_CLASSIFICATION	6.314442614948415E-6	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9999854089046081	WITHOUT_CLASSIFICATION	1.4591095392020099E-5	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9999960322464369	WITHOUT_CLASSIFICATION	3.967753563141945E-6	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999802011238438	WITHOUT_CLASSIFICATION	1.979887615618548E-5	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999896024059941	WITHOUT_CLASSIFICATION	1.039759400583932E-5	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999052323571657	WITHOUT_CLASSIFICATION	9.476764283426589E-5	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999784808596729	WITHOUT_CLASSIFICATION	2.151914032715223E-5	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999777663169049	WITHOUT_CLASSIFICATION	2.2233683095068464E-5	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999038367240796	WITHOUT_CLASSIFICATION	9.616327592040968E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9997903462272479	WITHOUT_CLASSIFICATION	2.0965377275216078E-4	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999927239014318	WITHOUT_CLASSIFICATION	7.276098568239438E-6	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999935710417458	WITHOUT_CLASSIFICATION	6.4289582541242895E-6	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.999961897055202	WITHOUT_CLASSIFICATION	3.810294479800674E-5	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999982864416016	WITHOUT_CLASSIFICATION	1.7135583984856538E-6	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999926227316582	WITHOUT_CLASSIFICATION	7.3772683418187614E-6	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999924909095024	WITHOUT_CLASSIFICATION	7.509090497508157E-6	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.999972720233066	WITHOUT_CLASSIFICATION	2.7279766934017776E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999907499921655	WITHOUT_CLASSIFICATION	9.250007834486741E-6	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999949036924631	WITHOUT_CLASSIFICATION	5.096307536900851E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999846525139903	WITHOUT_CLASSIFICATION	1.534748600980514E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999980956642975	WITHOUT_CLASSIFICATION	1.9043357024851244E-6	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999948986871826	WITHOUT_CLASSIFICATION	5.101312817298255E-6	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999948986871826	WITHOUT_CLASSIFICATION	5.101312817298255E-6	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999990083058938	WITHOUT_CLASSIFICATION	9.916941061318517E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999990083058938	WITHOUT_CLASSIFICATION	9.916941061318517E-7	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999903296521444	WITHOUT_CLASSIFICATION	9.670347855620357E-6	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999984678723487	WITHOUT_CLASSIFICATION	1.5321276511991935E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9999987575061854	WITHOUT_CLASSIFICATION	1.2424938146262838E-6	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9999975832091544	WITHOUT_CLASSIFICATION	2.4167908455621305E-6	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.999997061090759	WITHOUT_CLASSIFICATION	2.9389092408469923E-6	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9991085445168555	WITHOUT_CLASSIFICATION	8.914554831445281E-4	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9999695219618447	WITHOUT_CLASSIFICATION	3.047803815524005E-5	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999816561665391	WITHOUT_CLASSIFICATION	1.8343833460902355E-5	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999816561665391	WITHOUT_CLASSIFICATION	1.8343833460902355E-5	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999937023432175	WITHOUT_CLASSIFICATION	6.297656782421012E-6	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999916129519331	WITHOUT_CLASSIFICATION	8.387048066842102E-6	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999883451298124	WITHOUT_CLASSIFICATION	1.1654870187518756E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999883451298124	WITHOUT_CLASSIFICATION	1.1654870187518756E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999970997731288	WITHOUT_CLASSIFICATION	2.9002268713482863E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9998826394791325	WITHOUT_CLASSIFICATION	1.1736052086746545E-4	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999184329796779	WITHOUT_CLASSIFICATION	8.156702032216031E-5	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9998831647217842	WITHOUT_CLASSIFICATION	1.1683527821589904E-4	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.999972884749378	WITHOUT_CLASSIFICATION	2.711525062207703E-5	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999964758782501	WITHOUT_CLASSIFICATION	3.5241217498874625E-6	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9998465528160407	WITHOUT_CLASSIFICATION	1.5344718395920163E-4	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9998465528160407	WITHOUT_CLASSIFICATION	1.5344718395920163E-4	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999846841139959	WITHOUT_CLASSIFICATION	1.5315886004157883E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999764087733144	WITHOUT_CLASSIFICATION	2.3591226685662464E-5	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999607050833166	WITHOUT_CLASSIFICATION	3.929491668337335E-5	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999983948702706	WITHOUT_CLASSIFICATION	1.6051297294126665E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999987846607835	WITHOUT_CLASSIFICATION	1.2153392164301735E-6	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.999999376358048	WITHOUT_CLASSIFICATION	6.236419519911131E-7	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999964718994637	WITHOUT_CLASSIFICATION	3.52810053626943E-6	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999979358351664	WITHOUT_CLASSIFICATION	2.0641648335526046E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999700918061036	WITHOUT_CLASSIFICATION	2.990819389632205E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999700918061036	WITHOUT_CLASSIFICATION	2.990819389632205E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999700918061036	WITHOUT_CLASSIFICATION	2.990819389632205E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999700918061036	WITHOUT_CLASSIFICATION	2.990819389632205E-5	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999941960086699	WITHOUT_CLASSIFICATION	5.803991330200723E-6	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999965498038527	WITHOUT_CLASSIFICATION	3.450196147433822E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999732457535809	WITHOUT_CLASSIFICATION	2.6754246419116637E-5	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999994514709539	WITHOUT_CLASSIFICATION	5.485290460936095E-7	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999994514709539	WITHOUT_CLASSIFICATION	5.485290460936095E-7	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999930982184536	WITHOUT_CLASSIFICATION	6.9017815462841324E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999930982184536	WITHOUT_CLASSIFICATION	6.9017815462841324E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999897636449566	WITHOUT_CLASSIFICATION	1.0236355043401917E-5	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999921005799891	WITHOUT_CLASSIFICATION	7.89942001088594E-6	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999474125430113	WITHOUT_CLASSIFICATION	5.258745698860583E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999797983548294	WITHOUT_CLASSIFICATION	2.0201645170593733E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.999972034820903	WITHOUT_CLASSIFICATION	2.796517909691347E-5	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999978693219467	WITHOUT_CLASSIFICATION	2.130678053318772E-6	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999939151828519	WITHOUT_CLASSIFICATION	6.084817148180906E-6	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.99995024319454	WITHOUT_CLASSIFICATION	4.9756805459954955E-5	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9998605507666491	WITHOUT_CLASSIFICATION	1.3944923335081132E-4	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999988216699172	WITHOUT_CLASSIFICATION	1.178330082840598E-6	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999957370749833	WITHOUT_CLASSIFICATION	4.262925016633037E-6	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999979940317937	WITHOUT_CLASSIFICATION	2.005968206386423E-6	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999999666905736	WITHOUT_CLASSIFICATION	3.3309426322429246E-8	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999957128535338	WITHOUT_CLASSIFICATION	4.287146466192838E-6	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999197529759125	WITHOUT_CLASSIFICATION	8.024702408749227E-5	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999997983782755	WITHOUT_CLASSIFICATION	2.0162172455111297E-7	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999988728865288	WITHOUT_CLASSIFICATION	1.1271134711381937E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999953620526845	WITHOUT_CLASSIFICATION	4.637947315576089E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999953620526845	WITHOUT_CLASSIFICATION	4.637947315576089E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999953620526845	WITHOUT_CLASSIFICATION	4.637947315576089E-6	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999927976566728	WITHOUT_CLASSIFICATION	7.2023433271324164E-6	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999956984174841	WITHOUT_CLASSIFICATION	4.301582515868485E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999983058565093	WITHOUT_CLASSIFICATION	1.6941434907651272E-6	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9999913905782483	WITHOUT_CLASSIFICATION	8.609421751696067E-6	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.999999748370785	WITHOUT_CLASSIFICATION	2.5162921504835525E-7	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999991666458867	WITHOUT_CLASSIFICATION	8.333541132648778E-7	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999141278340462	WITHOUT_CLASSIFICATION	8.587216595374202E-5	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999993959395487	WITHOUT_CLASSIFICATION	6.04060451282777E-7	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.999991471425812	WITHOUT_CLASSIFICATION	8.528574188062096E-6	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9999927737547012	WITHOUT_CLASSIFICATION	7.226245298797353E-6	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999963822025464	WITHOUT_CLASSIFICATION	3.617797453710817E-6	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999180843613623	WITHOUT_CLASSIFICATION	8.191563863767247E-5	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.999999728320878	WITHOUT_CLASSIFICATION	2.7167912192861683E-7	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9998829156738861	WITHOUT_CLASSIFICATION	1.1708432611390672E-4	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999241647516285	WITHOUT_CLASSIFICATION	7.583524837140131E-5	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999972598669076	WITHOUT_CLASSIFICATION	2.7401330924780866E-6	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.999997451600412	WITHOUT_CLASSIFICATION	2.5483995879415033E-6	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999974971336212	WITHOUT_CLASSIFICATION	2.5028663787671247E-6	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999706706593	WITHOUT_CLASSIFICATION	2.932934069841242E-8	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999962086639607	WITHOUT_CLASSIFICATION	3.7913360393929458E-6	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999877075905679	WITHOUT_CLASSIFICATION	1.2292409432247737E-5	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9999925463142557	WITHOUT_CLASSIFICATION	7.453685744368133E-6	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999997965130787	WITHOUT_CLASSIFICATION	2.034869213292055E-7	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999963030931798	WITHOUT_CLASSIFICATION	3.696906820323247E-6	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999989867193321	WITHOUT_CLASSIFICATION	1.0132806679083736E-6	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.999988139653578	WITHOUT_CLASSIFICATION	1.186034642201823E-5	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999939318523506	WITHOUT_CLASSIFICATION	6.06814764928327E-6	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999945209270746	WITHOUT_CLASSIFICATION	5.4790729253536275E-6	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999912452771957	WITHOUT_CLASSIFICATION	8.754722804355095E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999968037893949	WITHOUT_CLASSIFICATION	3.1962106051358415E-6	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999896579964354	WITHOUT_CLASSIFICATION	1.0342003564699168E-5	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999794134940894	WITHOUT_CLASSIFICATION	2.0586505910629723E-5	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999842991765994	WITHOUT_CLASSIFICATION	1.5700823400626116E-5	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.999910631314487	WITHOUT_CLASSIFICATION	8.936868551299387E-5	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999991058283133	WITHOUT_CLASSIFICATION	8.941716867737977E-7	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9999200903148324	WITHOUT_CLASSIFICATION	7.9909685167514E-5	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999639827208058	WITHOUT_CLASSIFICATION	3.601727919432001E-5	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9981600498979664	WITHOUT_CLASSIFICATION	0.0018399501020335365	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999907684428962	WITHOUT_CLASSIFICATION	9.23155710377118E-6	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999953008769435	WITHOUT_CLASSIFICATION	4.699123056388026E-6	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999989912358216	WITHOUT_CLASSIFICATION	1.0087641783932787E-6	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9999570657425998	WITHOUT_CLASSIFICATION	4.293425740024819E-5	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999914326462794	WITHOUT_CLASSIFICATION	8.567353720588093E-6	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9998664446592024	WITHOUT_CLASSIFICATION	1.3355534079759584E-4	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999928013527772	WITHOUT_CLASSIFICATION	7.198647222772612E-6	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999724769329742	WITHOUT_CLASSIFICATION	2.7523067025764486E-5	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999905248267239	WITHOUT_CLASSIFICATION	9.475173276138404E-6	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999985942153357	WITHOUT_CLASSIFICATION	1.405784664404416E-6	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999766520363392	WITHOUT_CLASSIFICATION	2.3347963660804107E-5	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999976311512941	WITHOUT_CLASSIFICATION	2.3688487059214732E-6	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999974565638503	WITHOUT_CLASSIFICATION	2.54343614957955E-6	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.999993729923061	WITHOUT_CLASSIFICATION	6.27007693899185E-6	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999991326424227	WITHOUT_CLASSIFICATION	8.673575772644881E-7	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999997881584655	WITHOUT_CLASSIFICATION	2.1184153447449743E-7	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999942894215119	WITHOUT_CLASSIFICATION	5.710578488038778E-6	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9998140171971962	WITHOUT_CLASSIFICATION	1.859828028037912E-4	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999957766824471	WITHOUT_CLASSIFICATION	4.223317552943784E-6	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999796969537427	WITHOUT_CLASSIFICATION	2.030304625739319E-5	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999890274902614	WITHOUT_CLASSIFICATION	1.097250973867607E-5	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999926856543416	WITHOUT_CLASSIFICATION	7.314345658258108E-6	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999969580799776	WITHOUT_CLASSIFICATION	3.0419200224224975E-6	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.999998777000309	WITHOUT_CLASSIFICATION	1.2229996910290065E-6	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9995225034450549	WITHOUT_CLASSIFICATION	4.7749655494506543E-4	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999980286131909	WITHOUT_CLASSIFICATION	1.9713868091653194E-6	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9994733539043014	WITHOUT_CLASSIFICATION	5.26646095698648E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9996413921283983	WITHOUT_CLASSIFICATION	3.586078716016623E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999683601329284	WITHOUT_CLASSIFICATION	3.163986707154891E-5	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999246211870333	WITHOUT_CLASSIFICATION	7.537881296679742E-5	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.999998957280998	WITHOUT_CLASSIFICATION	1.0427190021284984E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999983203620327	WITHOUT_CLASSIFICATION	1.6796379673150344E-6	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999794704925492	WITHOUT_CLASSIFICATION	2.0529507450764856E-5	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9999793510825058	WITHOUT_CLASSIFICATION	2.0648917494189387E-5	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999969743791448	WITHOUT_CLASSIFICATION	3.025620855160077E-6	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999442160358	WITHOUT_CLASSIFICATION	5.578396436806829E-8	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999976103303571	WITHOUT_CLASSIFICATION	2.3896696430035866E-6	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9998221871290933	WITHOUT_CLASSIFICATION	1.7781287090671102E-4	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999477167690157	WITHOUT_CLASSIFICATION	5.2283230984150786E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999552770207537	WITHOUT_CLASSIFICATION	4.47229792463E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999552770207537	WITHOUT_CLASSIFICATION	4.47229792463E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999552770207537	WITHOUT_CLASSIFICATION	4.47229792463E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999951503387176	WITHOUT_CLASSIFICATION	4.849661282442972E-6	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999983791362599	WITHOUT_CLASSIFICATION	1.6208637400010499E-6	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999994074039601	WITHOUT_CLASSIFICATION	5.925960398827924E-7	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999931561715417	WITHOUT_CLASSIFICATION	6.8438284582454804E-6	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999931483616168	WITHOUT_CLASSIFICATION	6.85163838319305E-6	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999965017276111	WITHOUT_CLASSIFICATION	3.4982723889516443E-6	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999973155779387	WITHOUT_CLASSIFICATION	2.6844220613380385E-6	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999835071585319	WITHOUT_CLASSIFICATION	1.6492841468067203E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999988181558385	WITHOUT_CLASSIFICATION	1.181844161512158E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999988181558385	WITHOUT_CLASSIFICATION	1.181844161512158E-6	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999908188578762	WITHOUT_CLASSIFICATION	9.181142123749063E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999984034006046	WITHOUT_CLASSIFICATION	1.5965993953973014E-6	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999976103303571	WITHOUT_CLASSIFICATION	2.3896696430035866E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999986598362639	WITHOUT_CLASSIFICATION	1.3401637361582362E-6	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999975417201695	WITHOUT_CLASSIFICATION	2.4582798304071977E-6	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999298682999734	WITHOUT_CLASSIFICATION	7.013170002651302E-5	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9999335521204565	WITHOUT_CLASSIFICATION	6.644787954340458E-5	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9999936407702216	WITHOUT_CLASSIFICATION	6.359229778547128E-6	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999976277977283	WITHOUT_CLASSIFICATION	2.3722022717118374E-6	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999568635595711	WITHOUT_CLASSIFICATION	4.3136440428866136E-5	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9999960048889723	WITHOUT_CLASSIFICATION	3.995111027679503E-6	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9998299104013549	WITHOUT_CLASSIFICATION	1.700895986450821E-4	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999856439106468	WITHOUT_CLASSIFICATION	1.435608935311185E-5	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9987672722262512	WITHOUT_CLASSIFICATION	0.0012327277737489335	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.999983338473629	WITHOUT_CLASSIFICATION	1.6661526371076492E-5	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9998830244253957	WITHOUT_CLASSIFICATION	1.1697557460427282E-4	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999271806267881	WITHOUT_CLASSIFICATION	7.281937321183514E-5	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999597198308279	WITHOUT_CLASSIFICATION	4.0280169172123935E-5	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9998784875771505	WITHOUT_CLASSIFICATION	1.2151242284950874E-4	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9996467135825094	WITHOUT_CLASSIFICATION	3.532864174905422E-4	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.999889655693934	WITHOUT_CLASSIFICATION	1.1034430606597741E-4	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9998933058660806	WITHOUT_CLASSIFICATION	1.0669413391944207E-4	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999977890379179	WITHOUT_CLASSIFICATION	2.2109620820872037E-6	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999973992285032	WITHOUT_CLASSIFICATION	2.6007714968377834E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999933305886308	WITHOUT_CLASSIFICATION	6.6694113691782785E-6	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999789190857582	WITHOUT_CLASSIFICATION	2.1080914241822816E-5	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999672300405046	WITHOUT_CLASSIFICATION	3.276995949541231E-5	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999841965230735	WITHOUT_CLASSIFICATION	1.5803476926456906E-5	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9998588915091076	WITHOUT_CLASSIFICATION	1.4110849089249745E-4	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999960755294995	WITHOUT_CLASSIFICATION	3.924470500522636E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999995781928265	WITHOUT_CLASSIFICATION	4.2180717353326066E-7	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999725576623532	WITHOUT_CLASSIFICATION	2.744233764695241E-5	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999992160337481	WITHOUT_CLASSIFICATION	7.839662519773653E-7	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999998405088117	WITHOUT_CLASSIFICATION	1.5949118830511366E-7	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9998594630151627	WITHOUT_CLASSIFICATION	1.4053698483734972E-4	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.999982085120839	WITHOUT_CLASSIFICATION	1.7914879161038554E-5	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999985498322242	WITHOUT_CLASSIFICATION	1.4501677758428088E-6	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999724235145768	WITHOUT_CLASSIFICATION	2.757648542311381E-5	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999308325714139	WITHOUT_CLASSIFICATION	6.916742858608422E-5	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999878534075552	WITHOUT_CLASSIFICATION	1.2146592444836642E-5	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999986932728121	WITHOUT_CLASSIFICATION	1.3067271878692874E-6	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999977095069124	WITHOUT_CLASSIFICATION	2.290493087673591E-6	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999785407653302	WITHOUT_CLASSIFICATION	2.145923466973333E-5	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999986970860644	WITHOUT_CLASSIFICATION	1.3029139355595056E-6	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.999997539785681	WITHOUT_CLASSIFICATION	2.4602143189743393E-6	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.999995629178704	WITHOUT_CLASSIFICATION	4.37082129601551E-6	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999951983829561	WITHOUT_CLASSIFICATION	4.801617043893991E-6	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999969082739355	WITHOUT_CLASSIFICATION	3.0917260644933028E-6	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999979438155511	WITHOUT_CLASSIFICATION	2.056184449024373E-6	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999978719265532	WITHOUT_CLASSIFICATION	2.1280734467570806E-6	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.999938844844495	WITHOUT_CLASSIFICATION	6.115515550500738E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.999955704043291	WITHOUT_CLASSIFICATION	4.42959567090167E-5	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999852716656984	WITHOUT_CLASSIFICATION	1.4728334301718546E-5	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9999882836298963	WITHOUT_CLASSIFICATION	1.1716370103623827E-5	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9999928164315457	WITHOUT_CLASSIFICATION	7.18356845433771E-6	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999867195095742	WITHOUT_CLASSIFICATION	1.3280490425892395E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9998347156182168	WITHOUT_CLASSIFICATION	1.6528438178313492E-4	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999540342191682	WITHOUT_CLASSIFICATION	4.596578083175883E-5	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999968010448856	WITHOUT_CLASSIFICATION	3.19895511426441E-6	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999878234607823	WITHOUT_CLASSIFICATION	1.2176539217710682E-5	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999997711430886	WITHOUT_CLASSIFICATION	2.2885691133455834E-7	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999989476850749	WITHOUT_CLASSIFICATION	1.052314925132765E-6	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999960338153763	WITHOUT_CLASSIFICATION	3.966184623789593E-6	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999987123116376	WITHOUT_CLASSIFICATION	1.287688362329367E-6	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999960845447023	WITHOUT_CLASSIFICATION	3.915455297679394E-6	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9999898573545324	WITHOUT_CLASSIFICATION	1.014264546772152E-5	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9999510949222022	WITHOUT_CLASSIFICATION	4.890507779771498E-5	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999843098503503	WITHOUT_CLASSIFICATION	1.5690149649804464E-5	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999992843365723	WITHOUT_CLASSIFICATION	7.156634276834394E-7	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999922824767333	WITHOUT_CLASSIFICATION	7.717523266610457E-6	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999702220200699	WITHOUT_CLASSIFICATION	2.977797992998028E-5	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999969092671099	WITHOUT_CLASSIFICATION	3.0907328900753232E-6	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9999461093199884	WITHOUT_CLASSIFICATION	5.3890680011672643E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9996413921283983	WITHOUT_CLASSIFICATION	3.586078716016623E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999922824767333	WITHOUT_CLASSIFICATION	7.717523266610457E-6	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999702220200699	WITHOUT_CLASSIFICATION	2.977797992998028E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999864383289996	WITHOUT_CLASSIFICATION	1.3561671000320905E-5	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999999494931305	WITHOUT_CLASSIFICATION	5.050686944835654E-8	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999935929760104	WITHOUT_CLASSIFICATION	6.407023989582943E-6	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999989279521492	WITHOUT_CLASSIFICATION	1.0720478508643624E-6	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.999991502225464	WITHOUT_CLASSIFICATION	8.497774535974113E-6	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999944519526284	WITHOUT_CLASSIFICATION	5.548047371623955E-6	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9998756238155639	WITHOUT_CLASSIFICATION	1.2437618443607185E-4	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999675796520868	WITHOUT_CLASSIFICATION	3.242034791309383E-5	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999743237498954	WITHOUT_CLASSIFICATION	2.5676250104593126E-5	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999852586153377	WITHOUT_CLASSIFICATION	1.4741384662342662E-5	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999831724254905	WITHOUT_CLASSIFICATION	1.682757450960016E-5	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999829564804253	WITHOUT_CLASSIFICATION	1.7043519574601482E-5	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.999885949825457	WITHOUT_CLASSIFICATION	1.140501745430467E-4	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999848954894491	WITHOUT_CLASSIFICATION	1.5104510550789759E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9995048817826213	WITHOUT_CLASSIFICATION	4.951182173786468E-4	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9998769631750901	WITHOUT_CLASSIFICATION	1.2303682490982071E-4	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999521756474583	WITHOUT_CLASSIFICATION	4.7824352541641674E-5	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9996016335685629	WITHOUT_CLASSIFICATION	3.9836643143717205E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999732468655352	WITHOUT_CLASSIFICATION	2.6753134464738344E-5	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9999881478393375	WITHOUT_CLASSIFICATION	1.185216066252613E-5	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999877474263182	WITHOUT_CLASSIFICATION	1.2252573681784264E-5	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999869630774446	WITHOUT_CLASSIFICATION	1.3036922555273262E-5	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9998659604171818	WITHOUT_CLASSIFICATION	1.3403958281832043E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.999998957280998	WITHOUT_CLASSIFICATION	1.0427190021284984E-6	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999978955275968	WITHOUT_CLASSIFICATION	2.104472403306703E-6	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999943997931477	WITHOUT_CLASSIFICATION	5.600206852259592E-6	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9999882369429239	WITHOUT_CLASSIFICATION	1.1763057076180107E-5	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9999869724028145	WITHOUT_CLASSIFICATION	1.3027597185462013E-5	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9999928778846233	WITHOUT_CLASSIFICATION	7.1221153766888765E-6	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.999976568178866	WITHOUT_CLASSIFICATION	2.34318211339881E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999842585412405	WITHOUT_CLASSIFICATION	1.574145875943075E-5	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999924020831631	WITHOUT_CLASSIFICATION	7.597916836900037E-6	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999095529982495	WITHOUT_CLASSIFICATION	9.044700175043122E-5	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999941701842182	WITHOUT_CLASSIFICATION	5.8298157817346055E-6	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999987029433796	WITHOUT_CLASSIFICATION	1.2970566204729491E-6	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999265550536184	WITHOUT_CLASSIFICATION	7.344494638168778E-5	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999327414680373	WITHOUT_CLASSIFICATION	6.725853196265039E-5	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999914762658465	WITHOUT_CLASSIFICATION	8.523734153455948E-6	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999907405255904	WITHOUT_CLASSIFICATION	9.2594744095426E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999986021770892	WITHOUT_CLASSIFICATION	1.3978229108240422E-6	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999593550923694	WITHOUT_CLASSIFICATION	4.06449076306048E-5	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.999949599536729	WITHOUT_CLASSIFICATION	5.0400463271000424E-5	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.999989109967559	WITHOUT_CLASSIFICATION	1.0890032441005239E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.999976049318286	WITHOUT_CLASSIFICATION	2.3950681714017738E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999461339276415	WITHOUT_CLASSIFICATION	5.386607235852792E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999953019960242	WITHOUT_CLASSIFICATION	4.6980039758988115E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9999953019960242	WITHOUT_CLASSIFICATION	4.6980039758988115E-6	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999775509985535	WITHOUT_CLASSIFICATION	2.244900144650896E-5	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999893035101708	WITHOUT_CLASSIFICATION	1.069648982925128E-5	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999868582183508	WITHOUT_CLASSIFICATION	1.314178164924929E-5	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999985925623835	WITHOUT_CLASSIFICATION	1.4074376164741169E-6	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999597437115516	WITHOUT_CLASSIFICATION	4.02562884484295E-5	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999984425763084	WITHOUT_CLASSIFICATION	1.5574236915818258E-6	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999928096606091	WITHOUT_CLASSIFICATION	7.190339390858875E-6	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999839935034098	WITHOUT_CLASSIFICATION	1.600649659012232E-5	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.999996005646145	WITHOUT_CLASSIFICATION	3.9943538549892124E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999827673248117	WITHOUT_CLASSIFICATION	1.7232675188238734E-5	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.999998820588605	WITHOUT_CLASSIFICATION	1.1794113950475118E-6	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999983117327352	WITHOUT_CLASSIFICATION	1.6882672647257942E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999990049465806	WITHOUT_CLASSIFICATION	9.950534194681758E-7	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999990049465806	WITHOUT_CLASSIFICATION	9.950534194681758E-7	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999959393722404	WITHOUT_CLASSIFICATION	4.060627759564468E-6	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999982683574837	WITHOUT_CLASSIFICATION	1.7316425162856446E-6	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999967142954829	WITHOUT_CLASSIFICATION	3.2857045171774135E-6	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999948448730686	WITHOUT_CLASSIFICATION	5.1551269314701486E-6	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999966381963218	WITHOUT_CLASSIFICATION	3.3618036783022804E-6	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999969182727957	WITHOUT_CLASSIFICATION	3.0817272043042247E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999939569610432	WITHOUT_CLASSIFICATION	6.043038956766705E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999618804648728	WITHOUT_CLASSIFICATION	3.8119535127223606E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999618804648728	WITHOUT_CLASSIFICATION	3.8119535127223606E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999618804648728	WITHOUT_CLASSIFICATION	3.8119535127223606E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999618804648728	WITHOUT_CLASSIFICATION	3.8119535127223606E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999618804648728	WITHOUT_CLASSIFICATION	3.8119535127223606E-5	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9998367250365858	WITHOUT_CLASSIFICATION	1.632749634141273E-4	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999549062288574	WITHOUT_CLASSIFICATION	4.509377114253688E-5	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999597437115516	WITHOUT_CLASSIFICATION	4.02562884484295E-5	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999460030997042	WITHOUT_CLASSIFICATION	5.3996900295823036E-5	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999979675900125	WITHOUT_CLASSIFICATION	2.0324099875530678E-6	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999924928056582	WITHOUT_CLASSIFICATION	7.507194341864794E-6	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999971190221676	WITHOUT_CLASSIFICATION	2.8809778323579545E-6	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.999994055234085	WITHOUT_CLASSIFICATION	5.944765914957839E-6	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999483300466397	WITHOUT_CLASSIFICATION	5.1669953360361246E-5	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999880501781787	WITHOUT_CLASSIFICATION	1.1949821821343425E-5	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999891195397052	WITHOUT_CLASSIFICATION	1.0880460294953172E-5	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999891038825823	WITHOUT_CLASSIFICATION	1.0896117417710487E-5	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999948098787338	WITHOUT_CLASSIFICATION	5.1901212662175066E-6	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999996149732647	WITHOUT_CLASSIFICATION	3.850267352805591E-7	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999996204083086	WITHOUT_CLASSIFICATION	3.795916914224949E-7	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999653165550116	WITHOUT_CLASSIFICATION	3.4683444988387806E-5	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999957713120061	WITHOUT_CLASSIFICATION	4.228687993913139E-6	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9999612335075144	WITHOUT_CLASSIFICATION	3.8766492485585924E-5	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999934506834869	WITHOUT_CLASSIFICATION	6.5493165131098E-6	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999730941006637	WITHOUT_CLASSIFICATION	2.6905899336300262E-5	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999871097531456	WITHOUT_CLASSIFICATION	1.2890246854327068E-5	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.999996862040556	WITHOUT_CLASSIFICATION	3.1379594438727296E-6	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999980845424798	WITHOUT_CLASSIFICATION	1.9154575201837195E-6	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999971418578397	WITHOUT_CLASSIFICATION	2.858142160295451E-6	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999985370972928	WITHOUT_CLASSIFICATION	1.4629027071916662E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.99999923073035	WITHOUT_CLASSIFICATION	7.692696500019718E-7	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999986376970867	WITHOUT_CLASSIFICATION	1.3623029132864665E-6	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.999962773726551	WITHOUT_CLASSIFICATION	3.722627344905396E-5	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999448739901933	WITHOUT_CLASSIFICATION	5.512600980677278E-5	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999808359969586	WITHOUT_CLASSIFICATION	1.9164003041345375E-5	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999966532461968	WITHOUT_CLASSIFICATION	3.3467538032568256E-6	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999731219493683	WITHOUT_CLASSIFICATION	2.6878050631692435E-5	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999809295831463	WITHOUT_CLASSIFICATION	1.9070416853772704E-5	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9995951210609606	WITHOUT_CLASSIFICATION	4.048789390393314E-4	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.999992766016563	WITHOUT_CLASSIFICATION	7.233983437069493E-6	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999974301766075	WITHOUT_CLASSIFICATION	2.5698233925895295E-6	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999991865649654	WITHOUT_CLASSIFICATION	8.134350345921154E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999991865649654	WITHOUT_CLASSIFICATION	8.134350345921154E-7	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999724710304427	WITHOUT_CLASSIFICATION	2.7528969557215632E-5	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999957792430761	WITHOUT_CLASSIFICATION	4.220756923874868E-6	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999980826948959	WITHOUT_CLASSIFICATION	1.9173051041130447E-6	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999937555028032	WITHOUT_CLASSIFICATION	6.244497196775278E-6	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999986368099191	WITHOUT_CLASSIFICATION	1.363190080958217E-6	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9998233116956784	WITHOUT_CLASSIFICATION	1.7668830432165315E-4	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999971741330819	WITHOUT_CLASSIFICATION	2.825866918073632E-6	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999292404579482	WITHOUT_CLASSIFICATION	7.075954205181616E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999965701078627	WITHOUT_CLASSIFICATION	3.429892137285216E-6	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999968243008159	WITHOUT_CLASSIFICATION	3.1756991840304825E-6	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999231178354978	WITHOUT_CLASSIFICATION	7.688216450213286E-5	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9998491354404444	WITHOUT_CLASSIFICATION	1.5086455955567337E-4	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999993937013975	WITHOUT_CLASSIFICATION	6.062986024076867E-7	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9997790712996116	WITHOUT_CLASSIFICATION	2.209287003883912E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.999992766016563	WITHOUT_CLASSIFICATION	7.233983437069493E-6	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999986368099191	WITHOUT_CLASSIFICATION	1.363190080958217E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999885399184936	WITHOUT_CLASSIFICATION	1.1460081506428494E-5	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999953330936823	WITHOUT_CLASSIFICATION	4.666906317829121E-6	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999865900866614	WITHOUT_CLASSIFICATION	1.3409913338551467E-5	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999970603903034	WITHOUT_CLASSIFICATION	2.9396096965805875E-6	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999988271219682	WITHOUT_CLASSIFICATION	1.1728780318728351E-6	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9997558081066062	WITHOUT_CLASSIFICATION	2.441918933937623E-4	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999997178440875	WITHOUT_CLASSIFICATION	2.8215591247709096E-7	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999997000012284	WITHOUT_CLASSIFICATION	2.999987716395549E-7	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999919922906345	WITHOUT_CLASSIFICATION	8.007709365544403E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916621681588	WITHOUT_CLASSIFICATION	8.33783184114026E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999997144268361	WITHOUT_CLASSIFICATION	2.855731638654714E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999996179438302	WITHOUT_CLASSIFICATION	3.8205616971851507E-7	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999401679801243	WITHOUT_CLASSIFICATION	5.983201987559292E-5	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9997363432665548	WITHOUT_CLASSIFICATION	2.636567334451892E-4	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999925571640104	WITHOUT_CLASSIFICATION	7.442835989669005E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.999824691005866	WITHOUT_CLASSIFICATION	1.753089941339668E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999962833054046	WITHOUT_CLASSIFICATION	3.7166945952815308E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9999973552576046	WITHOUT_CLASSIFICATION	2.6447423954202507E-6	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999865620362157	WITHOUT_CLASSIFICATION	1.3437963784146744E-5	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999990303431027	WITHOUT_CLASSIFICATION	9.696568972719948E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999886149220977	WITHOUT_CLASSIFICATION	1.1385077902212511E-5	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999955923274997	WITHOUT_CLASSIFICATION	4.407672500284203E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999981160600135	WITHOUT_CLASSIFICATION	1.883939986534751E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999990169764029	WITHOUT_CLASSIFICATION	9.830235971016189E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999965556086038	WITHOUT_CLASSIFICATION	3.4443913962981456E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999992048630288	WITHOUT_CLASSIFICATION	7.951369711090563E-7	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999980813950434	WITHOUT_CLASSIFICATION	1.9186049565394053E-6	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9984683188438078	WITHOUT_CLASSIFICATION	0.0015316811561921296	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999888278152442	WITHOUT_CLASSIFICATION	1.1172184755684885E-5	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999972215231131	WITHOUT_CLASSIFICATION	2.778476886853187E-6	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999940101691152	WITHOUT_CLASSIFICATION	5.9898308847462085E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999990854405952	WITHOUT_CLASSIFICATION	9.145594047464585E-7	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999996414999079	WITHOUT_CLASSIFICATION	3.585000921234976E-7	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999944703590775	WITHOUT_CLASSIFICATION	5.529640922465501E-6	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999970653597803	WITHOUT_CLASSIFICATION	2.934640219684171E-6	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999972499116629	WITHOUT_CLASSIFICATION	2.7500883370161517E-6	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999980289337131	WITHOUT_CLASSIFICATION	1.9710662868943177E-6	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999983281703515	WITHOUT_CLASSIFICATION	1.67182964853835E-6	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999984213436574	WITHOUT_CLASSIFICATION	1.5786563426582903E-6	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9998941776423981	WITHOUT_CLASSIFICATION	1.0582235760202186E-4	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9997409949429821	WITHOUT_CLASSIFICATION	2.5900505701792123E-4	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.999956534732526	WITHOUT_CLASSIFICATION	4.346526747397801E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9999854065712178	WITHOUT_CLASSIFICATION	1.4593428782325832E-5	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999910788710623	WITHOUT_CLASSIFICATION	8.921128937753508E-6	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999731785029229	WITHOUT_CLASSIFICATION	2.6821497077052645E-5	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999946617849251	WITHOUT_CLASSIFICATION	5.338215074829326E-6	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999944334852638	WITHOUT_CLASSIFICATION	5.566514736085639E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999899350350291	WITHOUT_CLASSIFICATION	1.0064964970984094E-5	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9999979021569191	WITHOUT_CLASSIFICATION	2.09784308080943E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9999888871095662	WITHOUT_CLASSIFICATION	1.111289043381515E-5	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999876018077924	WITHOUT_CLASSIFICATION	1.2398192207550834E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999935134530845	WITHOUT_CLASSIFICATION	6.486546915528612E-6	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9994838778508701	WITHOUT_CLASSIFICATION	5.161221491298758E-4	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999910976876587	WITHOUT_CLASSIFICATION	8.90231234128346E-6	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999983846142481	WITHOUT_CLASSIFICATION	1.6153857519507745E-6	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999991416307429	WITHOUT_CLASSIFICATION	8.583692571871686E-7	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999998013876186	WITHOUT_CLASSIFICATION	1.9861238145875935E-7	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999996548862906	WITHOUT_CLASSIFICATION	3.451137094005855E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999861987700758	WITHOUT_CLASSIFICATION	1.3801229924304416E-5	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999992094395597	WITHOUT_CLASSIFICATION	7.905604402852999E-7	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999951348491591	WITHOUT_CLASSIFICATION	4.865150840860355E-6	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999996296124739	WITHOUT_CLASSIFICATION	3.703875260475644E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999861987700758	WITHOUT_CLASSIFICATION	1.3801229924304416E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999948765145837	WITHOUT_CLASSIFICATION	5.123485416314773E-6	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999881982730259	WITHOUT_CLASSIFICATION	1.1801726974084756E-5	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999973540715894	WITHOUT_CLASSIFICATION	2.645928410686764E-6	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999997670197921	WITHOUT_CLASSIFICATION	2.3298020798916502E-7	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999694338773414	WITHOUT_CLASSIFICATION	3.056612265864064E-5	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999997605594799	WITHOUT_CLASSIFICATION	2.394405200543204E-7	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999597780499987	WITHOUT_CLASSIFICATION	4.022195000127461E-5	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999817950152813	WITHOUT_CLASSIFICATION	1.8204984718711256E-5	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999981744073964	WITHOUT_CLASSIFICATION	1.8255926035810937E-6	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999367769897322	WITHOUT_CLASSIFICATION	6.322301026775812E-5	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9999840395013703	WITHOUT_CLASSIFICATION	1.59604986297513E-5	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999983779769521	WITHOUT_CLASSIFICATION	1.6220230479755174E-6	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999918834038013	WITHOUT_CLASSIFICATION	8.1165961986479E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999763714222323	WITHOUT_CLASSIFICATION	2.362857776777613E-5	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999968588077152	WITHOUT_CLASSIFICATION	3.1411922847630565E-6	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999988328620006	WITHOUT_CLASSIFICATION	1.1671379993647585E-6	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999877851801601	WITHOUT_CLASSIFICATION	1.2214819839873776E-5	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999989978171804	WITHOUT_CLASSIFICATION	1.002182819533609E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997716143770892	WITHOUT_CLASSIFICATION	2.2838562291096234E-4	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999958573234697	WITHOUT_CLASSIFICATION	4.142676530259286E-6	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999893029322142	WITHOUT_CLASSIFICATION	1.0697067785794628E-5	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999991915155169	WITHOUT_CLASSIFICATION	8.084844830948183E-7	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999939620654089	WITHOUT_CLASSIFICATION	6.037934591100562E-6	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999996817659397	WITHOUT_CLASSIFICATION	3.18234060362202E-7	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999987257317335	WITHOUT_CLASSIFICATION	1.2742682664639865E-6	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999939870950967	WITHOUT_CLASSIFICATION	6.012904903307742E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999985005142945	WITHOUT_CLASSIFICATION	1.499485705502859E-6	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999974912985039	WITHOUT_CLASSIFICATION	2.508701496044422E-6	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.9999989258413612	WITHOUT_CLASSIFICATION	1.074158638900891E-6	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999973384807681	WITHOUT_CLASSIFICATION	2.661519231954173E-6	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999210873859855	WITHOUT_CLASSIFICATION	7.891261401457883E-5	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.999995111938012	WITHOUT_CLASSIFICATION	4.888061987933019E-6	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999931299995619	WITHOUT_CLASSIFICATION	6.870000438166843E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999985005142945	WITHOUT_CLASSIFICATION	1.499485705502859E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.999992661797241	WITHOUT_CLASSIFICATION	7.338202759034038E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.999992661797241	WITHOUT_CLASSIFICATION	7.338202759034038E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999984837630939	WITHOUT_CLASSIFICATION	1.5162369061191024E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999985005142945	WITHOUT_CLASSIFICATION	1.499485705502859E-6	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999985005142945	WITHOUT_CLASSIFICATION	1.499485705502859E-6	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999969759052361	WITHOUT_CLASSIFICATION	3.0240947638801495E-6	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.999999853756577	WITHOUT_CLASSIFICATION	1.4624342306470542E-7	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999462033934966	WITHOUT_CLASSIFICATION	5.379660650330164E-5	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999462033934966	WITHOUT_CLASSIFICATION	5.379660650330164E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999991885173324	WITHOUT_CLASSIFICATION	8.114826675800953E-7	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.999995181482548	WITHOUT_CLASSIFICATION	4.818517452040158E-6	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999928574545612	WITHOUT_CLASSIFICATION	7.142545438737682E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997716143770892	WITHOUT_CLASSIFICATION	2.2838562291096234E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997716143770892	WITHOUT_CLASSIFICATION	2.2838562291096234E-4	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999991885173324	WITHOUT_CLASSIFICATION	8.114826675800953E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999994699528997	WITHOUT_CLASSIFICATION	5.300471003155889E-7	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999919313809268	WITHOUT_CLASSIFICATION	8.068619073241405E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999926853549905	WITHOUT_CLASSIFICATION	7.314645009420654E-6	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999931039332953	WITHOUT_CLASSIFICATION	6.896066704639004E-6	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999760592123668	WITHOUT_CLASSIFICATION	2.3940787633284363E-5	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999975426620227	WITHOUT_CLASSIFICATION	2.4573379772817526E-6	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.999992287133889	WITHOUT_CLASSIFICATION	7.712866110917224E-6	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999553281424901	WITHOUT_CLASSIFICATION	4.467185750981046E-5	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999853649826449	WITHOUT_CLASSIFICATION	1.4635017355194204E-5	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999999302503196	WITHOUT_CLASSIFICATION	6.974968028360606E-8	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999956885874199	WITHOUT_CLASSIFICATION	4.311412579990973E-6	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999848805808464	WITHOUT_CLASSIFICATION	1.5119419153415083E-5	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999873816442416	WITHOUT_CLASSIFICATION	1.2618355758289967E-5	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999981074552386	WITHOUT_CLASSIFICATION	1.892544761325796E-6	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999977956073589	WITHOUT_CLASSIFICATION	2.2043926410929296E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999948330918913	WITHOUT_CLASSIFICATION	5.1669081087191215E-6	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.999966187964686	WITHOUT_CLASSIFICATION	3.381203531407943E-5	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999949446435782	WITHOUT_CLASSIFICATION	5.0553564217947E-6	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9999791241519136	WITHOUT_CLASSIFICATION	2.087584808641479E-5	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999851519445434	WITHOUT_CLASSIFICATION	1.4848055456551565E-5	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9999981972078569	WITHOUT_CLASSIFICATION	1.802792143151491E-6	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999896649881562	WITHOUT_CLASSIFICATION	1.0335011843709275E-5	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999978831159617	WITHOUT_CLASSIFICATION	2.11688403830633E-6	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9997367145826275	WITHOUT_CLASSIFICATION	2.632854173725836E-4	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999603616190328	WITHOUT_CLASSIFICATION	3.963838096721197E-5	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999960998101611	WITHOUT_CLASSIFICATION	3.900189838893991E-6	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999971756453091	WITHOUT_CLASSIFICATION	2.8243546909982615E-6	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9999766779825295	WITHOUT_CLASSIFICATION	2.332201747038161E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999929914096096	WITHOUT_CLASSIFICATION	7.008590390418966E-6	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999978622090029	WITHOUT_CLASSIFICATION	2.137790997016346E-6	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9997957292887663	WITHOUT_CLASSIFICATION	2.0427071123371965E-4	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9999687638828278	WITHOUT_CLASSIFICATION	3.123611717205193E-5	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999957250412865	WITHOUT_CLASSIFICATION	4.274958713397279E-6	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999684171097599	WITHOUT_CLASSIFICATION	3.158289023998839E-5	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999877062569875	WITHOUT_CLASSIFICATION	1.2293743012578854E-5	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999959659553997	WITHOUT_CLASSIFICATION	4.034044600217009E-6	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999682390905059	WITHOUT_CLASSIFICATION	3.176090949401438E-5	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999825176429853	WITHOUT_CLASSIFICATION	1.748235701472477E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999891808629	WITHOUT_CLASSIFICATION	1.0819137100120996E-5	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9992048582387819	WITHOUT_CLASSIFICATION	7.951417612179736E-4	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999751010583227	WITHOUT_CLASSIFICATION	2.4898941677379545E-5	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999824807165361	WITHOUT_CLASSIFICATION	1.751928346399526E-5	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999823014214925	WITHOUT_CLASSIFICATION	1.769857850752024E-5	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999939008100287	WITHOUT_CLASSIFICATION	6.099189971276641E-6	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999867436044235	WITHOUT_CLASSIFICATION	1.3256395576335292E-5	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9995669397707099	WITHOUT_CLASSIFICATION	4.330602292900573E-4	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9998297162013103	WITHOUT_CLASSIFICATION	1.702837986896024E-4	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999906676848073	WITHOUT_CLASSIFICATION	9.332315192751251E-6	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.999997831767217	WITHOUT_CLASSIFICATION	2.168232783071855E-6	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999990903380818	WITHOUT_CLASSIFICATION	9.096619182329525E-7	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.999642157578514	WITHOUT_CLASSIFICATION	3.5784242148595495E-4	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9998944964745954	WITHOUT_CLASSIFICATION	1.0550352540455494E-4	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999985320004782	WITHOUT_CLASSIFICATION	1.4679995217654673E-6	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999999405110922	WITHOUT_CLASSIFICATION	5.9488907683023424E-8	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999992513033557	WITHOUT_CLASSIFICATION	7.486966442933963E-7	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.999994710307865	WITHOUT_CLASSIFICATION	5.289692134910848E-6	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999979761748805	WITHOUT_CLASSIFICATION	2.0238251195234144E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999959473260882	WITHOUT_CLASSIFICATION	4.052673911793386E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999954472807908	WITHOUT_CLASSIFICATION	4.552719209142828E-6	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999999516089568	WITHOUT_CLASSIFICATION	4.839104324112804E-8	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999983125294855	WITHOUT_CLASSIFICATION	1.687470514608742E-6	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.999995866500731	WITHOUT_CLASSIFICATION	4.133499268932998E-6	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999972045614232	WITHOUT_CLASSIFICATION	2.7954385769298623E-6	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999991743306713	WITHOUT_CLASSIFICATION	8.256693287679094E-7	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9677095484369437	WITHOUT_CLASSIFICATION	0.03229045156305632	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999765300560267	WITHOUT_CLASSIFICATION	2.3469943973287665E-5	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.999986108799659	WITHOUT_CLASSIFICATION	1.3891200340910422E-5	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9996919857317604	WITHOUT_CLASSIFICATION	3.080142682395787E-4	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9999805615935542	WITHOUT_CLASSIFICATION	1.9438406445811018E-5	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9907611269319098	WITHOUT_CLASSIFICATION	0.009238873068090266	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999733287874152	WITHOUT_CLASSIFICATION	2.6671212584915958E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999924735998151	WITHOUT_CLASSIFICATION	7.526400184898014E-6	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.999992513231113	WITHOUT_CLASSIFICATION	7.486768886932289E-6	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9998291574041177	WITHOUT_CLASSIFICATION	1.708425958823004E-4	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999890552571807	WITHOUT_CLASSIFICATION	1.094474281936909E-5	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999725108772696	WITHOUT_CLASSIFICATION	2.7489122730470464E-5	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999725108772696	WITHOUT_CLASSIFICATION	2.7489122730470464E-5	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999987031552783	WITHOUT_CLASSIFICATION	1.2968447217449984E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9999862968190398	WITHOUT_CLASSIFICATION	1.3703180960144763E-5	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999967901780488	WITHOUT_CLASSIFICATION	3.2098219512515182E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9998782619793147	WITHOUT_CLASSIFICATION	1.2173802068531406E-4	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.999993762930287	WITHOUT_CLASSIFICATION	6.237069712981356E-6	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999953188497763	WITHOUT_CLASSIFICATION	4.681150223635808E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9999731590303744	WITHOUT_CLASSIFICATION	2.684096962558269E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999926338480709	WITHOUT_CLASSIFICATION	7.366151929135957E-6	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9999441088462403	WITHOUT_CLASSIFICATION	5.589115375960663E-5	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999996474829076	WITHOUT_CLASSIFICATION	3.5251709240604946E-7	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999992555770041	WITHOUT_CLASSIFICATION	7.444229958849708E-7	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.999999942159982	WITHOUT_CLASSIFICATION	5.784001791750474E-8	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999993816722322	WITHOUT_CLASSIFICATION	6.183277677466841E-7	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999930976561838	WITHOUT_CLASSIFICATION	6.902343816148005E-6	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999990554732555	WITHOUT_CLASSIFICATION	9.445267444436755E-7	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.999968049237575	WITHOUT_CLASSIFICATION	3.195076242496903E-5	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999494917551565	WITHOUT_CLASSIFICATION	5.0508244843561616E-5	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999849181805236	WITHOUT_CLASSIFICATION	1.5081819476388806E-5	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9995781462177652	WITHOUT_CLASSIFICATION	4.2185378223482734E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9998175760920343	WITHOUT_CLASSIFICATION	1.8242390796567237E-4	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9998958393767768	WITHOUT_CLASSIFICATION	1.0416062322308237E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.999601731493681	WITHOUT_CLASSIFICATION	3.982685063190056E-4	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999883391875485	WITHOUT_CLASSIFICATION	1.1660812451573472E-5	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999852060490299	WITHOUT_CLASSIFICATION	1.4793950970140464E-5	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9999734451562907	WITHOUT_CLASSIFICATION	2.6554843709281856E-5	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999414338583841	WITHOUT_CLASSIFICATION	5.856614161586827E-5	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9999816710852549	WITHOUT_CLASSIFICATION	1.8328914745061658E-5	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999918026475326	WITHOUT_CLASSIFICATION	8.197352467297046E-6	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.99998269381556	WITHOUT_CLASSIFICATION	1.7306184439879913E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9998175760920343	WITHOUT_CLASSIFICATION	1.8242390796567237E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.999601731493681	WITHOUT_CLASSIFICATION	3.982685063190056E-4	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999963469996953	WITHOUT_CLASSIFICATION	3.6530003047491014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999981309048691	WITHOUT_CLASSIFICATION	1.869095130869185E-6	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999227307777719	WITHOUT_CLASSIFICATION	7.726922222804155E-5	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9971612432838642	WITHOUT_CLASSIFICATION	0.002838756716135675	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999972837136346	WITHOUT_CLASSIFICATION	2.716286365395868E-6	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999783884997895	WITHOUT_CLASSIFICATION	2.1611500210440282E-5	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999950892812602	WITHOUT_CLASSIFICATION	4.9107187397019995E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9997925971693153	WITHOUT_CLASSIFICATION	2.0740283068464735E-4	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999805640339925	WITHOUT_CLASSIFICATION	1.9435966007521363E-5	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999900291555366	WITHOUT_CLASSIFICATION	9.97084446335645E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999323732864253	WITHOUT_CLASSIFICATION	6.762671357469874E-5	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999986385103629	WITHOUT_CLASSIFICATION	1.3614896372173019E-6	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999964482026492	WITHOUT_CLASSIFICATION	3.551797350842332E-6	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999914367627306	WITHOUT_CLASSIFICATION	8.563237269330125E-6	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999989015755276	WITHOUT_CLASSIFICATION	1.0984244724598563E-6	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.999996925375874	WITHOUT_CLASSIFICATION	3.0746241258893252E-6	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999818116892879	WITHOUT_CLASSIFICATION	1.8188310712070377E-5	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9999888327215707	WITHOUT_CLASSIFICATION	1.1167278429333917E-5	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999957849589268	WITHOUT_CLASSIFICATION	4.215041073230958E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999939870950967	WITHOUT_CLASSIFICATION	6.012904903307742E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999940741187572	WITHOUT_CLASSIFICATION	5.925881242839932E-6	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999995218402732	WITHOUT_CLASSIFICATION	4.781597267036717E-7	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999960625589815	WITHOUT_CLASSIFICATION	3.937441018485324E-6	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999915165609494	WITHOUT_CLASSIFICATION	8.483439050590631E-6	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999983099447226	WITHOUT_CLASSIFICATION	1.6900552773614595E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999317201426398	WITHOUT_CLASSIFICATION	6.827985736023272E-5	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999671846452702	WITHOUT_CLASSIFICATION	3.281535472972872E-5	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999838603919041	WITHOUT_CLASSIFICATION	1.6139608095861862E-5	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999942703263924	WITHOUT_CLASSIFICATION	5.729673607614906E-6	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999518563487156	WITHOUT_CLASSIFICATION	4.814365128442781E-5	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999933766997133	WITHOUT_CLASSIFICATION	6.623300286630798E-6	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999950869404272	WITHOUT_CLASSIFICATION	4.913059572894905E-6	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999886294508443	WITHOUT_CLASSIFICATION	1.1370549155764217E-5	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999815047411201	WITHOUT_CLASSIFICATION	1.8495258879876833E-5	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999985615966758	WITHOUT_CLASSIFICATION	1.438403324296066E-6	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999995482749247	WITHOUT_CLASSIFICATION	4.51725075319709E-7	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999993732088442	WITHOUT_CLASSIFICATION	6.26791155705342E-7	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.99999661739621	WITHOUT_CLASSIFICATION	3.382603789810369E-6	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999950873990643	WITHOUT_CLASSIFICATION	4.912600935629121E-6	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999963778754225	WITHOUT_CLASSIFICATION	3.6221245774210403E-6	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999848180961406	WITHOUT_CLASSIFICATION	1.5181903859502142E-5	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.999880439787672	WITHOUT_CLASSIFICATION	1.1956021232801959E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.99998719020106	WITHOUT_CLASSIFICATION	1.2809798940006648E-5	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999937998459485	WITHOUT_CLASSIFICATION	6.200154051509491E-6	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999969052107202	WITHOUT_CLASSIFICATION	3.094789279757096E-6	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9999990294287296	WITHOUT_CLASSIFICATION	9.705712703623487E-7	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999933617103715	WITHOUT_CLASSIFICATION	6.638289628609465E-6	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999114373972778	WITHOUT_CLASSIFICATION	8.856260272220157E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999736682513208	WITHOUT_CLASSIFICATION	2.6331748679183528E-5	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999516085818004	WITHOUT_CLASSIFICATION	4.83914181996157E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999969241864205	WITHOUT_CLASSIFICATION	3.075813579508714E-6	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999997313097891	WITHOUT_CLASSIFICATION	2.6869021087891736E-7	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.999999027036699	WITHOUT_CLASSIFICATION	9.729633010977675E-7	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999966337990681	WITHOUT_CLASSIFICATION	3.366200931956906E-6	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999837337357189	WITHOUT_CLASSIFICATION	1.6266264281063494E-5	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999900121134614	WITHOUT_CLASSIFICATION	9.987886538601032E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999748121677744	WITHOUT_CLASSIFICATION	2.51878322255993E-5	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999859046608336	WITHOUT_CLASSIFICATION	1.4095339166371334E-5	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999892411800474	WITHOUT_CLASSIFICATION	1.0758819952691139E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999989978171804	WITHOUT_CLASSIFICATION	1.002182819533609E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999983802000559	WITHOUT_CLASSIFICATION	1.61979994408732E-6	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999987382604928	WITHOUT_CLASSIFICATION	1.2617395071663261E-6	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999881763958074	WITHOUT_CLASSIFICATION	1.1823604192494242E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999881763958074	WITHOUT_CLASSIFICATION	1.1823604192494242E-5	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999941267405847	WITHOUT_CLASSIFICATION	5.873259415318736E-6	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999932012487	WITHOUT_CLASSIFICATION	6.798751299973302E-6	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999997614287205	WITHOUT_CLASSIFICATION	2.3857127951436566E-7	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9997975753615931	WITHOUT_CLASSIFICATION	2.0242463840699912E-4	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999971637252045	WITHOUT_CLASSIFICATION	2.8362747954998037E-6	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999933169130113	WITHOUT_CLASSIFICATION	6.6830869886496415E-6	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999909260503489	WITHOUT_CLASSIFICATION	9.073949651139607E-6	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9999964554618871	WITHOUT_CLASSIFICATION	3.5445381129431664E-6	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999827885321014	WITHOUT_CLASSIFICATION	1.7211467898560576E-5	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9999997258708461	WITHOUT_CLASSIFICATION	2.741291539234494E-7	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999937764700336	WITHOUT_CLASSIFICATION	6.223529966394958E-6	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999997352291464	WITHOUT_CLASSIFICATION	2.6477085359607014E-7	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999990086376511	WITHOUT_CLASSIFICATION	9.913623489057933E-7	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999990285323276	WITHOUT_CLASSIFICATION	9.71467672364489E-7	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999953892785818	WITHOUT_CLASSIFICATION	4.610721418262854E-6	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999669406175082	WITHOUT_CLASSIFICATION	3.305938249170461E-5	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9999755673706642	WITHOUT_CLASSIFICATION	2.443262933594721E-5	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999952453180692	WITHOUT_CLASSIFICATION	4.754681930804516E-6	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999800257125697	WITHOUT_CLASSIFICATION	1.9974287430311888E-5	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999885591670865	WITHOUT_CLASSIFICATION	1.144083291353848E-5	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.999917164044007	WITHOUT_CLASSIFICATION	8.283595599301124E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999982101622388	WITHOUT_CLASSIFICATION	1.7898377612517658E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.999995682795536	WITHOUT_CLASSIFICATION	4.317204464087884E-6	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999995122622882	WITHOUT_CLASSIFICATION	4.877377118092099E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999672300405046	WITHOUT_CLASSIFICATION	3.276995949541231E-5	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999841965230735	WITHOUT_CLASSIFICATION	1.5803476926456906E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999982101622388	WITHOUT_CLASSIFICATION	1.7898377612517658E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999937788769986	WITHOUT_CLASSIFICATION	6.221123001401823E-6	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9999060203980416	WITHOUT_CLASSIFICATION	9.397960195846971E-5	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.999994669490698	WITHOUT_CLASSIFICATION	5.330509301915549E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999781664256863	WITHOUT_CLASSIFICATION	2.1833574313812726E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9998996182729893	WITHOUT_CLASSIFICATION	1.0038172701069573E-4	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999961767416145	WITHOUT_CLASSIFICATION	3.823258385483754E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999786986687494	WITHOUT_CLASSIFICATION	2.130133125053246E-5	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999973834218623	WITHOUT_CLASSIFICATION	2.6165781377520868E-6	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999868763725266	WITHOUT_CLASSIFICATION	1.3123627473353017E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999956476430855	WITHOUT_CLASSIFICATION	4.3523569145218665E-6	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999990132625712	WITHOUT_CLASSIFICATION	9.867374287881591E-7	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999678839456186	WITHOUT_CLASSIFICATION	3.211605438140128E-5	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999966172123743	WITHOUT_CLASSIFICATION	3.3827876257080775E-6	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999974516673346	WITHOUT_CLASSIFICATION	2.5483326655141224E-6	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999807682357102	WITHOUT_CLASSIFICATION	1.9231764289756997E-5	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999975947550296	WITHOUT_CLASSIFICATION	2.4052449703329967E-6	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.999978412852285	WITHOUT_CLASSIFICATION	2.158714771504763E-5	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.999999393747292	WITHOUT_CLASSIFICATION	6.062527080015188E-7	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999957645158778	WITHOUT_CLASSIFICATION	4.23548412218986E-6	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999937018415397	WITHOUT_CLASSIFICATION	6.2981584603681245E-6	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999875417106304	WITHOUT_CLASSIFICATION	1.2458289369529394E-5	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999994543570618	WITHOUT_CLASSIFICATION	5.456429382164142E-7	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999921099012529	WITHOUT_CLASSIFICATION	7.890098747190889E-6	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999997978302226	WITHOUT_CLASSIFICATION	2.0216977741308788E-7	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999986999513701	WITHOUT_CLASSIFICATION	1.3000486299454308E-6	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999956434926289	WITHOUT_CLASSIFICATION	4.356507371084983E-6	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999964262609345	WITHOUT_CLASSIFICATION	3.573739065472869E-6	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999426205883881	WITHOUT_CLASSIFICATION	5.7379411611841556E-5	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999948102000976	WITHOUT_CLASSIFICATION	5.189799902362591E-6	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9999458333824657	WITHOUT_CLASSIFICATION	5.416661753424308E-5	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999734273916628	WITHOUT_CLASSIFICATION	2.6572608337136656E-5	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999803038166107	WITHOUT_CLASSIFICATION	1.9696183389193187E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999461339276415	WITHOUT_CLASSIFICATION	5.386607235852792E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9998996182729893	WITHOUT_CLASSIFICATION	1.0038172701069573E-4	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999961767416145	WITHOUT_CLASSIFICATION	3.823258385483754E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999786986687494	WITHOUT_CLASSIFICATION	2.130133125053246E-5	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999868763725266	WITHOUT_CLASSIFICATION	1.3123627473353017E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999956476430855	WITHOUT_CLASSIFICATION	4.3523569145218665E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9999977203864412	WITHOUT_CLASSIFICATION	2.2796135587113243E-6	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999997157991521	WITHOUT_CLASSIFICATION	2.84200847874864E-7	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999870287211013	WITHOUT_CLASSIFICATION	1.2971278898528543E-5	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999744584963562	WITHOUT_CLASSIFICATION	2.5541503643725878E-5	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9999794523910909	WITHOUT_CLASSIFICATION	2.0547608909063923E-5	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999939950589847	WITHOUT_CLASSIFICATION	6.004941015287492E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999966706320471	WITHOUT_CLASSIFICATION	3.329367952925802E-6	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9999939983440437	WITHOUT_CLASSIFICATION	6.001655956368084E-6	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999658651102945	WITHOUT_CLASSIFICATION	3.413488970558341E-5	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.999996897615538	WITHOUT_CLASSIFICATION	3.1023844620315413E-6	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999903528513792	WITHOUT_CLASSIFICATION	9.647148620721628E-6	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.999977352840289	WITHOUT_CLASSIFICATION	2.2647159711015072E-5	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999998981364577	WITHOUT_CLASSIFICATION	1.018635421854064E-7	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999573063264824	WITHOUT_CLASSIFICATION	4.269367351759019E-5	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.999980421795103	WITHOUT_CLASSIFICATION	1.9578204896988432E-5	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999540560795842	WITHOUT_CLASSIFICATION	4.5943920415859384E-5	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999987413303004	WITHOUT_CLASSIFICATION	1.2586696995544133E-6	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999986383840325	WITHOUT_CLASSIFICATION	1.3616159675580554E-6	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999974554145836	WITHOUT_CLASSIFICATION	2.5445854163487216E-6	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999833425378014	WITHOUT_CLASSIFICATION	1.6657462198568403E-5	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999920880592181	WITHOUT_CLASSIFICATION	7.91194078179691E-6	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999812147983093	WITHOUT_CLASSIFICATION	1.878520169064534E-5	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999986373746943	WITHOUT_CLASSIFICATION	1.3626253057647912E-6	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999947096494143	WITHOUT_CLASSIFICATION	5.290350585755328E-6	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999897225012409	WITHOUT_CLASSIFICATION	1.027749875915458E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999876018077924	WITHOUT_CLASSIFICATION	1.2398192207550834E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999317201426398	WITHOUT_CLASSIFICATION	6.827985736023272E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999969241864205	WITHOUT_CLASSIFICATION	3.075813579508714E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999956476430855	WITHOUT_CLASSIFICATION	4.3523569145218665E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999975993795942	WITHOUT_CLASSIFICATION	2.4006204057516275E-6	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999997181809345	WITHOUT_CLASSIFICATION	2.8181906546577846E-7	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999997399275183	WITHOUT_CLASSIFICATION	2.600724817247429E-7	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999082751334629	WITHOUT_CLASSIFICATION	9.172486653709177E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999082751334629	WITHOUT_CLASSIFICATION	9.172486653709177E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999996590460886	WITHOUT_CLASSIFICATION	3.409539113508297E-7	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9998760546849631	WITHOUT_CLASSIFICATION	1.2394531503697796E-4	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999852068736429	WITHOUT_CLASSIFICATION	1.4793126357013725E-5	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999718569542957	WITHOUT_CLASSIFICATION	2.8143045704273107E-5	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9997146166495924	WITHOUT_CLASSIFICATION	2.8538335040768247E-4	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9992852498275074	WITHOUT_CLASSIFICATION	7.147501724925701E-4	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999701592555117	WITHOUT_CLASSIFICATION	2.9840744488257622E-5	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9997051122175639	WITHOUT_CLASSIFICATION	2.9488778243606464E-4	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999380989530232	WITHOUT_CLASSIFICATION	6.190104697670543E-5	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999889477787856	WITHOUT_CLASSIFICATION	1.1052221214415452E-5	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999566491446108	WITHOUT_CLASSIFICATION	4.335085538909073E-5	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999941359843125	WITHOUT_CLASSIFICATION	5.864015687515928E-6	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9999346462614166	WITHOUT_CLASSIFICATION	6.535373858339072E-5	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9999648965285812	WITHOUT_CLASSIFICATION	3.5103471418811484E-5	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9999887191003757	WITHOUT_CLASSIFICATION	1.1280899624422124E-5	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.999991925750889	WITHOUT_CLASSIFICATION	8.074249110945777E-6	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999866365714616	WITHOUT_CLASSIFICATION	1.3363428538423775E-5	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999963349425751	WITHOUT_CLASSIFICATION	3.665057424861571E-6	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999652598554882	WITHOUT_CLASSIFICATION	3.474014451177304E-5	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999919697126105	WITHOUT_CLASSIFICATION	8.030287389528922E-6	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.999991925750889	WITHOUT_CLASSIFICATION	8.074249110945777E-6	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999933250510299	WITHOUT_CLASSIFICATION	6.674948970079461E-6	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999994749422025	WITHOUT_CLASSIFICATION	5.250577974851351E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999994749422025	WITHOUT_CLASSIFICATION	5.250577974851351E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999963349425751	WITHOUT_CLASSIFICATION	3.665057424861571E-6	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.999980519003833	WITHOUT_CLASSIFICATION	1.948099616697439E-5	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999900563966891	WITHOUT_CLASSIFICATION	9.9436033108225E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999900563966891	WITHOUT_CLASSIFICATION	9.9436033108225E-6	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999954038061197	WITHOUT_CLASSIFICATION	4.5961938802981285E-6	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999930605740431	WITHOUT_CLASSIFICATION	6.93942595686053E-6	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9998442791273373	WITHOUT_CLASSIFICATION	1.5572087266272337E-4	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999802631263103	WITHOUT_CLASSIFICATION	1.9736873689693172E-5	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999968317651221	WITHOUT_CLASSIFICATION	3.1682348778468803E-6	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999042311546323	WITHOUT_CLASSIFICATION	9.576884536758725E-5	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9999962614444005	WITHOUT_CLASSIFICATION	3.7385555994793606E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.999945556570706	WITHOUT_CLASSIFICATION	5.444342929385173E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999684679017579	WITHOUT_CLASSIFICATION	3.153209824209926E-5	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999517194492169	WITHOUT_CLASSIFICATION	4.828055078318899E-5	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999223845837252	WITHOUT_CLASSIFICATION	7.761541627484964E-5	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999967995450412	WITHOUT_CLASSIFICATION	3.200454958784377E-6	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9999962192419447	WITHOUT_CLASSIFICATION	3.7807580553887575E-6	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999552521730745	WITHOUT_CLASSIFICATION	4.474782692541319E-5	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.999989967337019	WITHOUT_CLASSIFICATION	1.003266298099581E-5	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999989916544918	WITHOUT_CLASSIFICATION	1.0083455082026898E-6	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999990275214663	WITHOUT_CLASSIFICATION	9.724785337344927E-7	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999982493136337	WITHOUT_CLASSIFICATION	1.7506863662475629E-6	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9999025667276348	WITHOUT_CLASSIFICATION	9.743327236521167E-5	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999355673838485	WITHOUT_CLASSIFICATION	6.443261615151217E-5	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999835134507671	WITHOUT_CLASSIFICATION	1.6486549232934805E-5	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999971275823668	WITHOUT_CLASSIFICATION	2.8724176331796927E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999639993831596	WITHOUT_CLASSIFICATION	3.6000616840446534E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999380989530232	WITHOUT_CLASSIFICATION	6.190104697670543E-5	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999986831933395	WITHOUT_CLASSIFICATION	1.3168066605035167E-6	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999962035080426	WITHOUT_CLASSIFICATION	3.796491957503912E-6	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999994352916975	WITHOUT_CLASSIFICATION	5.647083024832033E-7	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.999983855443571	WITHOUT_CLASSIFICATION	1.614455642890878E-5	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999905156061338	WITHOUT_CLASSIFICATION	9.484393866169976E-6	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999901539299927	WITHOUT_CLASSIFICATION	9.8460700073531E-6	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999941499301578	WITHOUT_CLASSIFICATION	5.850069842148449E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999991662164035	WITHOUT_CLASSIFICATION	8.33783596570698E-7	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999922132526744	WITHOUT_CLASSIFICATION	7.78674732560902E-6	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999946599505859	WITHOUT_CLASSIFICATION	5.340049414122216E-6	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9999359994142554	WITHOUT_CLASSIFICATION	6.400058574461077E-5	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999897507968571	WITHOUT_CLASSIFICATION	1.0249203142832692E-5	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9999653277437712	WITHOUT_CLASSIFICATION	3.467225622883853E-5	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999934000621842	WITHOUT_CLASSIFICATION	6.599937815809758E-6	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999683773297485	WITHOUT_CLASSIFICATION	3.1622670251394055E-5	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999972177918295	WITHOUT_CLASSIFICATION	2.782208170499715E-6	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999980479976384	WITHOUT_CLASSIFICATION	1.9520023616714774E-6	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999857839147112	WITHOUT_CLASSIFICATION	1.4216085288886789E-5	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.999919986893882	WITHOUT_CLASSIFICATION	8.001310611804734E-5	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9998394431389949	WITHOUT_CLASSIFICATION	1.6055686100520549E-4	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.999996315309667	WITHOUT_CLASSIFICATION	3.684690332893254E-6	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999172061218334	WITHOUT_CLASSIFICATION	8.279387816649616E-5	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9999715923626752	WITHOUT_CLASSIFICATION	2.8407637324881E-5	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.999995897327332	WITHOUT_CLASSIFICATION	4.102672668069719E-6	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999702597143941	WITHOUT_CLASSIFICATION	2.974028560585231E-5	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999844090267032	WITHOUT_CLASSIFICATION	1.5590973296869534E-5	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.999977977185467	WITHOUT_CLASSIFICATION	2.2022814532971217E-5	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.999965242362588	WITHOUT_CLASSIFICATION	3.475763741199848E-5	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.999997627603303	WITHOUT_CLASSIFICATION	2.372396696864317E-6	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999646421524715	WITHOUT_CLASSIFICATION	3.535784752857922E-5	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999987832177206	WITHOUT_CLASSIFICATION	1.2167822794393373E-6	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.999996142589942	WITHOUT_CLASSIFICATION	3.857410058082836E-6	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.99998302826667	WITHOUT_CLASSIFICATION	1.6971733330128698E-5	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.999969619454923	WITHOUT_CLASSIFICATION	3.0380545076988147E-5	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9999714137443863	WITHOUT_CLASSIFICATION	2.8586255613823728E-5	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999976356651854	WITHOUT_CLASSIFICATION	2.364334814657593E-6	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999439065993077	WITHOUT_CLASSIFICATION	5.60934006924138E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999439065993077	WITHOUT_CLASSIFICATION	5.60934006924138E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999524407304775	WITHOUT_CLASSIFICATION	4.7559269522512954E-5	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999967203211807	WITHOUT_CLASSIFICATION	3.2796788191968425E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999992473063493	WITHOUT_CLASSIFICATION	7.526936507520056E-7	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9999934536608991	WITHOUT_CLASSIFICATION	6.5463391009215425E-6	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999991901195839	WITHOUT_CLASSIFICATION	8.098804160844196E-7	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.999998947442408	WITHOUT_CLASSIFICATION	1.0525575919120178E-6	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9998861645710557	WITHOUT_CLASSIFICATION	1.1383542894433673E-4	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999984193957844	WITHOUT_CLASSIFICATION	1.5806042156418982E-6	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999944623893738	WITHOUT_CLASSIFICATION	5.53761062617693E-6	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999994098088457	WITHOUT_CLASSIFICATION	5.901911542604862E-7	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999957226965617	WITHOUT_CLASSIFICATION	4.2773034383662745E-6	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999996343198579	WITHOUT_CLASSIFICATION	3.656801420424441E-7	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999996635378999	WITHOUT_CLASSIFICATION	3.364621000400606E-7	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999954579401743	WITHOUT_CLASSIFICATION	4.542059825614687E-6	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999930407599441	WITHOUT_CLASSIFICATION	6.959240055896517E-6	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999412799326907	WITHOUT_CLASSIFICATION	5.872006730932621E-5	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.999998559559835	WITHOUT_CLASSIFICATION	1.4404401649572785E-6	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999956729558196	WITHOUT_CLASSIFICATION	4.327044180333881E-6	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999713031925596	WITHOUT_CLASSIFICATION	2.8696807440564284E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999988806620504	WITHOUT_CLASSIFICATION	1.1193379495769859E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9998347156182168	WITHOUT_CLASSIFICATION	1.6528438178313492E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9998347156182168	WITHOUT_CLASSIFICATION	1.6528438178313492E-4	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999996467801263	WITHOUT_CLASSIFICATION	3.532198736573166E-7	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.999998712928948	WITHOUT_CLASSIFICATION	1.2870710519198639E-6	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999988310209906	WITHOUT_CLASSIFICATION	1.168979009435274E-6	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999935637082626	WITHOUT_CLASSIFICATION	6.43629173728818E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999977022500529	WITHOUT_CLASSIFICATION	2.29774994703223E-6	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999861961895017	WITHOUT_CLASSIFICATION	1.3803810498301459E-5	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999883785089313	WITHOUT_CLASSIFICATION	1.1621491068681976E-5	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9997479395662605	WITHOUT_CLASSIFICATION	2.520604337395327E-4	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9998402188389028	WITHOUT_CLASSIFICATION	1.597811610971187E-4	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9991444630813223	WITHOUT_CLASSIFICATION	8.555369186776517E-4	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999956259636645	WITHOUT_CLASSIFICATION	4.37403633545937E-6	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9994562875562366	WITHOUT_CLASSIFICATION	5.437124437633903E-4	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999347928653997	WITHOUT_CLASSIFICATION	6.520713460040882E-5	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999991467030876	WITHOUT_CLASSIFICATION	8.532969123981132E-7	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999991104661187	WITHOUT_CLASSIFICATION	8.895338814299035E-7	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999901216907572	WITHOUT_CLASSIFICATION	9.878309242791906E-6	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999882179306667	WITHOUT_CLASSIFICATION	1.178206933336557E-5	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9998441555706336	WITHOUT_CLASSIFICATION	1.5584442936645394E-4	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999776543561218	WITHOUT_CLASSIFICATION	2.2345643878186984E-5	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9993638585136445	WITHOUT_CLASSIFICATION	6.361414863554305E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999851519445434	WITHOUT_CLASSIFICATION	1.4848055456551565E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999981309048691	WITHOUT_CLASSIFICATION	1.869095130869185E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999531492462655	WITHOUT_CLASSIFICATION	4.685075373448364E-5	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999990487286683	WITHOUT_CLASSIFICATION	9.512713315717662E-7	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.999998620616361	WITHOUT_CLASSIFICATION	1.3793836389783828E-6	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999993781054787	WITHOUT_CLASSIFICATION	6.218945214539081E-7	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999965521145355	WITHOUT_CLASSIFICATION	3.447885464561637E-6	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999846066967444	WITHOUT_CLASSIFICATION	1.539330325561448E-5	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999902078052574	WITHOUT_CLASSIFICATION	9.792194742595983E-6	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.999997332252607	WITHOUT_CLASSIFICATION	2.6677473929243733E-6	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9998859382953672	WITHOUT_CLASSIFICATION	1.1406170463272784E-4	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999875445234315	WITHOUT_CLASSIFICATION	1.2455476568424018E-5	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999935519080178	WITHOUT_CLASSIFICATION	6.448091982292717E-6	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999935519080178	WITHOUT_CLASSIFICATION	6.448091982292717E-6	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9999882121625043	WITHOUT_CLASSIFICATION	1.1787837495742323E-5	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999399414219536	WITHOUT_CLASSIFICATION	6.005857804642002E-5	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999989503335714	WITHOUT_CLASSIFICATION	1.0496664285921854E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999253252011037	WITHOUT_CLASSIFICATION	7.467479889635418E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999954399360702	WITHOUT_CLASSIFICATION	4.560063929833023E-6	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999930705882425	WITHOUT_CLASSIFICATION	6.929411757460279E-6	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9998867023631539	WITHOUT_CLASSIFICATION	1.1329763684606998E-4	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999856281798183	WITHOUT_CLASSIFICATION	1.4371820181766894E-5	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999996633768522	WITHOUT_CLASSIFICATION	3.366231477963657E-7	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999925661777163	WITHOUT_CLASSIFICATION	7.433822283746067E-6	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999818246249979	WITHOUT_CLASSIFICATION	1.8175375002123465E-5	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999463000319707	WITHOUT_CLASSIFICATION	5.3699968029316986E-5	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999906953058708	WITHOUT_CLASSIFICATION	9.304694129224938E-6	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.99999922253949	WITHOUT_CLASSIFICATION	7.774605099025859E-7	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999761970797331	WITHOUT_CLASSIFICATION	2.380292026693098E-5	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999884882086099	WITHOUT_CLASSIFICATION	1.1511791390252513E-5	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9996469828264972	WITHOUT_CLASSIFICATION	3.53017173502852E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9991267064818136	WITHOUT_CLASSIFICATION	8.73293518186394E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999935134530845	WITHOUT_CLASSIFICATION	6.486546915528612E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999899350350291	WITHOUT_CLASSIFICATION	1.0064964970984094E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999380989530232	WITHOUT_CLASSIFICATION	6.190104697670543E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999995490963924	WITHOUT_CLASSIFICATION	4.5090360748354014E-7	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9998455588759353	WITHOUT_CLASSIFICATION	1.544411240647308E-4	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999993300495025	WITHOUT_CLASSIFICATION	6.699504975486294E-7	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9970373165063912	WITHOUT_CLASSIFICATION	0.0029626834936088186	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999989390110194	WITHOUT_CLASSIFICATION	1.0609889806005992E-6	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999885323433567	WITHOUT_CLASSIFICATION	1.1467656643240356E-5	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.999998183290314	WITHOUT_CLASSIFICATION	1.816709685917792E-6	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.99999904685091	WITHOUT_CLASSIFICATION	9.531490899398293E-7	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.999991789328176	WITHOUT_CLASSIFICATION	8.210671824065337E-6	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999981622642405	WITHOUT_CLASSIFICATION	1.8377357594148522E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999981926806594	WITHOUT_CLASSIFICATION	1.807319340655103E-6	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9998676704679484	WITHOUT_CLASSIFICATION	1.323295320515309E-4	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999974621714571	WITHOUT_CLASSIFICATION	2.5378285429072393E-6	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.999196139544804	WITHOUT_CLASSIFICATION	8.038604551960516E-4	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999994739776998	WITHOUT_CLASSIFICATION	5.260223000957015E-7	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999868453520645	WITHOUT_CLASSIFICATION	1.3154647935402083E-5	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999847073330128	WITHOUT_CLASSIFICATION	1.529266698719127E-5	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999849486315707	WITHOUT_CLASSIFICATION	1.5051368429175586E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999956476430855	WITHOUT_CLASSIFICATION	4.3523569145218665E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9998681719314014	WITHOUT_CLASSIFICATION	1.3182806859862297E-4	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999894919534984	WITHOUT_CLASSIFICATION	1.0508046501702445E-5	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9995774618856236	WITHOUT_CLASSIFICATION	4.225381143764398E-4	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999174256858725	WITHOUT_CLASSIFICATION	8.257431412749784E-5	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999962380225358	WITHOUT_CLASSIFICATION	3.7619774642578514E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999998586697393	WITHOUT_CLASSIFICATION	1.4133026077638998E-7	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999863243210745	WITHOUT_CLASSIFICATION	1.3675678925518808E-5	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999974198506318	WITHOUT_CLASSIFICATION	2.5801493681833187E-6	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999970813095039	WITHOUT_CLASSIFICATION	2.9186904960047865E-6	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.999944681446411	WITHOUT_CLASSIFICATION	5.531855358889215E-5	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.999988979477782	WITHOUT_CLASSIFICATION	1.1020522217903084E-5	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999987519219647	WITHOUT_CLASSIFICATION	1.2480780352157137E-6	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999837893574709	WITHOUT_CLASSIFICATION	1.62106425291627E-5	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999934078531004	WITHOUT_CLASSIFICATION	6.592146899563405E-6	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.999995829326373	WITHOUT_CLASSIFICATION	4.170673627064325E-6	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999990361128427	WITHOUT_CLASSIFICATION	9.638871572206446E-7	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.999997806752838	WITHOUT_CLASSIFICATION	2.1932471620530986E-6	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999985208940873	WITHOUT_CLASSIFICATION	1.4791059128067038E-6	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999966166862533	WITHOUT_CLASSIFICATION	3.3833137467689958E-6	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999989164287212	WITHOUT_CLASSIFICATION	1.0835712788756414E-6	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999989164287212	WITHOUT_CLASSIFICATION	1.0835712788756414E-6	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999966466447163	WITHOUT_CLASSIFICATION	3.353355283801761E-6	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9998648654621212	WITHOUT_CLASSIFICATION	1.3513453787880725E-4	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999775157024918	WITHOUT_CLASSIFICATION	2.2484297508258413E-5	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9999989651365743	WITHOUT_CLASSIFICATION	1.0348634257139035E-6	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999985603384878	WITHOUT_CLASSIFICATION	1.4396615122116666E-6	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999853018247664	WITHOUT_CLASSIFICATION	1.4698175233577413E-5	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9996863883882914	WITHOUT_CLASSIFICATION	3.1361161170857744E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999886606316493	WITHOUT_CLASSIFICATION	1.1339368350817243E-5	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999886606316493	WITHOUT_CLASSIFICATION	1.1339368350817243E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999993718949531	WITHOUT_CLASSIFICATION	6.281050468884615E-6	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999982728736061	WITHOUT_CLASSIFICATION	1.7271263939741771E-6	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999855861221365	WITHOUT_CLASSIFICATION	1.4413877863481485E-5	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999969230185725	WITHOUT_CLASSIFICATION	3.0769814276644444E-6	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999900716723774	WITHOUT_CLASSIFICATION	9.928327622685653E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999984763651615	WITHOUT_CLASSIFICATION	1.5236348385211862E-6	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.999989953279813	WITHOUT_CLASSIFICATION	1.004672018697125E-5	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9998990527730504	WITHOUT_CLASSIFICATION	1.0094722694954655E-4	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999930827553817	WITHOUT_CLASSIFICATION	6.917244618364814E-6	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999986465578695	WITHOUT_CLASSIFICATION	1.3534421304164941E-6	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999987972943202	WITHOUT_CLASSIFICATION	1.2027056797909027E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999971740839505	WITHOUT_CLASSIFICATION	2.825916049507799E-6	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999982099889372	WITHOUT_CLASSIFICATION	1.7900110628852779E-6	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999830485231443	WITHOUT_CLASSIFICATION	1.695147685570647E-5	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999993537805283	WITHOUT_CLASSIFICATION	6.462194716717047E-7	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999810093859529	WITHOUT_CLASSIFICATION	1.8990614047140056E-5	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9999821942141338	WITHOUT_CLASSIFICATION	1.780578586618011E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999830151907932	WITHOUT_CLASSIFICATION	1.6984809206783116E-5	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999832157644631	WITHOUT_CLASSIFICATION	1.67842355369194E-5	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999998204630569	WITHOUT_CLASSIFICATION	1.7953694302907325E-7	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999557826779902	WITHOUT_CLASSIFICATION	4.421732200981583E-5	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999778146852016	WITHOUT_CLASSIFICATION	2.218531479834535E-5	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9998770374100515	WITHOUT_CLASSIFICATION	1.229625899485599E-4	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999898021894814	WITHOUT_CLASSIFICATION	1.0197810518587108E-5	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999902259253328	WITHOUT_CLASSIFICATION	9.774074667231087E-6	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999521126184555	WITHOUT_CLASSIFICATION	4.788738154444484E-5	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999996550369232	WITHOUT_CLASSIFICATION	3.449630767639766E-7	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999896958519485	WITHOUT_CLASSIFICATION	1.0304148051423236E-5	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999998538057592	WITHOUT_CLASSIFICATION	1.4619424077020914E-7	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9999997243373833	WITHOUT_CLASSIFICATION	2.75662616815819E-7	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9999949880069462	WITHOUT_CLASSIFICATION	5.011993053867809E-6	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.99991956283491	WITHOUT_CLASSIFICATION	8.043716508996144E-5	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9999808046787624	WITHOUT_CLASSIFICATION	1.9195321237664106E-5	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999950825564629	WITHOUT_CLASSIFICATION	4.917443537232293E-6	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999995173190325	WITHOUT_CLASSIFICATION	4.826809675831895E-7	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9999845799690056	WITHOUT_CLASSIFICATION	1.5420030994447675E-5	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.999944596328092	WITHOUT_CLASSIFICATION	5.540367190803239E-5	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999774413942729	WITHOUT_CLASSIFICATION	2.2558605727076417E-5	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9996029168155561	WITHOUT_CLASSIFICATION	3.970831844438317E-4	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.999996713282062	WITHOUT_CLASSIFICATION	3.286717938030345E-6	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999645313724287	WITHOUT_CLASSIFICATION	3.546862757138039E-5	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9999905762600031	WITHOUT_CLASSIFICATION	9.423739996945637E-6	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999932354943893	WITHOUT_CLASSIFICATION	6.764505610659245E-6	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9997920795123084	WITHOUT_CLASSIFICATION	2.0792048769166307E-4	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999965240728271	WITHOUT_CLASSIFICATION	3.4759271728523755E-6	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9999058443662907	WITHOUT_CLASSIFICATION	9.415563370925048E-5	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999967730954199	WITHOUT_CLASSIFICATION	3.226904580115699E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999981309048691	WITHOUT_CLASSIFICATION	1.869095130869185E-6	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999967730954199	WITHOUT_CLASSIFICATION	3.226904580115699E-6	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999935997402044	WITHOUT_CLASSIFICATION	6.400259795599703E-6	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9999379466759477	WITHOUT_CLASSIFICATION	6.205332405224147E-5	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.999999366524357	WITHOUT_CLASSIFICATION	6.334756430815564E-7	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999819079981518	WITHOUT_CLASSIFICATION	1.8092001848265677E-5	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9999723599694698	WITHOUT_CLASSIFICATION	2.7640030530213353E-5	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9998473720224219	WITHOUT_CLASSIFICATION	1.5262797757809276E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999729471577	WITHOUT_CLASSIFICATION	2.7052842299893497E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999833245075845	WITHOUT_CLASSIFICATION	1.6675492415383387E-5	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999986768907544	WITHOUT_CLASSIFICATION	1.3231092456715202E-6	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999994840970562	WITHOUT_CLASSIFICATION	5.159029438357116E-7	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999964946453528	WITHOUT_CLASSIFICATION	3.505354647278756E-6	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999968087306915	WITHOUT_CLASSIFICATION	3.191269308544061E-6	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999909678819002	WITHOUT_CLASSIFICATION	9.032118099687427E-6	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999916775349134	WITHOUT_CLASSIFICATION	8.322465086640059E-6	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999948079580073	WITHOUT_CLASSIFICATION	5.192041992657371E-6	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.999970623261333	WITHOUT_CLASSIFICATION	2.9376738666922535E-5	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.99996444616985	WITHOUT_CLASSIFICATION	3.5553830149956464E-5	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.999974655032768	WITHOUT_CLASSIFICATION	2.534496723208538E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999017346754299	WITHOUT_CLASSIFICATION	9.826532457015832E-5	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999936464412631	WITHOUT_CLASSIFICATION	6.35355873698513E-6	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999334804688408	WITHOUT_CLASSIFICATION	6.651953115926004E-5	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999987260453734	WITHOUT_CLASSIFICATION	1.27395462653574E-6	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.999996892006721	WITHOUT_CLASSIFICATION	3.1079932789222682E-6	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999993727963973	WITHOUT_CLASSIFICATION	6.272036026079327E-7	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.99999942386472	WITHOUT_CLASSIFICATION	5.761352800059706E-7	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999823479548307	WITHOUT_CLASSIFICATION	1.765204516931979E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9999724779126694	WITHOUT_CLASSIFICATION	2.7522087330535346E-5	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999890921179982	WITHOUT_CLASSIFICATION	1.0907882001843217E-5	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999559518908457	WITHOUT_CLASSIFICATION	4.404810915424881E-5	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9994534771550032	WITHOUT_CLASSIFICATION	5.465228449967997E-4	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999746126330965	WITHOUT_CLASSIFICATION	2.5387366903524594E-5	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.999771215075438	WITHOUT_CLASSIFICATION	2.2878492456203487E-4	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9999631841634778	WITHOUT_CLASSIFICATION	3.6815836522210956E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999665084170699	WITHOUT_CLASSIFICATION	3.3491582930118416E-5	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999966027852509	WITHOUT_CLASSIFICATION	3.397214748959003E-6	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999997959330861	WITHOUT_CLASSIFICATION	2.0406691398694595E-7	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999938031373148	WITHOUT_CLASSIFICATION	6.196862685218831E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999979265814458	WITHOUT_CLASSIFICATION	2.0734185541568397E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999979265814458	WITHOUT_CLASSIFICATION	2.0734185541568397E-6	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9998471053291177	WITHOUT_CLASSIFICATION	1.5289467088232665E-4	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999911262180066	WITHOUT_CLASSIFICATION	8.873781993556443E-6	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999919056030089	WITHOUT_CLASSIFICATION	8.094396991183287E-6	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999990687778088	WITHOUT_CLASSIFICATION	9.312221912577301E-7	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999977281500617	WITHOUT_CLASSIFICATION	2.271849938277726E-6	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999993382800413	WITHOUT_CLASSIFICATION	6.617199586241647E-7	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999714671801236	WITHOUT_CLASSIFICATION	2.8532819876360864E-5	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999997285945935	WITHOUT_CLASSIFICATION	2.7140540652936873E-7	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999057191256631	WITHOUT_CLASSIFICATION	9.428087433682683E-5	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999896470383414	WITHOUT_CLASSIFICATION	1.035296165853222E-5	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9999839397516195	WITHOUT_CLASSIFICATION	1.6060248380479692E-5	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9997998604903854	WITHOUT_CLASSIFICATION	2.0013950961457897E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999704988339965	WITHOUT_CLASSIFICATION	2.9501166003492725E-5	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9999452729813463	WITHOUT_CLASSIFICATION	5.472701865380074E-5	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999926961586304	WITHOUT_CLASSIFICATION	7.303841369638045E-6	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.999825544785488	WITHOUT_CLASSIFICATION	1.7445521451208855E-4	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999946164602306	WITHOUT_CLASSIFICATION	5.38353976939354E-6	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999970447421579	WITHOUT_CLASSIFICATION	2.9552578421204604E-6	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999959271160502	WITHOUT_CLASSIFICATION	4.072883949783251E-6	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999926853549905	WITHOUT_CLASSIFICATION	7.314645009420654E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999642131516782	WITHOUT_CLASSIFICATION	3.5786848321881145E-5	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999972837136346	WITHOUT_CLASSIFICATION	2.716286365395868E-6	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9999231860496854	WITHOUT_CLASSIFICATION	7.681395031459606E-5	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9995722208863509	WITHOUT_CLASSIFICATION	4.2777911364908297E-4	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9999127880869277	WITHOUT_CLASSIFICATION	8.721191307218927E-5	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9998983582812498	WITHOUT_CLASSIFICATION	1.0164171875014806E-4	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9999868385701999	WITHOUT_CLASSIFICATION	1.3161429800073212E-5	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.999986191577876	WITHOUT_CLASSIFICATION	1.3808422123907478E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9999669508415386	WITHOUT_CLASSIFICATION	3.304915846139113E-5	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9999689933048448	WITHOUT_CLASSIFICATION	3.10066951552084E-5	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.999911599566616	WITHOUT_CLASSIFICATION	8.840043338396194E-5	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999693854594467	WITHOUT_CLASSIFICATION	3.061454055335844E-5	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.999997781916415	WITHOUT_CLASSIFICATION	2.2180835850136568E-6	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999965865255096	WITHOUT_CLASSIFICATION	3.4134744904098454E-6	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9999901318972961	WITHOUT_CLASSIFICATION	9.86810270383219E-6	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999652703193502	WITHOUT_CLASSIFICATION	3.472968064987333E-5	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999007385926513	WITHOUT_CLASSIFICATION	9.926140734870292E-5	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999007385926513	WITHOUT_CLASSIFICATION	9.926140734870292E-5	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9998899708597011	WITHOUT_CLASSIFICATION	1.1002914029888728E-4	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999940354734469	WITHOUT_CLASSIFICATION	5.964526553148142E-6	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999857933258901	WITHOUT_CLASSIFICATION	1.4206674109885145E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999973160576758	WITHOUT_CLASSIFICATION	2.683942324199943E-6	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999992834894902	WITHOUT_CLASSIFICATION	7.16510509897009E-7	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999452556748823	WITHOUT_CLASSIFICATION	5.4744325117587084E-5	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999365738168058	WITHOUT_CLASSIFICATION	6.342618319424303E-5	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999979115419626	WITHOUT_CLASSIFICATION	2.0884580374004193E-6	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999506296251377	WITHOUT_CLASSIFICATION	4.9370374862274044E-5	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.999999689907755	WITHOUT_CLASSIFICATION	3.1009224493489835E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999963892339839	WITHOUT_CLASSIFICATION	3.610766016048817E-6	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9999873013921158	WITHOUT_CLASSIFICATION	1.269860788420746E-5	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999755394754591	WITHOUT_CLASSIFICATION	2.4460524540837936E-5	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999885112050736	WITHOUT_CLASSIFICATION	1.1488794926441586E-5	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.999988259498503	WITHOUT_CLASSIFICATION	1.1740501496918097E-5	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999905604599585	WITHOUT_CLASSIFICATION	9.439540041528881E-6	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9997029606495156	WITHOUT_CLASSIFICATION	2.970393504844569E-4	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9998798903717528	WITHOUT_CLASSIFICATION	1.2010962824718149E-4	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999374588063477	WITHOUT_CLASSIFICATION	6.254119365237041E-5	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999752142825873	WITHOUT_CLASSIFICATION	2.4785717412623364E-5	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999965599996178	WITHOUT_CLASSIFICATION	3.4400003822340966E-6	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999779808509016	WITHOUT_CLASSIFICATION	2.201914909844373E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999892300352914	WITHOUT_CLASSIFICATION	1.076996470863057E-5	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999897237353926	WITHOUT_CLASSIFICATION	1.0276264607352955E-5	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.999981776650703	WITHOUT_CLASSIFICATION	1.8223349297078818E-5	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.999994646220738	WITHOUT_CLASSIFICATION	5.353779261939908E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999961821729374	WITHOUT_CLASSIFICATION	3.8178270626748526E-6	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999854121098741	WITHOUT_CLASSIFICATION	1.4587890125851827E-5	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999666941806076	WITHOUT_CLASSIFICATION	3.330581939242193E-5	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999958549647888	WITHOUT_CLASSIFICATION	4.145035211202549E-6	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999985181235027	WITHOUT_CLASSIFICATION	1.481876497249436E-6	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999987206924053	WITHOUT_CLASSIFICATION	1.2793075947325293E-6	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999964354028195	WITHOUT_CLASSIFICATION	3.5645971806718327E-6	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999992191127488	WITHOUT_CLASSIFICATION	7.808872511996018E-7	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999919400835924	WITHOUT_CLASSIFICATION	8.05991640756091E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999916705611175	WITHOUT_CLASSIFICATION	8.329438882540046E-6	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.999998677201506	WITHOUT_CLASSIFICATION	1.3227984939488459E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.99992041499336	WITHOUT_CLASSIFICATION	7.958500663994042E-5	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999977492819513	WITHOUT_CLASSIFICATION	2.250718048725978E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999998469862931	WITHOUT_CLASSIFICATION	1.5301370694683086E-7	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999939134320632	WITHOUT_CLASSIFICATION	6.086567936781601E-6	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999971867441363	WITHOUT_CLASSIFICATION	2.8132558636168106E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999960309830973	WITHOUT_CLASSIFICATION	3.969016902654045E-6	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9999983583510148	WITHOUT_CLASSIFICATION	1.6416489850995099E-6	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999992547526426	WITHOUT_CLASSIFICATION	7.452473573202174E-7	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9999911077261132	WITHOUT_CLASSIFICATION	8.89227388681843E-6	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999861920608828	WITHOUT_CLASSIFICATION	1.380793911721096E-5	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999941331703833	WITHOUT_CLASSIFICATION	5.866829616706489E-6	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9998729395067584	WITHOUT_CLASSIFICATION	1.2706049324160586E-4	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999940156302932	WITHOUT_CLASSIFICATION	5.984369706809312E-6	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999990406775318	WITHOUT_CLASSIFICATION	9.593224683202145E-7	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999990890473229	WITHOUT_CLASSIFICATION	9.109526771072476E-7	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999995138212072	WITHOUT_CLASSIFICATION	4.861787928093071E-7	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.999994299338502	WITHOUT_CLASSIFICATION	5.700661497912589E-6	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999994669733581	WITHOUT_CLASSIFICATION	5.33026641809273E-7	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999992034724778	WITHOUT_CLASSIFICATION	7.965275221194295E-7	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999937094011382	WITHOUT_CLASSIFICATION	6.290598861723416E-6	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999964105817244	WITHOUT_CLASSIFICATION	3.589418275555231E-6	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999825583712625	WITHOUT_CLASSIFICATION	1.7441628737427076E-5	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999933331304294	WITHOUT_CLASSIFICATION	6.666869570541899E-6	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9997125049545458	WITHOUT_CLASSIFICATION	2.8749504545429855E-4	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999765317594698	WITHOUT_CLASSIFICATION	2.3468240530227422E-5	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999765263527802	WITHOUT_CLASSIFICATION	2.347364721974305E-5	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999416958496493	WITHOUT_CLASSIFICATION	5.830415035071573E-5	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.999984532124772	WITHOUT_CLASSIFICATION	1.5467875227900706E-5	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9997584641078368	WITHOUT_CLASSIFICATION	2.415358921633472E-4	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9958319751153686	WITHOUT_CLASSIFICATION	0.004168024884631424	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999972964483612	WITHOUT_CLASSIFICATION	2.7035516387897726E-6	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999860930272354	WITHOUT_CLASSIFICATION	1.3906972764487199E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999681853419679	WITHOUT_CLASSIFICATION	3.1814658032220446E-5	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999539654071106	WITHOUT_CLASSIFICATION	4.603459288937903E-5	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999092055987602	WITHOUT_CLASSIFICATION	9.079440123977257E-5	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999310997755201	WITHOUT_CLASSIFICATION	6.8900224479887E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999847163714086	WITHOUT_CLASSIFICATION	1.5283628591317546E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999847163714086	WITHOUT_CLASSIFICATION	1.5283628591317546E-5	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999356260210363	WITHOUT_CLASSIFICATION	6.43739789637224E-5	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999782326543741	WITHOUT_CLASSIFICATION	2.1767345625784862E-5	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999924717966124	WITHOUT_CLASSIFICATION	7.528203387519519E-6	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999678283975765	WITHOUT_CLASSIFICATION	3.217160242341682E-5	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999453256405273	WITHOUT_CLASSIFICATION	5.467435947262929E-5	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999948301403614	WITHOUT_CLASSIFICATION	5.1698596386413875E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999817950152813	WITHOUT_CLASSIFICATION	1.8204984718711256E-5	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999938606485449	WITHOUT_CLASSIFICATION	6.139351454999705E-6	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9999391635949683	WITHOUT_CLASSIFICATION	6.083640503179744E-5	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999795086638108	WITHOUT_CLASSIFICATION	2.0491336189245846E-5	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999700869727655	WITHOUT_CLASSIFICATION	2.991302723460081E-5	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999588723150323	WITHOUT_CLASSIFICATION	4.1127684967638566E-5	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999760966606421	WITHOUT_CLASSIFICATION	2.390333935783655E-5	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999989162241004	WITHOUT_CLASSIFICATION	1.0837758996439371E-6	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9993773426952721	WITHOUT_CLASSIFICATION	6.22657304727805E-4	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999585582013946	WITHOUT_CLASSIFICATION	4.144179860541889E-5	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999933984705525	WITHOUT_CLASSIFICATION	6.601529447577465E-6	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999954275825255	WITHOUT_CLASSIFICATION	4.572417474571917E-6	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999969187401928	WITHOUT_CLASSIFICATION	3.0812598071483236E-6	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9998755588360168	WITHOUT_CLASSIFICATION	1.2444116398334834E-4	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9999992895151115	WITHOUT_CLASSIFICATION	7.104848884159539E-7	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999992560049829	WITHOUT_CLASSIFICATION	7.439950171821261E-7	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999977117213982	WITHOUT_CLASSIFICATION	2.2882786017391645E-6	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999871556991413	WITHOUT_CLASSIFICATION	1.2844300858673638E-5	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999640729977108	WITHOUT_CLASSIFICATION	3.592700228915533E-5	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999967022362349	WITHOUT_CLASSIFICATION	3.2977637651644957E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999781048370844	WITHOUT_CLASSIFICATION	2.1895162915639336E-5	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999967423718038	WITHOUT_CLASSIFICATION	3.2576281961208705E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999996141778515	WITHOUT_CLASSIFICATION	3.858221485590492E-7	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999982309896522	WITHOUT_CLASSIFICATION	1.7690103476768675E-6	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999998915049253	WITHOUT_CLASSIFICATION	1.0849507467273324E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.99999673344539	WITHOUT_CLASSIFICATION	3.2665546099906078E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999997646054375	WITHOUT_CLASSIFICATION	2.3539456259095834E-7	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999433326644297	WITHOUT_CLASSIFICATION	5.666733557026975E-5	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999989481883764	WITHOUT_CLASSIFICATION	1.0518116235843837E-6	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999844305335361	WITHOUT_CLASSIFICATION	1.5569466463852814E-5	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999997439712592	WITHOUT_CLASSIFICATION	2.5602874083759486E-7	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.999998077555254	WITHOUT_CLASSIFICATION	1.9224447459225205E-6	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999997818797763	WITHOUT_CLASSIFICATION	2.1812022353705432E-7	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999978712716738	WITHOUT_CLASSIFICATION	2.1287283261496166E-6	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999702869493169	WITHOUT_CLASSIFICATION	2.9713050683150644E-5	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999948776988091	WITHOUT_CLASSIFICATION	5.122301190866794E-6	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999863326329986	WITHOUT_CLASSIFICATION	1.3667367001249533E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999987257317335	WITHOUT_CLASSIFICATION	1.2742682664639865E-6	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999747461034463	WITHOUT_CLASSIFICATION	2.5253896553738253E-5	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9992290171339345	WITHOUT_CLASSIFICATION	7.709828660654694E-4	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999929401717657	WITHOUT_CLASSIFICATION	7.059828234376308E-6	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.999972015990137	WITHOUT_CLASSIFICATION	2.7984009862971468E-5	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999940373136694	WITHOUT_CLASSIFICATION	5.962686330647799E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999905949414489	WITHOUT_CLASSIFICATION	9.405058551141854E-6	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9997533582939576	WITHOUT_CLASSIFICATION	2.466417060423888E-4	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999903286825088	WITHOUT_CLASSIFICATION	9.671317491171074E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.9999950303575466	WITHOUT_CLASSIFICATION	4.9696424534297875E-6	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999919200049665	WITHOUT_CLASSIFICATION	8.079995033475007E-6	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.999999138943523	WITHOUT_CLASSIFICATION	8.610564769955678E-7	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999966903735216	WITHOUT_CLASSIFICATION	3.3096264785055234E-6	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999981367723244	WITHOUT_CLASSIFICATION	1.8632276756211878E-6	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999965817930992	WITHOUT_CLASSIFICATION	3.418206900676745E-6	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999522661389127	WITHOUT_CLASSIFICATION	4.773386108722492E-5	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999955913484334	WITHOUT_CLASSIFICATION	4.408651566583978E-6	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999948539046215	WITHOUT_CLASSIFICATION	5.146095378511286E-6	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999971468632147	WITHOUT_CLASSIFICATION	2.8531367853507387E-6	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999755320064497	WITHOUT_CLASSIFICATION	2.4467993550249842E-5	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.999920038350694	WITHOUT_CLASSIFICATION	7.996164930600558E-5	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999974950638337	WITHOUT_CLASSIFICATION	2.5049361662641015E-6	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999720930643573	WITHOUT_CLASSIFICATION	2.790693564274494E-5	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999987502446255	WITHOUT_CLASSIFICATION	1.249755374524084E-6	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999949110151879	WITHOUT_CLASSIFICATION	5.088984812134957E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999879002511657	WITHOUT_CLASSIFICATION	1.2099748834253422E-5	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999947859506775	WITHOUT_CLASSIFICATION	5.214049322440529E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999996557449601	WITHOUT_CLASSIFICATION	3.442550398976506E-7	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.999990251849532	WITHOUT_CLASSIFICATION	9.74815046791635E-6	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999966604643238	WITHOUT_CLASSIFICATION	3.339535676261047E-6	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999854110842277	WITHOUT_CLASSIFICATION	1.458891577228257E-5	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999963436063772	WITHOUT_CLASSIFICATION	3.6563936228105883E-6	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999929874026442	WITHOUT_CLASSIFICATION	7.01259735582447E-6	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999976686711912	WITHOUT_CLASSIFICATION	2.331328808809713E-6	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999983982953754	WITHOUT_CLASSIFICATION	1.601704624622432E-6	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999996756893645	WITHOUT_CLASSIFICATION	3.243106354314E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999958691562795	WITHOUT_CLASSIFICATION	4.1308437205303855E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9999733798468227	WITHOUT_CLASSIFICATION	2.662015317724313E-5	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999995883198419	WITHOUT_CLASSIFICATION	4.1168015809771206E-7	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9996825019784634	WITHOUT_CLASSIFICATION	3.174980215365251E-4	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999994957654865	WITHOUT_CLASSIFICATION	5.04234513595911E-7	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999968925769405	WITHOUT_CLASSIFICATION	3.1074230595941805E-6	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999983164905617	WITHOUT_CLASSIFICATION	1.6835094383032365E-6	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999977645096897	WITHOUT_CLASSIFICATION	2.2354903103644895E-6	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999948264511442	WITHOUT_CLASSIFICATION	5.173548855714949E-6	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999511716925178	WITHOUT_CLASSIFICATION	4.882830748223006E-5	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999994709331185	WITHOUT_CLASSIFICATION	5.290668814892299E-7	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999948236687025	WITHOUT_CLASSIFICATION	5.176331297555455E-6	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999646441737762	WITHOUT_CLASSIFICATION	3.535582622375606E-5	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999982005101145	WITHOUT_CLASSIFICATION	1.7994898856537946E-6	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999932309971656	WITHOUT_CLASSIFICATION	6.769002834332585E-6	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.999985501365805	WITHOUT_CLASSIFICATION	1.4498634195084622E-5	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999221840082138	WITHOUT_CLASSIFICATION	7.781599178634862E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999998811645886	WITHOUT_CLASSIFICATION	1.1883541137436258E-7	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999909316254088	WITHOUT_CLASSIFICATION	9.068374591345317E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999944071317824	WITHOUT_CLASSIFICATION	5.592868217511721E-6	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999967105414658	WITHOUT_CLASSIFICATION	3.2894585341169043E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999894194668877	WITHOUT_CLASSIFICATION	1.0580533112280512E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999976179497607	WITHOUT_CLASSIFICATION	2.382050239251803E-6	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999832782035631	WITHOUT_CLASSIFICATION	1.672179643692267E-5	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999885427616235	WITHOUT_CLASSIFICATION	1.1457238376534151E-5	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999655004785054	WITHOUT_CLASSIFICATION	3.449952149466447E-5	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999881944242928	WITHOUT_CLASSIFICATION	1.1805575707238812E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999924265943905	WITHOUT_CLASSIFICATION	7.573405609611353E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999838724822391	WITHOUT_CLASSIFICATION	1.6127517760905388E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999894194668877	WITHOUT_CLASSIFICATION	1.0580533112280512E-5	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999954537670699	WITHOUT_CLASSIFICATION	4.546232930100931E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999924265943905	WITHOUT_CLASSIFICATION	7.573405609611353E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999838724822391	WITHOUT_CLASSIFICATION	1.6127517760905388E-5	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999909222239052	WITHOUT_CLASSIFICATION	9.07777609487308E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999618764767819	WITHOUT_CLASSIFICATION	3.812352321819576E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999618764767819	WITHOUT_CLASSIFICATION	3.812352321819576E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999808234325325	WITHOUT_CLASSIFICATION	1.9176567467499542E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999808234325325	WITHOUT_CLASSIFICATION	1.9176567467499542E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999808234325325	WITHOUT_CLASSIFICATION	1.9176567467499542E-5	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999995049469132	WITHOUT_CLASSIFICATION	4.950530867997801E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999884454119337	WITHOUT_CLASSIFICATION	1.1554588066283327E-5	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999921028472748	WITHOUT_CLASSIFICATION	7.897152725250152E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999797271018993	WITHOUT_CLASSIFICATION	2.0272898100663843E-5	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999980633742779	WITHOUT_CLASSIFICATION	1.9366257220950957E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999945736427108	WITHOUT_CLASSIFICATION	5.42635728916522E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999968845551325	WITHOUT_CLASSIFICATION	3.1154448675132394E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999947137359342	WITHOUT_CLASSIFICATION	5.286264065849455E-6	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999820304742585	WITHOUT_CLASSIFICATION	1.7969525741558324E-5	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999694009599542	WITHOUT_CLASSIFICATION	3.059904004569044E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999894194668877	WITHOUT_CLASSIFICATION	1.0580533112280512E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999894194668877	WITHOUT_CLASSIFICATION	1.0580533112280512E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999894194668877	WITHOUT_CLASSIFICATION	1.0580533112280512E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999976179497607	WITHOUT_CLASSIFICATION	2.382050239251803E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999976179497607	WITHOUT_CLASSIFICATION	2.382050239251803E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999838724822391	WITHOUT_CLASSIFICATION	1.6127517760905388E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999618764767819	WITHOUT_CLASSIFICATION	3.812352321819576E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999618764767819	WITHOUT_CLASSIFICATION	3.812352321819576E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999808234325325	WITHOUT_CLASSIFICATION	1.9176567467499542E-5	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999884454119337	WITHOUT_CLASSIFICATION	1.1554588066283327E-5	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999797271018993	WITHOUT_CLASSIFICATION	2.0272898100663843E-5	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.99999344881078	WITHOUT_CLASSIFICATION	6.551189220080213E-6	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.999996470397946	WITHOUT_CLASSIFICATION	3.5296020540820945E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999967285971544	WITHOUT_CLASSIFICATION	3.271402845654718E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999847215953345	WITHOUT_CLASSIFICATION	1.5278404665484242E-5	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999787753110949	WITHOUT_CLASSIFICATION	2.1224688905106987E-5	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999787753110949	WITHOUT_CLASSIFICATION	2.1224688905106987E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999281981736932	WITHOUT_CLASSIFICATION	7.180182630679519E-5	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999643602657322	WITHOUT_CLASSIFICATION	3.56397342676862E-5	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999784927910581	WITHOUT_CLASSIFICATION	2.150720894188846E-5	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999955970998213	WITHOUT_CLASSIFICATION	4.4029001785676995E-6	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999918899960936	WITHOUT_CLASSIFICATION	8.110003906406037E-6	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999585526589745	WITHOUT_CLASSIFICATION	4.1447341025421835E-5	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999888849623192	WITHOUT_CLASSIFICATION	1.1115037680792458E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999894194668877	WITHOUT_CLASSIFICATION	1.0580533112280512E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999924265943905	WITHOUT_CLASSIFICATION	7.573405609611353E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999618764767819	WITHOUT_CLASSIFICATION	3.812352321819576E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999618764767819	WITHOUT_CLASSIFICATION	3.812352321819576E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999808234325325	WITHOUT_CLASSIFICATION	1.9176567467499542E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999808234325325	WITHOUT_CLASSIFICATION	1.9176567467499542E-5	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999937109077068	WITHOUT_CLASSIFICATION	6.2890922931193295E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999995049469132	WITHOUT_CLASSIFICATION	4.950530867997801E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999980633742779	WITHOUT_CLASSIFICATION	1.9366257220950957E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999945736427108	WITHOUT_CLASSIFICATION	5.42635728916522E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999945736427108	WITHOUT_CLASSIFICATION	5.42635728916522E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999947137359342	WITHOUT_CLASSIFICATION	5.286264065849455E-6	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999820304742585	WITHOUT_CLASSIFICATION	1.7969525741558324E-5	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999694009599542	WITHOUT_CLASSIFICATION	3.059904004569044E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999963721460491	WITHOUT_CLASSIFICATION	3.6278539509553833E-6	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999979646980588	WITHOUT_CLASSIFICATION	2.035301941163791E-6	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999829925216953	WITHOUT_CLASSIFICATION	1.7007478304646186E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999906118647537	WITHOUT_CLASSIFICATION	9.388135246397808E-6	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999923004403799	WITHOUT_CLASSIFICATION	7.699559620183054E-6	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999659407680909	WITHOUT_CLASSIFICATION	3.405923190918497E-5	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999978185073027	WITHOUT_CLASSIFICATION	2.181492697296538E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999919270328238	WITHOUT_CLASSIFICATION	8.07296717617788E-6	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999882643314142	WITHOUT_CLASSIFICATION	1.1735668585945271E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999894194668877	WITHOUT_CLASSIFICATION	1.0580533112280512E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999618764767819	WITHOUT_CLASSIFICATION	3.812352321819576E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999808234325325	WITHOUT_CLASSIFICATION	1.9176567467499542E-5	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999884454119337	WITHOUT_CLASSIFICATION	1.1554588066283327E-5	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999945736427108	WITHOUT_CLASSIFICATION	5.42635728916522E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999947137359342	WITHOUT_CLASSIFICATION	5.286264065849455E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999947137359342	WITHOUT_CLASSIFICATION	5.286264065849455E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.99999344881078	WITHOUT_CLASSIFICATION	6.551189220080213E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999281981736932	WITHOUT_CLASSIFICATION	7.180182630679519E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999281981736932	WITHOUT_CLASSIFICATION	7.180182630679519E-5	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999784927910581	WITHOUT_CLASSIFICATION	2.150720894188846E-5	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999918099357745	WITHOUT_CLASSIFICATION	8.190064225463643E-6	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999969370888376	WITHOUT_CLASSIFICATION	3.062911162360535E-6	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999916681812898	WITHOUT_CLASSIFICATION	8.331818710162531E-6	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999967536428379	WITHOUT_CLASSIFICATION	3.2463571620855408E-6	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999941783481863	WITHOUT_CLASSIFICATION	5.82165181367621E-6	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999934058818992	WITHOUT_CLASSIFICATION	6.594118100811188E-6	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999878508542887	WITHOUT_CLASSIFICATION	1.2149145711427018E-5	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999923360442499	WITHOUT_CLASSIFICATION	7.663955750165399E-6	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999903198758588	WITHOUT_CLASSIFICATION	9.68012414128473E-6	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.999994884923774	WITHOUT_CLASSIFICATION	5.115076225946516E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999979656874465	WITHOUT_CLASSIFICATION	2.034312553558584E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.99998865215567	WITHOUT_CLASSIFICATION	1.134784432994044E-5	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999913535374179	WITHOUT_CLASSIFICATION	8.646462582057515E-6	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.999987399483422	WITHOUT_CLASSIFICATION	1.2600516578056054E-5	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999885295199032	WITHOUT_CLASSIFICATION	1.1470480096844768E-5	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999951619616407	WITHOUT_CLASSIFICATION	4.838038359224353E-6	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999994392969838	WITHOUT_CLASSIFICATION	5.607030162591226E-7	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999961767416145	WITHOUT_CLASSIFICATION	3.823258385483754E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999786986687494	WITHOUT_CLASSIFICATION	2.130133125053246E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999994294263365	WITHOUT_CLASSIFICATION	5.705736634696232E-7	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999780708571867	WITHOUT_CLASSIFICATION	2.1929142813304873E-5	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999974342834157	WITHOUT_CLASSIFICATION	2.5657165844188094E-6	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999998247855869	WITHOUT_CLASSIFICATION	1.7521441305114916E-7	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999993380313719	WITHOUT_CLASSIFICATION	6.619686282367883E-7	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9999954184342799	WITHOUT_CLASSIFICATION	4.581565720190535E-6	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999332741052321	WITHOUT_CLASSIFICATION	6.672589476790724E-5	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999615079732774	WITHOUT_CLASSIFICATION	3.8492026722612496E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999781796020272	WITHOUT_CLASSIFICATION	2.1820397972906282E-5	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999847434236591	WITHOUT_CLASSIFICATION	1.52565763409636E-5	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999990469085541	WITHOUT_CLASSIFICATION	9.530914459036131E-7	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999996581695092	WITHOUT_CLASSIFICATION	3.418304908319237E-7	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999987475354073	WITHOUT_CLASSIFICATION	1.2524645926965378E-6	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999975642730706	WITHOUT_CLASSIFICATION	2.435726929324074E-6	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999997391657435	WITHOUT_CLASSIFICATION	2.608342565273552E-7	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999862811343627	WITHOUT_CLASSIFICATION	1.3718865637412247E-5	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999993467509553	WITHOUT_CLASSIFICATION	6.532490446088031E-7	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999992574017142	WITHOUT_CLASSIFICATION	7.425982857624491E-7	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999983581972088	WITHOUT_CLASSIFICATION	1.6418027911554957E-6	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999992272306698	WITHOUT_CLASSIFICATION	7.727693301158386E-7	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999989173003377	WITHOUT_CLASSIFICATION	1.0826996622196124E-6	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999829214528378	WITHOUT_CLASSIFICATION	1.7078547162058603E-5	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999912090461738	WITHOUT_CLASSIFICATION	8.790953826251525E-6	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999994247419038	WITHOUT_CLASSIFICATION	5.752580962286666E-7	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999996786770173	WITHOUT_CLASSIFICATION	3.2132298269607885E-7	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999994970719907	WITHOUT_CLASSIFICATION	5.029280093145326E-7	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999903736444973	WITHOUT_CLASSIFICATION	9.626355502617113E-6	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9999673370157728	WITHOUT_CLASSIFICATION	3.266298422725075E-5	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999741250731734	WITHOUT_CLASSIFICATION	2.58749268265745E-5	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999804649931955	WITHOUT_CLASSIFICATION	1.953500680448531E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999800629545399	WITHOUT_CLASSIFICATION	1.9937045460115102E-5	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999963002496223	WITHOUT_CLASSIFICATION	3.699750377597657E-6	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999984024815266	WITHOUT_CLASSIFICATION	1.597518473380185E-6	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999757645564562	WITHOUT_CLASSIFICATION	2.4235443543766234E-5	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999608658937842	WITHOUT_CLASSIFICATION	3.913410621582556E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9998965027259157	WITHOUT_CLASSIFICATION	1.0349727408424174E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9998965027259157	WITHOUT_CLASSIFICATION	1.0349727408424174E-4	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999764178005348	WITHOUT_CLASSIFICATION	2.3582199465236217E-5	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999349574271943	WITHOUT_CLASSIFICATION	6.504257280578856E-5	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9999670880215802	WITHOUT_CLASSIFICATION	3.29119784198852E-5	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999934780726788	WITHOUT_CLASSIFICATION	6.521927321217118E-6	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9336358416033518	WITHOUT_CLASSIFICATION	0.06636415839664819	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999563213442692	WITHOUT_CLASSIFICATION	4.367865573080926E-5	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9999475774530839	WITHOUT_CLASSIFICATION	5.242254691601759E-5	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.999697013090173	WITHOUT_CLASSIFICATION	3.0298690982706654E-4	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999322094164078	WITHOUT_CLASSIFICATION	6.779058359215671E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999322094164078	WITHOUT_CLASSIFICATION	6.779058359215671E-5	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999862555812196	WITHOUT_CLASSIFICATION	1.374441878049705E-5	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999787390863497	WITHOUT_CLASSIFICATION	2.1260913650328164E-5	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999798821927812	WITHOUT_CLASSIFICATION	2.0117807218805735E-5	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999636717907724	WITHOUT_CLASSIFICATION	3.632820922747543E-5	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999542121405328	WITHOUT_CLASSIFICATION	4.578785946715291E-5	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999624021430317	WITHOUT_CLASSIFICATION	3.759785696845183E-5	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999588614545031	WITHOUT_CLASSIFICATION	4.1138545496883705E-5	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999867335229263	WITHOUT_CLASSIFICATION	1.3266477073645154E-5	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999625907442562	WITHOUT_CLASSIFICATION	3.740925574383816E-5	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9998989075169253	WITHOUT_CLASSIFICATION	1.0109248307464952E-4	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999948085998094	WITHOUT_CLASSIFICATION	5.19140019056133E-6	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9999551449634108	WITHOUT_CLASSIFICATION	4.48550365892756E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999797983548294	WITHOUT_CLASSIFICATION	2.0201645170593733E-5	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999253252011037	WITHOUT_CLASSIFICATION	7.467479889635418E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999665084170699	WITHOUT_CLASSIFICATION	3.3491582930118416E-5	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999903736444973	WITHOUT_CLASSIFICATION	9.626355502617113E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9998965027259157	WITHOUT_CLASSIFICATION	1.0349727408424174E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9998965027259157	WITHOUT_CLASSIFICATION	1.0349727408424174E-4	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999349574271943	WITHOUT_CLASSIFICATION	6.504257280578856E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999243378782067	WITHOUT_CLASSIFICATION	7.56621217933034E-5	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999956202794378	WITHOUT_CLASSIFICATION	4.379720562198209E-6	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999142469376332	WITHOUT_CLASSIFICATION	8.57530623667431E-5	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999160910457944	WITHOUT_CLASSIFICATION	8.390895420560281E-5	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999760176665502	WITHOUT_CLASSIFICATION	2.39823334497457E-5	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999604017127239	WITHOUT_CLASSIFICATION	3.959828727614075E-5	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999297826282485	WITHOUT_CLASSIFICATION	7.021737175155407E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999768539469459	WITHOUT_CLASSIFICATION	2.3146053054095048E-5	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.999896629685805	WITHOUT_CLASSIFICATION	1.0337031419507749E-4	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999995164982695	WITHOUT_CLASSIFICATION	4.835017305403024E-7	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.999965374482235	WITHOUT_CLASSIFICATION	3.4625517764953295E-5	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999982332130362	WITHOUT_CLASSIFICATION	1.7667869638597986E-6	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999981997506019	WITHOUT_CLASSIFICATION	1.8002493980933936E-6	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999874784658862	WITHOUT_CLASSIFICATION	1.2521534113844908E-5	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999755237338008	WITHOUT_CLASSIFICATION	2.4476266199229964E-5	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999558754048039	WITHOUT_CLASSIFICATION	4.412459519608893E-5	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999928635278283	WITHOUT_CLASSIFICATION	7.136472171745206E-6	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999991813784594	WITHOUT_CLASSIFICATION	8.186215406219121E-7	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999986760376772	WITHOUT_CLASSIFICATION	1.3239623228365478E-6	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.999996799594894	WITHOUT_CLASSIFICATION	3.200405106002578E-6	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999941151923866	WITHOUT_CLASSIFICATION	5.8848076134475345E-6	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.999992632650881	WITHOUT_CLASSIFICATION	7.367349118984911E-6	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999985940676318	WITHOUT_CLASSIFICATION	1.405932368280339E-6	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999853382088096	WITHOUT_CLASSIFICATION	1.4661791190359753E-5	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999892774483277	WITHOUT_CLASSIFICATION	1.0722551672218466E-5	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999845339467817	WITHOUT_CLASSIFICATION	1.546605321830023E-5	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999941071308239	WITHOUT_CLASSIFICATION	5.892869176167476E-6	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999022970065428	WITHOUT_CLASSIFICATION	9.770299345724307E-5	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999968268712921	WITHOUT_CLASSIFICATION	3.1731287079025443E-6	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9998194442212873	WITHOUT_CLASSIFICATION	1.8055577871262246E-4	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999937481638708	WITHOUT_CLASSIFICATION	6.251836129308393E-6	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9997958742795047	WITHOUT_CLASSIFICATION	2.0412572049543435E-4	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999270457355106	WITHOUT_CLASSIFICATION	7.295426448947045E-5	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999950312740188	WITHOUT_CLASSIFICATION	4.968725981228962E-6	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999939834024509	WITHOUT_CLASSIFICATION	6.016597549142833E-6	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999994975049517	WITHOUT_CLASSIFICATION	5.024950484118911E-7	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999814484040866	WITHOUT_CLASSIFICATION	1.855159591341196E-5	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999996847003333	WITHOUT_CLASSIFICATION	3.1529966678617017E-7	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999822513420128	WITHOUT_CLASSIFICATION	1.7748657987170477E-5	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.999992634252691	WITHOUT_CLASSIFICATION	7.365747308929581E-6	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999998955360154	WITHOUT_CLASSIFICATION	1.0446398464958279E-7	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9998362980017025	WITHOUT_CLASSIFICATION	1.6370199829758434E-4	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9996987804116245	WITHOUT_CLASSIFICATION	3.012195883755178E-4	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9999999014918891	WITHOUT_CLASSIFICATION	9.850811099718277E-8	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999622952560816	WITHOUT_CLASSIFICATION	3.7704743918460284E-5	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999473854950244	WITHOUT_CLASSIFICATION	5.261450497569905E-5	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999765277139291	WITHOUT_CLASSIFICATION	2.3472286070851034E-5	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999971167351349	WITHOUT_CLASSIFICATION	2.883264865072458E-6	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999994278132766	WITHOUT_CLASSIFICATION	5.721867235375982E-7	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999925338996846	WITHOUT_CLASSIFICATION	7.46610031536835E-6	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.999996255535777	WITHOUT_CLASSIFICATION	3.744464223045842E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999890528135394	WITHOUT_CLASSIFICATION	1.09471864604669E-5	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999972035944411	WITHOUT_CLASSIFICATION	2.7964055588867152E-6	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999951652248644	WITHOUT_CLASSIFICATION	4.8347751355705055E-6	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999939034451524	WITHOUT_CLASSIFICATION	6.096554847667758E-6	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9999902203010126	WITHOUT_CLASSIFICATION	9.77969898735172E-6	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999908298455018	WITHOUT_CLASSIFICATION	9.170154498252821E-6	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9999779052363679	WITHOUT_CLASSIFICATION	2.209476363219377E-5	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999882688273273	WITHOUT_CLASSIFICATION	1.1731172672720245E-5	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999812273748322	WITHOUT_CLASSIFICATION	1.8772625167767122E-5	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999812273748322	WITHOUT_CLASSIFICATION	1.8772625167767122E-5	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999733088368105	WITHOUT_CLASSIFICATION	2.6691163189506012E-5	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999733088368105	WITHOUT_CLASSIFICATION	2.6691163189506012E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999962876191038	WITHOUT_CLASSIFICATION	3.7123808962389327E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999962876191038	WITHOUT_CLASSIFICATION	3.7123808962389327E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9998984227387558	WITHOUT_CLASSIFICATION	1.0157726124417329E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9998887047691241	WITHOUT_CLASSIFICATION	1.1129523087583993E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9998887047691241	WITHOUT_CLASSIFICATION	1.1129523087583993E-4	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999861107278544	WITHOUT_CLASSIFICATION	1.3889272145650096E-5	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999846265909916	WITHOUT_CLASSIFICATION	1.5373409008307522E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9997318473012088	WITHOUT_CLASSIFICATION	2.681526987912014E-4	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9997318473012088	WITHOUT_CLASSIFICATION	2.681526987912014E-4	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999837304619515	WITHOUT_CLASSIFICATION	1.626953804845374E-5	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999156392274364	WITHOUT_CLASSIFICATION	8.43607725636776E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9998887047691241	WITHOUT_CLASSIFICATION	1.1129523087583993E-4	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9997318473012088	WITHOUT_CLASSIFICATION	2.681526987912014E-4	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999774569940599	WITHOUT_CLASSIFICATION	2.2543005940056824E-5	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999642953668668	WITHOUT_CLASSIFICATION	3.570463313311371E-5	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999826044021141	WITHOUT_CLASSIFICATION	1.7395597885949962E-5	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999990429754497	WITHOUT_CLASSIFICATION	9.570245503127534E-7	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999925157881981	WITHOUT_CLASSIFICATION	7.484211801849837E-6	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999941994884217	WITHOUT_CLASSIFICATION	5.800511578209698E-6	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999985899103604	WITHOUT_CLASSIFICATION	1.4100896396506251E-6	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999998579943775	WITHOUT_CLASSIFICATION	1.4200562251673646E-7	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.999996667170362	WITHOUT_CLASSIFICATION	3.3328296379075555E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999897082126907	WITHOUT_CLASSIFICATION	1.0291787309245932E-5	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999672758494612	WITHOUT_CLASSIFICATION	3.272415053881221E-5	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.999992875571577	WITHOUT_CLASSIFICATION	7.124428422953418E-6	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999987764968484	WITHOUT_CLASSIFICATION	1.2235031515465596E-6	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999953195294204	WITHOUT_CLASSIFICATION	4.6804705795719484E-6	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999808794492581	WITHOUT_CLASSIFICATION	1.9120550742028747E-5	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.999996089556115	WITHOUT_CLASSIFICATION	3.910443885122658E-6	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999871747937241	WITHOUT_CLASSIFICATION	1.2825206275893608E-5	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.999990214319565	WITHOUT_CLASSIFICATION	9.785680434978758E-6	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999934315074267	WITHOUT_CLASSIFICATION	6.5684925732087885E-6	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999987325957408	WITHOUT_CLASSIFICATION	1.2674042591256925E-6	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999987816569661	WITHOUT_CLASSIFICATION	1.218343033907097E-6	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999740527068832	WITHOUT_CLASSIFICATION	2.5947293116791338E-5	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999952752810474	WITHOUT_CLASSIFICATION	4.724718952543547E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999781480178265	WITHOUT_CLASSIFICATION	2.185198217363396E-5	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999916969310791	WITHOUT_CLASSIFICATION	8.30306892084734E-6	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999857682349578	WITHOUT_CLASSIFICATION	1.4231765042102471E-5	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999938806049018	WITHOUT_CLASSIFICATION	6.119395098237253E-6	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999811489492818	WITHOUT_CLASSIFICATION	1.8851050718110118E-5	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999882731306687	WITHOUT_CLASSIFICATION	1.1726869331338221E-5	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.999988064062299	WITHOUT_CLASSIFICATION	1.1935937701107607E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999826044021141	WITHOUT_CLASSIFICATION	1.7395597885949962E-5	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.999997003278284	WITHOUT_CLASSIFICATION	2.9967217159191766E-6	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999808794492581	WITHOUT_CLASSIFICATION	1.9120550742028747E-5	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999994567128877	WITHOUT_CLASSIFICATION	5.432871123147478E-7	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9999781480178265	WITHOUT_CLASSIFICATION	2.185198217363396E-5	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999974018006589	WITHOUT_CLASSIFICATION	2.5981993411088814E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999989425023157	WITHOUT_CLASSIFICATION	1.0574976843120005E-6	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999481226060569	WITHOUT_CLASSIFICATION	5.187739394316728E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9998446989037588	WITHOUT_CLASSIFICATION	1.553010962411008E-4	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9998446989037588	WITHOUT_CLASSIFICATION	1.553010962411008E-4	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999607316532287	WITHOUT_CLASSIFICATION	3.926834677132858E-5	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.999999864081407	WITHOUT_CLASSIFICATION	1.3591859299405284E-7	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999986124233111	WITHOUT_CLASSIFICATION	1.387576688894278E-6	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999974680053468	WITHOUT_CLASSIFICATION	2.5319946532348687E-6	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999929006918412	WITHOUT_CLASSIFICATION	7.099308158708958E-6	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.999994623544035	WITHOUT_CLASSIFICATION	5.3764559649834536E-6	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999889873624359	WITHOUT_CLASSIFICATION	1.1012637564110578E-5	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.999998874091991	WITHOUT_CLASSIFICATION	1.1259080091134535E-6	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999973707801001	WITHOUT_CLASSIFICATION	2.629219899960508E-6	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9999957040222753	WITHOUT_CLASSIFICATION	4.295977724739598E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999973310466771	WITHOUT_CLASSIFICATION	2.6689533227945026E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999873561650707	WITHOUT_CLASSIFICATION	1.264383492937479E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999981971640786	WITHOUT_CLASSIFICATION	1.8028359214380042E-6	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999985091152711	WITHOUT_CLASSIFICATION	1.4908847288848888E-6	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999829672336531	WITHOUT_CLASSIFICATION	1.7032766346889564E-5	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9995223689094763	WITHOUT_CLASSIFICATION	4.776310905236693E-4	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999805581883273	WITHOUT_CLASSIFICATION	1.9441811672681163E-5	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999656312918096	WITHOUT_CLASSIFICATION	3.436870819032248E-5	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999994917741211	WITHOUT_CLASSIFICATION	5.082258788951208E-7	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999809811471618	WITHOUT_CLASSIFICATION	1.9018852838252977E-5	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999852469338761	WITHOUT_CLASSIFICATION	1.4753066123801976E-5	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999996929708231	WITHOUT_CLASSIFICATION	3.0702917679336647E-7	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9999397965819237	WITHOUT_CLASSIFICATION	6.020341807639782E-5	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999988030864817	WITHOUT_CLASSIFICATION	1.1969135183492313E-6	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999994535912738	WITHOUT_CLASSIFICATION	5.464087260386752E-7	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999946560653779	WITHOUT_CLASSIFICATION	5.343934622171819E-6	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999982570287138	WITHOUT_CLASSIFICATION	1.7429712861328373E-6	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999974553922673	WITHOUT_CLASSIFICATION	2.5446077326527573E-6	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999974723066024	WITHOUT_CLASSIFICATION	2.5276933974900607E-6	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999932689857904	WITHOUT_CLASSIFICATION	6.731014209586583E-6	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999995188595937	WITHOUT_CLASSIFICATION	4.811404062818389E-7	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.999998748546889	WITHOUT_CLASSIFICATION	1.251453111085578E-6	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999962088320707	WITHOUT_CLASSIFICATION	3.7911679293401094E-6	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.999921301430315	WITHOUT_CLASSIFICATION	7.869856968494026E-5	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.999975560298539	WITHOUT_CLASSIFICATION	2.4439701461001044E-5	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999984219152056	WITHOUT_CLASSIFICATION	1.5780847944042078E-6	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999968891894276	WITHOUT_CLASSIFICATION	3.1108105722462276E-6	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999992962895238	WITHOUT_CLASSIFICATION	7.037104762050396E-7	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999983605254533	WITHOUT_CLASSIFICATION	1.6394745467269545E-6	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999834977543022	WITHOUT_CLASSIFICATION	1.6502245697847713E-5	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.999998507595026	WITHOUT_CLASSIFICATION	1.4924049740329002E-6	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999815847785137	WITHOUT_CLASSIFICATION	1.8415221486289943E-5	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999996770007306	WITHOUT_CLASSIFICATION	3.2299926945910844E-7	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999863573907173	WITHOUT_CLASSIFICATION	1.3642609282681815E-5	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999949453867103	WITHOUT_CLASSIFICATION	5.054613289695988E-6	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999996063246226	WITHOUT_CLASSIFICATION	3.936753773148178E-7	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999590647424245	WITHOUT_CLASSIFICATION	4.093525757552241E-5	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999566921462192	WITHOUT_CLASSIFICATION	4.3307853780839556E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999962876191038	WITHOUT_CLASSIFICATION	3.7123808962389327E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999505709866279	WITHOUT_CLASSIFICATION	4.9429013372150023E-5	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999930646450804	WITHOUT_CLASSIFICATION	6.935354919594042E-6	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999999033462537	WITHOUT_CLASSIFICATION	9.66537463200755E-8	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.99998580249727	WITHOUT_CLASSIFICATION	1.4197502730039574E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.999997516563227	WITHOUT_CLASSIFICATION	2.4834367730489374E-6	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.999997957781535	WITHOUT_CLASSIFICATION	2.042218464958146E-6	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999947805036246	WITHOUT_CLASSIFICATION	5.219496375381326E-6	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999996569434639	WITHOUT_CLASSIFICATION	3.4305653605590416E-7	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999977374957997	WITHOUT_CLASSIFICATION	2.262504200268918E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999857282119088	WITHOUT_CLASSIFICATION	1.4271788091131516E-5	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999879674539797	WITHOUT_CLASSIFICATION	1.203254602027467E-5	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999851588160482	WITHOUT_CLASSIFICATION	1.4841183951778429E-5	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999775700079518	WITHOUT_CLASSIFICATION	2.2429992048056735E-5	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999911637084246	WITHOUT_CLASSIFICATION	8.836291575446548E-6	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999760407747893	WITHOUT_CLASSIFICATION	2.3959225210684776E-5	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999120503090765	WITHOUT_CLASSIFICATION	8.79496909234414E-5	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.999989362709981	WITHOUT_CLASSIFICATION	1.0637290019059549E-5	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.999973807162449	WITHOUT_CLASSIFICATION	2.6192837550971685E-5	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999893000577256	WITHOUT_CLASSIFICATION	1.0699942274487891E-5	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999841734143963	WITHOUT_CLASSIFICATION	1.582658560375947E-5	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999937535263388	WITHOUT_CLASSIFICATION	6.246473661204614E-6	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999896623972224	WITHOUT_CLASSIFICATION	1.0337602777569183E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999984397030368	WITHOUT_CLASSIFICATION	1.5602969632728602E-6	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999907081685089	WITHOUT_CLASSIFICATION	9.291831491102159E-6	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.999997195731532	WITHOUT_CLASSIFICATION	2.8042684680029154E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.999983686211138	WITHOUT_CLASSIFICATION	1.631378886199955E-5	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999999216075931	WITHOUT_CLASSIFICATION	7.839240691275349E-8	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999987832879399	WITHOUT_CLASSIFICATION	1.216712060148526E-6	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999971630916188	WITHOUT_CLASSIFICATION	2.8369083811780676E-6	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9999415351828584	WITHOUT_CLASSIFICATION	5.846481714154766E-5	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999853382088096	WITHOUT_CLASSIFICATION	1.4661791190359753E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999962876191038	WITHOUT_CLASSIFICATION	3.7123808962389327E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9998984227387558	WITHOUT_CLASSIFICATION	1.0157726124417329E-4	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999656312918096	WITHOUT_CLASSIFICATION	3.436870819032248E-5	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999990182610837	WITHOUT_CLASSIFICATION	9.81738916343708E-7	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999505709866279	WITHOUT_CLASSIFICATION	4.9429013372150023E-5	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999991634121295	WITHOUT_CLASSIFICATION	8.36587870562797E-7	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999918854915899	WITHOUT_CLASSIFICATION	8.114508410162947E-6	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999332665475295	WITHOUT_CLASSIFICATION	6.673345247052422E-5	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999972880815549	WITHOUT_CLASSIFICATION	2.7119184451572933E-6	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999763841845164	WITHOUT_CLASSIFICATION	2.3615815483586376E-5	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.999998710402976	WITHOUT_CLASSIFICATION	1.289597023882929E-6	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.999999811559254	WITHOUT_CLASSIFICATION	1.8844074595342284E-7	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999946585176969	WITHOUT_CLASSIFICATION	5.341482303212801E-6	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999733631748638	WITHOUT_CLASSIFICATION	2.6636825136185223E-5	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999609255010672	WITHOUT_CLASSIFICATION	3.90744989327921E-5	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9998919899186904	WITHOUT_CLASSIFICATION	1.080100813096226E-4	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999797070930927	WITHOUT_CLASSIFICATION	2.0292906907315987E-5	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9996055691102123	WITHOUT_CLASSIFICATION	3.9443088978783144E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999374195804879	WITHOUT_CLASSIFICATION	6.258041951205918E-5	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9996786837415944	WITHOUT_CLASSIFICATION	3.2131625840557725E-4	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999760525195944	WITHOUT_CLASSIFICATION	2.394748040550553E-5	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9998144612909946	WITHOUT_CLASSIFICATION	1.855387090054747E-4	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999293468574287	WITHOUT_CLASSIFICATION	7.065314257122637E-5	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.999973558115601	WITHOUT_CLASSIFICATION	2.6441884399025788E-5	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999193353670274	WITHOUT_CLASSIFICATION	8.06646329727134E-5	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999879349190889	WITHOUT_CLASSIFICATION	1.2065080911073955E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9999917617698614	WITHOUT_CLASSIFICATION	8.238230138693016E-6	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999782394941801	WITHOUT_CLASSIFICATION	2.1760505819993673E-5	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.999985751765363	WITHOUT_CLASSIFICATION	1.424823463703937E-5	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999989114279431	WITHOUT_CLASSIFICATION	1.0885720568548084E-6	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999900864899092	WITHOUT_CLASSIFICATION	9.913510090904364E-6	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999955627921994	WITHOUT_CLASSIFICATION	4.437207800668141E-6	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999756200439845	WITHOUT_CLASSIFICATION	2.4379956015424704E-5	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999092921952607	WITHOUT_CLASSIFICATION	9.070780473931475E-5	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999872739131046	WITHOUT_CLASSIFICATION	1.2726086895316146E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999973160576758	WITHOUT_CLASSIFICATION	2.683942324199943E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999962876191038	WITHOUT_CLASSIFICATION	3.7123808962389327E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999857282119088	WITHOUT_CLASSIFICATION	1.4271788091131516E-5	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999879674539797	WITHOUT_CLASSIFICATION	1.203254602027467E-5	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999120503090765	WITHOUT_CLASSIFICATION	8.79496909234414E-5	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.999989362709981	WITHOUT_CLASSIFICATION	1.0637290019059549E-5	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.999973807162449	WITHOUT_CLASSIFICATION	2.6192837550971685E-5	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999893000577256	WITHOUT_CLASSIFICATION	1.0699942274487891E-5	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999841734143963	WITHOUT_CLASSIFICATION	1.582658560375947E-5	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.999991978815739	WITHOUT_CLASSIFICATION	8.021184260955225E-6	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999984397030368	WITHOUT_CLASSIFICATION	1.5602969632728602E-6	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999931839975629	WITHOUT_CLASSIFICATION	6.816002437155411E-6	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9998180286032203	WITHOUT_CLASSIFICATION	1.819713967797023E-4	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999734801102844	WITHOUT_CLASSIFICATION	2.651988971553175E-5	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999997468666953	WITHOUT_CLASSIFICATION	2.5313330468198324E-7	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999998284565248	WITHOUT_CLASSIFICATION	1.7154347513101783E-7	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999984984581732	WITHOUT_CLASSIFICATION	1.5015418267940452E-6	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999823905277203	WITHOUT_CLASSIFICATION	1.7609472279639797E-5	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.999986950931448	WITHOUT_CLASSIFICATION	1.3049068552081517E-5	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999943849033199	WITHOUT_CLASSIFICATION	5.615096680105231E-6	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.999985463225896	WITHOUT_CLASSIFICATION	1.453677410392022E-5	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9999838909791199	WITHOUT_CLASSIFICATION	1.6109020880144545E-5	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999909376073225	WITHOUT_CLASSIFICATION	9.062392677430672E-6	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999958572147776	WITHOUT_CLASSIFICATION	4.142785222454525E-6	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999990771778706	WITHOUT_CLASSIFICATION	9.228221293016138E-7	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999975971213141	WITHOUT_CLASSIFICATION	2.4028786860014513E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999975971213141	WITHOUT_CLASSIFICATION	2.4028786860014513E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.999999052448319	WITHOUT_CLASSIFICATION	9.475516810139461E-7	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.999998498825477	WITHOUT_CLASSIFICATION	1.5011745231138803E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.999998498825477	WITHOUT_CLASSIFICATION	1.5011745231138803E-6	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999342141850839	WITHOUT_CLASSIFICATION	6.578581491613592E-5	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999714139467485	WITHOUT_CLASSIFICATION	2.8586053251578176E-5	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999986709972769	WITHOUT_CLASSIFICATION	1.329002723167269E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999973160576758	WITHOUT_CLASSIFICATION	2.683942324199943E-6	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999451510415409	WITHOUT_CLASSIFICATION	5.484895845896085E-5	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.99992041499336	WITHOUT_CLASSIFICATION	7.958500663994042E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999915253462032	WITHOUT_CLASSIFICATION	8.474653796816804E-6	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999993374262721	WITHOUT_CLASSIFICATION	6.625737278354987E-7	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9999886552412554	WITHOUT_CLASSIFICATION	1.1344758744629185E-5	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999800772922862	WITHOUT_CLASSIFICATION	1.9922707713701248E-5	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999853025999754	WITHOUT_CLASSIFICATION	1.4697400024690252E-5	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999833932643376	WITHOUT_CLASSIFICATION	1.6606735662327178E-5	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999905923145221	WITHOUT_CLASSIFICATION	9.40768547778123E-6	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999917659714871	WITHOUT_CLASSIFICATION	8.234028513023547E-6	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9999158358525909	WITHOUT_CLASSIFICATION	8.416414740915939E-5	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999872199149183	WITHOUT_CLASSIFICATION	1.2780085081643123E-5	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9999751394940358	WITHOUT_CLASSIFICATION	2.4860505964229687E-5	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999905652971517	WITHOUT_CLASSIFICATION	9.434702848361353E-6	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999959154990471	WITHOUT_CLASSIFICATION	4.084500952914528E-6	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999963242110866	WITHOUT_CLASSIFICATION	3.675788913393369E-6	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999767490339286	WITHOUT_CLASSIFICATION	2.3250966071394437E-5	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9999774732203889	WITHOUT_CLASSIFICATION	2.252677961113034E-5	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9999883579285721	WITHOUT_CLASSIFICATION	1.1642071427827433E-5	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999940653286867	WITHOUT_CLASSIFICATION	5.9346713132906955E-6	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999967982960654	WITHOUT_CLASSIFICATION	3.2017039346551705E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999930020394601	WITHOUT_CLASSIFICATION	6.9979605399448465E-6	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999963561688174	WITHOUT_CLASSIFICATION	3.643831182486326E-6	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999986492508627	WITHOUT_CLASSIFICATION	1.350749137310445E-6	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999920475392504	WITHOUT_CLASSIFICATION	7.9524607496377E-6	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999861800327031	WITHOUT_CLASSIFICATION	1.3819967296889562E-5	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999684515991757	WITHOUT_CLASSIFICATION	3.154840082425244E-5	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9999469968334362	WITHOUT_CLASSIFICATION	5.3003166563669785E-5	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999839142714549	WITHOUT_CLASSIFICATION	1.6085728545097598E-5	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999997911379607	WITHOUT_CLASSIFICATION	2.0886203929691688E-7	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999997915385764	WITHOUT_CLASSIFICATION	2.0846142355075554E-7	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999997938571915	WITHOUT_CLASSIFICATION	2.0614280855622275E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999976222544693	WITHOUT_CLASSIFICATION	2.3777455306258077E-6	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999969927659088	WITHOUT_CLASSIFICATION	3.0072340912491893E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998597882683	WITHOUT_CLASSIFICATION	1.4021173158590697E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999804374432458	WITHOUT_CLASSIFICATION	1.956255675416676E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999789072006274	WITHOUT_CLASSIFICATION	2.109279937255096E-5	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999976222544693	WITHOUT_CLASSIFICATION	2.3777455306258077E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.99989859450325	WITHOUT_CLASSIFICATION	1.0140549674999667E-4	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999899909676271	WITHOUT_CLASSIFICATION	1.0009032373001283E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999899909676271	WITHOUT_CLASSIFICATION	1.0009032373001283E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999899909676271	WITHOUT_CLASSIFICATION	1.0009032373001283E-5	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999973041323108	WITHOUT_CLASSIFICATION	2.695867689131503E-6	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999973041323108	WITHOUT_CLASSIFICATION	2.695867689131503E-6	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999973041323108	WITHOUT_CLASSIFICATION	2.695867689131503E-6	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999983611047395	WITHOUT_CLASSIFICATION	1.638895260559594E-6	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999983611047395	WITHOUT_CLASSIFICATION	1.638895260559594E-6	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999990712530927	WITHOUT_CLASSIFICATION	9.287469073687108E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9997556038871742	WITHOUT_CLASSIFICATION	2.443961128258214E-4	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999996959218272	WITHOUT_CLASSIFICATION	3.0407817273068825E-7	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999708482607126	WITHOUT_CLASSIFICATION	2.915173928737575E-5	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999979107794118	WITHOUT_CLASSIFICATION	2.089220588192996E-6	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999851208463677	WITHOUT_CLASSIFICATION	1.4879153632324423E-5	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999877605463487	WITHOUT_CLASSIFICATION	1.223945365114712E-5	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999976148457922	WITHOUT_CLASSIFICATION	2.3851542077690806E-6	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999810304696848	WITHOUT_CLASSIFICATION	1.8969530315266284E-5	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999923273304497	WITHOUT_CLASSIFICATION	7.672669550250342E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9999959388005373	WITHOUT_CLASSIFICATION	4.061199462726781E-6	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999972302467621	WITHOUT_CLASSIFICATION	2.769753237782706E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999834517075269	WITHOUT_CLASSIFICATION	1.6548292473178954E-5	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.999553953870177	WITHOUT_CLASSIFICATION	4.460461298230838E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999781796020272	WITHOUT_CLASSIFICATION	2.1820397972906282E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999929809221226	WITHOUT_CLASSIFICATION	7.019077877393398E-6	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999856894512629	WITHOUT_CLASSIFICATION	1.4310548737187442E-5	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9999924921281971	WITHOUT_CLASSIFICATION	7.507871802932747E-6	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9999948644535206	WITHOUT_CLASSIFICATION	5.135546479346454E-6	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999695775129704	WITHOUT_CLASSIFICATION	3.0422487029557682E-5	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9999934785311573	WITHOUT_CLASSIFICATION	6.521468842749177E-6	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.999998279252301	WITHOUT_CLASSIFICATION	1.7207476990601087E-6	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9998647377116263	WITHOUT_CLASSIFICATION	1.3526228837361636E-4	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9999800357079359	WITHOUT_CLASSIFICATION	1.9964292064086353E-5	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999936406449256	WITHOUT_CLASSIFICATION	6.359355074325797E-6	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999914173427534	WITHOUT_CLASSIFICATION	8.582657246574698E-6	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999427847977918	WITHOUT_CLASSIFICATION	5.721520220831715E-5	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999121655461334	WITHOUT_CLASSIFICATION	8.783445386667214E-5	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999833550457249	WITHOUT_CLASSIFICATION	1.6644954275182842E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999891626204706	WITHOUT_CLASSIFICATION	1.0837379529404178E-4	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9999842992356244	WITHOUT_CLASSIFICATION	1.5700764375568394E-5	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999967282744784	WITHOUT_CLASSIFICATION	3.2717255216587867E-6	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999970691980886	WITHOUT_CLASSIFICATION	2.930801911461292E-6	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9994033986229893	WITHOUT_CLASSIFICATION	5.966013770106121E-4	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999857619299098	WITHOUT_CLASSIFICATION	1.4238070090045214E-5	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.9999899087586652	WITHOUT_CLASSIFICATION	1.0091241334650154E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999891626204706	WITHOUT_CLASSIFICATION	1.0837379529404178E-4	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999832757049166	WITHOUT_CLASSIFICATION	1.6724295083324215E-5	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999899363997572	WITHOUT_CLASSIFICATION	1.0063600242744953E-5	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999718141296945	WITHOUT_CLASSIFICATION	2.8185870305461174E-5	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999977839112386	WITHOUT_CLASSIFICATION	2.2160887613553062E-6	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.999990241845838	WITHOUT_CLASSIFICATION	9.758154162098589E-6	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999976799583908	WITHOUT_CLASSIFICATION	2.32004160903669E-6	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999938615524226	WITHOUT_CLASSIFICATION	6.138447577321308E-6	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9998128403559239	WITHOUT_CLASSIFICATION	1.871596440762258E-4	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999927728195062	WITHOUT_CLASSIFICATION	7.2271804938557035E-6	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999746508849111	WITHOUT_CLASSIFICATION	2.5349115088904384E-5	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9999944567687519	WITHOUT_CLASSIFICATION	5.543231248054291E-6	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999513662209399	WITHOUT_CLASSIFICATION	4.863377906017615E-5	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999962559300041	WITHOUT_CLASSIFICATION	3.744069995899565E-6	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999832757049166	WITHOUT_CLASSIFICATION	1.6724295083324215E-5	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999842592682977	WITHOUT_CLASSIFICATION	1.574073170234319E-5	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999893300355531	WITHOUT_CLASSIFICATION	1.066996444685024E-5	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999942947044214	WITHOUT_CLASSIFICATION	5.705295578637792E-6	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9999998111049716	WITHOUT_CLASSIFICATION	1.8889502831773714E-7	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999923110530017	WITHOUT_CLASSIFICATION	7.688946998353521E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999733265464548	WITHOUT_CLASSIFICATION	2.6673453545334488E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999797983548294	WITHOUT_CLASSIFICATION	2.0201645170593733E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.999972034820903	WITHOUT_CLASSIFICATION	2.796517909691347E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999935134530845	WITHOUT_CLASSIFICATION	6.486546915528612E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999899350350291	WITHOUT_CLASSIFICATION	1.0064964970984094E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999900956643222	WITHOUT_CLASSIFICATION	9.904335677923279E-6	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999781048370844	WITHOUT_CLASSIFICATION	2.1895162915639336E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999964005340481	WITHOUT_CLASSIFICATION	3.599465951814071E-6	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999645366975268	WITHOUT_CLASSIFICATION	3.5463302473230804E-5	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999483590140816	WITHOUT_CLASSIFICATION	5.1640985918397385E-5	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999695108652845	WITHOUT_CLASSIFICATION	3.0489134715373923E-5	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999513971086013	WITHOUT_CLASSIFICATION	4.860289139873434E-5	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999929824473858	WITHOUT_CLASSIFICATION	7.017552614249963E-6	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9999362651221164	WITHOUT_CLASSIFICATION	6.373487788363903E-5	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.99998608102492	WITHOUT_CLASSIFICATION	1.3918975079970534E-5	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999928136779842	WITHOUT_CLASSIFICATION	7.1863220158478106E-6	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999805889424989	WITHOUT_CLASSIFICATION	1.9411057501077455E-5	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999988971233778	WITHOUT_CLASSIFICATION	1.1028766223045623E-6	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999873470022675	WITHOUT_CLASSIFICATION	1.2652997732408782E-5	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9994102173097225	WITHOUT_CLASSIFICATION	5.897826902775066E-4	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999920335127138	WITHOUT_CLASSIFICATION	7.966487286153205E-6	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.999994290532621	WITHOUT_CLASSIFICATION	5.709467378996498E-6	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999799048409279	WITHOUT_CLASSIFICATION	2.0095159072081262E-5	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.999939616396803	WITHOUT_CLASSIFICATION	6.0383603197073576E-5	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999957192870064	WITHOUT_CLASSIFICATION	4.280712993590495E-6	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999950251455731	WITHOUT_CLASSIFICATION	4.97485442675197E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.999993133249184	WITHOUT_CLASSIFICATION	6.86675081593991E-6	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999992286568326	WITHOUT_CLASSIFICATION	7.713431674565111E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999933305886308	WITHOUT_CLASSIFICATION	6.6694113691782785E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999972837136346	WITHOUT_CLASSIFICATION	2.716286365395868E-6	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999906591037204	WITHOUT_CLASSIFICATION	9.34089627960017E-6	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999950251455731	WITHOUT_CLASSIFICATION	4.97485442675197E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999938908596785	WITHOUT_CLASSIFICATION	6.109140321425354E-6	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999565707455957	WITHOUT_CLASSIFICATION	4.3429254404193926E-5	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999642591658168	WITHOUT_CLASSIFICATION	3.574083418325136E-5	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999740184190378	WITHOUT_CLASSIFICATION	2.5981580962186003E-5	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.99996064714259	WITHOUT_CLASSIFICATION	3.9352857409901906E-5	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999920526951218	WITHOUT_CLASSIFICATION	7.947304878266686E-6	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999597132357557	WITHOUT_CLASSIFICATION	4.028676424428792E-5	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999177524188355	WITHOUT_CLASSIFICATION	8.224758116450107E-5	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999932615454318	WITHOUT_CLASSIFICATION	6.738454568176548E-6	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9999972672646094	WITHOUT_CLASSIFICATION	2.7327353905620033E-6	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.999984303510556	WITHOUT_CLASSIFICATION	1.569648944401254E-5	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999706395542322	WITHOUT_CLASSIFICATION	2.9360445767919617E-5	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.999990254757122	WITHOUT_CLASSIFICATION	9.745242877917064E-6	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999997473687148	WITHOUT_CLASSIFICATION	2.526312852026059E-7	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999769139286098	WITHOUT_CLASSIFICATION	2.308607139031707E-5	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999941871241629	WITHOUT_CLASSIFICATION	5.812875837125088E-6	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999931740567456	WITHOUT_CLASSIFICATION	6.825943254307567E-6	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9999973513514134	WITHOUT_CLASSIFICATION	2.648648586580266E-6	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999762231499285	WITHOUT_CLASSIFICATION	2.3776850071510915E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916621681588	WITHOUT_CLASSIFICATION	8.33783184114026E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999834517075269	WITHOUT_CLASSIFICATION	1.6548292473178954E-5	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999834517075269	WITHOUT_CLASSIFICATION	1.6548292473178954E-5	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999839652892584	WITHOUT_CLASSIFICATION	1.603471074158923E-5	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.999553953870177	WITHOUT_CLASSIFICATION	4.460461298230838E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999948664383779	WITHOUT_CLASSIFICATION	5.1335616221966635E-6	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999998467398035	WITHOUT_CLASSIFICATION	1.5326019651812058E-7	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999353212645977	WITHOUT_CLASSIFICATION	6.467873540219263E-5	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999771356260942	WITHOUT_CLASSIFICATION	2.2864373905676718E-5	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.9999112477348917	WITHOUT_CLASSIFICATION	8.875226510835598E-5	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999900836469674	WITHOUT_CLASSIFICATION	9.916353032679134E-6	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999900478265863	WITHOUT_CLASSIFICATION	9.952173413741089E-6	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999631282052375	WITHOUT_CLASSIFICATION	3.687179476257717E-5	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.999999702332295	WITHOUT_CLASSIFICATION	2.9766770508737444E-7	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9999981381521005	WITHOUT_CLASSIFICATION	1.861847899484757E-6	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999986987159747	WITHOUT_CLASSIFICATION	1.3012840253165082E-6	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999976851671109	WITHOUT_CLASSIFICATION	2.3148328891438834E-6	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999365281008041	WITHOUT_CLASSIFICATION	6.347189919587579E-5	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.999994435720253	WITHOUT_CLASSIFICATION	5.56427974703935E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999781870995309	WITHOUT_CLASSIFICATION	2.1812900469029477E-5	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999976555372986	WITHOUT_CLASSIFICATION	2.3444627014376664E-6	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999977816911015	WITHOUT_CLASSIFICATION	2.218308898390967E-6	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999960410999165	WITHOUT_CLASSIFICATION	3.958900083528019E-6	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999118060812461	WITHOUT_CLASSIFICATION	8.8193918753972E-5	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9999945641274983	WITHOUT_CLASSIFICATION	5.435872501689587E-6	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999997290351423	WITHOUT_CLASSIFICATION	2.7096485769078033E-7	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9999963068021306	WITHOUT_CLASSIFICATION	3.693197869485701E-6	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999989252857254	WITHOUT_CLASSIFICATION	1.074714274511797E-6	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999855104427983	WITHOUT_CLASSIFICATION	1.4489557201718025E-5	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.999972072694557	WITHOUT_CLASSIFICATION	2.7927305443056947E-5	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999995285090222	WITHOUT_CLASSIFICATION	4.7149097779238216E-7	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999871159264123	WITHOUT_CLASSIFICATION	1.2884073587637156E-5	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9999610133451107	WITHOUT_CLASSIFICATION	3.8986654889306584E-5	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999520001989745	WITHOUT_CLASSIFICATION	4.799980102551516E-5	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999891915061653	WITHOUT_CLASSIFICATION	1.0808493834632604E-5	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.999911557365794	WITHOUT_CLASSIFICATION	8.844263420614103E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999833703918426	WITHOUT_CLASSIFICATION	1.6629608157390566E-5	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999766515770974	WITHOUT_CLASSIFICATION	2.3348422902711765E-5	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999990173069715	WITHOUT_CLASSIFICATION	9.8269302856801E-7	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999966698388109	WITHOUT_CLASSIFICATION	3.3301611891006043E-6	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999996629006841	WITHOUT_CLASSIFICATION	3.37099315987408E-7	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999849079953864	WITHOUT_CLASSIFICATION	1.5092004613561503E-5	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999971879186375	WITHOUT_CLASSIFICATION	2.8120813624479022E-6	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9934457752694352	WITHOUT_CLASSIFICATION	0.006554224730564779	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999307615802308	WITHOUT_CLASSIFICATION	6.92384197692186E-5	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999809207795539	WITHOUT_CLASSIFICATION	1.907922044609292E-5	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9993496780622856	WITHOUT_CLASSIFICATION	6.503219377143546E-4	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9997560029462704	WITHOUT_CLASSIFICATION	2.439970537296429E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999958945918542	WITHOUT_CLASSIFICATION	4.105408145737574E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999270683804519	WITHOUT_CLASSIFICATION	7.293161954815603E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.999976049318286	WITHOUT_CLASSIFICATION	2.3950681714017738E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999827673248117	WITHOUT_CLASSIFICATION	1.7232675188238734E-5	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999996584239729	WITHOUT_CLASSIFICATION	3.4157602715523536E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916621681588	WITHOUT_CLASSIFICATION	8.33783184114026E-6	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999877605463487	WITHOUT_CLASSIFICATION	1.223945365114712E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9999829652311185	WITHOUT_CLASSIFICATION	1.7034768881563754E-5	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999876951666753	WITHOUT_CLASSIFICATION	1.2304833324657576E-5	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999972250083589	WITHOUT_CLASSIFICATION	2.774991641128597E-6	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9999980637840232	WITHOUT_CLASSIFICATION	1.9362159766727535E-6	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999962504764405	WITHOUT_CLASSIFICATION	3.749523559508483E-6	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999849572652784	WITHOUT_CLASSIFICATION	1.5042734721596775E-5	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999971827325101	WITHOUT_CLASSIFICATION	2.817267489855154E-6	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9999898732468272	WITHOUT_CLASSIFICATION	1.0126753172776226E-5	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999941207277154	WITHOUT_CLASSIFICATION	5.879272284566844E-6	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999901903678984	WITHOUT_CLASSIFICATION	9.809632101592289E-6	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9999984429148164	WITHOUT_CLASSIFICATION	1.5570851835603672E-6	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.999970093180012	WITHOUT_CLASSIFICATION	2.990681998809277E-5	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999997418766415	WITHOUT_CLASSIFICATION	2.581233583967555E-7	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999727967078509	WITHOUT_CLASSIFICATION	2.720329214903052E-5	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999870238751578	WITHOUT_CLASSIFICATION	1.297612484220112E-5	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.999998854638264	WITHOUT_CLASSIFICATION	1.1453617359930816E-6	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999975973073264	WITHOUT_CLASSIFICATION	2.402692673542562E-6	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999997227799873	WITHOUT_CLASSIFICATION	2.772200127300369E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9999630414079222	WITHOUT_CLASSIFICATION	3.695859207765648E-5	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999768645028104	WITHOUT_CLASSIFICATION	2.313549718954509E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999768645028104	WITHOUT_CLASSIFICATION	2.313549718954509E-5	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999994141444305	WITHOUT_CLASSIFICATION	5.858555695332806E-7	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999766603540505	WITHOUT_CLASSIFICATION	2.333964594950607E-5	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9998987840413294	WITHOUT_CLASSIFICATION	1.0121595867066954E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999996125160167	WITHOUT_CLASSIFICATION	3.8748398326068616E-7	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999993479475754	WITHOUT_CLASSIFICATION	6.52052424581053E-7	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999994269613514	WITHOUT_CLASSIFICATION	5.730386486325037E-7	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999985569919301	WITHOUT_CLASSIFICATION	1.4430080699205863E-6	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999820732074066	WITHOUT_CLASSIFICATION	1.7926792593396935E-5	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9997070172622965	WITHOUT_CLASSIFICATION	2.929827377035498E-4	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9996768331276952	WITHOUT_CLASSIFICATION	3.231668723047465E-4	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999947966166041	WITHOUT_CLASSIFICATION	5.203383395936367E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999992859328215	WITHOUT_CLASSIFICATION	7.140671785130598E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999945574032856	WITHOUT_CLASSIFICATION	5.442596714394383E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.999983561691932	WITHOUT_CLASSIFICATION	1.643830806799082E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998747942158955	WITHOUT_CLASSIFICATION	1.2520578410448187E-4	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9999944625729762	WITHOUT_CLASSIFICATION	5.53742702382779E-6	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9999834598523862	WITHOUT_CLASSIFICATION	1.6540147613688946E-5	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999954867213167	WITHOUT_CLASSIFICATION	4.513278683361823E-6	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999984422709601	WITHOUT_CLASSIFICATION	1.5577290397910374E-6	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9999996139010433	WITHOUT_CLASSIFICATION	3.8609895670548217E-7	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9995447709852497	WITHOUT_CLASSIFICATION	4.552290147501733E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998904149999703	WITHOUT_CLASSIFICATION	1.0958500002961867E-4	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999776454235806	WITHOUT_CLASSIFICATION	2.235457641940957E-5	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999206763595756	WITHOUT_CLASSIFICATION	7.932364042445255E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998747942158955	WITHOUT_CLASSIFICATION	1.2520578410448187E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998747942158955	WITHOUT_CLASSIFICATION	1.2520578410448187E-4	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9998823038536305	WITHOUT_CLASSIFICATION	1.1769614636935054E-4	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9998589655121791	WITHOUT_CLASSIFICATION	1.410344878209732E-4	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9998838808794905	WITHOUT_CLASSIFICATION	1.161191205095154E-4	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999986645967777	WITHOUT_CLASSIFICATION	1.3354032223457171E-6	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999676356135262	WITHOUT_CLASSIFICATION	3.236438647372165E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999681853419679	WITHOUT_CLASSIFICATION	3.1814658032220446E-5	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999539654071106	WITHOUT_CLASSIFICATION	4.603459288937903E-5	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.999998410742025	WITHOUT_CLASSIFICATION	1.589257975082459E-6	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999967255442548	WITHOUT_CLASSIFICATION	3.2744557452489883E-6	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9998900943605812	WITHOUT_CLASSIFICATION	1.0990563941885617E-4	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999459909458762	WITHOUT_CLASSIFICATION	5.400905412375581E-5	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9997664274599506	WITHOUT_CLASSIFICATION	2.335725400494587E-4	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999640229085149	WITHOUT_CLASSIFICATION	3.5977091484940254E-5	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999948955526585	WITHOUT_CLASSIFICATION	5.104447341529167E-6	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999597700765465	WITHOUT_CLASSIFICATION	4.022992345343953E-5	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999474967096964	WITHOUT_CLASSIFICATION	5.2503290303564E-5	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9999952603748746	WITHOUT_CLASSIFICATION	4.73962512529948E-6	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9999421823362742	WITHOUT_CLASSIFICATION	5.781766372577014E-5	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9999168328041751	WITHOUT_CLASSIFICATION	8.316719582492335E-5	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999987272432066	WITHOUT_CLASSIFICATION	1.2727567934205684E-6	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999990081703511	WITHOUT_CLASSIFICATION	9.918296488775462E-7	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999918672110484	WITHOUT_CLASSIFICATION	8.132788951683312E-6	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999861040464243	WITHOUT_CLASSIFICATION	1.3895953575842786E-5	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999987273089996	WITHOUT_CLASSIFICATION	1.2726910002880167E-6	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999988190366187	WITHOUT_CLASSIFICATION	1.1809633812818185E-6	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999916633437622	WITHOUT_CLASSIFICATION	8.336656237849287E-6	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999870958777877	WITHOUT_CLASSIFICATION	1.2904122212363492E-5	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999229886673363	WITHOUT_CLASSIFICATION	7.701133266372767E-5	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999798186899195	WITHOUT_CLASSIFICATION	2.0181310080488357E-5	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999711570001296	WITHOUT_CLASSIFICATION	2.8842999870371905E-5	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999738140659674	WITHOUT_CLASSIFICATION	2.6185934032571062E-5	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999392703237882	WITHOUT_CLASSIFICATION	6.0729676211884136E-5	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.999992944351234	WITHOUT_CLASSIFICATION	7.055648766099327E-6	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999990633920548	WITHOUT_CLASSIFICATION	9.36607945240984E-7	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999988059257494	WITHOUT_CLASSIFICATION	1.1940742505876491E-6	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999973335170997	WITHOUT_CLASSIFICATION	2.6664829002873886E-6	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9999866567397034	WITHOUT_CLASSIFICATION	1.334326029640939E-5	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999588279498055	WITHOUT_CLASSIFICATION	4.1172050194536554E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999954396378833	WITHOUT_CLASSIFICATION	4.560362116629044E-6	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999992040739779	WITHOUT_CLASSIFICATION	7.959260222402059E-7	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999997565514617	WITHOUT_CLASSIFICATION	2.4344853827161765E-7	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999944443853621	WITHOUT_CLASSIFICATION	5.5556146378203305E-6	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9999939149893645	WITHOUT_CLASSIFICATION	6.085010635460774E-6	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.999990457533406	WITHOUT_CLASSIFICATION	9.542466594104846E-6	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999991290587226	WITHOUT_CLASSIFICATION	8.709412772972617E-7	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999996892505433	WITHOUT_CLASSIFICATION	3.107494567450455E-7	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999988425978439	WITHOUT_CLASSIFICATION	1.1574021561337665E-6	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999991741766081	WITHOUT_CLASSIFICATION	8.258233918100908E-7	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999951372934158	WITHOUT_CLASSIFICATION	4.86270658419841E-6	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999990664613104	WITHOUT_CLASSIFICATION	9.335386895462124E-7	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999770429539281	WITHOUT_CLASSIFICATION	2.295704607188331E-5	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999844253110124	WITHOUT_CLASSIFICATION	1.5574688987640226E-5	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999946311860847	WITHOUT_CLASSIFICATION	5.368813915351812E-6	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999922744533627	WITHOUT_CLASSIFICATION	7.725546637373643E-6	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9998909524015163	WITHOUT_CLASSIFICATION	1.0904759848370391E-4	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999991409012966	WITHOUT_CLASSIFICATION	8.590987034740971E-7	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999862592952159	WITHOUT_CLASSIFICATION	1.3740704784013845E-5	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9998845055050612	WITHOUT_CLASSIFICATION	1.1549449493870783E-4	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999748534569038	WITHOUT_CLASSIFICATION	2.514654309618717E-5	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9999992633935288	WITHOUT_CLASSIFICATION	7.366064711909003E-7	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999935918062193	WITHOUT_CLASSIFICATION	6.408193780697884E-6	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999996307005538	WITHOUT_CLASSIFICATION	3.692994462209475E-7	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.999998678370287	WITHOUT_CLASSIFICATION	1.3216297131181686E-6	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999999162566297	WITHOUT_CLASSIFICATION	8.374337035400768E-8	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999621712291265	WITHOUT_CLASSIFICATION	3.7828770873623647E-5	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.99998949424222	WITHOUT_CLASSIFICATION	1.0505757779966794E-5	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999893165165734	WITHOUT_CLASSIFICATION	1.0683483426535064E-5	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999984607218161	WITHOUT_CLASSIFICATION	1.539278183951477E-6	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9999916435421015	WITHOUT_CLASSIFICATION	8.356457898633774E-6	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999997084688435	WITHOUT_CLASSIFICATION	2.9153115654673523E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999954396378833	WITHOUT_CLASSIFICATION	4.560362116629044E-6	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.999980270125117	WITHOUT_CLASSIFICATION	1.9729874882971015E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999908298455018	WITHOUT_CLASSIFICATION	9.170154498252821E-6	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999908298455018	WITHOUT_CLASSIFICATION	9.170154498252821E-6	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999763006109834	WITHOUT_CLASSIFICATION	2.369938901653675E-5	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999990676333033	WITHOUT_CLASSIFICATION	9.323666966885036E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999990676333033	WITHOUT_CLASSIFICATION	9.323666966885036E-7	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999890140213851	WITHOUT_CLASSIFICATION	1.0985978614994769E-5	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999941518565457	WITHOUT_CLASSIFICATION	5.84814345416699E-6	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999956201571513	WITHOUT_CLASSIFICATION	4.379842848668913E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999938892561718	WITHOUT_CLASSIFICATION	6.110743828110308E-6	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9999990568608631	WITHOUT_CLASSIFICATION	9.431391369243164E-7	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999680249483193	WITHOUT_CLASSIFICATION	3.1975051680766123E-5	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999915447181276	WITHOUT_CLASSIFICATION	8.455281872426205E-6	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999989967763618	WITHOUT_CLASSIFICATION	1.003223638191622E-6	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999996151344444	WITHOUT_CLASSIFICATION	3.8486555561029126E-7	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9995405531069926	WITHOUT_CLASSIFICATION	4.594468930073611E-4	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999979733051021	WITHOUT_CLASSIFICATION	2.0266948978888273E-6	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999947497787737	WITHOUT_CLASSIFICATION	5.2502212263545475E-6	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9999716791063391	WITHOUT_CLASSIFICATION	2.8320893660794667E-5	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9999493271606389	WITHOUT_CLASSIFICATION	5.0672839360982125E-5	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9998904474114325	WITHOUT_CLASSIFICATION	1.0955258856748435E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999866766305323	WITHOUT_CLASSIFICATION	1.3323369467638237E-5	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999932004411639	WITHOUT_CLASSIFICATION	6.7995588360102595E-6	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.999997335601168	WITHOUT_CLASSIFICATION	2.6643988320851394E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999981309048691	WITHOUT_CLASSIFICATION	1.869095130869185E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999990676333033	WITHOUT_CLASSIFICATION	9.323666966885036E-7	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999890140213851	WITHOUT_CLASSIFICATION	1.0985978614994769E-5	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999866766305323	WITHOUT_CLASSIFICATION	1.3323369467638237E-5	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.999993701426433	WITHOUT_CLASSIFICATION	6.298573566974925E-6	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999702246859712	WITHOUT_CLASSIFICATION	2.9775314028739517E-5	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999961622297999	WITHOUT_CLASSIFICATION	3.837770200096899E-6	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9999634186703302	WITHOUT_CLASSIFICATION	3.6581329669813706E-5	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999891324984145	WITHOUT_CLASSIFICATION	1.0867501585508111E-5	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999963815209512	WITHOUT_CLASSIFICATION	3.6184790488155987E-6	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999980057170917	WITHOUT_CLASSIFICATION	1.9942829082584835E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999813771802675	WITHOUT_CLASSIFICATION	1.8622819732435897E-5	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9998917228833464	WITHOUT_CLASSIFICATION	1.0827711665368127E-4	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999510568393696	WITHOUT_CLASSIFICATION	4.8943160630447795E-5	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.999850407525798	WITHOUT_CLASSIFICATION	1.4959247420192443E-4	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9999628019765644	WITHOUT_CLASSIFICATION	3.719802343552987E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999992653384504	WITHOUT_CLASSIFICATION	7.34661549556679E-7	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999990344331953	WITHOUT_CLASSIFICATION	9.655668047422043E-7	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9851373458981448	WITHOUT_CLASSIFICATION	0.014862654101855065	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9999651612259771	WITHOUT_CLASSIFICATION	3.4838774022998765E-5	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999979904268236	WITHOUT_CLASSIFICATION	2.0095731763120722E-6	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999932930947133	WITHOUT_CLASSIFICATION	6.706905286738331E-6	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999833113299557	WITHOUT_CLASSIFICATION	1.6688670044421697E-5	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999328345658295	WITHOUT_CLASSIFICATION	6.71654341705405E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999786946226327	WITHOUT_CLASSIFICATION	2.1305377367335358E-5	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999843272093849	WITHOUT_CLASSIFICATION	1.5672790615094116E-5	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999865819976458	WITHOUT_CLASSIFICATION	1.3418002354256912E-5	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999910043966445	WITHOUT_CLASSIFICATION	8.995603355625527E-6	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999899402697506	WITHOUT_CLASSIFICATION	1.00597302493789E-5	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999974844073123	WITHOUT_CLASSIFICATION	2.515592687651179E-6	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999696077275009	WITHOUT_CLASSIFICATION	3.039227249915739E-5	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999481764583673	WITHOUT_CLASSIFICATION	5.182354163273796E-5	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999975683159217	WITHOUT_CLASSIFICATION	2.431684078390336E-6	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999923526673391	WITHOUT_CLASSIFICATION	7.647332660960137E-6	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9997841299206315	WITHOUT_CLASSIFICATION	2.15870079368605E-4	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999984368477742	WITHOUT_CLASSIFICATION	1.5631522256953039E-6	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999862401719734	WITHOUT_CLASSIFICATION	1.375982802652313E-5	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999622424292393	WITHOUT_CLASSIFICATION	3.775757076070631E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999730730945934	WITHOUT_CLASSIFICATION	2.692690540661592E-5	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999541345943603	WITHOUT_CLASSIFICATION	4.586540563972091E-5	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.999995804557953	WITHOUT_CLASSIFICATION	4.195442046990751E-6	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999997185622148	WITHOUT_CLASSIFICATION	2.8143778521155095E-7	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999935135062845	WITHOUT_CLASSIFICATION	6.486493715501084E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999935135062845	WITHOUT_CLASSIFICATION	6.486493715501084E-6	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999998260864659	WITHOUT_CLASSIFICATION	1.7391353414090812E-7	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999995874222317	WITHOUT_CLASSIFICATION	4.125777682779869E-7	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999995874222317	WITHOUT_CLASSIFICATION	4.125777682779869E-7	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999933759538677	WITHOUT_CLASSIFICATION	6.624046132317446E-6	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999933759538677	WITHOUT_CLASSIFICATION	6.624046132317446E-6	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999914011093133	WITHOUT_CLASSIFICATION	8.598890686663353E-6	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999900862287974	WITHOUT_CLASSIFICATION	9.913771202560207E-6	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999994933504172	WITHOUT_CLASSIFICATION	5.066495828054377E-7	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.99999981929451	WITHOUT_CLASSIFICATION	1.807054901426531E-7	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999995683411795	WITHOUT_CLASSIFICATION	4.316588204708278E-7	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999988983459512	WITHOUT_CLASSIFICATION	1.1016540488293845E-6	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999973327310507	WITHOUT_CLASSIFICATION	2.667268949230434E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999253252011037	WITHOUT_CLASSIFICATION	7.467479889635418E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999935135062845	WITHOUT_CLASSIFICATION	6.486493715501084E-6	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999232880171365	WITHOUT_CLASSIFICATION	7.671198286346801E-5	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999987194601329	WITHOUT_CLASSIFICATION	1.2805398671267902E-6	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.999997416996879	WITHOUT_CLASSIFICATION	2.5830031208767528E-6	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9999749352398896	WITHOUT_CLASSIFICATION	2.5064760110411373E-5	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999759041095974	WITHOUT_CLASSIFICATION	2.409589040265857E-5	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999993636206399	WITHOUT_CLASSIFICATION	6.363793601827913E-7	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999988565129008	WITHOUT_CLASSIFICATION	1.1434870992281916E-6	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.999988453604047	WITHOUT_CLASSIFICATION	1.1546395952941578E-5	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999924815996847	WITHOUT_CLASSIFICATION	7.518400315370528E-6	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999924815996847	WITHOUT_CLASSIFICATION	7.518400315370528E-6	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999132027084355	WITHOUT_CLASSIFICATION	8.679729156455416E-5	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999998235168523	WITHOUT_CLASSIFICATION	1.7648314773053477E-7	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999893799532011	WITHOUT_CLASSIFICATION	1.0620046798885608E-5	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999950971795798	WITHOUT_CLASSIFICATION	4.902820420268788E-6	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999973543048369	WITHOUT_CLASSIFICATION	2.645695162942695E-6	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994656700553	WITHOUT_CLASSIFICATION	5.343299446811053E-7	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999979662542794	WITHOUT_CLASSIFICATION	2.033745720547139E-6	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999997116087302	WITHOUT_CLASSIFICATION	2.8839126982050944E-7	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999991055357709	WITHOUT_CLASSIFICATION	8.944642290851501E-7	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994656700553	WITHOUT_CLASSIFICATION	5.343299446811053E-7	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999971531685403	WITHOUT_CLASSIFICATION	2.846831459752418E-6	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999874009273221	WITHOUT_CLASSIFICATION	1.2599072677934345E-5	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999958525123702	WITHOUT_CLASSIFICATION	4.14748762975766E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9999915117044329	WITHOUT_CLASSIFICATION	8.488295567026428E-6	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999949191207518	WITHOUT_CLASSIFICATION	5.080879248253735E-6	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999877772139434	WITHOUT_CLASSIFICATION	1.2222786056720881E-5	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999958211020137	WITHOUT_CLASSIFICATION	4.178897986292384E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999637891831241	WITHOUT_CLASSIFICATION	3.6210816875921046E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999637891831241	WITHOUT_CLASSIFICATION	3.6210816875921046E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999477811704702	WITHOUT_CLASSIFICATION	5.22188295296594E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999477811704702	WITHOUT_CLASSIFICATION	5.22188295296594E-5	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999373129117044	WITHOUT_CLASSIFICATION	6.268708829556718E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999957692330643	WITHOUT_CLASSIFICATION	4.2307669356986776E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999957692330643	WITHOUT_CLASSIFICATION	4.2307669356986776E-5	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999471927929473	WITHOUT_CLASSIFICATION	5.280720705266327E-5	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999461587169871	WITHOUT_CLASSIFICATION	5.384128301275616E-5	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999461587169871	WITHOUT_CLASSIFICATION	5.384128301275616E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99994817693753	WITHOUT_CLASSIFICATION	5.182306247008362E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99994817693753	WITHOUT_CLASSIFICATION	5.182306247008362E-5	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.999954771940298	WITHOUT_CLASSIFICATION	4.522805970202055E-5	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.999973274284111	WITHOUT_CLASSIFICATION	2.6725715888980565E-5	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999955951302045	WITHOUT_CLASSIFICATION	4.404869795505082E-6	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999971916045944	WITHOUT_CLASSIFICATION	2.808395405569861E-6	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999988704161699	WITHOUT_CLASSIFICATION	1.129583830106789E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999800629545399	WITHOUT_CLASSIFICATION	1.9937045460115102E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999800629545399	WITHOUT_CLASSIFICATION	1.9937045460115102E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999467649346535	WITHOUT_CLASSIFICATION	5.3235065346453334E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999467649346535	WITHOUT_CLASSIFICATION	5.3235065346453334E-5	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.999998989079751	WITHOUT_CLASSIFICATION	1.010920248961951E-6	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999941163546336	WITHOUT_CLASSIFICATION	5.883645366371721E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999446035266202	WITHOUT_CLASSIFICATION	5.539647337986864E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999270683804519	WITHOUT_CLASSIFICATION	7.293161954815603E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999637891831241	WITHOUT_CLASSIFICATION	3.6210816875921046E-5	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999814217185478	WITHOUT_CLASSIFICATION	1.8578281452213207E-5	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999939848631659	WITHOUT_CLASSIFICATION	6.015136834034257E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999477811704702	WITHOUT_CLASSIFICATION	5.22188295296594E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999477811704702	WITHOUT_CLASSIFICATION	5.22188295296594E-5	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999373129117044	WITHOUT_CLASSIFICATION	6.268708829556718E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999957692330643	WITHOUT_CLASSIFICATION	4.2307669356986776E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999957692330643	WITHOUT_CLASSIFICATION	4.2307669356986776E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.999957692330643	WITHOUT_CLASSIFICATION	4.2307669356986776E-5	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999471927929473	WITHOUT_CLASSIFICATION	5.280720705266327E-5	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999461587169871	WITHOUT_CLASSIFICATION	5.384128301275616E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99994817693753	WITHOUT_CLASSIFICATION	5.182306247008362E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99994817693753	WITHOUT_CLASSIFICATION	5.182306247008362E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99994817693753	WITHOUT_CLASSIFICATION	5.182306247008362E-5	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.999954771940298	WITHOUT_CLASSIFICATION	4.522805970202055E-5	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.999973274284111	WITHOUT_CLASSIFICATION	2.6725715888980565E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999800629545399	WITHOUT_CLASSIFICATION	1.9937045460115102E-5	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999992640956298	WITHOUT_CLASSIFICATION	7.359043702574387E-7	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.999998912592874	WITHOUT_CLASSIFICATION	1.0874071259814648E-6	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999981488496101	WITHOUT_CLASSIFICATION	1.851150389829421E-6	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999973122226156	WITHOUT_CLASSIFICATION	2.687777384489518E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999800629545399	WITHOUT_CLASSIFICATION	1.9937045460115102E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999467649346535	WITHOUT_CLASSIFICATION	5.3235065346453334E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999467649346535	WITHOUT_CLASSIFICATION	5.3235065346453334E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999446035266202	WITHOUT_CLASSIFICATION	5.539647337986864E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999446035266202	WITHOUT_CLASSIFICATION	5.539647337986864E-5	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999811164814494	WITHOUT_CLASSIFICATION	1.888351855069121E-5	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999579335002853	WITHOUT_CLASSIFICATION	4.206649971474642E-5	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999449921998154	WITHOUT_CLASSIFICATION	5.5007800184606506E-5	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999414295813349	WITHOUT_CLASSIFICATION	5.857041866508971E-5	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999787823287729	WITHOUT_CLASSIFICATION	2.1217671227041038E-5	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999553795453354	WITHOUT_CLASSIFICATION	4.4620454664648686E-5	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999357574245603	WITHOUT_CLASSIFICATION	6.424257543968626E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999932898066066	WITHOUT_CLASSIFICATION	6.7101933934465064E-6	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.99993522632598	WITHOUT_CLASSIFICATION	6.477367402007051E-5	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999986660230813	WITHOUT_CLASSIFICATION	1.3339769187375766E-6	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999956674568735	WITHOUT_CLASSIFICATION	4.332543126482638E-6	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9998909614932797	WITHOUT_CLASSIFICATION	1.0903850672019687E-4	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999449102200675	WITHOUT_CLASSIFICATION	5.508977993241409E-5	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9998637039927887	WITHOUT_CLASSIFICATION	1.3629600721127593E-4	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9999098323654948	WITHOUT_CLASSIFICATION	9.016763450510017E-5	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999969913959446	WITHOUT_CLASSIFICATION	3.008604055456606E-6	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999966027852509	WITHOUT_CLASSIFICATION	3.397214748959003E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999879002511657	WITHOUT_CLASSIFICATION	1.2099748834253422E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999994628397465	WITHOUT_CLASSIFICATION	5.371602534967792E-6	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999991449422782	WITHOUT_CLASSIFICATION	8.550577217973222E-7	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999970056448989	WITHOUT_CLASSIFICATION	2.994355101174343E-6	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9997103132802776	WITHOUT_CLASSIFICATION	2.8968671972247085E-4	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999972960818881	WITHOUT_CLASSIFICATION	2.703918111733789E-6	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999972960818881	WITHOUT_CLASSIFICATION	2.703918111733789E-6	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999932296399462	WITHOUT_CLASSIFICATION	6.770360053836506E-6	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999997774708934	WITHOUT_CLASSIFICATION	2.2252910666546747E-7	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9999207237283301	WITHOUT_CLASSIFICATION	7.927627166986581E-5	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999431950652486	WITHOUT_CLASSIFICATION	5.680493475134405E-5	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999905689923458	WITHOUT_CLASSIFICATION	9.431007654176299E-6	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999897806858137	WITHOUT_CLASSIFICATION	1.0219314186319448E-5	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999776961332655	WITHOUT_CLASSIFICATION	2.2303866734599415E-5	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.999996372426873	WITHOUT_CLASSIFICATION	3.62757312707912E-6	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999698403480651	WITHOUT_CLASSIFICATION	3.0159651934985418E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999698403480651	WITHOUT_CLASSIFICATION	3.0159651934985418E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999698403480651	WITHOUT_CLASSIFICATION	3.0159651934985418E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999487472344913	WITHOUT_CLASSIFICATION	5.1252765508645266E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999487472344913	WITHOUT_CLASSIFICATION	5.1252765508645266E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999487472344913	WITHOUT_CLASSIFICATION	5.1252765508645266E-5	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.999984569533356	WITHOUT_CLASSIFICATION	1.5430466644033483E-5	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9999806567905272	WITHOUT_CLASSIFICATION	1.9343209472818243E-5	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9999270293862654	WITHOUT_CLASSIFICATION	7.297061373458674E-5	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9999429523064929	WITHOUT_CLASSIFICATION	5.704769350708464E-5	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999700818293753	WITHOUT_CLASSIFICATION	2.9918170624766795E-5	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998774501748396	WITHOUT_CLASSIFICATION	1.225498251603317E-4	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998186212956258	WITHOUT_CLASSIFICATION	1.8137870437429516E-4	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999996284802452	WITHOUT_CLASSIFICATION	3.715197548728232E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999984763651615	WITHOUT_CLASSIFICATION	1.5236348385211862E-6	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999995894641566	WITHOUT_CLASSIFICATION	4.105358434130366E-7	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9999995210198432	WITHOUT_CLASSIFICATION	4.78980156696376E-7	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.999999310350476	WITHOUT_CLASSIFICATION	6.896495240109491E-7	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999940681395251	WITHOUT_CLASSIFICATION	5.931860474977826E-6	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999996690655103	WITHOUT_CLASSIFICATION	3.309344897302687E-7	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999722769832848	WITHOUT_CLASSIFICATION	2.772301671518317E-5	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999886172067075	WITHOUT_CLASSIFICATION	1.138279329247958E-5	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999995836699562	WITHOUT_CLASSIFICATION	4.1633004378951197E-7	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.99999218170389	WITHOUT_CLASSIFICATION	7.818296110019324E-6	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9999639005689668	WITHOUT_CLASSIFICATION	3.609943103318866E-5	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999999453292429	WITHOUT_CLASSIFICATION	5.467075715715861E-8	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999996511725852	WITHOUT_CLASSIFICATION	3.4882741477184673E-7	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999999520420161	WITHOUT_CLASSIFICATION	4.795798402754253E-8	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9999963446205715	WITHOUT_CLASSIFICATION	3.6553794286273483E-6	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999980928141	WITHOUT_CLASSIFICATION	1.9071858385330663E-9	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999998644358573	WITHOUT_CLASSIFICATION	1.3556414273899958E-7	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.999889487032941	WITHOUT_CLASSIFICATION	1.1051296705901505E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999954399360702	WITHOUT_CLASSIFICATION	4.560063929833023E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999972250083589	WITHOUT_CLASSIFICATION	2.774991641128597E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999980479662307	WITHOUT_CLASSIFICATION	1.952033769196168E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999980479662307	WITHOUT_CLASSIFICATION	1.952033769196168E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9998620256490308	WITHOUT_CLASSIFICATION	1.3797435096918863E-4	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999965239699198	WITHOUT_CLASSIFICATION	3.4760300801007572E-6	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9999956418843245	WITHOUT_CLASSIFICATION	4.358115675453041E-6	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999957481775003	WITHOUT_CLASSIFICATION	4.25182249980455E-6	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999968093684309	WITHOUT_CLASSIFICATION	3.1906315689212713E-6	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.999994639789284	WITHOUT_CLASSIFICATION	5.360210715992249E-6	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999939111588215	WITHOUT_CLASSIFICATION	6.088841178449867E-6	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999924892625117	WITHOUT_CLASSIFICATION	7.510737488300906E-6	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9998981994481323	WITHOUT_CLASSIFICATION	1.0180055186773751E-4	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999978131025417	WITHOUT_CLASSIFICATION	2.1868974584253076E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999651955815999	WITHOUT_CLASSIFICATION	3.480441840011186E-5	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9998030894501457	WITHOUT_CLASSIFICATION	1.9691054985417988E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9999922121551438	WITHOUT_CLASSIFICATION	7.787844856184868E-6	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9999907225180659	WITHOUT_CLASSIFICATION	9.277481934214739E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999879002511657	WITHOUT_CLASSIFICATION	1.2099748834253422E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999994446248351	WITHOUT_CLASSIFICATION	5.553751647606119E-7	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9992752469411801	WITHOUT_CLASSIFICATION	7.247530588199502E-4	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999673212637908	WITHOUT_CLASSIFICATION	3.267873620912228E-5	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9994325530979635	WITHOUT_CLASSIFICATION	5.674469020364602E-4	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9998819175688073	WITHOUT_CLASSIFICATION	1.1808243119273149E-4	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999966722781243	WITHOUT_CLASSIFICATION	3.3277218758592948E-6	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9999724789269403	WITHOUT_CLASSIFICATION	2.7521073059749344E-5	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999460473195249	WITHOUT_CLASSIFICATION	5.395268047518411E-5	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999917865243716	WITHOUT_CLASSIFICATION	8.213475628500041E-6	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999716961851696	WITHOUT_CLASSIFICATION	2.8303814830361797E-5	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999775103063065	WITHOUT_CLASSIFICATION	2.24896936933637E-5	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9996142696126581	WITHOUT_CLASSIFICATION	3.8573038734198995E-4	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9995993648858179	WITHOUT_CLASSIFICATION	4.00635114182138E-4	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999797015986183	WITHOUT_CLASSIFICATION	2.029840138169552E-5	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999494022693233	WITHOUT_CLASSIFICATION	5.059773067672133E-5	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999769562280861	WITHOUT_CLASSIFICATION	2.304377191390001E-5	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999213611369681	WITHOUT_CLASSIFICATION	7.86388630319822E-5	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999819252990223	WITHOUT_CLASSIFICATION	1.8074700977749953E-5	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999958155753126	WITHOUT_CLASSIFICATION	4.184424687332697E-6	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999941647252226	WITHOUT_CLASSIFICATION	5.8352747773992474E-6	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999866589214231	WITHOUT_CLASSIFICATION	1.3341078576794273E-5	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999965051662879	WITHOUT_CLASSIFICATION	3.494833712163111E-6	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999774403448622	WITHOUT_CLASSIFICATION	2.2559655137750468E-5	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999898774907318	WITHOUT_CLASSIFICATION	1.0122509268194897E-5	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999651659853135	WITHOUT_CLASSIFICATION	3.4834014686451944E-5	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.999965501588486	WITHOUT_CLASSIFICATION	3.449841151399887E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9999975148263344	WITHOUT_CLASSIFICATION	2.485173665640162E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999933553615753	WITHOUT_CLASSIFICATION	6.644638424666587E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999933553615753	WITHOUT_CLASSIFICATION	6.644638424666587E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.99992041499336	WITHOUT_CLASSIFICATION	7.958500663994042E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999681853419679	WITHOUT_CLASSIFICATION	3.1814658032220446E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999915253462032	WITHOUT_CLASSIFICATION	8.474653796816804E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999915253462032	WITHOUT_CLASSIFICATION	8.474653796816804E-6	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998774501748396	WITHOUT_CLASSIFICATION	1.225498251603317E-4	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998186212956258	WITHOUT_CLASSIFICATION	1.8137870437429516E-4	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999001191563897	WITHOUT_CLASSIFICATION	9.988084361030603E-5	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999986608519198	WITHOUT_CLASSIFICATION	1.3391480802133703E-6	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999433715672186	WITHOUT_CLASSIFICATION	5.662843278136651E-5	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999675353837173	WITHOUT_CLASSIFICATION	3.246461628282226E-5	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999989872340578	WITHOUT_CLASSIFICATION	1.0127659422884547E-6	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999903653807639	WITHOUT_CLASSIFICATION	9.634619236019115E-6	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999885483510388	WITHOUT_CLASSIFICATION	1.1451648961214375E-5	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999893328681398	WITHOUT_CLASSIFICATION	1.0667131860144734E-5	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999946513468883	WITHOUT_CLASSIFICATION	5.348653111751004E-6	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9999985738427489	WITHOUT_CLASSIFICATION	1.4261572511522432E-6	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999983477507179	WITHOUT_CLASSIFICATION	1.65224928201881E-6	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9998797660346149	WITHOUT_CLASSIFICATION	1.2023396538511564E-4	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999030700475899	WITHOUT_CLASSIFICATION	9.692995241007597E-5	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999030700475899	WITHOUT_CLASSIFICATION	9.692995241007597E-5	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999966719049845	WITHOUT_CLASSIFICATION	3.3280950155148653E-6	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999938675301525	WITHOUT_CLASSIFICATION	6.13246984751732E-6	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9998840944284286	WITHOUT_CLASSIFICATION	1.1590557157145164E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.999985580855387	WITHOUT_CLASSIFICATION	1.4419144612865111E-5	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.999997801043956	WITHOUT_CLASSIFICATION	2.1989560439358045E-6	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999998287997763	WITHOUT_CLASSIFICATION	1.7120022372179525E-7	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999969415505175	WITHOUT_CLASSIFICATION	3.0584494824878765E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.999999400429869	WITHOUT_CLASSIFICATION	5.995701309442604E-7	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999877922065508	WITHOUT_CLASSIFICATION	1.2207793449295467E-5	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9999882433343367	WITHOUT_CLASSIFICATION	1.1756665663325775E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999915864054003	WITHOUT_CLASSIFICATION	8.413594599652774E-6	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9984756840152585	WITHOUT_CLASSIFICATION	0.0015243159847414547	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9999537492081944	WITHOUT_CLASSIFICATION	4.625079180574253E-5	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999798804150564	WITHOUT_CLASSIFICATION	2.0119584943624183E-5	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999947993678482	WITHOUT_CLASSIFICATION	5.200632151843001E-6	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9994687268058629	WITHOUT_CLASSIFICATION	5.312731941371672E-4	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999918762897132	WITHOUT_CLASSIFICATION	8.12371028684466E-6	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999978954901004	WITHOUT_CLASSIFICATION	2.104509899625464E-6	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999889496725767	WITHOUT_CLASSIFICATION	1.1050327423265849E-5	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999863618641633	WITHOUT_CLASSIFICATION	1.3638135836558485E-5	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9996188499069805	WITHOUT_CLASSIFICATION	3.811500930195025E-4	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999967534908928	WITHOUT_CLASSIFICATION	3.24650910732389E-6	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9999708941545906	WITHOUT_CLASSIFICATION	2.910584540935486E-5	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.999964762606174	WITHOUT_CLASSIFICATION	3.523739382598463E-5	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999851658047404	WITHOUT_CLASSIFICATION	1.4834195259636795E-5	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999979078937208	WITHOUT_CLASSIFICATION	2.092106279311116E-6	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999972693223594	WITHOUT_CLASSIFICATION	2.7306776404877573E-6	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9998817092408658	WITHOUT_CLASSIFICATION	1.1829075913417073E-4	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999648973544218	WITHOUT_CLASSIFICATION	3.5102645578222164E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994539001513919	WITHOUT_CLASSIFICATION	5.46099848608074E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994539001513919	WITHOUT_CLASSIFICATION	5.46099848608074E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994539001513919	WITHOUT_CLASSIFICATION	5.46099848608074E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994539001513919	WITHOUT_CLASSIFICATION	5.46099848608074E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994539001513919	WITHOUT_CLASSIFICATION	5.46099848608074E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994539001513919	WITHOUT_CLASSIFICATION	5.46099848608074E-4	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999992077022394	WITHOUT_CLASSIFICATION	7.922977605269856E-7	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.999999426303411	WITHOUT_CLASSIFICATION	5.736965890105832E-7	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999964524471717	WITHOUT_CLASSIFICATION	3.547552828355056E-6	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999988981032039	WITHOUT_CLASSIFICATION	1.1018967961297009E-6	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999988981032039	WITHOUT_CLASSIFICATION	1.1018967961297009E-6	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999910670619924	WITHOUT_CLASSIFICATION	8.93293800758149E-6	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999910670619924	WITHOUT_CLASSIFICATION	8.93293800758149E-6	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.999989835748222	WITHOUT_CLASSIFICATION	1.0164251778029747E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999963468752727	WITHOUT_CLASSIFICATION	3.6531247272770694E-6	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999980326892395	WITHOUT_CLASSIFICATION	1.9673107604138644E-6	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9998532807713599	WITHOUT_CLASSIFICATION	1.4671922864011093E-4	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999702751323123	WITHOUT_CLASSIFICATION	2.9724867687834315E-5	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999982631189938	WITHOUT_CLASSIFICATION	1.7368810062715865E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.999989978257107	WITHOUT_CLASSIFICATION	1.002174289302957E-5	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.999989978257107	WITHOUT_CLASSIFICATION	1.002174289302957E-5	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999650161276135	WITHOUT_CLASSIFICATION	3.498387238656256E-5	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999650161276135	WITHOUT_CLASSIFICATION	3.498387238656256E-5	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999650161276135	WITHOUT_CLASSIFICATION	3.498387238656256E-5	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9999743271402234	WITHOUT_CLASSIFICATION	2.5672859776602927E-5	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9999743271402234	WITHOUT_CLASSIFICATION	2.5672859776602927E-5	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.999995094334059	WITHOUT_CLASSIFICATION	4.905665941083443E-6	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999993621745914	WITHOUT_CLASSIFICATION	6.378254086342624E-7	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999920900693583	WITHOUT_CLASSIFICATION	7.909930641771705E-6	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.999995068292484	WITHOUT_CLASSIFICATION	4.931707516006077E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999928639029344	WITHOUT_CLASSIFICATION	7.136097065604523E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999928639029344	WITHOUT_CLASSIFICATION	7.136097065604523E-6	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999973314223727	WITHOUT_CLASSIFICATION	2.668577627242461E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9994539001513919	WITHOUT_CLASSIFICATION	5.46099848608074E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999928639029344	WITHOUT_CLASSIFICATION	7.136097065604523E-6	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999944037299516	WITHOUT_CLASSIFICATION	5.5962700484069696E-6	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999944037299516	WITHOUT_CLASSIFICATION	5.5962700484069696E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999928639029344	WITHOUT_CLASSIFICATION	7.136097065604523E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999928639029344	WITHOUT_CLASSIFICATION	7.136097065604523E-6	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999928639029344	WITHOUT_CLASSIFICATION	7.136097065604523E-6	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999990179923671	WITHOUT_CLASSIFICATION	9.820076329507712E-7	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999992978028678	WITHOUT_CLASSIFICATION	7.021971322515232E-7	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999984459038873	WITHOUT_CLASSIFICATION	1.5540961126508918E-6	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999984459038873	WITHOUT_CLASSIFICATION	1.5540961126508918E-6	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999991241901259	WITHOUT_CLASSIFICATION	8.75809874117462E-7	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999990593844603	WITHOUT_CLASSIFICATION	9.406155397319453E-7	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999962611917281	WITHOUT_CLASSIFICATION	3.7388082718602815E-6	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999981650196769	WITHOUT_CLASSIFICATION	1.8349803231780153E-6	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9992557914777972	WITHOUT_CLASSIFICATION	7.442085222028821E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999997463256185	WITHOUT_CLASSIFICATION	2.5367438154385876E-7	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999817107639	WITHOUT_CLASSIFICATION	1.8289236099981295E-5	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999969939865277	WITHOUT_CLASSIFICATION	3.006013472294338E-6	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999901072051353	WITHOUT_CLASSIFICATION	9.892794864811979E-6	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999991117257158	WITHOUT_CLASSIFICATION	8.882742842420763E-7	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999818174456948	WITHOUT_CLASSIFICATION	1.8182554305172393E-5	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.999991589864571	WITHOUT_CLASSIFICATION	8.410135429035939E-6	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999910848695711	WITHOUT_CLASSIFICATION	8.915130428929195E-6	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999995548199814	WITHOUT_CLASSIFICATION	4.4518001864566784E-7	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999992494209655	WITHOUT_CLASSIFICATION	7.505790344778635E-7	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999854397568794	WITHOUT_CLASSIFICATION	1.4560243120658077E-5	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999991124753042	WITHOUT_CLASSIFICATION	8.875246958778027E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999983895145905	WITHOUT_CLASSIFICATION	1.61048540942396E-6	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999994161285176	WITHOUT_CLASSIFICATION	5.838714823204022E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999982656602617	WITHOUT_CLASSIFICATION	1.7343397381792985E-6	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.999973668021126	WITHOUT_CLASSIFICATION	2.6331978874080076E-5	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999983895145905	WITHOUT_CLASSIFICATION	1.61048540942396E-6	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999975714186145	WITHOUT_CLASSIFICATION	2.4285813855370405E-6	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999994161285176	WITHOUT_CLASSIFICATION	5.838714823204022E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999982656602617	WITHOUT_CLASSIFICATION	1.7343397381792985E-6	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999973933485699	WITHOUT_CLASSIFICATION	2.6066514301672964E-6	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999961857400994	WITHOUT_CLASSIFICATION	3.8142599005992206E-6	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999991799208889	WITHOUT_CLASSIFICATION	8.200791111406627E-7	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999986024349836	WITHOUT_CLASSIFICATION	1.3975650164028422E-6	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999973936411236	WITHOUT_CLASSIFICATION	2.6063588763776865E-6	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.999996300112941	WITHOUT_CLASSIFICATION	3.6998870589987766E-6	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9999876616719252	WITHOUT_CLASSIFICATION	1.2338328074683464E-5	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.999999613302266	WITHOUT_CLASSIFICATION	3.866977338522291E-7	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999957258419537	WITHOUT_CLASSIFICATION	4.274158046292219E-6	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999733754722009	WITHOUT_CLASSIFICATION	2.6624527799055005E-5	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999951117328383	WITHOUT_CLASSIFICATION	4.888267161817255E-6	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999996616526512	WITHOUT_CLASSIFICATION	3.3834734888247055E-7	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999908737274266	WITHOUT_CLASSIFICATION	9.126272573473714E-6	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.999999400953938	WITHOUT_CLASSIFICATION	5.990460619932726E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999837515741902	WITHOUT_CLASSIFICATION	1.624842580982832E-5	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999960078032203	WITHOUT_CLASSIFICATION	3.99219677968586E-6	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999991686876138	WITHOUT_CLASSIFICATION	8.313123861189584E-7	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999999260330736	WITHOUT_CLASSIFICATION	7.396692644152021E-8	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999967541400476	WITHOUT_CLASSIFICATION	3.245859952437885E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999967541400476	WITHOUT_CLASSIFICATION	3.245859952437885E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999940261116692	WITHOUT_CLASSIFICATION	5.973888330833882E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999940261116692	WITHOUT_CLASSIFICATION	5.973888330833882E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999792018946049	WITHOUT_CLASSIFICATION	2.0798105395152763E-5	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999792018946049	WITHOUT_CLASSIFICATION	2.0798105395152763E-5	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999981501091004	WITHOUT_CLASSIFICATION	1.849890899612277E-6	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999910328734734	WITHOUT_CLASSIFICATION	8.967126526622513E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999994284467919	WITHOUT_CLASSIFICATION	5.715532080730632E-7	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999995601714599	WITHOUT_CLASSIFICATION	4.3982854015615644E-7	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999829888366412	WITHOUT_CLASSIFICATION	1.7011163358805257E-5	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999973200047624	WITHOUT_CLASSIFICATION	2.679995237622927E-6	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999800640491477	WITHOUT_CLASSIFICATION	1.993595085222503E-5	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999969014291324	WITHOUT_CLASSIFICATION	3.09857086753057E-6	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999925932013534	WITHOUT_CLASSIFICATION	7.406798646597574E-6	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9999797434882923	WITHOUT_CLASSIFICATION	2.0256511707650713E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999934006502431	WITHOUT_CLASSIFICATION	6.599349756900229E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999968037893949	WITHOUT_CLASSIFICATION	3.1962106051358415E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999941713708163	WITHOUT_CLASSIFICATION	5.8286291836966745E-6	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999989414734657	WITHOUT_CLASSIFICATION	1.058526534313311E-6	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999815506800119	WITHOUT_CLASSIFICATION	1.8449319988122387E-5	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999980357738162	WITHOUT_CLASSIFICATION	1.9642261838011508E-5	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9997995178594857	WITHOUT_CLASSIFICATION	2.004821405141906E-4	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999714989234992	WITHOUT_CLASSIFICATION	2.850107650074556E-5	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999771133170304	WITHOUT_CLASSIFICATION	2.2886682969570832E-5	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.999990797239499	WITHOUT_CLASSIFICATION	9.202760500954179E-6	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9999923556735804	WITHOUT_CLASSIFICATION	7.644326419606702E-6	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999663405730115	WITHOUT_CLASSIFICATION	3.36594269886376E-5	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999764376002804	WITHOUT_CLASSIFICATION	2.356239971955797E-5	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999848691831329	WITHOUT_CLASSIFICATION	1.5130816867104733E-5	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999970859139821	WITHOUT_CLASSIFICATION	2.9140860180650353E-6	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999942770641591	WITHOUT_CLASSIFICATION	5.722935840951343E-6	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999989386390062	WITHOUT_CLASSIFICATION	1.0613609938445725E-6	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999944148345773	WITHOUT_CLASSIFICATION	5.585165422684432E-6	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999933683141029	WITHOUT_CLASSIFICATION	6.63168589718931E-6	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999935120501278	WITHOUT_CLASSIFICATION	6.4879498722237215E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999618804648728	WITHOUT_CLASSIFICATION	3.8119535127223606E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999945460376187	WITHOUT_CLASSIFICATION	5.453962381295795E-6	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999942452739122	WITHOUT_CLASSIFICATION	5.754726087744535E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.999990404320447	WITHOUT_CLASSIFICATION	9.595679553056071E-6	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9998092072035973	WITHOUT_CLASSIFICATION	1.9079279640275953E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9998092072035973	WITHOUT_CLASSIFICATION	1.9079279640275953E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9999914204726755	WITHOUT_CLASSIFICATION	8.579527324463928E-6	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999649415508081	WITHOUT_CLASSIFICATION	3.50584491919783E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9998966933086628	WITHOUT_CLASSIFICATION	1.0330669133719008E-4	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999830282703909	WITHOUT_CLASSIFICATION	1.69717296091085E-5	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9998412223267129	WITHOUT_CLASSIFICATION	1.587776732870166E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999678574738623	WITHOUT_CLASSIFICATION	3.2142526137694994E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999678574738623	WITHOUT_CLASSIFICATION	3.2142526137694994E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999678574738623	WITHOUT_CLASSIFICATION	3.2142526137694994E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999690139220561	WITHOUT_CLASSIFICATION	3.0986077943948216E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999755407221771	WITHOUT_CLASSIFICATION	2.4459277822844195E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999755407221771	WITHOUT_CLASSIFICATION	2.4459277822844195E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999244583340455	WITHOUT_CLASSIFICATION	7.554166595443393E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9999306888458201	WITHOUT_CLASSIFICATION	6.931115417976265E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999687630212063	WITHOUT_CLASSIFICATION	3.123697879359254E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999687630212063	WITHOUT_CLASSIFICATION	3.123697879359254E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999687630212063	WITHOUT_CLASSIFICATION	3.123697879359254E-5	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.999977474822492	WITHOUT_CLASSIFICATION	2.2525177507994525E-5	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.999980908777081	WITHOUT_CLASSIFICATION	1.9091222919013934E-5	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999023110273637	WITHOUT_CLASSIFICATION	9.768897263634099E-5	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.999993310735476	WITHOUT_CLASSIFICATION	6.68926452401345E-6	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999814904040008	WITHOUT_CLASSIFICATION	1.850959599925708E-5	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9999961308858071	WITHOUT_CLASSIFICATION	3.869114192900638E-6	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999184329796779	WITHOUT_CLASSIFICATION	8.156702032216031E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999797983548294	WITHOUT_CLASSIFICATION	2.0201645170593733E-5	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.999972034820903	WITHOUT_CLASSIFICATION	2.796517909691347E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9997363432665548	WITHOUT_CLASSIFICATION	2.636567334451892E-4	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9999973552576046	WITHOUT_CLASSIFICATION	2.6447423954202507E-6	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999980357738162	WITHOUT_CLASSIFICATION	1.9642261838011508E-5	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999714989234992	WITHOUT_CLASSIFICATION	2.850107650074556E-5	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999982954909354	WITHOUT_CLASSIFICATION	1.7045090645336227E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.999987146711472	WITHOUT_CLASSIFICATION	1.2853288527971542E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999957844992217	WITHOUT_CLASSIFICATION	4.215500778290945E-6	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999503849138639	WITHOUT_CLASSIFICATION	4.9615086136201773E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999912433596365	WITHOUT_CLASSIFICATION	8.756640363472325E-6	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999912433596365	WITHOUT_CLASSIFICATION	8.756640363472325E-6	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999912433596365	WITHOUT_CLASSIFICATION	8.756640363472325E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999784072819735	WITHOUT_CLASSIFICATION	2.159271802657368E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999784072819735	WITHOUT_CLASSIFICATION	2.159271802657368E-5	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999963512940917	WITHOUT_CLASSIFICATION	3.648705908276128E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.999980573622571	WITHOUT_CLASSIFICATION	1.9426377429040444E-5	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9998417830793036	WITHOUT_CLASSIFICATION	1.5821692069645387E-4	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999852134101003	WITHOUT_CLASSIFICATION	1.4786589899629233E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9997444129643669	WITHOUT_CLASSIFICATION	2.555870356331438E-4	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9997444129643669	WITHOUT_CLASSIFICATION	2.555870356331438E-4	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999949593093168	WITHOUT_CLASSIFICATION	5.040690683207227E-6	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999880255915186	WITHOUT_CLASSIFICATION	1.1974408481483072E-5	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999921770631189	WITHOUT_CLASSIFICATION	7.822936881024048E-6	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999724539304671	WITHOUT_CLASSIFICATION	2.7546069533000106E-5	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999931183367347	WITHOUT_CLASSIFICATION	6.881663265289287E-6	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999878784402708	WITHOUT_CLASSIFICATION	1.2121559729126219E-5	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999689733154732	WITHOUT_CLASSIFICATION	3.102668452685407E-5	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999995945384793	WITHOUT_CLASSIFICATION	4.0546152063706405E-7	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999992496468155	WITHOUT_CLASSIFICATION	7.503531845783702E-7	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.999991192711562	WITHOUT_CLASSIFICATION	8.807288438009065E-6	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999703689629383	WITHOUT_CLASSIFICATION	2.9631037061609313E-5	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999791705007594	WITHOUT_CLASSIFICATION	2.0829499240647412E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999957844992217	WITHOUT_CLASSIFICATION	4.215500778290945E-6	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999998247855869	WITHOUT_CLASSIFICATION	1.7521441305114916E-7	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999651955815999	WITHOUT_CLASSIFICATION	3.480441840011186E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999957844992217	WITHOUT_CLASSIFICATION	4.215500778290945E-6	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999852134101003	WITHOUT_CLASSIFICATION	1.4786589899629233E-5	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9999992843103769	WITHOUT_CLASSIFICATION	7.156896231789634E-7	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999993987431613	WITHOUT_CLASSIFICATION	6.012568385929345E-7	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999919505194395	WITHOUT_CLASSIFICATION	8.049480560577865E-6	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999919505194395	WITHOUT_CLASSIFICATION	8.049480560577865E-6	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9999942240635725	WITHOUT_CLASSIFICATION	5.7759364275011624E-6	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999923068534402	WITHOUT_CLASSIFICATION	7.693146559841912E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999904662084308	WITHOUT_CLASSIFICATION	9.533791569213476E-6	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999925841840666	WITHOUT_CLASSIFICATION	7.4158159335517855E-6	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999962313219811	WITHOUT_CLASSIFICATION	3.768678018962931E-6	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999740504445161	WITHOUT_CLASSIFICATION	2.594955548389598E-5	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999996791817332	WITHOUT_CLASSIFICATION	3.208182668850585E-7	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.999983161184918	WITHOUT_CLASSIFICATION	1.6838815081977173E-5	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999876931602837	WITHOUT_CLASSIFICATION	1.230683971637509E-5	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999948354347514	WITHOUT_CLASSIFICATION	5.1645652484765295E-6	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9999331782607755	WITHOUT_CLASSIFICATION	6.68217392244894E-5	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999347938267907	WITHOUT_CLASSIFICATION	6.520617320924352E-5	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999992090580466	WITHOUT_CLASSIFICATION	7.909419533524403E-7	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999996537009709	WITHOUT_CLASSIFICATION	3.4629902919570066E-7	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999988905734676	WITHOUT_CLASSIFICATION	1.1094265323723902E-6	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999997966577899	WITHOUT_CLASSIFICATION	2.033422102092216E-7	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999942925470093	WITHOUT_CLASSIFICATION	5.707452990656937E-6	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999981310697783	WITHOUT_CLASSIFICATION	1.8689302216088982E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999989985463493	WITHOUT_CLASSIFICATION	1.001453650702549E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999989985463493	WITHOUT_CLASSIFICATION	1.001453650702549E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999957844992217	WITHOUT_CLASSIFICATION	4.215500778290945E-6	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999974342834157	WITHOUT_CLASSIFICATION	2.5657165844188094E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999703689629383	WITHOUT_CLASSIFICATION	2.9631037061609313E-5	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.999991992910408	WITHOUT_CLASSIFICATION	8.007089592086308E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999992197473365	WITHOUT_CLASSIFICATION	7.802526634437353E-7	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999903921045082	WITHOUT_CLASSIFICATION	9.60789549172016E-6	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999950055403398	WITHOUT_CLASSIFICATION	4.99445966022683E-6	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9999993857609362	WITHOUT_CLASSIFICATION	6.142390637885608E-7	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999703689629383	WITHOUT_CLASSIFICATION	2.9631037061609313E-5	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999902353090133	WITHOUT_CLASSIFICATION	9.76469098656062E-6	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9999953409704738	WITHOUT_CLASSIFICATION	4.65902952622098E-6	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999861645854796	WITHOUT_CLASSIFICATION	1.3835414520426007E-5	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999936000079909	WITHOUT_CLASSIFICATION	6.399992009185297E-6	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999991279305773	WITHOUT_CLASSIFICATION	8.720694227697325E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999980369464956	WITHOUT_CLASSIFICATION	1.963053504395224E-6	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999912101857868	WITHOUT_CLASSIFICATION	8.789814213237744E-6	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999785024558364	WITHOUT_CLASSIFICATION	2.1497544163493763E-5	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999875610196944	WITHOUT_CLASSIFICATION	1.2438980305531856E-5	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999992463658812	WITHOUT_CLASSIFICATION	7.536341188504988E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999892935369267	WITHOUT_CLASSIFICATION	1.0706463073264218E-5	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999892935369267	WITHOUT_CLASSIFICATION	1.0706463073264218E-5	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999840970321164	WITHOUT_CLASSIFICATION	1.5902967883579356E-5	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999983348977376	WITHOUT_CLASSIFICATION	1.6651022625136945E-6	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999994841214409	WITHOUT_CLASSIFICATION	5.158785591121689E-7	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999814584908274	WITHOUT_CLASSIFICATION	1.8541509172587164E-5	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999395479530341	WITHOUT_CLASSIFICATION	6.045204696595288E-5	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999942245246894	WITHOUT_CLASSIFICATION	5.775475310552868E-6	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999866293163929	WITHOUT_CLASSIFICATION	1.3370683607133475E-5	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999958419225874	WITHOUT_CLASSIFICATION	4.158077412694891E-6	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999944958681184	WITHOUT_CLASSIFICATION	5.504131881662839E-6	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999950268434561	WITHOUT_CLASSIFICATION	4.973156543937741E-6	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999999547245348	WITHOUT_CLASSIFICATION	4.527546503458445E-8	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999772453684392	WITHOUT_CLASSIFICATION	2.275463156072276E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999772453684392	WITHOUT_CLASSIFICATION	2.275463156072276E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999772453684392	WITHOUT_CLASSIFICATION	2.275463156072276E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999772453684392	WITHOUT_CLASSIFICATION	2.275463156072276E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999772453684392	WITHOUT_CLASSIFICATION	2.275463156072276E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999772453684392	WITHOUT_CLASSIFICATION	2.275463156072276E-5	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9999856171083792	WITHOUT_CLASSIFICATION	1.438289162075798E-5	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999642939766937	WITHOUT_CLASSIFICATION	3.5706023306212314E-5	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999987310043115	WITHOUT_CLASSIFICATION	1.2689956885165515E-6	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999975952059509	WITHOUT_CLASSIFICATION	2.404794049128415E-6	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.999995408868952	WITHOUT_CLASSIFICATION	4.591131047935055E-6	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999710519839344	WITHOUT_CLASSIFICATION	2.894801606552278E-5	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999539750177124	WITHOUT_CLASSIFICATION	4.602498228755484E-5	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999518057349545	WITHOUT_CLASSIFICATION	4.819426504550137E-5	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9999953622214438	WITHOUT_CLASSIFICATION	4.637778556194534E-6	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999786640206171	WITHOUT_CLASSIFICATION	2.1335979382918262E-5	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999775270159352	WITHOUT_CLASSIFICATION	2.2472984064696982E-5	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999961848023892	WITHOUT_CLASSIFICATION	3.815197610866309E-6	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9999841053109035	WITHOUT_CLASSIFICATION	1.5894689096451444E-5	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999998698461982	WITHOUT_CLASSIFICATION	1.3015380190255533E-7	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999989935072514	WITHOUT_CLASSIFICATION	1.0064927485818506E-6	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9998140688622514	WITHOUT_CLASSIFICATION	1.85931137748553E-4	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9995296105767097	WITHOUT_CLASSIFICATION	4.7038942329029104E-4	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9996639145055236	WITHOUT_CLASSIFICATION	3.36085494476445E-4	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9996639145055236	WITHOUT_CLASSIFICATION	3.36085494476445E-4	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999669436741133	WITHOUT_CLASSIFICATION	3.305632588675128E-5	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9997584572127364	WITHOUT_CLASSIFICATION	2.4154278726375896E-4	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9996543200800926	WITHOUT_CLASSIFICATION	3.45679919907489E-4	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9998179943334184	WITHOUT_CLASSIFICATION	1.82005666581576E-4	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9996452374804305	WITHOUT_CLASSIFICATION	3.5476251956935776E-4	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.999801389052109	WITHOUT_CLASSIFICATION	1.9861094789102695E-4	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999811298676468	WITHOUT_CLASSIFICATION	1.8870132353193032E-5	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999820145174076	WITHOUT_CLASSIFICATION	1.798548259227806E-5	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999957789658762	WITHOUT_CLASSIFICATION	4.221034123845972E-6	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999762730192687	WITHOUT_CLASSIFICATION	2.3726980731296022E-5	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999980414051812	WITHOUT_CLASSIFICATION	1.958594818736898E-6	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999986681313433	WITHOUT_CLASSIFICATION	1.3318686566480894E-6	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.999995301521546	WITHOUT_CLASSIFICATION	4.698478453983992E-6	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999995303054606	WITHOUT_CLASSIFICATION	4.696945393745974E-7	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999970444511728	WITHOUT_CLASSIFICATION	2.955548827267449E-6	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999898279067482	WITHOUT_CLASSIFICATION	1.0172093251771939E-5	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999589345266457	WITHOUT_CLASSIFICATION	4.1065473354338074E-5	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999661919671916	WITHOUT_CLASSIFICATION	3.380803280832561E-5	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999925054407275	WITHOUT_CLASSIFICATION	7.494559272560987E-6	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999884508929674	WITHOUT_CLASSIFICATION	1.1549107032654416E-5	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999390310992288	WITHOUT_CLASSIFICATION	6.096890077117848E-5	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999670177237442	WITHOUT_CLASSIFICATION	3.298227625583741E-5	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999583393464422	WITHOUT_CLASSIFICATION	4.166065355779481E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.999971171034644	WITHOUT_CLASSIFICATION	2.882896535610022E-5	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999665873988685	WITHOUT_CLASSIFICATION	3.341260113151924E-5	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999656273700511	WITHOUT_CLASSIFICATION	3.43726299488503E-5	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999844958370399	WITHOUT_CLASSIFICATION	1.5504162960110144E-5	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999979012148393	WITHOUT_CLASSIFICATION	2.09878516072061E-6	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999988978432944	WITHOUT_CLASSIFICATION	1.1021567055683589E-6	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999890871380857	WITHOUT_CLASSIFICATION	1.0912861914387588E-5	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9999240920752839	WITHOUT_CLASSIFICATION	7.590792471614729E-5	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999818355545488	WITHOUT_CLASSIFICATION	1.8164445451241083E-5	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999494991259567	WITHOUT_CLASSIFICATION	5.050087404331158E-5	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999962835006981	WITHOUT_CLASSIFICATION	3.7164993019801584E-6	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999973359212699	WITHOUT_CLASSIFICATION	2.6640787299799424E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999507029527073	WITHOUT_CLASSIFICATION	4.92970472927498E-5	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999984836061994	WITHOUT_CLASSIFICATION	1.516393800566824E-6	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.999967477515218	WITHOUT_CLASSIFICATION	3.25224847821341E-5	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999463433182574	WITHOUT_CLASSIFICATION	5.365668174271962E-5	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999463433182574	WITHOUT_CLASSIFICATION	5.365668174271962E-5	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999998345491435	WITHOUT_CLASSIFICATION	1.6545085645231795E-7	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9998511794570696	WITHOUT_CLASSIFICATION	1.488205429304893E-4	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999701828469206	WITHOUT_CLASSIFICATION	2.9817153079380832E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.999974649020365	WITHOUT_CLASSIFICATION	2.53509796350375E-5	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999987328336448	WITHOUT_CLASSIFICATION	1.2671663551702008E-6	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999757422639517	WITHOUT_CLASSIFICATION	2.425773604828381E-5	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999960395319983	WITHOUT_CLASSIFICATION	3.9604680016519315E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9999858917093549	WITHOUT_CLASSIFICATION	1.4108290645126116E-5	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999971867441363	WITHOUT_CLASSIFICATION	2.8132558636168106E-6	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999960309830973	WITHOUT_CLASSIFICATION	3.969016902654045E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999770923200308	WITHOUT_CLASSIFICATION	2.2907679969109914E-5	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999646402698875	WITHOUT_CLASSIFICATION	3.5359730112506794E-5	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999820849589518	WITHOUT_CLASSIFICATION	1.791504104816439E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999845563739909	WITHOUT_CLASSIFICATION	1.5443626009106522E-5	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9988345810833661	WITHOUT_CLASSIFICATION	0.001165418916633912	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999946657608076	WITHOUT_CLASSIFICATION	5.334239192361701E-6	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999995421959385	WITHOUT_CLASSIFICATION	4.5780406160549494E-7	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999978585087173	WITHOUT_CLASSIFICATION	2.1414912826631197E-6	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999773744531928	WITHOUT_CLASSIFICATION	2.2625546807213476E-5	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999890270841024	WITHOUT_CLASSIFICATION	1.0972915897499833E-5	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9998122024510423	WITHOUT_CLASSIFICATION	1.8779754895781732E-4	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999975069927215	WITHOUT_CLASSIFICATION	2.4930072785265814E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999649745134186	WITHOUT_CLASSIFICATION	3.5025486581459286E-5	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9999858917093549	WITHOUT_CLASSIFICATION	1.4108290645126116E-5	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999920269384885	WITHOUT_CLASSIFICATION	7.97306151142096E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999920269384885	WITHOUT_CLASSIFICATION	7.97306151142096E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999649745134186	WITHOUT_CLASSIFICATION	3.5025486581459286E-5	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9998854068412107	WITHOUT_CLASSIFICATION	1.1459315878933199E-4	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999996516631763	WITHOUT_CLASSIFICATION	3.48336823694492E-7	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999984650190165	WITHOUT_CLASSIFICATION	1.5349809836051706E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.999998830888628	WITHOUT_CLASSIFICATION	1.169111372081305E-6	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999929471483621	WITHOUT_CLASSIFICATION	7.0528516380318425E-6	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9999886329082687	WITHOUT_CLASSIFICATION	1.136709173137347E-5	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999944790450993	WITHOUT_CLASSIFICATION	5.5209549007562035E-6	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999979776055938	WITHOUT_CLASSIFICATION	2.0223944062062993E-6	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.999993596628066	WITHOUT_CLASSIFICATION	6.403371933938459E-6	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931483752361	WITHOUT_CLASSIFICATION	6.851624763917194E-6	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9997693004861606	WITHOUT_CLASSIFICATION	2.3069951383942235E-4	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999992151820392	WITHOUT_CLASSIFICATION	7.848179609492456E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.99998718449618	WITHOUT_CLASSIFICATION	1.2815503820187384E-5	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.99998718449618	WITHOUT_CLASSIFICATION	1.2815503820187384E-5	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999925629004841	WITHOUT_CLASSIFICATION	7.437099515793313E-6	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999853965572069	WITHOUT_CLASSIFICATION	1.4603442793054719E-5	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999956442870153	WITHOUT_CLASSIFICATION	4.3557129847350655E-6	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999974007795287	WITHOUT_CLASSIFICATION	2.5992204712497403E-6	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999974007795287	WITHOUT_CLASSIFICATION	2.5992204712497403E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999748248125871	WITHOUT_CLASSIFICATION	2.5175187412809537E-5	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999748248125871	WITHOUT_CLASSIFICATION	2.5175187412809537E-5	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999960652381249	WITHOUT_CLASSIFICATION	3.934761875120783E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999939343916925	WITHOUT_CLASSIFICATION	6.065608307423977E-6	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999886308913969	WITHOUT_CLASSIFICATION	1.1369108602975213E-5	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999883194104647	WITHOUT_CLASSIFICATION	1.1680589535213744E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999877929425964	WITHOUT_CLASSIFICATION	1.2207057403547319E-5	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999946611432998	WITHOUT_CLASSIFICATION	5.338856700233317E-6	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999987297482517	WITHOUT_CLASSIFICATION	1.270251748394085E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999960652381249	WITHOUT_CLASSIFICATION	3.934761875120783E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999994997065111	WITHOUT_CLASSIFICATION	5.002934888792525E-7	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999939343916925	WITHOUT_CLASSIFICATION	6.065608307423977E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.999996779917734	WITHOUT_CLASSIFICATION	3.2200822661880935E-6	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999886308913969	WITHOUT_CLASSIFICATION	1.1369108602975213E-5	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999883194104647	WITHOUT_CLASSIFICATION	1.1680589535213744E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999877929425964	WITHOUT_CLASSIFICATION	1.2207057403547319E-5	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999632593131133	WITHOUT_CLASSIFICATION	3.6740686886800975E-5	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.999994495310196	WITHOUT_CLASSIFICATION	5.504689803950647E-6	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999881103450117	WITHOUT_CLASSIFICATION	1.1889654988214913E-5	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999920034346806	WITHOUT_CLASSIFICATION	7.996565319465145E-6	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999901356858681	WITHOUT_CLASSIFICATION	9.864314131880253E-6	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999896009048193	WITHOUT_CLASSIFICATION	1.0399095180840633E-5	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999979069600285	WITHOUT_CLASSIFICATION	2.093039971426823E-6	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999944490875008	WITHOUT_CLASSIFICATION	5.550912499091586E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999825455828317	WITHOUT_CLASSIFICATION	1.745441716827287E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.999979303193782	WITHOUT_CLASSIFICATION	2.069680621801779E-5	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999865629030965	WITHOUT_CLASSIFICATION	1.3437096903553619E-5	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999893107781176	WITHOUT_CLASSIFICATION	1.0689221882447749E-5	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.999990816140974	WITHOUT_CLASSIFICATION	9.183859026032002E-6	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999566143900054	WITHOUT_CLASSIFICATION	4.338560999472359E-5	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999848956278975	WITHOUT_CLASSIFICATION	1.5104372102463662E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999907173975895	WITHOUT_CLASSIFICATION	9.28260241047961E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999232249363197	WITHOUT_CLASSIFICATION	7.677506368022197E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.999975154561033	WITHOUT_CLASSIFICATION	2.4845438966988044E-5	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999831065120607	WITHOUT_CLASSIFICATION	1.6893487939310595E-5	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999834142742362	WITHOUT_CLASSIFICATION	1.6585725763890644E-5	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9999548113182827	WITHOUT_CLASSIFICATION	4.5188681717373546E-5	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999925041319705	WITHOUT_CLASSIFICATION	7.495868029398592E-6	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.999990057361678	WITHOUT_CLASSIFICATION	9.942638322018004E-6	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.999996641161686	WITHOUT_CLASSIFICATION	3.358838314071589E-6	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.999987240122381	WITHOUT_CLASSIFICATION	1.2759877618964927E-5	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999851381381176	WITHOUT_CLASSIFICATION	1.4861861882316561E-5	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999936011889249	WITHOUT_CLASSIFICATION	6.398811075140985E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999977844207335	WITHOUT_CLASSIFICATION	2.215579266520565E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9998259239827777	WITHOUT_CLASSIFICATION	1.740760172222943E-4	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.999943548537671	WITHOUT_CLASSIFICATION	5.645146232903981E-5	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999929471483621	WITHOUT_CLASSIFICATION	7.0528516380318425E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.999942904749035	WITHOUT_CLASSIFICATION	5.709525096495562E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999894174327729	WITHOUT_CLASSIFICATION	1.0582567227043137E-5	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999890594587361	WITHOUT_CLASSIFICATION	1.0940541263996966E-5	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999922322159842	WITHOUT_CLASSIFICATION	7.76778401579977E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.999983686211138	WITHOUT_CLASSIFICATION	1.631378886199955E-5	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9999987477390736	WITHOUT_CLASSIFICATION	1.252260926483906E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999997752122479	WITHOUT_CLASSIFICATION	2.2478775220245264E-7	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999985389478924	WITHOUT_CLASSIFICATION	1.4610521076797557E-6	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999957250357085	WITHOUT_CLASSIFICATION	4.274964291416173E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999985767397285	WITHOUT_CLASSIFICATION	1.4232602714809269E-6	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999958301840994	WITHOUT_CLASSIFICATION	4.169815900521701E-6	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999997073226966	WITHOUT_CLASSIFICATION	2.9267730340179183E-7	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999990766680988	WITHOUT_CLASSIFICATION	9.233319011691543E-7	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999990811321365	WITHOUT_CLASSIFICATION	9.18867863529533E-7	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9999960683267435	WITHOUT_CLASSIFICATION	3.931673256572483E-6	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999974564627553	WITHOUT_CLASSIFICATION	2.5435372446479314E-6	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999994098259052	WITHOUT_CLASSIFICATION	5.901740949202204E-7	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999893107781176	WITHOUT_CLASSIFICATION	1.0689221882447749E-5	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.999990816140974	WITHOUT_CLASSIFICATION	9.183859026032002E-6	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999566143900054	WITHOUT_CLASSIFICATION	4.338560999472359E-5	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999848956278975	WITHOUT_CLASSIFICATION	1.5104372102463662E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999907173975895	WITHOUT_CLASSIFICATION	9.28260241047961E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999232249363197	WITHOUT_CLASSIFICATION	7.677506368022197E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999423159046553	WITHOUT_CLASSIFICATION	5.7684095344674164E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.999975154561033	WITHOUT_CLASSIFICATION	2.4845438966988044E-5	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999977844207335	WITHOUT_CLASSIFICATION	2.215579266520565E-6	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9998259239827777	WITHOUT_CLASSIFICATION	1.740760172222943E-4	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.999943548537671	WITHOUT_CLASSIFICATION	5.645146232903981E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999922883222518	WITHOUT_CLASSIFICATION	7.7116777481583E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999922883222518	WITHOUT_CLASSIFICATION	7.7116777481583E-6	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.999942904749035	WITHOUT_CLASSIFICATION	5.709525096495562E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999894174327729	WITHOUT_CLASSIFICATION	1.0582567227043137E-5	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999890594587361	WITHOUT_CLASSIFICATION	1.0940541263996966E-5	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.999990418137657	WITHOUT_CLASSIFICATION	9.581862343052023E-6	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.999970016803711	WITHOUT_CLASSIFICATION	2.9983196289066565E-5	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999984866536381	WITHOUT_CLASSIFICATION	1.513346361839668E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999979486904693	WITHOUT_CLASSIFICATION	2.0513095306900818E-6	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999833563065899	WITHOUT_CLASSIFICATION	1.6643693410131587E-5	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999287747964409	WITHOUT_CLASSIFICATION	7.122520355903116E-5	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.999975904154363	WITHOUT_CLASSIFICATION	2.409584563707462E-5	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999925144397753	WITHOUT_CLASSIFICATION	7.485560224640053E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9999795238518089	WITHOUT_CLASSIFICATION	2.0476148191185958E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999958771915962	WITHOUT_CLASSIFICATION	4.122808403782026E-6	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999608307022092	WITHOUT_CLASSIFICATION	3.9169297790887954E-5	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999913460273899	WITHOUT_CLASSIFICATION	8.653972609965519E-6	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.999990899459417	WITHOUT_CLASSIFICATION	9.100540582909724E-6	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9999922697882426	WITHOUT_CLASSIFICATION	7.730211757360535E-6	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999961262391649	WITHOUT_CLASSIFICATION	3.873760835090064E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999869065185868	WITHOUT_CLASSIFICATION	1.3093481413229688E-5	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.999984127216962	WITHOUT_CLASSIFICATION	1.587278303795798E-5	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999948537021012	WITHOUT_CLASSIFICATION	5.146297898855175E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999967285971544	WITHOUT_CLASSIFICATION	3.271402845654718E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999973641056371	WITHOUT_CLASSIFICATION	2.6358943629199647E-6	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.999978389751079	WITHOUT_CLASSIFICATION	2.1610248920983833E-5	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999971505073144	WITHOUT_CLASSIFICATION	2.8494926856612604E-6	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.999997003278284	WITHOUT_CLASSIFICATION	2.9967217159191766E-6	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999996679862099	WITHOUT_CLASSIFICATION	3.320137901416851E-7	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999999017131173	WITHOUT_CLASSIFICATION	9.828688271822107E-8	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9999986333474131	WITHOUT_CLASSIFICATION	1.3666525868408398E-6	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999994662487357	WITHOUT_CLASSIFICATION	5.337512643971991E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.99989859450325	WITHOUT_CLASSIFICATION	1.0140549674999667E-4	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9999465042580802	WITHOUT_CLASSIFICATION	5.3495741919768475E-5	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999959598161755	WITHOUT_CLASSIFICATION	4.040183824569672E-6	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9999999637219928	WITHOUT_CLASSIFICATION	3.627800703259557E-8	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999933553615753	WITHOUT_CLASSIFICATION	6.644638424666587E-6	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999996486860673	WITHOUT_CLASSIFICATION	3.51313932729624E-7	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999986510834011	WITHOUT_CLASSIFICATION	1.3489165988493906E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.999996779917734	WITHOUT_CLASSIFICATION	3.2200822661880935E-6	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.999985867942913	WITHOUT_CLASSIFICATION	1.4132057086981682E-5	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999951336626601	WITHOUT_CLASSIFICATION	4.866337339805414E-6	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999526717194934	WITHOUT_CLASSIFICATION	4.732828050672095E-5	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9999983569887226	WITHOUT_CLASSIFICATION	1.6430112774014806E-6	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9999952429333911	WITHOUT_CLASSIFICATION	4.757066608860802E-6	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999645187465752	WITHOUT_CLASSIFICATION	3.5481253424750546E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999786343068973	WITHOUT_CLASSIFICATION	2.1365693102687998E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999786343068973	WITHOUT_CLASSIFICATION	2.1365693102687998E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999786343068973	WITHOUT_CLASSIFICATION	2.1365693102687998E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999786343068973	WITHOUT_CLASSIFICATION	2.1365693102687998E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999786343068973	WITHOUT_CLASSIFICATION	2.1365693102687998E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999786343068973	WITHOUT_CLASSIFICATION	2.1365693102687998E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999769610391156	WITHOUT_CLASSIFICATION	2.3038960884431554E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999713587399058	WITHOUT_CLASSIFICATION	2.8641260094150196E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999831466091383	WITHOUT_CLASSIFICATION	1.685339086172364E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999831466091383	WITHOUT_CLASSIFICATION	1.685339086172364E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999831466091383	WITHOUT_CLASSIFICATION	1.685339086172364E-5	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999971077355597	WITHOUT_CLASSIFICATION	2.892264440343553E-6	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999977741111034	WITHOUT_CLASSIFICATION	2.2258888966993114E-6	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999974968290182	WITHOUT_CLASSIFICATION	2.5031709818153934E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998097859241637	WITHOUT_CLASSIFICATION	1.90214075836262E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9998097859241637	WITHOUT_CLASSIFICATION	1.90214075836262E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999961672832499	WITHOUT_CLASSIFICATION	3.832716750107479E-6	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999994364899593	WITHOUT_CLASSIFICATION	5.635100407400606E-7	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9998688526356027	WITHOUT_CLASSIFICATION	1.311473643973875E-4	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.999997056316343	WITHOUT_CLASSIFICATION	2.943683657053465E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999846525139903	WITHOUT_CLASSIFICATION	1.534748600980514E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999980956642975	WITHOUT_CLASSIFICATION	1.9043357024851244E-6	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999980956642975	WITHOUT_CLASSIFICATION	1.9043357024851244E-6	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999980956642975	WITHOUT_CLASSIFICATION	1.9043357024851244E-6	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999984168849291	WITHOUT_CLASSIFICATION	1.5831150709738689E-6	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999942096438122	WITHOUT_CLASSIFICATION	5.79035618777528E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999896613531645	WITHOUT_CLASSIFICATION	1.0338646835401759E-5	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999993006681475	WITHOUT_CLASSIFICATION	6.99331852619339E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999700098347611	WITHOUT_CLASSIFICATION	2.9990165238885955E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999700098347611	WITHOUT_CLASSIFICATION	2.9990165238885955E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999700098347611	WITHOUT_CLASSIFICATION	2.9990165238885955E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999700098347611	WITHOUT_CLASSIFICATION	2.9990165238885955E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999700098347611	WITHOUT_CLASSIFICATION	2.9990165238885955E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999700098347611	WITHOUT_CLASSIFICATION	2.9990165238885955E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999700098347611	WITHOUT_CLASSIFICATION	2.9990165238885955E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999700098347611	WITHOUT_CLASSIFICATION	2.9990165238885955E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999700098347611	WITHOUT_CLASSIFICATION	2.9990165238885955E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999700098347611	WITHOUT_CLASSIFICATION	2.9990165238885955E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999700098347611	WITHOUT_CLASSIFICATION	2.9990165238885955E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999700098347611	WITHOUT_CLASSIFICATION	2.9990165238885955E-5	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9999930904736658	WITHOUT_CLASSIFICATION	6.9095263342184E-6	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999925286384455	WITHOUT_CLASSIFICATION	7.471361554522314E-6	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999925286384455	WITHOUT_CLASSIFICATION	7.471361554522314E-6	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999962890554838	WITHOUT_CLASSIFICATION	3.7109445161332023E-6	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999920500942846	WITHOUT_CLASSIFICATION	7.949905715448031E-6	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999974887233668	WITHOUT_CLASSIFICATION	2.5112766332799154E-6	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999896428747233	WITHOUT_CLASSIFICATION	1.0357125276763878E-5	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9998862366251337	WITHOUT_CLASSIFICATION	1.1376337486624716E-4	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999973650163944	WITHOUT_CLASSIFICATION	2.634983605692646E-6	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9999996524519837	WITHOUT_CLASSIFICATION	3.4754801627843266E-7	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.999971190729726	WITHOUT_CLASSIFICATION	2.880927027400983E-5	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999996589432079	WITHOUT_CLASSIFICATION	3.4105679209450455E-7	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999972158550765	WITHOUT_CLASSIFICATION	2.7841449235730557E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999801476052199	WITHOUT_CLASSIFICATION	1.9852394780090863E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999801476052199	WITHOUT_CLASSIFICATION	1.9852394780090863E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999801476052199	WITHOUT_CLASSIFICATION	1.9852394780090863E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999801476052199	WITHOUT_CLASSIFICATION	1.9852394780090863E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999801476052199	WITHOUT_CLASSIFICATION	1.9852394780090863E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999894194668877	WITHOUT_CLASSIFICATION	1.0580533112280512E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978383981105	WITHOUT_CLASSIFICATION	2.1616018894566996E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978383981105	WITHOUT_CLASSIFICATION	2.1616018894566996E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978383981105	WITHOUT_CLASSIFICATION	2.1616018894566996E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999978383981105	WITHOUT_CLASSIFICATION	2.1616018894566996E-6	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999954635865723	WITHOUT_CLASSIFICATION	4.536413427623498E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999508429479298	WITHOUT_CLASSIFICATION	4.915705207029195E-5	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9999861107332048	WITHOUT_CLASSIFICATION	1.3889266795230092E-5	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9998764594003304	WITHOUT_CLASSIFICATION	1.2354059966963236E-4	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999999275797411	WITHOUT_CLASSIFICATION	7.242025882821256E-8	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999935087794267	WITHOUT_CLASSIFICATION	6.491220573267895E-6	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999999251062733	WITHOUT_CLASSIFICATION	7.489372660182266E-8	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999976854417806	WITHOUT_CLASSIFICATION	2.314558219324223E-6	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999794323206205	WITHOUT_CLASSIFICATION	2.0567679379598197E-5	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999971063054576	WITHOUT_CLASSIFICATION	2.893694542420998E-6	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999719275594967	WITHOUT_CLASSIFICATION	2.8072440503280684E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999907499921655	WITHOUT_CLASSIFICATION	9.250007834486741E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999764087733144	WITHOUT_CLASSIFICATION	2.3591226685662464E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999700918061036	WITHOUT_CLASSIFICATION	2.990819389632205E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999700918061036	WITHOUT_CLASSIFICATION	2.990819389632205E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999700918061036	WITHOUT_CLASSIFICATION	2.990819389632205E-5	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999987846607835	WITHOUT_CLASSIFICATION	1.2153392164301735E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999987846607835	WITHOUT_CLASSIFICATION	1.2153392164301735E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999188419123756	WITHOUT_CLASSIFICATION	8.11580876244606E-5	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999920238573858	WITHOUT_CLASSIFICATION	7.97614261412652E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999973975495917	WITHOUT_CLASSIFICATION	2.602450408393003E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999953620526845	WITHOUT_CLASSIFICATION	4.637947315576089E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999953620526845	WITHOUT_CLASSIFICATION	4.637947315576089E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999953620526845	WITHOUT_CLASSIFICATION	4.637947315576089E-6	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999992446834531	WITHOUT_CLASSIFICATION	7.553165469797397E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999934006502431	WITHOUT_CLASSIFICATION	6.599349756900229E-6	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999985599480012	WITHOUT_CLASSIFICATION	1.4400519987685201E-6	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999797434223745	WITHOUT_CLASSIFICATION	2.0256577625513837E-5	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9999985029535995	WITHOUT_CLASSIFICATION	1.4970464005062263E-6	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9999512124065651	WITHOUT_CLASSIFICATION	4.878759343496204E-5	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999981728411529	WITHOUT_CLASSIFICATION	1.8271588471803487E-6	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999966507420291	WITHOUT_CLASSIFICATION	3.3492579708498545E-6	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9999939436277576	WITHOUT_CLASSIFICATION	6.056372242326027E-6	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999552770207537	WITHOUT_CLASSIFICATION	4.47229792463E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999552770207537	WITHOUT_CLASSIFICATION	4.47229792463E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.9999526513713755	WITHOUT_CLASSIFICATION	4.734862862456023E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9998585763245716	WITHOUT_CLASSIFICATION	1.414236754284141E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999988181558385	WITHOUT_CLASSIFICATION	1.181844161512158E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999988181558385	WITHOUT_CLASSIFICATION	1.181844161512158E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999988181558385	WITHOUT_CLASSIFICATION	1.181844161512158E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999988181558385	WITHOUT_CLASSIFICATION	1.181844161512158E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999988181558385	WITHOUT_CLASSIFICATION	1.181844161512158E-6	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999986598362639	WITHOUT_CLASSIFICATION	1.3401637361582362E-6	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9999281645755548	WITHOUT_CLASSIFICATION	7.183542444528849E-5	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999676471884004	WITHOUT_CLASSIFICATION	3.2352811599570716E-5	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999995781928265	WITHOUT_CLASSIFICATION	4.2180717353326066E-7	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.99998860190343	WITHOUT_CLASSIFICATION	1.1398096570066447E-5	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999935590717751	WITHOUT_CLASSIFICATION	6.440928224831713E-6	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999983708345043	WITHOUT_CLASSIFICATION	1.6291654957185434E-6	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999985789604547	WITHOUT_CLASSIFICATION	1.4210395452364878E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9998347156182168	WITHOUT_CLASSIFICATION	1.6528438178313492E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9998347156182168	WITHOUT_CLASSIFICATION	1.6528438178313492E-4	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999992308440012	WITHOUT_CLASSIFICATION	7.691559987652882E-7	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999895265706846	WITHOUT_CLASSIFICATION	1.0473429315357898E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9995048817826213	WITHOUT_CLASSIFICATION	4.951182173786468E-4	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9995048817826213	WITHOUT_CLASSIFICATION	4.951182173786468E-4	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999864383289996	WITHOUT_CLASSIFICATION	1.3561671000320905E-5	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999531417548941	WITHOUT_CLASSIFICATION	4.685824510577536E-5	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999950434883831	WITHOUT_CLASSIFICATION	4.956511617007361E-6	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999988472345248	WITHOUT_CLASSIFICATION	1.1527654751369335E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999639993831596	WITHOUT_CLASSIFICATION	3.6000616840446534E-5	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999986021770892	WITHOUT_CLASSIFICATION	1.3978229108240422E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.999998820588605	WITHOUT_CLASSIFICATION	1.1794113950475118E-6	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999996584239729	WITHOUT_CLASSIFICATION	3.4157602715523536E-7	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9999899869723724	WITHOUT_CLASSIFICATION	1.0013027627507758E-5	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999798591076977	WITHOUT_CLASSIFICATION	2.014089230231764E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999939569610432	WITHOUT_CLASSIFICATION	6.043038956766705E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999939569610432	WITHOUT_CLASSIFICATION	6.043038956766705E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999939569610432	WITHOUT_CLASSIFICATION	6.043038956766705E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999939569610432	WITHOUT_CLASSIFICATION	6.043038956766705E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999618804648728	WITHOUT_CLASSIFICATION	3.8119535127223606E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999618804648728	WITHOUT_CLASSIFICATION	3.8119535127223606E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999618804648728	WITHOUT_CLASSIFICATION	3.8119535127223606E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999618804648728	WITHOUT_CLASSIFICATION	3.8119535127223606E-5	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999653165550116	WITHOUT_CLASSIFICATION	3.4683444988387806E-5	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999944116237902	WITHOUT_CLASSIFICATION	5.588376209812824E-6	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999974515385383	WITHOUT_CLASSIFICATION	2.5484614618070967E-6	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999898623212204	WITHOUT_CLASSIFICATION	1.0137678779537772E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916621681588	WITHOUT_CLASSIFICATION	8.33783184114026E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916621681588	WITHOUT_CLASSIFICATION	8.33783184114026E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916621681588	WITHOUT_CLASSIFICATION	8.33783184114026E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999916621681588	WITHOUT_CLASSIFICATION	8.33783184114026E-6	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9998594670376884	WITHOUT_CLASSIFICATION	1.4053296231162084E-4	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999893596984549	WITHOUT_CLASSIFICATION	1.0640301545156281E-5	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999992248229638	WITHOUT_CLASSIFICATION	7.751770362353591E-7	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.999997196478046	WITHOUT_CLASSIFICATION	2.8035219541325663E-6	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999027876364	WITHOUT_CLASSIFICATION	9.721236366001227E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999694338773414	WITHOUT_CLASSIFICATION	3.056612265864064E-5	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999997605594799	WITHOUT_CLASSIFICATION	2.394405200543204E-7	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997716143770892	WITHOUT_CLASSIFICATION	2.2838562291096234E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9997716143770892	WITHOUT_CLASSIFICATION	2.2838562291096234E-4	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999933264073638	WITHOUT_CLASSIFICATION	6.673592636112551E-6	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999974608409729	WITHOUT_CLASSIFICATION	2.5391590270526087E-6	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9998805236940841	WITHOUT_CLASSIFICATION	1.1947630591591155E-4	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999968572463019	WITHOUT_CLASSIFICATION	3.1427536980717252E-6	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999991885173324	WITHOUT_CLASSIFICATION	8.114826675800953E-7	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999997309287044	WITHOUT_CLASSIFICATION	2.690712955195526E-7	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999926853549905	WITHOUT_CLASSIFICATION	7.314645009420654E-6	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999972622143295	WITHOUT_CLASSIFICATION	2.7377856704648718E-6	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999975180101235	WITHOUT_CLASSIFICATION	2.4819898764277773E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999642131516782	WITHOUT_CLASSIFICATION	3.5786848321881145E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999944071317824	WITHOUT_CLASSIFICATION	5.592868217511721E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999944071317824	WITHOUT_CLASSIFICATION	5.592868217511721E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999944071317824	WITHOUT_CLASSIFICATION	5.592868217511721E-6	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999976356814	WITHOUT_CLASSIFICATION	2.3643186000096736E-6	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999814016129502	WITHOUT_CLASSIFICATION	1.8598387049696462E-5	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999996264073978	WITHOUT_CLASSIFICATION	3.7359260220791394E-7	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999733287874152	WITHOUT_CLASSIFICATION	2.6671212584915958E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999733287874152	WITHOUT_CLASSIFICATION	2.6671212584915958E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.999992513231113	WITHOUT_CLASSIFICATION	7.486768886932289E-6	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999952421093703	WITHOUT_CLASSIFICATION	4.757890629706651E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9999941119989098	WITHOUT_CLASSIFICATION	5.888001090331825E-6	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999981098463274	WITHOUT_CLASSIFICATION	1.8901536726407516E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9998958393767768	WITHOUT_CLASSIFICATION	1.0416062322308237E-4	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999927226705573	WITHOUT_CLASSIFICATION	7.277329442709951E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999981309048691	WITHOUT_CLASSIFICATION	1.869095130869185E-6	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999839320414504	WITHOUT_CLASSIFICATION	1.6067958549600192E-5	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999951291559135	WITHOUT_CLASSIFICATION	4.870844086445843E-6	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999990398885547	WITHOUT_CLASSIFICATION	9.601114453119292E-7	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999915124203029	WITHOUT_CLASSIFICATION	8.487579697095763E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999317201426398	WITHOUT_CLASSIFICATION	6.827985736023272E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999317201426398	WITHOUT_CLASSIFICATION	6.827985736023272E-5	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999873427305073	WITHOUT_CLASSIFICATION	1.265726949274627E-5	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999992394026678	WITHOUT_CLASSIFICATION	7.605973322305078E-7	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999903230764055	WITHOUT_CLASSIFICATION	9.676923594598674E-6	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999683452445262	WITHOUT_CLASSIFICATION	3.165475547377601E-5	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999983802000559	WITHOUT_CLASSIFICATION	1.61979994408732E-6	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999347161853541	WITHOUT_CLASSIFICATION	6.52838146458768E-5	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999970389851476	WITHOUT_CLASSIFICATION	2.961014852440834E-6	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999964253071713	WITHOUT_CLASSIFICATION	3.5746928288621276E-6	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9999912911649884	WITHOUT_CLASSIFICATION	8.70883501158716E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999986069638972	WITHOUT_CLASSIFICATION	1.3930361027706593E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999944071317824	WITHOUT_CLASSIFICATION	5.592868217511721E-6	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999917702524704	WITHOUT_CLASSIFICATION	8.229747529580417E-6	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999985428183144	WITHOUT_CLASSIFICATION	1.4571816856354686E-6	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999906351218694	WITHOUT_CLASSIFICATION	9.3648781305455E-6	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999998933218123	WITHOUT_CLASSIFICATION	1.0667818772120035E-7	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999999633605479	WITHOUT_CLASSIFICATION	3.6639452189043116E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999994749422025	WITHOUT_CLASSIFICATION	5.250577974851351E-7	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.999996186907442	WITHOUT_CLASSIFICATION	3.813092558185875E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999897507968571	WITHOUT_CLASSIFICATION	1.0249203142832692E-5	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.999996315309667	WITHOUT_CLASSIFICATION	3.684690332893254E-6	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999980384199016	WITHOUT_CLASSIFICATION	1.961580098347198E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.999997627603303	WITHOUT_CLASSIFICATION	2.372396696864317E-6	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999524407304775	WITHOUT_CLASSIFICATION	4.7559269522512954E-5	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.999998466990342	WITHOUT_CLASSIFICATION	1.5330096580465E-6	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999956729558196	WITHOUT_CLASSIFICATION	4.327044180333881E-6	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999713031925596	WITHOUT_CLASSIFICATION	2.8696807440564284E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999838018278738	WITHOUT_CLASSIFICATION	1.6198172126095278E-5	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999977022500529	WITHOUT_CLASSIFICATION	2.29774994703223E-6	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999903641138569	WITHOUT_CLASSIFICATION	9.635886143125048E-6	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.999998463421606	WITHOUT_CLASSIFICATION	1.5365783939278624E-6	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999994685664909	WITHOUT_CLASSIFICATION	5.314335091099677E-7	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999998390501091	WITHOUT_CLASSIFICATION	1.6094989089961031E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999954399360702	WITHOUT_CLASSIFICATION	4.560063929833023E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999954399360702	WITHOUT_CLASSIFICATION	4.560063929833023E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999954399360702	WITHOUT_CLASSIFICATION	4.560063929833023E-6	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999998772206331	WITHOUT_CLASSIFICATION	1.2277936688951027E-7	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999539877316104	WITHOUT_CLASSIFICATION	4.601226838957536E-5	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999986904149752	WITHOUT_CLASSIFICATION	1.3095850247590608E-6	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999961889875114	WITHOUT_CLASSIFICATION	3.811012488682249E-6	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9999997766780737	WITHOUT_CLASSIFICATION	2.2332192624896963E-7	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9999969132673179	WITHOUT_CLASSIFICATION	3.0867326820384475E-6	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999931447417683	WITHOUT_CLASSIFICATION	6.855258231694017E-6	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999929879593656	WITHOUT_CLASSIFICATION	7.012040634335911E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999984763651615	WITHOUT_CLASSIFICATION	1.5236348385211862E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999984763651615	WITHOUT_CLASSIFICATION	1.5236348385211862E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999984763651615	WITHOUT_CLASSIFICATION	1.5236348385211862E-6	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999995019153931	WITHOUT_CLASSIFICATION	4.980846068766515E-7	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999776881207482	WITHOUT_CLASSIFICATION	2.231187925188573E-5	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.999945921246569	WITHOUT_CLASSIFICATION	5.407875343105861E-5	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999983753859667	WITHOUT_CLASSIFICATION	1.6246140332862665E-6	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999994790938226	WITHOUT_CLASSIFICATION	5.209061774543054E-7	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9999931608034343	WITHOUT_CLASSIFICATION	6.839196565690851E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999900956643222	WITHOUT_CLASSIFICATION	9.904335677923279E-6	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999719340302625	WITHOUT_CLASSIFICATION	2.8065969737442087E-5	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999985710429915	WITHOUT_CLASSIFICATION	1.428957008588766E-6	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999666076030584	WITHOUT_CLASSIFICATION	3.339239694164572E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999665084170699	WITHOUT_CLASSIFICATION	3.3491582930118416E-5	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.999984127216962	WITHOUT_CLASSIFICATION	1.587278303795798E-5	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.999984127216962	WITHOUT_CLASSIFICATION	1.587278303795798E-5	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999997959330861	WITHOUT_CLASSIFICATION	2.0406691398694595E-7	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9999987437101081	WITHOUT_CLASSIFICATION	1.2562898919922896E-6	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999998073763795	WITHOUT_CLASSIFICATION	1.926236205520608E-7	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999923981664344	WITHOUT_CLASSIFICATION	7.601833565570627E-6	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999955555647061	WITHOUT_CLASSIFICATION	4.444435293955916E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999944071317824	WITHOUT_CLASSIFICATION	5.592868217511721E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999944071317824	WITHOUT_CLASSIFICATION	5.592868217511721E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999894194668877	WITHOUT_CLASSIFICATION	1.0580533112280512E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999976179497607	WITHOUT_CLASSIFICATION	2.382050239251803E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999976179497607	WITHOUT_CLASSIFICATION	2.382050239251803E-6	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999865343571551	WITHOUT_CLASSIFICATION	1.3465642844895553E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999618764767819	WITHOUT_CLASSIFICATION	3.812352321819576E-5	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999755679769897	WITHOUT_CLASSIFICATION	2.443202301028939E-5	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999451510415409	WITHOUT_CLASSIFICATION	5.484895845896085E-5	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999999112033368	WITHOUT_CLASSIFICATION	8.879666319802241E-8	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999975634600838	WITHOUT_CLASSIFICATION	2.4365399161210624E-6	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999836517118598	WITHOUT_CLASSIFICATION	1.6348288140253448E-5	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9994633499421817	WITHOUT_CLASSIFICATION	5.366500578182318E-4	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.999996936122989	WITHOUT_CLASSIFICATION	3.0638770110698816E-6	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999976694689672	WITHOUT_CLASSIFICATION	2.330531032824434E-6	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.999985796205412	WITHOUT_CLASSIFICATION	1.4203794588006103E-5	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999998478480293	WITHOUT_CLASSIFICATION	1.5215197057892025E-7	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9999997607758093	WITHOUT_CLASSIFICATION	2.3922419067148235E-7	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999965204044255	WITHOUT_CLASSIFICATION	3.479595574365474E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999879002511657	WITHOUT_CLASSIFICATION	1.2099748834253422E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999879002511657	WITHOUT_CLASSIFICATION	1.2099748834253422E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999879002511657	WITHOUT_CLASSIFICATION	1.2099748834253422E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999879002511657	WITHOUT_CLASSIFICATION	1.2099748834253422E-5	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.999999749598843	WITHOUT_CLASSIFICATION	2.5040115696009255E-7	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999998163280809	WITHOUT_CLASSIFICATION	1.8367191905008697E-7	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9999733798468227	WITHOUT_CLASSIFICATION	2.662015317724313E-5	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.999985501365805	WITHOUT_CLASSIFICATION	1.4498634195084622E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999998811645886	WITHOUT_CLASSIFICATION	1.1883541137436258E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999944071317824	WITHOUT_CLASSIFICATION	5.592868217511721E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999944071317824	WITHOUT_CLASSIFICATION	5.592868217511721E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999944071317824	WITHOUT_CLASSIFICATION	5.592868217511721E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999944071317824	WITHOUT_CLASSIFICATION	5.592868217511721E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999975261459225	WITHOUT_CLASSIFICATION	2.4738540774674706E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999618764767819	WITHOUT_CLASSIFICATION	3.812352321819576E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999808234325325	WITHOUT_CLASSIFICATION	1.9176567467499542E-5	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999808234325325	WITHOUT_CLASSIFICATION	1.9176567467499542E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9998887047691241	WITHOUT_CLASSIFICATION	1.1129523087583993E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999477811704702	WITHOUT_CLASSIFICATION	5.22188295296594E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999477811704702	WITHOUT_CLASSIFICATION	5.22188295296594E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999477811704702	WITHOUT_CLASSIFICATION	5.22188295296594E-5	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999795717125463	WITHOUT_CLASSIFICATION	2.042828745380071E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9997318473012088	WITHOUT_CLASSIFICATION	2.681526987912014E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99994817693753	WITHOUT_CLASSIFICATION	5.182306247008362E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99994817693753	WITHOUT_CLASSIFICATION	5.182306247008362E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.99994817693753	WITHOUT_CLASSIFICATION	5.182306247008362E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999800629545399	WITHOUT_CLASSIFICATION	1.9937045460115102E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999800629545399	WITHOUT_CLASSIFICATION	1.9937045460115102E-5	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999995398309985	WITHOUT_CLASSIFICATION	4.601690014558928E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999795717125463	WITHOUT_CLASSIFICATION	2.042828745380071E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999994684854292	WITHOUT_CLASSIFICATION	5.315145708261985E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999974342834157	WITHOUT_CLASSIFICATION	2.5657165844188094E-6	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999956122795474	WITHOUT_CLASSIFICATION	4.387720452583133E-6	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.999955234787308	WITHOUT_CLASSIFICATION	4.4765212692026164E-5	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999954484373053	WITHOUT_CLASSIFICATION	4.5515626947972005E-6	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999975813138832	WITHOUT_CLASSIFICATION	2.4186861168630997E-6	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9998175324587738	WITHOUT_CLASSIFICATION	1.8246754122612253E-4	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9997473771992663	WITHOUT_CLASSIFICATION	2.5262280073371103E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9998965027259157	WITHOUT_CLASSIFICATION	1.0349727408424174E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9998965027259157	WITHOUT_CLASSIFICATION	1.0349727408424174E-4	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9999472192131471	WITHOUT_CLASSIFICATION	5.27807868528928E-5	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9999761231948494	WITHOUT_CLASSIFICATION	2.3876805150587227E-5	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999816465711674	WITHOUT_CLASSIFICATION	1.835342883262577E-5	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999998119712205	WITHOUT_CLASSIFICATION	1.880287796565895E-7	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999892774483277	WITHOUT_CLASSIFICATION	1.0722551672218466E-5	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9999989966847305	WITHOUT_CLASSIFICATION	1.0033152694809135E-6	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9997794831554315	WITHOUT_CLASSIFICATION	2.2051684456846868E-4	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9999958141355672	WITHOUT_CLASSIFICATION	4.185864432858661E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999812273748322	WITHOUT_CLASSIFICATION	1.8772625167767122E-5	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999733088368105	WITHOUT_CLASSIFICATION	2.6691163189506012E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999962876191038	WITHOUT_CLASSIFICATION	3.7123808962389327E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9998887047691241	WITHOUT_CLASSIFICATION	1.1129523087583993E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9998887047691241	WITHOUT_CLASSIFICATION	1.1129523087583993E-4	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999999757110721	WITHOUT_CLASSIFICATION	2.4288927834744345E-8	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999998426561648	WITHOUT_CLASSIFICATION	1.5734383526992078E-7	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999974018006589	WITHOUT_CLASSIFICATION	2.5981993411088814E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999973310466771	WITHOUT_CLASSIFICATION	2.6689533227945026E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.999998428252052	WITHOUT_CLASSIFICATION	1.5717479480237758E-6	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999982245037408	WITHOUT_CLASSIFICATION	1.775496259345813E-6	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999465837968	WITHOUT_CLASSIFICATION	5.341620318975391E-8	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999991489182801	WITHOUT_CLASSIFICATION	8.510817198854707E-7	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999990182610837	WITHOUT_CLASSIFICATION	9.81738916343708E-7	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999979504466201	WITHOUT_CLASSIFICATION	2.049553379859257E-6	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.999991978815739	WITHOUT_CLASSIFICATION	8.021184260955225E-6	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.999997195731532	WITHOUT_CLASSIFICATION	2.8042684680029154E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.999983686211138	WITHOUT_CLASSIFICATION	1.631378886199955E-5	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.999983686211138	WITHOUT_CLASSIFICATION	1.631378886199955E-5	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999998324613923	WITHOUT_CLASSIFICATION	1.6753860764307462E-7	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999971283251858	WITHOUT_CLASSIFICATION	2.8716748142313923E-6	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999782394941801	WITHOUT_CLASSIFICATION	2.1760505819993673E-5	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999996409649763	WITHOUT_CLASSIFICATION	3.590350237128832E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999915253462032	WITHOUT_CLASSIFICATION	8.474653796816804E-6	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999990771778706	WITHOUT_CLASSIFICATION	9.228221293016138E-7	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.999999052448319	WITHOUT_CLASSIFICATION	9.475516810139461E-7	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9999982782733448	WITHOUT_CLASSIFICATION	1.721726655149926E-6	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999833932643376	WITHOUT_CLASSIFICATION	1.6606735662327178E-5	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9999986716812976	WITHOUT_CLASSIFICATION	1.3283187023759036E-6	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999953086709541	WITHOUT_CLASSIFICATION	4.691329045926544E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999976222544693	WITHOUT_CLASSIFICATION	2.3777455306258077E-6	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999983611047395	WITHOUT_CLASSIFICATION	1.638895260559594E-6	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999839652892584	WITHOUT_CLASSIFICATION	1.603471074158923E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999975261459225	WITHOUT_CLASSIFICATION	2.4738540774674706E-6	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.9999849486724215	WITHOUT_CLASSIFICATION	1.5051327578416745E-5	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999929809221226	WITHOUT_CLASSIFICATION	7.019077877393398E-6	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999929809221226	WITHOUT_CLASSIFICATION	7.019077877393398E-6	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9999929809221226	WITHOUT_CLASSIFICATION	7.019077877393398E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999891626204706	WITHOUT_CLASSIFICATION	1.0837379529404178E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999891626204706	WITHOUT_CLASSIFICATION	1.0837379529404178E-4	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999421294285982	WITHOUT_CLASSIFICATION	5.787057140188739E-5	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9999982280274538	WITHOUT_CLASSIFICATION	1.7719725462732847E-6	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999906591037204	WITHOUT_CLASSIFICATION	9.34089627960017E-6	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999985914766423	WITHOUT_CLASSIFICATION	1.4085233577350112E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9998512917669402	WITHOUT_CLASSIFICATION	1.487082330597422E-4	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999771356260942	WITHOUT_CLASSIFICATION	2.2864373905676718E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999975261459225	WITHOUT_CLASSIFICATION	2.4738540774674706E-6	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999995130139644	WITHOUT_CLASSIFICATION	4.86986035614909E-7	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.9999983752882977	WITHOUT_CLASSIFICATION	1.6247117024012319E-6	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9999436235780252	WITHOUT_CLASSIFICATION	5.637642197482016E-5	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9992257680329053	WITHOUT_CLASSIFICATION	7.742319670947234E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999958945918542	WITHOUT_CLASSIFICATION	4.105408145737574E-6	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999652330601754	WITHOUT_CLASSIFICATION	3.476693982470005E-5	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999979258891682	WITHOUT_CLASSIFICATION	2.0741108318345703E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999768645028104	WITHOUT_CLASSIFICATION	2.313549718954509E-5	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9999990739900267	WITHOUT_CLASSIFICATION	9.260099731987461E-7	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999238083069747	WITHOUT_CLASSIFICATION	7.619169302533695E-5	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999995594432612	WITHOUT_CLASSIFICATION	4.40556738707292E-7	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999950926482597	WITHOUT_CLASSIFICATION	4.907351740373668E-6	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999995172662339	WITHOUT_CLASSIFICATION	4.827337660756939E-7	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999972848535053	WITHOUT_CLASSIFICATION	2.7151464948589727E-6	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9999955952916937	WITHOUT_CLASSIFICATION	4.40470830628601E-6	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999996264139532	WITHOUT_CLASSIFICATION	3.735860467700551E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999954396378833	WITHOUT_CLASSIFICATION	4.560362116629044E-6	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.999998985667465	WITHOUT_CLASSIFICATION	1.0143325349773543E-6	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.999998985667465	WITHOUT_CLASSIFICATION	1.0143325349773543E-6	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9999603823293088	WITHOUT_CLASSIFICATION	3.9617670691153545E-5	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999967154690655	WITHOUT_CLASSIFICATION	3.284530934340087E-6	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999713169965867	WITHOUT_CLASSIFICATION	2.8683003413299238E-5	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9999746326748916	WITHOUT_CLASSIFICATION	2.5367325108411878E-5	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9999998681638574	WITHOUT_CLASSIFICATION	1.3183614254446757E-7	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999992653384504	WITHOUT_CLASSIFICATION	7.34661549556679E-7	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999992653384504	WITHOUT_CLASSIFICATION	7.34661549556679E-7	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999984368477742	WITHOUT_CLASSIFICATION	1.5631522256953039E-6	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999990662112481	WITHOUT_CLASSIFICATION	9.337887518305679E-7	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.999995804557953	WITHOUT_CLASSIFICATION	4.195442046990751E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.999995804557953	WITHOUT_CLASSIFICATION	4.195442046990751E-6	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999997185622148	WITHOUT_CLASSIFICATION	2.8143778521155095E-7	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999990383203662	WITHOUT_CLASSIFICATION	9.616796338310888E-7	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999920050251568	WITHOUT_CLASSIFICATION	7.994974843194322E-6	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996296377448	WITHOUT_CLASSIFICATION	3.703622551505827E-7	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9996038448930292	WITHOUT_CLASSIFICATION	3.961551069708326E-4	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999921636523521	WITHOUT_CLASSIFICATION	7.836347647949003E-6	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999871458435416	WITHOUT_CLASSIFICATION	1.2854156458413019E-5	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999966354521155	WITHOUT_CLASSIFICATION	3.364547884515897E-6	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999994642314349	WITHOUT_CLASSIFICATION	5.357685650769112E-7	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999949382307	WITHOUT_CLASSIFICATION	5.0617693402164115E-9	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9999999837190723	WITHOUT_CLASSIFICATION	1.6280927670214093E-8	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9999963446205715	WITHOUT_CLASSIFICATION	3.6553794286273483E-6	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999956557791453	WITHOUT_CLASSIFICATION	4.344220854652557E-6	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999984629623174	WITHOUT_CLASSIFICATION	1.5370376825775765E-6	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999982400478536	WITHOUT_CLASSIFICATION	1.7599521463178342E-6	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999842710293976	WITHOUT_CLASSIFICATION	1.572897060238535E-5	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9999521335909434	WITHOUT_CLASSIFICATION	4.786640905654051E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998977472508759	WITHOUT_CLASSIFICATION	1.022527491240154E-4	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999915864054003	WITHOUT_CLASSIFICATION	8.413594599652774E-6	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9999785515042433	WITHOUT_CLASSIFICATION	2.1448495756681582E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999967247274288	WITHOUT_CLASSIFICATION	3.2752725711389184E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999967247274288	WITHOUT_CLASSIFICATION	3.2752725711389184E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999967247274288	WITHOUT_CLASSIFICATION	3.2752725711389184E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999967247274288	WITHOUT_CLASSIFICATION	3.2752725711389184E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999967247274288	WITHOUT_CLASSIFICATION	3.2752725711389184E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999963468752727	WITHOUT_CLASSIFICATION	3.6531247272770694E-6	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999957608236366	WITHOUT_CLASSIFICATION	4.239176363316176E-6	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999982656602617	WITHOUT_CLASSIFICATION	1.7343397381792985E-6	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999599007754	WITHOUT_CLASSIFICATION	4.0099224579309754E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999837515741902	WITHOUT_CLASSIFICATION	1.624842580982832E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999837515741902	WITHOUT_CLASSIFICATION	1.624842580982832E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999837515741902	WITHOUT_CLASSIFICATION	1.624842580982832E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999837515741902	WITHOUT_CLASSIFICATION	1.624842580982832E-5	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999798820434589	WITHOUT_CLASSIFICATION	2.0117956541057168E-5	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999997281356906	WITHOUT_CLASSIFICATION	2.7186430949598603E-7	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.999990404320447	WITHOUT_CLASSIFICATION	9.595679553056071E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999678574738623	WITHOUT_CLASSIFICATION	3.2142526137694994E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999678574738623	WITHOUT_CLASSIFICATION	3.2142526137694994E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999909363662752	WITHOUT_CLASSIFICATION	9.063633724829003E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999957844992217	WITHOUT_CLASSIFICATION	4.215500778290945E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999957844992217	WITHOUT_CLASSIFICATION	4.215500778290945E-6	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9998417830793036	WITHOUT_CLASSIFICATION	1.5821692069645387E-4	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999974400807556	WITHOUT_CLASSIFICATION	2.559919244352575E-6	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999880232679772	WITHOUT_CLASSIFICATION	1.1976732022810688E-5	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.999999809803176	WITHOUT_CLASSIFICATION	1.9019682407649493E-7	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.999949928514172	WITHOUT_CLASSIFICATION	5.007148582799531E-5	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999991279305773	WITHOUT_CLASSIFICATION	8.720694227697325E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999991279305773	WITHOUT_CLASSIFICATION	8.720694227697325E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9999938950263931	WITHOUT_CLASSIFICATION	6.10497360683518E-6	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999772453684392	WITHOUT_CLASSIFICATION	2.275463156072276E-5	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999937033348463	WITHOUT_CLASSIFICATION	6.296665153746374E-6	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999779345680266	WITHOUT_CLASSIFICATION	2.2065431973416625E-5	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999963912893145	WITHOUT_CLASSIFICATION	3.6087106854633295E-6	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999988624493116	WITHOUT_CLASSIFICATION	1.1375506883519405E-6	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999895896741731	WITHOUT_CLASSIFICATION	1.0410325826885114E-5	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999877306938664	WITHOUT_CLASSIFICATION	1.2269306133537027E-5	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9999002829655463	WITHOUT_CLASSIFICATION	9.971703445372211E-5	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.999855571380753	WITHOUT_CLASSIFICATION	1.4442861924703694E-4	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9999997437130708	WITHOUT_CLASSIFICATION	2.562869292648174E-7	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.999992728721883	WITHOUT_CLASSIFICATION	7.271278116923829E-6	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999975069927215	WITHOUT_CLASSIFICATION	2.4930072785265814E-6	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9999995510763156	WITHOUT_CLASSIFICATION	4.489236844958457E-7	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999987297482517	WITHOUT_CLASSIFICATION	1.270251748394085E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999994997065111	WITHOUT_CLASSIFICATION	5.002934888792525E-7	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999717128839261	WITHOUT_CLASSIFICATION	2.828711607395989E-5	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999994794611915	WITHOUT_CLASSIFICATION	5.205388085037268E-7	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999423159046553	WITHOUT_CLASSIFICATION	5.7684095344674164E-5	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999837016695898	WITHOUT_CLASSIFICATION	1.6298330410155764E-5	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999922883222518	WITHOUT_CLASSIFICATION	7.7116777481583E-6	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999922883222518	WITHOUT_CLASSIFICATION	7.7116777481583E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999562764936103	WITHOUT_CLASSIFICATION	4.372350638973662E-5	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9999954828286783	WITHOUT_CLASSIFICATION	4.517171321720129E-6	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9995814317044301	WITHOUT_CLASSIFICATION	4.1856829556991335E-4	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9999177426856576	WITHOUT_CLASSIFICATION	8.225731434245236E-5	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9995751925853484	WITHOUT_CLASSIFICATION	4.2480741465153856E-4	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.999995454201278	WITHOUT_CLASSIFICATION	4.545798722055774E-6	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.999930583258346	WITHOUT_CLASSIFICATION	6.941674165400487E-5	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9999179122200288	WITHOUT_CLASSIFICATION	8.208777997122942E-5	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9979132528840822	WITHOUT_CLASSIFICATION	0.002086747115917849	DEFECT
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9999803238620634	WITHOUT_CLASSIFICATION	1.9676137936628715E-5	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9999989110350994	WITHOUT_CLASSIFICATION	1.0889649006401672E-6	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.9700087415816934	WITHOUT_CLASSIFICATION	0.02999125841830663	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9979132528840822	WITHOUT_CLASSIFICATION	0.002086747115917849	DEFECT
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.9999980604793889	WITHOUT_CLASSIFICATION	1.939520611048902E-6	DEFECT
