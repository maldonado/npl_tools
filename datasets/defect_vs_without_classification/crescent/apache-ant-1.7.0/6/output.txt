/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9998711697577762	WITHOUT_CLASSIFICATION	1.2883024222373675E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999967676641391	WITHOUT_CLASSIFICATION	3.2323358609680774E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.999999781505889	WITHOUT_CLASSIFICATION	2.1849411106838396E-7	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.999999781505889	WITHOUT_CLASSIFICATION	2.1849411106838396E-7	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999983429047574	WITHOUT_CLASSIFICATION	1.6570952426415445E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999465119900236	WITHOUT_CLASSIFICATION	5.348800997642599E-5	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999997629024706	WITHOUT_CLASSIFICATION	2.3709752941180728E-7	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999969300099559	WITHOUT_CLASSIFICATION	3.0699900441861665E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999905948069047	WITHOUT_CLASSIFICATION	9.405193095431272E-6	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999141172579105	WITHOUT_CLASSIFICATION	8.588274208955444E-5	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9999993332360482	WITHOUT_CLASSIFICATION	6.667639519147784E-7	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999043739053546	WITHOUT_CLASSIFICATION	9.562609464547235E-5	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999954272471727	WITHOUT_CLASSIFICATION	4.572752827244319E-6	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9998963799139925	WITHOUT_CLASSIFICATION	1.0362008600750398E-4	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999761530923349	WITHOUT_CLASSIFICATION	2.384690766511537E-5	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9998601190173299	WITHOUT_CLASSIFICATION	1.3988098267017364E-4	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9998601190173299	WITHOUT_CLASSIFICATION	1.3988098267017364E-4	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999999361466023	WITHOUT_CLASSIFICATION	6.38533976798855E-8	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.99999598152837	WITHOUT_CLASSIFICATION	4.018471630008388E-6	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.997859559603898	WITHOUT_CLASSIFICATION	0.0021404403961020253	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999981125820635	WITHOUT_CLASSIFICATION	1.887417936524528E-6	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9999307122169455	WITHOUT_CLASSIFICATION	6.928778305448744E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.99999984432571	WITHOUT_CLASSIFICATION	1.556742900110262E-7	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999985263593245	WITHOUT_CLASSIFICATION	1.473640675559009E-6	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999442221008	WITHOUT_CLASSIFICATION	5.57778991924466E-8	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999069466268	WITHOUT_CLASSIFICATION	9.305337312566198E-8	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999528298963	WITHOUT_CLASSIFICATION	4.717010369429671E-8	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999709331076362	WITHOUT_CLASSIFICATION	2.9066892363758837E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999992353785719	WITHOUT_CLASSIFICATION	7.646214280554866E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999998462495301	WITHOUT_CLASSIFICATION	1.5375046984122266E-7	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999998675350896	WITHOUT_CLASSIFICATION	1.3246491038631977E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999977956359564	WITHOUT_CLASSIFICATION	2.204364043526161E-6	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.999987114449757	WITHOUT_CLASSIFICATION	1.2885550243018808E-5	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.999999561744436	WITHOUT_CLASSIFICATION	4.3825556390684756E-7	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999997031319365	WITHOUT_CLASSIFICATION	2.968680635042744E-7	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999959905956146	WITHOUT_CLASSIFICATION	4.009404385431069E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999117489938795	WITHOUT_CLASSIFICATION	8.825100612056611E-5	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999981125820635	WITHOUT_CLASSIFICATION	1.887417936524528E-6	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999995435923454	WITHOUT_CLASSIFICATION	4.5640765458825724E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999988712782483	WITHOUT_CLASSIFICATION	1.1287217518196476E-6	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999988712782483	WITHOUT_CLASSIFICATION	1.1287217518196476E-6	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999641072942861	WITHOUT_CLASSIFICATION	3.589270571392128E-5	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999996629823333	WITHOUT_CLASSIFICATION	3.3701766670986357E-7	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999983475855043	WITHOUT_CLASSIFICATION	1.652414495652093E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999983475855043	WITHOUT_CLASSIFICATION	1.652414495652093E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999991041606481	WITHOUT_CLASSIFICATION	8.95839351808286E-7	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999962731170409	WITHOUT_CLASSIFICATION	3.726882959162484E-6	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999982167791577	WITHOUT_CLASSIFICATION	1.7832208422484504E-6	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999997437217003	WITHOUT_CLASSIFICATION	2.562782996606366E-7	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999999309019708	WITHOUT_CLASSIFICATION	6.909802926506955E-8	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999964038612049	WITHOUT_CLASSIFICATION	3.5961387950768437E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999995415042521	WITHOUT_CLASSIFICATION	4.5849574793446825E-7	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999995588584858	WITHOUT_CLASSIFICATION	4.411415141195036E-7	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999995588584858	WITHOUT_CLASSIFICATION	4.411415141195036E-7	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999944914471869	WITHOUT_CLASSIFICATION	5.508552813044444E-6	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.999999635608148	WITHOUT_CLASSIFICATION	3.643918519233323E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999996900529279	WITHOUT_CLASSIFICATION	3.0994707207976606E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999996900529279	WITHOUT_CLASSIFICATION	3.0994707207976606E-7	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999993188801931	WITHOUT_CLASSIFICATION	6.811198069050618E-7	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999980070300457	WITHOUT_CLASSIFICATION	1.9929699542857185E-6	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999757668182694	WITHOUT_CLASSIFICATION	2.4233181730596263E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999469362957868	WITHOUT_CLASSIFICATION	5.3063704213216844E-5	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999717320756955	WITHOUT_CLASSIFICATION	2.826792430456659E-5	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999878267656264	WITHOUT_CLASSIFICATION	1.2173234373637152E-5	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999951408212445	WITHOUT_CLASSIFICATION	4.8591787555751905E-6	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999791667911881	WITHOUT_CLASSIFICATION	2.0833208811824455E-5	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999597953142312	WITHOUT_CLASSIFICATION	4.0204685768713113E-5	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999912877364461	WITHOUT_CLASSIFICATION	8.712263553881827E-6	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999971373682929	WITHOUT_CLASSIFICATION	2.862631707165959E-6	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999944055920047	WITHOUT_CLASSIFICATION	5.5944079952754116E-6	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9999749952256956	WITHOUT_CLASSIFICATION	2.500477430455092E-5	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999978161104286	WITHOUT_CLASSIFICATION	2.1838895714200584E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999994730358387	WITHOUT_CLASSIFICATION	5.269641612891725E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999994730358387	WITHOUT_CLASSIFICATION	5.269641612891725E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999469362957868	WITHOUT_CLASSIFICATION	5.3063704213216844E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999658013501702	WITHOUT_CLASSIFICATION	3.419864982984695E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999469362957868	WITHOUT_CLASSIFICATION	5.3063704213216844E-5	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.9999494279949187	WITHOUT_CLASSIFICATION	5.0572005081261715E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999658013501702	WITHOUT_CLASSIFICATION	3.419864982984695E-5	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999345904063445	WITHOUT_CLASSIFICATION	6.540959365555672E-5	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999357068957465	WITHOUT_CLASSIFICATION	6.429310425348829E-5	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.999894716984414	WITHOUT_CLASSIFICATION	1.0528301558597828E-4	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999999995081194	WITHOUT_CLASSIFICATION	4.918806198254853E-10	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999980304221265	WITHOUT_CLASSIFICATION	1.969577873515857E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999980304221265	WITHOUT_CLASSIFICATION	1.969577873515857E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999980304221265	WITHOUT_CLASSIFICATION	1.969577873515857E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999980304221265	WITHOUT_CLASSIFICATION	1.969577873515857E-6	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999733389695167	WITHOUT_CLASSIFICATION	2.6661030483260943E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999893700002214	WITHOUT_CLASSIFICATION	1.0629999778687768E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999893700002214	WITHOUT_CLASSIFICATION	1.0629999778687768E-5	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999931708853953	WITHOUT_CLASSIFICATION	6.829114604642187E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999893700002214	WITHOUT_CLASSIFICATION	1.0629999778687768E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999998269006775	WITHOUT_CLASSIFICATION	1.730993224465211E-7	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.999964293935863	WITHOUT_CLASSIFICATION	3.570606413708286E-5	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9999999593640367	WITHOUT_CLASSIFICATION	4.063596326463949E-8	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9999985039219502	WITHOUT_CLASSIFICATION	1.4960780498059155E-6	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999997898504137	WITHOUT_CLASSIFICATION	2.1014958632968226E-7	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999991545085214	WITHOUT_CLASSIFICATION	8.454914785895361E-7	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999505266798621	WITHOUT_CLASSIFICATION	4.9473320137830036E-5	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9999947568796964	WITHOUT_CLASSIFICATION	5.243120303632759E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999981869826172	WITHOUT_CLASSIFICATION	1.813017382785766E-6	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999996076000144	WITHOUT_CLASSIFICATION	3.923999856475856E-7	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999999609163079	WITHOUT_CLASSIFICATION	3.908369198273877E-8	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999999219584558	WITHOUT_CLASSIFICATION	7.804154422959746E-8	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.999993653773161	WITHOUT_CLASSIFICATION	6.3462268390250035E-6	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999799872807038	WITHOUT_CLASSIFICATION	2.001271929613692E-5	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999939486498365	WITHOUT_CLASSIFICATION	6.051350163600229E-6	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999779637279457	WITHOUT_CLASSIFICATION	2.2036272054385683E-5	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9997880087380419	WITHOUT_CLASSIFICATION	2.1199126195811692E-4	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9999950126890369	WITHOUT_CLASSIFICATION	4.987310963099385E-6	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9999996950483524	WITHOUT_CLASSIFICATION	3.049516476150383E-7	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999983681250854	WITHOUT_CLASSIFICATION	1.6318749147027132E-6	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999927775948179	WITHOUT_CLASSIFICATION	7.222405182177524E-6	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.999999971222408	WITHOUT_CLASSIFICATION	2.8777592033466143E-8	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999987505374964	WITHOUT_CLASSIFICATION	1.2494625036232459E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999981869826172	WITHOUT_CLASSIFICATION	1.813017382785766E-6	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999983933634723	WITHOUT_CLASSIFICATION	1.6066365276913771E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9999901233085929	WITHOUT_CLASSIFICATION	9.876691407161599E-6	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999997578658573	WITHOUT_CLASSIFICATION	2.4213414268189953E-7	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999943284833623	WITHOUT_CLASSIFICATION	5.671516637583307E-6	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999998979985432	WITHOUT_CLASSIFICATION	1.0200145690343208E-7	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999993035300941	WITHOUT_CLASSIFICATION	6.96469905903256E-7	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999986563590665	WITHOUT_CLASSIFICATION	1.3436409335549157E-6	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999952123991777	WITHOUT_CLASSIFICATION	4.787600822254508E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999960812956646	WITHOUT_CLASSIFICATION	3.918704335310985E-6	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.999997886010775	WITHOUT_CLASSIFICATION	2.113989225033278E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999569385480275	WITHOUT_CLASSIFICATION	4.306145197255293E-5	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999809035355028	WITHOUT_CLASSIFICATION	1.9096464497105633E-5	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999989781002012	WITHOUT_CLASSIFICATION	1.0218997987696936E-6	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999997097150939	WITHOUT_CLASSIFICATION	2.902849061066106E-7	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999999299669995	WITHOUT_CLASSIFICATION	7.00330004781787E-8	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999975302464799	WITHOUT_CLASSIFICATION	2.4697535202692896E-6	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999996468035328	WITHOUT_CLASSIFICATION	3.5319646716542845E-7	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9973397328359128	WITHOUT_CLASSIFICATION	0.0026602671640871896	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999858902085578	WITHOUT_CLASSIFICATION	1.4109791442278488E-5	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999999826255047	WITHOUT_CLASSIFICATION	1.7374495288771762E-8	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999989671437107	WITHOUT_CLASSIFICATION	1.0328562892686365E-6	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999992507870012	WITHOUT_CLASSIFICATION	7.49212998697444E-7	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999955333755187	WITHOUT_CLASSIFICATION	4.4666244812495985E-6	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9999947977229295	WITHOUT_CLASSIFICATION	5.202277070480246E-6	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999970565220284	WITHOUT_CLASSIFICATION	2.943477971590033E-6	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999967492667501	WITHOUT_CLASSIFICATION	3.250733249940477E-6	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999969119339513	WITHOUT_CLASSIFICATION	3.088066048617425E-6	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9999870200597769	WITHOUT_CLASSIFICATION	1.2979940223105275E-5	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9999962628750566	WITHOUT_CLASSIFICATION	3.7371249434024865E-6	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999753747769983	WITHOUT_CLASSIFICATION	2.4625223001773052E-5	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999996537101762	WITHOUT_CLASSIFICATION	3.4628982375416897E-7	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999964613265905	WITHOUT_CLASSIFICATION	3.5386734093766752E-6	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999977765183011	WITHOUT_CLASSIFICATION	2.2234816988330733E-6	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9999824380482518	WITHOUT_CLASSIFICATION	1.756195174821478E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999998269006775	WITHOUT_CLASSIFICATION	1.730993224465211E-7	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.999999996136487	WITHOUT_CLASSIFICATION	3.863512959735754E-9	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999951782883754	WITHOUT_CLASSIFICATION	4.821711624641059E-6	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9999997870483677	WITHOUT_CLASSIFICATION	2.1295163236607716E-7	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999849691050845	WITHOUT_CLASSIFICATION	1.5030894915557E-5	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9999092395295652	WITHOUT_CLASSIFICATION	9.076047043488195E-5	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999981384980575	WITHOUT_CLASSIFICATION	1.8615019423795327E-6	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999966213389098	WITHOUT_CLASSIFICATION	3.378661090241975E-6	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999954219534911	WITHOUT_CLASSIFICATION	4.578046508936767E-6	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999999646836667	WITHOUT_CLASSIFICATION	3.5316333335180824E-8	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.999999890794673	WITHOUT_CLASSIFICATION	1.092053270646627E-7	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999998256906172	WITHOUT_CLASSIFICATION	1.7430938282584297E-7	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999673239062379	WITHOUT_CLASSIFICATION	3.267609376210745E-5	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999942284330067	WITHOUT_CLASSIFICATION	5.771566993359398E-6	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999887947487563	WITHOUT_CLASSIFICATION	1.1205251243604067E-5	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9999951227538609	WITHOUT_CLASSIFICATION	4.877246139119616E-6	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999985901444357	WITHOUT_CLASSIFICATION	1.4098555642837787E-6	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999995328225124	WITHOUT_CLASSIFICATION	4.671774876871443E-7	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999762433809284	WITHOUT_CLASSIFICATION	2.3756619071569528E-5	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999944123674418	WITHOUT_CLASSIFICATION	5.587632558137385E-6	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.999999248011981	WITHOUT_CLASSIFICATION	7.519880190101373E-7	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999919601118665	WITHOUT_CLASSIFICATION	8.03988813355705E-6	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999998360420164	WITHOUT_CLASSIFICATION	1.639579836377856E-7	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999986796980015	WITHOUT_CLASSIFICATION	1.3203019985432422E-6	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999632564098	WITHOUT_CLASSIFICATION	3.6743590160405114E-8	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999632564098	WITHOUT_CLASSIFICATION	3.6743590160405114E-8	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.999999259823121	WITHOUT_CLASSIFICATION	7.401768789531557E-7	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999957449855311	WITHOUT_CLASSIFICATION	4.2550144688091785E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999978234526419	WITHOUT_CLASSIFICATION	2.176547358109804E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999978234526419	WITHOUT_CLASSIFICATION	2.176547358109804E-6	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999990626364508	WITHOUT_CLASSIFICATION	9.373635492362521E-7	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999996898677687	WITHOUT_CLASSIFICATION	3.101322313074413E-7	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9996860513278294	WITHOUT_CLASSIFICATION	3.1394867217071415E-4	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999998160037491	WITHOUT_CLASSIFICATION	1.8399625082369826E-7	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999927041441918	WITHOUT_CLASSIFICATION	7.2958558082129006E-6	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999975126146969	WITHOUT_CLASSIFICATION	2.487385302951575E-6	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999980904129184	WITHOUT_CLASSIFICATION	1.909587081598214E-6	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.997754439126746	WITHOUT_CLASSIFICATION	0.002245560873253993	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999816582780443	WITHOUT_CLASSIFICATION	1.8341721955634177E-5	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999993917600849	WITHOUT_CLASSIFICATION	6.082399150348986E-7	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999954084955405	WITHOUT_CLASSIFICATION	4.591504459538079E-6	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999986343186597	WITHOUT_CLASSIFICATION	1.365681340281609E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998678153068	WITHOUT_CLASSIFICATION	1.3218469319364573E-6	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999969300099559	WITHOUT_CLASSIFICATION	3.0699900441861665E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999905948069047	WITHOUT_CLASSIFICATION	9.405193095431272E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999994730358387	WITHOUT_CLASSIFICATION	5.269641612891725E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998678153068	WITHOUT_CLASSIFICATION	1.3218469319364573E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9977628617324005	WITHOUT_CLASSIFICATION	0.002237138267599567	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.99998667625135	WITHOUT_CLASSIFICATION	1.3323748650077345E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.99998667625135	WITHOUT_CLASSIFICATION	1.3323748650077345E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.99998667625135	WITHOUT_CLASSIFICATION	1.3323748650077345E-5	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999990547710724	WITHOUT_CLASSIFICATION	9.452289274695955E-7	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999975610325696	WITHOUT_CLASSIFICATION	2.4389674304438297E-6	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999985804664259	WITHOUT_CLASSIFICATION	1.419533574104233E-6	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9925236610827302	WITHOUT_CLASSIFICATION	0.0074763389172699335	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999816600593066	WITHOUT_CLASSIFICATION	1.833994069339375E-5	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999635032856423	WITHOUT_CLASSIFICATION	3.64967143576195E-5	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9977628617324005	WITHOUT_CLASSIFICATION	0.002237138267599567	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999993978376572	WITHOUT_CLASSIFICATION	6.021623427271204E-7	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999967217760151	WITHOUT_CLASSIFICATION	3.2782239849926925E-6	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999999119571084	WITHOUT_CLASSIFICATION	8.804289168440051E-8	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9999973427929149	WITHOUT_CLASSIFICATION	2.6572070850705154E-6	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999993916220997	WITHOUT_CLASSIFICATION	6.083779002315591E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999994730358387	WITHOUT_CLASSIFICATION	5.269641612891725E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999994730358387	WITHOUT_CLASSIFICATION	5.269641612891725E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999816582780443	WITHOUT_CLASSIFICATION	1.8341721955634177E-5	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999993978376572	WITHOUT_CLASSIFICATION	6.021623427271204E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999968535085916	WITHOUT_CLASSIFICATION	3.1464914083543736E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999968535085916	WITHOUT_CLASSIFICATION	3.1464914083543736E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999968535085916	WITHOUT_CLASSIFICATION	3.1464914083543736E-6	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999973342274477	WITHOUT_CLASSIFICATION	2.6657725522125904E-6	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999973342274477	WITHOUT_CLASSIFICATION	2.6657725522125904E-6	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.999998023011335	WITHOUT_CLASSIFICATION	1.9769886650529486E-6	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.999998023011335	WITHOUT_CLASSIFICATION	1.9769886650529486E-6	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999991359588545	WITHOUT_CLASSIFICATION	8.640411456570021E-7	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.999999501340683	WITHOUT_CLASSIFICATION	4.986593170576067E-7	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.999999501340683	WITHOUT_CLASSIFICATION	4.986593170576067E-7	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999956973485005	WITHOUT_CLASSIFICATION	4.302651499507507E-6	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999943477892784	WITHOUT_CLASSIFICATION	5.652210721516959E-6	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999975419594043	WITHOUT_CLASSIFICATION	2.458040595703584E-6	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999989535827809	WITHOUT_CLASSIFICATION	1.0464172190882087E-6	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999989535827809	WITHOUT_CLASSIFICATION	1.0464172190882087E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999952665881106	WITHOUT_CLASSIFICATION	4.733411889397614E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999952665881106	WITHOUT_CLASSIFICATION	4.733411889397614E-6	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999985671221134	WITHOUT_CLASSIFICATION	1.4328778865721167E-6	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999988410917408	WITHOUT_CLASSIFICATION	1.1589082592195196E-6	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999965518323596	WITHOUT_CLASSIFICATION	3.44816764054208E-6	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999989737139031	WITHOUT_CLASSIFICATION	1.0262860968659014E-6	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999978826485375	WITHOUT_CLASSIFICATION	2.1173514625062895E-6	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.999996433084892	WITHOUT_CLASSIFICATION	3.566915108013384E-6	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999992306008242	WITHOUT_CLASSIFICATION	7.693991759356808E-7	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999999496504245	WITHOUT_CLASSIFICATION	5.03495755143048E-8	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9999757703366917	WITHOUT_CLASSIFICATION	2.4229663308260397E-5	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999998899176386	WITHOUT_CLASSIFICATION	1.1008236152299658E-7	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999969272323025	WITHOUT_CLASSIFICATION	3.072767697503422E-6	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999987327834502	WITHOUT_CLASSIFICATION	1.2672165497741078E-6	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999986234445672	WITHOUT_CLASSIFICATION	1.376555432769187E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999995278871671	WITHOUT_CLASSIFICATION	4.721128328581772E-7	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999341549349267	WITHOUT_CLASSIFICATION	6.584506507335909E-5	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999997277160749	WITHOUT_CLASSIFICATION	2.7228392505761137E-7	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999203485205	WITHOUT_CLASSIFICATION	7.965147946863163E-8	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999995278871671	WITHOUT_CLASSIFICATION	4.721128328581772E-7	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999998827126694	WITHOUT_CLASSIFICATION	1.1728733072646836E-7	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999995278871671	WITHOUT_CLASSIFICATION	4.721128328581772E-7	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999341549349267	WITHOUT_CLASSIFICATION	6.584506507335909E-5	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.999999022615328	WITHOUT_CLASSIFICATION	9.77384671947259E-7	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999997725338626	WITHOUT_CLASSIFICATION	2.2746613733464686E-7	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999998468159383	WITHOUT_CLASSIFICATION	1.5318406155710515E-7	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999988880951235	WITHOUT_CLASSIFICATION	1.1119048765218886E-6	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999966199079251	WITHOUT_CLASSIFICATION	3.3800920748163503E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999980106946702	WITHOUT_CLASSIFICATION	1.9893053297850423E-6	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999996784830096	WITHOUT_CLASSIFICATION	3.215169902816597E-7	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999362416082581	WITHOUT_CLASSIFICATION	6.375839174192588E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999980106946702	WITHOUT_CLASSIFICATION	1.9893053297850423E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999980106946702	WITHOUT_CLASSIFICATION	1.9893053297850423E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999980106946702	WITHOUT_CLASSIFICATION	1.9893053297850423E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9999980106946702	WITHOUT_CLASSIFICATION	1.9893053297850423E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999995223442893	WITHOUT_CLASSIFICATION	4.776557107240496E-7	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999971618890778	WITHOUT_CLASSIFICATION	2.8381109221418187E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999997733599787	WITHOUT_CLASSIFICATION	2.2664002133073695E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999997733599787	WITHOUT_CLASSIFICATION	2.2664002133073695E-7	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999999899681042	WITHOUT_CLASSIFICATION	1.0031895764041726E-8	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.999999535379811	WITHOUT_CLASSIFICATION	4.6462018904478055E-7	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999512984227	WITHOUT_CLASSIFICATION	4.870157734295692E-8	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999999407745606	WITHOUT_CLASSIFICATION	5.9225439475188025E-8	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999996865333581	WITHOUT_CLASSIFICATION	3.1346664187210306E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999997207247154	WITHOUT_CLASSIFICATION	2.7927528457201997E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999997207247154	WITHOUT_CLASSIFICATION	2.7927528457201997E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999997207247154	WITHOUT_CLASSIFICATION	2.7927528457201997E-7	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9999997003319402	WITHOUT_CLASSIFICATION	2.996680597908864E-7	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999998043097935	WITHOUT_CLASSIFICATION	1.9569020641490716E-7	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999968825652261	WITHOUT_CLASSIFICATION	3.1174347739271634E-6	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999758737034478	WITHOUT_CLASSIFICATION	2.4126296552182498E-5	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.999999000358509	WITHOUT_CLASSIFICATION	9.996414910062648E-7	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999997772626541	WITHOUT_CLASSIFICATION	2.2273734590936835E-7	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999999239805845	WITHOUT_CLASSIFICATION	7.601941550385552E-8	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999996292608642	WITHOUT_CLASSIFICATION	3.7073913582851525E-7	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9999606890130022	WITHOUT_CLASSIFICATION	3.9310986997712375E-5	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999983601653146	WITHOUT_CLASSIFICATION	1.6398346854966164E-6	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999998257617762	WITHOUT_CLASSIFICATION	1.7423822376995974E-7	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.999988448328345	WITHOUT_CLASSIFICATION	1.155167165493306E-5	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999999924883114	WITHOUT_CLASSIFICATION	7.511688714141432E-9	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.999998669781941	WITHOUT_CLASSIFICATION	1.3302180590402264E-6	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999457929734803	WITHOUT_CLASSIFICATION	5.420702651977142E-5	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999996954365747	WITHOUT_CLASSIFICATION	3.0456342519384863E-7	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999457929734803	WITHOUT_CLASSIFICATION	5.420702651977142E-5	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999996207109391	WITHOUT_CLASSIFICATION	3.792890610482579E-7	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9999984669596818	WITHOUT_CLASSIFICATION	1.5330403183072715E-6	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.999998967168847	WITHOUT_CLASSIFICATION	1.032831153043529E-6	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999958636111486	WITHOUT_CLASSIFICATION	4.136388851419196E-6	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999999688694636	WITHOUT_CLASSIFICATION	3.113053635205989E-8	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999999914030142	WITHOUT_CLASSIFICATION	8.596985815998055E-9	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999871591536547	WITHOUT_CLASSIFICATION	1.2840846345286047E-5	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999929040635244	WITHOUT_CLASSIFICATION	7.095936475582547E-6	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9998981979767483	WITHOUT_CLASSIFICATION	1.0180202325173037E-4	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999203028104681	WITHOUT_CLASSIFICATION	7.969718953192271E-5	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999999998929785	WITHOUT_CLASSIFICATION	1.0702154391626115E-10	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999995347478953	WITHOUT_CLASSIFICATION	4.6525210474388034E-7	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999992120537678	WITHOUT_CLASSIFICATION	7.879462320469437E-7	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999998030088778	WITHOUT_CLASSIFICATION	1.9699112209209626E-7	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999988907929643	WITHOUT_CLASSIFICATION	1.1092070356116814E-6	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999984010660575	WITHOUT_CLASSIFICATION	1.5989339425009672E-6	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999999668332981	WITHOUT_CLASSIFICATION	3.316670194402718E-8	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999983037719573	WITHOUT_CLASSIFICATION	1.696228042695173E-6	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999978195468441	WITHOUT_CLASSIFICATION	2.1804531558730548E-6	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999999838808524	WITHOUT_CLASSIFICATION	1.611914757117032E-8	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999999893231171	WITHOUT_CLASSIFICATION	1.0676882941516998E-8	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999972784268518	WITHOUT_CLASSIFICATION	2.7215731482629744E-6	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.999999554795075	WITHOUT_CLASSIFICATION	4.4520492492461355E-7	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.999999554795075	WITHOUT_CLASSIFICATION	4.4520492492461355E-7	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.999999987353637	WITHOUT_CLASSIFICATION	1.2646362910344492E-8	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.999999987353637	WITHOUT_CLASSIFICATION	1.2646362910344492E-8	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999625151445579	WITHOUT_CLASSIFICATION	3.7484855442184024E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999606725195913	WITHOUT_CLASSIFICATION	3.9327480408785566E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999606725195913	WITHOUT_CLASSIFICATION	3.9327480408785566E-5	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.999999706961852	WITHOUT_CLASSIFICATION	2.9303814796176974E-7	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.999999706961852	WITHOUT_CLASSIFICATION	2.9303814796176974E-7	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999817776500701	WITHOUT_CLASSIFICATION	1.8222349929889985E-5	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999994479725876	WITHOUT_CLASSIFICATION	5.52027412477143E-7	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999998259310998	WITHOUT_CLASSIFICATION	1.7406890021112614E-7	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.999996257581202	WITHOUT_CLASSIFICATION	3.742418798003689E-6	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999916651271806	WITHOUT_CLASSIFICATION	8.334872819295632E-6	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999990298199933	WITHOUT_CLASSIFICATION	9.701800066040892E-7	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999993335353459	WITHOUT_CLASSIFICATION	6.664646541634692E-7	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.999996483830754	WITHOUT_CLASSIFICATION	3.516169246019428E-6	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999962372291581	WITHOUT_CLASSIFICATION	3.76277084196385E-6	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9999987156407701	WITHOUT_CLASSIFICATION	1.284359229775755E-6	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999998539160058	WITHOUT_CLASSIFICATION	1.460839943257961E-7	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999979445841256	WITHOUT_CLASSIFICATION	2.0554158744278965E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999999985021738	WITHOUT_CLASSIFICATION	1.4978261572990043E-9	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999987695907687	WITHOUT_CLASSIFICATION	1.2304092312032812E-6	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999953478988035	WITHOUT_CLASSIFICATION	4.652101196570235E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999117489938795	WITHOUT_CLASSIFICATION	8.825100612056611E-5	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999871591536547	WITHOUT_CLASSIFICATION	1.2840846345286047E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999203028104681	WITHOUT_CLASSIFICATION	7.969718953192271E-5	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999850920427752	WITHOUT_CLASSIFICATION	1.490795722472991E-5	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999996658058465	WITHOUT_CLASSIFICATION	3.3419415345894287E-7	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999896466499301	WITHOUT_CLASSIFICATION	1.0353350069945495E-5	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999986378453533	WITHOUT_CLASSIFICATION	1.3621546466517873E-6	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999996825336788	WITHOUT_CLASSIFICATION	3.174663212549559E-7	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999890644445086	WITHOUT_CLASSIFICATION	1.0935555491394378E-5	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999990851775508	WITHOUT_CLASSIFICATION	9.14822449288768E-7	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999999139088894	WITHOUT_CLASSIFICATION	8.609111049210071E-8	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999991786960396	WITHOUT_CLASSIFICATION	8.213039605294626E-7	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.99999969689115	WITHOUT_CLASSIFICATION	3.031088500750368E-7	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9998150230284417	WITHOUT_CLASSIFICATION	1.8497697155818858E-4	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999996770905136	WITHOUT_CLASSIFICATION	3.229094862597588E-7	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999960268703045	WITHOUT_CLASSIFICATION	3.973129695441147E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999960268703045	WITHOUT_CLASSIFICATION	3.973129695441147E-6	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9999980498358103	WITHOUT_CLASSIFICATION	1.950164189652102E-6	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.999996009892005	WITHOUT_CLASSIFICATION	3.99010799495998E-6	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999994156370852	WITHOUT_CLASSIFICATION	5.843629147745872E-7	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999952564934143	WITHOUT_CLASSIFICATION	4.743506585817377E-6	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999923242016806	WITHOUT_CLASSIFICATION	7.675798319309478E-6	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999998332558095	WITHOUT_CLASSIFICATION	1.6674419045064204E-7	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999968518601533	WITHOUT_CLASSIFICATION	3.14813984657199E-6	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9998990941200332	WITHOUT_CLASSIFICATION	1.0090587996685422E-4	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9999977711089555	WITHOUT_CLASSIFICATION	2.228891044516244E-6	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999974065619626	WITHOUT_CLASSIFICATION	2.5934380374218544E-6	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999988769392499	WITHOUT_CLASSIFICATION	1.1230607499642944E-6	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999965325156961	WITHOUT_CLASSIFICATION	3.467484303861542E-6	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999998079398648	WITHOUT_CLASSIFICATION	1.9206013525885952E-7	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999981767514718	WITHOUT_CLASSIFICATION	1.8232485282079934E-6	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999920754873839	WITHOUT_CLASSIFICATION	7.924512616132289E-6	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999714609580262	WITHOUT_CLASSIFICATION	2.8539041973676673E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999895740997139	WITHOUT_CLASSIFICATION	1.0425900286191634E-5	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999988666912066	WITHOUT_CLASSIFICATION	1.1333087933960468E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999709331076362	WITHOUT_CLASSIFICATION	2.9066892363758837E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999992353785719	WITHOUT_CLASSIFICATION	7.646214280554866E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999998462495301	WITHOUT_CLASSIFICATION	1.5375046984122266E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999998462495301	WITHOUT_CLASSIFICATION	1.5375046984122266E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999977956359564	WITHOUT_CLASSIFICATION	2.204364043526161E-6	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999977956359564	WITHOUT_CLASSIFICATION	2.204364043526161E-6	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999993986275483	WITHOUT_CLASSIFICATION	6.013724517701306E-7	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999858161451114	WITHOUT_CLASSIFICATION	1.4183854888579374E-5	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.999981643413207	WITHOUT_CLASSIFICATION	1.8356586792989577E-5	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9999985172015234	WITHOUT_CLASSIFICATION	1.4827984766364985E-6	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999966360471282	WITHOUT_CLASSIFICATION	3.363952871820915E-6	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9984764568723953	WITHOUT_CLASSIFICATION	0.0015235431276047586	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9985392284751264	WITHOUT_CLASSIFICATION	0.0014607715248736227	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999990504767716	WITHOUT_CLASSIFICATION	9.495232283874039E-7	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999990504767716	WITHOUT_CLASSIFICATION	9.495232283874039E-7	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.999997396251221	WITHOUT_CLASSIFICATION	2.6037487789114907E-6	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999994547475691	WITHOUT_CLASSIFICATION	5.452524307963226E-7	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999793178712988	WITHOUT_CLASSIFICATION	2.0682128701252837E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999793178712988	WITHOUT_CLASSIFICATION	2.0682128701252837E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999971393478788	WITHOUT_CLASSIFICATION	2.8606521211264394E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999486782461083	WITHOUT_CLASSIFICATION	5.132175389162944E-5	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999377523440399	WITHOUT_CLASSIFICATION	6.22476559600163E-5	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999895724671292	WITHOUT_CLASSIFICATION	1.0427532870908194E-5	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9998735377297967	WITHOUT_CLASSIFICATION	1.2646227020334888E-4	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999993840985135	WITHOUT_CLASSIFICATION	6.159014864751704E-7	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999984490250745	WITHOUT_CLASSIFICATION	1.550974925497104E-6	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999984490250745	WITHOUT_CLASSIFICATION	1.550974925497104E-6	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999917092612387	WITHOUT_CLASSIFICATION	8.290738761274877E-6	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999783601562233	WITHOUT_CLASSIFICATION	2.1639843776657987E-5	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999685423298639	WITHOUT_CLASSIFICATION	3.1457670136065895E-5	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999999022858872	WITHOUT_CLASSIFICATION	9.771411278172711E-8	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999994382368781	WITHOUT_CLASSIFICATION	5.61763121896073E-7	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999952429601319	WITHOUT_CLASSIFICATION	4.757039868176894E-6	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999917128323844	WITHOUT_CLASSIFICATION	8.287167615568085E-6	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999995953415219	WITHOUT_CLASSIFICATION	4.046584780006711E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978532992282	WITHOUT_CLASSIFICATION	2.1467007718552293E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978532992282	WITHOUT_CLASSIFICATION	2.1467007718552293E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978532992282	WITHOUT_CLASSIFICATION	2.1467007718552293E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978532992282	WITHOUT_CLASSIFICATION	2.1467007718552293E-6	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999876391669097	WITHOUT_CLASSIFICATION	1.2360833090271526E-5	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.999999975524777	WITHOUT_CLASSIFICATION	2.447522292587499E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999978709889452	WITHOUT_CLASSIFICATION	2.1290110548268866E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999818604118991	WITHOUT_CLASSIFICATION	1.8139588100875216E-5	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999818604118991	WITHOUT_CLASSIFICATION	1.8139588100875216E-5	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.999983079620578	WITHOUT_CLASSIFICATION	1.692037942201127E-5	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.999983079620578	WITHOUT_CLASSIFICATION	1.692037942201127E-5	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999803436286173	WITHOUT_CLASSIFICATION	1.965637138268593E-5	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999666472290909	WITHOUT_CLASSIFICATION	3.335277090908686E-5	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999875269590338	WITHOUT_CLASSIFICATION	1.2473040966257803E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999981005088053	WITHOUT_CLASSIFICATION	1.89949119464685E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999986369050017	WITHOUT_CLASSIFICATION	1.363094998404913E-6	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999967920586612	WITHOUT_CLASSIFICATION	3.207941338845625E-6	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.999999951609795	WITHOUT_CLASSIFICATION	4.839020501282201E-8	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9998117812170835	WITHOUT_CLASSIFICATION	1.8821878291653933E-4	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999972188259352	WITHOUT_CLASSIFICATION	2.7811740648806425E-6	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999997017642531	WITHOUT_CLASSIFICATION	2.982357467978014E-7	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999999188263691	WITHOUT_CLASSIFICATION	8.117363089851508E-8	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999995042904023	WITHOUT_CLASSIFICATION	4.957095977232287E-7	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999996487069222	WITHOUT_CLASSIFICATION	3.5129307791220627E-7	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.999999721565219	WITHOUT_CLASSIFICATION	2.784347810804914E-7	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999969090017362	WITHOUT_CLASSIFICATION	3.09099826385291E-6	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999600278385976	WITHOUT_CLASSIFICATION	3.997216140239733E-5	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999996854595415	WITHOUT_CLASSIFICATION	3.145404583730741E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.999988694338128	WITHOUT_CLASSIFICATION	1.1305661871970836E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.999988694338128	WITHOUT_CLASSIFICATION	1.1305661871970836E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.999988694338128	WITHOUT_CLASSIFICATION	1.1305661871970836E-5	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999901765399029	WITHOUT_CLASSIFICATION	9.823460097104088E-6	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999935382524242	WITHOUT_CLASSIFICATION	6.461747575836104E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999988197667907	WITHOUT_CLASSIFICATION	1.1802332092822682E-6	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9992161106093231	WITHOUT_CLASSIFICATION	7.838893906768857E-4	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999999837154384	WITHOUT_CLASSIFICATION	1.6284561652856986E-8	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999994212791726	WITHOUT_CLASSIFICATION	5.787208273906663E-7	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999890796819898	WITHOUT_CLASSIFICATION	1.0920318010285254E-5	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999940486762995	WITHOUT_CLASSIFICATION	5.951323700418101E-6	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999988377089819	WITHOUT_CLASSIFICATION	1.1622910180796542E-6	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9999868789341824	WITHOUT_CLASSIFICATION	1.3121065817625273E-5	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999980005099899	WITHOUT_CLASSIFICATION	1.999490010210651E-6	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999862796001384	WITHOUT_CLASSIFICATION	1.3720399861602399E-5	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999995828294377	WITHOUT_CLASSIFICATION	4.17170562210862E-7	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.99998248096623	WITHOUT_CLASSIFICATION	1.7519033770016693E-5	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.999992769441146	WITHOUT_CLASSIFICATION	7.23055885394649E-6	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999996361616068	WITHOUT_CLASSIFICATION	3.638383931749484E-7	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999993617653974	WITHOUT_CLASSIFICATION	6.382346025565472E-7	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.999999968731556	WITHOUT_CLASSIFICATION	3.126844404092267E-8	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999947135706	WITHOUT_CLASSIFICATION	5.286429491401411E-9	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999995283255537	WITHOUT_CLASSIFICATION	4.7167444628067683E-7	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999967941482895	WITHOUT_CLASSIFICATION	3.205851710446242E-6	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9999523732197417	WITHOUT_CLASSIFICATION	4.762678025828194E-5	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999786278193	WITHOUT_CLASSIFICATION	2.13721807051845E-8	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9999328072530166	WITHOUT_CLASSIFICATION	6.71927469834222E-5	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999974509212183	WITHOUT_CLASSIFICATION	2.5490787817946193E-6	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9995717953724319	WITHOUT_CLASSIFICATION	4.2820462756817533E-4	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9999695831310836	WITHOUT_CLASSIFICATION	3.0416868916310958E-5	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999988654945048	WITHOUT_CLASSIFICATION	1.134505495255172E-6	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999995998560035	WITHOUT_CLASSIFICATION	4.0014399658062883E-7	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999353459944	WITHOUT_CLASSIFICATION	6.465400560996413E-8	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999993643470582	WITHOUT_CLASSIFICATION	6.356529419092796E-7	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999847068783216	WITHOUT_CLASSIFICATION	1.529312167831185E-5	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999989734221986	WITHOUT_CLASSIFICATION	1.0265778014267959E-6	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9999938276193049	WITHOUT_CLASSIFICATION	6.172380695045889E-6	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999106353717454	WITHOUT_CLASSIFICATION	8.936462825460461E-5	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9998136547873682	WITHOUT_CLASSIFICATION	1.863452126318018E-4	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999916755153141	WITHOUT_CLASSIFICATION	8.324484685952372E-6	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9999373667443143	WITHOUT_CLASSIFICATION	6.263325568573559E-5	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999979027464304	WITHOUT_CLASSIFICATION	2.097253569615689E-6	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999996593682148	WITHOUT_CLASSIFICATION	3.4063178514366316E-7	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999997561152832	WITHOUT_CLASSIFICATION	2.4388471672146163E-7	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9999987122499564	WITHOUT_CLASSIFICATION	1.2877500435870463E-6	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999988432133857	WITHOUT_CLASSIFICATION	1.156786614213068E-6	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999969456582614	WITHOUT_CLASSIFICATION	3.054341738666256E-6	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999989716427424	WITHOUT_CLASSIFICATION	1.0283572575125852E-6	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999973228987753	WITHOUT_CLASSIFICATION	2.6771012247754806E-6	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999496096033682	WITHOUT_CLASSIFICATION	5.039039663178215E-5	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999994213222488	WITHOUT_CLASSIFICATION	5.786777510762001E-7	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999995956036922	WITHOUT_CLASSIFICATION	4.043963078517121E-7	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999991236604048	WITHOUT_CLASSIFICATION	8.763395951275827E-7	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999992498108039	WITHOUT_CLASSIFICATION	7.501891960690888E-7	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999997730239863	WITHOUT_CLASSIFICATION	2.2697601364711356E-7	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.999999767861387	WITHOUT_CLASSIFICATION	2.32138613003497E-7	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999997414718047	WITHOUT_CLASSIFICATION	2.5852819523025785E-7	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999998237362495	WITHOUT_CLASSIFICATION	1.7626375045117844E-7	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9994907177279214	WITHOUT_CLASSIFICATION	5.092822720785539E-4	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.999999968396029	WITHOUT_CLASSIFICATION	3.160397103707942E-8	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999978066714243	WITHOUT_CLASSIFICATION	2.193328575568456E-6	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.999999992250102	WITHOUT_CLASSIFICATION	7.749897937342611E-9	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999993438774788	WITHOUT_CLASSIFICATION	6.561225211535617E-7	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999999868186272	WITHOUT_CLASSIFICATION	1.3181372770473434E-8	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9999999491790963	WITHOUT_CLASSIFICATION	5.082090365644671E-8	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9833745236170157	WITHOUT_CLASSIFICATION	0.016625476382984335	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999998896165219	WITHOUT_CLASSIFICATION	1.103834780362527E-7	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9985250936005104	WITHOUT_CLASSIFICATION	0.0014749063994895647	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9998176932158179	WITHOUT_CLASSIFICATION	1.8230678418212177E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999934073258638	WITHOUT_CLASSIFICATION	6.592674136236158E-6	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999842910501305	WITHOUT_CLASSIFICATION	1.5708949869415253E-5	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999998404719554	WITHOUT_CLASSIFICATION	1.5952804450532704E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999882257096392	WITHOUT_CLASSIFICATION	1.1774290360838539E-5	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999984734425493	WITHOUT_CLASSIFICATION	1.5265574507373716E-6	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.999952092357871	WITHOUT_CLASSIFICATION	4.790764212906618E-5	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999999273460276	WITHOUT_CLASSIFICATION	7.26539724644787E-8	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999994772641	WITHOUT_CLASSIFICATION	5.227358704971921E-10	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999324968222	WITHOUT_CLASSIFICATION	6.750317786861577E-8	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.999932306759729	WITHOUT_CLASSIFICATION	6.769324027101374E-5	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9997982359609455	WITHOUT_CLASSIFICATION	2.0176403905456942E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996012634551574	WITHOUT_CLASSIFICATION	3.9873654484254474E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996012634551574	WITHOUT_CLASSIFICATION	3.9873654484254474E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996012634551574	WITHOUT_CLASSIFICATION	3.9873654484254474E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999971452896281	WITHOUT_CLASSIFICATION	2.854710371857662E-6	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999491875269427	WITHOUT_CLASSIFICATION	5.0812473057302255E-5	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999999013309473	WITHOUT_CLASSIFICATION	9.866905277221791E-8	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999994453940375	WITHOUT_CLASSIFICATION	5.546059624107308E-7	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.999996439721813	WITHOUT_CLASSIFICATION	3.560278187138948E-6	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999998592351029	WITHOUT_CLASSIFICATION	1.4076489705883546E-7	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.999999290206284	WITHOUT_CLASSIFICATION	7.097937159412581E-7	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999941900710702	WITHOUT_CLASSIFICATION	5.809928929941616E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999991492218387	WITHOUT_CLASSIFICATION	8.507781613031112E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999991492218387	WITHOUT_CLASSIFICATION	8.507781613031112E-7	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.999992647452616	WITHOUT_CLASSIFICATION	7.352547384046828E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999992510775304	WITHOUT_CLASSIFICATION	7.489224696934971E-7	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999324968222	WITHOUT_CLASSIFICATION	6.750317786861577E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999993596986168	WITHOUT_CLASSIFICATION	6.403013832339538E-7	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999999612474769	WITHOUT_CLASSIFICATION	3.875252305882778E-8	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999828372043579	WITHOUT_CLASSIFICATION	1.7162795642153442E-5	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9999686687312368	WITHOUT_CLASSIFICATION	3.133126876310677E-5	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.999975302098687	WITHOUT_CLASSIFICATION	2.469790131302854E-5	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999996140839102	WITHOUT_CLASSIFICATION	3.859160898166855E-7	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999967175025517	WITHOUT_CLASSIFICATION	3.282497448349005E-6	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9998586341997219	WITHOUT_CLASSIFICATION	1.41365800278025E-4	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9997926295175352	WITHOUT_CLASSIFICATION	2.073704824646593E-4	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999413162167856	WITHOUT_CLASSIFICATION	5.868378321442654E-5	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9995966675658672	WITHOUT_CLASSIFICATION	4.033324341328727E-4	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999897462334085	WITHOUT_CLASSIFICATION	1.0253766591524166E-5	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999979586398463	WITHOUT_CLASSIFICATION	2.0413601537501746E-6	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9999749061968595	WITHOUT_CLASSIFICATION	2.509380314061986E-5	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999433203084085	WITHOUT_CLASSIFICATION	5.667969159144514E-5	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9999948521658452	WITHOUT_CLASSIFICATION	5.147834154900025E-6	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9999777186656021	WITHOUT_CLASSIFICATION	2.2281334397837727E-5	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9999661247072377	WITHOUT_CLASSIFICATION	3.3875292762337786E-5	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999672466379754	WITHOUT_CLASSIFICATION	3.2753362024548756E-5	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999945721529581	WITHOUT_CLASSIFICATION	5.427847041978106E-6	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999997838003448	WITHOUT_CLASSIFICATION	2.161996550604786E-7	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999992275171533	WITHOUT_CLASSIFICATION	7.724828466707451E-7	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999436445808865	WITHOUT_CLASSIFICATION	5.635541911348785E-5	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999990478879892	WITHOUT_CLASSIFICATION	9.521120108256266E-7	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999994261937046	WITHOUT_CLASSIFICATION	5.738062953828094E-7	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999976456151448	WITHOUT_CLASSIFICATION	2.354384855251394E-6	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9998261028675097	WITHOUT_CLASSIFICATION	1.738971324902845E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999809210152	WITHOUT_CLASSIFICATION	1.9078984899898116E-8	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999993021350436	WITHOUT_CLASSIFICATION	6.978649564577101E-7	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999996759501517	WITHOUT_CLASSIFICATION	3.240498483259559E-7	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999996196983	WITHOUT_CLASSIFICATION	3.803016578256197E-10	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9978890487387779	WITHOUT_CLASSIFICATION	0.0021109512612221973	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999997913171619	WITHOUT_CLASSIFICATION	2.0868283825844697E-7	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999989795995354	WITHOUT_CLASSIFICATION	1.0204004645379258E-6	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999721598075723	WITHOUT_CLASSIFICATION	2.784019242766445E-5	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999994461893453	WITHOUT_CLASSIFICATION	5.538106546550673E-7	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999696408651624	WITHOUT_CLASSIFICATION	3.0359134837621424E-5	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999995481634938	WITHOUT_CLASSIFICATION	4.518365062935755E-7	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999928182729084	WITHOUT_CLASSIFICATION	7.181727091565847E-6	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9999983299754004	WITHOUT_CLASSIFICATION	1.6700245995587312E-6	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999990717875501	WITHOUT_CLASSIFICATION	9.282124499513635E-7	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.999999398660638	WITHOUT_CLASSIFICATION	6.013393620476831E-7	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.999869619325854	WITHOUT_CLASSIFICATION	1.3038067414600785E-4	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999987742910363	WITHOUT_CLASSIFICATION	1.22570896372993E-6	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999988696694122	WITHOUT_CLASSIFICATION	1.1303305878008318E-6	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999978001583718	WITHOUT_CLASSIFICATION	2.199841628153972E-6	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999997787192407	WITHOUT_CLASSIFICATION	2.2128075925331747E-7	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999289732670656	WITHOUT_CLASSIFICATION	7.10267329343724E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9999759552295786	WITHOUT_CLASSIFICATION	2.404477042145439E-5	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999951136139819	WITHOUT_CLASSIFICATION	4.88638601820344E-6	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9999917309748467	WITHOUT_CLASSIFICATION	8.269025153233849E-6	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9999563903382885	WITHOUT_CLASSIFICATION	4.3609661711509536E-5	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.999993935095847	WITHOUT_CLASSIFICATION	6.064904152909105E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999444334205053	WITHOUT_CLASSIFICATION	5.556657949471282E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999907548485955	WITHOUT_CLASSIFICATION	9.245151404642059E-6	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999981464101881	WITHOUT_CLASSIFICATION	1.853589811898704E-6	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999975142126265	WITHOUT_CLASSIFICATION	2.485787373419938E-6	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999994219394097	WITHOUT_CLASSIFICATION	5.780605902908201E-7	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999999440581963	WITHOUT_CLASSIFICATION	5.594180374306582E-8	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999987201086766	WITHOUT_CLASSIFICATION	1.2798913233843643E-6	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999903266783683	WITHOUT_CLASSIFICATION	9.673321631764694E-6	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9999895172219155	WITHOUT_CLASSIFICATION	1.0482778084513633E-5	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9945518248121703	WITHOUT_CLASSIFICATION	0.0054481751878297175	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9998861286285303	WITHOUT_CLASSIFICATION	1.138713714695717E-4	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999892397395174	WITHOUT_CLASSIFICATION	1.0760260482630766E-5	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999996200548993	WITHOUT_CLASSIFICATION	3.799451006600779E-7	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999998301292128	WITHOUT_CLASSIFICATION	1.6987078723179472E-7	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999984173850495	WITHOUT_CLASSIFICATION	1.5826149504505605E-6	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999994376295605	WITHOUT_CLASSIFICATION	5.623704395248735E-7	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9997317335888619	WITHOUT_CLASSIFICATION	2.6826641113807624E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9998176932158179	WITHOUT_CLASSIFICATION	1.8230678418212177E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999998301292128	WITHOUT_CLASSIFICATION	1.6987078723179472E-7	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999984173850495	WITHOUT_CLASSIFICATION	1.5826149504505605E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999996337305291	WITHOUT_CLASSIFICATION	3.662694708997832E-7	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999999984405047	WITHOUT_CLASSIFICATION	1.5594953363731412E-9	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.999999922988681	WITHOUT_CLASSIFICATION	7.701131906620214E-8	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.999999882151166	WITHOUT_CLASSIFICATION	1.1784883400870961E-7	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999986407292039	WITHOUT_CLASSIFICATION	1.3592707962436717E-6	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999895176816673	WITHOUT_CLASSIFICATION	1.048231833275884E-5	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9999813271151955	WITHOUT_CLASSIFICATION	1.867288480449815E-5	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999962907854947	WITHOUT_CLASSIFICATION	3.7092145051957413E-6	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999981794309325	WITHOUT_CLASSIFICATION	1.8205690674042013E-6	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999985366913541	WITHOUT_CLASSIFICATION	1.4633086460152672E-6	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999949834044561	WITHOUT_CLASSIFICATION	5.016595543887092E-6	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.999999587711128	WITHOUT_CLASSIFICATION	4.122888720299835E-7	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9999456451813143	WITHOUT_CLASSIFICATION	5.43548186855692E-5	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999987524407199	WITHOUT_CLASSIFICATION	1.2475592801507357E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999773778511627	WITHOUT_CLASSIFICATION	2.2622148837362565E-5	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999985770770875	WITHOUT_CLASSIFICATION	1.4229229125785166E-6	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.99999285244237	WITHOUT_CLASSIFICATION	7.147557630021227E-6	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9998315804831034	WITHOUT_CLASSIFICATION	1.684195168966922E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999999253048734	WITHOUT_CLASSIFICATION	7.469512667005914E-8	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9998830390564357	WITHOUT_CLASSIFICATION	1.1696094356430978E-4	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999759779331145	WITHOUT_CLASSIFICATION	2.40220668854718E-5	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999876193413918	WITHOUT_CLASSIFICATION	1.2380658608162834E-5	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999724986977309	WITHOUT_CLASSIFICATION	2.7501302269112443E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999998404719554	WITHOUT_CLASSIFICATION	1.5952804450532704E-7	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.999998079646563	WITHOUT_CLASSIFICATION	1.920353437069929E-6	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999991420516503	WITHOUT_CLASSIFICATION	8.57948349697764E-7	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9999975308829058	WITHOUT_CLASSIFICATION	2.469117094274727E-6	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9992867903608444	WITHOUT_CLASSIFICATION	7.13209639155557E-4	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.999924101209372	WITHOUT_CLASSIFICATION	7.589879062788507E-5	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9999801349077787	WITHOUT_CLASSIFICATION	1.9865092221313885E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999991508925609	WITHOUT_CLASSIFICATION	8.491074391735137E-7	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9997642938081654	WITHOUT_CLASSIFICATION	2.3570619183447156E-4	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999924868339162	WITHOUT_CLASSIFICATION	7.513166083834474E-6	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999994202765399	WITHOUT_CLASSIFICATION	5.797234600928959E-7	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999988650144928	WITHOUT_CLASSIFICATION	1.1349855072885348E-6	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999870288749608	WITHOUT_CLASSIFICATION	1.2971125039161779E-5	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999802813700119	WITHOUT_CLASSIFICATION	1.9718629988080102E-5	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999996750068227	WITHOUT_CLASSIFICATION	3.2499317716389255E-7	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999983230547393	WITHOUT_CLASSIFICATION	1.6769452606571462E-6	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999959828954	WITHOUT_CLASSIFICATION	4.017104610212554E-9	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999952347752923	WITHOUT_CLASSIFICATION	4.765224707780351E-6	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999367225148086	WITHOUT_CLASSIFICATION	6.327748519139574E-5	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999965920950964	WITHOUT_CLASSIFICATION	3.4079049035967234E-6	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999983309706006	WITHOUT_CLASSIFICATION	1.6690293993541524E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999888909172292	WITHOUT_CLASSIFICATION	1.110908277070751E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.999991879708627	WITHOUT_CLASSIFICATION	8.12029137301899E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.999991879708627	WITHOUT_CLASSIFICATION	8.12029137301899E-6	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999963340632739	WITHOUT_CLASSIFICATION	3.6659367261100338E-6	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999869968169061	WITHOUT_CLASSIFICATION	1.3003183093957012E-5	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999961744740076	WITHOUT_CLASSIFICATION	3.825525992461525E-6	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999995892544129	WITHOUT_CLASSIFICATION	4.1074558714668416E-7	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.999997749899415	WITHOUT_CLASSIFICATION	2.2501005849868703E-6	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999996200165464	WITHOUT_CLASSIFICATION	3.799834535378732E-7	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9999655081886439	WITHOUT_CLASSIFICATION	3.449181135609008E-5	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9998835611728284	WITHOUT_CLASSIFICATION	1.1643882717156448E-4	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999893058376771	WITHOUT_CLASSIFICATION	1.0694162322954512E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999988176041201	WITHOUT_CLASSIFICATION	1.1823958799380033E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999997836225765	WITHOUT_CLASSIFICATION	2.1637742342360224E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999933855127413	WITHOUT_CLASSIFICATION	6.614487258695512E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999999368913061	WITHOUT_CLASSIFICATION	6.31086940087454E-8	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999999368913061	WITHOUT_CLASSIFICATION	6.31086940087454E-8	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999996793532581	WITHOUT_CLASSIFICATION	3.206467418850534E-7	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999980981740008	WITHOUT_CLASSIFICATION	1.9018259992466432E-6	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999998457045569	WITHOUT_CLASSIFICATION	1.542954430839671E-7	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999984591611238	WITHOUT_CLASSIFICATION	1.5408388761357806E-6	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999998839223798	WITHOUT_CLASSIFICATION	1.1607762015722E-7	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999985479477402	WITHOUT_CLASSIFICATION	1.4520522597242337E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999868570390708	WITHOUT_CLASSIFICATION	1.31429609291934E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999802454530147	WITHOUT_CLASSIFICATION	1.9754546985269115E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999802454530147	WITHOUT_CLASSIFICATION	1.9754546985269115E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999802454530147	WITHOUT_CLASSIFICATION	1.9754546985269115E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999802454530147	WITHOUT_CLASSIFICATION	1.9754546985269115E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999802454530147	WITHOUT_CLASSIFICATION	1.9754546985269115E-5	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999644736200687	WITHOUT_CLASSIFICATION	3.5526379931418844E-5	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999972512266421	WITHOUT_CLASSIFICATION	2.748773357883096E-6	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999977529754783	WITHOUT_CLASSIFICATION	2.2470245217265554E-6	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999979858295922	WITHOUT_CLASSIFICATION	2.014170407725054E-6	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999886613001775	WITHOUT_CLASSIFICATION	1.133869982245524E-5	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999992134791035	WITHOUT_CLASSIFICATION	7.865208965636398E-7	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999427640188668	WITHOUT_CLASSIFICATION	5.7235981133197835E-5	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999992649154055	WITHOUT_CLASSIFICATION	7.350845944543463E-7	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999617544716515	WITHOUT_CLASSIFICATION	3.824552834858547E-5	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999989372023625	WITHOUT_CLASSIFICATION	1.0627976374431395E-6	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999992617958428	WITHOUT_CLASSIFICATION	7.382041571205364E-7	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999988701653599	WITHOUT_CLASSIFICATION	1.1298346400280396E-6	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999997833983363	WITHOUT_CLASSIFICATION	2.1660166366733725E-7	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999997923289022	WITHOUT_CLASSIFICATION	2.0767109769317207E-7	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999986929642853	WITHOUT_CLASSIFICATION	1.3070357147394645E-6	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9847643485056261	WITHOUT_CLASSIFICATION	0.015235651494373852	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999997028581605	WITHOUT_CLASSIFICATION	2.97141839452042E-7	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9993347142127547	WITHOUT_CLASSIFICATION	6.65285787245285E-4	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999985221168766	WITHOUT_CLASSIFICATION	1.4778831233869748E-6	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999983920675148	WITHOUT_CLASSIFICATION	1.6079324852202634E-6	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999971287616795	WITHOUT_CLASSIFICATION	2.8712383206157356E-6	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999991430561376	WITHOUT_CLASSIFICATION	8.569438623563533E-7	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999999492774818	WITHOUT_CLASSIFICATION	5.072251827522818E-8	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999997571421431	WITHOUT_CLASSIFICATION	2.4285785688523715E-7	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999999881583392	WITHOUT_CLASSIFICATION	1.1841660873074332E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994650135141	WITHOUT_CLASSIFICATION	5.349864859896985E-7	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995371909617	WITHOUT_CLASSIFICATION	4.628090382711164E-7	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.999838843273269	WITHOUT_CLASSIFICATION	1.6115672673105557E-4	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999973699541694	WITHOUT_CLASSIFICATION	2.6300458304477342E-6	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999989957348145	WITHOUT_CLASSIFICATION	1.0042651854849483E-6	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999996225358373	WITHOUT_CLASSIFICATION	3.7746416279237286E-7	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999990922011562	WITHOUT_CLASSIFICATION	9.077988437293491E-7	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999983554188934	WITHOUT_CLASSIFICATION	1.6445811065750453E-6	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.999975230494195	WITHOUT_CLASSIFICATION	2.4769505805020456E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999988046327606	WITHOUT_CLASSIFICATION	1.1953672395275502E-6	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999998190401029	WITHOUT_CLASSIFICATION	1.809598971418563E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999990690671484	WITHOUT_CLASSIFICATION	9.309328514262641E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999990690671484	WITHOUT_CLASSIFICATION	9.309328514262641E-7	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.99999848038265	WITHOUT_CLASSIFICATION	1.5196173499916212E-6	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999995974174366	WITHOUT_CLASSIFICATION	4.025825634296607E-7	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999997189395998	WITHOUT_CLASSIFICATION	2.810604002059784E-7	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999990155295608	WITHOUT_CLASSIFICATION	9.844704392025758E-7	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999554485903	WITHOUT_CLASSIFICATION	4.4551409679295166E-8	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999962939251107	WITHOUT_CLASSIFICATION	3.706074889334406E-6	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999994281918082	WITHOUT_CLASSIFICATION	5.718081918961762E-7	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999865457462732	WITHOUT_CLASSIFICATION	1.3454253726749506E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999987942811686	WITHOUT_CLASSIFICATION	1.2057188314966622E-6	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999998053350078	WITHOUT_CLASSIFICATION	1.946649921815397E-7	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999982129118747	WITHOUT_CLASSIFICATION	1.7870881253675128E-6	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.999892026792486	WITHOUT_CLASSIFICATION	1.0797320751404274E-4	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.999999886127056	WITHOUT_CLASSIFICATION	1.1387294396161334E-7	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.999994326564664	WITHOUT_CLASSIFICATION	5.673435335936709E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999988046327606	WITHOUT_CLASSIFICATION	1.1953672395275502E-6	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999554485903	WITHOUT_CLASSIFICATION	4.4551409679295166E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999992669614661	WITHOUT_CLASSIFICATION	7.330385337970855E-7	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999987764294788	WITHOUT_CLASSIFICATION	1.2235705213230837E-6	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999994287480553	WITHOUT_CLASSIFICATION	5.712519447064051E-7	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999987956764813	WITHOUT_CLASSIFICATION	1.204323518697537E-6	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999960427975668	WITHOUT_CLASSIFICATION	3.957202433187422E-6	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9999677249018599	WITHOUT_CLASSIFICATION	3.227509814002562E-5	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999998395946752	WITHOUT_CLASSIFICATION	1.604053248345207E-7	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999999195807627	WITHOUT_CLASSIFICATION	8.04192372636632E-8	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999853799730828	WITHOUT_CLASSIFICATION	1.4620026917180038E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999968570066322	WITHOUT_CLASSIFICATION	3.1429933678311058E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999996976786218	WITHOUT_CLASSIFICATION	3.0232137817601614E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999995069618636	WITHOUT_CLASSIFICATION	4.930381364467156E-7	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999184114942059	WITHOUT_CLASSIFICATION	8.158850579413607E-5	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9993470630160506	WITHOUT_CLASSIFICATION	6.529369839494457E-4	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9997892255401367	WITHOUT_CLASSIFICATION	2.1077445986327138E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9994619561652688	WITHOUT_CLASSIFICATION	5.3804383473129E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999988019851739	WITHOUT_CLASSIFICATION	1.1980148261315281E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.997231396823375	WITHOUT_CLASSIFICATION	0.0027686031766250094	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9997217831403841	WITHOUT_CLASSIFICATION	2.7821685961596545E-4	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999992091736558	WITHOUT_CLASSIFICATION	7.908263441312873E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999896844322451	WITHOUT_CLASSIFICATION	1.031556775496174E-5	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999997794247466	WITHOUT_CLASSIFICATION	2.2057525339884758E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999997219137143	WITHOUT_CLASSIFICATION	2.7808628570061705E-7	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999998785261506	WITHOUT_CLASSIFICATION	1.214738493885332E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999997047162446	WITHOUT_CLASSIFICATION	2.952837553929751E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999994824131386	WITHOUT_CLASSIFICATION	5.175868612491651E-7	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999936245750891	WITHOUT_CLASSIFICATION	6.375424910805266E-6	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9999598708087402	WITHOUT_CLASSIFICATION	4.012919125985983E-5	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999900281589611	WITHOUT_CLASSIFICATION	9.971841038857922E-6	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999699289089001	WITHOUT_CLASSIFICATION	3.00710910999227E-5	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999985869571419	WITHOUT_CLASSIFICATION	1.4130428580718467E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999987171305134	WITHOUT_CLASSIFICATION	1.2828694866238096E-6	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999997725937649	WITHOUT_CLASSIFICATION	2.2740623502454386E-7	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999991402024421	WITHOUT_CLASSIFICATION	8.597975580555159E-7	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999993303711261	WITHOUT_CLASSIFICATION	6.696288739592422E-7	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.99999944894002	WITHOUT_CLASSIFICATION	5.510599800014547E-7	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999990450874671	WITHOUT_CLASSIFICATION	9.549125328915355E-7	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.999999677302289	WITHOUT_CLASSIFICATION	3.226977110146816E-7	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999994603099402	WITHOUT_CLASSIFICATION	5.396900597021971E-7	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999979765334228	WITHOUT_CLASSIFICATION	2.023466577185418E-6	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9999959590959108	WITHOUT_CLASSIFICATION	4.040904089263672E-6	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999814830494116	WITHOUT_CLASSIFICATION	1.851695058831273E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9999998766673681	WITHOUT_CLASSIFICATION	1.2333263191474086E-7	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999985762990022	WITHOUT_CLASSIFICATION	1.4237009978307114E-6	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999896349377501	WITHOUT_CLASSIFICATION	1.0365062249839376E-5	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999932429624191	WITHOUT_CLASSIFICATION	6.7570375809726185E-6	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999976278097044	WITHOUT_CLASSIFICATION	2.372190295668688E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999989811574145	WITHOUT_CLASSIFICATION	1.0188425855759952E-6	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.99999333555859	WITHOUT_CLASSIFICATION	6.664441410028984E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9999995441238265	WITHOUT_CLASSIFICATION	4.5587617349055047E-7	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999577219298432	WITHOUT_CLASSIFICATION	4.2278070156758974E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999507815175	WITHOUT_CLASSIFICATION	4.921848247123271E-8	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9999938690662759	WITHOUT_CLASSIFICATION	6.1309337241773365E-6	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999961021036622	WITHOUT_CLASSIFICATION	3.897896337739854E-6	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999989856359042	WITHOUT_CLASSIFICATION	1.0143640958515526E-6	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.999939089054815	WITHOUT_CLASSIFICATION	6.0910945185023745E-5	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999997974632808	WITHOUT_CLASSIFICATION	2.025367191703796E-7	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999999445956298	WITHOUT_CLASSIFICATION	5.540437029833619E-8	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999988928315949	WITHOUT_CLASSIFICATION	1.1071684050743454E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999998600538053	WITHOUT_CLASSIFICATION	1.3994619477950435E-7	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999980634422627	WITHOUT_CLASSIFICATION	1.9365577373370947E-6	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999998794735115	WITHOUT_CLASSIFICATION	1.205264884214349E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999988928315949	WITHOUT_CLASSIFICATION	1.1071684050743454E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999990489500528	WITHOUT_CLASSIFICATION	9.510499473515137E-7	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999953037880067	WITHOUT_CLASSIFICATION	4.696211993320445E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999939628518156	WITHOUT_CLASSIFICATION	6.037148184452923E-6	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999999297399819	WITHOUT_CLASSIFICATION	7.026001808606893E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9969728178564402	WITHOUT_CLASSIFICATION	0.0030271821435597147	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999993827551202	WITHOUT_CLASSIFICATION	6.172448797243448E-7	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999992906537498	WITHOUT_CLASSIFICATION	7.093462501547138E-7	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999999382795298	WITHOUT_CLASSIFICATION	6.172047024166869E-8	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999996700403647	WITHOUT_CLASSIFICATION	3.2995963533785336E-7	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9999977890029585	WITHOUT_CLASSIFICATION	2.2109970414662555E-6	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9999994775793756	WITHOUT_CLASSIFICATION	5.224206243934225E-7	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999999609356565	WITHOUT_CLASSIFICATION	3.9064343574103836E-8	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999975754461756	WITHOUT_CLASSIFICATION	2.4245538243775173E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999963246663842	WITHOUT_CLASSIFICATION	3.675333615767284E-6	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999941571439	WITHOUT_CLASSIFICATION	5.84285603435365E-9	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.999999716688593	WITHOUT_CLASSIFICATION	2.833114070618765E-7	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999997277315095	WITHOUT_CLASSIFICATION	2.7226849053700837E-7	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999984474411747	WITHOUT_CLASSIFICATION	1.5525588253267538E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999705889468069	WITHOUT_CLASSIFICATION	2.9411053193076083E-5	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999993368062087	WITHOUT_CLASSIFICATION	6.63193791335996E-7	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999992192627394	WITHOUT_CLASSIFICATION	7.807372606379573E-7	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999959572750056	WITHOUT_CLASSIFICATION	4.04272499442899E-6	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999996890487872	WITHOUT_CLASSIFICATION	3.109512127776501E-7	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999994519596297	WITHOUT_CLASSIFICATION	5.480403703892592E-7	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999882082659	WITHOUT_CLASSIFICATION	1.1791734183113482E-8	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999998455473955	WITHOUT_CLASSIFICATION	1.5445260449502462E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999811642492	WITHOUT_CLASSIFICATION	1.88357508092761E-8	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999998901980137	WITHOUT_CLASSIFICATION	1.0980198635719588E-7	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.999615995602317	WITHOUT_CLASSIFICATION	3.8400439768294746E-4	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999993572282077	WITHOUT_CLASSIFICATION	6.427717923619918E-7	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999794517665966	WITHOUT_CLASSIFICATION	2.054823340333918E-5	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.999998059150801	WITHOUT_CLASSIFICATION	1.9408491990544502E-6	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999990461668306	WITHOUT_CLASSIFICATION	9.538331694363486E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999811642492	WITHOUT_CLASSIFICATION	1.88357508092761E-8	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999947333440216	WITHOUT_CLASSIFICATION	5.266655978489994E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999947333440216	WITHOUT_CLASSIFICATION	5.266655978489994E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999995314681296	WITHOUT_CLASSIFICATION	4.685318703884126E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999811642492	WITHOUT_CLASSIFICATION	1.88357508092761E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999811642492	WITHOUT_CLASSIFICATION	1.88357508092761E-8	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999991754584314	WITHOUT_CLASSIFICATION	8.245415686465848E-7	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999997537312569	WITHOUT_CLASSIFICATION	2.462687430885819E-7	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999992445810568	WITHOUT_CLASSIFICATION	7.554189430501574E-7	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999992445810568	WITHOUT_CLASSIFICATION	7.554189430501574E-7	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999998652711182	WITHOUT_CLASSIFICATION	1.3472888179354131E-7	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.999981245016101	WITHOUT_CLASSIFICATION	1.8754983898980617E-5	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999994881550127	WITHOUT_CLASSIFICATION	5.118449873015184E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999705889468069	WITHOUT_CLASSIFICATION	2.9411053193076083E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999705889468069	WITHOUT_CLASSIFICATION	2.9411053193076083E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999998652711182	WITHOUT_CLASSIFICATION	1.3472888179354131E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.999999959644707	WITHOUT_CLASSIFICATION	4.035529294155873E-8	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999996816925675	WITHOUT_CLASSIFICATION	3.1830743242879396E-7	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999943539337471	WITHOUT_CLASSIFICATION	5.646066252969126E-6	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999999890092317	WITHOUT_CLASSIFICATION	1.0990768366120493E-8	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999801992073749	WITHOUT_CLASSIFICATION	1.980079262512503E-5	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999932214938799	WITHOUT_CLASSIFICATION	6.778506120045276E-6	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999964667113084	WITHOUT_CLASSIFICATION	3.5332886917725714E-6	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999998506916943	WITHOUT_CLASSIFICATION	1.4930830571794682E-7	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.999993696655725	WITHOUT_CLASSIFICATION	6.303344274937452E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999996901464383	WITHOUT_CLASSIFICATION	3.098535617092017E-7	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999989641926	WITHOUT_CLASSIFICATION	1.0358074000453775E-6	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999996470518827	WITHOUT_CLASSIFICATION	3.529481172772972E-7	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9993994061994539	WITHOUT_CLASSIFICATION	6.005938005460812E-4	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999998995804743	WITHOUT_CLASSIFICATION	1.0041952577494713E-7	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999965444174952	WITHOUT_CLASSIFICATION	3.4555825049496875E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999995150816956	WITHOUT_CLASSIFICATION	4.849183044927351E-7	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.999998874075131	WITHOUT_CLASSIFICATION	1.1259248690500582E-6	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999620094636338	WITHOUT_CLASSIFICATION	3.7990536366212655E-5	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9999950727783512	WITHOUT_CLASSIFICATION	4.927221648824918E-6	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999906085903282	WITHOUT_CLASSIFICATION	9.391409671729507E-6	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9994338112315374	WITHOUT_CLASSIFICATION	5.66188768462528E-4	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999999323645723	WITHOUT_CLASSIFICATION	6.763542768813343E-8	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999977043611359	WITHOUT_CLASSIFICATION	2.295638864108409E-6	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.999697437143049	WITHOUT_CLASSIFICATION	3.0256285695092145E-4	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999993847255735	WITHOUT_CLASSIFICATION	6.152744264626155E-7	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.999998691509958	WITHOUT_CLASSIFICATION	1.3084900420286699E-6	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999995856067866	WITHOUT_CLASSIFICATION	4.1439321344307494E-7	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9998584262458778	WITHOUT_CLASSIFICATION	1.4157375412225502E-4	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999984081519498	WITHOUT_CLASSIFICATION	1.5918480501337984E-6	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999986506174552	WITHOUT_CLASSIFICATION	1.3493825448105239E-6	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9999916679962979	WITHOUT_CLASSIFICATION	8.332003702150171E-6	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9999949329721641	WITHOUT_CLASSIFICATION	5.067027835876089E-6	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999999794750273	WITHOUT_CLASSIFICATION	2.0524972693303526E-8	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999997469775195	WITHOUT_CLASSIFICATION	2.53022480474647E-7	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999999258100329	WITHOUT_CLASSIFICATION	7.418996713356553E-8	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999994260789739	WITHOUT_CLASSIFICATION	5.739210261050452E-7	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999981701801547	WITHOUT_CLASSIFICATION	1.8298198452019125E-6	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999841669154281	WITHOUT_CLASSIFICATION	1.583308457187599E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999998761862646	WITHOUT_CLASSIFICATION	1.2381373537077524E-7	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9999043696951947	WITHOUT_CLASSIFICATION	9.563030480528734E-5	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999990404953036	WITHOUT_CLASSIFICATION	9.59504696265185E-7	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999960519128497	WITHOUT_CLASSIFICATION	3.9480871503381395E-6	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999861760675053	WITHOUT_CLASSIFICATION	1.3823932494758325E-5	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999982066721232	WITHOUT_CLASSIFICATION	1.7933278767137383E-6	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999988938248435	WITHOUT_CLASSIFICATION	1.1061751564362054E-6	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9999742218036568	WITHOUT_CLASSIFICATION	2.5778196343281243E-5	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9998160696999258	WITHOUT_CLASSIFICATION	1.8393030007422288E-4	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999955326485986	WITHOUT_CLASSIFICATION	4.467351401345876E-6	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9999993025992857	WITHOUT_CLASSIFICATION	6.974007142154892E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999952109084429	WITHOUT_CLASSIFICATION	4.789091557070907E-6	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9999802535039357	WITHOUT_CLASSIFICATION	1.9746496064375575E-5	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999918875598136	WITHOUT_CLASSIFICATION	8.11244018641564E-6	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999995244671965	WITHOUT_CLASSIFICATION	4.755328034846871E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999652827800553	WITHOUT_CLASSIFICATION	3.4717219944788395E-5	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999904146405878	WITHOUT_CLASSIFICATION	9.585359412274541E-6	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999985576801074	WITHOUT_CLASSIFICATION	1.4423198927401091E-6	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999976907706872	WITHOUT_CLASSIFICATION	2.3092293128306245E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999559520601559	WITHOUT_CLASSIFICATION	4.404793984408742E-5	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999996599867028	WITHOUT_CLASSIFICATION	3.400132971693485E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999998438644082	WITHOUT_CLASSIFICATION	1.5613559170772807E-7	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999999950540981	WITHOUT_CLASSIFICATION	4.945901925989665E-9	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.999992273376797	WITHOUT_CLASSIFICATION	7.726623202905392E-6	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999827828141651	WITHOUT_CLASSIFICATION	1.721718583488382E-5	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.999999921632704	WITHOUT_CLASSIFICATION	7.836729594410442E-8	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.995795038510463	WITHOUT_CLASSIFICATION	0.004204961489536936	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999997562874215	WITHOUT_CLASSIFICATION	2.4371257843125755E-7	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999994630316783	WITHOUT_CLASSIFICATION	5.369683215740839E-7	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.999702348581056	WITHOUT_CLASSIFICATION	2.9765141894395566E-4	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9999994188228273	WITHOUT_CLASSIFICATION	5.811771726965159E-7	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9998817384205678	WITHOUT_CLASSIFICATION	1.1826157943225683E-4	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999758204226993	WITHOUT_CLASSIFICATION	2.4179577300715397E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999888390385883	WITHOUT_CLASSIFICATION	1.1160961411786233E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999927736049691	WITHOUT_CLASSIFICATION	7.226395031002148E-6	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9999481249864948	WITHOUT_CLASSIFICATION	5.1875013505104276E-5	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999997987665314	WITHOUT_CLASSIFICATION	2.0123346860017688E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999987351008605	WITHOUT_CLASSIFICATION	1.2648991395278812E-6	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9999987351008605	WITHOUT_CLASSIFICATION	1.2648991395278812E-6	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999993228645776	WITHOUT_CLASSIFICATION	6.771354223320615E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9998684468872686	WITHOUT_CLASSIFICATION	1.3155311273136482E-4	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.999998894881484	WITHOUT_CLASSIFICATION	1.105118516050521E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9893616918933915	WITHOUT_CLASSIFICATION	0.010638308106608476	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999947454670983	WITHOUT_CLASSIFICATION	5.25453290166442E-6	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999998744394025	WITHOUT_CLASSIFICATION	1.2556059755053938E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9975780652423978	WITHOUT_CLASSIFICATION	0.0024219347576022714	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999992815809672	WITHOUT_CLASSIFICATION	7.184190328388179E-7	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.99994904291291	WITHOUT_CLASSIFICATION	5.095708709006511E-5	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999999879411411	WITHOUT_CLASSIFICATION	1.2058858910971554E-8	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999999755082235	WITHOUT_CLASSIFICATION	2.4491776550857445E-8	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999996595802413	WITHOUT_CLASSIFICATION	3.4041975866988744E-7	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999999219551483	WITHOUT_CLASSIFICATION	7.804485169616932E-8	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999999650834693	WITHOUT_CLASSIFICATION	3.491653059038775E-8	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999999925038084	WITHOUT_CLASSIFICATION	7.496191640142185E-9	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999960354739077	WITHOUT_CLASSIFICATION	3.964526092247714E-6	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999975877763144	WITHOUT_CLASSIFICATION	2.4122236855847096E-6	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999999353677187	WITHOUT_CLASSIFICATION	6.463228124770361E-8	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9998310470524009	WITHOUT_CLASSIFICATION	1.689529475991263E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.999977441018776	WITHOUT_CLASSIFICATION	2.2558981224107903E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999925936919465	WITHOUT_CLASSIFICATION	7.406308053642043E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999437489224465	WITHOUT_CLASSIFICATION	5.625107755340447E-5	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999984574729053	WITHOUT_CLASSIFICATION	1.5425270947571071E-6	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999982627792722	WITHOUT_CLASSIFICATION	1.7372207279091685E-6	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9997784983174945	WITHOUT_CLASSIFICATION	2.2150168250544371E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999897091943943	WITHOUT_CLASSIFICATION	1.0290805605616006E-5	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9998432137020195	WITHOUT_CLASSIFICATION	1.5678629798047784E-4	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999952353772268	WITHOUT_CLASSIFICATION	4.764622773253559E-6	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999847823338882	WITHOUT_CLASSIFICATION	1.5217666111794604E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.999977441018776	WITHOUT_CLASSIFICATION	2.2558981224107903E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999437489224465	WITHOUT_CLASSIFICATION	5.625107755340447E-5	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999936862050729	WITHOUT_CLASSIFICATION	6.313794927192379E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999989368309832	WITHOUT_CLASSIFICATION	1.0631690167331876E-6	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999961705203233	WITHOUT_CLASSIFICATION	3.829479676745596E-6	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9451025140918725	WITHOUT_CLASSIFICATION	0.05489748590812749	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999994047056553	WITHOUT_CLASSIFICATION	5.952943446773552E-7	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999989693242867	WITHOUT_CLASSIFICATION	1.030675713335782E-6	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999986126892126	WITHOUT_CLASSIFICATION	1.3873107872911344E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9999158471609265	WITHOUT_CLASSIFICATION	8.415283907350815E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999991984859291	WITHOUT_CLASSIFICATION	8.015140708255391E-7	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999994171908446	WITHOUT_CLASSIFICATION	5.828091553094546E-7	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.999993229482339	WITHOUT_CLASSIFICATION	6.770517660964553E-6	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999994159704244	WITHOUT_CLASSIFICATION	5.840295755428409E-7	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999927863079106	WITHOUT_CLASSIFICATION	7.213692089490901E-6	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9999992030722172	WITHOUT_CLASSIFICATION	7.96927782784622E-7	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999996246989402	WITHOUT_CLASSIFICATION	3.7530105972400116E-7	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999991795826182	WITHOUT_CLASSIFICATION	8.204173818074111E-7	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999827810106393	WITHOUT_CLASSIFICATION	1.7218989360653655E-5	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9999978590703492	WITHOUT_CLASSIFICATION	2.1409296507063013E-6	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999998935304786	WITHOUT_CLASSIFICATION	1.0646952142983785E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999998455473955	WITHOUT_CLASSIFICATION	1.5445260449502462E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.999992023484	WITHOUT_CLASSIFICATION	7.976515999948258E-6	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999999427917078	WITHOUT_CLASSIFICATION	5.7208292150637344E-8	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999996512575656	WITHOUT_CLASSIFICATION	3.487424342914912E-7	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999984453037322	WITHOUT_CLASSIFICATION	1.5546962678107795E-6	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.999995410098494	WITHOUT_CLASSIFICATION	4.589901505944513E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.999780640157478	WITHOUT_CLASSIFICATION	2.1935984252198073E-4	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999919199619449	WITHOUT_CLASSIFICATION	8.08003805512975E-6	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999982494551523	WITHOUT_CLASSIFICATION	1.750544847787494E-6	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999998498266095	WITHOUT_CLASSIFICATION	1.5017339055007436E-7	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.999999117545424	WITHOUT_CLASSIFICATION	8.824545760312998E-7	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999983114042277	WITHOUT_CLASSIFICATION	1.6885957723676205E-6	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999880122781256	WITHOUT_CLASSIFICATION	1.1987721874402092E-5	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999995751271579	WITHOUT_CLASSIFICATION	4.2487284203844154E-7	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999996486875945	WITHOUT_CLASSIFICATION	3.51312405536449E-7	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999998754274515	WITHOUT_CLASSIFICATION	1.2457254856548975E-7	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999950617871162	WITHOUT_CLASSIFICATION	4.938212883725174E-6	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999999076311841	WITHOUT_CLASSIFICATION	9.236881591054775E-8	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999999778042886	WITHOUT_CLASSIFICATION	2.21957113138408E-8	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999996920302919	WITHOUT_CLASSIFICATION	3.079697080354571E-7	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999983179815474	WITHOUT_CLASSIFICATION	1.68201845258325E-6	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.999997619397322	WITHOUT_CLASSIFICATION	2.380602678100563E-6	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9998886301026009	WITHOUT_CLASSIFICATION	1.1136989739907493E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9987699341504426	WITHOUT_CLASSIFICATION	0.001230065849557439	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999954637133844	WITHOUT_CLASSIFICATION	4.536286615571409E-6	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999980573730529	WITHOUT_CLASSIFICATION	1.9426269471135514E-6	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9999789126287882	WITHOUT_CLASSIFICATION	2.1087371211727908E-5	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999990409462919	WITHOUT_CLASSIFICATION	9.590537080769333E-7	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999547515774226	WITHOUT_CLASSIFICATION	4.524842257731595E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999985297113431	WITHOUT_CLASSIFICATION	1.4702886569517754E-6	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999936560276819	WITHOUT_CLASSIFICATION	6.343972318161428E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999956868909302	WITHOUT_CLASSIFICATION	4.313109069795465E-6	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999999541588712	WITHOUT_CLASSIFICATION	4.5841128879426823E-8	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999999743946635	WITHOUT_CLASSIFICATION	2.5605336489328973E-8	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.999999792162587	WITHOUT_CLASSIFICATION	2.0783741300693376E-7	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999999724631518	WITHOUT_CLASSIFICATION	2.7536848285197467E-8	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999948660795186	WITHOUT_CLASSIFICATION	5.13392048140732E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999928306054482	WITHOUT_CLASSIFICATION	7.169394551710438E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999949534022581	WITHOUT_CLASSIFICATION	5.046597741955957E-6	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.999999566107022	WITHOUT_CLASSIFICATION	4.3389297799490486E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999984474411747	WITHOUT_CLASSIFICATION	1.5525588253267538E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999964762181492	WITHOUT_CLASSIFICATION	3.5237818506642043E-6	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999969458300464	WITHOUT_CLASSIFICATION	3.054169953569235E-6	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999997609706622	WITHOUT_CLASSIFICATION	2.3902933784400705E-7	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999997609706622	WITHOUT_CLASSIFICATION	2.3902933784400705E-7	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999988118636288	WITHOUT_CLASSIFICATION	1.1881363712486501E-6	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999957055708488	WITHOUT_CLASSIFICATION	4.2944291511469715E-6	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999999984137395	WITHOUT_CLASSIFICATION	1.5862604476575955E-9	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9999984303525338	WITHOUT_CLASSIFICATION	1.569647466176304E-6	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999970296088911	WITHOUT_CLASSIFICATION	2.9703911088571142E-6	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999982522991514	WITHOUT_CLASSIFICATION	1.7477008485789594E-6	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.999999988750159	WITHOUT_CLASSIFICATION	1.1249840973264563E-8	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9998565354521949	WITHOUT_CLASSIFICATION	1.4346454780511038E-4	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999981768326398	WITHOUT_CLASSIFICATION	1.8231673601450238E-6	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9999999978860669	WITHOUT_CLASSIFICATION	2.1139331562656885E-9	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999998042424201	WITHOUT_CLASSIFICATION	1.9575757995194934E-7	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999999721076818	WITHOUT_CLASSIFICATION	2.7892318195685235E-8	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999999889998928	WITHOUT_CLASSIFICATION	1.1000107154240152E-8	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999983245153462	WITHOUT_CLASSIFICATION	1.6754846537328781E-6	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9998968175353514	WITHOUT_CLASSIFICATION	1.0318246464856106E-4	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999984706765481	WITHOUT_CLASSIFICATION	1.5293234519468E-6	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9996101761017064	WITHOUT_CLASSIFICATION	3.898238982935601E-4	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999997411067862	WITHOUT_CLASSIFICATION	2.5889321367704415E-7	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999992788954003	WITHOUT_CLASSIFICATION	7.211045996712597E-7	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999946962313313	WITHOUT_CLASSIFICATION	5.303768668672849E-6	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999979062147251	WITHOUT_CLASSIFICATION	2.0937852749032098E-6	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999939599437884	WITHOUT_CLASSIFICATION	6.040056211663646E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999999500991857	WITHOUT_CLASSIFICATION	4.990081419770092E-8	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999999744560265	WITHOUT_CLASSIFICATION	2.5543973542425144E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999990478879892	WITHOUT_CLASSIFICATION	9.521120108256266E-7	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9999994261937046	WITHOUT_CLASSIFICATION	5.738062953828094E-7	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999939599437884	WITHOUT_CLASSIFICATION	6.040056211663646E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999891925803119	WITHOUT_CLASSIFICATION	1.0807419688174367E-5	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9993589394623043	WITHOUT_CLASSIFICATION	6.410605376958897E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999985466741841	WITHOUT_CLASSIFICATION	1.4533258158762732E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999904079397507	WITHOUT_CLASSIFICATION	9.592060249246412E-6	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.999993186131748	WITHOUT_CLASSIFICATION	6.8138682519207886E-6	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999985082473875	WITHOUT_CLASSIFICATION	1.4917526125499176E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999989420827197	WITHOUT_CLASSIFICATION	1.0579172802454505E-6	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999998105377345	WITHOUT_CLASSIFICATION	1.8946226543912243E-7	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999950099398265	WITHOUT_CLASSIFICATION	4.990060173503796E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999998490700404	WITHOUT_CLASSIFICATION	1.5092995958740123E-7	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999969131002564	WITHOUT_CLASSIFICATION	3.0868997434984057E-6	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999959249782803	WITHOUT_CLASSIFICATION	4.075021719833235E-6	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999996888807478	WITHOUT_CLASSIFICATION	3.111192522338579E-7	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.999999900378379	WITHOUT_CLASSIFICATION	9.962162092989446E-8	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999992879196197	WITHOUT_CLASSIFICATION	7.120803803828262E-7	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999999546509823	WITHOUT_CLASSIFICATION	4.5349017629331266E-8	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999995678600522	WITHOUT_CLASSIFICATION	4.3213994782927635E-7	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999999806753028	WITHOUT_CLASSIFICATION	1.9324697161589037E-8	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999997474519904	WITHOUT_CLASSIFICATION	2.525480096293818E-7	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999979855204745	WITHOUT_CLASSIFICATION	2.014479525414565E-6	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999994329612862	WITHOUT_CLASSIFICATION	5.670387137782807E-7	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.999999995252521	WITHOUT_CLASSIFICATION	4.747478994152832E-9	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999998389769754	WITHOUT_CLASSIFICATION	1.610230245885036E-7	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999999687992486	WITHOUT_CLASSIFICATION	3.120075142991609E-8	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999991376006532	WITHOUT_CLASSIFICATION	8.623993469522836E-7	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999997796952126	WITHOUT_CLASSIFICATION	2.2030478744012685E-7	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999997876092618	WITHOUT_CLASSIFICATION	2.123907381240261E-7	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999667227235708	WITHOUT_CLASSIFICATION	3.3277276429171776E-5	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999967961450043	WITHOUT_CLASSIFICATION	3.2038549958167827E-6	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.999954853295746	WITHOUT_CLASSIFICATION	4.514670425395289E-5	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999930494645342	WITHOUT_CLASSIFICATION	6.950535465821179E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999983599871394	WITHOUT_CLASSIFICATION	1.640012860567329E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999888909172292	WITHOUT_CLASSIFICATION	1.110908277070751E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.999993186131748	WITHOUT_CLASSIFICATION	6.8138682519207886E-6	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999985082473875	WITHOUT_CLASSIFICATION	1.4917526125499176E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999989420827197	WITHOUT_CLASSIFICATION	1.0579172802454505E-6	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999950099398265	WITHOUT_CLASSIFICATION	4.990060173503796E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999998490700404	WITHOUT_CLASSIFICATION	1.5092995958740123E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.998740382460636	WITHOUT_CLASSIFICATION	0.00125961753936396	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999999984600555	WITHOUT_CLASSIFICATION	1.5399444508016252E-9	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999997217185078	WITHOUT_CLASSIFICATION	2.78281492192845E-7	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999903203349995	WITHOUT_CLASSIFICATION	9.679665000568024E-6	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9998392651994802	WITHOUT_CLASSIFICATION	1.607348005196999E-4	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999959951613691	WITHOUT_CLASSIFICATION	4.004838630940461E-6	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999997979181948	WITHOUT_CLASSIFICATION	2.020818052979518E-7	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.99999898426832	WITHOUT_CLASSIFICATION	1.015731679987575E-6	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999984775312973	WITHOUT_CLASSIFICATION	1.522468702660773E-6	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9999998166367262	WITHOUT_CLASSIFICATION	1.8336327378047636E-7	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999964836478153	WITHOUT_CLASSIFICATION	3.5163521846459872E-6	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999971880882167	WITHOUT_CLASSIFICATION	2.81191178325582E-6	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9999914948958625	WITHOUT_CLASSIFICATION	8.5051041375448E-6	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999999106794686	WITHOUT_CLASSIFICATION	8.932053131938778E-8	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999993798143134	WITHOUT_CLASSIFICATION	6.201856866291893E-7	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999989178194293	WITHOUT_CLASSIFICATION	1.0821805706631135E-6	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.999999967284793	WITHOUT_CLASSIFICATION	3.2715206989308123E-8	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999995362955267	WITHOUT_CLASSIFICATION	4.6370447328188836E-7	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999999460068989	WITHOUT_CLASSIFICATION	5.399310114764153E-8	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.999997557938362	WITHOUT_CLASSIFICATION	2.442061638105212E-6	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.999998193023976	WITHOUT_CLASSIFICATION	1.8069760240451124E-6	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999946649138602	WITHOUT_CLASSIFICATION	5.335086139843068E-6	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999984992593379	WITHOUT_CLASSIFICATION	1.5007406620279476E-6	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.999999389802382	WITHOUT_CLASSIFICATION	6.101976178761924E-7	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999996251426105	WITHOUT_CLASSIFICATION	3.7485738952743017E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999577219298432	WITHOUT_CLASSIFICATION	4.2278070156758974E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.999780640157478	WITHOUT_CLASSIFICATION	2.1935984252198073E-4	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999956868909302	WITHOUT_CLASSIFICATION	4.313109069795465E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999998490700404	WITHOUT_CLASSIFICATION	1.5092995958740123E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999999884562425	WITHOUT_CLASSIFICATION	1.1543757390578717E-8	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999995883698142	WITHOUT_CLASSIFICATION	4.1163018591099073E-7	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999970494811	WITHOUT_CLASSIFICATION	2.950519038025998E-9	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999592671771451	WITHOUT_CLASSIFICATION	4.073282285481551E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9999592671771451	WITHOUT_CLASSIFICATION	4.073282285481551E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999710931103	WITHOUT_CLASSIFICATION	2.890688969723459E-8	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999866312143366	WITHOUT_CLASSIFICATION	1.336878566347088E-5	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999989610337934	WITHOUT_CLASSIFICATION	1.0389662066076446E-6	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999987010984662	WITHOUT_CLASSIFICATION	1.2989015337286668E-6	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9999941232078494	WITHOUT_CLASSIFICATION	5.876792150563491E-6	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9997624274949557	WITHOUT_CLASSIFICATION	2.3757250504435423E-4	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999988954548057	WITHOUT_CLASSIFICATION	1.104545194304271E-6	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999976051267525	WITHOUT_CLASSIFICATION	2.3948732473820294E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.999960618068657	WITHOUT_CLASSIFICATION	3.9381931343002266E-5	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999991527864098	WITHOUT_CLASSIFICATION	8.472135902160658E-7	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999977959696944	WITHOUT_CLASSIFICATION	2.204030305678905E-6	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999987041332927	WITHOUT_CLASSIFICATION	1.2958667072128026E-6	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9998762002491609	WITHOUT_CLASSIFICATION	1.2379975083911371E-4	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9999476021151678	WITHOUT_CLASSIFICATION	5.239788483220588E-5	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9999718761561717	WITHOUT_CLASSIFICATION	2.812384382832116E-5	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999990649848792	WITHOUT_CLASSIFICATION	9.350151206453574E-7	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999995493066233	WITHOUT_CLASSIFICATION	4.5069337660884933E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999334485068	WITHOUT_CLASSIFICATION	6.655149325664834E-8	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999974591856243	WITHOUT_CLASSIFICATION	2.540814375674616E-6	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999994842950919	WITHOUT_CLASSIFICATION	5.15704908114883E-7	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999990649848792	WITHOUT_CLASSIFICATION	9.350151206453574E-7	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999977154196834	WITHOUT_CLASSIFICATION	2.284580316647929E-6	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999999211917843	WITHOUT_CLASSIFICATION	7.880821572938743E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999999211917843	WITHOUT_CLASSIFICATION	7.880821572938743E-8	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999334485068	WITHOUT_CLASSIFICATION	6.655149325664834E-8	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999992616868348	WITHOUT_CLASSIFICATION	7.383131650511968E-7	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999986362841241	WITHOUT_CLASSIFICATION	1.3637158759016863E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999986362841241	WITHOUT_CLASSIFICATION	1.3637158759016863E-6	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.999999558436926	WITHOUT_CLASSIFICATION	4.415630739228581E-7	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999981654226509	WITHOUT_CLASSIFICATION	1.8345773491449926E-6	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9992805107353551	WITHOUT_CLASSIFICATION	7.194892646449822E-4	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999985725765942	WITHOUT_CLASSIFICATION	1.427423405765656E-6	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9999977335731736	WITHOUT_CLASSIFICATION	2.266426826466246E-6	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999751085045832	WITHOUT_CLASSIFICATION	2.4891495416895116E-5	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9999985027325017	WITHOUT_CLASSIFICATION	1.4972674983139567E-6	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999712579987605	WITHOUT_CLASSIFICATION	2.874200123949899E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999869559183955	WITHOUT_CLASSIFICATION	1.3044081604632032E-5	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999807515412554	WITHOUT_CLASSIFICATION	1.92484587445259E-5	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999998417345864	WITHOUT_CLASSIFICATION	1.582654135109454E-7	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999998456394559	WITHOUT_CLASSIFICATION	1.5436054413450772E-7	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9997865278550666	WITHOUT_CLASSIFICATION	2.1347214493331438E-4	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999965224740789	WITHOUT_CLASSIFICATION	3.4775259210221436E-6	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.999993391727361	WITHOUT_CLASSIFICATION	6.6082726390252275E-6	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999996367549264	WITHOUT_CLASSIFICATION	3.632450736684134E-7	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999998895986731	WITHOUT_CLASSIFICATION	1.1040132677675252E-7	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.999967054216931	WITHOUT_CLASSIFICATION	3.294578306898912E-5	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9997519296814273	WITHOUT_CLASSIFICATION	2.4807031857265976E-4	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9999704697161849	WITHOUT_CLASSIFICATION	2.9530283815196046E-5	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999931507297724	WITHOUT_CLASSIFICATION	6.849270227644812E-6	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999978442161758	WITHOUT_CLASSIFICATION	2.1557838241972007E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.999988285134023	WITHOUT_CLASSIFICATION	1.1714865976999617E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.999960618068657	WITHOUT_CLASSIFICATION	3.9381931343002266E-5	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999997064966508	WITHOUT_CLASSIFICATION	2.9350334917226136E-7	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.999999557611316	WITHOUT_CLASSIFICATION	4.4238868393832295E-7	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999999513546733	WITHOUT_CLASSIFICATION	4.864532659079815E-8	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999976756793146	WITHOUT_CLASSIFICATION	2.324320685402431E-6	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.999974018929826	WITHOUT_CLASSIFICATION	2.598107017405354E-5	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999971487229586	WITHOUT_CLASSIFICATION	2.8512770412494713E-6	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999866573318285	WITHOUT_CLASSIFICATION	1.3342668171649415E-5	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999995590391997	WITHOUT_CLASSIFICATION	4.409608002884735E-7	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999979487655242	WITHOUT_CLASSIFICATION	2.051234475805832E-6	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999864124624972	WITHOUT_CLASSIFICATION	1.3587537502699727E-5	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.999984023193395	WITHOUT_CLASSIFICATION	1.5976806605092195E-5	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999987291419127	WITHOUT_CLASSIFICATION	1.270858087281126E-6	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9999885951390249	WITHOUT_CLASSIFICATION	1.1404860975130858E-5	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999831303769618	WITHOUT_CLASSIFICATION	1.6869623038157785E-5	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999919568008981	WITHOUT_CLASSIFICATION	8.043199101886112E-6	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999999567018578	WITHOUT_CLASSIFICATION	4.329814213729153E-8	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.999999977382283	WITHOUT_CLASSIFICATION	2.2617716993805794E-8	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999864629346737	WITHOUT_CLASSIFICATION	1.3537065326169363E-5	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.999538155174347	WITHOUT_CLASSIFICATION	4.6184482565304506E-4	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999466005073442	WITHOUT_CLASSIFICATION	5.3399492655751746E-5	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.999998045365256	WITHOUT_CLASSIFICATION	1.954634743907527E-6	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999620389021867	WITHOUT_CLASSIFICATION	3.796109781326613E-5	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9998380738255472	WITHOUT_CLASSIFICATION	1.6192617445285272E-4	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9999971011477612	WITHOUT_CLASSIFICATION	2.898852238788858E-6	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999793951847656	WITHOUT_CLASSIFICATION	2.0604815234393136E-5	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999932305664624	WITHOUT_CLASSIFICATION	6.769433537547606E-6	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999999116952935	WITHOUT_CLASSIFICATION	8.830470657892308E-8	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999996263871912	WITHOUT_CLASSIFICATION	3.7361280883364473E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999994481522685	WITHOUT_CLASSIFICATION	5.51847731600098E-7	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999976084255232	WITHOUT_CLASSIFICATION	2.3915744767088915E-6	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.999952973164221	WITHOUT_CLASSIFICATION	4.7026835779036406E-5	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999916814537144	WITHOUT_CLASSIFICATION	8.318546285494462E-6	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9999825387102124	WITHOUT_CLASSIFICATION	1.7461289787617674E-5	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9996224259518977	WITHOUT_CLASSIFICATION	3.775740481023317E-4	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9999759636601868	WITHOUT_CLASSIFICATION	2.4036339813232537E-5	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999977477690565	WITHOUT_CLASSIFICATION	2.2522309434812955E-6	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999839818701092	WITHOUT_CLASSIFICATION	1.6018129890799893E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9999839818701092	WITHOUT_CLASSIFICATION	1.6018129890799893E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999995749610421	WITHOUT_CLASSIFICATION	4.250389578281021E-7	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999993267845301	WITHOUT_CLASSIFICATION	6.732154699035662E-7	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999999556829371	WITHOUT_CLASSIFICATION	4.431706290568551E-8	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9998153377604414	WITHOUT_CLASSIFICATION	1.8466223955850608E-4	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999999410800616	WITHOUT_CLASSIFICATION	5.8919938229104844E-8	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9999998823048933	WITHOUT_CLASSIFICATION	1.1769510657899274E-7	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999710943758873	WITHOUT_CLASSIFICATION	2.8905624112718403E-5	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999863491160206	WITHOUT_CLASSIFICATION	1.3650883979390184E-5	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.999793317384681	WITHOUT_CLASSIFICATION	2.0668261531897557E-4	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999998548458379	WITHOUT_CLASSIFICATION	1.4515416220189873E-7	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.999998844889977	WITHOUT_CLASSIFICATION	1.1551100229421555E-6	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999998389761328	WITHOUT_CLASSIFICATION	1.6102386720394568E-7	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999998866274286	WITHOUT_CLASSIFICATION	1.1337257137136752E-7	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999804811160878	WITHOUT_CLASSIFICATION	1.95188839121983E-5	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999995850427162	WITHOUT_CLASSIFICATION	4.1495728370488366E-7	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999821976147755	WITHOUT_CLASSIFICATION	1.7802385224507336E-5	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999992857726521	WITHOUT_CLASSIFICATION	7.142273480165436E-7	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999992524235457	WITHOUT_CLASSIFICATION	7.47576454389601E-7	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999196191614493	WITHOUT_CLASSIFICATION	8.038083855062603E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999985523229544	WITHOUT_CLASSIFICATION	1.4476770454719729E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999444334205053	WITHOUT_CLASSIFICATION	5.556657949471282E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999444334205053	WITHOUT_CLASSIFICATION	5.556657949471282E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999993715533438	WITHOUT_CLASSIFICATION	6.284466561406018E-7	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999999629701425	WITHOUT_CLASSIFICATION	3.702985750751484E-8	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999999931480446	WITHOUT_CLASSIFICATION	6.8519554498563135E-9	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999987996837056	WITHOUT_CLASSIFICATION	1.2003162943722278E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9997147975434776	WITHOUT_CLASSIFICATION	2.852024565224536E-4	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.999871982357409	WITHOUT_CLASSIFICATION	1.2801764259103016E-4	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999993506416508	WITHOUT_CLASSIFICATION	6.493583491786528E-7	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.999256039837371	WITHOUT_CLASSIFICATION	7.439601626291112E-4	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9999114259813854	WITHOUT_CLASSIFICATION	8.857401861460569E-5	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9993466783333305	WITHOUT_CLASSIFICATION	6.533216666695947E-4	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999992154076535	WITHOUT_CLASSIFICATION	7.845923466273785E-7	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9996765619376762	WITHOUT_CLASSIFICATION	3.234380623237933E-4	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.999976371448869	WITHOUT_CLASSIFICATION	2.3628551131041488E-5	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999998267698199	WITHOUT_CLASSIFICATION	1.7323018004022304E-7	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999997026098953	WITHOUT_CLASSIFICATION	2.9739010466847125E-7	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999976389533953	WITHOUT_CLASSIFICATION	2.361046604636104E-6	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999936283527437	WITHOUT_CLASSIFICATION	6.3716472562305814E-6	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999447862196756	WITHOUT_CLASSIFICATION	5.521378032429247E-5	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999964314074538	WITHOUT_CLASSIFICATION	3.5685925462777115E-6	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9999432505438428	WITHOUT_CLASSIFICATION	5.674945615733517E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999906085903282	WITHOUT_CLASSIFICATION	9.391409671729507E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999989368309832	WITHOUT_CLASSIFICATION	1.0631690167331876E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9997865069843437	WITHOUT_CLASSIFICATION	2.1349301565642246E-4	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999999634116311	WITHOUT_CLASSIFICATION	3.6588368768391855E-8	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9999799772312452	WITHOUT_CLASSIFICATION	2.002276875476077E-5	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.999999736974391	WITHOUT_CLASSIFICATION	2.6302560894871814E-7	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999998578371402	WITHOUT_CLASSIFICATION	1.421628599401613E-7	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999855677065824	WITHOUT_CLASSIFICATION	1.4432293417478853E-5	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999971791290662	WITHOUT_CLASSIFICATION	2.8208709338973318E-6	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999999990927095	WITHOUT_CLASSIFICATION	9.072903122481603E-10	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.999987157352445	WITHOUT_CLASSIFICATION	1.2842647554957639E-5	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999835347867098	WITHOUT_CLASSIFICATION	1.6465213290170227E-5	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.999999945052269	WITHOUT_CLASSIFICATION	5.494773098426695E-8	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.999999945052269	WITHOUT_CLASSIFICATION	5.494773098426695E-8	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9998424895331322	WITHOUT_CLASSIFICATION	1.5751046686793093E-4	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9999244627814965	WITHOUT_CLASSIFICATION	7.553721850354304E-5	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9999995309082259	WITHOUT_CLASSIFICATION	4.690917741090737E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999647313584099	WITHOUT_CLASSIFICATION	3.526864159004522E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999996485307187	WITHOUT_CLASSIFICATION	3.5146928132165245E-7	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999991186143522	WITHOUT_CLASSIFICATION	8.813856478180805E-7	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9999834919155305	WITHOUT_CLASSIFICATION	1.6508084469504872E-5	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999960172296262	WITHOUT_CLASSIFICATION	3.982770373824587E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999930318639647	WITHOUT_CLASSIFICATION	6.9681360353528195E-6	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999998308946678	WITHOUT_CLASSIFICATION	1.6910533214700926E-7	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.999999537749059	WITHOUT_CLASSIFICATION	4.622509408724778E-7	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999959287638834	WITHOUT_CLASSIFICATION	4.071236116606973E-6	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999998304128473	WITHOUT_CLASSIFICATION	1.695871526926417E-7	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999959545008426	WITHOUT_CLASSIFICATION	4.04549915743192E-6	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999999808275466	WITHOUT_CLASSIFICATION	1.9172453458699747E-8	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999983763806898	WITHOUT_CLASSIFICATION	1.6236193101689972E-6	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9999892048511447	WITHOUT_CLASSIFICATION	1.0795148855231412E-5	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9993781440233142	WITHOUT_CLASSIFICATION	6.218559766857974E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999507815175	WITHOUT_CLASSIFICATION	4.921848247123271E-8	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999989811574145	WITHOUT_CLASSIFICATION	1.0188425855759952E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.999960618068657	WITHOUT_CLASSIFICATION	3.9381931343002266E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999999967329996	WITHOUT_CLASSIFICATION	3.267000384088457E-9	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9999741762391641	WITHOUT_CLASSIFICATION	2.582376083594934E-5	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999662969376651	WITHOUT_CLASSIFICATION	3.370306233490561E-5	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9993364518932367	WITHOUT_CLASSIFICATION	6.635481067631776E-4	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9999953999402086	WITHOUT_CLASSIFICATION	4.600059791421634E-6	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999995275336968	WITHOUT_CLASSIFICATION	4.7246630317917455E-7	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999972832331268	WITHOUT_CLASSIFICATION	2.716766873204877E-6	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999994713270032	WITHOUT_CLASSIFICATION	5.286729968350926E-7	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999935144477728	WITHOUT_CLASSIFICATION	6.485552227191066E-6	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.999998068853459	WITHOUT_CLASSIFICATION	1.931146540925408E-6	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.999999900382448	WITHOUT_CLASSIFICATION	9.961755188934165E-8	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.999999023792248	WITHOUT_CLASSIFICATION	9.762077520242127E-7	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999992222706099	WITHOUT_CLASSIFICATION	7.777293901551261E-7	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9999944292765057	WITHOUT_CLASSIFICATION	5.570723494202144E-6	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999975483788184	WITHOUT_CLASSIFICATION	2.4516211816809247E-6	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999998275627653	WITHOUT_CLASSIFICATION	1.7243723471771968E-7	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999998659891506	WITHOUT_CLASSIFICATION	1.3401084932254057E-7	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999999255677327	WITHOUT_CLASSIFICATION	7.443226734322654E-8	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999998490700404	WITHOUT_CLASSIFICATION	1.5092995958740123E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.999992047779349	WITHOUT_CLASSIFICATION	7.95222065102471E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999989762397737	WITHOUT_CLASSIFICATION	1.0237602261884923E-6	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9999055652073761	WITHOUT_CLASSIFICATION	9.443479262402692E-5	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999837474588977	WITHOUT_CLASSIFICATION	1.6252541102246678E-5	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999988575056697	WITHOUT_CLASSIFICATION	1.1424943302249989E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999999894393803	WITHOUT_CLASSIFICATION	1.0560619731339613E-8	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999994244913006	WITHOUT_CLASSIFICATION	5.755086993923992E-7	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999988137618933	WITHOUT_CLASSIFICATION	1.186238106793752E-6	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999994094548172	WITHOUT_CLASSIFICATION	5.905451827745521E-7	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999979065223624	WITHOUT_CLASSIFICATION	2.093477637606062E-6	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999994450091563	WITHOUT_CLASSIFICATION	5.549908438464657E-7	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999967832845521	WITHOUT_CLASSIFICATION	3.2167154479617164E-6	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999995328524656	WITHOUT_CLASSIFICATION	4.6714753449978877E-7	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999996826732389	WITHOUT_CLASSIFICATION	3.1732676104262566E-7	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999998528642455	WITHOUT_CLASSIFICATION	1.4713575445222748E-7	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999989746822974	WITHOUT_CLASSIFICATION	1.0253177026005065E-6	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999702160807925	WITHOUT_CLASSIFICATION	2.9783919207466263E-5	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999999928589319	WITHOUT_CLASSIFICATION	7.141068003823842E-9	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999992947964839	WITHOUT_CLASSIFICATION	7.05203516152617E-7	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999560317193	WITHOUT_CLASSIFICATION	4.396828075486442E-8	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999560317193	WITHOUT_CLASSIFICATION	4.396828075486442E-8	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999929313142736	WITHOUT_CLASSIFICATION	7.068685726530454E-6	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9999889207415579	WITHOUT_CLASSIFICATION	1.1079258442195504E-5	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999826013101566	WITHOUT_CLASSIFICATION	1.7398689843323617E-5	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9999841671738601	WITHOUT_CLASSIFICATION	1.5832826139933844E-5	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999933663833452	WITHOUT_CLASSIFICATION	6.633616654664254E-6	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999866228712058	WITHOUT_CLASSIFICATION	1.337712879417127E-5	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9997263994291239	WITHOUT_CLASSIFICATION	2.736005708760337E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999991716688073	WITHOUT_CLASSIFICATION	8.283311928060677E-7	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999991716688073	WITHOUT_CLASSIFICATION	8.283311928060677E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999998531417997	WITHOUT_CLASSIFICATION	1.4685820014481046E-7	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999961868885987	WITHOUT_CLASSIFICATION	3.813111401195118E-6	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999990977230971	WITHOUT_CLASSIFICATION	9.022769028738756E-7	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999997514948376	WITHOUT_CLASSIFICATION	2.485051625158801E-7	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999995532820433	WITHOUT_CLASSIFICATION	4.467179568042543E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999987031301056	WITHOUT_CLASSIFICATION	1.2968698942860827E-6	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999997782634994	WITHOUT_CLASSIFICATION	2.217365006502993E-7	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999954854044649	WITHOUT_CLASSIFICATION	4.5145955350406825E-6	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.999999816313576	WITHOUT_CLASSIFICATION	1.8368642402631533E-7	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999916112646946	WITHOUT_CLASSIFICATION	8.388735305461222E-6	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999989459154531	WITHOUT_CLASSIFICATION	1.0540845468943366E-6	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999968169236078	WITHOUT_CLASSIFICATION	3.183076392308866E-6	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.999999412864766	WITHOUT_CLASSIFICATION	5.871352338533579E-7	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9998451951360275	WITHOUT_CLASSIFICATION	1.5480486397241377E-4	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999827028727368	WITHOUT_CLASSIFICATION	1.7297127263193843E-5	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.999979540080864	WITHOUT_CLASSIFICATION	2.045991913597926E-5	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9999840927933948	WITHOUT_CLASSIFICATION	1.590720660508483E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999913209373557	WITHOUT_CLASSIFICATION	8.679062644380195E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9998219754697071	WITHOUT_CLASSIFICATION	1.780245302929466E-4	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999831688362361	WITHOUT_CLASSIFICATION	1.6831163763864508E-5	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999914765109513	WITHOUT_CLASSIFICATION	8.523489048552544E-6	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999974408697161	WITHOUT_CLASSIFICATION	2.559130283893242E-6	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9999992660445236	WITHOUT_CLASSIFICATION	7.339554762897217E-7	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999989693783079	WITHOUT_CLASSIFICATION	1.0306216920006118E-6	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999997326685726	WITHOUT_CLASSIFICATION	2.673314274416018E-7	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999610448279801	WITHOUT_CLASSIFICATION	3.895517201980938E-5	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999991917788664	WITHOUT_CLASSIFICATION	8.082211335145237E-7	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999979074135231	WITHOUT_CLASSIFICATION	2.0925864768499698E-6	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999995077008472	WITHOUT_CLASSIFICATION	4.922991527864126E-7	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9999896025829128	WITHOUT_CLASSIFICATION	1.0397417087193524E-5	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9999978742140179	WITHOUT_CLASSIFICATION	2.1257859821729504E-6	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999975593835655	WITHOUT_CLASSIFICATION	2.4406164345649673E-6	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9993251266246982	WITHOUT_CLASSIFICATION	6.748733753018297E-4	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999968554464411	WITHOUT_CLASSIFICATION	3.1445535589051803E-6	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999998329165474	WITHOUT_CLASSIFICATION	1.670834525243771E-7	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9999927680345356	WITHOUT_CLASSIFICATION	7.231965464359864E-6	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999931273746893	WITHOUT_CLASSIFICATION	6.872625310738727E-6	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999976070370429	WITHOUT_CLASSIFICATION	2.3929629570320627E-6	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9999983191937244	WITHOUT_CLASSIFICATION	1.680806275614624E-6	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9996666528837158	WITHOUT_CLASSIFICATION	3.33347116284175E-4	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.999996800875679	WITHOUT_CLASSIFICATION	3.199124321105782E-6	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9999666375195716	WITHOUT_CLASSIFICATION	3.336248042835591E-5	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.999990751666039	WITHOUT_CLASSIFICATION	9.248333960963076E-6	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999881501396001	WITHOUT_CLASSIFICATION	1.1849860400017922E-5	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999986414530492	WITHOUT_CLASSIFICATION	1.3585469508312115E-6	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9962970978653279	WITHOUT_CLASSIFICATION	0.003702902134672115	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999982256721613	WITHOUT_CLASSIFICATION	1.7743278385596491E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999989368309832	WITHOUT_CLASSIFICATION	1.0631690167331876E-6	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999982256721613	WITHOUT_CLASSIFICATION	1.7743278385596491E-6	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.999938178375045	WITHOUT_CLASSIFICATION	6.182162495502084E-5	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9999390857263861	WITHOUT_CLASSIFICATION	6.091427361383299E-5	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999999520231841	WITHOUT_CLASSIFICATION	4.797681580670881E-8	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999849631327361	WITHOUT_CLASSIFICATION	1.5036867263840407E-5	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9933423776654264	WITHOUT_CLASSIFICATION	0.006657622334573547	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9993036586791927	WITHOUT_CLASSIFICATION	6.963413208072906E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9999712738711516	WITHOUT_CLASSIFICATION	2.8726128848366996E-5	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999675885958085	WITHOUT_CLASSIFICATION	3.241140419140469E-5	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999902432247635	WITHOUT_CLASSIFICATION	9.756775236543103E-6	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999971793671726	WITHOUT_CLASSIFICATION	2.8206328274587953E-6	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999988113828319	WITHOUT_CLASSIFICATION	1.1886171682026788E-6	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999791354204344	WITHOUT_CLASSIFICATION	2.0864579565564125E-5	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999419354341781	WITHOUT_CLASSIFICATION	5.8064565821988E-5	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999900928253097	WITHOUT_CLASSIFICATION	9.907174690206106E-6	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999982245915695	WITHOUT_CLASSIFICATION	1.7754084305721806E-6	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.999998401635488	WITHOUT_CLASSIFICATION	1.5983645120099978E-6	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999825367503897	WITHOUT_CLASSIFICATION	1.746324961024498E-5	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9999758426253845	WITHOUT_CLASSIFICATION	2.4157374615595552E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999920146169493	WITHOUT_CLASSIFICATION	7.985383050731897E-6	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999902230345683	WITHOUT_CLASSIFICATION	9.776965431811322E-6	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999566551296761	WITHOUT_CLASSIFICATION	4.334487032383674E-5	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999623765095	WITHOUT_CLASSIFICATION	3.7623490520520265E-8	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999998751192739	WITHOUT_CLASSIFICATION	1.2488072601215064E-7	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999997092184124	WITHOUT_CLASSIFICATION	2.9078158756001827E-7	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999999938036342	WITHOUT_CLASSIFICATION	6.1963657238263325E-9	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999789897151999	WITHOUT_CLASSIFICATION	2.101028480008559E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9994776701942267	WITHOUT_CLASSIFICATION	5.22329805773237E-4	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999929149669361	WITHOUT_CLASSIFICATION	7.085033063875652E-6	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999983133658746	WITHOUT_CLASSIFICATION	1.6866341253333895E-6	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9998763029143184	WITHOUT_CLASSIFICATION	1.2369708568164028E-4	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999270197314435	WITHOUT_CLASSIFICATION	7.298026855645459E-5	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9996031084017175	WITHOUT_CLASSIFICATION	3.9689159828250575E-4	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9979375469473085	WITHOUT_CLASSIFICATION	0.0020624530526913844	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995624074466	WITHOUT_CLASSIFICATION	4.3759255334583713E-7	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.999995630528687	WITHOUT_CLASSIFICATION	4.369471313064737E-6	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999849137652	WITHOUT_CLASSIFICATION	1.508623479318089E-8	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999972102476834	WITHOUT_CLASSIFICATION	2.7897523166092803E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999991388522149	WITHOUT_CLASSIFICATION	8.611477850477815E-7	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999991388522149	WITHOUT_CLASSIFICATION	8.611477850477815E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9999930689918294	WITHOUT_CLASSIFICATION	6.931008170629577E-6	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999952736016408	WITHOUT_CLASSIFICATION	4.726398359288519E-6	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999840356620691	WITHOUT_CLASSIFICATION	1.5964337930970728E-5	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999784370547	WITHOUT_CLASSIFICATION	2.1562945254386015E-8	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999284277902	WITHOUT_CLASSIFICATION	7.157220984481808E-8	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999997828092642	WITHOUT_CLASSIFICATION	2.1719073571425298E-7	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999945751360154	WITHOUT_CLASSIFICATION	5.424863984576554E-6	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999746967778	WITHOUT_CLASSIFICATION	2.5303222223486814E-8	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999904151397788	WITHOUT_CLASSIFICATION	9.584860221066003E-6	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999919314266926	WITHOUT_CLASSIFICATION	8.068573307408342E-6	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9988908980747967	WITHOUT_CLASSIFICATION	0.001109101925203337	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9991400261460217	WITHOUT_CLASSIFICATION	8.599738539781974E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999954824698104	WITHOUT_CLASSIFICATION	4.5175301896155106E-6	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9997311537267244	WITHOUT_CLASSIFICATION	2.688462732756194E-4	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999943380917548	WITHOUT_CLASSIFICATION	5.661908245162985E-6	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999943892072387	WITHOUT_CLASSIFICATION	5.610792761220197E-6	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.999997085743157	WITHOUT_CLASSIFICATION	2.9142568428547775E-6	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9999083637244964	WITHOUT_CLASSIFICATION	9.163627550361164E-5	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999758807211511	WITHOUT_CLASSIFICATION	2.4119278848880273E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999943539337471	WITHOUT_CLASSIFICATION	5.646066252969126E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999925171131038	WITHOUT_CLASSIFICATION	7.482886896263529E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999994047056553	WITHOUT_CLASSIFICATION	5.952943446773552E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9996843369715557	WITHOUT_CLASSIFICATION	3.156630284442493E-4	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9997013941496882	WITHOUT_CLASSIFICATION	2.9860585031182867E-4	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9999139766746097	WITHOUT_CLASSIFICATION	8.602332539035579E-5	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999899048760178	WITHOUT_CLASSIFICATION	1.0095123982212832E-5	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9972667489853776	WITHOUT_CLASSIFICATION	0.0027332510146224776	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999829215741067	WITHOUT_CLASSIFICATION	1.7078425893362147E-5	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.999992266069466	WITHOUT_CLASSIFICATION	7.733930533984755E-6	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9998362551058059	WITHOUT_CLASSIFICATION	1.6374489419409126E-4	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999918056605387	WITHOUT_CLASSIFICATION	8.19433946129443E-6	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.999997894236546	WITHOUT_CLASSIFICATION	2.105763454023355E-6	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999900572824543	WITHOUT_CLASSIFICATION	9.942717545808199E-6	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.999999785563003	WITHOUT_CLASSIFICATION	2.1443699702657705E-7	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.999994586913229	WITHOUT_CLASSIFICATION	5.413086771048922E-6	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999981615218089	WITHOUT_CLASSIFICATION	1.8384781911249901E-6	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999888835377344	WITHOUT_CLASSIFICATION	1.1116462265560842E-5	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999888835377344	WITHOUT_CLASSIFICATION	1.1116462265560842E-5	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9999921450954594	WITHOUT_CLASSIFICATION	7.854904540618034E-6	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9998953767307066	WITHOUT_CLASSIFICATION	1.0462326929333238E-4	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999976679602401	WITHOUT_CLASSIFICATION	2.3320397599396473E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.99999987686491	WITHOUT_CLASSIFICATION	1.2313509000836814E-7	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999999718317258	WITHOUT_CLASSIFICATION	2.8168274105900485E-8	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999967760845452	WITHOUT_CLASSIFICATION	3.223915454812899E-6	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9999949136887809	WITHOUT_CLASSIFICATION	5.086311219135851E-6	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.999999833595463	WITHOUT_CLASSIFICATION	1.6640453707237505E-7	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999953522699158	WITHOUT_CLASSIFICATION	4.647730084323531E-6	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999999370396814	WITHOUT_CLASSIFICATION	6.296031864186517E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999996754303107	WITHOUT_CLASSIFICATION	3.2456968932829376E-7	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9999933955776575	WITHOUT_CLASSIFICATION	6.604422342494654E-6	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9999981878857296	WITHOUT_CLASSIFICATION	1.8121142703289155E-6	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999991552001654	WITHOUT_CLASSIFICATION	8.447998346472699E-7	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999997832254093	WITHOUT_CLASSIFICATION	2.1677459069929375E-7	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999998647363596	WITHOUT_CLASSIFICATION	1.3526364035452186E-7	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999649151940253	WITHOUT_CLASSIFICATION	3.508480597468075E-5	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999976814159881	WITHOUT_CLASSIFICATION	2.3185840119405897E-6	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999975528291823	WITHOUT_CLASSIFICATION	2.44717081757316E-6	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999625183880353	WITHOUT_CLASSIFICATION	3.748161196460374E-5	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999998701395143	WITHOUT_CLASSIFICATION	1.298604857259544E-7	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999819444714083	WITHOUT_CLASSIFICATION	1.8055528591630457E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999993156276484	WITHOUT_CLASSIFICATION	6.843723515440699E-7	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999979598616272	WITHOUT_CLASSIFICATION	2.0401383728504817E-6	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999945790772035	WITHOUT_CLASSIFICATION	5.420922796511346E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999920670126813	WITHOUT_CLASSIFICATION	7.932987318646174E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999994416718484	WITHOUT_CLASSIFICATION	5.583281514800953E-7	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999966908890309	WITHOUT_CLASSIFICATION	3.309110969113696E-6	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999995982583909	WITHOUT_CLASSIFICATION	4.0174160901036203E-7	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999998826246276	WITHOUT_CLASSIFICATION	1.1737537246492524E-7	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.999999798810664	WITHOUT_CLASSIFICATION	2.0118933599461307E-7	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999999922155631	WITHOUT_CLASSIFICATION	7.784436922511197E-9	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999988046788221	WITHOUT_CLASSIFICATION	1.1953211778748403E-6	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.999999549379175	WITHOUT_CLASSIFICATION	4.506208250895926E-7	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999975282188169	WITHOUT_CLASSIFICATION	2.4717811830922036E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999993544925248	WITHOUT_CLASSIFICATION	6.455074752281255E-7	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.999998822578399	WITHOUT_CLASSIFICATION	1.1774216010463037E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999903224095833	WITHOUT_CLASSIFICATION	9.677590416648202E-6	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.999996131283145	WITHOUT_CLASSIFICATION	3.868716855029385E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999999735099422	WITHOUT_CLASSIFICATION	2.649005782550603E-8	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999998513656218	WITHOUT_CLASSIFICATION	1.4863437826487602E-7	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999999759682636	WITHOUT_CLASSIFICATION	2.4031736339515702E-8	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999999225959221	WITHOUT_CLASSIFICATION	7.740407790809855E-8	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9999554343028596	WITHOUT_CLASSIFICATION	4.4565697140467334E-5	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999999124607728	WITHOUT_CLASSIFICATION	8.753922714879483E-8	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.99999994631028	WITHOUT_CLASSIFICATION	5.3689719966421155E-8	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999728910242998	WITHOUT_CLASSIFICATION	2.7108975700272288E-5	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999996560826583	WITHOUT_CLASSIFICATION	3.439173416878892E-7	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999927985351723	WITHOUT_CLASSIFICATION	7.201464827637317E-6	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999999599012921	WITHOUT_CLASSIFICATION	4.009870794209054E-8	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999935977654171	WITHOUT_CLASSIFICATION	6.402234582995889E-6	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999998178657478	WITHOUT_CLASSIFICATION	1.8213425222577925E-7	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999993140669604	WITHOUT_CLASSIFICATION	6.859330395273782E-7	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999991862464573	WITHOUT_CLASSIFICATION	8.137535425584975E-7	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9999991967759341	WITHOUT_CLASSIFICATION	8.032240659114233E-7	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999995760547256	WITHOUT_CLASSIFICATION	4.2394527444606813E-7	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999998539613032	WITHOUT_CLASSIFICATION	1.4603869679093767E-7	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999998310793397	WITHOUT_CLASSIFICATION	1.689206602792135E-7	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999983236377182	WITHOUT_CLASSIFICATION	1.6763622818058301E-6	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999994747638856	WITHOUT_CLASSIFICATION	5.252361143798992E-7	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9995239822401109	WITHOUT_CLASSIFICATION	4.7601775988919667E-4	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999997135828977	WITHOUT_CLASSIFICATION	2.864171022630207E-7	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999525526719912	WITHOUT_CLASSIFICATION	4.744732800874461E-5	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999979940439735	WITHOUT_CLASSIFICATION	2.0059560263927555E-6	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9993906016624138	WITHOUT_CLASSIFICATION	6.093983375862397E-4	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9999707240694155	WITHOUT_CLASSIFICATION	2.9275930584673488E-5	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9958903795308715	WITHOUT_CLASSIFICATION	0.004109620469128561	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999999986080299	WITHOUT_CLASSIFICATION	1.3919700931910518E-9	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999999792397158	WITHOUT_CLASSIFICATION	2.0760284101485022E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999970988553666	WITHOUT_CLASSIFICATION	2.901144633335725E-6	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999982743033548	WITHOUT_CLASSIFICATION	1.7256966453632419E-6	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999817359892587	WITHOUT_CLASSIFICATION	1.8264010741305343E-5	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999817501250835	WITHOUT_CLASSIFICATION	1.824987491650457E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999992483476463	WITHOUT_CLASSIFICATION	7.516523537385974E-7	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9999992483476463	WITHOUT_CLASSIFICATION	7.516523537385974E-7	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9999821691261707	WITHOUT_CLASSIFICATION	1.7830873829436914E-5	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.999993192511085	WITHOUT_CLASSIFICATION	6.807488914979834E-6	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999905981186336	WITHOUT_CLASSIFICATION	9.40188136636664E-6	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999859260691737	WITHOUT_CLASSIFICATION	1.4073930826351347E-5	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999974119407388	WITHOUT_CLASSIFICATION	2.588059261216448E-6	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999917896647045	WITHOUT_CLASSIFICATION	8.2103352955144E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999999382795298	WITHOUT_CLASSIFICATION	6.172047024166869E-8	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999983079712724	WITHOUT_CLASSIFICATION	1.6920287275694676E-6	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9996708743578395	WITHOUT_CLASSIFICATION	3.2912564216049437E-4	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999830613544631	WITHOUT_CLASSIFICATION	1.6938645536939864E-5	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9999835880455965	WITHOUT_CLASSIFICATION	1.6411954403563856E-5	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999998961034252	WITHOUT_CLASSIFICATION	1.0389657478902552E-7	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999980869244477	WITHOUT_CLASSIFICATION	1.913075552302367E-6	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999999357640375	WITHOUT_CLASSIFICATION	6.423596248637282E-8	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9999862880502213	WITHOUT_CLASSIFICATION	1.3711949778682849E-5	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999965932488944	WITHOUT_CLASSIFICATION	3.4067511056436054E-6	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999996386093425	WITHOUT_CLASSIFICATION	3.6139065751462867E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999990451205493	WITHOUT_CLASSIFICATION	9.548794507316875E-7	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999998938997802	WITHOUT_CLASSIFICATION	1.0610021979586721E-7	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9998752474589289	WITHOUT_CLASSIFICATION	1.2475254107119666E-4	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9999979624511633	WITHOUT_CLASSIFICATION	2.037548836690355E-6	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999971649559006	WITHOUT_CLASSIFICATION	2.8350440992385117E-6	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999798098471817	WITHOUT_CLASSIFICATION	2.0190152818346476E-5	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999976634199406	WITHOUT_CLASSIFICATION	2.3365800595330874E-6	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999962220623821	WITHOUT_CLASSIFICATION	3.777937617924591E-6	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999998658113937	WITHOUT_CLASSIFICATION	1.3418860626554185E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999993202385622	WITHOUT_CLASSIFICATION	6.79761437821692E-7	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999985102941481	WITHOUT_CLASSIFICATION	1.4897058518109922E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999999772256636	WITHOUT_CLASSIFICATION	2.277433642655052E-8	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999998340020171	WITHOUT_CLASSIFICATION	1.6599798294435258E-7	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999998492702368	WITHOUT_CLASSIFICATION	1.5072976336461527E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.999996944698573	WITHOUT_CLASSIFICATION	3.0553014270735775E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.999999757855524	WITHOUT_CLASSIFICATION	2.421444759245853E-7	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999941639330155	WITHOUT_CLASSIFICATION	5.836066984420388E-6	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.99999818920339	WITHOUT_CLASSIFICATION	1.810796610010813E-6	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999978473304193	WITHOUT_CLASSIFICATION	2.152669580678795E-6	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999998463120392	WITHOUT_CLASSIFICATION	1.536879608154025E-7	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999978888695228	WITHOUT_CLASSIFICATION	2.1111304773058597E-6	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999986987660954	WITHOUT_CLASSIFICATION	1.3012339045623755E-6	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999979032792174	WITHOUT_CLASSIFICATION	2.0967207824674296E-6	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999867574078259	WITHOUT_CLASSIFICATION	1.3242592174002435E-5	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999999772894751	WITHOUT_CLASSIFICATION	2.271052482228977E-8	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999952571131631	WITHOUT_CLASSIFICATION	4.742886836936012E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999882082659	WITHOUT_CLASSIFICATION	1.1791734183113482E-8	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999986405789835	WITHOUT_CLASSIFICATION	1.3594210164430944E-6	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.99999786555535	WITHOUT_CLASSIFICATION	2.134444650021454E-6	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9998323241633198	WITHOUT_CLASSIFICATION	1.676758366802414E-4	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999990452605365	WITHOUT_CLASSIFICATION	9.547394634731393E-7	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999940304377571	WITHOUT_CLASSIFICATION	5.969562242821017E-6	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999942457395248	WITHOUT_CLASSIFICATION	5.7542604752035725E-6	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999593011185826	WITHOUT_CLASSIFICATION	4.069888141745123E-5	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999929632928597	WITHOUT_CLASSIFICATION	7.036707140368824E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.9999666380497877	WITHOUT_CLASSIFICATION	3.336195021238515E-5	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999994402759307	WITHOUT_CLASSIFICATION	5.59724069366022E-7	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9999804648599233	WITHOUT_CLASSIFICATION	1.953514007673816E-5	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999997329883213	WITHOUT_CLASSIFICATION	2.6701167869547356E-7	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.999999740727528	WITHOUT_CLASSIFICATION	2.592724720562069E-7	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999995310444223	WITHOUT_CLASSIFICATION	4.6895557767282975E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999892342441391	WITHOUT_CLASSIFICATION	1.0765755860950986E-5	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999959907352347	WITHOUT_CLASSIFICATION	4.009264765294509E-6	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999369202136492	WITHOUT_CLASSIFICATION	6.307978635084911E-5	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999773935783884	WITHOUT_CLASSIFICATION	2.2606421611535784E-5	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999994349921086	WITHOUT_CLASSIFICATION	5.650078913019577E-7	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.999984877948011	WITHOUT_CLASSIFICATION	1.5122051988848087E-5	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.999999045631588	WITHOUT_CLASSIFICATION	9.543684119396704E-7	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.999595682138211	WITHOUT_CLASSIFICATION	4.043178617888779E-4	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999991721025399	WITHOUT_CLASSIFICATION	8.278974602228738E-7	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999957847657315	WITHOUT_CLASSIFICATION	4.215234268492851E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999996512388883	WITHOUT_CLASSIFICATION	3.487611116992442E-6	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999993747620627	WITHOUT_CLASSIFICATION	6.252379372245721E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999999956729713	WITHOUT_CLASSIFICATION	4.3270287469235355E-9	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9999995859808503	WITHOUT_CLASSIFICATION	4.140191496631252E-7	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999997747323653	WITHOUT_CLASSIFICATION	2.2526763472459325E-7	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999990108729793	WITHOUT_CLASSIFICATION	9.891270208405772E-7	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999848599391159	WITHOUT_CLASSIFICATION	1.514006088416547E-5	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999929219884078	WITHOUT_CLASSIFICATION	7.078011592205478E-6	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9999997999576209	WITHOUT_CLASSIFICATION	2.000423790620378E-7	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.999998946116057	WITHOUT_CLASSIFICATION	1.053883942904316E-6	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999990731355962	WITHOUT_CLASSIFICATION	9.268644037243311E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999994730358387	WITHOUT_CLASSIFICATION	5.269641612891725E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9988499368819581	WITHOUT_CLASSIFICATION	0.0011500631180418647	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999979234854802	WITHOUT_CLASSIFICATION	2.076514519896895E-6	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999992374707718	WITHOUT_CLASSIFICATION	7.625292281931705E-7	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999998857565177	WITHOUT_CLASSIFICATION	1.1424348244633466E-7	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999993626566672	WITHOUT_CLASSIFICATION	6.373433327301996E-7	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999998052101565	WITHOUT_CLASSIFICATION	1.9478984342366756E-7	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999988133181124	WITHOUT_CLASSIFICATION	1.1866818876924732E-6	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999999154844235	WITHOUT_CLASSIFICATION	8.451557661721428E-8	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999772088229115	WITHOUT_CLASSIFICATION	2.279117708850174E-5	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999999673947888	WITHOUT_CLASSIFICATION	3.2605211197855466E-8	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999988681039111	WITHOUT_CLASSIFICATION	1.1318960888609856E-6	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999930199031077	WITHOUT_CLASSIFICATION	6.980096892210307E-6	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999983986772042	WITHOUT_CLASSIFICATION	1.6013227957468516E-6	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999994101512302	WITHOUT_CLASSIFICATION	5.898487698438152E-7	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999985187176277	WITHOUT_CLASSIFICATION	1.4812823722411165E-6	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999981078774403	WITHOUT_CLASSIFICATION	1.892122559842912E-6	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999706211691	WITHOUT_CLASSIFICATION	2.937883086391024E-8	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999986510285566	WITHOUT_CLASSIFICATION	1.3489714434896257E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999981843720005	WITHOUT_CLASSIFICATION	1.8156279994563683E-6	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999999700421213	WITHOUT_CLASSIFICATION	2.9957878785513126E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999977012186291	WITHOUT_CLASSIFICATION	2.2987813708851468E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999995179966672	WITHOUT_CLASSIFICATION	4.820033328095208E-7	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999996210344472	WITHOUT_CLASSIFICATION	3.7896555288507523E-7	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999996303329299	WITHOUT_CLASSIFICATION	3.6966706996233415E-7	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999958064381177	WITHOUT_CLASSIFICATION	4.193561882303716E-6	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999975822096485	WITHOUT_CLASSIFICATION	2.4177903515043516E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999984993942262	WITHOUT_CLASSIFICATION	1.500605773802523E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.999987617271931	WITHOUT_CLASSIFICATION	1.2382728069075275E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999977012186291	WITHOUT_CLASSIFICATION	2.2987813708851468E-6	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999988063604937	WITHOUT_CLASSIFICATION	1.1936395063748276E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999984993942262	WITHOUT_CLASSIFICATION	1.500605773802523E-6	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.999987617271931	WITHOUT_CLASSIFICATION	1.2382728069075275E-5	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999920616945734	WITHOUT_CLASSIFICATION	7.9383054265187E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999923590362996	WITHOUT_CLASSIFICATION	7.64096370042205E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999923590362996	WITHOUT_CLASSIFICATION	7.64096370042205E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999978230631417	WITHOUT_CLASSIFICATION	2.176936858308322E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999978230631417	WITHOUT_CLASSIFICATION	2.176936858308322E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999978230631417	WITHOUT_CLASSIFICATION	2.176936858308322E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999990944830571	WITHOUT_CLASSIFICATION	9.055169429053926E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999971528335911	WITHOUT_CLASSIFICATION	2.84716640893907E-6	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.999997631000004	WITHOUT_CLASSIFICATION	2.368999995971102E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999903429361168	WITHOUT_CLASSIFICATION	9.657063883290264E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999994013825633	WITHOUT_CLASSIFICATION	5.98617436688812E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999999471218477	WITHOUT_CLASSIFICATION	5.287815227079579E-8	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999991844145097	WITHOUT_CLASSIFICATION	8.155854903625328E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999992091814833	WITHOUT_CLASSIFICATION	7.908185167410033E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999997529220074	WITHOUT_CLASSIFICATION	2.4707799261982735E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999655935992443	WITHOUT_CLASSIFICATION	3.4406400755773065E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999977012186291	WITHOUT_CLASSIFICATION	2.2987813708851468E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999977012186291	WITHOUT_CLASSIFICATION	2.2987813708851468E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999977012186291	WITHOUT_CLASSIFICATION	2.2987813708851468E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999995179966672	WITHOUT_CLASSIFICATION	4.820033328095208E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999995179966672	WITHOUT_CLASSIFICATION	4.820033328095208E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.999987617271931	WITHOUT_CLASSIFICATION	1.2382728069075275E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999923590362996	WITHOUT_CLASSIFICATION	7.64096370042205E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999923590362996	WITHOUT_CLASSIFICATION	7.64096370042205E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999978230631417	WITHOUT_CLASSIFICATION	2.176936858308322E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999971528335911	WITHOUT_CLASSIFICATION	2.84716640893907E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999903429361168	WITHOUT_CLASSIFICATION	9.657063883290264E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999999423860677	WITHOUT_CLASSIFICATION	5.761393231212355E-7	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999981924732924	WITHOUT_CLASSIFICATION	1.8075267076597807E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999961316567338	WITHOUT_CLASSIFICATION	3.868343266194472E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999986983387797	WITHOUT_CLASSIFICATION	1.3016612202152509E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999893375596878	WITHOUT_CLASSIFICATION	1.0662440312171727E-5	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999893375596878	WITHOUT_CLASSIFICATION	1.0662440312171727E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999986363282655	WITHOUT_CLASSIFICATION	1.3636717344664163E-6	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9999922220992933	WITHOUT_CLASSIFICATION	7.7779007066895E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999989382709937	WITHOUT_CLASSIFICATION	1.0617290063186797E-6	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999995161257266	WITHOUT_CLASSIFICATION	4.838742733848009E-7	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999994816893265	WITHOUT_CLASSIFICATION	5.183106735557286E-7	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999941656505769	WITHOUT_CLASSIFICATION	5.834349423123554E-6	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999868686338766	WITHOUT_CLASSIFICATION	1.313136612332307E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999977012186291	WITHOUT_CLASSIFICATION	2.2987813708851468E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999984993942262	WITHOUT_CLASSIFICATION	1.500605773802523E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999923590362996	WITHOUT_CLASSIFICATION	7.64096370042205E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999923590362996	WITHOUT_CLASSIFICATION	7.64096370042205E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999978230631417	WITHOUT_CLASSIFICATION	2.176936858308322E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999978230631417	WITHOUT_CLASSIFICATION	2.176936858308322E-6	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999995147416255	WITHOUT_CLASSIFICATION	4.852583745024281E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999990944830571	WITHOUT_CLASSIFICATION	9.055169429053926E-7	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999994013825633	WITHOUT_CLASSIFICATION	5.98617436688812E-7	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999999471218477	WITHOUT_CLASSIFICATION	5.287815227079579E-8	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999999471218477	WITHOUT_CLASSIFICATION	5.287815227079579E-8	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999992091814833	WITHOUT_CLASSIFICATION	7.908185167410033E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999997529220074	WITHOUT_CLASSIFICATION	2.4707799261982735E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999655935992443	WITHOUT_CLASSIFICATION	3.4406400755773065E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999965593670227	WITHOUT_CLASSIFICATION	3.440632977281889E-6	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999996377993772	WITHOUT_CLASSIFICATION	3.622006228545538E-7	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999688975124559	WITHOUT_CLASSIFICATION	3.11024875441406E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.999998226291913	WITHOUT_CLASSIFICATION	1.7737080869932225E-6	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999976486660281	WITHOUT_CLASSIFICATION	2.351333971754965E-6	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999920727666268	WITHOUT_CLASSIFICATION	7.92723337319454E-6	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.999998837888434	WITHOUT_CLASSIFICATION	1.1621115659826486E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.999998196490085	WITHOUT_CLASSIFICATION	1.8035099149739375E-6	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999978056085179	WITHOUT_CLASSIFICATION	2.194391482016266E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999977012186291	WITHOUT_CLASSIFICATION	2.2987813708851468E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999923590362996	WITHOUT_CLASSIFICATION	7.64096370042205E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999978230631417	WITHOUT_CLASSIFICATION	2.176936858308322E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999971528335911	WITHOUT_CLASSIFICATION	2.84716640893907E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999999471218477	WITHOUT_CLASSIFICATION	5.287815227079579E-8	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999992091814833	WITHOUT_CLASSIFICATION	7.908185167410033E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999992091814833	WITHOUT_CLASSIFICATION	7.908185167410033E-7	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999999423860677	WITHOUT_CLASSIFICATION	5.761393231212355E-7	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999986363282655	WITHOUT_CLASSIFICATION	1.3636717344664163E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999986363282655	WITHOUT_CLASSIFICATION	1.3636717344664163E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999989382709937	WITHOUT_CLASSIFICATION	1.0617290063186797E-6	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999977642661655	WITHOUT_CLASSIFICATION	2.2357338344535355E-6	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999997063296864	WITHOUT_CLASSIFICATION	2.9367031364881906E-7	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999785962636257	WITHOUT_CLASSIFICATION	2.140373637428509E-5	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999958167645574	WITHOUT_CLASSIFICATION	4.18323544259422E-6	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999984992023937	WITHOUT_CLASSIFICATION	1.5007976062941827E-6	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999992973120992	WITHOUT_CLASSIFICATION	7.026879007742971E-7	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999959485269386	WITHOUT_CLASSIFICATION	4.0514730614466605E-6	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999949153355358	WITHOUT_CLASSIFICATION	5.084664464239929E-6	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999996669602643	WITHOUT_CLASSIFICATION	3.3303973578914297E-7	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.999999032842634	WITHOUT_CLASSIFICATION	9.671573659598241E-7	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.99999884009449	WITHOUT_CLASSIFICATION	1.1599055099377575E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999967553229253	WITHOUT_CLASSIFICATION	3.244677074654448E-6	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999992253773826	WITHOUT_CLASSIFICATION	7.74622617286997E-7	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999981255708358	WITHOUT_CLASSIFICATION	1.8744291641929932E-6	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999994928696235	WITHOUT_CLASSIFICATION	5.071303765308452E-7	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999933789360693	WITHOUT_CLASSIFICATION	6.621063930637755E-6	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999998345172941	WITHOUT_CLASSIFICATION	1.654827058657162E-7	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999985082473875	WITHOUT_CLASSIFICATION	1.4917526125499176E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999989420827197	WITHOUT_CLASSIFICATION	1.0579172802454505E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999997878900813	WITHOUT_CLASSIFICATION	2.1210991872199424E-7	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999997990412314	WITHOUT_CLASSIFICATION	2.0095876857547895E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999998607061849	WITHOUT_CLASSIFICATION	1.3929381508637962E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999439496182	WITHOUT_CLASSIFICATION	5.6050381691492355E-8	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999999858114655	WITHOUT_CLASSIFICATION	1.4188534315988719E-8	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9997844221316198	WITHOUT_CLASSIFICATION	2.1557786838018896E-4	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999855443044057	WITHOUT_CLASSIFICATION	1.4455695594260907E-5	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999919249401393	WITHOUT_CLASSIFICATION	8.075059860670707E-6	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999647207938887	WITHOUT_CLASSIFICATION	3.527920611142582E-5	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999867087920041	WITHOUT_CLASSIFICATION	1.3291207995855984E-5	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999993171566492	WITHOUT_CLASSIFICATION	6.828433507293671E-7	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999999973377716	WITHOUT_CLASSIFICATION	2.6622283601464477E-9	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999969191120657	WITHOUT_CLASSIFICATION	3.0808879344430525E-6	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999981492198752	WITHOUT_CLASSIFICATION	1.8507801247524414E-6	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999999792756219	WITHOUT_CLASSIFICATION	2.0724378184358794E-8	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999536803728654	WITHOUT_CLASSIFICATION	4.63196271346009E-5	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999998685386979	WITHOUT_CLASSIFICATION	1.3146130206007015E-7	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999992642410993	WITHOUT_CLASSIFICATION	7.35758900770334E-7	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999974429079508	WITHOUT_CLASSIFICATION	2.5570920492506903E-6	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999991963466123	WITHOUT_CLASSIFICATION	8.036533876422563E-7	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999997027337677	WITHOUT_CLASSIFICATION	2.972662322577998E-7	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999341589498124	WITHOUT_CLASSIFICATION	6.584105018758188E-5	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999880361666087	WITHOUT_CLASSIFICATION	1.1963833391361655E-5	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999999526697622	WITHOUT_CLASSIFICATION	4.733023793749674E-8	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999997225060282	WITHOUT_CLASSIFICATION	2.7749397180138506E-7	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999993347708682	WITHOUT_CLASSIFICATION	6.652291318576972E-7	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999994848475913	WITHOUT_CLASSIFICATION	5.151524087659038E-7	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9998131304222395	WITHOUT_CLASSIFICATION	1.868695777603845E-4	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999882776445513	WITHOUT_CLASSIFICATION	1.1722355448734903E-5	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999910562037535	WITHOUT_CLASSIFICATION	8.943796246548565E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999984050349556	WITHOUT_CLASSIFICATION	1.5949650442887072E-6	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999998421900759	WITHOUT_CLASSIFICATION	1.5780992424108093E-7	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999999618148684	WITHOUT_CLASSIFICATION	3.8185131652594264E-8	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999992020142253	WITHOUT_CLASSIFICATION	7.979857747723044E-7	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.999997668717306	WITHOUT_CLASSIFICATION	2.3312826939052637E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.999967993610497	WITHOUT_CLASSIFICATION	3.200638950295769E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.999967993610497	WITHOUT_CLASSIFICATION	3.200638950295769E-5	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.999998261594302	WITHOUT_CLASSIFICATION	1.7384056979049685E-6	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999991264694545	WITHOUT_CLASSIFICATION	8.735305455907256E-7	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.999999520630245	WITHOUT_CLASSIFICATION	4.793697549510133E-7	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999991923012046	WITHOUT_CLASSIFICATION	8.076987954260474E-7	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9428056686794377	WITHOUT_CLASSIFICATION	0.05719433132056232	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999956012414956	WITHOUT_CLASSIFICATION	4.398758504484935E-6	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9996133299007224	WITHOUT_CLASSIFICATION	3.8667009927756234E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9999574236185302	WITHOUT_CLASSIFICATION	4.2576381469658074E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999957592317216	WITHOUT_CLASSIFICATION	4.2407682784961144E-6	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999957592317216	WITHOUT_CLASSIFICATION	4.2407682784961144E-6	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999990905851462	WITHOUT_CLASSIFICATION	9.094148538013554E-7	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.999998644396058	WITHOUT_CLASSIFICATION	1.3556039420790643E-6	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999992981989754	WITHOUT_CLASSIFICATION	7.018010245608556E-7	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999986424725071	WITHOUT_CLASSIFICATION	1.3575274927727767E-6	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999989381208871	WITHOUT_CLASSIFICATION	1.0618791128727073E-6	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999990853257497	WITHOUT_CLASSIFICATION	9.14674250384133E-7	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.999999371455198	WITHOUT_CLASSIFICATION	6.285448019174133E-7	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999940222064466	WITHOUT_CLASSIFICATION	5.977793553303071E-6	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999981579313907	WITHOUT_CLASSIFICATION	1.842068609338461E-6	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9999714468741661	WITHOUT_CLASSIFICATION	2.8553125834038172E-5	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999992347702918	WITHOUT_CLASSIFICATION	7.652297082706222E-7	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9999649303423376	WITHOUT_CLASSIFICATION	3.5069657662368655E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999981005088053	WITHOUT_CLASSIFICATION	1.89949119464685E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999647313584099	WITHOUT_CLASSIFICATION	3.526864159004522E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995624074466	WITHOUT_CLASSIFICATION	4.3759255334583713E-7	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999994848475913	WITHOUT_CLASSIFICATION	5.151524087659038E-7	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.999967993610497	WITHOUT_CLASSIFICATION	3.200638950295769E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.999967993610497	WITHOUT_CLASSIFICATION	3.200638950295769E-5	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999991264694545	WITHOUT_CLASSIFICATION	8.735305455907256E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999997646203658	WITHOUT_CLASSIFICATION	2.353796341593053E-7	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999939526805127	WITHOUT_CLASSIFICATION	6.0473194872217055E-6	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999997820039996	WITHOUT_CLASSIFICATION	2.1799600037906584E-7	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999986417487786	WITHOUT_CLASSIFICATION	1.3582512214412516E-6	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999971516692456	WITHOUT_CLASSIFICATION	2.8483307543780108E-6	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.999999646634024	WITHOUT_CLASSIFICATION	3.533659759907864E-7	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999973442659087	WITHOUT_CLASSIFICATION	2.6557340913820194E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999992643432407	WITHOUT_CLASSIFICATION	7.356567592556703E-7	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999746906107788	WITHOUT_CLASSIFICATION	2.5309389221276392E-5	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999998958329354	WITHOUT_CLASSIFICATION	1.041670646906899E-7	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999877880828096	WITHOUT_CLASSIFICATION	1.221191719040307E-5	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999999766748263	WITHOUT_CLASSIFICATION	2.3325173739846166E-8	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999998474238962	WITHOUT_CLASSIFICATION	1.5257610384701326E-7	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999820204759365	WITHOUT_CLASSIFICATION	1.7979524063487463E-5	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999896588913957	WITHOUT_CLASSIFICATION	1.0341108604280801E-5	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999746200961513	WITHOUT_CLASSIFICATION	2.5379903848724827E-5	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.999999888083388	WITHOUT_CLASSIFICATION	1.1191661201514704E-7	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999999760989302	WITHOUT_CLASSIFICATION	2.3901069806350513E-8	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999998802816704	WITHOUT_CLASSIFICATION	1.1971832955185874E-7	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999494837752533	WITHOUT_CLASSIFICATION	5.051622474670227E-5	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999698982619386	WITHOUT_CLASSIFICATION	3.0101738061442314E-5	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999998896123277	WITHOUT_CLASSIFICATION	1.1038767237864216E-7	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999997713935711	WITHOUT_CLASSIFICATION	2.2860642900447109E-7	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999950656363127	WITHOUT_CLASSIFICATION	4.9343636874048206E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.999999952353501	WITHOUT_CLASSIFICATION	4.764649899217489E-8	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999997408406875	WITHOUT_CLASSIFICATION	2.5915931244267736E-7	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999999853328995	WITHOUT_CLASSIFICATION	1.4667100486630229E-8	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999533906947827	WITHOUT_CLASSIFICATION	4.6609305217290976E-5	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999999482310881	WITHOUT_CLASSIFICATION	5.1768912001662855E-8	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999562015328785	WITHOUT_CLASSIFICATION	4.379846712150024E-5	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.999984704119222	WITHOUT_CLASSIFICATION	1.529588077804708E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999289682629442	WITHOUT_CLASSIFICATION	7.103173705581698E-5	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999995502900839	WITHOUT_CLASSIFICATION	4.4970991608332023E-7	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999311425204098	WITHOUT_CLASSIFICATION	6.885747959012173E-5	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9999935758449933	WITHOUT_CLASSIFICATION	6.424155006644856E-6	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999996348595112	WITHOUT_CLASSIFICATION	3.6514048883926176E-7	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999950402891464	WITHOUT_CLASSIFICATION	4.959710853630512E-6	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999999544710043	WITHOUT_CLASSIFICATION	4.552899576451754E-8	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999994618892016	WITHOUT_CLASSIFICATION	5.381107983945379E-7	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999964072011022	WITHOUT_CLASSIFICATION	3.59279889790951E-6	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999998799783879	WITHOUT_CLASSIFICATION	1.2002161210046304E-7	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999996270081082	WITHOUT_CLASSIFICATION	3.729918918528839E-7	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999767190324361	WITHOUT_CLASSIFICATION	2.3280967563918262E-5	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9970250005693102	WITHOUT_CLASSIFICATION	0.00297499943068989	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999982423299794	WITHOUT_CLASSIFICATION	1.7576700207494111E-6	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999789036377562	WITHOUT_CLASSIFICATION	2.1096362243774472E-5	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999575978082188	WITHOUT_CLASSIFICATION	4.2402191781334674E-5	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999976491791032	WITHOUT_CLASSIFICATION	2.350820896845449E-6	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999994540247507	WITHOUT_CLASSIFICATION	5.45975249332301E-7	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999961147033659	WITHOUT_CLASSIFICATION	3.885296634187513E-6	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9999961190429951	WITHOUT_CLASSIFICATION	3.8809570048799276E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999807450912042	WITHOUT_CLASSIFICATION	1.9254908795761222E-5	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.999996353846322	WITHOUT_CLASSIFICATION	3.6461536780432735E-6	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.999995034744434	WITHOUT_CLASSIFICATION	4.9652555660344654E-6	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.999999915120139	WITHOUT_CLASSIFICATION	8.487986106554901E-8	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9999959984023632	WITHOUT_CLASSIFICATION	4.001597636874648E-6	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999997933168383	WITHOUT_CLASSIFICATION	2.066831616121594E-7	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9999992443023243	WITHOUT_CLASSIFICATION	7.556976758049573E-7	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999989821309246	WITHOUT_CLASSIFICATION	1.0178690754095283E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999972183648044	WITHOUT_CLASSIFICATION	2.781635195565065E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999972183648044	WITHOUT_CLASSIFICATION	2.781635195565065E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999976994846884	WITHOUT_CLASSIFICATION	2.300515311660454E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999976994846884	WITHOUT_CLASSIFICATION	2.300515311660454E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999948370474528	WITHOUT_CLASSIFICATION	5.162952547210111E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999948370474528	WITHOUT_CLASSIFICATION	5.162952547210111E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999749434935441	WITHOUT_CLASSIFICATION	2.505650645589112E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999641446219304	WITHOUT_CLASSIFICATION	3.585537806962606E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999641446219304	WITHOUT_CLASSIFICATION	3.585537806962606E-5	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999899211191898	WITHOUT_CLASSIFICATION	1.0078880810193295E-5	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999973436264551	WITHOUT_CLASSIFICATION	2.656373544910139E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999260658115036	WITHOUT_CLASSIFICATION	7.393418849641872E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999260658115036	WITHOUT_CLASSIFICATION	7.393418849641872E-5	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.999991875576492	WITHOUT_CLASSIFICATION	8.124423507941024E-6	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999968333289815	WITHOUT_CLASSIFICATION	3.1666710184322725E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999641446219304	WITHOUT_CLASSIFICATION	3.585537806962606E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999260658115036	WITHOUT_CLASSIFICATION	7.393418849641872E-5	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999973235197694	WITHOUT_CLASSIFICATION	2.6764802305917857E-6	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999914675406278	WITHOUT_CLASSIFICATION	8.532459372208072E-6	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.999968448798793	WITHOUT_CLASSIFICATION	3.1551201207054114E-5	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999998651457501	WITHOUT_CLASSIFICATION	1.3485424988664376E-7	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9999886477307977	WITHOUT_CLASSIFICATION	1.1352269202339891E-5	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999998904117757	WITHOUT_CLASSIFICATION	1.0958822427812399E-7	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999998976451351	WITHOUT_CLASSIFICATION	1.0235486488745067E-7	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999999727503591	WITHOUT_CLASSIFICATION	2.724964090281814E-8	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999980725365223	WITHOUT_CLASSIFICATION	1.9274634775962855E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999992821355813	WITHOUT_CLASSIFICATION	7.178644187620151E-7	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999997685218145	WITHOUT_CLASSIFICATION	2.3147818554199988E-7	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999981935076809	WITHOUT_CLASSIFICATION	1.806492319100662E-6	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999997789259529	WITHOUT_CLASSIFICATION	2.2107404698753262E-7	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999998108997551	WITHOUT_CLASSIFICATION	1.891002449023227E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999972951745684	WITHOUT_CLASSIFICATION	2.7048254315667632E-6	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999951470326394	WITHOUT_CLASSIFICATION	4.852967360598642E-6	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999979982264543	WITHOUT_CLASSIFICATION	2.0017735457427942E-6	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9954230084881681	WITHOUT_CLASSIFICATION	0.004576991511831876	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999944489149211	WITHOUT_CLASSIFICATION	5.551085078925997E-6	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999782450578298	WITHOUT_CLASSIFICATION	2.1754942170156948E-5	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999991381341319	WITHOUT_CLASSIFICATION	8.618658681913286E-7	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999947576556018	WITHOUT_CLASSIFICATION	5.242344398294829E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999956185294492	WITHOUT_CLASSIFICATION	4.381470550858824E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.999990028778368	WITHOUT_CLASSIFICATION	9.971221631938403E-6	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999981301282572	WITHOUT_CLASSIFICATION	1.8698717428461703E-6	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999989635451916	WITHOUT_CLASSIFICATION	1.036454808436734E-6	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999985859334303	WITHOUT_CLASSIFICATION	1.4140665697349098E-6	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9999934197184203	WITHOUT_CLASSIFICATION	6.580281579768638E-6	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999953547945424	WITHOUT_CLASSIFICATION	4.645205457627354E-6	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.999962213905477	WITHOUT_CLASSIFICATION	3.778609452295973E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.999968448798793	WITHOUT_CLASSIFICATION	3.1551201207054114E-5	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999998504218222	WITHOUT_CLASSIFICATION	1.495781777277811E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999972951745684	WITHOUT_CLASSIFICATION	2.7048254315667632E-6	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999999064667264	WITHOUT_CLASSIFICATION	9.353327355777444E-8	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.999990028778368	WITHOUT_CLASSIFICATION	9.971221631938403E-6	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999970240459839	WITHOUT_CLASSIFICATION	2.9759540161322405E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999997680057972	WITHOUT_CLASSIFICATION	2.3199420288789035E-7	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999610488589508	WITHOUT_CLASSIFICATION	3.8951141049233186E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999397208231171	WITHOUT_CLASSIFICATION	6.0279176882994244E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999397208231171	WITHOUT_CLASSIFICATION	6.0279176882994244E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999763849214288	WITHOUT_CLASSIFICATION	2.361507857125236E-5	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999999754459667	WITHOUT_CLASSIFICATION	2.4554033161102943E-8	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999999897556362	WITHOUT_CLASSIFICATION	1.0244363857608927E-8	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999999329819534	WITHOUT_CLASSIFICATION	6.701804649795907E-8	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999995509228179	WITHOUT_CLASSIFICATION	4.490771820659949E-7	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999995673424982	WITHOUT_CLASSIFICATION	4.326575019222708E-7	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999992550499811	WITHOUT_CLASSIFICATION	7.449500189444653E-7	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999999839575506	WITHOUT_CLASSIFICATION	1.604244938647468E-8	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999997488403619	WITHOUT_CLASSIFICATION	2.5115963808312E-7	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.999996527254345	WITHOUT_CLASSIFICATION	3.4727456551365183E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999998675520948	WITHOUT_CLASSIFICATION	1.3244790520576727E-7	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999689438151621	WITHOUT_CLASSIFICATION	3.105618483790851E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999952346696445	WITHOUT_CLASSIFICATION	4.765330355513631E-6	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999997156211161	WITHOUT_CLASSIFICATION	2.843788838892041E-7	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999995691523662	WITHOUT_CLASSIFICATION	4.3084763381579544E-7	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9999989337857952	WITHOUT_CLASSIFICATION	1.066214204799905E-6	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999996559825387	WITHOUT_CLASSIFICATION	3.4401746137020293E-7	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999944249076975	WITHOUT_CLASSIFICATION	5.575092302501453E-6	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999997450335839	WITHOUT_CLASSIFICATION	2.549664160580926E-7	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999969906787981	WITHOUT_CLASSIFICATION	3.0093212018661914E-6	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.999994872805781	WITHOUT_CLASSIFICATION	5.127194218955263E-6	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999961963049251	WITHOUT_CLASSIFICATION	3.803695074865454E-6	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9999757653512914	WITHOUT_CLASSIFICATION	2.4234648708642564E-5	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999998477004555	WITHOUT_CLASSIFICATION	1.5229954442904148E-7	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.999999614938518	WITHOUT_CLASSIFICATION	3.8506148202584616E-7	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.999999978168182	WITHOUT_CLASSIFICATION	2.1831817975529593E-8	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999999337416148	WITHOUT_CLASSIFICATION	6.625838517912027E-8	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999998440666656	WITHOUT_CLASSIFICATION	1.5593333446383587E-7	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999998309701359	WITHOUT_CLASSIFICATION	1.690298640841614E-7	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999992097660612	WITHOUT_CLASSIFICATION	7.902339388958255E-7	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999999809200204	WITHOUT_CLASSIFICATION	1.9079979565358575E-8	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.999997944931484	WITHOUT_CLASSIFICATION	2.0550685161256423E-6	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999989919305562	WITHOUT_CLASSIFICATION	1.008069443841597E-6	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999940382891415	WITHOUT_CLASSIFICATION	5.9617108585996115E-6	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9999920153116157	WITHOUT_CLASSIFICATION	7.98468838420747E-6	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999997191863067	WITHOUT_CLASSIFICATION	2.8081369326504644E-7	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999945719962313	WITHOUT_CLASSIFICATION	5.4280037686939034E-6	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999985580253941	WITHOUT_CLASSIFICATION	1.4419746059617138E-6	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.99999783032803	WITHOUT_CLASSIFICATION	2.1696719699452503E-6	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999904386197191	WITHOUT_CLASSIFICATION	9.56138028090498E-6	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999993716917024	WITHOUT_CLASSIFICATION	6.283082975536901E-7	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999986348844936	WITHOUT_CLASSIFICATION	1.3651155064389195E-6	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999875714788	WITHOUT_CLASSIFICATION	1.2428521127497543E-8	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999946728312019	WITHOUT_CLASSIFICATION	5.327168798031351E-6	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999497013216097	WITHOUT_CLASSIFICATION	5.029867839042646E-5	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999945555348756	WITHOUT_CLASSIFICATION	5.444465124347251E-6	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999820203067846	WITHOUT_CLASSIFICATION	1.797969321545726E-5	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999898092470882	WITHOUT_CLASSIFICATION	1.0190752911794289E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999948370474528	WITHOUT_CLASSIFICATION	5.162952547210111E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999963597360914	WITHOUT_CLASSIFICATION	3.64026390861383E-6	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999991850565997	WITHOUT_CLASSIFICATION	8.149434003308429E-7	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999668066664222	WITHOUT_CLASSIFICATION	3.319333357780759E-5	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999935908575985	WITHOUT_CLASSIFICATION	6.409142401453695E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999999099898736	WITHOUT_CLASSIFICATION	9.001012627276108E-8	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999996359564515	WITHOUT_CLASSIFICATION	3.6404354858184697E-7	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999998982978971	WITHOUT_CLASSIFICATION	1.0170210291656513E-7	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999997784749929	WITHOUT_CLASSIFICATION	2.2152500720898788E-7	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999995318718524	WITHOUT_CLASSIFICATION	4.681281476809652E-7	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999909732068549	WITHOUT_CLASSIFICATION	9.026793145038672E-6	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999997308009433	WITHOUT_CLASSIFICATION	2.691990567361826E-7	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999998465052378	WITHOUT_CLASSIFICATION	1.534947622822752E-7	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999951758168985	WITHOUT_CLASSIFICATION	4.824183101568714E-6	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.999980431905204	WITHOUT_CLASSIFICATION	1.9568094795883443E-5	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999983813759107	WITHOUT_CLASSIFICATION	1.6186240893619449E-6	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999955769286739	WITHOUT_CLASSIFICATION	4.423071326090428E-6	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999991969713429	WITHOUT_CLASSIFICATION	8.030286571959022E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999983395959366	WITHOUT_CLASSIFICATION	1.6604040633965974E-6	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999997680693374	WITHOUT_CLASSIFICATION	2.3193066258644448E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999717028042492	WITHOUT_CLASSIFICATION	2.829719575091279E-5	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999995728311312	WITHOUT_CLASSIFICATION	4.271688687513359E-7	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999976015494895	WITHOUT_CLASSIFICATION	2.398450510498175E-6	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999987775554949	WITHOUT_CLASSIFICATION	1.2224445050696211E-6	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999997807824232	WITHOUT_CLASSIFICATION	2.1921757681919012E-7	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999999082711998	WITHOUT_CLASSIFICATION	9.172880026395653E-8	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999950878890821	WITHOUT_CLASSIFICATION	4.912110917906641E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999928520357209	WITHOUT_CLASSIFICATION	7.147964279151223E-6	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999947832420135	WITHOUT_CLASSIFICATION	5.216757986587775E-6	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999998088638514	WITHOUT_CLASSIFICATION	1.9113614862292733E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9999947059902151	WITHOUT_CLASSIFICATION	5.294009784875953E-6	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999950656363127	WITHOUT_CLASSIFICATION	4.9343636874048206E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999948370474528	WITHOUT_CLASSIFICATION	5.162952547210111E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999749434935441	WITHOUT_CLASSIFICATION	2.505650645589112E-5	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999944249076975	WITHOUT_CLASSIFICATION	5.575092302501453E-6	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999533936831	WITHOUT_CLASSIFICATION	4.660631700647463E-8	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999963597360914	WITHOUT_CLASSIFICATION	3.64026390861383E-6	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999964649057715	WITHOUT_CLASSIFICATION	3.5350942284724386E-6	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999998533383414	WITHOUT_CLASSIFICATION	1.4666165846746372E-7	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999957729056662	WITHOUT_CLASSIFICATION	4.227094333801624E-6	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999998089587893	WITHOUT_CLASSIFICATION	1.9104121071804488E-7	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999993776114993	WITHOUT_CLASSIFICATION	6.223885007845203E-7	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999993383942124	WITHOUT_CLASSIFICATION	6.616057875217016E-7	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999994795522983	WITHOUT_CLASSIFICATION	5.204477017426177E-7	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999990226437017	WITHOUT_CLASSIFICATION	9.773562983931936E-7	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999999841578533	WITHOUT_CLASSIFICATION	1.5842146701841257E-8	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.99999974344708	WITHOUT_CLASSIFICATION	2.5655292008483036E-7	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999747574841282	WITHOUT_CLASSIFICATION	2.524251587178191E-5	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999955067408772	WITHOUT_CLASSIFICATION	4.493259122706461E-6	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9996628682953499	WITHOUT_CLASSIFICATION	3.371317046501942E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999850970374834	WITHOUT_CLASSIFICATION	1.4902962516712045E-5	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999941268715851	WITHOUT_CLASSIFICATION	5.873128414995597E-6	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.999974036790555	WITHOUT_CLASSIFICATION	2.596320944498021E-5	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9999759923345886	WITHOUT_CLASSIFICATION	2.4007665411424585E-5	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9999852570980626	WITHOUT_CLASSIFICATION	1.4742901937302656E-5	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9994440027717685	WITHOUT_CLASSIFICATION	5.55997228231515E-4	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9994280557203866	WITHOUT_CLASSIFICATION	5.71944279613264E-4	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9998835462245195	WITHOUT_CLASSIFICATION	1.1645377548047301E-4	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9999875470654255	WITHOUT_CLASSIFICATION	1.2452934574410874E-5	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.999963626266827	WITHOUT_CLASSIFICATION	3.63737331731034E-5	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999985877193204	WITHOUT_CLASSIFICATION	1.4122806796481912E-6	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.999999846678231	WITHOUT_CLASSIFICATION	1.533217690328713E-7	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.999998960850679	WITHOUT_CLASSIFICATION	1.0391493210784744E-6	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.999824187331285	WITHOUT_CLASSIFICATION	1.7581266871513604E-4	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999954431867023	WITHOUT_CLASSIFICATION	4.556813297736544E-6	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999942406171158	WITHOUT_CLASSIFICATION	5.759382884214263E-6	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999982413818183	WITHOUT_CLASSIFICATION	1.7586181816915056E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.99999987686491	WITHOUT_CLASSIFICATION	1.2313509000836814E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999948370474528	WITHOUT_CLASSIFICATION	5.162952547210111E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999909732068549	WITHOUT_CLASSIFICATION	9.026793145038672E-6	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999997308009433	WITHOUT_CLASSIFICATION	2.691990567361826E-7	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999955769286739	WITHOUT_CLASSIFICATION	4.423071326090428E-6	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999991969713429	WITHOUT_CLASSIFICATION	8.030286571959022E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999983395959366	WITHOUT_CLASSIFICATION	1.6604040633965974E-6	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999997680693374	WITHOUT_CLASSIFICATION	2.3193066258644448E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999717028042492	WITHOUT_CLASSIFICATION	2.829719575091279E-5	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999827389554096	WITHOUT_CLASSIFICATION	1.7261044590389245E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999987775554949	WITHOUT_CLASSIFICATION	1.2224445050696211E-6	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999999801437123	WITHOUT_CLASSIFICATION	1.9856287803405292E-8	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.999479153036435	WITHOUT_CLASSIFICATION	5.208469635651278E-4	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999055900925948	WITHOUT_CLASSIFICATION	9.4409907405229E-5	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999999349694456	WITHOUT_CLASSIFICATION	6.503055443027662E-8	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999845192614	WITHOUT_CLASSIFICATION	1.548073858920543E-8	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.999999807540067	WITHOUT_CLASSIFICATION	1.9245993299441182E-7	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999998502032444	WITHOUT_CLASSIFICATION	1.4979675557098696E-7	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9999968574893169	WITHOUT_CLASSIFICATION	3.142510683122848E-6	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999963976818436	WITHOUT_CLASSIFICATION	3.602318156381261E-6	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999961963393387	WITHOUT_CLASSIFICATION	3.8036606613233506E-6	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9999974206471882	WITHOUT_CLASSIFICATION	2.5793528118403895E-6	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999998156978023	WITHOUT_CLASSIFICATION	1.8430219776256495E-7	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999983771306716	WITHOUT_CLASSIFICATION	1.622869328376576E-6	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999998552033035	WITHOUT_CLASSIFICATION	1.4479669649940465E-7	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999940809011901	WITHOUT_CLASSIFICATION	5.919098809898028E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999940809011901	WITHOUT_CLASSIFICATION	5.919098809898028E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999971664790138	WITHOUT_CLASSIFICATION	2.833520986249484E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999997249579163	WITHOUT_CLASSIFICATION	2.750420837235527E-7	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999997249579163	WITHOUT_CLASSIFICATION	2.750420837235527E-7	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999940451939415	WITHOUT_CLASSIFICATION	5.954806058461978E-6	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999939443186646	WITHOUT_CLASSIFICATION	6.055681335426467E-6	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999999695885554	WITHOUT_CLASSIFICATION	3.04114444675594E-8	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.99999987686491	WITHOUT_CLASSIFICATION	1.2313509000836814E-7	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999853489485807	WITHOUT_CLASSIFICATION	1.4651051419270218E-5	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999903224095833	WITHOUT_CLASSIFICATION	9.677590416648202E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999998016828107	WITHOUT_CLASSIFICATION	1.9831718927810258E-7	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999999951614738	WITHOUT_CLASSIFICATION	4.838526245163178E-9	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9977585288089835	WITHOUT_CLASSIFICATION	0.0022414711910164944	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999975631051071	WITHOUT_CLASSIFICATION	2.436894892893986E-6	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999982411060271	WITHOUT_CLASSIFICATION	1.7588939729538156E-6	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999954380878697	WITHOUT_CLASSIFICATION	4.561912130278558E-6	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999939078046018	WITHOUT_CLASSIFICATION	6.092195398134703E-6	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999999177585572	WITHOUT_CLASSIFICATION	8.224144275999694E-8	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9969406499804074	WITHOUT_CLASSIFICATION	0.003059350019592524	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.999999205513402	WITHOUT_CLASSIFICATION	7.944865980588736E-7	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9999729554831871	WITHOUT_CLASSIFICATION	2.7044516812890573E-5	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9999820224815363	WITHOUT_CLASSIFICATION	1.7977518463571616E-5	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999991048400859	WITHOUT_CLASSIFICATION	8.951599140958474E-7	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999996900850603	WITHOUT_CLASSIFICATION	3.099149396859327E-7	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999997354457542	WITHOUT_CLASSIFICATION	2.6455424577370373E-7	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9999166653792768	WITHOUT_CLASSIFICATION	8.333462072312722E-5	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9995970944295605	WITHOUT_CLASSIFICATION	4.0290557043956397E-4	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999935539637268	WITHOUT_CLASSIFICATION	6.4460362731662755E-6	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999961731780564	WITHOUT_CLASSIFICATION	3.826821943634785E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.999999279647522	WITHOUT_CLASSIFICATION	7.203524779719842E-7	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999985827474864	WITHOUT_CLASSIFICATION	1.4172525135779327E-6	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999998797015721	WITHOUT_CLASSIFICATION	1.202984278202219E-7	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999987689303118	WITHOUT_CLASSIFICATION	1.2310696882249852E-6	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999999261514837	WITHOUT_CLASSIFICATION	7.384851628385564E-8	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999989471698422	WITHOUT_CLASSIFICATION	1.0528301578403386E-6	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9986290352905173	WITHOUT_CLASSIFICATION	0.0013709647094826889	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.999992554818617	WITHOUT_CLASSIFICATION	7.4451813829283616E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999999305422056	WITHOUT_CLASSIFICATION	6.945779437635785E-8	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.999999980180418	WITHOUT_CLASSIFICATION	1.9819581973337E-8	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999998516999048	WITHOUT_CLASSIFICATION	1.4830009522981055E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999998558063443	WITHOUT_CLASSIFICATION	1.441936557498663E-7	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999993396380039	WITHOUT_CLASSIFICATION	6.60361996130413E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999964904768915	WITHOUT_CLASSIFICATION	3.509523108517241E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993039737977	WITHOUT_CLASSIFICATION	6.960262023529741E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996542198241	WITHOUT_CLASSIFICATION	3.4578017590602824E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999998558063443	WITHOUT_CLASSIFICATION	1.441936557498663E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999758106167431	WITHOUT_CLASSIFICATION	2.4189383256969653E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999997788774203	WITHOUT_CLASSIFICATION	2.2112257964710334E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999997788774203	WITHOUT_CLASSIFICATION	2.2112257964710334E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9999997788774203	WITHOUT_CLASSIFICATION	2.2112257964710334E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999810501846	WITHOUT_CLASSIFICATION	1.8949815372792238E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999810501846	WITHOUT_CLASSIFICATION	1.8949815372792238E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999810501846	WITHOUT_CLASSIFICATION	1.8949815372792238E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999826037785	WITHOUT_CLASSIFICATION	1.7396221457385384E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999826037785	WITHOUT_CLASSIFICATION	1.7396221457385384E-8	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999996074108761	WITHOUT_CLASSIFICATION	3.9258912391420556E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999992945629282	WITHOUT_CLASSIFICATION	7.05437071700585E-7	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999999744613904	WITHOUT_CLASSIFICATION	2.5538609592438027E-8	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999910873924271	WITHOUT_CLASSIFICATION	8.912607572926778E-6	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.999996124423325	WITHOUT_CLASSIFICATION	3.875576674987786E-6	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999995477665218	WITHOUT_CLASSIFICATION	4.5223347819364707E-7	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999975911228435	WITHOUT_CLASSIFICATION	2.408877156426618E-6	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.999997871834695	WITHOUT_CLASSIFICATION	2.1281653050121757E-6	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999979332816945	WITHOUT_CLASSIFICATION	2.0667183056143334E-6	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999952937007507	WITHOUT_CLASSIFICATION	4.706299249286864E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9999968623864407	WITHOUT_CLASSIFICATION	3.1376135593781214E-6	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.999999802075227	WITHOUT_CLASSIFICATION	1.97924773001782E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997064487941	WITHOUT_CLASSIFICATION	2.9355120595725206E-7	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999560361327196	WITHOUT_CLASSIFICATION	4.396386728048649E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999647207938887	WITHOUT_CLASSIFICATION	3.527920611142582E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.990628328355786	WITHOUT_CLASSIFICATION	0.009371671644213963	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999997011582075	WITHOUT_CLASSIFICATION	2.988417925574459E-7	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9999801673068075	WITHOUT_CLASSIFICATION	1.9832693192486653E-5	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9999988809681465	WITHOUT_CLASSIFICATION	1.1190318534968441E-6	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999991954982722	WITHOUT_CLASSIFICATION	8.045017278811095E-7	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9999683104511391	WITHOUT_CLASSIFICATION	3.168954886091639E-5	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999998955146812	WITHOUT_CLASSIFICATION	1.0448531890844047E-7	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9991771623343502	WITHOUT_CLASSIFICATION	8.228376656498109E-4	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9999871545417283	WITHOUT_CLASSIFICATION	1.2845458271754366E-5	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999998108767411	WITHOUT_CLASSIFICATION	1.8912325888480408E-7	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9998806749903553	WITHOUT_CLASSIFICATION	1.1932500964477444E-4	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.999981971091713	WITHOUT_CLASSIFICATION	1.8028908287014087E-5	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.999985083670435	WITHOUT_CLASSIFICATION	1.4916329565048123E-5	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999944922322233	WITHOUT_CLASSIFICATION	5.507767776706969E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999743154002143	WITHOUT_CLASSIFICATION	2.5684599785684064E-5	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9999635101875323	WITHOUT_CLASSIFICATION	3.6489812467632914E-5	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999997637528673	WITHOUT_CLASSIFICATION	2.3624713263194236E-7	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9998594768073812	WITHOUT_CLASSIFICATION	1.405231926188521E-4	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999962914936428	WITHOUT_CLASSIFICATION	3.7085063572278343E-6	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999958886814233	WITHOUT_CLASSIFICATION	4.111318576711011E-6	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.979604245839886	DEFECT	0.02039575416011397	WITHOUT_CLASSIFICATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999743154002143	WITHOUT_CLASSIFICATION	2.5684599785684064E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999968529968241	WITHOUT_CLASSIFICATION	3.1470031758705194E-6	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999997635272405	WITHOUT_CLASSIFICATION	2.3647275938474074E-7	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999990367268357	WITHOUT_CLASSIFICATION	9.632731644061028E-7	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999995553384731	WITHOUT_CLASSIFICATION	4.446615269735564E-7	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999984403179001	WITHOUT_CLASSIFICATION	1.5596820999379001E-6	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999970991712598	WITHOUT_CLASSIFICATION	2.900828740153128E-6	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999995506480635	WITHOUT_CLASSIFICATION	4.493519365333148E-7	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9999854208989499	WITHOUT_CLASSIFICATION	1.457910104999811E-5	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999241735152311	WITHOUT_CLASSIFICATION	7.582648476885244E-5	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999997665403662	WITHOUT_CLASSIFICATION	2.3345963393883485E-7	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9999911825675267	WITHOUT_CLASSIFICATION	8.817432473206707E-6	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999987384024703	WITHOUT_CLASSIFICATION	1.2615975297507064E-6	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.999997229494987	WITHOUT_CLASSIFICATION	2.770505012948095E-6	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999968529968241	WITHOUT_CLASSIFICATION	3.1470031758705194E-6	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999972030142367	WITHOUT_CLASSIFICATION	2.7969857633004834E-6	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999990479021393	WITHOUT_CLASSIFICATION	9.520978607779553E-7	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999994464339814	WITHOUT_CLASSIFICATION	5.535660186119643E-7	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9991947058758209	WITHOUT_CLASSIFICATION	8.052941241790704E-4	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999919500131293	WITHOUT_CLASSIFICATION	8.049986870529374E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9999465119900236	WITHOUT_CLASSIFICATION	5.348800997642599E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999981005088053	WITHOUT_CLASSIFICATION	1.89949119464685E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999986369050017	WITHOUT_CLASSIFICATION	1.363094998404913E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999507815175	WITHOUT_CLASSIFICATION	4.921848247123271E-8	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999989811574145	WITHOUT_CLASSIFICATION	1.0188425855759952E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999996855649423	WITHOUT_CLASSIFICATION	3.144350577092917E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999993202385622	WITHOUT_CLASSIFICATION	6.79761437821692E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999998935476969	WITHOUT_CLASSIFICATION	1.0645230307013195E-7	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9999994382833355	WITHOUT_CLASSIFICATION	5.617166645203087E-7	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999990515213126	WITHOUT_CLASSIFICATION	9.484786874508638E-7	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999998765195535	WITHOUT_CLASSIFICATION	1.2348044649657306E-7	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999993737351935	WITHOUT_CLASSIFICATION	6.262648063347604E-7	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9999989619666181	WITHOUT_CLASSIFICATION	1.0380333818304179E-6	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9997935999937457	WITHOUT_CLASSIFICATION	2.0640000625426214E-4	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999998712966142	WITHOUT_CLASSIFICATION	1.287033858511471E-7	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999991183314902	WITHOUT_CLASSIFICATION	8.816685096978913E-7	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9999596152503485	WITHOUT_CLASSIFICATION	4.038474965143314E-5	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999993141775476	WITHOUT_CLASSIFICATION	6.858224524011246E-7	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999997500660108	WITHOUT_CLASSIFICATION	2.499339891050236E-7	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9999183189260689	WITHOUT_CLASSIFICATION	8.168107393118979E-5	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999995178729639	WITHOUT_CLASSIFICATION	4.821270360467897E-7	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9999387328100227	WITHOUT_CLASSIFICATION	6.126718997741324E-5	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999991800257727	WITHOUT_CLASSIFICATION	8.199742272859104E-7	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999989378334541	WITHOUT_CLASSIFICATION	1.0621665458706512E-6	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999999835581883	WITHOUT_CLASSIFICATION	1.644181169547493E-8	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999988719970224	WITHOUT_CLASSIFICATION	1.12800297761106E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999896883217452	WITHOUT_CLASSIFICATION	1.0311678254870018E-5	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999999084795509	WITHOUT_CLASSIFICATION	9.152044902166847E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999992275171533	WITHOUT_CLASSIFICATION	7.724828466707451E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999994047056553	WITHOUT_CLASSIFICATION	5.952943446773552E-7	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999991736682959	WITHOUT_CLASSIFICATION	8.263317041460708E-7	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999988719970224	WITHOUT_CLASSIFICATION	1.12800297761106E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999988620247147	WITHOUT_CLASSIFICATION	1.1379752853144694E-6	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999814284971228	WITHOUT_CLASSIFICATION	1.8571502877234116E-5	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999646680387971	WITHOUT_CLASSIFICATION	3.533196120286351E-5	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999943749177902	WITHOUT_CLASSIFICATION	5.6250822097586526E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999880630320341	WITHOUT_CLASSIFICATION	1.1936967965769769E-5	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999993225257675	WITHOUT_CLASSIFICATION	6.774742325932115E-7	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999926230529966	WITHOUT_CLASSIFICATION	7.376947003343525E-6	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999875134098626	WITHOUT_CLASSIFICATION	1.2486590137330296E-5	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999943433934184	WITHOUT_CLASSIFICATION	5.656606581542917E-6	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.999999202176104	WITHOUT_CLASSIFICATION	7.978238959337527E-7	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999981796906745	WITHOUT_CLASSIFICATION	1.8203093255406982E-6	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999927804297922	WITHOUT_CLASSIFICATION	7.219570207727756E-6	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999994388064056	WITHOUT_CLASSIFICATION	5.611935943045679E-7	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999974224101247	WITHOUT_CLASSIFICATION	2.5775898751804277E-6	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999060351464643	WITHOUT_CLASSIFICATION	9.396485353574748E-5	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.999999901998798	WITHOUT_CLASSIFICATION	9.800120203609682E-8	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999991440259879	WITHOUT_CLASSIFICATION	8.559740121836392E-7	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.999997678540797	WITHOUT_CLASSIFICATION	2.3214592029935944E-6	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9999016556694235	WITHOUT_CLASSIFICATION	9.834433057648955E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999968570066322	WITHOUT_CLASSIFICATION	3.1429933678311058E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997064487941	WITHOUT_CLASSIFICATION	2.9355120595725206E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999997064487941	WITHOUT_CLASSIFICATION	2.9355120595725206E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999926525121311	WITHOUT_CLASSIFICATION	7.347487869028734E-6	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999560361327196	WITHOUT_CLASSIFICATION	4.396386728048649E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9997770643793907	WITHOUT_CLASSIFICATION	2.2293562060926708E-4	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9999999043401231	WITHOUT_CLASSIFICATION	9.565987694267547E-8	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999753567682959	WITHOUT_CLASSIFICATION	2.46432317040709E-5	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999957294584902	WITHOUT_CLASSIFICATION	4.270541509751294E-6	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.9680841634165895	WITHOUT_CLASSIFICATION	0.03191583658341037	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999998117008568	WITHOUT_CLASSIFICATION	1.8829914322333588E-7	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999996367279409	WITHOUT_CLASSIFICATION	3.632720590973488E-7	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999609780335625	WITHOUT_CLASSIFICATION	3.902196643735086E-5	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9999974354616219	WITHOUT_CLASSIFICATION	2.564538378104277E-6	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9999838856514589	WITHOUT_CLASSIFICATION	1.611434854102619E-5	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999999796827657	WITHOUT_CLASSIFICATION	2.03172342869938E-8	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999999087367093	WITHOUT_CLASSIFICATION	9.126329074130862E-8	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999851570056115	WITHOUT_CLASSIFICATION	1.4842994388322751E-5	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999998609562052	WITHOUT_CLASSIFICATION	1.3904379472439103E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999990872683802	WITHOUT_CLASSIFICATION	9.127316197959061E-7	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9999999572096941	WITHOUT_CLASSIFICATION	4.279030580714573E-8	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999998871899891	WITHOUT_CLASSIFICATION	1.1281001089018131E-7	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999991091365585	WITHOUT_CLASSIFICATION	8.908634414414579E-7	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999873565369829	WITHOUT_CLASSIFICATION	1.264346301699956E-5	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9999923144162103	WITHOUT_CLASSIFICATION	7.685583789762183E-6	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9991402745033702	WITHOUT_CLASSIFICATION	8.597254966297281E-4	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9998748992759512	WITHOUT_CLASSIFICATION	1.251007240487431E-4	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999999561089762	WITHOUT_CLASSIFICATION	4.3891023700013806E-8	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.999976143237594	WITHOUT_CLASSIFICATION	2.385676240603954E-5	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999979965813839	WITHOUT_CLASSIFICATION	2.0034186162110124E-6	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999999828268787	WITHOUT_CLASSIFICATION	1.7173121298897846E-8	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999980291884681	WITHOUT_CLASSIFICATION	1.9708115318659504E-6	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9999520701128598	WITHOUT_CLASSIFICATION	4.792988714021844E-5	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9996416080878897	WITHOUT_CLASSIFICATION	3.5839191211032906E-4	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999976010012823	WITHOUT_CLASSIFICATION	2.3989987177229525E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999355467669576	WITHOUT_CLASSIFICATION	6.445323304244014E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999992422491014	WITHOUT_CLASSIFICATION	7.577508986732556E-7	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999925974316144	WITHOUT_CLASSIFICATION	7.4025683856594084E-6	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999937757610455	WITHOUT_CLASSIFICATION	6.224238954490295E-6	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999984532218609	WITHOUT_CLASSIFICATION	1.5467781391642483E-6	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999987175144539	WITHOUT_CLASSIFICATION	1.2824855460490007E-6	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999989028303836	WITHOUT_CLASSIFICATION	1.0971696163264018E-6	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999425258303852	WITHOUT_CLASSIFICATION	5.747416961471974E-5	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9945836244656518	WITHOUT_CLASSIFICATION	0.005416375534348097	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999858844302716	WITHOUT_CLASSIFICATION	1.4115569728423795E-5	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999988749772393	WITHOUT_CLASSIFICATION	1.1250227608263814E-6	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.999971828814776	WITHOUT_CLASSIFICATION	2.817118522398751E-5	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9999488247933789	WITHOUT_CLASSIFICATION	5.117520662117166E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999989630171112	WITHOUT_CLASSIFICATION	1.036982888753859E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999862893234459	WITHOUT_CLASSIFICATION	1.3710676554080504E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999983309706006	WITHOUT_CLASSIFICATION	1.6690293993541524E-6	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999988176041201	WITHOUT_CLASSIFICATION	1.1823958799380033E-6	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999819060554979	WITHOUT_CLASSIFICATION	1.8093944502086996E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999968570066322	WITHOUT_CLASSIFICATION	3.1429933678311058E-6	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999975911228435	WITHOUT_CLASSIFICATION	2.408877156426618E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9995410110165919	WITHOUT_CLASSIFICATION	4.5898898340807103E-4	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999923169622098	WITHOUT_CLASSIFICATION	7.683037790077258E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.999999995865936	WITHOUT_CLASSIFICATION	4.134064043405789E-9	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9999597508535057	WITHOUT_CLASSIFICATION	4.024914649429703E-5	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999872482438095	WITHOUT_CLASSIFICATION	1.2751756190662665E-5	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999979206456607	WITHOUT_CLASSIFICATION	2.0793543393552977E-6	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999998753669517	WITHOUT_CLASSIFICATION	1.2463304826243674E-7	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9998932433000908	WITHOUT_CLASSIFICATION	1.0675669990924466E-4	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999992349773206	WITHOUT_CLASSIFICATION	7.650226793898791E-7	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999654279469059	WITHOUT_CLASSIFICATION	3.457205309404787E-5	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9999902875819737	WITHOUT_CLASSIFICATION	9.712418026319405E-6	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999998724118697	WITHOUT_CLASSIFICATION	1.2758813039576173E-7	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999999915566886	WITHOUT_CLASSIFICATION	8.44331141426189E-9	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999986028003923	WITHOUT_CLASSIFICATION	1.3971996077136116E-6	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999995637341768	WITHOUT_CLASSIFICATION	4.362658231904911E-7	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999980709883355	WITHOUT_CLASSIFICATION	1.92901166443145E-6	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999998392992484	WITHOUT_CLASSIFICATION	1.6070075148779915E-7	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.999999281320657	WITHOUT_CLASSIFICATION	7.186793431211703E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9999971071840674	WITHOUT_CLASSIFICATION	2.8928159324660137E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999988177288083	WITHOUT_CLASSIFICATION	1.1822711916852805E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999988177288083	WITHOUT_CLASSIFICATION	1.1822711916852805E-6	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9999964348007332	WITHOUT_CLASSIFICATION	3.56519926673782E-6	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.999999375906056	WITHOUT_CLASSIFICATION	6.240939438821929E-7	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.999999823726392	WITHOUT_CLASSIFICATION	1.7627360798123651E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999242377120752	WITHOUT_CLASSIFICATION	7.576228792485559E-5	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999971552371498	WITHOUT_CLASSIFICATION	2.8447628502657993E-6	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999986364749865	WITHOUT_CLASSIFICATION	1.3635250134484734E-6	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999999674441188	WITHOUT_CLASSIFICATION	3.255588128799708E-8	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999976868109484	WITHOUT_CLASSIFICATION	2.31318905170676E-6	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9998815398472006	WITHOUT_CLASSIFICATION	1.1846015279933464E-4	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9993649589980929	WITHOUT_CLASSIFICATION	6.350410019072165E-4	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999994097928602	WITHOUT_CLASSIFICATION	5.902071397965883E-7	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999999121248686	WITHOUT_CLASSIFICATION	8.787513140242393E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999999878933387	WITHOUT_CLASSIFICATION	1.2106661400896803E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999948132205619	WITHOUT_CLASSIFICATION	5.186779438115146E-6	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998504473304581	WITHOUT_CLASSIFICATION	1.495526695418817E-4	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9999925698573587	WITHOUT_CLASSIFICATION	7.430142641376114E-6	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9993386446823564	WITHOUT_CLASSIFICATION	6.613553176435213E-4	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999997406384604	WITHOUT_CLASSIFICATION	2.5936153956758925E-7	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999999741459212	WITHOUT_CLASSIFICATION	2.5854078673169746E-8	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9999965830139408	WITHOUT_CLASSIFICATION	3.4169860593579837E-6	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9998012313112214	WITHOUT_CLASSIFICATION	1.9876868877858047E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999987330690557	WITHOUT_CLASSIFICATION	1.2669309442965474E-6	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999902463210258	WITHOUT_CLASSIFICATION	9.753678974172729E-6	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999426775055521	WITHOUT_CLASSIFICATION	5.7322494447884394E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998504473304581	WITHOUT_CLASSIFICATION	1.495526695418817E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998504473304581	WITHOUT_CLASSIFICATION	1.495526695418817E-4	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999416213979049	WITHOUT_CLASSIFICATION	5.8378602095059854E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999574878372391	WITHOUT_CLASSIFICATION	4.251216276078252E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9999291635004076	WITHOUT_CLASSIFICATION	7.083649959243132E-5	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999999264033499	WITHOUT_CLASSIFICATION	7.359665010295743E-8	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999895031962266	WITHOUT_CLASSIFICATION	1.0496803773335735E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999970988553666	WITHOUT_CLASSIFICATION	2.901144633335725E-6	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999982743033548	WITHOUT_CLASSIFICATION	1.7256966453632419E-6	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9999950278736219	WITHOUT_CLASSIFICATION	4.972126378137654E-6	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999992709462899	WITHOUT_CLASSIFICATION	7.290537100680383E-7	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9998317425819697	WITHOUT_CLASSIFICATION	1.6825741803032406E-4	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999947009604301	WITHOUT_CLASSIFICATION	5.299039569992206E-6	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999905175268121	WITHOUT_CLASSIFICATION	9.48247318798321E-6	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999972020624405	WITHOUT_CLASSIFICATION	2.797937559607308E-6	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999991180832396	WITHOUT_CLASSIFICATION	8.81916760487467E-7	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999974540425992	WITHOUT_CLASSIFICATION	2.5459574007170425E-6	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999703785832764	WITHOUT_CLASSIFICATION	2.9621416723503913E-5	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9972074089511715	WITHOUT_CLASSIFICATION	0.0027925910488285307	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9999995577490072	WITHOUT_CLASSIFICATION	4.422509927738625E-7	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9980947335139554	WITHOUT_CLASSIFICATION	0.0019052664860446107	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999999862771993	WITHOUT_CLASSIFICATION	1.3722800535439088E-8	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999995931875412	WITHOUT_CLASSIFICATION	4.068124588193589E-7	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999997113704768	WITHOUT_CLASSIFICATION	2.886295231404374E-7	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999926520532122	WITHOUT_CLASSIFICATION	7.347946787765634E-6	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999322180434412	WITHOUT_CLASSIFICATION	6.778195655877554E-5	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.999999963144135	WITHOUT_CLASSIFICATION	3.685586498772437E-8	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999991062813471	WITHOUT_CLASSIFICATION	8.937186529906889E-7	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999993115883061	WITHOUT_CLASSIFICATION	6.884116939762569E-7	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9999951270540347	WITHOUT_CLASSIFICATION	4.872945965327072E-6	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999997584716033	WITHOUT_CLASSIFICATION	2.415283967616265E-7	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999998297079555	WITHOUT_CLASSIFICATION	1.7029204452928791E-7	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999810370047265	WITHOUT_CLASSIFICATION	1.8962995273493126E-5	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999933677566204	WITHOUT_CLASSIFICATION	6.632243379687668E-6	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999978311181779	WITHOUT_CLASSIFICATION	2.1688818221610265E-6	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999917948962423	WITHOUT_CLASSIFICATION	8.205103757579892E-6	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999997961139608	WITHOUT_CLASSIFICATION	2.0388603909768734E-7	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999980812182044	WITHOUT_CLASSIFICATION	1.9187817955709556E-6	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9998916566342667	WITHOUT_CLASSIFICATION	1.0834336573331237E-4	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999191846612194	WITHOUT_CLASSIFICATION	8.081533878059096E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999998250174993	WITHOUT_CLASSIFICATION	1.7498250083129498E-7	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999992536322613	WITHOUT_CLASSIFICATION	7.463677387536207E-7	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999999956752224	WITHOUT_CLASSIFICATION	4.324777588927627E-9	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9999892495813364	WITHOUT_CLASSIFICATION	1.0750418663658048E-5	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.999933500550002	WITHOUT_CLASSIFICATION	6.649944999805392E-5	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999942995436373	WITHOUT_CLASSIFICATION	5.700456362705626E-6	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999989164786781	WITHOUT_CLASSIFICATION	1.083521321837472E-6	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999998247900534	WITHOUT_CLASSIFICATION	1.7520994661477737E-7	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999919116357138	WITHOUT_CLASSIFICATION	8.088364286202992E-6	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.999999969129162	WITHOUT_CLASSIFICATION	3.0870837959973114E-8	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999993456715784	WITHOUT_CLASSIFICATION	6.543284216653536E-7	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999988032836077	WITHOUT_CLASSIFICATION	1.1967163923986921E-6	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999946751354027	WITHOUT_CLASSIFICATION	5.324864597320998E-6	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999225212165919	WITHOUT_CLASSIFICATION	7.747878340821026E-5	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999996950202493	WITHOUT_CLASSIFICATION	3.049797506699258E-7	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999984674534869	WITHOUT_CLASSIFICATION	1.5325465132049784E-6	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999762277124986	WITHOUT_CLASSIFICATION	2.377228750134684E-5	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999921825104594	WITHOUT_CLASSIFICATION	7.817489540565811E-6	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999945479086598	WITHOUT_CLASSIFICATION	5.4520913400889344E-6	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999774466105125	WITHOUT_CLASSIFICATION	2.2553389487564277E-5	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999997510540874	WITHOUT_CLASSIFICATION	2.4894591265734914E-7	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9994220453869982	WITHOUT_CLASSIFICATION	5.779546130016839E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999394768763501	WITHOUT_CLASSIFICATION	6.0523123649858523E-5	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999746137016706	WITHOUT_CLASSIFICATION	2.538629832940323E-5	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999999934265562	WITHOUT_CLASSIFICATION	6.573443731604316E-9	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999999983005312	WITHOUT_CLASSIFICATION	1.6994688021392119E-9	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999395246556412	WITHOUT_CLASSIFICATION	6.0475344358843876E-5	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999915235067869	WITHOUT_CLASSIFICATION	8.476493213086439E-6	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999996739152461	WITHOUT_CLASSIFICATION	3.260847539181503E-7	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999999309917955	WITHOUT_CLASSIFICATION	6.900820451519014E-8	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9999998696644783	WITHOUT_CLASSIFICATION	1.3033552171701566E-7	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999945578186034	WITHOUT_CLASSIFICATION	5.442181396582999E-6	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999998250174993	WITHOUT_CLASSIFICATION	1.7498250083129498E-7	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999996742029433	WITHOUT_CLASSIFICATION	3.2579705659595876E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999997933168383	WITHOUT_CLASSIFICATION	2.066831616121594E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999997933168383	WITHOUT_CLASSIFICATION	2.066831616121594E-7	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999996881310987	WITHOUT_CLASSIFICATION	3.118689011763979E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999992837285725	WITHOUT_CLASSIFICATION	7.162714275096154E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999992837285725	WITHOUT_CLASSIFICATION	7.162714275096154E-7	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999754511628614	WITHOUT_CLASSIFICATION	2.4548837138634112E-5	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999996140532503	WITHOUT_CLASSIFICATION	3.859467497134799E-7	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.99999794304047	WITHOUT_CLASSIFICATION	2.056959530062327E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999997334293306	WITHOUT_CLASSIFICATION	2.665706694559212E-7	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9999986835991062	WITHOUT_CLASSIFICATION	1.3164008938530972E-6	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999994658257687	WITHOUT_CLASSIFICATION	5.341742312455245E-7	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999998627565707	WITHOUT_CLASSIFICATION	1.372434292199354E-7	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999988427255819	WITHOUT_CLASSIFICATION	1.157274418047974E-6	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999986397686652	WITHOUT_CLASSIFICATION	1.3602313348213484E-6	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9999827785798824	WITHOUT_CLASSIFICATION	1.7221420117657212E-5	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999999270367018	WITHOUT_CLASSIFICATION	7.296329812917898E-8	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999996019860382	WITHOUT_CLASSIFICATION	3.980139618570835E-7	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9999977015504642	WITHOUT_CLASSIFICATION	2.298449535873585E-6	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9999935747898583	WITHOUT_CLASSIFICATION	6.425210141795488E-6	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9999942443964311	WITHOUT_CLASSIFICATION	5.755603568880254E-6	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999989707435161	WITHOUT_CLASSIFICATION	1.0292564839576976E-6	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999979570555232	WITHOUT_CLASSIFICATION	2.0429444767208373E-6	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999962878678785	WITHOUT_CLASSIFICATION	3.712132121472554E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999989368309832	WITHOUT_CLASSIFICATION	1.0631690167331876E-6	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999992837285725	WITHOUT_CLASSIFICATION	7.162714275096154E-7	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999754511628614	WITHOUT_CLASSIFICATION	2.4548837138634112E-5	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999989707435161	WITHOUT_CLASSIFICATION	1.0292564839576976E-6	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9999967589801191	WITHOUT_CLASSIFICATION	3.2410198809124985E-6	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999998192644898	WITHOUT_CLASSIFICATION	1.807355101486351E-7	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999999305738384	WITHOUT_CLASSIFICATION	6.942616164551426E-8	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9999988969285366	WITHOUT_CLASSIFICATION	1.1030714632896791E-6	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999993798631363	WITHOUT_CLASSIFICATION	6.201368637490587E-7	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999999630057798	WITHOUT_CLASSIFICATION	3.699422014822789E-8	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999995484936002	WITHOUT_CLASSIFICATION	4.515063998487457E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999935885254095	WITHOUT_CLASSIFICATION	6.41147459052267E-6	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999911039454166	WITHOUT_CLASSIFICATION	8.896054583409377E-6	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999951772533497	WITHOUT_CLASSIFICATION	4.822746650246221E-6	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9999880046434662	WITHOUT_CLASSIFICATION	1.1995356533933444E-5	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9997979011009223	WITHOUT_CLASSIFICATION	2.0209889907764296E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999715747541893	WITHOUT_CLASSIFICATION	2.842524581072721E-5	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999993941141954	WITHOUT_CLASSIFICATION	6.058858046184415E-7	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9949117872139054	WITHOUT_CLASSIFICATION	0.005088212786094588	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9999589237825054	WITHOUT_CLASSIFICATION	4.107621749463435E-5	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999996747117132	WITHOUT_CLASSIFICATION	3.2528828675387865E-7	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999980338142247	WITHOUT_CLASSIFICATION	1.9661857752431837E-6	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.999988366934146	WITHOUT_CLASSIFICATION	1.1633065854055384E-5	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999521565431682	WITHOUT_CLASSIFICATION	4.7843456831797755E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999995050248021	WITHOUT_CLASSIFICATION	4.949751979190598E-7	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.999999488128037	WITHOUT_CLASSIFICATION	5.118719630453752E-7	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999995828094134	WITHOUT_CLASSIFICATION	4.1719058658416416E-7	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999995643908481	WITHOUT_CLASSIFICATION	4.3560915187355716E-7	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.99999245551917	WITHOUT_CLASSIFICATION	7.544480829928455E-6	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999996434461931	WITHOUT_CLASSIFICATION	3.565538069069166E-7	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999915065886447	WITHOUT_CLASSIFICATION	8.493411355367553E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999934309600037	WITHOUT_CLASSIFICATION	6.56903999641443E-6	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999996645536444	WITHOUT_CLASSIFICATION	3.354463555744128E-7	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9997551816801241	WITHOUT_CLASSIFICATION	2.4481831987595266E-4	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999997994602531	WITHOUT_CLASSIFICATION	2.0053974698117626E-7	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999917050122	WITHOUT_CLASSIFICATION	8.29498784297573E-9	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999937675824553	WITHOUT_CLASSIFICATION	6.2324175447903935E-6	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999533525835687	WITHOUT_CLASSIFICATION	4.6647416431282235E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999961937099684	WITHOUT_CLASSIFICATION	3.80629003164651E-6	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999984491627771	WITHOUT_CLASSIFICATION	1.5508372229082287E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999745377451124	WITHOUT_CLASSIFICATION	2.546225488761796E-5	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999953666154	WITHOUT_CLASSIFICATION	4.633384647088451E-9	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999909828545271	WITHOUT_CLASSIFICATION	9.017145472839543E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999909828545271	WITHOUT_CLASSIFICATION	9.017145472839543E-6	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999999990375065	WITHOUT_CLASSIFICATION	9.624935044290118E-10	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999760905042	WITHOUT_CLASSIFICATION	2.3909495829729644E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999760905042	WITHOUT_CLASSIFICATION	2.3909495829729644E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999977253288426	WITHOUT_CLASSIFICATION	2.2746711574309275E-6	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999977253288426	WITHOUT_CLASSIFICATION	2.2746711574309275E-6	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999654930177729	WITHOUT_CLASSIFICATION	3.450698222707228E-5	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999996181051661	WITHOUT_CLASSIFICATION	3.818948338895909E-7	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999993311980142	WITHOUT_CLASSIFICATION	6.688019858449328E-7	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.999996744235687	WITHOUT_CLASSIFICATION	3.255764313031909E-6	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999999960820718	WITHOUT_CLASSIFICATION	3.917928231622726E-9	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999991484021891	WITHOUT_CLASSIFICATION	8.515978109185645E-7	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999999371500788	WITHOUT_CLASSIFICATION	6.284992120347107E-8	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999647313584099	WITHOUT_CLASSIFICATION	3.526864159004522E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999909828545271	WITHOUT_CLASSIFICATION	9.017145472839543E-6	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999970962315957	WITHOUT_CLASSIFICATION	2.9037684042203037E-6	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999999977297651	WITHOUT_CLASSIFICATION	2.270234926501705E-9	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999999465837105	WITHOUT_CLASSIFICATION	5.3416289536304757E-8	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9999576261372032	WITHOUT_CLASSIFICATION	4.237386279682683E-5	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999815876678521	WITHOUT_CLASSIFICATION	1.841233214792264E-5	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999997026360624	WITHOUT_CLASSIFICATION	2.973639375403761E-7	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999604253496794	WITHOUT_CLASSIFICATION	3.957465032051786E-5	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999965454825273	WITHOUT_CLASSIFICATION	3.4545174728375576E-6	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.99999872783671	WITHOUT_CLASSIFICATION	1.2721632901173445E-6	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.99999872783671	WITHOUT_CLASSIFICATION	1.2721632901173445E-6	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.999990449967921	WITHOUT_CLASSIFICATION	9.550032078999384E-6	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999998998380175	WITHOUT_CLASSIFICATION	1.0016198255139015E-7	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999015635396599	WITHOUT_CLASSIFICATION	9.84364603401518E-5	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999989253279586	WITHOUT_CLASSIFICATION	1.0746720413478362E-6	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999960615856266	WITHOUT_CLASSIFICATION	3.9384143734956166E-6	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997244240415	WITHOUT_CLASSIFICATION	2.7557595854523176E-7	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991365622715	WITHOUT_CLASSIFICATION	8.634377285878458E-7	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999999959279865	WITHOUT_CLASSIFICATION	4.072013520326255E-9	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999999787012371	WITHOUT_CLASSIFICATION	2.129876282509978E-8	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997244240415	WITHOUT_CLASSIFICATION	2.7557595854523176E-7	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999993171711048	WITHOUT_CLASSIFICATION	6.828288951641343E-7	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999990922877136	WITHOUT_CLASSIFICATION	9.077122863954936E-7	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.999994452334251	WITHOUT_CLASSIFICATION	5.547665748960367E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9996262379881516	WITHOUT_CLASSIFICATION	3.7376201184835024E-4	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.999999752991242	WITHOUT_CLASSIFICATION	2.470087579808305E-7	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999997692278443	WITHOUT_CLASSIFICATION	2.307721557923756E-7	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999940267844666	WITHOUT_CLASSIFICATION	5.973215533450965E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999909595352023	WITHOUT_CLASSIFICATION	9.04046479768199E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999909595352023	WITHOUT_CLASSIFICATION	9.04046479768199E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999932002794552	WITHOUT_CLASSIFICATION	6.799720544859052E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999932002794552	WITHOUT_CLASSIFICATION	6.799720544859052E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999889677375177	WITHOUT_CLASSIFICATION	1.103226248240665E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999896157391911	WITHOUT_CLASSIFICATION	1.0384260808993503E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999896157391911	WITHOUT_CLASSIFICATION	1.0384260808993503E-5	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999888424790448	WITHOUT_CLASSIFICATION	1.1157520955198617E-5	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999888813759381	WITHOUT_CLASSIFICATION	1.11186240617982E-5	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999888813759381	WITHOUT_CLASSIFICATION	1.11186240617982E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999906377856715	WITHOUT_CLASSIFICATION	9.362214328517891E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999906377856715	WITHOUT_CLASSIFICATION	9.362214328517891E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999917711280151	WITHOUT_CLASSIFICATION	8.228871985000448E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999954175483748	WITHOUT_CLASSIFICATION	4.582451625158977E-6	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999998403166541	WITHOUT_CLASSIFICATION	1.5968334584436556E-7	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999860343384571	WITHOUT_CLASSIFICATION	1.3965661542856673E-5	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.999999970179512	WITHOUT_CLASSIFICATION	2.9820487951690556E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999984050349556	WITHOUT_CLASSIFICATION	1.5949650442887072E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999984050349556	WITHOUT_CLASSIFICATION	1.5949650442887072E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999900878519197	WITHOUT_CLASSIFICATION	9.912148080388396E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999900878519197	WITHOUT_CLASSIFICATION	9.912148080388396E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999996825615445	WITHOUT_CLASSIFICATION	3.174384554040792E-7	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999931447743774	WITHOUT_CLASSIFICATION	6.855225622722932E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999936017617428	WITHOUT_CLASSIFICATION	6.398238257157944E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999862893234459	WITHOUT_CLASSIFICATION	1.3710676554080504E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9999909595352023	WITHOUT_CLASSIFICATION	9.04046479768199E-6	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999996050975548	WITHOUT_CLASSIFICATION	3.9490244517554985E-7	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999201310108	WITHOUT_CLASSIFICATION	7.98689892531385E-8	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999932002794552	WITHOUT_CLASSIFICATION	6.799720544859052E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999932002794552	WITHOUT_CLASSIFICATION	6.799720544859052E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999889677375177	WITHOUT_CLASSIFICATION	1.103226248240665E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999896157391911	WITHOUT_CLASSIFICATION	1.0384260808993503E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999896157391911	WITHOUT_CLASSIFICATION	1.0384260808993503E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999896157391911	WITHOUT_CLASSIFICATION	1.0384260808993503E-5	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999888424790448	WITHOUT_CLASSIFICATION	1.1157520955198617E-5	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999888813759381	WITHOUT_CLASSIFICATION	1.11186240617982E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999906377856715	WITHOUT_CLASSIFICATION	9.362214328517891E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999906377856715	WITHOUT_CLASSIFICATION	9.362214328517891E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999906377856715	WITHOUT_CLASSIFICATION	9.362214328517891E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999917711280151	WITHOUT_CLASSIFICATION	8.228871985000448E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999954175483748	WITHOUT_CLASSIFICATION	4.582451625158977E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999984050349556	WITHOUT_CLASSIFICATION	1.5949650442887072E-6	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999951418047	WITHOUT_CLASSIFICATION	4.858195360857785E-9	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999999316575746	WITHOUT_CLASSIFICATION	6.834242541794331E-8	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999999222448444	WITHOUT_CLASSIFICATION	7.775515561247202E-8	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999437958453	WITHOUT_CLASSIFICATION	5.6204154668048084E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999984050349556	WITHOUT_CLASSIFICATION	1.5949650442887072E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999900878519197	WITHOUT_CLASSIFICATION	9.912148080388396E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999900878519197	WITHOUT_CLASSIFICATION	9.912148080388396E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999936017617428	WITHOUT_CLASSIFICATION	6.398238257157944E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999936017617428	WITHOUT_CLASSIFICATION	6.398238257157944E-6	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998334851661	WITHOUT_CLASSIFICATION	1.6651483388683805E-7	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999878019636212	WITHOUT_CLASSIFICATION	1.2198036378753836E-5	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999871472100489	WITHOUT_CLASSIFICATION	1.2852789951209057E-5	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999930370262671	WITHOUT_CLASSIFICATION	6.962973732906701E-6	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999942592570271	WITHOUT_CLASSIFICATION	5.740742972863514E-6	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999920176056872	WITHOUT_CLASSIFICATION	7.982394312732042E-6	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999947576124205	WITHOUT_CLASSIFICATION	5.242387579456929E-6	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999997115052324	WITHOUT_CLASSIFICATION	2.8849476765629377E-7	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999888062796342	WITHOUT_CLASSIFICATION	1.119372036575643E-5	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999998779722729	WITHOUT_CLASSIFICATION	1.2202772721773048E-7	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999994581901502	WITHOUT_CLASSIFICATION	5.418098497195149E-7	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999958896211342	WITHOUT_CLASSIFICATION	4.110378865836537E-6	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999902082586343	WITHOUT_CLASSIFICATION	9.791741365668039E-6	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999810175434676	WITHOUT_CLASSIFICATION	1.8982456532474946E-5	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9999918686762067	WITHOUT_CLASSIFICATION	8.13132379332905E-6	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999960502141024	WITHOUT_CLASSIFICATION	3.949785897627772E-6	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.999995630528687	WITHOUT_CLASSIFICATION	4.369471313064737E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999996512388883	WITHOUT_CLASSIFICATION	3.487611116992442E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999998668892647	WITHOUT_CLASSIFICATION	1.3311073535770405E-7	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999996838384554	WITHOUT_CLASSIFICATION	3.1616154466955846E-7	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999939817731932	WITHOUT_CLASSIFICATION	6.018226806834015E-6	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9995969827057707	WITHOUT_CLASSIFICATION	4.030172942293082E-4	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999992593373906	WITHOUT_CLASSIFICATION	7.406626093458731E-7	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999992593373906	WITHOUT_CLASSIFICATION	7.406626093458731E-7	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999988451722823	WITHOUT_CLASSIFICATION	1.1548277176189276E-6	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.999994880755671	WITHOUT_CLASSIFICATION	5.1192443290206695E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9999449365812317	WITHOUT_CLASSIFICATION	5.506341876835303E-5	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9999994952052771	WITHOUT_CLASSIFICATION	5.047947229812567E-7	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999998462345798	WITHOUT_CLASSIFICATION	1.5376542017805635E-7	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999998430882882	WITHOUT_CLASSIFICATION	1.569117119231138E-7	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999954544919594	WITHOUT_CLASSIFICATION	4.54550804063209E-6	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.999999396130533	WITHOUT_CLASSIFICATION	6.03869467019951E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999832372260637	WITHOUT_CLASSIFICATION	1.6762773936211284E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999832372260637	WITHOUT_CLASSIFICATION	1.6762773936211284E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999832372260637	WITHOUT_CLASSIFICATION	1.6762773936211284E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999899976621643	WITHOUT_CLASSIFICATION	1.0002337835618989E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999899976621643	WITHOUT_CLASSIFICATION	1.0002337835618989E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999899976621643	WITHOUT_CLASSIFICATION	1.0002337835618989E-5	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9999989224419615	WITHOUT_CLASSIFICATION	1.077558038454847E-6	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9999734083362819	WITHOUT_CLASSIFICATION	2.6591663718147723E-5	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9999438372288595	WITHOUT_CLASSIFICATION	5.6162771140464223E-5	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9996786462089513	WITHOUT_CLASSIFICATION	3.213537910486957E-4	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999974263005911	WITHOUT_CLASSIFICATION	2.5736994088310422E-6	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999788297588105	WITHOUT_CLASSIFICATION	2.1170241189519917E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999774653282637	WITHOUT_CLASSIFICATION	2.2534671736246415E-5	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999999770798648	WITHOUT_CLASSIFICATION	2.2920135172272882E-8	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999987031301056	WITHOUT_CLASSIFICATION	1.2968698942860827E-6	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999999273729446	WITHOUT_CLASSIFICATION	7.26270553390142E-8	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.999999292023821	WITHOUT_CLASSIFICATION	7.079761789881536E-7	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.999999645554532	WITHOUT_CLASSIFICATION	3.54445468031756E-7	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999584377221268	WITHOUT_CLASSIFICATION	4.156227787332116E-5	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999996734005173	WITHOUT_CLASSIFICATION	3.2659948261694465E-7	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9998770056992221	WITHOUT_CLASSIFICATION	1.229943007778535E-4	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999904778435937	WITHOUT_CLASSIFICATION	9.522156406301145E-6	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9999999595166653	WITHOUT_CLASSIFICATION	4.048333460947808E-8	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999999048331359	WITHOUT_CLASSIFICATION	9.516686401498141E-8	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9978227675064558	WITHOUT_CLASSIFICATION	0.002177232493544187	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.999999879118899	WITHOUT_CLASSIFICATION	1.2088110105335368E-7	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999999395837156	WITHOUT_CLASSIFICATION	6.041628446723488E-8	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999999717909758	WITHOUT_CLASSIFICATION	2.8209024282377E-8	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.999999230543256	WITHOUT_CLASSIFICATION	7.694567441136644E-7	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999950265935	WITHOUT_CLASSIFICATION	4.9734064761578306E-9	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999998164968072	WITHOUT_CLASSIFICATION	1.8350319282592042E-7	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9999451771751464	WITHOUT_CLASSIFICATION	5.482282485356585E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999996485307187	WITHOUT_CLASSIFICATION	3.5146928132165245E-7	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.999999995865936	WITHOUT_CLASSIFICATION	4.134064043405789E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999947700062598	WITHOUT_CLASSIFICATION	5.229993740183852E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999947700062598	WITHOUT_CLASSIFICATION	5.229993740183852E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9998800809390427	WITHOUT_CLASSIFICATION	1.1991906095734781E-4	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999998886957394	WITHOUT_CLASSIFICATION	1.1130426063567868E-7	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9999930754408789	WITHOUT_CLASSIFICATION	6.9245591211253465E-6	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999980896321963	WITHOUT_CLASSIFICATION	1.9103678037753796E-6	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999988923845695	WITHOUT_CLASSIFICATION	1.1076154305321928E-6	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999998274827381	WITHOUT_CLASSIFICATION	1.725172620053203E-7	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999978658784676	WITHOUT_CLASSIFICATION	2.1341215323661446E-6	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999952634680022	WITHOUT_CLASSIFICATION	4.7365319979306624E-6	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9999746775042535	WITHOUT_CLASSIFICATION	2.532249574652985E-5	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999997875959666	WITHOUT_CLASSIFICATION	2.124040333537232E-7	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999910097383795	WITHOUT_CLASSIFICATION	8.990261620531959E-6	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9990947295853835	WITHOUT_CLASSIFICATION	9.052704146165441E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9997709572814685	WITHOUT_CLASSIFICATION	2.29042718531581E-4	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9993245109505667	WITHOUT_CLASSIFICATION	6.754890494333741E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999996512388883	WITHOUT_CLASSIFICATION	3.487611116992442E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999898415019198	WITHOUT_CLASSIFICATION	1.0158498080217895E-5	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9998865729675902	WITHOUT_CLASSIFICATION	1.1342703240984031E-4	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999909028790335	WITHOUT_CLASSIFICATION	9.097120966577525E-6	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9118813816321086	WITHOUT_CLASSIFICATION	0.08811861836789137	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.99978487313052	WITHOUT_CLASSIFICATION	2.1512686947994217E-4	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999988697859693	WITHOUT_CLASSIFICATION	1.1302140306429461E-6	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9999038871680987	WITHOUT_CLASSIFICATION	9.611283190131943E-5	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999931815791311	WITHOUT_CLASSIFICATION	6.818420868895794E-6	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999977478067886	WITHOUT_CLASSIFICATION	2.252193211234587E-6	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999021716063665	WITHOUT_CLASSIFICATION	9.782839363346087E-5	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999994888557155	WITHOUT_CLASSIFICATION	5.111442844342162E-7	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9999530751400161	WITHOUT_CLASSIFICATION	4.692485998399011E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.999995611493033	WITHOUT_CLASSIFICATION	4.388506966984681E-6	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999934822635727	WITHOUT_CLASSIFICATION	6.51773642737998E-6	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999759412171203	WITHOUT_CLASSIFICATION	2.4058782879731778E-5	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999676902148809	WITHOUT_CLASSIFICATION	3.230978511915208E-5	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999919403346728	WITHOUT_CLASSIFICATION	8.059665327281717E-6	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999952685492977	WITHOUT_CLASSIFICATION	4.7314507023239025E-6	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999995611947533	WITHOUT_CLASSIFICATION	4.3880524674984466E-7	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999971914717372	WITHOUT_CLASSIFICATION	2.808528262816383E-6	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999937113156694	WITHOUT_CLASSIFICATION	6.288684330683023E-6	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999979199015244	WITHOUT_CLASSIFICATION	2.080098475587983E-6	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.999996772799505	WITHOUT_CLASSIFICATION	3.2272004950309235E-6	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999943634810163	WITHOUT_CLASSIFICATION	5.636518983628531E-6	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999778687852667	WITHOUT_CLASSIFICATION	2.2131214733159722E-5	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9987443155410929	WITHOUT_CLASSIFICATION	0.0012556844589071403	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9999941639324478	WITHOUT_CLASSIFICATION	5.836067552223609E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999971831709135	WITHOUT_CLASSIFICATION	2.8168290864326874E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999971831709135	WITHOUT_CLASSIFICATION	2.8168290864326874E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999903224095833	WITHOUT_CLASSIFICATION	9.677590416648202E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999970988553666	WITHOUT_CLASSIFICATION	2.901144633335725E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999998016828107	WITHOUT_CLASSIFICATION	1.9831718927810258E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999998016828107	WITHOUT_CLASSIFICATION	1.9831718927810258E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999788297588105	WITHOUT_CLASSIFICATION	2.1170241189519917E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999774653282637	WITHOUT_CLASSIFICATION	2.2534671736246415E-5	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.999997314037699	WITHOUT_CLASSIFICATION	2.6859623010612813E-6	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999329709790717	WITHOUT_CLASSIFICATION	6.702902092830593E-5	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999166151813959	WITHOUT_CLASSIFICATION	8.338481860418131E-5	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999977052535326	WITHOUT_CLASSIFICATION	2.2947464674917182E-6	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999997462826775	WITHOUT_CLASSIFICATION	2.5371732245455176E-7	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999957713690395	WITHOUT_CLASSIFICATION	4.2286309604060084E-6	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999948796239555	WITHOUT_CLASSIFICATION	5.120376044502125E-6	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999934321308721	WITHOUT_CLASSIFICATION	6.5678691278167165E-6	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999993540023772	WITHOUT_CLASSIFICATION	6.459976229260034E-7	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9999997036491853	WITHOUT_CLASSIFICATION	2.9635081464641824E-7	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999999390492783	WITHOUT_CLASSIFICATION	6.09507216380596E-8	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999651136957786	WITHOUT_CLASSIFICATION	3.4886304221520816E-5	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999841100547145	WITHOUT_CLASSIFICATION	1.5889945285470644E-5	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999841100547145	WITHOUT_CLASSIFICATION	1.5889945285470644E-5	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999968086933786	WITHOUT_CLASSIFICATION	3.1913066213363064E-6	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999980855674416	WITHOUT_CLASSIFICATION	1.914432558361003E-6	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9999926906668775	WITHOUT_CLASSIFICATION	7.30933312258935E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999962763562467	WITHOUT_CLASSIFICATION	3.7236437533094745E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9999774653669742	WITHOUT_CLASSIFICATION	2.25346330257419E-5	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999997937711897	WITHOUT_CLASSIFICATION	2.0622881016674387E-7	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999957787102433	WITHOUT_CLASSIFICATION	4.221289756802592E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999995688274638	WITHOUT_CLASSIFICATION	4.311725362778808E-7	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999992096029999	WITHOUT_CLASSIFICATION	7.903970000788143E-7	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9999566636824085	WITHOUT_CLASSIFICATION	4.33363175914615E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999483267084995	WITHOUT_CLASSIFICATION	5.167329150039509E-5	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9995579775289314	WITHOUT_CLASSIFICATION	4.4202247106870274E-4	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9999928566305603	WITHOUT_CLASSIFICATION	7.143369439722168E-6	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999833707960716	WITHOUT_CLASSIFICATION	1.662920392841542E-5	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999927024748013	WITHOUT_CLASSIFICATION	7.29752519867122E-6	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9999056206122708	WITHOUT_CLASSIFICATION	9.437938772912921E-5	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999961908048398	WITHOUT_CLASSIFICATION	3.809195160286338E-6	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999996688126507	WITHOUT_CLASSIFICATION	3.3118734932762023E-7	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999937823115194	WITHOUT_CLASSIFICATION	6.217688480633874E-6	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.99999986765927	WITHOUT_CLASSIFICATION	1.3234073002888743E-7	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9999673786010069	WITHOUT_CLASSIFICATION	3.2621398993100886E-5	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999985563058391	WITHOUT_CLASSIFICATION	1.4436941608723523E-6	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9999655797092223	WITHOUT_CLASSIFICATION	3.442029077775281E-5	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999981233914302	WITHOUT_CLASSIFICATION	1.8766085697390526E-6	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999944600295594	WITHOUT_CLASSIFICATION	5.539970440634693E-6	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999999758071761	WITHOUT_CLASSIFICATION	2.419282379098951E-8	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999993203365637	WITHOUT_CLASSIFICATION	6.796634363719334E-7	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9999659143012337	WITHOUT_CLASSIFICATION	3.408569876628969E-5	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999792142613578	WITHOUT_CLASSIFICATION	2.078573864213616E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998741763803493	WITHOUT_CLASSIFICATION	1.258236196507733E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998741763803493	WITHOUT_CLASSIFICATION	1.258236196507733E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998741763803493	WITHOUT_CLASSIFICATION	1.258236196507733E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998741763803493	WITHOUT_CLASSIFICATION	1.258236196507733E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998741763803493	WITHOUT_CLASSIFICATION	1.258236196507733E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998741763803493	WITHOUT_CLASSIFICATION	1.258236196507733E-4	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999992971116427	WITHOUT_CLASSIFICATION	7.028883571979259E-7	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.999999863778525	WITHOUT_CLASSIFICATION	1.3622147490835836E-7	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.999999970471731	WITHOUT_CLASSIFICATION	2.9528269092626574E-8	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999979065417032	WITHOUT_CLASSIFICATION	2.0934582967546846E-6	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999979065417032	WITHOUT_CLASSIFICATION	2.0934582967546846E-6	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999983019921574	WITHOUT_CLASSIFICATION	1.698007842553307E-6	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999983019921574	WITHOUT_CLASSIFICATION	1.698007842553307E-6	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999997581225644	WITHOUT_CLASSIFICATION	2.4187743564085015E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9995112598390267	WITHOUT_CLASSIFICATION	4.887401609733801E-4	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999998949639952	WITHOUT_CLASSIFICATION	1.050360047481764E-7	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.999911707434088	WITHOUT_CLASSIFICATION	8.829256591193102E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999981542728085	WITHOUT_CLASSIFICATION	1.8457271916013955E-6	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999964569249757	WITHOUT_CLASSIFICATION	3.543075024276246E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999989689262595	WITHOUT_CLASSIFICATION	1.031073740435331E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999989689262595	WITHOUT_CLASSIFICATION	1.031073740435331E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999957098439752	WITHOUT_CLASSIFICATION	4.290156024680178E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999957098439752	WITHOUT_CLASSIFICATION	4.290156024680178E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999957098439752	WITHOUT_CLASSIFICATION	4.290156024680178E-6	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9997626547173277	WITHOUT_CLASSIFICATION	2.373452826723371E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9997626547173277	WITHOUT_CLASSIFICATION	2.373452826723371E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999975771628609	WITHOUT_CLASSIFICATION	2.422837139144919E-6	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999996762573832	WITHOUT_CLASSIFICATION	3.2374261683202196E-7	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999985509511458	WITHOUT_CLASSIFICATION	1.4490488542635268E-6	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999671633241813	WITHOUT_CLASSIFICATION	3.283667581857365E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999996456297571	WITHOUT_CLASSIFICATION	3.543702429810943E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999996456297571	WITHOUT_CLASSIFICATION	3.543702429810943E-7	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999943688703333	WITHOUT_CLASSIFICATION	5.631129666698862E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998741763803493	WITHOUT_CLASSIFICATION	1.258236196507733E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999996456297571	WITHOUT_CLASSIFICATION	3.543702429810943E-7	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999994093493734	WITHOUT_CLASSIFICATION	5.906506266765265E-7	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999994093493734	WITHOUT_CLASSIFICATION	5.906506266765265E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999996456297571	WITHOUT_CLASSIFICATION	3.543702429810943E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999996456297571	WITHOUT_CLASSIFICATION	3.543702429810943E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999996456297571	WITHOUT_CLASSIFICATION	3.543702429810943E-7	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999211870892789	WITHOUT_CLASSIFICATION	7.881291072110007E-5	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999804707932	WITHOUT_CLASSIFICATION	1.9529206826134496E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.999999972093285	WITHOUT_CLASSIFICATION	2.790671505285679E-8	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.999999972093285	WITHOUT_CLASSIFICATION	2.790671505285679E-8	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.999999843608399	WITHOUT_CLASSIFICATION	1.5639160108383503E-7	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999998591123906	WITHOUT_CLASSIFICATION	1.4088760942836833E-7	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999999428262215	WITHOUT_CLASSIFICATION	5.717377836849257E-8	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999508663278	WITHOUT_CLASSIFICATION	4.913367223027909E-8	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9996248367345127	WITHOUT_CLASSIFICATION	3.7516326548723346E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999987670370564	WITHOUT_CLASSIFICATION	1.2329629435904347E-6	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.999999237239454	WITHOUT_CLASSIFICATION	7.627605458809084E-7	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.999998982497643	WITHOUT_CLASSIFICATION	1.0175023571178873E-6	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999996212697638	WITHOUT_CLASSIFICATION	3.787302361883782E-7	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999998160694402	WITHOUT_CLASSIFICATION	1.8393055987644193E-7	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.999999329861057	WITHOUT_CLASSIFICATION	6.701389431146881E-7	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9999986969256008	WITHOUT_CLASSIFICATION	1.3030743990755982E-6	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999997575514118	WITHOUT_CLASSIFICATION	2.42448588139283E-7	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999884430374719	WITHOUT_CLASSIFICATION	1.1556962528036147E-5	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999999348537405	WITHOUT_CLASSIFICATION	6.514625951345751E-8	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9999370313895797	WITHOUT_CLASSIFICATION	6.296861042023703E-5	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999987261800009	WITHOUT_CLASSIFICATION	1.273819999133995E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999999665442093	WITHOUT_CLASSIFICATION	3.345579069961513E-8	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999997730578437	WITHOUT_CLASSIFICATION	2.269421563813531E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999670161799	WITHOUT_CLASSIFICATION	3.298382010469658E-8	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999958578541512	WITHOUT_CLASSIFICATION	4.142145848782145E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999999665442093	WITHOUT_CLASSIFICATION	3.345579069961513E-8	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.999999268388492	WITHOUT_CLASSIFICATION	7.316115080787374E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999997730578437	WITHOUT_CLASSIFICATION	2.269421563813531E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999670161799	WITHOUT_CLASSIFICATION	3.298382010469658E-8	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999962307479122	WITHOUT_CLASSIFICATION	3.7692520879222033E-6	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999999574231351	WITHOUT_CLASSIFICATION	4.2576864983884065E-8	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999994336820035	WITHOUT_CLASSIFICATION	5.66317996572669E-7	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999988128799088	WITHOUT_CLASSIFICATION	1.1871200911766989E-6	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999992503199087	WITHOUT_CLASSIFICATION	7.496800914701069E-7	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999973541206546	WITHOUT_CLASSIFICATION	2.6458793455173977E-6	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9999473937985449	WITHOUT_CLASSIFICATION	5.2606201455094825E-5	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999996732125418	WITHOUT_CLASSIFICATION	3.2678745815994673E-7	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999978962941104	WITHOUT_CLASSIFICATION	2.1037058896387255E-6	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999929521241901	WITHOUT_CLASSIFICATION	7.047875809855268E-6	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999995927186743	WITHOUT_CLASSIFICATION	4.072813257391886E-7	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999999935318841	WITHOUT_CLASSIFICATION	6.468115966444952E-9	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999957930646596	WITHOUT_CLASSIFICATION	4.206935340433588E-6	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999978386488575	WITHOUT_CLASSIFICATION	2.1613511426150753E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999950659450244	WITHOUT_CLASSIFICATION	4.9340549755453644E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999998229975688	WITHOUT_CLASSIFICATION	1.770024311402115E-7	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999374853500869	WITHOUT_CLASSIFICATION	6.251464991312045E-5	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999927400003166	WITHOUT_CLASSIFICATION	7.259999683475618E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999991986723804	WITHOUT_CLASSIFICATION	8.013276194862867E-7	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999991986723804	WITHOUT_CLASSIFICATION	8.013276194862867E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999997213150371	WITHOUT_CLASSIFICATION	2.786849629542285E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999997213150371	WITHOUT_CLASSIFICATION	2.786849629542285E-7	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999914329297082	WITHOUT_CLASSIFICATION	8.567070291960577E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999914329297082	WITHOUT_CLASSIFICATION	8.567070291960577E-6	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999992255489369	WITHOUT_CLASSIFICATION	7.74451062995042E-7	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999970876595425	WITHOUT_CLASSIFICATION	2.9123404575905668E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999997627652092	WITHOUT_CLASSIFICATION	2.3723479087032426E-7	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999999352267809	WITHOUT_CLASSIFICATION	6.47732192199113E-8	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999997552153047	WITHOUT_CLASSIFICATION	2.447846952609111E-7	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999996758474765	WITHOUT_CLASSIFICATION	3.2415252347594495E-7	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999981362796945	WITHOUT_CLASSIFICATION	1.8637203055727623E-6	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.999999561873669	WITHOUT_CLASSIFICATION	4.3812633097608773E-7	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999910642251655	WITHOUT_CLASSIFICATION	8.935774834609714E-6	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.999702684445628	WITHOUT_CLASSIFICATION	2.973155543720358E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.999998474686075	WITHOUT_CLASSIFICATION	1.5253139250791104E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999353459944	WITHOUT_CLASSIFICATION	6.465400560996413E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999912620515067	WITHOUT_CLASSIFICATION	8.73794849321921E-6	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999990653005422	WITHOUT_CLASSIFICATION	9.346994579475866E-7	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999992948213199	WITHOUT_CLASSIFICATION	7.051786800074006E-7	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999991775508872	WITHOUT_CLASSIFICATION	8.22449112823125E-7	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.999990592936025	WITHOUT_CLASSIFICATION	9.407063974902686E-6	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999994567428603	WITHOUT_CLASSIFICATION	5.432571397818577E-7	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999940538543959	WITHOUT_CLASSIFICATION	5.946145604093759E-6	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.999974021722042	WITHOUT_CLASSIFICATION	2.597827795799941E-5	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9999981939621032	WITHOUT_CLASSIFICATION	1.8060378967593817E-6	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9998943841976512	WITHOUT_CLASSIFICATION	1.0561580234877058E-4	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999999651666269	WITHOUT_CLASSIFICATION	3.4833373116110954E-8	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999984159567354	WITHOUT_CLASSIFICATION	1.584043264597773E-6	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999999175186777	WITHOUT_CLASSIFICATION	8.248132241372636E-8	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999976548110012	WITHOUT_CLASSIFICATION	2.3451889986615574E-6	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999998598881406	WITHOUT_CLASSIFICATION	1.4011185949575E-7	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999997955562203	WITHOUT_CLASSIFICATION	2.044437796751125E-7	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999992854698418	WITHOUT_CLASSIFICATION	7.145301582073722E-7	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999982336125126	WITHOUT_CLASSIFICATION	1.7663874873782146E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999802454530147	WITHOUT_CLASSIFICATION	1.9754546985269115E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9993752803591085	WITHOUT_CLASSIFICATION	6.247196408914949E-4	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999926859953413	WITHOUT_CLASSIFICATION	7.314004658690041E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.999990677134853	WITHOUT_CLASSIFICATION	9.322865146937715E-6	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9996851856675203	WITHOUT_CLASSIFICATION	3.1481433247967455E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9996851856675203	WITHOUT_CLASSIFICATION	3.1481433247967455E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9973742499032308	WITHOUT_CLASSIFICATION	0.002625750096769146	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999186044534187	WITHOUT_CLASSIFICATION	8.139554658129071E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9991393314283735	WITHOUT_CLASSIFICATION	8.60668571626576E-4	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999816305119301	WITHOUT_CLASSIFICATION	1.8369488069854256E-5	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999799317478314	WITHOUT_CLASSIFICATION	2.006825216862872E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999995014202581	WITHOUT_CLASSIFICATION	4.9857974190051E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999995014202581	WITHOUT_CLASSIFICATION	4.9857974190051E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999995014202581	WITHOUT_CLASSIFICATION	4.9857974190051E-6	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999921302345158	WITHOUT_CLASSIFICATION	7.86976548415668E-6	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999549093322997	WITHOUT_CLASSIFICATION	4.509066770030515E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999549093322997	WITHOUT_CLASSIFICATION	4.509066770030515E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999458480580373	WITHOUT_CLASSIFICATION	5.4151941962751185E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9999466619884321	WITHOUT_CLASSIFICATION	5.333801156783638E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999956614907582	WITHOUT_CLASSIFICATION	4.338509241751474E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999956614907582	WITHOUT_CLASSIFICATION	4.338509241751474E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999956614907582	WITHOUT_CLASSIFICATION	4.338509241751474E-6	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999931812382032	WITHOUT_CLASSIFICATION	6.81876179678899E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9999965920477271	WITHOUT_CLASSIFICATION	3.4079522729211156E-6	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999650879521259	WITHOUT_CLASSIFICATION	3.4912047874113745E-5	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999999925436651	WITHOUT_CLASSIFICATION	7.456334862792898E-9	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999978734713656	WITHOUT_CLASSIFICATION	2.1265286345027435E-6	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9999993165977188	WITHOUT_CLASSIFICATION	6.834022810985183E-7	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999377523440399	WITHOUT_CLASSIFICATION	6.22476559600163E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999981005088053	WITHOUT_CLASSIFICATION	1.89949119464685E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999986369050017	WITHOUT_CLASSIFICATION	1.363094998404913E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9993470630160506	WITHOUT_CLASSIFICATION	6.529369839494457E-4	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.997231396823375	WITHOUT_CLASSIFICATION	0.0027686031766250094	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999991775508872	WITHOUT_CLASSIFICATION	8.22449112823125E-7	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999994567428603	WITHOUT_CLASSIFICATION	5.432571397818577E-7	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999925587452456	WITHOUT_CLASSIFICATION	7.441254754369272E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999998388701178	WITHOUT_CLASSIFICATION	1.6112988226307891E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999568532159	WITHOUT_CLASSIFICATION	4.314678409765282E-7	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999575476532454	WITHOUT_CLASSIFICATION	4.245234675455718E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999107876244	WITHOUT_CLASSIFICATION	8.921237560787453E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999107876244	WITHOUT_CLASSIFICATION	8.921237560787453E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999107876244	WITHOUT_CLASSIFICATION	8.921237560787453E-8	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.999965425331276	WITHOUT_CLASSIFICATION	3.4574668723994485E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.999965425331276	WITHOUT_CLASSIFICATION	3.4574668723994485E-5	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999964640523703	WITHOUT_CLASSIFICATION	3.5359476296893063E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9999654913025067	WITHOUT_CLASSIFICATION	3.450869749328019E-5	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999940801558795	WITHOUT_CLASSIFICATION	5.919844120398524E-6	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999961292192623	WITHOUT_CLASSIFICATION	3.870780737676209E-6	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.999956187467375	WITHOUT_CLASSIFICATION	4.3812532625036815E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.999956187467375	WITHOUT_CLASSIFICATION	4.3812532625036815E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999979943205795	WITHOUT_CLASSIFICATION	2.005679420598141E-6	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999976642346461	WITHOUT_CLASSIFICATION	2.335765353817183E-6	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.999999506759188	WITHOUT_CLASSIFICATION	4.932408119809524E-7	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999995686469468	WITHOUT_CLASSIFICATION	4.3135305314863826E-7	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999958198264453	WITHOUT_CLASSIFICATION	4.180173554721205E-6	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999984340580838	WITHOUT_CLASSIFICATION	1.5659419162410325E-6	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999920353310827	WITHOUT_CLASSIFICATION	7.964668917210514E-6	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999999895051652	WITHOUT_CLASSIFICATION	1.0494834674503197E-8	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999998769152711	WITHOUT_CLASSIFICATION	1.2308472876598136E-7	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999993851537405	WITHOUT_CLASSIFICATION	6.148462594845689E-7	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.999999752351395	WITHOUT_CLASSIFICATION	2.4764860494128563E-7	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999835515057786	WITHOUT_CLASSIFICATION	1.6448494221435606E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999568532159	WITHOUT_CLASSIFICATION	4.314678409765282E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999999439496182	WITHOUT_CLASSIFICATION	5.6050381691492355E-8	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999910097383795	WITHOUT_CLASSIFICATION	8.990261620531959E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999568532159	WITHOUT_CLASSIFICATION	4.314678409765282E-7	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999961292192623	WITHOUT_CLASSIFICATION	3.870780737676209E-6	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9999218132874937	WITHOUT_CLASSIFICATION	7.818671250626402E-5	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999999914227318	WITHOUT_CLASSIFICATION	8.577268199357174E-9	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.999999926808475	WITHOUT_CLASSIFICATION	7.31915249832637E-8	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.999999926808475	WITHOUT_CLASSIFICATION	7.31915249832637E-8	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9999970866250765	WITHOUT_CLASSIFICATION	2.9133749235519873E-6	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999979911863974	WITHOUT_CLASSIFICATION	2.0088136026022465E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999996130465579	WITHOUT_CLASSIFICATION	3.869534420190948E-7	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999998755728005	WITHOUT_CLASSIFICATION	1.2442719946304032E-7	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999999993970081	WITHOUT_CLASSIFICATION	6.029919045117463E-10	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999996289267926	WITHOUT_CLASSIFICATION	3.7107320730783574E-7	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999998138324213	WITHOUT_CLASSIFICATION	1.8616757874331782E-7	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999995217534229	WITHOUT_CLASSIFICATION	4.782465770300931E-7	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999999952240075	WITHOUT_CLASSIFICATION	4.77599244359189E-9	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999989502839053	WITHOUT_CLASSIFICATION	1.049716094644274E-6	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9999971419250768	WITHOUT_CLASSIFICATION	2.8580749231538487E-6	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999911830969868	WITHOUT_CLASSIFICATION	8.816903013240067E-6	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9999879297150552	WITHOUT_CLASSIFICATION	1.2070284944759946E-5	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999999894640399	WITHOUT_CLASSIFICATION	1.053596008814689E-8	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999960840728779	WITHOUT_CLASSIFICATION	3.915927122107761E-6	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999943712304746	WITHOUT_CLASSIFICATION	5.628769525351463E-6	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999829546595335	WITHOUT_CLASSIFICATION	1.7045340466522983E-5	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.999996049115439	WITHOUT_CLASSIFICATION	3.950884560964076E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999983174333041	WITHOUT_CLASSIFICATION	1.682566695855265E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999983174333041	WITHOUT_CLASSIFICATION	1.682566695855265E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999568532159	WITHOUT_CLASSIFICATION	4.314678409765282E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999998607061849	WITHOUT_CLASSIFICATION	1.3929381508637962E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.999999752351395	WITHOUT_CLASSIFICATION	2.4764860494128563E-7	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999966218374521	WITHOUT_CLASSIFICATION	3.378162547969252E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999993275449724	WITHOUT_CLASSIFICATION	6.724550275143936E-7	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999967865373475	WITHOUT_CLASSIFICATION	3.213462652550504E-6	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999997090463544	WITHOUT_CLASSIFICATION	2.9095364563293455E-7	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9999999010323721	WITHOUT_CLASSIFICATION	9.896762789866448E-8	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.999999752351395	WITHOUT_CLASSIFICATION	2.4764860494128563E-7	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999963301359919	WITHOUT_CLASSIFICATION	3.6698640080538854E-6	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9999959393970501	WITHOUT_CLASSIFICATION	4.0606029499394715E-6	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999857090920812	WITHOUT_CLASSIFICATION	1.4290907918844739E-5	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999997015140509	WITHOUT_CLASSIFICATION	2.984859490130972E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999996621699909	WITHOUT_CLASSIFICATION	3.3783000906533116E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999957411435061	WITHOUT_CLASSIFICATION	4.2588564938941005E-6	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9999976221610457	WITHOUT_CLASSIFICATION	2.3778389543839947E-6	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999971753273801	WITHOUT_CLASSIFICATION	2.8246726198104243E-6	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999944843037334	WITHOUT_CLASSIFICATION	5.515696266579887E-6	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999993540929589	WITHOUT_CLASSIFICATION	6.459070410601995E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999989303534977	WITHOUT_CLASSIFICATION	1.0696465022242768E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999989303534977	WITHOUT_CLASSIFICATION	1.0696465022242768E-6	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999974197662246	WITHOUT_CLASSIFICATION	2.5802337754674064E-6	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999999150678507	WITHOUT_CLASSIFICATION	8.493214933372516E-8	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999996382478521	WITHOUT_CLASSIFICATION	3.6175214792401276E-7	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999989432788835	WITHOUT_CLASSIFICATION	1.0567211165556792E-6	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999504255986092	WITHOUT_CLASSIFICATION	4.957440139071706E-5	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999953731626489	WITHOUT_CLASSIFICATION	4.62683735117136E-6	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999995819523498	WITHOUT_CLASSIFICATION	4.180476501351805E-7	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999948037478498	WITHOUT_CLASSIFICATION	5.196252150243259E-6	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999985072593742	WITHOUT_CLASSIFICATION	1.4927406257207033E-6	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999188471640404	WITHOUT_CLASSIFICATION	8.1152835959503E-5	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999999115485384	WITHOUT_CLASSIFICATION	8.84514616032707E-8	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999994909145532	WITHOUT_CLASSIFICATION	5.090854467670718E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999994909145532	WITHOUT_CLASSIFICATION	5.090854467670718E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999994909145532	WITHOUT_CLASSIFICATION	5.090854467670718E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999994909145532	WITHOUT_CLASSIFICATION	5.090854467670718E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999994909145532	WITHOUT_CLASSIFICATION	5.090854467670718E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999994909145532	WITHOUT_CLASSIFICATION	5.090854467670718E-7	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.999995519618565	WITHOUT_CLASSIFICATION	4.480381434980629E-6	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999986637510322	WITHOUT_CLASSIFICATION	1.3362489678441108E-6	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.99999984375372	WITHOUT_CLASSIFICATION	1.5624628004335124E-7	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999996755590905	WITHOUT_CLASSIFICATION	3.2444090938119445E-7	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9999903777736432	WITHOUT_CLASSIFICATION	9.622226356787415E-6	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9999918783338309	WITHOUT_CLASSIFICATION	8.121666169175413E-6	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999982701961394	WITHOUT_CLASSIFICATION	1.729803860574889E-6	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999930656891233	WITHOUT_CLASSIFICATION	6.934310876678824E-6	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9999884833718999	WITHOUT_CLASSIFICATION	1.1516628100122429E-5	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999944447059901	WITHOUT_CLASSIFICATION	5.555294009971225E-6	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999996700034789	WITHOUT_CLASSIFICATION	3.2999652115706934E-7	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999993730284965	WITHOUT_CLASSIFICATION	6.269715034695033E-7	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9999981941111402	WITHOUT_CLASSIFICATION	1.8058888598599151E-6	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999999900965014	WITHOUT_CLASSIFICATION	9.903498538026058E-9	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999999833649718	WITHOUT_CLASSIFICATION	1.6635028259462162E-8	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999773624754049	WITHOUT_CLASSIFICATION	2.263752459510457E-5	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999415773100692	WITHOUT_CLASSIFICATION	5.8422689930914554E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999598599503524	WITHOUT_CLASSIFICATION	4.0140049647467566E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999598599503524	WITHOUT_CLASSIFICATION	4.0140049647467566E-5	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999972188965845	WITHOUT_CLASSIFICATION	2.781103415510767E-6	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999641595945467	WITHOUT_CLASSIFICATION	3.58404054534214E-5	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999295021549466	WITHOUT_CLASSIFICATION	7.049784505334883E-5	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9998464169081152	WITHOUT_CLASSIFICATION	1.535830918848051E-4	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999330778629973	WITHOUT_CLASSIFICATION	6.692213700262003E-5	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.999885391877014	WITHOUT_CLASSIFICATION	1.1460812298604146E-4	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999839216834824	WITHOUT_CLASSIFICATION	1.6078316517594792E-5	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999996223328815	WITHOUT_CLASSIFICATION	3.7766711844479436E-7	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.999979728552805	WITHOUT_CLASSIFICATION	2.0271447195032943E-5	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999981917078375	WITHOUT_CLASSIFICATION	1.8082921624435783E-6	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999998392466917	WITHOUT_CLASSIFICATION	1.607533082719498E-7	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999999745642657	WITHOUT_CLASSIFICATION	2.5435734303048925E-8	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999992506678356	WITHOUT_CLASSIFICATION	7.493321643780326E-7	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999998787495875	WITHOUT_CLASSIFICATION	1.212504125841621E-7	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999986787421088	WITHOUT_CLASSIFICATION	1.3212578912854014E-6	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999316346163846	WITHOUT_CLASSIFICATION	6.836538361549722E-5	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999895815482424	WITHOUT_CLASSIFICATION	1.0418451757664405E-5	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.999989360867973	WITHOUT_CLASSIFICATION	1.0639132027092342E-5	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999999707181807	WITHOUT_CLASSIFICATION	2.9281819297723646E-8	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999913148024945	WITHOUT_CLASSIFICATION	8.685197505472928E-6	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999969886457294	WITHOUT_CLASSIFICATION	3.0113542705757008E-6	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999910362529437	WITHOUT_CLASSIFICATION	8.963747056373882E-6	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999736840251695	WITHOUT_CLASSIFICATION	2.6315974830530508E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999864227653248	WITHOUT_CLASSIFICATION	1.357723467510177E-5	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999856690538738	WITHOUT_CLASSIFICATION	1.4330946126210846E-5	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999760351415912	WITHOUT_CLASSIFICATION	2.396485840876456E-5	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999958540118541	WITHOUT_CLASSIFICATION	4.145988145889934E-6	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9998508249046905	WITHOUT_CLASSIFICATION	1.4917509530963175E-4	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999999697108587	WITHOUT_CLASSIFICATION	3.028914129098555E-8	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999943826529759	WITHOUT_CLASSIFICATION	5.617347023980269E-6	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9999483339217523	WITHOUT_CLASSIFICATION	5.166607824775012E-5	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999915417942188	WITHOUT_CLASSIFICATION	8.458205781246477E-6	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999969773665925	WITHOUT_CLASSIFICATION	3.022633407448868E-6	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999974068217047	WITHOUT_CLASSIFICATION	2.593178295279236E-6	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999930661971692	WITHOUT_CLASSIFICATION	6.9338028307468085E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999870738848522	WITHOUT_CLASSIFICATION	1.2926115147807411E-5	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.999999980920758	WITHOUT_CLASSIFICATION	1.9079241977803766E-8	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.999983757516034	WITHOUT_CLASSIFICATION	1.6242483966068624E-5	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999949900598903	WITHOUT_CLASSIFICATION	5.009940109652192E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999949900598903	WITHOUT_CLASSIFICATION	5.009940109652192E-6	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999867413469399	WITHOUT_CLASSIFICATION	1.3258653060141864E-5	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999586545215082	WITHOUT_CLASSIFICATION	4.134547849188338E-5	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.999963326771571	WITHOUT_CLASSIFICATION	3.667322842901918E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999956513173301	WITHOUT_CLASSIFICATION	4.348682669824922E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999996708705835	WITHOUT_CLASSIFICATION	3.291294165106074E-7	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999200869860716	WITHOUT_CLASSIFICATION	7.991301392835067E-5	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999583667132639	WITHOUT_CLASSIFICATION	4.16332867360382E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9996580870666129	WITHOUT_CLASSIFICATION	3.419129333870741E-4	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999999759682636	WITHOUT_CLASSIFICATION	2.4031736339515702E-8	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999999225959221	WITHOUT_CLASSIFICATION	7.740407790809855E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999871865170811	WITHOUT_CLASSIFICATION	1.2813482918990159E-5	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999871951170228	WITHOUT_CLASSIFICATION	1.2804882977204602E-5	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.999987926329781	WITHOUT_CLASSIFICATION	1.2073670219015409E-5	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999764418505044	WITHOUT_CLASSIFICATION	2.3558149495657834E-5	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9998320003927543	WITHOUT_CLASSIFICATION	1.6799960724562282E-4	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999972102039597	WITHOUT_CLASSIFICATION	2.7897960402667108E-6	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999869389893445	WITHOUT_CLASSIFICATION	1.306101065547887E-5	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999896749545827	WITHOUT_CLASSIFICATION	1.0325045417302743E-5	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999984398638985	WITHOUT_CLASSIFICATION	1.5601361014738742E-6	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999997128285945	WITHOUT_CLASSIFICATION	2.871714055122521E-7	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999998058209162	WITHOUT_CLASSIFICATION	1.9417908386983128E-7	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999921856340943	WITHOUT_CLASSIFICATION	7.814365905639841E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999921062003237	WITHOUT_CLASSIFICATION	7.893799676256573E-6	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9996580870666129	WITHOUT_CLASSIFICATION	3.419129333870741E-4	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999964455103085	WITHOUT_CLASSIFICATION	3.5544896915206152E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999964455103085	WITHOUT_CLASSIFICATION	3.5544896915206152E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999921062003237	WITHOUT_CLASSIFICATION	7.893799676256573E-6	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999852500325848	WITHOUT_CLASSIFICATION	1.4749967415135165E-5	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999997879323741	WITHOUT_CLASSIFICATION	2.1206762577825788E-7	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999965152687427	WITHOUT_CLASSIFICATION	3.4847312573424436E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.999999709223421	WITHOUT_CLASSIFICATION	2.907765790947051E-7	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999995972495	WITHOUT_CLASSIFICATION	4.0275050006036236E-7	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9999487260682609	WITHOUT_CLASSIFICATION	5.1273931739162924E-5	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999989907889901	WITHOUT_CLASSIFICATION	1.0092110098426386E-6	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999973615161402	WITHOUT_CLASSIFICATION	2.638483859924187E-6	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999993257476786	WITHOUT_CLASSIFICATION	6.742523214283983E-7	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999981765128594	WITHOUT_CLASSIFICATION	1.8234871406003862E-5	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999659727936492	WITHOUT_CLASSIFICATION	3.4027206350731984E-5	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999996920777552	WITHOUT_CLASSIFICATION	3.0792224477708815E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999993931647202	WITHOUT_CLASSIFICATION	6.068352798887511E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999993931647202	WITHOUT_CLASSIFICATION	6.068352798887511E-7	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9999989045790636	WITHOUT_CLASSIFICATION	1.0954209363766665E-6	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999986612450477	WITHOUT_CLASSIFICATION	1.3387549522675469E-6	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999984617769283	WITHOUT_CLASSIFICATION	1.5382230717182622E-6	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999999923458404	WITHOUT_CLASSIFICATION	7.654159714839749E-9	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999999923458404	WITHOUT_CLASSIFICATION	7.654159714839749E-9	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999867338935465	WITHOUT_CLASSIFICATION	1.326610645359084E-5	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999867338935465	WITHOUT_CLASSIFICATION	1.326610645359084E-5	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999879264845808	WITHOUT_CLASSIFICATION	1.2073515419214808E-5	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999912919457185	WITHOUT_CLASSIFICATION	8.708054281510256E-6	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999963463133398	WITHOUT_CLASSIFICATION	3.6536866602204032E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999951858628807	WITHOUT_CLASSIFICATION	4.814137119269767E-6	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999982863789896	WITHOUT_CLASSIFICATION	1.7136210104328575E-6	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999975016448927	WITHOUT_CLASSIFICATION	2.498355107265749E-6	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999998964993001	WITHOUT_CLASSIFICATION	1.0350069988993207E-7	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999879264845808	WITHOUT_CLASSIFICATION	1.2073515419214808E-5	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999999775285447	WITHOUT_CLASSIFICATION	2.2471455187252425E-8	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999912919457185	WITHOUT_CLASSIFICATION	8.708054281510256E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999991898312592	WITHOUT_CLASSIFICATION	8.101687406841515E-7	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999963463133398	WITHOUT_CLASSIFICATION	3.6536866602204032E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999951858628807	WITHOUT_CLASSIFICATION	4.814137119269767E-6	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999982863789896	WITHOUT_CLASSIFICATION	1.7136210104328575E-6	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999129159188245	WITHOUT_CLASSIFICATION	8.70840811755213E-5	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999997241384206	WITHOUT_CLASSIFICATION	2.7586157934267845E-7	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.999999679324459	WITHOUT_CLASSIFICATION	3.206755410179344E-7	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999996158210842	WITHOUT_CLASSIFICATION	3.8417891574298546E-7	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999992858833742	WITHOUT_CLASSIFICATION	7.141166257467874E-7	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999994267634135	WITHOUT_CLASSIFICATION	5.732365864917389E-7	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999999901858662	WITHOUT_CLASSIFICATION	9.814133843548421E-9	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9999973693628178	WITHOUT_CLASSIFICATION	2.6306371822081146E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999438578739367	WITHOUT_CLASSIFICATION	5.614212606315862E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999991296820552	WITHOUT_CLASSIFICATION	8.703179447756339E-7	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999813399810017	WITHOUT_CLASSIFICATION	1.8660018998356173E-5	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999992062154808	WITHOUT_CLASSIFICATION	7.937845191385283E-7	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999921337023491	WITHOUT_CLASSIFICATION	7.866297650943104E-6	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999814160351748	WITHOUT_CLASSIFICATION	1.8583964825225713E-5	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.999962513597537	WITHOUT_CLASSIFICATION	3.748640246299716E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999913471456087	WITHOUT_CLASSIFICATION	8.652854391343727E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999743190718262	WITHOUT_CLASSIFICATION	2.5680928173729256E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999977919821761	WITHOUT_CLASSIFICATION	2.208017823865106E-6	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9999345230776505	WITHOUT_CLASSIFICATION	6.54769223495486E-5	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999885290768599	WITHOUT_CLASSIFICATION	1.1470923140059339E-5	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9995299746426888	WITHOUT_CLASSIFICATION	4.700253573112266E-4	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999987850982791	WITHOUT_CLASSIFICATION	1.214901720895566E-6	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999980473938461	WITHOUT_CLASSIFICATION	1.9526061539643956E-6	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999980441082914	WITHOUT_CLASSIFICATION	1.9558917086619658E-6	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999992035119127	WITHOUT_CLASSIFICATION	7.964880873283932E-7	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999984866075572	WITHOUT_CLASSIFICATION	1.513392442813041E-6	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999984685258927	WITHOUT_CLASSIFICATION	1.5314741072276304E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999999137346866	WITHOUT_CLASSIFICATION	8.626531337202178E-8	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999956637854243	WITHOUT_CLASSIFICATION	4.336214575723807E-6	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999995816862164	WITHOUT_CLASSIFICATION	4.1831378362517093E-7	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999995972495	WITHOUT_CLASSIFICATION	4.0275050006036236E-7	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999756112641045	WITHOUT_CLASSIFICATION	2.438873589553417E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999963009301277	WITHOUT_CLASSIFICATION	3.699069872286635E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.99999878703818	WITHOUT_CLASSIFICATION	1.2129618199878526E-6	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999998447703854	WITHOUT_CLASSIFICATION	1.5522961460402824E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999950878890821	WITHOUT_CLASSIFICATION	4.912110917906641E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9999887666211095	WITHOUT_CLASSIFICATION	1.1233378890527565E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999999517460629	WITHOUT_CLASSIFICATION	4.82539370318709E-8	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999999033124136	WITHOUT_CLASSIFICATION	9.6687586462492E-8	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999960082560757	WITHOUT_CLASSIFICATION	3.991743924343252E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999999225786689	WITHOUT_CLASSIFICATION	7.742133110616166E-8	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999969000600848	WITHOUT_CLASSIFICATION	3.0999399152321753E-6	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999999854343007	WITHOUT_CLASSIFICATION	1.4565699372048753E-8	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999867571144545	WITHOUT_CLASSIFICATION	1.3242885545454929E-5	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999993203632124	WITHOUT_CLASSIFICATION	6.796367876788072E-7	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9999990902882739	WITHOUT_CLASSIFICATION	9.09711726036881E-7	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999997902125749	WITHOUT_CLASSIFICATION	2.0978742511113933E-7	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999998071854549	WITHOUT_CLASSIFICATION	1.928145452475544E-7	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999992062154808	WITHOUT_CLASSIFICATION	7.937845191385283E-7	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9999921337023491	WITHOUT_CLASSIFICATION	7.866297650943104E-6	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999814160351748	WITHOUT_CLASSIFICATION	1.8583964825225713E-5	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.999962513597537	WITHOUT_CLASSIFICATION	3.748640246299716E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999913471456087	WITHOUT_CLASSIFICATION	8.652854391343727E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999743190718262	WITHOUT_CLASSIFICATION	2.5680928173729256E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999963461407336	WITHOUT_CLASSIFICATION	3.653859266426482E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999977919821761	WITHOUT_CLASSIFICATION	2.208017823865106E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999999137346866	WITHOUT_CLASSIFICATION	8.626531337202178E-8	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999956637854243	WITHOUT_CLASSIFICATION	4.336214575723807E-6	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999995816862164	WITHOUT_CLASSIFICATION	4.1831378362517093E-7	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999996777584854	WITHOUT_CLASSIFICATION	3.222415145188098E-7	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999996777584854	WITHOUT_CLASSIFICATION	3.222415145188098E-7	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999756112641045	WITHOUT_CLASSIFICATION	2.438873589553417E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999963009301277	WITHOUT_CLASSIFICATION	3.699069872286635E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.99999878703818	WITHOUT_CLASSIFICATION	1.2129618199878526E-6	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.999999219772533	WITHOUT_CLASSIFICATION	7.802274669209919E-7	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9998156654724668	WITHOUT_CLASSIFICATION	1.8433452753315754E-4	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999987474395132	WITHOUT_CLASSIFICATION	1.2525604868357296E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999999316052668	WITHOUT_CLASSIFICATION	6.839473316441133E-8	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999876161704234	WITHOUT_CLASSIFICATION	1.238382957652705E-5	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999849301648052	WITHOUT_CLASSIFICATION	1.506983519484834E-5	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999980536892634	WITHOUT_CLASSIFICATION	1.9463107365504853E-6	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999991576468247	WITHOUT_CLASSIFICATION	8.423531752855983E-7	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9999790389167349	WITHOUT_CLASSIFICATION	2.096108326512654E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999993800677294	WITHOUT_CLASSIFICATION	6.19932270642947E-7	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999954222667367	WITHOUT_CLASSIFICATION	4.577733263350632E-6	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9998717680072989	WITHOUT_CLASSIFICATION	1.2823199270107764E-4	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999992492693728	WITHOUT_CLASSIFICATION	7.507306271889664E-7	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9999966718733982	WITHOUT_CLASSIFICATION	3.3281266017540056E-6	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.999999812140681	WITHOUT_CLASSIFICATION	1.8785931902095023E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999999263851259	WITHOUT_CLASSIFICATION	7.361487414280177E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999991857820143	WITHOUT_CLASSIFICATION	8.142179855801863E-7	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999994662774306	WITHOUT_CLASSIFICATION	5.33722569369616E-7	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999961316567338	WITHOUT_CLASSIFICATION	3.868343266194472E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999995115089471	WITHOUT_CLASSIFICATION	4.884910529915977E-7	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9999973962198022	WITHOUT_CLASSIFICATION	2.6037801977398918E-6	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999996750040883	WITHOUT_CLASSIFICATION	3.249959117858554E-7	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999998504218222	WITHOUT_CLASSIFICATION	1.495781777277811E-7	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999996850030088	WITHOUT_CLASSIFICATION	3.149969912110644E-7	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999999579301222	WITHOUT_CLASSIFICATION	4.2069877758287535E-8	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9999934532358431	WITHOUT_CLASSIFICATION	6.546764156877633E-6	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999934461834109	WITHOUT_CLASSIFICATION	6.553816589139088E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999758106167431	WITHOUT_CLASSIFICATION	2.4189383256969653E-5	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9997463129180497	WITHOUT_CLASSIFICATION	2.53687081950255E-4	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999999531661423	WITHOUT_CLASSIFICATION	4.6833857695807705E-7	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9998939839779554	WITHOUT_CLASSIFICATION	1.0601602204464135E-4	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999971831709135	WITHOUT_CLASSIFICATION	2.8168290864326874E-6	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999999805627624	WITHOUT_CLASSIFICATION	1.943723758691014E-8	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999980216612836	WITHOUT_CLASSIFICATION	1.9783387163917354E-6	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999991898312592	WITHOUT_CLASSIFICATION	8.101687406841515E-7	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999988667058601	WITHOUT_CLASSIFICATION	1.1332941399308336E-6	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999998745878055	WITHOUT_CLASSIFICATION	1.2541219445639162E-7	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.999991789608205	WITHOUT_CLASSIFICATION	8.210391794936835E-6	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9999976738158148	WITHOUT_CLASSIFICATION	2.32618418528091E-6	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9999863144142598	WITHOUT_CLASSIFICATION	1.3685585740295756E-5	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999914887647116	WITHOUT_CLASSIFICATION	8.511235288491583E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923675463545	WITHOUT_CLASSIFICATION	7.632453645570221E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923675463545	WITHOUT_CLASSIFICATION	7.632453645570221E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923675463545	WITHOUT_CLASSIFICATION	7.632453645570221E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923675463545	WITHOUT_CLASSIFICATION	7.632453645570221E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923675463545	WITHOUT_CLASSIFICATION	7.632453645570221E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999923675463545	WITHOUT_CLASSIFICATION	7.632453645570221E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999969188652512	WITHOUT_CLASSIFICATION	3.081134748794725E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999950747382367	WITHOUT_CLASSIFICATION	4.925261763378299E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999981793268895	WITHOUT_CLASSIFICATION	1.8206731105005483E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999981793268895	WITHOUT_CLASSIFICATION	1.8206731105005483E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999981793268895	WITHOUT_CLASSIFICATION	1.8206731105005483E-5	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999999892331131	WITHOUT_CLASSIFICATION	1.0766886913387925E-8	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999988039176726	WITHOUT_CLASSIFICATION	1.1960823273905993E-6	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999916305599894	WITHOUT_CLASSIFICATION	8.36944001048572E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999967676641391	WITHOUT_CLASSIFICATION	3.2323358609680774E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999967676641391	WITHOUT_CLASSIFICATION	3.2323358609680774E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.999999781505889	WITHOUT_CLASSIFICATION	2.1849411106838396E-7	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999997629024706	WITHOUT_CLASSIFICATION	2.3709752941180728E-7	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999795557930349	WITHOUT_CLASSIFICATION	2.0444206965104088E-5	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9999910839781342	WITHOUT_CLASSIFICATION	8.916021865851193E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999709331076362	WITHOUT_CLASSIFICATION	2.9066892363758837E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999992353785719	WITHOUT_CLASSIFICATION	7.646214280554866E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999992353785719	WITHOUT_CLASSIFICATION	7.646214280554866E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999992353785719	WITHOUT_CLASSIFICATION	7.646214280554866E-7	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999938778522739	WITHOUT_CLASSIFICATION	6.122147726097165E-6	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999964038612049	WITHOUT_CLASSIFICATION	3.5961387950768437E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999989240396703	WITHOUT_CLASSIFICATION	1.0759603297941895E-6	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999999803819762	WITHOUT_CLASSIFICATION	1.9618023687890294E-8	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999912581470976	WITHOUT_CLASSIFICATION	8.741852902488788E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999912581470976	WITHOUT_CLASSIFICATION	8.741852902488788E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999912581470976	WITHOUT_CLASSIFICATION	8.741852902488788E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999912581470976	WITHOUT_CLASSIFICATION	8.741852902488788E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999912581470976	WITHOUT_CLASSIFICATION	8.741852902488788E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999912581470976	WITHOUT_CLASSIFICATION	8.741852902488788E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999912581470976	WITHOUT_CLASSIFICATION	8.741852902488788E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999912581470976	WITHOUT_CLASSIFICATION	8.741852902488788E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999912581470976	WITHOUT_CLASSIFICATION	8.741852902488788E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999912581470976	WITHOUT_CLASSIFICATION	8.741852902488788E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999912581470976	WITHOUT_CLASSIFICATION	8.741852902488788E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999912581470976	WITHOUT_CLASSIFICATION	8.741852902488788E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9999942200334707	WITHOUT_CLASSIFICATION	5.779966529280272E-6	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999228893194293	WITHOUT_CLASSIFICATION	7.711068057075019E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999228893194293	WITHOUT_CLASSIFICATION	7.711068057075019E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999999103557335	WITHOUT_CLASSIFICATION	8.964426650187888E-8	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999976174704761	WITHOUT_CLASSIFICATION	2.382529523879873E-6	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999971694635305	WITHOUT_CLASSIFICATION	2.8305364696564047E-6	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999969119339513	WITHOUT_CLASSIFICATION	3.088066048617425E-6	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999849691050845	WITHOUT_CLASSIFICATION	1.5030894915557E-5	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999996989332086	WITHOUT_CLASSIFICATION	3.010667913977395E-7	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9999988788869756	WITHOUT_CLASSIFICATION	1.1211130243775035E-6	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9999933245517687	WITHOUT_CLASSIFICATION	6.675448231271294E-6	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999997583645724	WITHOUT_CLASSIFICATION	2.416354275336995E-7	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.999999958859475	WITHOUT_CLASSIFICATION	4.1140524918799843E-8	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998678153068	WITHOUT_CLASSIFICATION	1.3218469319364573E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998678153068	WITHOUT_CLASSIFICATION	1.3218469319364573E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998678153068	WITHOUT_CLASSIFICATION	1.3218469319364573E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998678153068	WITHOUT_CLASSIFICATION	1.3218469319364573E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.999998678153068	WITHOUT_CLASSIFICATION	1.3218469319364573E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999977012186291	WITHOUT_CLASSIFICATION	2.2987813708851468E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.99998667625135	WITHOUT_CLASSIFICATION	1.3323748650077345E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.99998667625135	WITHOUT_CLASSIFICATION	1.3323748650077345E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.99998667625135	WITHOUT_CLASSIFICATION	1.3323748650077345E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.99998667625135	WITHOUT_CLASSIFICATION	1.3323748650077345E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999956973485005	WITHOUT_CLASSIFICATION	4.302651499507507E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999952665881106	WITHOUT_CLASSIFICATION	4.733411889397614E-6	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9110020828650375	WITHOUT_CLASSIFICATION	0.08899791713496255	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999995278871671	WITHOUT_CLASSIFICATION	4.721128328581772E-7	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999963149603676	WITHOUT_CLASSIFICATION	3.685039632514817E-6	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999625151445579	WITHOUT_CLASSIFICATION	3.7484855442184024E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999981965303197	WITHOUT_CLASSIFICATION	1.8034696802429484E-6	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999988184763503	WITHOUT_CLASSIFICATION	1.1815236496523712E-6	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999996770905136	WITHOUT_CLASSIFICATION	3.229094862597588E-7	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999604373930693	WITHOUT_CLASSIFICATION	3.9562606930794303E-5	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999830903421034	WITHOUT_CLASSIFICATION	1.690965789665783E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999895740997139	WITHOUT_CLASSIFICATION	1.0425900286191634E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9999783601562233	WITHOUT_CLASSIFICATION	2.1639843776657987E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978532992282	WITHOUT_CLASSIFICATION	2.1467007718552293E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978532992282	WITHOUT_CLASSIFICATION	2.1467007718552293E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999978532992282	WITHOUT_CLASSIFICATION	2.1467007718552293E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999994382368781	WITHOUT_CLASSIFICATION	5.61763121896073E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999994382368781	WITHOUT_CLASSIFICATION	5.61763121896073E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999972370795286	WITHOUT_CLASSIFICATION	2.762920471410502E-6	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999988766569529	WITHOUT_CLASSIFICATION	1.1233430470724144E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999999925752164	WITHOUT_CLASSIFICATION	7.424783524849601E-9	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.999988694338128	WITHOUT_CLASSIFICATION	1.1305661871970836E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.999988694338128	WITHOUT_CLASSIFICATION	1.1305661871970836E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.999988694338128	WITHOUT_CLASSIFICATION	1.1305661871970836E-5	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999992138388458	WITHOUT_CLASSIFICATION	7.861611542648282E-7	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.999998474686075	WITHOUT_CLASSIFICATION	1.5253139250791104E-6	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999966716437835	WITHOUT_CLASSIFICATION	3.3283562165868348E-6	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999272053167088	WITHOUT_CLASSIFICATION	7.279468329125624E-5	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9999588737253983	WITHOUT_CLASSIFICATION	4.1126274601819994E-5	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.999997047265328	WITHOUT_CLASSIFICATION	2.9527346720362455E-6	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999999865342711	WITHOUT_CLASSIFICATION	1.3465728983728304E-8	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.999999917166418	WITHOUT_CLASSIFICATION	8.283358195710922E-8	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9999583623400502	WITHOUT_CLASSIFICATION	4.163765994984441E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996012634551574	WITHOUT_CLASSIFICATION	3.9873654484254474E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996012634551574	WITHOUT_CLASSIFICATION	3.9873654484254474E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.7282302824893057	DEFECT	0.2717697175106945	WITHOUT_CLASSIFICATION
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999759729552422	WITHOUT_CLASSIFICATION	2.402704475787144E-5	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999991492218387	WITHOUT_CLASSIFICATION	8.507781613031112E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999991492218387	WITHOUT_CLASSIFICATION	8.507781613031112E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999991492218387	WITHOUT_CLASSIFICATION	8.507781613031112E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999991492218387	WITHOUT_CLASSIFICATION	8.507781613031112E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999991492218387	WITHOUT_CLASSIFICATION	8.507781613031112E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999993596986168	WITHOUT_CLASSIFICATION	6.403013832339538E-7	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9995859649328138	WITHOUT_CLASSIFICATION	4.1403506718619946E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9999922582314169	WITHOUT_CLASSIFICATION	7.74176858316204E-6	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999809210152	WITHOUT_CLASSIFICATION	1.9078984899898116E-8	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999985153181572	WITHOUT_CLASSIFICATION	1.4846818427570407E-6	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999994955747036	WITHOUT_CLASSIFICATION	5.044252965000306E-7	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999997946348631	WITHOUT_CLASSIFICATION	2.0536513684037847E-7	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999985459206076	WITHOUT_CLASSIFICATION	1.4540793925301386E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999444334205053	WITHOUT_CLASSIFICATION	5.556657949471282E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999444334205053	WITHOUT_CLASSIFICATION	5.556657949471282E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999999798302915	WITHOUT_CLASSIFICATION	2.016970844301121E-8	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999977928043906	WITHOUT_CLASSIFICATION	2.207195609384229E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999773778511627	WITHOUT_CLASSIFICATION	2.2622148837362565E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999773778511627	WITHOUT_CLASSIFICATION	2.2622148837362565E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999996337305291	WITHOUT_CLASSIFICATION	3.662694708997832E-7	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999959203949061	WITHOUT_CLASSIFICATION	4.079605093943006E-6	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999998513680491	WITHOUT_CLASSIFICATION	1.4863195085566483E-7	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999950117434686	WITHOUT_CLASSIFICATION	4.988256531429124E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.999988285134023	WITHOUT_CLASSIFICATION	1.1714865976999617E-5	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999959828954	WITHOUT_CLASSIFICATION	4.017104610212554E-9	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999997836225765	WITHOUT_CLASSIFICATION	2.1637742342360224E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9999819060554979	WITHOUT_CLASSIFICATION	1.8093944502086996E-5	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9989609426693055	WITHOUT_CLASSIFICATION	0.0010390573306945576	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999996887617101	WITHOUT_CLASSIFICATION	3.1123828992310367E-7	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999868570390708	WITHOUT_CLASSIFICATION	1.31429609291934E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999868570390708	WITHOUT_CLASSIFICATION	1.31429609291934E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999868570390708	WITHOUT_CLASSIFICATION	1.31429609291934E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999868570390708	WITHOUT_CLASSIFICATION	1.31429609291934E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999802454530147	WITHOUT_CLASSIFICATION	1.9754546985269115E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999802454530147	WITHOUT_CLASSIFICATION	1.9754546985269115E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999802454530147	WITHOUT_CLASSIFICATION	1.9754546985269115E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999802454530147	WITHOUT_CLASSIFICATION	1.9754546985269115E-5	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9847643485056261	WITHOUT_CLASSIFICATION	0.015235651494373852	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999996329940989	WITHOUT_CLASSIFICATION	3.670059011977973E-7	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999960540673685	WITHOUT_CLASSIFICATION	3.9459326315950035E-6	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999999771669335	WITHOUT_CLASSIFICATION	2.2833066613021535E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999968570066322	WITHOUT_CLASSIFICATION	3.1429933678311058E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999968570066322	WITHOUT_CLASSIFICATION	3.1429933678311058E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999968570066322	WITHOUT_CLASSIFICATION	3.1429933678311058E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999968570066322	WITHOUT_CLASSIFICATION	3.1429933678311058E-6	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9786754014577044	WITHOUT_CLASSIFICATION	0.021324598542295525	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999998558866785	WITHOUT_CLASSIFICATION	1.4411332150951365E-7	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999999117731732	WITHOUT_CLASSIFICATION	8.822682681749736E-8	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999989971153497	WITHOUT_CLASSIFICATION	1.0028846503257184E-6	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999905735829	WITHOUT_CLASSIFICATION	9.426417145667045E-9	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9969728178564402	WITHOUT_CLASSIFICATION	0.0030271821435597147	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999993827551202	WITHOUT_CLASSIFICATION	6.172448797243448E-7	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999705889468069	WITHOUT_CLASSIFICATION	2.9411053193076083E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999705889468069	WITHOUT_CLASSIFICATION	2.9411053193076083E-5	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999997752411381	WITHOUT_CLASSIFICATION	2.247588617720101E-7	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999987517594355	WITHOUT_CLASSIFICATION	1.248240564478503E-6	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9997184712185371	WITHOUT_CLASSIFICATION	2.8152878146297427E-4	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999999169256224	WITHOUT_CLASSIFICATION	8.307437767591903E-8	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999998652711182	WITHOUT_CLASSIFICATION	1.3472888179354131E-7	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999999929522897	WITHOUT_CLASSIFICATION	7.047710231371372E-9	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999943539337471	WITHOUT_CLASSIFICATION	5.646066252969126E-6	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999999803661619	WITHOUT_CLASSIFICATION	1.9633838062574533E-8	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.999999998539946	WITHOUT_CLASSIFICATION	1.46005397547086E-9	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999925171131038	WITHOUT_CLASSIFICATION	7.482886896263529E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999981843720005	WITHOUT_CLASSIFICATION	1.8156279994563683E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999981843720005	WITHOUT_CLASSIFICATION	1.8156279994563683E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999981843720005	WITHOUT_CLASSIFICATION	1.8156279994563683E-6	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999999867203275	WITHOUT_CLASSIFICATION	1.3279672510467842E-8	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.999996434934049	WITHOUT_CLASSIFICATION	3.5650659509806133E-6	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999999780345603	WITHOUT_CLASSIFICATION	2.1965439721343005E-8	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999758204226993	WITHOUT_CLASSIFICATION	2.4179577300715397E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999758204226993	WITHOUT_CLASSIFICATION	2.4179577300715397E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999927736049691	WITHOUT_CLASSIFICATION	7.226395031002148E-6	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999989872274474	WITHOUT_CLASSIFICATION	1.0127725526078438E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9999977814662868	WITHOUT_CLASSIFICATION	2.2185337130694425E-6	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999960011234379	WITHOUT_CLASSIFICATION	3.998876562151393E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999925936919465	WITHOUT_CLASSIFICATION	7.406308053642043E-6	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999934623732535	WITHOUT_CLASSIFICATION	6.537626746577813E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999989368309832	WITHOUT_CLASSIFICATION	1.0631690167331876E-6	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999997589369689	WITHOUT_CLASSIFICATION	2.410630311550756E-7	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999779753087379	WITHOUT_CLASSIFICATION	2.2024691262062495E-5	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999999904635646	WITHOUT_CLASSIFICATION	9.536435399600834E-9	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999985718140635	WITHOUT_CLASSIFICATION	1.4281859365559623E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.999780640157478	WITHOUT_CLASSIFICATION	2.1935984252198073E-4	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.999780640157478	WITHOUT_CLASSIFICATION	2.1935984252198073E-4	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999993127626345	WITHOUT_CLASSIFICATION	6.872373655427321E-7	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999999984462012	WITHOUT_CLASSIFICATION	1.5537988002145396E-9	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999507164956839	WITHOUT_CLASSIFICATION	4.9283504316189465E-5	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999857080691903	WITHOUT_CLASSIFICATION	1.4291930809750182E-5	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999964762181492	WITHOUT_CLASSIFICATION	3.5237818506642043E-6	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.999936109898532	WITHOUT_CLASSIFICATION	6.389010146793785E-5	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.999999796277923	WITHOUT_CLASSIFICATION	2.037220770567006E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.999998935389432	WITHOUT_CLASSIFICATION	1.0646105680694753E-6	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.999998541106569	WITHOUT_CLASSIFICATION	1.4588934309726613E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999998549168264	WITHOUT_CLASSIFICATION	1.4508317355397992E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999981843720005	WITHOUT_CLASSIFICATION	1.8156279994563683E-6	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999999452096661	WITHOUT_CLASSIFICATION	5.479033398846062E-8	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999194853679	WITHOUT_CLASSIFICATION	8.051463216439725E-8	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999994209330033	WITHOUT_CLASSIFICATION	5.790669967800666E-7	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999999906859262	WITHOUT_CLASSIFICATION	9.31407379603273E-9	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999998015532852	WITHOUT_CLASSIFICATION	1.9844671482717743E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999999211917843	WITHOUT_CLASSIFICATION	7.880821572938743E-8	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999976216817054	WITHOUT_CLASSIFICATION	2.378318294582431E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999987291419127	WITHOUT_CLASSIFICATION	1.270858087281126E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.999998045365256	WITHOUT_CLASSIFICATION	1.954634743907527E-6	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999997274633036	WITHOUT_CLASSIFICATION	2.725366963901711E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999994481522685	WITHOUT_CLASSIFICATION	5.51847731600098E-7	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999995749610421	WITHOUT_CLASSIFICATION	4.250389578281021E-7	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999975942268556	WITHOUT_CLASSIFICATION	2.4057731443722052E-6	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999992524235457	WITHOUT_CLASSIFICATION	7.47576454389601E-7	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999196191614493	WITHOUT_CLASSIFICATION	8.038083855062603E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999999877478076	WITHOUT_CLASSIFICATION	1.2252192394620321E-8	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9997147975434776	WITHOUT_CLASSIFICATION	2.852024565224536E-4	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999984964797222	WITHOUT_CLASSIFICATION	1.503520277789068E-6	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999995301219503	WITHOUT_CLASSIFICATION	4.698780497605433E-7	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999999782853266	WITHOUT_CLASSIFICATION	2.1714673408787442E-8	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999999642443286	WITHOUT_CLASSIFICATION	3.575567145242218E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999996485307187	WITHOUT_CLASSIFICATION	3.5146928132165245E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999996485307187	WITHOUT_CLASSIFICATION	3.5146928132165245E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999996485307187	WITHOUT_CLASSIFICATION	3.5146928132165245E-7	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999999896358102	WITHOUT_CLASSIFICATION	1.0364189823624565E-8	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999853924324681	WITHOUT_CLASSIFICATION	1.460756753199065E-5	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999991666060467	WITHOUT_CLASSIFICATION	8.333939532767956E-7	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999963427636914	WITHOUT_CLASSIFICATION	3.6572363085342447E-6	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.99999889188374	WITHOUT_CLASSIFICATION	1.1081162599817237E-6	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.999649483588026	WITHOUT_CLASSIFICATION	3.505164119740834E-4	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999999874435447	WITHOUT_CLASSIFICATION	1.2556455329010503E-8	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.999990516403705	WITHOUT_CLASSIFICATION	9.483596295025463E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999987031301056	WITHOUT_CLASSIFICATION	1.2968698942860827E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999987031301056	WITHOUT_CLASSIFICATION	1.2968698942860827E-6	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999987031301056	WITHOUT_CLASSIFICATION	1.2968698942860827E-6	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.999999605033381	WITHOUT_CLASSIFICATION	3.9496661893182683E-7	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999999604250819	WITHOUT_CLASSIFICATION	3.957491813561996E-8	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999810045143633	WITHOUT_CLASSIFICATION	1.899548563669235E-5	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999996833541103	WITHOUT_CLASSIFICATION	3.166458897228009E-7	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999999908495479	WITHOUT_CLASSIFICATION	9.1504520200431E-9	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9999903279189596	WITHOUT_CLASSIFICATION	9.672081040379966E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999996855649423	WITHOUT_CLASSIFICATION	3.144350577092917E-7	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999993494548178	WITHOUT_CLASSIFICATION	6.505451822565061E-7	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999999157515886	WITHOUT_CLASSIFICATION	8.424841128575449E-8	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999917803058548	WITHOUT_CLASSIFICATION	8.21969414514106E-6	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999995624074466	WITHOUT_CLASSIFICATION	4.3759255334583713E-7	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999991857820143	WITHOUT_CLASSIFICATION	8.142179855801863E-7	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999991857820143	WITHOUT_CLASSIFICATION	8.142179855801863E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999999849137652	WITHOUT_CLASSIFICATION	1.508623479318089E-8	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9999999387487951	WITHOUT_CLASSIFICATION	6.125120489780844E-8	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999997432305264	WITHOUT_CLASSIFICATION	2.567694735040074E-7	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999998934963151	WITHOUT_CLASSIFICATION	1.0650368488758173E-7	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999994505964531	WITHOUT_CLASSIFICATION	5.49403546843668E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999981843720005	WITHOUT_CLASSIFICATION	1.8156279994563683E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999981843720005	WITHOUT_CLASSIFICATION	1.8156279994563683E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999977012186291	WITHOUT_CLASSIFICATION	2.2987813708851468E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999995179966672	WITHOUT_CLASSIFICATION	4.820033328095208E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999995179966672	WITHOUT_CLASSIFICATION	4.820033328095208E-7	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9999984900453661	WITHOUT_CLASSIFICATION	1.5099546338031264E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999923590362996	WITHOUT_CLASSIFICATION	7.64096370042205E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999998341477074	WITHOUT_CLASSIFICATION	1.658522926292617E-7	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999853489485807	WITHOUT_CLASSIFICATION	1.4651051419270218E-5	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.999999389046467	WITHOUT_CLASSIFICATION	6.109535329033766E-7	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999999513919684	WITHOUT_CLASSIFICATION	4.860803164712929E-8	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999942882023045	WITHOUT_CLASSIFICATION	5.7117976955584775E-6	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999916972717771	WITHOUT_CLASSIFICATION	8.302728223037168E-6	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999985852674286	WITHOUT_CLASSIFICATION	1.4147325714221156E-6	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.999994469666993	WITHOUT_CLASSIFICATION	5.53033300697143E-6	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.999999772965179	WITHOUT_CLASSIFICATION	2.2703482109884378E-7	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999999920831572	WITHOUT_CLASSIFICATION	7.916842952403553E-9	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9999316122794384	WITHOUT_CLASSIFICATION	6.838772056166507E-5	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999997898019657	WITHOUT_CLASSIFICATION	2.1019803420645693E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999996512388883	WITHOUT_CLASSIFICATION	3.487611116992442E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999996512388883	WITHOUT_CLASSIFICATION	3.487611116992442E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999996512388883	WITHOUT_CLASSIFICATION	3.487611116992442E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.999996512388883	WITHOUT_CLASSIFICATION	3.487611116992442E-6	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999997863184218	WITHOUT_CLASSIFICATION	2.1368157815891275E-7	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999999939484134	WITHOUT_CLASSIFICATION	6.051586624539106E-9	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9988499368819581	WITHOUT_CLASSIFICATION	0.0011500631180418647	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999985187176277	WITHOUT_CLASSIFICATION	1.4812823722411165E-6	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999706211691	WITHOUT_CLASSIFICATION	2.937883086391024E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999981843720005	WITHOUT_CLASSIFICATION	1.8156279994563683E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999981843720005	WITHOUT_CLASSIFICATION	1.8156279994563683E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999981843720005	WITHOUT_CLASSIFICATION	1.8156279994563683E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999981843720005	WITHOUT_CLASSIFICATION	1.8156279994563683E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999992746404288	WITHOUT_CLASSIFICATION	7.253595711490755E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999923590362996	WITHOUT_CLASSIFICATION	7.64096370042205E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999978230631417	WITHOUT_CLASSIFICATION	2.176936858308322E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9999978230631417	WITHOUT_CLASSIFICATION	2.176936858308322E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999641446219304	WITHOUT_CLASSIFICATION	3.585537806962606E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999932002794552	WITHOUT_CLASSIFICATION	6.799720544859052E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999932002794552	WITHOUT_CLASSIFICATION	6.799720544859052E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999932002794552	WITHOUT_CLASSIFICATION	6.799720544859052E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999984748550366	WITHOUT_CLASSIFICATION	1.5251449634116124E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999260658115036	WITHOUT_CLASSIFICATION	7.393418849641872E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999906377856715	WITHOUT_CLASSIFICATION	9.362214328517891E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999906377856715	WITHOUT_CLASSIFICATION	9.362214328517891E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999906377856715	WITHOUT_CLASSIFICATION	9.362214328517891E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999984050349556	WITHOUT_CLASSIFICATION	1.5949650442887072E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999984050349556	WITHOUT_CLASSIFICATION	1.5949650442887072E-6	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999998490523012	WITHOUT_CLASSIFICATION	1.509476986840683E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9999984748550366	WITHOUT_CLASSIFICATION	1.5251449634116124E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999600039756648	WITHOUT_CLASSIFICATION	3.999602433513534E-5	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999998607061849	WITHOUT_CLASSIFICATION	1.3929381508637962E-7	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999996110942467	WITHOUT_CLASSIFICATION	3.8890575325692305E-7	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999998542542379	WITHOUT_CLASSIFICATION	1.4574576224726893E-7	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999992591431183	WITHOUT_CLASSIFICATION	7.40856881701619E-7	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999564075113244	WITHOUT_CLASSIFICATION	4.359248867568131E-5	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999998350366672	WITHOUT_CLASSIFICATION	1.6496333274913606E-7	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.99992626585998	WITHOUT_CLASSIFICATION	7.373414001996913E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.999967993610497	WITHOUT_CLASSIFICATION	3.200638950295769E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.999967993610497	WITHOUT_CLASSIFICATION	3.200638950295769E-5	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9998979493167293	WITHOUT_CLASSIFICATION	1.0205068327068343E-4	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9999992292527542	WITHOUT_CLASSIFICATION	7.707472459288092E-7	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999966113179765	WITHOUT_CLASSIFICATION	3.3886820236077474E-6	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999999764253263	WITHOUT_CLASSIFICATION	2.3574673713544558E-8	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.999999952353501	WITHOUT_CLASSIFICATION	4.764649899217489E-8	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9971734257629359	WITHOUT_CLASSIFICATION	0.0028265742370641726	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9998856953052372	WITHOUT_CLASSIFICATION	1.1430469476285659E-4	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.999982694814536	WITHOUT_CLASSIFICATION	1.730518546400479E-5	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999972183648044	WITHOUT_CLASSIFICATION	2.781635195565065E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999976994846884	WITHOUT_CLASSIFICATION	2.300515311660454E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999948370474528	WITHOUT_CLASSIFICATION	5.162952547210111E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999641446219304	WITHOUT_CLASSIFICATION	3.585537806962606E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999641446219304	WITHOUT_CLASSIFICATION	3.585537806962606E-5	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999999968011535	WITHOUT_CLASSIFICATION	3.1988464880192327E-9	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999967979627162	WITHOUT_CLASSIFICATION	3.2020372837651044E-6	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999970240459839	WITHOUT_CLASSIFICATION	2.9759540161322405E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999998675520948	WITHOUT_CLASSIFICATION	1.3244790520576727E-7	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999997937254571	WITHOUT_CLASSIFICATION	2.062745429587104E-7	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999945797232395	WITHOUT_CLASSIFICATION	5.4202767605927155E-6	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999999962450369	WITHOUT_CLASSIFICATION	3.754963142272829E-9	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999987966178467	WITHOUT_CLASSIFICATION	1.203382153353004E-6	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999533936831	WITHOUT_CLASSIFICATION	4.660631700647463E-8	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9999999706622896	WITHOUT_CLASSIFICATION	2.933771041302344E-8	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999827389554096	WITHOUT_CLASSIFICATION	1.7261044590389245E-5	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999999082711998	WITHOUT_CLASSIFICATION	9.172880026395653E-8	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999950878890821	WITHOUT_CLASSIFICATION	4.912110917906641E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999950878890821	WITHOUT_CLASSIFICATION	4.912110917906641E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999895114317183	WITHOUT_CLASSIFICATION	1.0488568281678808E-5	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999999112553172	WITHOUT_CLASSIFICATION	8.874468281629584E-8	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.999963626266827	WITHOUT_CLASSIFICATION	3.63737331731034E-5	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999807452041	WITHOUT_CLASSIFICATION	1.9254795762772423E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999998016828107	WITHOUT_CLASSIFICATION	1.9831718927810258E-7	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999998552033035	WITHOUT_CLASSIFICATION	1.4479669649940465E-7	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999971664790138	WITHOUT_CLASSIFICATION	2.833520986249484E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9999914314231119	WITHOUT_CLASSIFICATION	8.568576888246969E-6	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999954380878697	WITHOUT_CLASSIFICATION	4.561912130278558E-6	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9999993641394456	WITHOUT_CLASSIFICATION	6.358605543348392E-7	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999997315178265	WITHOUT_CLASSIFICATION	2.684821734921445E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999998558063443	WITHOUT_CLASSIFICATION	1.441936557498663E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999826037785	WITHOUT_CLASSIFICATION	1.7396221457385384E-8	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999926525121311	WITHOUT_CLASSIFICATION	7.347487869028734E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999992746404288	WITHOUT_CLASSIFICATION	7.253595711490755E-7	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.9652367340671109	WITHOUT_CLASSIFICATION	0.034763265932889205	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.990628328355786	WITHOUT_CLASSIFICATION	0.009371671644213963	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.990628328355786	WITHOUT_CLASSIFICATION	0.009371671644213963	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.990628328355786	WITHOUT_CLASSIFICATION	0.009371671644213963	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999743154002143	WITHOUT_CLASSIFICATION	2.5684599785684064E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999743154002143	WITHOUT_CLASSIFICATION	2.5684599785684064E-5	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999997617769527	WITHOUT_CLASSIFICATION	2.3822304728081041E-7	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9212180529331857	WITHOUT_CLASSIFICATION	0.07878194706681434	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999991736682959	WITHOUT_CLASSIFICATION	8.263317041460708E-7	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999971472435764	WITHOUT_CLASSIFICATION	2.852756423641757E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999978692520591	WITHOUT_CLASSIFICATION	2.130747940946806E-6	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999957294584902	WITHOUT_CLASSIFICATION	4.270541509751294E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999992746404288	WITHOUT_CLASSIFICATION	7.253595711490755E-7	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999998804622134	WITHOUT_CLASSIFICATION	1.1953778652851713E-7	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.999998696972269	WITHOUT_CLASSIFICATION	1.303027730991712E-6	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9999949431792952	WITHOUT_CLASSIFICATION	5.05682070491507E-6	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9989459694009547	WITHOUT_CLASSIFICATION	0.0010540305990452943	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999989630171112	WITHOUT_CLASSIFICATION	1.036982888753859E-6	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999947542786416	WITHOUT_CLASSIFICATION	5.245721358317086E-6	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999997211146203	WITHOUT_CLASSIFICATION	2.7888537957515093E-7	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999988177288083	WITHOUT_CLASSIFICATION	1.1822711916852805E-6	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9999985489532551	WITHOUT_CLASSIFICATION	1.45104674487606E-6	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9998730167231837	WITHOUT_CLASSIFICATION	1.2698327681623023E-4	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.999843331925339	WITHOUT_CLASSIFICATION	1.5666807466098922E-4	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999995785818678	WITHOUT_CLASSIFICATION	4.214181321731244E-7	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999999554007304	WITHOUT_CLASSIFICATION	4.4599269526964684E-8	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999868957392507	WITHOUT_CLASSIFICATION	1.3104260749210366E-5	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.999996476145539	WITHOUT_CLASSIFICATION	3.5238544610794095E-6	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999993429202808	WITHOUT_CLASSIFICATION	6.570797192284451E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999998250174993	WITHOUT_CLASSIFICATION	1.7498250083129498E-7	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999997355367508	WITHOUT_CLASSIFICATION	2.6446324918283503E-7	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999997355367508	WITHOUT_CLASSIFICATION	2.6446324918283503E-7	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9999936088322825	WITHOUT_CLASSIFICATION	6.3911677175241546E-6	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999985201218442	WITHOUT_CLASSIFICATION	1.479878155801697E-6	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999986171692061	WITHOUT_CLASSIFICATION	1.3828307938834536E-6	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9996703822060005	WITHOUT_CLASSIFICATION	3.2961779399957023E-4	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9993081532460173	WITHOUT_CLASSIFICATION	6.918467539826604E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999715747541893	WITHOUT_CLASSIFICATION	2.842524581072721E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999715747541893	WITHOUT_CLASSIFICATION	2.842524581072721E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999917050122	WITHOUT_CLASSIFICATION	8.29498784297573E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999888600054	WITHOUT_CLASSIFICATION	1.1139994592527517E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999745377451124	WITHOUT_CLASSIFICATION	2.546225488761796E-5	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999745377451124	WITHOUT_CLASSIFICATION	2.546225488761796E-5	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999953666154	WITHOUT_CLASSIFICATION	4.633384647088451E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999879656534	WITHOUT_CLASSIFICATION	1.2034346649048101E-8	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999988895253897	WITHOUT_CLASSIFICATION	1.1104746102736355E-6	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988983167071	WITHOUT_CLASSIFICATION	1.1016832928610852E-6	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.999964327769761	WITHOUT_CLASSIFICATION	3.567223023913539E-5	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999997645739126	WITHOUT_CLASSIFICATION	2.354260874989338E-7	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999999248821871	WITHOUT_CLASSIFICATION	7.511781290332164E-8	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999987719548907	WITHOUT_CLASSIFICATION	1.228045109269044E-6	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999993644991604	WITHOUT_CLASSIFICATION	6.355008396452075E-7	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999987765389	WITHOUT_CLASSIFICATION	1.2234611082875023E-9	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9999997121120583	WITHOUT_CLASSIFICATION	2.878879417024596E-7	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.999999230543256	WITHOUT_CLASSIFICATION	7.694567441136644E-7	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999997901874051	WITHOUT_CLASSIFICATION	2.0981259483623781E-7	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999992632551155	WITHOUT_CLASSIFICATION	7.367448845969597E-7	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999927272407018	WITHOUT_CLASSIFICATION	7.272759298213001E-6	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999999165094191	WITHOUT_CLASSIFICATION	8.349058092740665E-8	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9989572008055454	WITHOUT_CLASSIFICATION	0.0010427991944545367	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999986801806807	WITHOUT_CLASSIFICATION	1.3198193192196663E-6	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999483267084995	WITHOUT_CLASSIFICATION	5.167329150039509E-5	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9999955675531568	WITHOUT_CLASSIFICATION	4.432446843205132E-6	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9994817148813897	WITHOUT_CLASSIFICATION	5.182851186102574E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9994817148813897	WITHOUT_CLASSIFICATION	5.182851186102574E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9994817148813897	WITHOUT_CLASSIFICATION	5.182851186102574E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9994817148813897	WITHOUT_CLASSIFICATION	5.182851186102574E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9994817148813897	WITHOUT_CLASSIFICATION	5.182851186102574E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9995112598390267	WITHOUT_CLASSIFICATION	4.887401609733801E-4	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.999999617159086	WITHOUT_CLASSIFICATION	3.8284091394695444E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999670161799	WITHOUT_CLASSIFICATION	3.298382010469658E-8	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999999600793885	WITHOUT_CLASSIFICATION	3.9920611568810175E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999950659450244	WITHOUT_CLASSIFICATION	4.9340549755453644E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999950659450244	WITHOUT_CLASSIFICATION	4.9340549755453644E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999950659450244	WITHOUT_CLASSIFICATION	4.9340549755453644E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999950659450244	WITHOUT_CLASSIFICATION	4.9340549755453644E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999999298949733	WITHOUT_CLASSIFICATION	7.010502668589063E-8	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999997532619203	WITHOUT_CLASSIFICATION	2.467380797299112E-7	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.999990677134853	WITHOUT_CLASSIFICATION	9.322865146937715E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999995014202581	WITHOUT_CLASSIFICATION	4.9857974190051E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999995014202581	WITHOUT_CLASSIFICATION	4.9857974190051E-6	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999993212726136	WITHOUT_CLASSIFICATION	6.787273863773416E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999568532159	WITHOUT_CLASSIFICATION	4.314678409765282E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.999999568532159	WITHOUT_CLASSIFICATION	4.314678409765282E-7	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999940801558795	WITHOUT_CLASSIFICATION	5.919844120398524E-6	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999982944991143	WITHOUT_CLASSIFICATION	1.7055008856341466E-6	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999965646672415	WITHOUT_CLASSIFICATION	3.435332758459284E-6	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999996403388792	WITHOUT_CLASSIFICATION	3.596611207876588E-7	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999982798963991	WITHOUT_CLASSIFICATION	1.7201036009316827E-6	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999996621699909	WITHOUT_CLASSIFICATION	3.3783000906533116E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999996621699909	WITHOUT_CLASSIFICATION	3.3783000906533116E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9998104420688262	WITHOUT_CLASSIFICATION	1.8955793117377253E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999994909145532	WITHOUT_CLASSIFICATION	5.090854467670718E-7	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999990406899067	WITHOUT_CLASSIFICATION	9.593100931853312E-7	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999990485660781	WITHOUT_CLASSIFICATION	9.514339218857109E-7	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9995797388618856	WITHOUT_CLASSIFICATION	4.202611381145096E-4	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999999940030488	WITHOUT_CLASSIFICATION	5.9969511306246855E-9	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999989056667868	WITHOUT_CLASSIFICATION	1.0943332131693837E-6	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999888656459658	WITHOUT_CLASSIFICATION	1.1134354034090812E-5	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9999926788425804	WITHOUT_CLASSIFICATION	7.321157419644762E-6	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999989575463711	WITHOUT_CLASSIFICATION	1.042453628900838E-6	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9998908307057642	WITHOUT_CLASSIFICATION	1.0916929423580861E-4	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9991793082472251	WITHOUT_CLASSIFICATION	8.206917527749468E-4	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999921856340943	WITHOUT_CLASSIFICATION	7.814365905639841E-6	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9997939347680103	WITHOUT_CLASSIFICATION	2.0606523198979723E-4	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.9999998964993001	WITHOUT_CLASSIFICATION	1.0350069988993207E-7	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999999775285447	WITHOUT_CLASSIFICATION	2.2471455187252425E-8	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999648034635376	WITHOUT_CLASSIFICATION	3.519653646244769E-5	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999997271586751	WITHOUT_CLASSIFICATION	2.7284132479337313E-7	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999963461407336	WITHOUT_CLASSIFICATION	3.653859266426482E-6	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.99999944599306	WITHOUT_CLASSIFICATION	5.540069399535812E-7	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999996777584854	WITHOUT_CLASSIFICATION	3.222415145188098E-7	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999996777584854	WITHOUT_CLASSIFICATION	3.222415145188098E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999965414070997	WITHOUT_CLASSIFICATION	3.458592900283339E-6	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9999416511927781	WITHOUT_CLASSIFICATION	5.834880722187237E-5	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9829602243559017	WITHOUT_CLASSIFICATION	0.017039775644098285	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.996147298356469	WITHOUT_CLASSIFICATION	0.0038527016435311173	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9976065724597483	WITHOUT_CLASSIFICATION	0.0023934275402517713	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9999790125291188	WITHOUT_CLASSIFICATION	2.0987470881135195E-5	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.9964216719307678	WITHOUT_CLASSIFICATION	0.003578328069232177	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9757627994369025	WITHOUT_CLASSIFICATION	0.024237200563097527	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.8067734129683221	DEFECT	0.19322658703167797	WITHOUT_CLASSIFICATION
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9997306259271582	WITHOUT_CLASSIFICATION	2.6937407284179354E-4	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9974327499387391	WITHOUT_CLASSIFICATION	0.0025672500612610254	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.9666360344836146	DEFECT	0.03336396551638541	WITHOUT_CLASSIFICATION
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.8067734129683221	DEFECT	0.19322658703167797	WITHOUT_CLASSIFICATION
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.7825213614037446	DEFECT	0.2174786385962554	WITHOUT_CLASSIFICATION
