/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.999877809899574	WITHOUT_CLASSIFICATION	1.2219010042604714E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999978458681777	WITHOUT_CLASSIFICATION	2.154131822189906E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999999233777956	WITHOUT_CLASSIFICATION	7.662220445597152E-8	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999999233777956	WITHOUT_CLASSIFICATION	7.662220445597152E-8	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999978573096807	WITHOUT_CLASSIFICATION	2.14269031938045E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.999952533247457	WITHOUT_CLASSIFICATION	4.746675254308443E-5	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999997480163533	WITHOUT_CLASSIFICATION	2.5198364674742034E-7	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999985135508773	WITHOUT_CLASSIFICATION	1.4864491226111078E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999908859641856	WITHOUT_CLASSIFICATION	9.114035814475198E-6	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9999754014713591	WITHOUT_CLASSIFICATION	2.4598528640792695E-5	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9999986464458148	WITHOUT_CLASSIFICATION	1.3535541851647172E-6	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999306394038124	WITHOUT_CLASSIFICATION	6.936059618752543E-5	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9999997693045932	WITHOUT_CLASSIFICATION	2.3069540677136506E-7	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9999381343571134	WITHOUT_CLASSIFICATION	6.186564288654858E-5	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9999898653939623	WITHOUT_CLASSIFICATION	1.0134606037798533E-5	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9999052395394514	WITHOUT_CLASSIFICATION	9.476046054854882E-5	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9999052395394514	WITHOUT_CLASSIFICATION	9.476046054854882E-5	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9999999528607112	WITHOUT_CLASSIFICATION	4.713928884998075E-8	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.999998662321332	WITHOUT_CLASSIFICATION	1.3376786678875136E-6	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9992492714826623	WITHOUT_CLASSIFICATION	7.50728517337794E-4	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999983149211618	WITHOUT_CLASSIFICATION	1.685078838248661E-6	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9999033916291458	WITHOUT_CLASSIFICATION	9.660837085417989E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999996329563423	WITHOUT_CLASSIFICATION	3.6704365770066583E-7	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999965000731726	WITHOUT_CLASSIFICATION	3.499926827425223E-6	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999999386840203	WITHOUT_CLASSIFICATION	6.131597964257866E-8	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999997713100773	WITHOUT_CLASSIFICATION	2.2868992271346268E-7	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999998994395767	WITHOUT_CLASSIFICATION	1.0056042327025449E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999764417375504	WITHOUT_CLASSIFICATION	2.3558262449615595E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998106109004	WITHOUT_CLASSIFICATION	1.8938909956387128E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999996370663559	WITHOUT_CLASSIFICATION	3.629336441451849E-7	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999999021509421	WITHOUT_CLASSIFICATION	9.784905794086562E-8	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999991563778505	WITHOUT_CLASSIFICATION	8.436221494939615E-7	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.999934990736543	WITHOUT_CLASSIFICATION	6.5009263457022E-5	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9999994869360596	WITHOUT_CLASSIFICATION	5.130639405423572E-7	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999991500326209	WITHOUT_CLASSIFICATION	8.49967379178375E-7	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999908109016711	WITHOUT_CLASSIFICATION	9.1890983289779E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999257971243767	WITHOUT_CLASSIFICATION	7.420287562323171E-5	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9999983149211618	WITHOUT_CLASSIFICATION	1.685078838248661E-6	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999998178912642	WITHOUT_CLASSIFICATION	1.8210873580847434E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999993015111045	WITHOUT_CLASSIFICATION	6.984888954136049E-7	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9999993015111045	WITHOUT_CLASSIFICATION	6.984888954136049E-7	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999612176478795	WITHOUT_CLASSIFICATION	3.878235212062477E-5	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9999995862823577	WITHOUT_CLASSIFICATION	4.1371764225164904E-7	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.999997769535924	WITHOUT_CLASSIFICATION	2.2304640760010425E-6	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.999997769535924	WITHOUT_CLASSIFICATION	2.2304640760010425E-6	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999973420906296	WITHOUT_CLASSIFICATION	2.6579093704980413E-6	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9999808380246374	WITHOUT_CLASSIFICATION	1.9161975362586743E-5	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999991455948443	WITHOUT_CLASSIFICATION	8.544051558088793E-7	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9999998632109967	WITHOUT_CLASSIFICATION	1.3678900326550725E-7	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999994668169995	WITHOUT_CLASSIFICATION	5.331830005281844E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999978978913013	WITHOUT_CLASSIFICATION	2.102108698638087E-6	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9999991133567238	WITHOUT_CLASSIFICATION	8.86643276225074E-7	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.99999979569593	WITHOUT_CLASSIFICATION	2.0430407002476255E-7	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.99999979569593	WITHOUT_CLASSIFICATION	2.0430407002476255E-7	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9999933968734577	WITHOUT_CLASSIFICATION	6.603126542335227E-6	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9999996820667701	WITHOUT_CLASSIFICATION	3.1793322987232223E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999998235570242	WITHOUT_CLASSIFICATION	1.764429757856781E-7	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9999998235570242	WITHOUT_CLASSIFICATION	1.764429757856781E-7	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999997271744742	WITHOUT_CLASSIFICATION	2.728255257924771E-7	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999986954717277	WITHOUT_CLASSIFICATION	1.3045282723176238E-6	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9999808461245024	WITHOUT_CLASSIFICATION	1.91538754976373E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999529616865929	WITHOUT_CLASSIFICATION	4.703831340720438E-5	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999873591671599	WITHOUT_CLASSIFICATION	1.2640832840045923E-5	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999954068409177	WITHOUT_CLASSIFICATION	4.59315908234035E-6	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9999986071692225	WITHOUT_CLASSIFICATION	1.3928307775232046E-6	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999939276858625	WITHOUT_CLASSIFICATION	6.072314137561718E-6	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9999925146652395	WITHOUT_CLASSIFICATION	7.485334760578683E-6	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9999983775492637	WITHOUT_CLASSIFICATION	1.6224507363205922E-6	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999991628831186	WITHOUT_CLASSIFICATION	8.371168812927869E-7	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9999994227462534	WITHOUT_CLASSIFICATION	5.772537466366689E-7	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9999261187284031	WITHOUT_CLASSIFICATION	7.388127159681919E-5	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9999992903655998	WITHOUT_CLASSIFICATION	7.09634400182852E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999992906639407	WITHOUT_CLASSIFICATION	7.093360593284168E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999992906639407	WITHOUT_CLASSIFICATION	7.093360593284168E-7	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999529616865929	WITHOUT_CLASSIFICATION	4.703831340720438E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999718239577329	WITHOUT_CLASSIFICATION	2.8176042267208504E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999529616865929	WITHOUT_CLASSIFICATION	4.703831340720438E-5	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.999961857861704	WITHOUT_CLASSIFICATION	3.814213829604762E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999718239577329	WITHOUT_CLASSIFICATION	2.8176042267208504E-5	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.999950748116427	WITHOUT_CLASSIFICATION	4.925188357286248E-5	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999431800652849	WITHOUT_CLASSIFICATION	5.681993471515218E-5	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999157389846993	WITHOUT_CLASSIFICATION	8.426101530069521E-5	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999999981226826	WITHOUT_CLASSIFICATION	1.877317328890957E-9	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999986247229834	WITHOUT_CLASSIFICATION	1.375277016615543E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999986247229834	WITHOUT_CLASSIFICATION	1.375277016615543E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999986247229834	WITHOUT_CLASSIFICATION	1.375277016615543E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999986247229834	WITHOUT_CLASSIFICATION	1.375277016615543E-6	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9999487922687329	WITHOUT_CLASSIFICATION	5.120773126699517E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999882915646138	WITHOUT_CLASSIFICATION	1.1708435386293545E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999882915646138	WITHOUT_CLASSIFICATION	1.1708435386293545E-5	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999956846593961	WITHOUT_CLASSIFICATION	4.315340603878829E-6	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999882915646138	WITHOUT_CLASSIFICATION	1.1708435386293545E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999337408324	WITHOUT_CLASSIFICATION	6.625916761733165E-8	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9999945292587732	WITHOUT_CLASSIFICATION	5.470741226791446E-6	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.999999973458844	WITHOUT_CLASSIFICATION	2.6541156049079897E-8	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.999997614560882	WITHOUT_CLASSIFICATION	2.3854391179761487E-6	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.999999898880151	WITHOUT_CLASSIFICATION	1.0111984895849017E-7	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999990719004971	WITHOUT_CLASSIFICATION	9.280995030444986E-7	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999934745660441	WITHOUT_CLASSIFICATION	6.525433955781674E-6	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9999983786820775	WITHOUT_CLASSIFICATION	1.6213179225098698E-6	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999984268307971	WITHOUT_CLASSIFICATION	1.5731692029208499E-6	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9999997319713874	WITHOUT_CLASSIFICATION	2.680286126878311E-7	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.999999073334032	WITHOUT_CLASSIFICATION	9.266659678598897E-7	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999999509841939	WITHOUT_CLASSIFICATION	4.901580602489756E-8	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.999995484311933	WITHOUT_CLASSIFICATION	4.5156880670489355E-6	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9999972711588613	WITHOUT_CLASSIFICATION	2.7288411388186425E-6	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999944603509108	WITHOUT_CLASSIFICATION	5.539649089235165E-6	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999782690451168	WITHOUT_CLASSIFICATION	2.1730954883306046E-5	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9997597611192763	WITHOUT_CLASSIFICATION	2.4023888072359734E-4	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.999993684999277	WITHOUT_CLASSIFICATION	6.315000722981466E-6	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.999999719048329	WITHOUT_CLASSIFICATION	2.80951670958558E-7	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999987966974258	WITHOUT_CLASSIFICATION	1.2033025742995627E-6	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999976372754067	WITHOUT_CLASSIFICATION	2.3627245933355585E-6	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9999999919521536	WITHOUT_CLASSIFICATION	8.047846328769899E-9	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9999995849970303	WITHOUT_CLASSIFICATION	4.1500296967679883E-7	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9999984268307971	WITHOUT_CLASSIFICATION	1.5731692029208499E-6	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9999963555113017	WITHOUT_CLASSIFICATION	3.644488698224261E-6	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.999992829889087	WITHOUT_CLASSIFICATION	7.170110913056359E-6	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9999994250821799	WITHOUT_CLASSIFICATION	5.749178202101094E-7	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999837985139847	WITHOUT_CLASSIFICATION	1.6201486015242333E-5	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9999999418951546	WITHOUT_CLASSIFICATION	5.810484546004063E-8	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999995528865389	WITHOUT_CLASSIFICATION	4.4711346107463614E-7	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999991773440893	WITHOUT_CLASSIFICATION	8.226559106452926E-7	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999969640459143	WITHOUT_CLASSIFICATION	3.0359540857207615E-6	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999979101223554	WITHOUT_CLASSIFICATION	2.0898776444917144E-6	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999973912882631	WITHOUT_CLASSIFICATION	2.6087117367625837E-6	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999781630282115	WITHOUT_CLASSIFICATION	2.1836971788452208E-5	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999775669937236	WITHOUT_CLASSIFICATION	2.2433006276317174E-5	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.999999462116114	WITHOUT_CLASSIFICATION	5.378838860310718E-7	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999996821833059	WITHOUT_CLASSIFICATION	3.1781669403814914E-7	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999999204269671	WITHOUT_CLASSIFICATION	7.957303291927728E-8	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9999971039546378	WITHOUT_CLASSIFICATION	2.8960453621901334E-6	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999998219811809	WITHOUT_CLASSIFICATION	1.7801881907857991E-7	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.999237381752332	WITHOUT_CLASSIFICATION	7.626182476679504E-4	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999919288785639	WITHOUT_CLASSIFICATION	8.071121436066495E-6	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999999880485689	WITHOUT_CLASSIFICATION	1.1951430962105245E-8	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9999995372178393	WITHOUT_CLASSIFICATION	4.6278216068631106E-7	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999995214331487	WITHOUT_CLASSIFICATION	4.785668512788618E-7	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9999964689073767	WITHOUT_CLASSIFICATION	3.5310926232273517E-6	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9999923346559505	WITHOUT_CLASSIFICATION	7.665344049475003E-6	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9999963879546939	WITHOUT_CLASSIFICATION	3.612045306060996E-6	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9999986444057418	WITHOUT_CLASSIFICATION	1.3555942581987822E-6	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999971936305415	WITHOUT_CLASSIFICATION	2.8063694584852003E-6	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.999960297842193	WITHOUT_CLASSIFICATION	3.9702157807058017E-5	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9999985310391101	WITHOUT_CLASSIFICATION	1.46896089003806E-6	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9999900938739764	WITHOUT_CLASSIFICATION	9.906126023508999E-6	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999998026175295	WITHOUT_CLASSIFICATION	1.973824704984909E-7	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999992876436241	WITHOUT_CLASSIFICATION	7.123563757490679E-7	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999995648566257	WITHOUT_CLASSIFICATION	4.351433743196928E-7	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9999877243344936	WITHOUT_CLASSIFICATION	1.2275665506328164E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999999337408324	WITHOUT_CLASSIFICATION	6.625916761733165E-8	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999999961802911	WITHOUT_CLASSIFICATION	3.819708910316837E-9	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999989694903507	WITHOUT_CLASSIFICATION	1.030509649290695E-6	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.999999961560257	WITHOUT_CLASSIFICATION	3.843974314881988E-8	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999934824118506	WITHOUT_CLASSIFICATION	6.517588149368304E-6	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9999096726445227	WITHOUT_CLASSIFICATION	9.032735547731091E-5	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9999996418115292	WITHOUT_CLASSIFICATION	3.581884708419167E-7	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9999990710900061	WITHOUT_CLASSIFICATION	9.289099939017117E-7	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999994583832811	WITHOUT_CLASSIFICATION	5.416167189016922E-7	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999999793527361	WITHOUT_CLASSIFICATION	2.0647263814379603E-8	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9999999335014735	WITHOUT_CLASSIFICATION	6.649852643848637E-8	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9999993710537113	WITHOUT_CLASSIFICATION	6.289462887138413E-7	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999842541462418	WITHOUT_CLASSIFICATION	1.574585375822927E-5	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999980819425203	WITHOUT_CLASSIFICATION	1.91805747965081E-6	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999942608013953	WITHOUT_CLASSIFICATION	5.7391986046671855E-6	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9999958004494195	WITHOUT_CLASSIFICATION	4.1995505805608056E-6	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999973542701772	WITHOUT_CLASSIFICATION	2.645729822812622E-6	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999997099772914	WITHOUT_CLASSIFICATION	2.9002270864634255E-7	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999720411287142	WITHOUT_CLASSIFICATION	2.7958871285824707E-5	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999516950012021	WITHOUT_CLASSIFICATION	4.830499879787878E-5	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9999989221008738	WITHOUT_CLASSIFICATION	1.07789912615271E-6	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999994807778531	WITHOUT_CLASSIFICATION	5.192221469522405E-7	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999999665306852	WITHOUT_CLASSIFICATION	3.3469314753130055E-8	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999981440943239	WITHOUT_CLASSIFICATION	1.8559056762246437E-6	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999933212721	WITHOUT_CLASSIFICATION	6.678727839418803E-9	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999999933212721	WITHOUT_CLASSIFICATION	6.678727839418803E-9	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.999998801511022	WITHOUT_CLASSIFICATION	1.1984889779124751E-6	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.999997526871899	WITHOUT_CLASSIFICATION	2.473128101019113E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999986541309264	WITHOUT_CLASSIFICATION	1.3458690736498094E-6	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999986541309264	WITHOUT_CLASSIFICATION	1.3458690736498094E-6	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999994083231191	WITHOUT_CLASSIFICATION	5.916768809807435E-7	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999998732170843	WITHOUT_CLASSIFICATION	1.2678291570221775E-7	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9999191579201032	WITHOUT_CLASSIFICATION	8.0842079896866E-5	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999998398894278	WITHOUT_CLASSIFICATION	1.6011057218640657E-7	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9999953956909627	WITHOUT_CLASSIFICATION	4.604309037262511E-6	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9999987087130491	WITHOUT_CLASSIFICATION	1.291286950913022E-6	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9999988403819055	WITHOUT_CLASSIFICATION	1.1596180946244349E-6	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9960474776487438	WITHOUT_CLASSIFICATION	0.003952522351256232	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999903911063546	WITHOUT_CLASSIFICATION	9.608893645464101E-6	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999991330748107	WITHOUT_CLASSIFICATION	8.669251893079401E-7	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.9999962344967096	WITHOUT_CLASSIFICATION	3.7655032904901857E-6	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999996295150436	WITHOUT_CLASSIFICATION	3.704849564108654E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999986177741951	WITHOUT_CLASSIFICATION	1.3822258050200749E-6	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999985135508773	WITHOUT_CLASSIFICATION	1.4864491226111078E-6	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9999908859641856	WITHOUT_CLASSIFICATION	9.114035814475198E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999992906639407	WITHOUT_CLASSIFICATION	7.093360593284168E-7	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999986177741951	WITHOUT_CLASSIFICATION	1.3822258050200749E-6	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9989096827221357	WITHOUT_CLASSIFICATION	0.0010903172778643712	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999372880178637	WITHOUT_CLASSIFICATION	6.271198213626159E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999372880178637	WITHOUT_CLASSIFICATION	6.271198213626159E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999372880178637	WITHOUT_CLASSIFICATION	6.271198213626159E-5	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999995467905486	WITHOUT_CLASSIFICATION	4.5320945153498917E-7	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999992460052058	WITHOUT_CLASSIFICATION	7.53994794244945E-7	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999995389698156	WITHOUT_CLASSIFICATION	4.610301844002778E-7	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9997433608966868	WITHOUT_CLASSIFICATION	2.566391033132138E-4	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999953694459994	WITHOUT_CLASSIFICATION	4.630554000567029E-6	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999894978689028	WITHOUT_CLASSIFICATION	1.0502131097315424E-5	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9989096827221357	WITHOUT_CLASSIFICATION	0.0010903172778643712	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999995042144371	WITHOUT_CLASSIFICATION	4.957855629303539E-7	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9999995493639786	WITHOUT_CLASSIFICATION	4.5063602138868477E-7	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999999363052113	WITHOUT_CLASSIFICATION	6.369478868433843E-8	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.999995204120088	WITHOUT_CLASSIFICATION	4.795879911980886E-6	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999998996118401	WITHOUT_CLASSIFICATION	1.0038815989978688E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999992906639407	WITHOUT_CLASSIFICATION	7.093360593284168E-7	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999992906639407	WITHOUT_CLASSIFICATION	7.093360593284168E-7	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9999903911063546	WITHOUT_CLASSIFICATION	9.608893645464101E-6	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999995042144371	WITHOUT_CLASSIFICATION	4.957855629303539E-7	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999977177679951	WITHOUT_CLASSIFICATION	2.282232004927211E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999977177679951	WITHOUT_CLASSIFICATION	2.282232004927211E-6	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999977177679951	WITHOUT_CLASSIFICATION	2.282232004927211E-6	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999990846085705	WITHOUT_CLASSIFICATION	9.153914294591944E-7	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999990846085705	WITHOUT_CLASSIFICATION	9.153914294591944E-7	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999990078014124	WITHOUT_CLASSIFICATION	9.921985877288654E-7	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999990078014124	WITHOUT_CLASSIFICATION	9.921985877288654E-7	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999994699498517	WITHOUT_CLASSIFICATION	5.300501484160285E-7	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999995852337578	WITHOUT_CLASSIFICATION	4.14766242264342E-7	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999995852337578	WITHOUT_CLASSIFICATION	4.14766242264342E-7	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999961822697432	WITHOUT_CLASSIFICATION	3.817730256722376E-6	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999940810543334	WITHOUT_CLASSIFICATION	5.918945666534923E-6	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999990654964025	WITHOUT_CLASSIFICATION	9.345035976243303E-7	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999995369150466	WITHOUT_CLASSIFICATION	4.6308495335528104E-7	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999995369150466	WITHOUT_CLASSIFICATION	4.6308495335528104E-7	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999990181103131	WITHOUT_CLASSIFICATION	9.818896868961741E-7	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999990181103131	WITHOUT_CLASSIFICATION	9.818896868961741E-7	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999992669512614	WITHOUT_CLASSIFICATION	7.330487386612742E-7	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999985402233802	WITHOUT_CLASSIFICATION	1.4597766197799754E-6	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999985182534553	WITHOUT_CLASSIFICATION	1.4817465446693231E-6	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.999999435178487	WITHOUT_CLASSIFICATION	5.648215129771794E-7	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999988089758581	WITHOUT_CLASSIFICATION	1.1910241418547673E-6	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999985239024844	WITHOUT_CLASSIFICATION	1.4760975155631119E-6	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999997407262581	WITHOUT_CLASSIFICATION	2.5927374186230123E-7	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999999520055642	WITHOUT_CLASSIFICATION	4.799443579716257E-8	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.999864658930864	WITHOUT_CLASSIFICATION	1.353410691359612E-4	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.999999930843077	WITHOUT_CLASSIFICATION	6.915692303923913E-8	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999963245410899	WITHOUT_CLASSIFICATION	3.6754589102169895E-6	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9999988324843062	WITHOUT_CLASSIFICATION	1.1675156938189008E-6	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.999998767360119	WITHOUT_CLASSIFICATION	1.2326398810890452E-6	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999996765976539	WITHOUT_CLASSIFICATION	3.2340234619925316E-7	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999592735661392	WITHOUT_CLASSIFICATION	4.072643386079587E-5	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999997084766968	WITHOUT_CLASSIFICATION	2.9152330322286747E-7	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999713408578	WITHOUT_CLASSIFICATION	2.8659142199243958E-8	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999996765976539	WITHOUT_CLASSIFICATION	3.2340234619925316E-7	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999999503934545	WITHOUT_CLASSIFICATION	4.960654552313497E-8	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999996765976539	WITHOUT_CLASSIFICATION	3.2340234619925316E-7	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9999592735661392	WITHOUT_CLASSIFICATION	4.072643386079587E-5	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999979596106748	WITHOUT_CLASSIFICATION	2.0403893251769627E-6	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9999998806522399	WITHOUT_CLASSIFICATION	1.1934776010941762E-7	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9999998149429336	WITHOUT_CLASSIFICATION	1.850570664102426E-7	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999985281389712	WITHOUT_CLASSIFICATION	1.47186102878898E-6	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999953511751413	WITHOUT_CLASSIFICATION	4.648824858800282E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.999998234694043	WITHOUT_CLASSIFICATION	1.7653059569501379E-6	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9999993539949839	WITHOUT_CLASSIFICATION	6.460050161263186E-7	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.999115543818209	WITHOUT_CLASSIFICATION	8.84456181791083E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.999998234694043	WITHOUT_CLASSIFICATION	1.7653059569501379E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.999998234694043	WITHOUT_CLASSIFICATION	1.7653059569501379E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.999998234694043	WITHOUT_CLASSIFICATION	1.7653059569501379E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.999998234694043	WITHOUT_CLASSIFICATION	1.7653059569501379E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9999990159103725	WITHOUT_CLASSIFICATION	9.840896274672905E-7	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9999924605992105	WITHOUT_CLASSIFICATION	7.539400789377942E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999998399093547	WITHOUT_CLASSIFICATION	1.600906452779083E-7	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999998399093547	WITHOUT_CLASSIFICATION	1.600906452779083E-7	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999999816548759	WITHOUT_CLASSIFICATION	1.8345124099880547E-8	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999997071933993	WITHOUT_CLASSIFICATION	2.9280660072132197E-7	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999999791940342	WITHOUT_CLASSIFICATION	2.0805965854486076E-8	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999999056123634	WITHOUT_CLASSIFICATION	9.438763663643288E-8	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999994414745315	WITHOUT_CLASSIFICATION	5.585254685648826E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999997405155674	WITHOUT_CLASSIFICATION	2.594844325719218E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999997405155674	WITHOUT_CLASSIFICATION	2.594844325719218E-7	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999997405155674	WITHOUT_CLASSIFICATION	2.594844325719218E-7	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.999999973348273	WITHOUT_CLASSIFICATION	2.6651727052106567E-8	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9999997478640732	WITHOUT_CLASSIFICATION	2.5213592678697643E-7	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9999928752179527	WITHOUT_CLASSIFICATION	7.124782047259566E-6	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.999963744082347	WITHOUT_CLASSIFICATION	3.625591765308248E-5	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999995275559833	WITHOUT_CLASSIFICATION	4.724440167161753E-7	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9999996692848093	WITHOUT_CLASSIFICATION	3.3071519070081315E-7	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999999138745875	WITHOUT_CLASSIFICATION	8.612541257393232E-8	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999995473492522	WITHOUT_CLASSIFICATION	4.5265074778257843E-7	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.99999386690021	WITHOUT_CLASSIFICATION	6.133099790027858E-6	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999836777104687	WITHOUT_CLASSIFICATION	1.6322289531317904E-5	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999984711347789	WITHOUT_CLASSIFICATION	1.5288652211439639E-6	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999946297034744	WITHOUT_CLASSIFICATION	5.37029652568855E-6	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999999991498574	WITHOUT_CLASSIFICATION	8.501425615606427E-10	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999994065228952	WITHOUT_CLASSIFICATION	5.934771049266377E-7	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999611097248774	WITHOUT_CLASSIFICATION	3.8890275122688664E-5	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999997860016389	WITHOUT_CLASSIFICATION	2.139983612041395E-7	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9999611097248774	WITHOUT_CLASSIFICATION	3.8890275122688664E-5	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9999999124880342	WITHOUT_CLASSIFICATION	8.751196582328346E-8	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9999993036573563	WITHOUT_CLASSIFICATION	6.963426436683759E-7	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9999976509847954	WITHOUT_CLASSIFICATION	2.349015204574733E-6	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999978530179068	WITHOUT_CLASSIFICATION	2.146982093171045E-6	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.999999971949505	WITHOUT_CLASSIFICATION	2.8050494987377987E-8	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999999725302516	WITHOUT_CLASSIFICATION	2.746974835338619E-8	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999921363396117	WITHOUT_CLASSIFICATION	7.863660388280558E-6	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999973785677034	WITHOUT_CLASSIFICATION	2.621432296519937E-6	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999263920145504	WITHOUT_CLASSIFICATION	7.360798544972895E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999834498543606	WITHOUT_CLASSIFICATION	1.6550145639321945E-5	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999999998878661	WITHOUT_CLASSIFICATION	1.1213387228616121E-10	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.999999483259295	WITHOUT_CLASSIFICATION	5.167407050601329E-7	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999997487798119	WITHOUT_CLASSIFICATION	2.5122018816578816E-7	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999998872403806	WITHOUT_CLASSIFICATION	1.127596193412497E-7	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.999999752677317	WITHOUT_CLASSIFICATION	2.473226831068683E-7	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.99999863430553	WITHOUT_CLASSIFICATION	1.3656944698916318E-6	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999999824786492	WITHOUT_CLASSIFICATION	1.752135091081344E-8	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999983999834016	WITHOUT_CLASSIFICATION	1.6000165984043187E-6	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999987142858515	WITHOUT_CLASSIFICATION	1.2857141484138335E-6	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9999999558240062	WITHOUT_CLASSIFICATION	4.417599370532904E-8	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999999853953297	WITHOUT_CLASSIFICATION	1.4604670236363316E-8	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999993084236833	WITHOUT_CLASSIFICATION	6.915763167765724E-7	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999997761362929	WITHOUT_CLASSIFICATION	2.2386370704207302E-7	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999997761362929	WITHOUT_CLASSIFICATION	2.2386370704207302E-7	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999900135358	WITHOUT_CLASSIFICATION	9.986464261190648E-9	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999999900135358	WITHOUT_CLASSIFICATION	9.986464261190648E-9	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999441630593459	WITHOUT_CLASSIFICATION	5.58369406541556E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999789635691654	WITHOUT_CLASSIFICATION	2.1036430834695614E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999789635691654	WITHOUT_CLASSIFICATION	2.1036430834695614E-5	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999998899580615	WITHOUT_CLASSIFICATION	1.1004193840869327E-7	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999998899580615	WITHOUT_CLASSIFICATION	1.1004193840869327E-7	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999898734893866	WITHOUT_CLASSIFICATION	1.0126510613303387E-5	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999998583273574	WITHOUT_CLASSIFICATION	1.4167264262637062E-7	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999998046607069	WITHOUT_CLASSIFICATION	1.953392930570729E-7	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999974636224098	WITHOUT_CLASSIFICATION	2.5363775902240565E-6	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9999924100007831	WITHOUT_CLASSIFICATION	7.5899992168915884E-6	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.999998155544652	WITHOUT_CLASSIFICATION	1.8444553480586959E-6	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999990905411832	WITHOUT_CLASSIFICATION	9.094588166838777E-7	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9999981859326349	WITHOUT_CLASSIFICATION	1.8140673651234369E-6	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9999977658501054	WITHOUT_CLASSIFICATION	2.234149894655268E-6	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9999962798107853	WITHOUT_CLASSIFICATION	3.7201892147463673E-6	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9999999767884141	WITHOUT_CLASSIFICATION	2.321158584400112E-8	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9999934740470869	WITHOUT_CLASSIFICATION	6.5259529130232464E-6	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999999975105566	WITHOUT_CLASSIFICATION	2.489443336367212E-9	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9999981609450379	WITHOUT_CLASSIFICATION	1.839054962053888E-6	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9999991896690621	WITHOUT_CLASSIFICATION	8.103309379670768E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9999257971243767	WITHOUT_CLASSIFICATION	7.420287562323171E-5	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999921363396117	WITHOUT_CLASSIFICATION	7.863660388280558E-6	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999834498543606	WITHOUT_CLASSIFICATION	1.6550145639321945E-5	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999902571246602	WITHOUT_CLASSIFICATION	9.742875339927301E-6	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9999978808019991	WITHOUT_CLASSIFICATION	2.1191980008775443E-6	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9999723333754056	WITHOUT_CLASSIFICATION	2.7666624594427176E-5	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999893439679103	WITHOUT_CLASSIFICATION	1.065603208968341E-5	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999998290489114	WITHOUT_CLASSIFICATION	1.7095108866102995E-7	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9999679682735043	WITHOUT_CLASSIFICATION	3.203172649572483E-5	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999853161084957	WITHOUT_CLASSIFICATION	1.4683891504272731E-5	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9999997704408773	WITHOUT_CLASSIFICATION	2.295591225619393E-7	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999995560645979	WITHOUT_CLASSIFICATION	4.4393540214564603E-7	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999999587501883	WITHOUT_CLASSIFICATION	4.1249811618470515E-8	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9998929736247448	WITHOUT_CLASSIFICATION	1.0702637525514376E-4	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999999309336555	WITHOUT_CLASSIFICATION	6.90663444943976E-8	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.999996106891452	WITHOUT_CLASSIFICATION	3.893108548038604E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.999996106891452	WITHOUT_CLASSIFICATION	3.893108548038604E-6	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.999984463625658	WITHOUT_CLASSIFICATION	1.5536374342096863E-5	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.999984864631208	WITHOUT_CLASSIFICATION	1.513536879206287E-5	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999994931137572	WITHOUT_CLASSIFICATION	5.068862427270554E-7	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9999880707743415	WITHOUT_CLASSIFICATION	1.1929225658432035E-5	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.999992030175812	WITHOUT_CLASSIFICATION	7.96982418796968E-6	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999998083919716	WITHOUT_CLASSIFICATION	1.9160802838639578E-7	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999992832014859	WITHOUT_CLASSIFICATION	7.167985140495401E-7	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9999308771291354	WITHOUT_CLASSIFICATION	6.912287086455035E-5	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9999983662907845	WITHOUT_CLASSIFICATION	1.6337092153881418E-6	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999988574316468	WITHOUT_CLASSIFICATION	1.1425683531860236E-6	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.999999126832566	WITHOUT_CLASSIFICATION	8.731674340811778E-7	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999981557648824	WITHOUT_CLASSIFICATION	1.8442351176198827E-6	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9999999094990794	WITHOUT_CLASSIFICATION	9.050092069581612E-8	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999974374614428	WITHOUT_CLASSIFICATION	2.5625385572241313E-6	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9999915060306039	WITHOUT_CLASSIFICATION	8.493969396060589E-6	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999775009047704	WITHOUT_CLASSIFICATION	2.2499095229607765E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999867266700316	WITHOUT_CLASSIFICATION	1.3273329968365694E-5	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.999999522275904	WITHOUT_CLASSIFICATION	4.777240959479318E-7	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999764417375504	WITHOUT_CLASSIFICATION	2.3558262449615595E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998106109004	WITHOUT_CLASSIFICATION	1.8938909956387128E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999996370663559	WITHOUT_CLASSIFICATION	3.629336441451849E-7	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999996370663559	WITHOUT_CLASSIFICATION	3.629336441451849E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999991563778505	WITHOUT_CLASSIFICATION	8.436221494939615E-7	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999991563778505	WITHOUT_CLASSIFICATION	8.436221494939615E-7	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.999999668568064	WITHOUT_CLASSIFICATION	3.3143193595942535E-7	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9999959614588227	WITHOUT_CLASSIFICATION	4.03854117729721E-6	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9999908739024946	WITHOUT_CLASSIFICATION	9.126097505312003E-6	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9999993378818363	WITHOUT_CLASSIFICATION	6.621181637469292E-7	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9999958849487198	WITHOUT_CLASSIFICATION	4.1150512802390565E-6	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9916499301491208	WITHOUT_CLASSIFICATION	0.008350069850879209	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9902468241953858	WITHOUT_CLASSIFICATION	0.009753175804614182	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999985965888223	WITHOUT_CLASSIFICATION	1.4034111776201505E-6	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9999985965888223	WITHOUT_CLASSIFICATION	1.4034111776201505E-6	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999997108958152	WITHOUT_CLASSIFICATION	2.891041848186876E-7	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999992535661743	WITHOUT_CLASSIFICATION	7.464338257330341E-7	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.999984101727316	WITHOUT_CLASSIFICATION	1.5898272684089134E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.999984101727316	WITHOUT_CLASSIFICATION	1.5898272684089134E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9999947465544083	WITHOUT_CLASSIFICATION	5.253445591627249E-6	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999827978791543	WITHOUT_CLASSIFICATION	1.7202120845656658E-5	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999685517980245	WITHOUT_CLASSIFICATION	3.144820197559187E-5	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999940983398647	WITHOUT_CLASSIFICATION	5.901660135284846E-6	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9999417281028432	WITHOUT_CLASSIFICATION	5.827189715681506E-5	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9999980101664874	WITHOUT_CLASSIFICATION	1.989833512576904E-6	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999993780040021	WITHOUT_CLASSIFICATION	6.219959978874749E-7	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9999993780040021	WITHOUT_CLASSIFICATION	6.219959978874749E-7	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9999808134836699	WITHOUT_CLASSIFICATION	1.918651633022586E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.999984858249519	WITHOUT_CLASSIFICATION	1.5141750480986993E-5	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9999751724216426	WITHOUT_CLASSIFICATION	2.482757835744505E-5	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9999996246636981	WITHOUT_CLASSIFICATION	3.7533630192790326E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999998109758435	WITHOUT_CLASSIFICATION	1.890241565564873E-7	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999987476642987	WITHOUT_CLASSIFICATION	1.2523357011635516E-6	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999979447126446	WITHOUT_CLASSIFICATION	2.0552873553470536E-6	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999998583896053	WITHOUT_CLASSIFICATION	1.4161039466861145E-7	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999984007672031	WITHOUT_CLASSIFICATION	1.599232796901203E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999984007672031	WITHOUT_CLASSIFICATION	1.599232796901203E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999984007672031	WITHOUT_CLASSIFICATION	1.599232796901203E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999984007672031	WITHOUT_CLASSIFICATION	1.599232796901203E-6	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999856766962759	WITHOUT_CLASSIFICATION	1.4323303724033737E-5	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999998916335143	WITHOUT_CLASSIFICATION	1.0836648567462936E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999973431807192	WITHOUT_CLASSIFICATION	2.6568192807550098E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999945699087396	WITHOUT_CLASSIFICATION	5.430091260442482E-6	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999945699087396	WITHOUT_CLASSIFICATION	5.430091260442482E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999930920651258	WITHOUT_CLASSIFICATION	6.9079348742542366E-6	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999930920651258	WITHOUT_CLASSIFICATION	6.9079348742542366E-6	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999902494990393	WITHOUT_CLASSIFICATION	9.750500960712605E-6	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9999685817512948	WITHOUT_CLASSIFICATION	3.1418248705279335E-5	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999847921767367	WITHOUT_CLASSIFICATION	1.520782326318245E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999979930966364	WITHOUT_CLASSIFICATION	2.0069033635781654E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999989458648731	WITHOUT_CLASSIFICATION	1.0541351268129961E-6	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999891356066326	WITHOUT_CLASSIFICATION	1.086439336744956E-5	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999999349080658	WITHOUT_CLASSIFICATION	6.509193410860043E-8	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9998632402723057	WITHOUT_CLASSIFICATION	1.3675972769443896E-4	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.999998572698306	WITHOUT_CLASSIFICATION	1.427301693929685E-6	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9999999546724769	WITHOUT_CLASSIFICATION	4.5327523033199904E-8	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9999983552125098	WITHOUT_CLASSIFICATION	1.644787490237275E-6	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9999997553886266	WITHOUT_CLASSIFICATION	2.4461137336928563E-7	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9999984789961331	WITHOUT_CLASSIFICATION	1.5210038667870738E-6	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9999998051420758	WITHOUT_CLASSIFICATION	1.9485792421561258E-7	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999967680374022	WITHOUT_CLASSIFICATION	3.2319625978023425E-6	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999091053580818	WITHOUT_CLASSIFICATION	9.089464191832531E-5	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9999998555653592	WITHOUT_CLASSIFICATION	1.4443464083620048E-7	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999960853046053	WITHOUT_CLASSIFICATION	3.914695394688032E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999960853046053	WITHOUT_CLASSIFICATION	3.914695394688032E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999960853046053	WITHOUT_CLASSIFICATION	3.914695394688032E-6	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999940242561222	WITHOUT_CLASSIFICATION	5.975743877773799E-6	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9999909278056085	WITHOUT_CLASSIFICATION	9.072194391425414E-6	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999992103987483	WITHOUT_CLASSIFICATION	7.896012516781276E-7	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9998887150788286	WITHOUT_CLASSIFICATION	1.1128492117144396E-4	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999999606617435	WITHOUT_CLASSIFICATION	3.933825647694388E-8	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999993410247355	WITHOUT_CLASSIFICATION	6.589752644614786E-7	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.999987792346026	WITHOUT_CLASSIFICATION	1.2207653973979882E-5	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9999934790993926	WITHOUT_CLASSIFICATION	6.520900607452831E-6	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999982980787357	WITHOUT_CLASSIFICATION	1.7019212642868793E-6	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9999885223975091	WITHOUT_CLASSIFICATION	1.147760249095196E-5	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999998413802456	WITHOUT_CLASSIFICATION	1.586197543846348E-7	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9999911410430061	WITHOUT_CLASSIFICATION	8.858956993875774E-6	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999993832667772	WITHOUT_CLASSIFICATION	6.167332227725729E-7	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9999914456115614	WITHOUT_CLASSIFICATION	8.554388438533083E-6	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999973674074574	WITHOUT_CLASSIFICATION	2.632592542707287E-6	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999985240626178	WITHOUT_CLASSIFICATION	1.4759373822217172E-6	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999998474683699	WITHOUT_CLASSIFICATION	1.5253163002184745E-7	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999999809043463	WITHOUT_CLASSIFICATION	1.9095653683177722E-8	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999999333828303	WITHOUT_CLASSIFICATION	6.661716971275918E-8	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999997788925115	WITHOUT_CLASSIFICATION	2.2110748848978218E-7	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999981305608038	WITHOUT_CLASSIFICATION	1.8694391963222905E-6	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9998861238788567	WITHOUT_CLASSIFICATION	1.1387612114333488E-4	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999999967950938	WITHOUT_CLASSIFICATION	3.204906260896947E-9	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.999928419304862	WITHOUT_CLASSIFICATION	7.158069513795095E-5	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999986371832013	WITHOUT_CLASSIFICATION	1.3628167987783113E-6	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9996462933455187	WITHOUT_CLASSIFICATION	3.537066544813004E-4	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.999973477864075	WITHOUT_CLASSIFICATION	2.6522135925012593E-5	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999986586815798	WITHOUT_CLASSIFICATION	1.3413184202710265E-6	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999995310664669	WITHOUT_CLASSIFICATION	4.6893353314615925E-7	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999325326128	WITHOUT_CLASSIFICATION	6.746738730034423E-8	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999997718005642	WITHOUT_CLASSIFICATION	2.2819943578905842E-7	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999874869813297	WITHOUT_CLASSIFICATION	1.2513018670283786E-5	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999986893667507	WITHOUT_CLASSIFICATION	1.3106332492139101E-6	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9999986807149327	WITHOUT_CLASSIFICATION	1.319285067318478E-6	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9998378952089311	WITHOUT_CLASSIFICATION	1.6210479106906127E-4	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.999850906099651	WITHOUT_CLASSIFICATION	1.4909390034897993E-4	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.999994813764058	WITHOUT_CLASSIFICATION	5.1862359420564324E-6	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9999817739670318	WITHOUT_CLASSIFICATION	1.8226032968219505E-5	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999985356282229	WITHOUT_CLASSIFICATION	1.4643717770783596E-6	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999996080311483	WITHOUT_CLASSIFICATION	3.919688516958822E-7	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999999336336965	WITHOUT_CLASSIFICATION	6.636630351792076E-8	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9999979107716668	WITHOUT_CLASSIFICATION	2.089228333198484E-6	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999994651936668	WITHOUT_CLASSIFICATION	5.34806333180051E-7	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9999877732860004	WITHOUT_CLASSIFICATION	1.2226713999638628E-5	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.99999906417812	WITHOUT_CLASSIFICATION	9.358218800418082E-7	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999983874618383	WITHOUT_CLASSIFICATION	1.6125381617016112E-6	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999891147500671	WITHOUT_CLASSIFICATION	1.0885249932819114E-5	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999996175108983	WITHOUT_CLASSIFICATION	3.8248910167054495E-7	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9999995775942855	WITHOUT_CLASSIFICATION	4.224057146044597E-7	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999994215417559	WITHOUT_CLASSIFICATION	5.784582441924174E-7	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999979794224384	WITHOUT_CLASSIFICATION	2.020577561590523E-6	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9999996642157609	WITHOUT_CLASSIFICATION	3.357842390810852E-7	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9999987973453572	WITHOUT_CLASSIFICATION	1.2026546427545187E-6	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9999998383803986	WITHOUT_CLASSIFICATION	1.6161960140326365E-7	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999997000926462	WITHOUT_CLASSIFICATION	2.99907353874872E-7	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9991690214729569	WITHOUT_CLASSIFICATION	8.309785270429365E-4	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999999718717779	WITHOUT_CLASSIFICATION	2.8128221971135678E-8	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9999989667029292	WITHOUT_CLASSIFICATION	1.0332970708147556E-6	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999999883253332	WITHOUT_CLASSIFICATION	1.1674666762012604E-8	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999996761195423	WITHOUT_CLASSIFICATION	3.23880457611077E-7	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999999914575036	WITHOUT_CLASSIFICATION	8.542496328536468E-9	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.999999987499948	WITHOUT_CLASSIFICATION	1.2500052061210505E-8	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9942295427642179	WITHOUT_CLASSIFICATION	0.005770457235781999	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999999230047689	WITHOUT_CLASSIFICATION	7.699523108051772E-8	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9925944497651423	WITHOUT_CLASSIFICATION	0.007405550234857752	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9998553993383705	WITHOUT_CLASSIFICATION	1.4460066162946358E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9999903363374938	WITHOUT_CLASSIFICATION	9.663662506162408E-6	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.999994190577888	WITHOUT_CLASSIFICATION	5.8094221120572835E-6	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.999999910748476	WITHOUT_CLASSIFICATION	8.925152395229404E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999931148423452	WITHOUT_CLASSIFICATION	6.885157654824631E-6	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999988455714385	WITHOUT_CLASSIFICATION	1.1544285615161845E-6	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9999267199997138	WITHOUT_CLASSIFICATION	7.32800002862627E-5	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999999714162368	WITHOUT_CLASSIFICATION	2.8583763293971748E-8	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999999999559142	WITHOUT_CLASSIFICATION	4.408574953923168E-11	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999658182	WITHOUT_CLASSIFICATION	3.4181799873947876E-8	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999884843790625	WITHOUT_CLASSIFICATION	1.1515620937503534E-5	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9997058967499165	WITHOUT_CLASSIFICATION	2.941032500834675E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999591657428365	WITHOUT_CLASSIFICATION	4.0834257163501977E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999591657428365	WITHOUT_CLASSIFICATION	4.0834257163501977E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999591657428365	WITHOUT_CLASSIFICATION	4.0834257163501977E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999987367384151	WITHOUT_CLASSIFICATION	1.263261584978836E-6	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9999925181151176	WITHOUT_CLASSIFICATION	7.4818848824002725E-6	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999999660790927	WITHOUT_CLASSIFICATION	3.392090728659385E-8	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.999999625286944	WITHOUT_CLASSIFICATION	3.747130560188977E-7	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999986290794117	WITHOUT_CLASSIFICATION	1.3709205882739923E-6	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999998441008651	WITHOUT_CLASSIFICATION	1.558991349508886E-7	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999995276736374	WITHOUT_CLASSIFICATION	4.723263626796945E-7	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999988905972091	WITHOUT_CLASSIFICATION	1.1094027909138468E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996699579926	WITHOUT_CLASSIFICATION	3.300420073935562E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996699579926	WITHOUT_CLASSIFICATION	3.300420073935562E-7	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999942224367713	WITHOUT_CLASSIFICATION	5.777563228817819E-6	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9999996926948364	WITHOUT_CLASSIFICATION	3.073051636725495E-7	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999999658182	WITHOUT_CLASSIFICATION	3.4181799873947876E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999999734496793	WITHOUT_CLASSIFICATION	2.6550320703389678E-8	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999999838048991	WITHOUT_CLASSIFICATION	1.619510095102633E-8	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9999907407666516	WITHOUT_CLASSIFICATION	9.25923334841084E-6	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.9999852771958561	WITHOUT_CLASSIFICATION	1.4722804143960271E-5	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9998953020567642	WITHOUT_CLASSIFICATION	1.0469794323567456E-4	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999998370072649	WITHOUT_CLASSIFICATION	1.6299273502192487E-7	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9999995326485337	WITHOUT_CLASSIFICATION	4.673514662249655E-7	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9995167015853774	WITHOUT_CLASSIFICATION	4.832984146225321E-4	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.999968982265937	WITHOUT_CLASSIFICATION	3.101773406309185E-5	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9999834183178807	WITHOUT_CLASSIFICATION	1.658168211930056E-5	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9998242904165284	WITHOUT_CLASSIFICATION	1.7570958347162596E-4	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.999994056299926	WITHOUT_CLASSIFICATION	5.943700074009195E-6	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999994043250102	WITHOUT_CLASSIFICATION	5.956749898171735E-7	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.999992363738263	WITHOUT_CLASSIFICATION	7.63626173704383E-6	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999770150967258	WITHOUT_CLASSIFICATION	2.2984903274247966E-5	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.999995197773564	WITHOUT_CLASSIFICATION	4.8022264360089355E-6	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9999745803404838	WITHOUT_CLASSIFICATION	2.5419659516146812E-5	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9999730108272139	WITHOUT_CLASSIFICATION	2.6989172786107672E-5	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9999791922474067	WITHOUT_CLASSIFICATION	2.0807752593343804E-5	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9999971533155426	WITHOUT_CLASSIFICATION	2.846684457315528E-6	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999922775564192	WITHOUT_CLASSIFICATION	7.722443580720485E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999992547888895	WITHOUT_CLASSIFICATION	7.452111104341752E-7	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999925645826158	WITHOUT_CLASSIFICATION	7.435417384292094E-6	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999988128891641	WITHOUT_CLASSIFICATION	1.1871108358885776E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.999999268921271	WITHOUT_CLASSIFICATION	7.3107872894469E-7	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999989999504497	WITHOUT_CLASSIFICATION	1.0000495502750173E-6	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9999418542641251	WITHOUT_CLASSIFICATION	5.814573587483633E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999875639699	WITHOUT_CLASSIFICATION	1.2436030147432607E-8	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999996489305838	WITHOUT_CLASSIFICATION	3.5106941623884156E-7	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999999246533887	WITHOUT_CLASSIFICATION	7.534661127009002E-8	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999999999272903	WITHOUT_CLASSIFICATION	7.270962903791275E-11	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9988953658933882	WITHOUT_CLASSIFICATION	0.0011046341066117441	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999990384173827	WITHOUT_CLASSIFICATION	9.615826172156463E-7	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999997900278302	WITHOUT_CLASSIFICATION	2.0997216984388667E-7	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.999985656607407	WITHOUT_CLASSIFICATION	1.4343392592972938E-5	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999996901994631	WITHOUT_CLASSIFICATION	3.0980053686886863E-7	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9999908357235674	WITHOUT_CLASSIFICATION	9.164276432664156E-6	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9999971282725494	WITHOUT_CLASSIFICATION	2.8717274506091025E-6	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9999923696175219	WITHOUT_CLASSIFICATION	7.630382478007433E-6	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.999998991612985	WITHOUT_CLASSIFICATION	1.0083870149736627E-6	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9999987731230718	WITHOUT_CLASSIFICATION	1.2268769281370662E-6	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999994339143994	WITHOUT_CLASSIFICATION	5.660856006407912E-7	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9993828215070124	WITHOUT_CLASSIFICATION	6.171784929876304E-4	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9999988701607413	WITHOUT_CLASSIFICATION	1.1298392587784322E-6	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9999997981701393	WITHOUT_CLASSIFICATION	2.0182986064546271E-7	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9999983730159545	WITHOUT_CLASSIFICATION	1.6269840454683716E-6	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999999798788458	WITHOUT_CLASSIFICATION	2.0121154176712905E-8	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999835839212525	WITHOUT_CLASSIFICATION	1.6416078747504425E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.999983205932923	WITHOUT_CLASSIFICATION	1.6794067077057435E-5	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9999972232711333	WITHOUT_CLASSIFICATION	2.7767288667441395E-6	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9999692791431866	WITHOUT_CLASSIFICATION	3.072085681355767E-5	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9999694252035076	WITHOUT_CLASSIFICATION	3.057479649237808E-5	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.999987502851647	WITHOUT_CLASSIFICATION	1.2497148353006016E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999100698030607	WITHOUT_CLASSIFICATION	8.993019693936816E-5	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999985579448976	WITHOUT_CLASSIFICATION	1.4420551024295388E-6	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999983057662674	WITHOUT_CLASSIFICATION	1.694233732604122E-6	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9999976551597832	WITHOUT_CLASSIFICATION	2.3448402168322744E-6	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999999504299913	WITHOUT_CLASSIFICATION	4.957000858652615E-8	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999999683121862	WITHOUT_CLASSIFICATION	3.168781386342653E-8	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9999994715956247	WITHOUT_CLASSIFICATION	5.284043752681827E-7	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9999972517107504	WITHOUT_CLASSIFICATION	2.748289249618437E-6	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.999991615174727	WITHOUT_CLASSIFICATION	8.384825272895206E-6	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9813126775786126	WITHOUT_CLASSIFICATION	0.01868732242138735	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9997890528846446	WITHOUT_CLASSIFICATION	2.1094711535556046E-4	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999854729771062	WITHOUT_CLASSIFICATION	1.452702289391746E-5	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999998267261879	WITHOUT_CLASSIFICATION	1.732738121413346E-7	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999996784790558	WITHOUT_CLASSIFICATION	3.2152094424671155E-7	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999980952885826	WITHOUT_CLASSIFICATION	1.904711417369423E-6	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9999995692678284	WITHOUT_CLASSIFICATION	4.30732171515233E-7	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9994944939643612	WITHOUT_CLASSIFICATION	5.055060356387692E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9998553993383705	WITHOUT_CLASSIFICATION	1.4460066162946358E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999996784790558	WITHOUT_CLASSIFICATION	3.2152094424671155E-7	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999980952885826	WITHOUT_CLASSIFICATION	1.904711417369423E-6	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999998219099231	WITHOUT_CLASSIFICATION	1.7809007682013257E-7	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999999987461354	WITHOUT_CLASSIFICATION	1.2538645001382984E-9	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9999998829632838	WITHOUT_CLASSIFICATION	1.170367162613436E-7	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999999090700193	WITHOUT_CLASSIFICATION	9.092998065031759E-8	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9999989011699671	WITHOUT_CLASSIFICATION	1.0988300328362941E-6	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9996943210444766	WITHOUT_CLASSIFICATION	3.056789555233016E-4	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.999994556890674	WITHOUT_CLASSIFICATION	5.443109325930323E-6	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999976052308999	WITHOUT_CLASSIFICATION	2.3947691001779566E-6	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999983950997283	WITHOUT_CLASSIFICATION	1.6049002716653182E-6	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999990237248234	WITHOUT_CLASSIFICATION	9.762751766166116E-7	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999988216060893	WITHOUT_CLASSIFICATION	1.178393910750126E-6	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999997081867157	WITHOUT_CLASSIFICATION	2.9181328431722344E-7	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9999840369004014	WITHOUT_CLASSIFICATION	1.5963099598537005E-5	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9999993782423757	WITHOUT_CLASSIFICATION	6.217576243501599E-7	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999858482864714	WITHOUT_CLASSIFICATION	1.4151713528619689E-5	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9999981444506413	WITHOUT_CLASSIFICATION	1.8555493587330307E-6	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9999844260555932	WITHOUT_CLASSIFICATION	1.5573944406768214E-5	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9998532689180131	WITHOUT_CLASSIFICATION	1.4673108198690407E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999999626245645	WITHOUT_CLASSIFICATION	3.737543558045142E-8	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9997460258302874	WITHOUT_CLASSIFICATION	2.539741697126295E-4	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9999729209275943	WITHOUT_CLASSIFICATION	2.7079072405612538E-5	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999871229133551	WITHOUT_CLASSIFICATION	1.2877086644923108E-5	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9999825659225252	WITHOUT_CLASSIFICATION	1.7434077474807236E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.999999910748476	WITHOUT_CLASSIFICATION	8.925152395229404E-8	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999988929058615	WITHOUT_CLASSIFICATION	1.1070941384100312E-6	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9999936765006131	WITHOUT_CLASSIFICATION	6.323499386811903E-6	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9999698976871795	WITHOUT_CLASSIFICATION	3.0102312820616464E-5	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9995745542037026	WITHOUT_CLASSIFICATION	4.25445796297435E-4	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9999716092824358	WITHOUT_CLASSIFICATION	2.8390717564144094E-5	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.999893104223377	WITHOUT_CLASSIFICATION	1.0689577662299223E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9999994657646635	WITHOUT_CLASSIFICATION	5.342353365780461E-7	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999310109414029	WITHOUT_CLASSIFICATION	6.898905859718751E-5	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9999980347885941	WITHOUT_CLASSIFICATION	1.9652114059715405E-6	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999997383295317	WITHOUT_CLASSIFICATION	2.616704682696833E-7	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.999998030116056	WITHOUT_CLASSIFICATION	1.9698839439367577E-6	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9999882589551735	WITHOUT_CLASSIFICATION	1.1741044826374649E-5	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9999821895957062	WITHOUT_CLASSIFICATION	1.781040429373917E-5	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999997426657832	WITHOUT_CLASSIFICATION	2.573342168111646E-7	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999992012641058	WITHOUT_CLASSIFICATION	7.98735894238817E-7	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999967271	WITHOUT_CLASSIFICATION	3.2729000366200857E-9	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.999998488876863	WITHOUT_CLASSIFICATION	1.5111231370009264E-6	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9999874857295379	WITHOUT_CLASSIFICATION	1.2514270462097118E-5	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999994703574823	WITHOUT_CLASSIFICATION	5.296425177135914E-7	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999990943248841	WITHOUT_CLASSIFICATION	9.056751159052782E-7	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999815844426535	WITHOUT_CLASSIFICATION	1.841555734652342E-5	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.999993120189412	WITHOUT_CLASSIFICATION	6.879810587937142E-6	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.999993120189412	WITHOUT_CLASSIFICATION	6.879810587937142E-6	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.999998577199607	WITHOUT_CLASSIFICATION	1.4228003929194802E-6	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999843943213995	WITHOUT_CLASSIFICATION	1.5605678600477877E-5	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999988082745441	WITHOUT_CLASSIFICATION	1.1917254558904676E-6	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999999540351897	WITHOUT_CLASSIFICATION	4.596481035150146E-8	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999979048682064	WITHOUT_CLASSIFICATION	2.0951317936431658E-6	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999999278411724	WITHOUT_CLASSIFICATION	7.21588276414505E-8	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.999997104073522	WITHOUT_CLASSIFICATION	2.8959264780042023E-6	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9999873872863753	WITHOUT_CLASSIFICATION	1.2612713624692246E-5	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999879246394302	WITHOUT_CLASSIFICATION	1.207536056975997E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.999997498116832	WITHOUT_CLASSIFICATION	2.5018831679292906E-6	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999995614810929	WITHOUT_CLASSIFICATION	4.3851890704418356E-7	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9999946684679499	WITHOUT_CLASSIFICATION	5.331532050074496E-6	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.999999966400683	WITHOUT_CLASSIFICATION	3.3599317066732293E-8	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.999999966400683	WITHOUT_CLASSIFICATION	3.3599317066732293E-8	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999998083396371	WITHOUT_CLASSIFICATION	1.9166036291767364E-7	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999996939214837	WITHOUT_CLASSIFICATION	3.0607851637293703E-7	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999998295419747	WITHOUT_CLASSIFICATION	1.7045802526906355E-7	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999991683109543	WITHOUT_CLASSIFICATION	8.316890456732349E-7	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.99999996756992	WITHOUT_CLASSIFICATION	3.24300799040375E-8	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999999527600317	WITHOUT_CLASSIFICATION	4.723996842034525E-8	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999997254360711	WITHOUT_CLASSIFICATION	2.7456392889799034E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999803396576344	WITHOUT_CLASSIFICATION	1.966034236560816E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999803396576344	WITHOUT_CLASSIFICATION	1.966034236560816E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999803396576344	WITHOUT_CLASSIFICATION	1.966034236560816E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999803396576344	WITHOUT_CLASSIFICATION	1.966034236560816E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999803396576344	WITHOUT_CLASSIFICATION	1.966034236560816E-5	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9999771667726912	WITHOUT_CLASSIFICATION	2.2833227308829047E-5	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999967888180312	WITHOUT_CLASSIFICATION	3.2111819687275595E-6	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.999997906387601	WITHOUT_CLASSIFICATION	2.09361239907621E-6	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999978489764535	WITHOUT_CLASSIFICATION	2.151023546505497E-6	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999907398862128	WITHOUT_CLASSIFICATION	9.260113787145297E-6	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999997329185645	WITHOUT_CLASSIFICATION	2.670814355132903E-7	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999665332923118	WITHOUT_CLASSIFICATION	3.346670768820602E-5	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999987462535525	WITHOUT_CLASSIFICATION	1.2537464475840445E-6	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9999851792716877	WITHOUT_CLASSIFICATION	1.4820728312333482E-5	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999991690544239	WITHOUT_CLASSIFICATION	8.30945576119079E-7	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999994665006277	WITHOUT_CLASSIFICATION	5.334993722438754E-7	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999995371492275	WITHOUT_CLASSIFICATION	4.628507724534161E-7	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999999420047023	WITHOUT_CLASSIFICATION	5.799529770455958E-8	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999999510046951	WITHOUT_CLASSIFICATION	4.899530493144941E-8	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999970025302526	WITHOUT_CLASSIFICATION	2.9974697475325175E-6	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.992025263146298	WITHOUT_CLASSIFICATION	0.007974736853701954	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999995901058367	WITHOUT_CLASSIFICATION	4.098941633411323E-7	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9998811833280151	WITHOUT_CLASSIFICATION	1.1881667198481936E-4	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999997423177381	WITHOUT_CLASSIFICATION	2.576822618179567E-7	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9999972265150947	WITHOUT_CLASSIFICATION	2.773484905216434E-6	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999972627759249	WITHOUT_CLASSIFICATION	2.7372240751617846E-6	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999998985566927	WITHOUT_CLASSIFICATION	1.0144330737133189E-7	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999999394407045	WITHOUT_CLASSIFICATION	6.055929540038038E-8	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999998753741235	WITHOUT_CLASSIFICATION	1.2462587652733626E-7	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999999955113182	WITHOUT_CLASSIFICATION	4.4886817275892536E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989766958189	WITHOUT_CLASSIFICATION	1.0233041809873985E-6	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997694802429	WITHOUT_CLASSIFICATION	2.305197570847464E-7	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9999058315705398	WITHOUT_CLASSIFICATION	9.416842946016811E-5	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999982751212249	WITHOUT_CLASSIFICATION	1.7248787751486841E-6	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999979517986187	WITHOUT_CLASSIFICATION	2.0482013813851073E-6	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9999989299106974	WITHOUT_CLASSIFICATION	1.0700893025247503E-6	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999987299804133	WITHOUT_CLASSIFICATION	1.270019586758389E-6	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999988535186031	WITHOUT_CLASSIFICATION	1.1464813969427843E-6	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999812728333601	WITHOUT_CLASSIFICATION	1.8727166639807624E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999992694420569	WITHOUT_CLASSIFICATION	7.305579430617328E-7	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9999994710522674	WITHOUT_CLASSIFICATION	5.289477326239404E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.999999468979458	WITHOUT_CLASSIFICATION	5.310205419499604E-7	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.999999468979458	WITHOUT_CLASSIFICATION	5.310205419499604E-7	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.999996958002515	WITHOUT_CLASSIFICATION	3.0419974850993226E-6	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999997766714099	WITHOUT_CLASSIFICATION	2.2332858999385784E-7	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.999999925597006	WITHOUT_CLASSIFICATION	7.44029940605683E-8	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999997759929038	WITHOUT_CLASSIFICATION	2.2400709630724535E-7	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999646220322	WITHOUT_CLASSIFICATION	3.5377967716126494E-8	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999971409814383	WITHOUT_CLASSIFICATION	2.8590185617780793E-6	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999980463949155	WITHOUT_CLASSIFICATION	1.9536050845014008E-6	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9999749979301129	WITHOUT_CLASSIFICATION	2.500206988710634E-5	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9999930706007855	WITHOUT_CLASSIFICATION	6.929399214615727E-6	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999997426752741	WITHOUT_CLASSIFICATION	2.5732472593299585E-7	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999997607067299	WITHOUT_CLASSIFICATION	2.3929327003729944E-7	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9998816732100072	WITHOUT_CLASSIFICATION	1.1832678999285471E-4	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999999056411238	WITHOUT_CLASSIFICATION	9.435887615760897E-8	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9991940553372115	WITHOUT_CLASSIFICATION	8.059446627884464E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999992694420569	WITHOUT_CLASSIFICATION	7.305579430617328E-7	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999999646220322	WITHOUT_CLASSIFICATION	3.5377967716126494E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999992196971934	WITHOUT_CLASSIFICATION	7.803028065568044E-7	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9999986276595165	WITHOUT_CLASSIFICATION	1.3723404835569055E-6	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999998829616698	WITHOUT_CLASSIFICATION	1.1703833028320075E-7	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9999992737027243	WITHOUT_CLASSIFICATION	7.262972757904469E-7	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9999985415441005	WITHOUT_CLASSIFICATION	1.4584558995650789E-6	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9999893997172885	WITHOUT_CLASSIFICATION	1.060028271161744E-5	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.999998852075821	WITHOUT_CLASSIFICATION	1.1479241791007842E-6	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999991965255495	WITHOUT_CLASSIFICATION	8.034744504658786E-7	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9999773995381206	WITHOUT_CLASSIFICATION	2.2600461879440284E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999983657051837	WITHOUT_CLASSIFICATION	1.6342948163418218E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999999336136053	WITHOUT_CLASSIFICATION	6.63863947241913E-8	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999995616076889	WITHOUT_CLASSIFICATION	4.3839231107441604E-7	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999665290912156	WITHOUT_CLASSIFICATION	3.347090878438369E-5	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9998123744091277	WITHOUT_CLASSIFICATION	1.8762559087218215E-4	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.999905313945882	WITHOUT_CLASSIFICATION	9.468605411806174E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9992598247562706	WITHOUT_CLASSIFICATION	7.401752437294043E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999981838365204	WITHOUT_CLASSIFICATION	1.8161634796408548E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9958753869019027	WITHOUT_CLASSIFICATION	0.0041246130980972864	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.999938134157685	WITHOUT_CLASSIFICATION	6.186584231497296E-5	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999992828702169	WITHOUT_CLASSIFICATION	7.171297831265638E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999950203742337	WITHOUT_CLASSIFICATION	4.979625766338013E-6	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9999997739921211	WITHOUT_CLASSIFICATION	2.2600787893415606E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999998963387682	WITHOUT_CLASSIFICATION	1.0366123183973467E-7	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999665760222	WITHOUT_CLASSIFICATION	3.342397782161954E-8	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.999999838083996	WITHOUT_CLASSIFICATION	1.6191600393027057E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999996939463104	WITHOUT_CLASSIFICATION	3.0605368961527076E-7	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999996059568359	WITHOUT_CLASSIFICATION	3.9404316402950617E-7	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9999879286547433	WITHOUT_CLASSIFICATION	1.2071345256644426E-5	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999958126232237	WITHOUT_CLASSIFICATION	4.1873767763217645E-6	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999819570974956	WITHOUT_CLASSIFICATION	1.80429025043329E-5	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999983747039466	WITHOUT_CLASSIFICATION	1.6252960533986799E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999991385120048	WITHOUT_CLASSIFICATION	8.614879952516289E-7	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999999519654862	WITHOUT_CLASSIFICATION	4.8034513789407886E-8	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9999978248772853	WITHOUT_CLASSIFICATION	2.175122714737936E-6	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999997225829208	WITHOUT_CLASSIFICATION	2.7741707909588905E-7	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999996780118982	WITHOUT_CLASSIFICATION	3.2198810188268433E-7	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.999999625047497	WITHOUT_CLASSIFICATION	3.749525029722311E-7	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.999999913752958	WITHOUT_CLASSIFICATION	8.624704200030689E-8	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999998788186184	WITHOUT_CLASSIFICATION	1.2118138167821027E-7	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9999985559778061	WITHOUT_CLASSIFICATION	1.4440221939928603E-6	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9999955435711352	WITHOUT_CLASSIFICATION	4.456428864747051E-6	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999669302544547	WITHOUT_CLASSIFICATION	3.30697455453115E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9999996376768449	WITHOUT_CLASSIFICATION	3.623231551916942E-7	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999993631357598	WITHOUT_CLASSIFICATION	6.36864240154136E-7	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9999637715550901	WITHOUT_CLASSIFICATION	3.622844490991904E-5	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9999972982872003	WITHOUT_CLASSIFICATION	2.701712799636124E-6	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999989485007174	WITHOUT_CLASSIFICATION	1.05149928255595E-6	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999984947981567	WITHOUT_CLASSIFICATION	1.5052018433203424E-6	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.999995855501933	WITHOUT_CLASSIFICATION	4.144498066975885E-6	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9999992418137561	WITHOUT_CLASSIFICATION	7.581862438089414E-7	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999683792759485	WITHOUT_CLASSIFICATION	3.1620724051549394E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999202419867	WITHOUT_CLASSIFICATION	7.975801327669976E-8	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9999981175521117	WITHOUT_CLASSIFICATION	1.8824478883728025E-6	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999935526881084	WITHOUT_CLASSIFICATION	6.447311891597222E-6	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9999985779829361	WITHOUT_CLASSIFICATION	1.4220170638939523E-6	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9999681146357942	WITHOUT_CLASSIFICATION	3.188536420586336E-5	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.999999647730085	WITHOUT_CLASSIFICATION	3.5226991495035643E-7	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999999107690384	WITHOUT_CLASSIFICATION	8.923096164120265E-8	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999956377455193	WITHOUT_CLASSIFICATION	4.362254480663534E-6	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999998579219603	WITHOUT_CLASSIFICATION	1.4207803963050533E-7	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999977460784596	WITHOUT_CLASSIFICATION	2.253921540485038E-6	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999998851508219	WITHOUT_CLASSIFICATION	1.1484917800824967E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9999956377455193	WITHOUT_CLASSIFICATION	4.362254480663534E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999983800862238	WITHOUT_CLASSIFICATION	1.6199137762610316E-6	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999961956838956	WITHOUT_CLASSIFICATION	3.804316104474252E-6	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999901395998665	WITHOUT_CLASSIFICATION	9.860400133494965E-6	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999999039961243	WITHOUT_CLASSIFICATION	9.600387575493805E-8	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9983124145110754	WITHOUT_CLASSIFICATION	0.0016875854889244744	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999784329778	WITHOUT_CLASSIFICATION	2.1567022078242985E-8	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999996998470349	WITHOUT_CLASSIFICATION	3.001529651892946E-7	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999999608421363	WITHOUT_CLASSIFICATION	3.915786373374943E-8	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999996870110395	WITHOUT_CLASSIFICATION	3.129889606225085E-7	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.999999211070715	WITHOUT_CLASSIFICATION	7.889292851545939E-7	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.999999397512423	WITHOUT_CLASSIFICATION	6.024875770798782E-7	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999999888081839	WITHOUT_CLASSIFICATION	1.1191816154491555E-8	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999990307513044	WITHOUT_CLASSIFICATION	9.692486955405494E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9999989835694683	WITHOUT_CLASSIFICATION	1.0164305316727013E-6	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999999975505741	WITHOUT_CLASSIFICATION	2.449425847836396E-9	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.999999947063477	WITHOUT_CLASSIFICATION	5.293652297148327E-8	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999999366473221	WITHOUT_CLASSIFICATION	6.335267783723533E-8	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999975240087414	WITHOUT_CLASSIFICATION	2.4759912584781856E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999826588091902	WITHOUT_CLASSIFICATION	1.7341190809779603E-5	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9999988273901681	WITHOUT_CLASSIFICATION	1.172609831979902E-6	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.999998124439698	WITHOUT_CLASSIFICATION	1.8755603019258949E-6	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999981687013787	WITHOUT_CLASSIFICATION	1.8312986213531155E-6	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999997129144365	WITHOUT_CLASSIFICATION	2.870855635389511E-7	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999997892904942	WITHOUT_CLASSIFICATION	2.1070950584270987E-7	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999903965349	WITHOUT_CLASSIFICATION	9.603465211499779E-9	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999998901096235	WITHOUT_CLASSIFICATION	1.0989037645411887E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999885913359	WITHOUT_CLASSIFICATION	1.140866415310706E-8	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9999998868676335	WITHOUT_CLASSIFICATION	1.131323664793663E-7	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.9992638970296851	WITHOUT_CLASSIFICATION	7.361029703148719E-4	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999998165568801	WITHOUT_CLASSIFICATION	1.8344311986959096E-7	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9999823626345752	WITHOUT_CLASSIFICATION	1.763736542486397E-5	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.999997874633648	WITHOUT_CLASSIFICATION	2.125366351980679E-6	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9999993595143104	WITHOUT_CLASSIFICATION	6.404856896630443E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999885913359	WITHOUT_CLASSIFICATION	1.140866415310706E-8	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999905891665255	WITHOUT_CLASSIFICATION	9.410833474482319E-6	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9999905891665255	WITHOUT_CLASSIFICATION	9.410833474482319E-6	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9999998885358033	WITHOUT_CLASSIFICATION	1.114641966857808E-7	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999885913359	WITHOUT_CLASSIFICATION	1.140866415310706E-8	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999999885913359	WITHOUT_CLASSIFICATION	1.140866415310706E-8	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999988197381959	WITHOUT_CLASSIFICATION	1.1802618040504583E-6	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999998754873531	WITHOUT_CLASSIFICATION	1.2451264683274055E-7	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999996544508859	WITHOUT_CLASSIFICATION	3.4554911411871647E-7	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999996544508859	WITHOUT_CLASSIFICATION	3.4554911411871647E-7	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999992186644402	WITHOUT_CLASSIFICATION	7.813355596723867E-7	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999923738259442	WITHOUT_CLASSIFICATION	7.626174055861517E-6	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999997438164258	WITHOUT_CLASSIFICATION	2.5618357421842587E-7	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999826588091902	WITHOUT_CLASSIFICATION	1.7341190809779603E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999826588091902	WITHOUT_CLASSIFICATION	1.7341190809779603E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999992186644402	WITHOUT_CLASSIFICATION	7.813355596723867E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999999912336268	WITHOUT_CLASSIFICATION	8.76637328909784E-9	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.999999859799045	WITHOUT_CLASSIFICATION	1.402009549562103E-7	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999939735084112	WITHOUT_CLASSIFICATION	6.0264915887718E-6	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999999860418107	WITHOUT_CLASSIFICATION	1.3958189185294041E-8	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9999527838523652	WITHOUT_CLASSIFICATION	4.721614763484879E-5	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9999972586444417	WITHOUT_CLASSIFICATION	2.7413555583007476E-6	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999980958232889	WITHOUT_CLASSIFICATION	1.9041767110622891E-6	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999995705855971	WITHOUT_CLASSIFICATION	4.29414402932589E-7	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999928605651669	WITHOUT_CLASSIFICATION	7.139434833144034E-6	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9999998346685396	WITHOUT_CLASSIFICATION	1.6533146045249886E-7	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999932625789818	WITHOUT_CLASSIFICATION	6.737421018126044E-6	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9999991072254776	WITHOUT_CLASSIFICATION	8.927745223863567E-7	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9998412279776556	WITHOUT_CLASSIFICATION	1.587720223442799E-4	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9999998217616812	WITHOUT_CLASSIFICATION	1.7823831887797795E-7	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9999975025589936	WITHOUT_CLASSIFICATION	2.4974410064828426E-6	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999993922395902	WITHOUT_CLASSIFICATION	6.077604098213048E-7	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9999994718087993	WITHOUT_CLASSIFICATION	5.28191200704396E-7	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999887758988653	WITHOUT_CLASSIFICATION	1.1224101134754518E-5	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9999941816082913	WITHOUT_CLASSIFICATION	5.818391708690399E-6	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999937455484421	WITHOUT_CLASSIFICATION	6.254451557960625E-6	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9996562947340308	WITHOUT_CLASSIFICATION	3.4370526596920237E-4	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999999427097047	WITHOUT_CLASSIFICATION	5.7290295367980365E-8	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999990914315299	WITHOUT_CLASSIFICATION	9.08568470056139E-7	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9999482946794839	WITHOUT_CLASSIFICATION	5.170532051609007E-5	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9999992683838501	WITHOUT_CLASSIFICATION	7.316161498350607E-7	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9999736580154988	WITHOUT_CLASSIFICATION	2.6341984501309432E-5	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999998833855486	WITHOUT_CLASSIFICATION	1.166144513712393E-7	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9999052068101181	WITHOUT_CLASSIFICATION	9.479318988191537E-5	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.999999233625293	WITHOUT_CLASSIFICATION	7.663747070569732E-7	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999995801374931	WITHOUT_CLASSIFICATION	4.198625068068332E-7	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9999855926307605	WITHOUT_CLASSIFICATION	1.4407369239561188E-5	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9999886703787026	WITHOUT_CLASSIFICATION	1.1329621297262836E-5	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9999999834881047	WITHOUT_CLASSIFICATION	1.6511895276299023E-8	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999998933265886	WITHOUT_CLASSIFICATION	1.06673411414416E-7	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999999743045713	WITHOUT_CLASSIFICATION	2.5695428676559914E-8	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999996517099595	WITHOUT_CLASSIFICATION	3.482900404258158E-7	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9999998829262463	WITHOUT_CLASSIFICATION	1.1707375370656889E-7	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999932783777541	WITHOUT_CLASSIFICATION	6.72162224592868E-6	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999997959498598	WITHOUT_CLASSIFICATION	2.0405014019124938E-7	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9999623985671632	WITHOUT_CLASSIFICATION	3.760143283679923E-5	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999991928977393	WITHOUT_CLASSIFICATION	8.07102260640472E-7	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999957787780384	WITHOUT_CLASSIFICATION	4.22122196163218E-6	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999924968067087	WITHOUT_CLASSIFICATION	7.5031932912746715E-6	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9999990088718642	WITHOUT_CLASSIFICATION	9.911281357601918E-7	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9999984985014595	WITHOUT_CLASSIFICATION	1.5014985404653143E-6	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9999884446688309	WITHOUT_CLASSIFICATION	1.1555331169066784E-5	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.999851702037539	WITHOUT_CLASSIFICATION	1.4829796246089818E-4	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9999986953383572	WITHOUT_CLASSIFICATION	1.304661642763962E-6	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.999999525745816	WITHOUT_CLASSIFICATION	4.7425418397909527E-7	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999996341529007	WITHOUT_CLASSIFICATION	3.658470993065698E-7	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9999973601739076	WITHOUT_CLASSIFICATION	2.639826092444954E-6	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9999798406568734	WITHOUT_CLASSIFICATION	2.0159343126563012E-5	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999995999089049	WITHOUT_CLASSIFICATION	4.000910952230767E-7	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999140781120328	WITHOUT_CLASSIFICATION	8.592188796716476E-5	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999916246851429	WITHOUT_CLASSIFICATION	8.375314857106203E-6	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999995469823	WITHOUT_CLASSIFICATION	4.5301770000473506E-7	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999984878701615	WITHOUT_CLASSIFICATION	1.512129838552932E-6	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999915475480894	WITHOUT_CLASSIFICATION	8.452451910591745E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999996850878765	WITHOUT_CLASSIFICATION	3.1491212341189643E-7	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999999284434178	WITHOUT_CLASSIFICATION	7.155658215302922E-8	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999999968526845	WITHOUT_CLASSIFICATION	3.1473155763417226E-9	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.999998382708487	WITHOUT_CLASSIFICATION	1.6172915129908535E-6	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9999757915240731	WITHOUT_CLASSIFICATION	2.4208475926887136E-5	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9999998523893392	WITHOUT_CLASSIFICATION	1.476106608017425E-7	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9901262298930181	WITHOUT_CLASSIFICATION	0.009873770106981868	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9999998533302996	WITHOUT_CLASSIFICATION	1.466697003102581E-7	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.99999944284809	WITHOUT_CLASSIFICATION	5.571519101660652E-7	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.99981752840734	WITHOUT_CLASSIFICATION	1.824715926599178E-4	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9999998527784115	WITHOUT_CLASSIFICATION	1.4722158853663842E-7	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9999335282558304	WITHOUT_CLASSIFICATION	6.647174416967791E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.999968572051804	WITHOUT_CLASSIFICATION	3.142794819599747E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999923276078634	WITHOUT_CLASSIFICATION	7.672392136541006E-6	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999971655589368	WITHOUT_CLASSIFICATION	2.8344410631887515E-6	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.999990195792558	WITHOUT_CLASSIFICATION	9.804207442067238E-6	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999998562252678	WITHOUT_CLASSIFICATION	1.4377473228109634E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.999999070496827	WITHOUT_CLASSIFICATION	9.295031728616416E-7	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.999999070496827	WITHOUT_CLASSIFICATION	9.295031728616416E-7	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.99999927425407	WITHOUT_CLASSIFICATION	7.257459299651021E-7	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.999048866928374	WITHOUT_CLASSIFICATION	9.511330716260147E-4	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999906190316062	WITHOUT_CLASSIFICATION	9.380968393773233E-6	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9790604930360157	WITHOUT_CLASSIFICATION	0.020939506963984274	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9999963507514672	WITHOUT_CLASSIFICATION	3.6492485329064904E-6	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9999998393579317	WITHOUT_CLASSIFICATION	1.6064206841762448E-7	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9942028759337588	WITHOUT_CLASSIFICATION	0.005797124066241209	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.999999555964895	WITHOUT_CLASSIFICATION	4.4403510512202206E-7	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.999968771497719	WITHOUT_CLASSIFICATION	3.1228502281050776E-5	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999999872856067	WITHOUT_CLASSIFICATION	1.2714393203030499E-8	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999999905464647	WITHOUT_CLASSIFICATION	9.453535393782048E-9	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999998013144997	WITHOUT_CLASSIFICATION	1.986855003481146E-7	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999999893938119	WITHOUT_CLASSIFICATION	1.0606188110378883E-8	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999999939038238	WITHOUT_CLASSIFICATION	6.096176230314871E-9	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999999980328242	WITHOUT_CLASSIFICATION	1.967175831636434E-9	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999966863065405	WITHOUT_CLASSIFICATION	3.3136934595533846E-6	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999976131489832	WITHOUT_CLASSIFICATION	2.3868510167932855E-6	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999999289557382	WITHOUT_CLASSIFICATION	7.104426184208141E-8	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9996904495078413	WITHOUT_CLASSIFICATION	3.095504921587862E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999876896761583	WITHOUT_CLASSIFICATION	1.231032384175902E-5	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999910485096425	WITHOUT_CLASSIFICATION	8.951490357480326E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999600113400468	WITHOUT_CLASSIFICATION	3.9988659953272366E-5	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9999985877099334	WITHOUT_CLASSIFICATION	1.4122900665959213E-6	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9999990899178949	WITHOUT_CLASSIFICATION	9.10082105240371E-7	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9999623577057595	WITHOUT_CLASSIFICATION	3.764229424055129E-5	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999931855903578	WITHOUT_CLASSIFICATION	6.8144096422312124E-6	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.999964545151009	WITHOUT_CLASSIFICATION	3.5454848991036906E-5	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999928883534231	WITHOUT_CLASSIFICATION	7.1116465768663065E-6	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999915428677115	WITHOUT_CLASSIFICATION	8.457132288452366E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999876896761583	WITHOUT_CLASSIFICATION	1.231032384175902E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9999600113400468	WITHOUT_CLASSIFICATION	3.9988659953272366E-5	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999964128069911	WITHOUT_CLASSIFICATION	3.5871930087280877E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999996600986186	WITHOUT_CLASSIFICATION	3.399013813389741E-7	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.99999861955409	WITHOUT_CLASSIFICATION	1.380445909912727E-6	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9974932879628909	WITHOUT_CLASSIFICATION	0.0025067120371089473	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999989456467561	WITHOUT_CLASSIFICATION	1.054353243946502E-6	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.999999607911165	WITHOUT_CLASSIFICATION	3.920888350537019E-7	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9999908711766696	WITHOUT_CLASSIFICATION	9.12882333036023E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9999013046688797	WITHOUT_CLASSIFICATION	9.869533112018879E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999980830356712	WITHOUT_CLASSIFICATION	1.916964328860104E-6	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999989544844619	WITHOUT_CLASSIFICATION	1.0455155381417177E-6	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9999895779902221	WITHOUT_CLASSIFICATION	1.042200977797903E-5	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999994161844983	WITHOUT_CLASSIFICATION	5.838155017006564E-7	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9999921312641807	WITHOUT_CLASSIFICATION	7.868735819231304E-6	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.999999726232913	WITHOUT_CLASSIFICATION	2.737670870971763E-7	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999998732218561	WITHOUT_CLASSIFICATION	1.2677814387854632E-7	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.999997337542965	WITHOUT_CLASSIFICATION	2.6624570350006793E-6	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9999882903787698	WITHOUT_CLASSIFICATION	1.1709621230242906E-5	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9999981107895354	WITHOUT_CLASSIFICATION	1.8892104645934314E-6	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.999999736165036	WITHOUT_CLASSIFICATION	2.6383496406001785E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999998901096235	WITHOUT_CLASSIFICATION	1.0989037645411887E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9999912518477065	WITHOUT_CLASSIFICATION	8.748152293508914E-6	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999999667731854	WITHOUT_CLASSIFICATION	3.322681473434443E-8	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.999999805368897	WITHOUT_CLASSIFICATION	1.9463110307791787E-7	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999984121268314	WITHOUT_CLASSIFICATION	1.5878731685741672E-6	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999986056286566	WITHOUT_CLASSIFICATION	1.3943713433754557E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999143862207389	WITHOUT_CLASSIFICATION	8.561377926108495E-5	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999772120320835	WITHOUT_CLASSIFICATION	2.2787967916617902E-5	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9999978033262025	WITHOUT_CLASSIFICATION	2.196673797555691E-6	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999995993532319	WITHOUT_CLASSIFICATION	4.006467680687042E-7	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999998620740527	WITHOUT_CLASSIFICATION	1.3792594735413858E-7	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.99999873705691	WITHOUT_CLASSIFICATION	1.262943090081739E-6	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.999990969639298	WITHOUT_CLASSIFICATION	9.030360702011411E-6	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9999993283272057	WITHOUT_CLASSIFICATION	6.71672794211797E-7	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9999993157329888	WITHOUT_CLASSIFICATION	6.842670110835455E-7	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999998371142507	WITHOUT_CLASSIFICATION	1.6288574932708324E-7	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999963941802402	WITHOUT_CLASSIFICATION	3.605819759672863E-6	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999999212358631	WITHOUT_CLASSIFICATION	7.876413691887265E-8	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9999999777899192	WITHOUT_CLASSIFICATION	2.221008085418414E-8	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999999451120423	WITHOUT_CLASSIFICATION	5.488795767987101E-8	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999995614542847	WITHOUT_CLASSIFICATION	4.385457152721536E-7	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999951281430141	WITHOUT_CLASSIFICATION	4.871856986015382E-6	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9999073919505608	WITHOUT_CLASSIFICATION	9.260804943918088E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9997554368328011	WITHOUT_CLASSIFICATION	2.4456316719881815E-4	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999947730028137	WITHOUT_CLASSIFICATION	5.2269971862940516E-6	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999994480718998	WITHOUT_CLASSIFICATION	5.519281002088264E-7	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9999903334004602	WITHOUT_CLASSIFICATION	9.666599539850154E-6	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999986429405341	WITHOUT_CLASSIFICATION	1.3570594660069798E-6	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9999496170999964	WITHOUT_CLASSIFICATION	5.0382900003614833E-5	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9999917820624881	WITHOUT_CLASSIFICATION	8.217937511972198E-6	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9999926053811535	WITHOUT_CLASSIFICATION	7.3946188464173825E-6	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.999998470437635	WITHOUT_CLASSIFICATION	1.5295623650364206E-6	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.999999914813456	WITHOUT_CLASSIFICATION	8.518654404319097E-8	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999999273021216	WITHOUT_CLASSIFICATION	7.269787841737914E-8	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999999240694908	WITHOUT_CLASSIFICATION	7.593050924425285E-8	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9999999664691924	WITHOUT_CLASSIFICATION	3.353080750402921E-8	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9999973702147619	WITHOUT_CLASSIFICATION	2.6297852381025463E-6	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999986784198197	WITHOUT_CLASSIFICATION	1.3215801803428532E-6	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9999953748661641	WITHOUT_CLASSIFICATION	4.625133835976719E-6	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9999998259466469	WITHOUT_CLASSIFICATION	1.7405335303824368E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999975240087414	WITHOUT_CLASSIFICATION	2.4759912584781856E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999994328086848	WITHOUT_CLASSIFICATION	5.671913152866388E-7	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.999999658407461	WITHOUT_CLASSIFICATION	3.4159253897832954E-7	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999997309961367	WITHOUT_CLASSIFICATION	2.690038632673503E-7	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999997309961367	WITHOUT_CLASSIFICATION	2.690038632673503E-7	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9999981701867476	WITHOUT_CLASSIFICATION	1.8298132524666504E-6	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999986109654391	WITHOUT_CLASSIFICATION	1.389034560996612E-6	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999998105294985	WITHOUT_CLASSIFICATION	1.8947050158737919E-7	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9999993812435942	WITHOUT_CLASSIFICATION	6.187564056486356E-7	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999963497817367	WITHOUT_CLASSIFICATION	3.6502182633593115E-6	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999970296735196	WITHOUT_CLASSIFICATION	2.970326480327998E-6	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9999999249890658	WITHOUT_CLASSIFICATION	7.501093428402907E-8	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9999374951705353	WITHOUT_CLASSIFICATION	6.250482946471909E-5	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9999964920006119	WITHOUT_CLASSIFICATION	3.507999388004695E-6	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.999999996099807	WITHOUT_CLASSIFICATION	3.900192976388916E-9	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999994441197163	WITHOUT_CLASSIFICATION	5.558802837506659E-7	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999999511033717	WITHOUT_CLASSIFICATION	4.889662831951664E-8	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999999561287382	WITHOUT_CLASSIFICATION	4.387126181130253E-8	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999989741041112	WITHOUT_CLASSIFICATION	1.0258958888265624E-6	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999562096979696	WITHOUT_CLASSIFICATION	4.3790302030338E-5	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999990328718976	WITHOUT_CLASSIFICATION	9.671281023834216E-7	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9998031193180746	WITHOUT_CLASSIFICATION	1.9688068192537925E-4	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9999995325657001	WITHOUT_CLASSIFICATION	4.6743429986314455E-7	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999998315442855	WITHOUT_CLASSIFICATION	1.684557145139024E-7	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9999965142186247	WITHOUT_CLASSIFICATION	3.485781375413583E-6	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999967168144804	WITHOUT_CLASSIFICATION	3.2831855196502264E-6	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999981797892019	WITHOUT_CLASSIFICATION	1.8202107979811416E-6	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999998311838473	WITHOUT_CLASSIFICATION	1.6881615263819506E-7	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.99999996869121	WITHOUT_CLASSIFICATION	3.130879010769447E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9999988128891641	WITHOUT_CLASSIFICATION	1.1871108358885776E-6	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.999999268921271	WITHOUT_CLASSIFICATION	7.3107872894469E-7	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9999981797892019	WITHOUT_CLASSIFICATION	1.8202107979811416E-6	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9999935714822445	WITHOUT_CLASSIFICATION	6.428517755443779E-6	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9994193636973231	WITHOUT_CLASSIFICATION	5.806363026769466E-4	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9999975206664559	WITHOUT_CLASSIFICATION	2.479333544207656E-6	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999884891587325	WITHOUT_CLASSIFICATION	1.1510841267459608E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9999905156280376	WITHOUT_CLASSIFICATION	9.48437196241103E-6	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.999999621665434	WITHOUT_CLASSIFICATION	3.783345660148687E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999987007323129	WITHOUT_CLASSIFICATION	1.2992676871058122E-6	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999999216422002	WITHOUT_CLASSIFICATION	7.835779981708384E-8	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999928735926519	WITHOUT_CLASSIFICATION	7.126407348171683E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999997950132623	WITHOUT_CLASSIFICATION	2.049867376023967E-7	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999972062651801	WITHOUT_CLASSIFICATION	2.793734820000184E-6	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999987936802202	WITHOUT_CLASSIFICATION	1.2063197798689782E-6	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999995756907462	WITHOUT_CLASSIFICATION	4.243092538406091E-7	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9999999813933721	WITHOUT_CLASSIFICATION	1.860662793954015E-8	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999995804129012	WITHOUT_CLASSIFICATION	4.195870988581324E-7	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9999999908257258	WITHOUT_CLASSIFICATION	9.17427427169859E-9	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.999999799745563	WITHOUT_CLASSIFICATION	2.0025443708982735E-7	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999999853395378	WITHOUT_CLASSIFICATION	1.4660462092973516E-8	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999996980990347	WITHOUT_CLASSIFICATION	3.01900965312272E-7	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999982166289265	WITHOUT_CLASSIFICATION	1.783371073440226E-6	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999994866455078	WITHOUT_CLASSIFICATION	5.133544921964282E-7	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999999833043149	WITHOUT_CLASSIFICATION	1.6695685041588085E-8	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999998625487972	WITHOUT_CLASSIFICATION	1.3745120278153729E-7	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999999627441191	WITHOUT_CLASSIFICATION	3.725588086771195E-8	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999975451305951	WITHOUT_CLASSIFICATION	2.454869404853332E-6	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999999652820523	WITHOUT_CLASSIFICATION	3.471794771180949E-8	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999999640991961	WITHOUT_CLASSIFICATION	3.590080388955178E-8	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9999600950298344	WITHOUT_CLASSIFICATION	3.990497016572685E-5	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999987944818858	WITHOUT_CLASSIFICATION	1.205518114233896E-6	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9999424893601658	WITHOUT_CLASSIFICATION	5.75106398341465E-5	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.999995697626274	WITHOUT_CLASSIFICATION	4.3023737259577384E-6	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999965140941524	WITHOUT_CLASSIFICATION	3.4859058476747732E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999815844426535	WITHOUT_CLASSIFICATION	1.841555734652342E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9999905156280376	WITHOUT_CLASSIFICATION	9.48437196241103E-6	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.999999621665434	WITHOUT_CLASSIFICATION	3.783345660148687E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999987007323129	WITHOUT_CLASSIFICATION	1.2992676871058122E-6	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999928735926519	WITHOUT_CLASSIFICATION	7.126407348171683E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999997950132623	WITHOUT_CLASSIFICATION	2.049867376023967E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.997820223026463	WITHOUT_CLASSIFICATION	0.0021797769735369173	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999999935723811	WITHOUT_CLASSIFICATION	6.427618896368836E-9	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999999704960196	WITHOUT_CLASSIFICATION	2.9503980388167113E-8	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999941550021321	WITHOUT_CLASSIFICATION	5.844997867915885E-6	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.999523033027347	WITHOUT_CLASSIFICATION	4.769669726529932E-4	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999992492025637	WITHOUT_CLASSIFICATION	7.507974363645609E-7	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999998367476862	WITHOUT_CLASSIFICATION	1.632523137998104E-7	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9999978806808318	WITHOUT_CLASSIFICATION	2.1193191681295514E-6	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.999998975610651	WITHOUT_CLASSIFICATION	1.0243893489548158E-6	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.999999085963396	WITHOUT_CLASSIFICATION	9.140366039935608E-7	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999987528252882	WITHOUT_CLASSIFICATION	1.2471747118151396E-6	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999983364879682	WITHOUT_CLASSIFICATION	1.663512031887587E-6	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.999992505566305	WITHOUT_CLASSIFICATION	7.494433694927593E-6	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999999041727285	WITHOUT_CLASSIFICATION	9.582727147787314E-8	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.999999811722557	WITHOUT_CLASSIFICATION	1.8827744296241975E-7	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999997641864158	WITHOUT_CLASSIFICATION	2.3581358419863915E-7	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999999839098965	WITHOUT_CLASSIFICATION	1.6090103400710208E-8	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999994185751572	WITHOUT_CLASSIFICATION	5.814248428521254E-7	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999999739737776	WITHOUT_CLASSIFICATION	2.602622234524659E-8	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999991257668458	WITHOUT_CLASSIFICATION	8.742331542049178E-7	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.999998912206876	WITHOUT_CLASSIFICATION	1.0877931241015053E-6	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999901282265439	WITHOUT_CLASSIFICATION	9.871773456173153E-6	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999991465872233	WITHOUT_CLASSIFICATION	8.534127766165723E-7	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999996245647013	WITHOUT_CLASSIFICATION	3.754352988246348E-7	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9999998496451564	WITHOUT_CLASSIFICATION	1.5035484355073393E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9999683792759485	WITHOUT_CLASSIFICATION	3.1620724051549394E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999143862207389	WITHOUT_CLASSIFICATION	8.561377926108495E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.999998470437635	WITHOUT_CLASSIFICATION	1.5295623650364206E-6	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999997950132623	WITHOUT_CLASSIFICATION	2.049867376023967E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999999957337826	WITHOUT_CLASSIFICATION	4.26621742817693E-9	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.999999686513833	WITHOUT_CLASSIFICATION	3.1348616702991377E-7	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9999999787830868	WITHOUT_CLASSIFICATION	2.1216913210944466E-8	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.999963149734517	WITHOUT_CLASSIFICATION	3.68502654830785E-5	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.999963149734517	WITHOUT_CLASSIFICATION	3.68502654830785E-5	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999766085527	WITHOUT_CLASSIFICATION	2.3391447275804798E-8	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999882052108818	WITHOUT_CLASSIFICATION	1.179478911820402E-5	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9999996811743948	WITHOUT_CLASSIFICATION	3.1882560530952717E-7	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9999993267484147	WITHOUT_CLASSIFICATION	6.732515851478928E-7	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9999992720369778	WITHOUT_CLASSIFICATION	7.279630222647134E-7	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9998781361935077	WITHOUT_CLASSIFICATION	1.2186380649224727E-4	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999994993792092	WITHOUT_CLASSIFICATION	5.006207908911768E-7	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9999914780075486	WITHOUT_CLASSIFICATION	8.521992451388503E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999711109122564	WITHOUT_CLASSIFICATION	2.888908774365912E-5	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9999991629923288	WITHOUT_CLASSIFICATION	8.37007671132453E-7	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999993544448572	WITHOUT_CLASSIFICATION	6.455551428782579E-7	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999947872345191	WITHOUT_CLASSIFICATION	5.212765480934201E-6	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9999363435628557	WITHOUT_CLASSIFICATION	6.365643714427076E-5	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9999701677029885	WITHOUT_CLASSIFICATION	2.983229701140645E-5	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9999877738687292	WITHOUT_CLASSIFICATION	1.2226131270959E-5	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999991698526934	WITHOUT_CLASSIFICATION	8.301473065328241E-7	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999994141267734	WITHOUT_CLASSIFICATION	5.85873226615485E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999233269399	WITHOUT_CLASSIFICATION	7.667306007205767E-8	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999965696944262	WITHOUT_CLASSIFICATION	3.43030557380961E-6	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.999999382703169	WITHOUT_CLASSIFICATION	6.172968308958567E-7	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999991698526934	WITHOUT_CLASSIFICATION	8.301473065328241E-7	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9999962298985074	WITHOUT_CLASSIFICATION	3.7701014926341533E-6	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.99999972661947	WITHOUT_CLASSIFICATION	2.733805299359099E-7	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.99999972661947	WITHOUT_CLASSIFICATION	2.733805299359099E-7	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999999233269399	WITHOUT_CLASSIFICATION	7.667306007205767E-8	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.999998902721545	WITHOUT_CLASSIFICATION	1.0972784549226912E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999986828626233	WITHOUT_CLASSIFICATION	1.3171373767616388E-6	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999986828626233	WITHOUT_CLASSIFICATION	1.3171373767616388E-6	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999996869525631	WITHOUT_CLASSIFICATION	3.130474368040382E-7	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999977114540487	WITHOUT_CLASSIFICATION	2.288545951352143E-6	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9994565518107242	WITHOUT_CLASSIFICATION	5.43448189275754E-4	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.9999977301343483	WITHOUT_CLASSIFICATION	2.2698656516399957E-6	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.99999928834978	WITHOUT_CLASSIFICATION	7.116502200206119E-7	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9999826464299193	WITHOUT_CLASSIFICATION	1.7353570080618462E-5	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.999999410389366	WITHOUT_CLASSIFICATION	5.896106340489792E-7	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9999573106484841	WITHOUT_CLASSIFICATION	4.268935151585159E-5	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9999960716215631	WITHOUT_CLASSIFICATION	3.928378436881161E-6	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9999870761534156	WITHOUT_CLASSIFICATION	1.292384658442213E-5	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999999607016625	WITHOUT_CLASSIFICATION	3.929833746298573E-8	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9999933740550087	WITHOUT_CLASSIFICATION	6.625944991360612E-6	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9996996457686481	WITHOUT_CLASSIFICATION	3.003542313519448E-4	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999944061445369	WITHOUT_CLASSIFICATION	5.59385546307489E-6	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.9999994348626652	WITHOUT_CLASSIFICATION	5.651373348341065E-7	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999991657567041	WITHOUT_CLASSIFICATION	8.342432959847874E-7	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9999995296237219	WITHOUT_CLASSIFICATION	4.703762780906959E-7	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9999859884805253	WITHOUT_CLASSIFICATION	1.4011519474648905E-5	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9998314876225733	WITHOUT_CLASSIFICATION	1.68512377426702E-4	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.999983833264145	WITHOUT_CLASSIFICATION	1.6166735855033697E-5	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9999957223141243	WITHOUT_CLASSIFICATION	4.2776858757483E-6	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999987552750407	WITHOUT_CLASSIFICATION	1.2447249593921273E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.999988491245448	WITHOUT_CLASSIFICATION	1.150875455213909E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999711109122564	WITHOUT_CLASSIFICATION	2.888908774365912E-5	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.999999114188987	WITHOUT_CLASSIFICATION	8.858110130018676E-7	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999999672424662	WITHOUT_CLASSIFICATION	3.2757533856855096E-8	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999998606665595	WITHOUT_CLASSIFICATION	1.3933344039829896E-7	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999860419482063	WITHOUT_CLASSIFICATION	1.3958051793635062E-5	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9998301687323113	WITHOUT_CLASSIFICATION	1.698312676887361E-4	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999929630759109	WITHOUT_CLASSIFICATION	7.036924089005058E-6	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9999908468750434	WITHOUT_CLASSIFICATION	9.153124956637585E-6	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999999463798438	WITHOUT_CLASSIFICATION	5.362015631817239E-8	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9999984903713542	WITHOUT_CLASSIFICATION	1.509628645707161E-6	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999931065424853	WITHOUT_CLASSIFICATION	6.893457514654775E-6	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9999954916067925	WITHOUT_CLASSIFICATION	4.50839320754661E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999962058898777	WITHOUT_CLASSIFICATION	3.794110122213677E-6	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9999910612870301	WITHOUT_CLASSIFICATION	8.938712969933668E-6	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.999976435046222	WITHOUT_CLASSIFICATION	2.356495377797735E-5	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999924730281041	WITHOUT_CLASSIFICATION	7.526971895877441E-6	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9999999692088735	WITHOUT_CLASSIFICATION	3.0791126567565016E-8	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9999999723029757	WITHOUT_CLASSIFICATION	2.769702436369464E-8	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9999892709308196	WITHOUT_CLASSIFICATION	1.0729069180464266E-5	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.999545744372237	WITHOUT_CLASSIFICATION	4.5425562776302584E-4	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999760536471791	WITHOUT_CLASSIFICATION	2.394635282092588E-5	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999986272529799	WITHOUT_CLASSIFICATION	1.372747020084077E-6	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9999765356705257	WITHOUT_CLASSIFICATION	2.3464329474318868E-5	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9999085232707193	WITHOUT_CLASSIFICATION	9.147672928067069E-5	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.999995027286893	WITHOUT_CLASSIFICATION	4.972713106950381E-6	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9999842093860467	WITHOUT_CLASSIFICATION	1.5790613953394315E-5	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9999945643158737	WITHOUT_CLASSIFICATION	5.435684126264863E-6	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9999999296586369	WITHOUT_CLASSIFICATION	7.034136305060899E-8	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9999984495145303	WITHOUT_CLASSIFICATION	1.5504854697502052E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999997884888618	WITHOUT_CLASSIFICATION	2.1151113822295375E-7	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999978809442625	WITHOUT_CLASSIFICATION	2.119055737585898E-6	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9999234849162034	WITHOUT_CLASSIFICATION	7.651508379650918E-5	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999962000236335	WITHOUT_CLASSIFICATION	3.7999763664311636E-6	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.99998652461741	WITHOUT_CLASSIFICATION	1.3475382590036999E-5	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9997945937223989	WITHOUT_CLASSIFICATION	2.0540627760103758E-4	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9999668872902764	WITHOUT_CLASSIFICATION	3.311270972365761E-5	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999995060778457	WITHOUT_CLASSIFICATION	4.939221544049577E-7	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.999983732758793	WITHOUT_CLASSIFICATION	1.6267241206967782E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.999983732758793	WITHOUT_CLASSIFICATION	1.6267241206967782E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999998981819728	WITHOUT_CLASSIFICATION	1.0181802717533864E-7	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.999996829625389	WITHOUT_CLASSIFICATION	3.1703746109963705E-6	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999999865682726	WITHOUT_CLASSIFICATION	1.343172735031986E-8	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9999090763760524	WITHOUT_CLASSIFICATION	9.092362394763803E-5	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999999790758332	WITHOUT_CLASSIFICATION	2.0924166734428813E-8	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9999999359357827	WITHOUT_CLASSIFICATION	6.406421730621439E-8	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999842638981804	WITHOUT_CLASSIFICATION	1.573610181956761E-5	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999865664624055	WITHOUT_CLASSIFICATION	1.3433537594586479E-5	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999427312927186	WITHOUT_CLASSIFICATION	5.726870728143865E-5	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999998326007732	WITHOUT_CLASSIFICATION	1.6739922686392707E-7	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999992782883287	WITHOUT_CLASSIFICATION	7.217116713364118E-7	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9999994847362126	WITHOUT_CLASSIFICATION	5.152637875071443E-7	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999997244306242	WITHOUT_CLASSIFICATION	2.7556937574830203E-7	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999701919729663	WITHOUT_CLASSIFICATION	2.9808027033727196E-5	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9999996255544565	WITHOUT_CLASSIFICATION	3.744455435488851E-7	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999590314786179	WITHOUT_CLASSIFICATION	4.0968521382197674E-5	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9999993311142404	WITHOUT_CLASSIFICATION	6.688857595324576E-7	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999996069071432	WITHOUT_CLASSIFICATION	3.930928568758828E-7	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9998487453710336	WITHOUT_CLASSIFICATION	1.5125462896644923E-4	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999978382993743	WITHOUT_CLASSIFICATION	2.161700625738248E-6	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999100698030607	WITHOUT_CLASSIFICATION	8.993019693936816E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999100698030607	WITHOUT_CLASSIFICATION	8.993019693936816E-5	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9999977986666259	WITHOUT_CLASSIFICATION	2.2013333740855666E-6	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999999925282307	WITHOUT_CLASSIFICATION	7.471769297211756E-9	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.999999997545838	WITHOUT_CLASSIFICATION	2.4541618501126094E-9	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999973614390542	WITHOUT_CLASSIFICATION	2.6385609457595845E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9997989381250294	WITHOUT_CLASSIFICATION	2.010618749705286E-4	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.999930347570634	WITHOUT_CLASSIFICATION	6.96524293658875E-5	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999992243098227	WITHOUT_CLASSIFICATION	7.756901772749534E-7	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9987663878400819	WITHOUT_CLASSIFICATION	0.0012336121599181315	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9998649186025764	WITHOUT_CLASSIFICATION	1.3508139742356894E-4	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.999520622435202	WITHOUT_CLASSIFICATION	4.793775647979994E-4	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999994429128493	WITHOUT_CLASSIFICATION	5.570871506540323E-7	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9999380270916624	WITHOUT_CLASSIFICATION	6.197290833761878E-5	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999912146877944	WITHOUT_CLASSIFICATION	8.785312205660055E-6	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9999997964739767	WITHOUT_CLASSIFICATION	2.035260231986554E-7	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999999186680709	WITHOUT_CLASSIFICATION	8.133192909314572E-8	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999979665173127	WITHOUT_CLASSIFICATION	2.033482687439823E-6	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9999795869142094	WITHOUT_CLASSIFICATION	2.0413085790557054E-5	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9998989701478985	WITHOUT_CLASSIFICATION	1.0102985210147586E-4	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9999995567930849	WITHOUT_CLASSIFICATION	4.432069150081234E-7	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9999904493690869	WITHOUT_CLASSIFICATION	9.550630913134086E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999937455484421	WITHOUT_CLASSIFICATION	6.254451557960625E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999996600986186	WITHOUT_CLASSIFICATION	3.399013813389741E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9998825973955228	WITHOUT_CLASSIFICATION	1.1740260447730785E-4	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999999612309176	WITHOUT_CLASSIFICATION	3.876908251051866E-8	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.999956323686678	WITHOUT_CLASSIFICATION	4.3676313322006774E-5	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9999999240183879	WITHOUT_CLASSIFICATION	7.598161209226893E-8	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999998712523801	WITHOUT_CLASSIFICATION	1.2874761988885875E-7	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999960788516544	WITHOUT_CLASSIFICATION	3.9211483456174844E-6	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999681394097535	WITHOUT_CLASSIFICATION	3.186059024657587E-5	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999999990406517	WITHOUT_CLASSIFICATION	9.593481653857158E-10	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.999992909136655	WITHOUT_CLASSIFICATION	7.090863344992448E-6	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999952312196886	WITHOUT_CLASSIFICATION	4.768780311310519E-6	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999998314947918	WITHOUT_CLASSIFICATION	1.6850520809446466E-7	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999998314947918	WITHOUT_CLASSIFICATION	1.6850520809446466E-7	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9991680088861952	WITHOUT_CLASSIFICATION	8.319911138049089E-4	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9996176829112079	WITHOUT_CLASSIFICATION	3.823170887921461E-4	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.999999773051674	WITHOUT_CLASSIFICATION	2.2694832600879058E-7	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999552461208031	WITHOUT_CLASSIFICATION	4.475387919692852E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999998435999026	WITHOUT_CLASSIFICATION	1.564000974360688E-7	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9999997205027583	WITHOUT_CLASSIFICATION	2.7949724172070797E-7	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9999920859103826	WITHOUT_CLASSIFICATION	7.914089617462777E-6	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999973937728669	WITHOUT_CLASSIFICATION	2.606227133176603E-6	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999979488642843	WITHOUT_CLASSIFICATION	2.0511357157799435E-6	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999999008756589	WITHOUT_CLASSIFICATION	9.912434109237695E-8	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999993448364095	WITHOUT_CLASSIFICATION	6.551635904570465E-7	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999987155611125	WITHOUT_CLASSIFICATION	1.2844388874131946E-6	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999998705780705	WITHOUT_CLASSIFICATION	1.2942192946943443E-7	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.999997765666346	WITHOUT_CLASSIFICATION	2.2343336539535295E-6	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999999833558902	WITHOUT_CLASSIFICATION	1.6644109717146045E-8	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9999993938014984	WITHOUT_CLASSIFICATION	6.061985016725682E-7	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9999799336333862	WITHOUT_CLASSIFICATION	2.0066366613695325E-5	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9986252892849207	WITHOUT_CLASSIFICATION	0.0013747107150792468	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999202419867	WITHOUT_CLASSIFICATION	7.975801327669976E-8	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999984947981567	WITHOUT_CLASSIFICATION	1.5052018433203424E-6	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9999711109122564	WITHOUT_CLASSIFICATION	2.888908774365912E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999999992437202	WITHOUT_CLASSIFICATION	7.562797887354159E-10	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9999844023881416	WITHOUT_CLASSIFICATION	1.5597611858447192E-5	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999898900125447	WITHOUT_CLASSIFICATION	1.0109987455344205E-5	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9992614710035999	WITHOUT_CLASSIFICATION	7.385289964001912E-4	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.999998883343317	WITHOUT_CLASSIFICATION	1.1166566829438546E-6	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999992582707192	WITHOUT_CLASSIFICATION	7.41729280777442E-7	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.999998517395165	WITHOUT_CLASSIFICATION	1.4826048349975233E-6	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9999991665476949	WITHOUT_CLASSIFICATION	8.334523051511547E-7	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999954976377238	WITHOUT_CLASSIFICATION	4.502362276242168E-6	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9999899893351852	WITHOUT_CLASSIFICATION	1.0010664814766186E-5	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.999999735664833	WITHOUT_CLASSIFICATION	2.6433516701021224E-7	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999973126581746	WITHOUT_CLASSIFICATION	2.6873418254131514E-6	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999996377364604	WITHOUT_CLASSIFICATION	3.622635396742912E-7	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9999940210466368	WITHOUT_CLASSIFICATION	5.978953363165881E-6	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9999837586311157	WITHOUT_CLASSIFICATION	1.624136888433591E-5	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999998006306429	WITHOUT_CLASSIFICATION	1.993693570427501E-7	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999998445028984	WITHOUT_CLASSIFICATION	1.554971017241856E-7	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999998976948766	WITHOUT_CLASSIFICATION	1.0230512327196965E-7	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999997950132623	WITHOUT_CLASSIFICATION	2.049867376023967E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999922144031154	WITHOUT_CLASSIFICATION	7.785596884671003E-6	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999975979483904	WITHOUT_CLASSIFICATION	2.4020516095851934E-6	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9998669368025739	WITHOUT_CLASSIFICATION	1.3306319742612324E-4	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9999696258963087	WITHOUT_CLASSIFICATION	3.0374103691404368E-5	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9999972279005648	WITHOUT_CLASSIFICATION	2.7720994352994662E-6	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999998878914069	WITHOUT_CLASSIFICATION	1.1210859307929807E-7	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999991495029265	WITHOUT_CLASSIFICATION	8.504970735613135E-7	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9999988077712378	WITHOUT_CLASSIFICATION	1.192228762124534E-6	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9999994400596094	WITHOUT_CLASSIFICATION	5.599403905473558E-7	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999991736325105	WITHOUT_CLASSIFICATION	8.263674895360763E-7	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999992458820488	WITHOUT_CLASSIFICATION	7.541179511178826E-7	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9999959562673566	WITHOUT_CLASSIFICATION	4.043732643505474E-6	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9999996275783535	WITHOUT_CLASSIFICATION	3.7242164661566355E-7	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9999996006230889	WITHOUT_CLASSIFICATION	3.99376911047683E-7	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999993142630201	WITHOUT_CLASSIFICATION	6.857369798521845E-7	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9999979434496902	WITHOUT_CLASSIFICATION	2.056550309806815E-6	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999974181496404	WITHOUT_CLASSIFICATION	2.5818503596443903E-6	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999999739471478	WITHOUT_CLASSIFICATION	2.6052852213502808E-8	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999986702778053	WITHOUT_CLASSIFICATION	1.3297221946856914E-6	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999449695041	WITHOUT_CLASSIFICATION	5.503049593258731E-8	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999999449695041	WITHOUT_CLASSIFICATION	5.503049593258731E-8	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9999950004681828	WITHOUT_CLASSIFICATION	4.999531817163908E-6	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9999849124229448	WITHOUT_CLASSIFICATION	1.5087577055085591E-5	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999924040105925	WITHOUT_CLASSIFICATION	7.5959894073924016E-6	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9999963211829229	WITHOUT_CLASSIFICATION	3.678817077162167E-6	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999985042520808	WITHOUT_CLASSIFICATION	1.4957479191446012E-6	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999950309431272	WITHOUT_CLASSIFICATION	4.969056872691189E-6	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9998403190288973	WITHOUT_CLASSIFICATION	1.596809711027973E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999998911151703	WITHOUT_CLASSIFICATION	1.0888482971171287E-7	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9999998911151703	WITHOUT_CLASSIFICATION	1.0888482971171287E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999997806491102	WITHOUT_CLASSIFICATION	2.1935088971079758E-7	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999935691173436	WITHOUT_CLASSIFICATION	6.430882656367162E-6	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999998647332351	WITHOUT_CLASSIFICATION	1.3526676492237262E-7	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9999999325086091	WITHOUT_CLASSIFICATION	6.749139093554829E-8	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9999997293160169	WITHOUT_CLASSIFICATION	2.706839831851401E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999993464512669	WITHOUT_CLASSIFICATION	6.535487331156371E-7	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999989149998255	WITHOUT_CLASSIFICATION	1.0850001744454362E-6	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999987552097453	WITHOUT_CLASSIFICATION	1.2447902545831379E-6	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999998214796905	WITHOUT_CLASSIFICATION	1.7852030965510872E-7	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9999900382736868	WITHOUT_CLASSIFICATION	9.961726313179529E-6	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999993274245639	WITHOUT_CLASSIFICATION	6.725754361977447E-7	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999983043598735	WITHOUT_CLASSIFICATION	1.6956401264956153E-6	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9999997313683233	WITHOUT_CLASSIFICATION	2.6863167674640256E-7	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9995436531550048	WITHOUT_CLASSIFICATION	4.563468449951629E-4	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.999891804825136	WITHOUT_CLASSIFICATION	1.0819517486402605E-4	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999859689191724	WITHOUT_CLASSIFICATION	1.4031080827513138E-5	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.999974265783697	WITHOUT_CLASSIFICATION	2.5734216302995505E-5	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999952972999937	WITHOUT_CLASSIFICATION	4.7027000063112974E-6	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9998513493582706	WITHOUT_CLASSIFICATION	1.4865064172934727E-4	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999708841001663	WITHOUT_CLASSIFICATION	2.911589983370655E-5	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999965310041159	WITHOUT_CLASSIFICATION	3.4689958841103884E-6	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999995518359626	WITHOUT_CLASSIFICATION	4.4816403744447317E-7	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.999998867318992	WITHOUT_CLASSIFICATION	1.1326810080517763E-6	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9999993516399179	WITHOUT_CLASSIFICATION	6.483600820592785E-7	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9999997976807922	WITHOUT_CLASSIFICATION	2.0231920784885485E-7	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999900010160626	WITHOUT_CLASSIFICATION	9.998983937437347E-6	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999883465092098	WITHOUT_CLASSIFICATION	1.1653490790253429E-5	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999984216897854	WITHOUT_CLASSIFICATION	1.5783102145740639E-6	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9999997657912982	WITHOUT_CLASSIFICATION	2.342087018181102E-7	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9999909036761175	WITHOUT_CLASSIFICATION	9.096323882406386E-6	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9999985300630923	WITHOUT_CLASSIFICATION	1.4699369077565417E-6	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999962909465969	WITHOUT_CLASSIFICATION	3.7090534029510553E-6	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9992683519888091	WITHOUT_CLASSIFICATION	7.31648011190935E-4	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999962664823863	WITHOUT_CLASSIFICATION	3.7335176137276396E-6	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9999988912223758	WITHOUT_CLASSIFICATION	1.108777624048829E-6	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9999849663486313	WITHOUT_CLASSIFICATION	1.5033651368562027E-5	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999977392201144	WITHOUT_CLASSIFICATION	2.260779885657635E-6	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9999991269969866	WITHOUT_CLASSIFICATION	8.730030133853269E-7	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9999997924372278	WITHOUT_CLASSIFICATION	2.0756277212969777E-7	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9995798886608475	WITHOUT_CLASSIFICATION	4.201113391524628E-4	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9999994933714417	WITHOUT_CLASSIFICATION	5.066285583488432E-7	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9999342613672632	WITHOUT_CLASSIFICATION	6.573863273678294E-5	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999882383667538	WITHOUT_CLASSIFICATION	1.1761633246275837E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999855204829416	WITHOUT_CLASSIFICATION	1.4479517058493967E-5	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999991433560907	WITHOUT_CLASSIFICATION	8.566439092790721E-7	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9995539133635686	WITHOUT_CLASSIFICATION	4.4608663643144053E-4	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999988398797776	WITHOUT_CLASSIFICATION	1.1601202223989932E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999996600986186	WITHOUT_CLASSIFICATION	3.399013813389741E-7	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999988398797776	WITHOUT_CLASSIFICATION	1.1601202223989932E-6	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9999551529258316	WITHOUT_CLASSIFICATION	4.484707416828362E-5	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9997940779069221	WITHOUT_CLASSIFICATION	2.0592209307788628E-4	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999996544769804	WITHOUT_CLASSIFICATION	3.4552301961549234E-7	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9999572987313321	WITHOUT_CLASSIFICATION	4.2701268667855016E-5	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9637323912827704	WITHOUT_CLASSIFICATION	0.03626760871722952	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9992536143505315	WITHOUT_CLASSIFICATION	7.463856494685489E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9998333442779046	WITHOUT_CLASSIFICATION	1.6665572209534097E-4	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9999768979428008	WITHOUT_CLASSIFICATION	2.3102057199274082E-5	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.999996499588056	WITHOUT_CLASSIFICATION	3.500411943988648E-6	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9999959137651028	WITHOUT_CLASSIFICATION	4.086234897202619E-6	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999987714122166	WITHOUT_CLASSIFICATION	1.2285877834851534E-6	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9999953295622916	WITHOUT_CLASSIFICATION	4.670437708367944E-6	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999728208507251	WITHOUT_CLASSIFICATION	2.7179149274869814E-5	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999957847803422	WITHOUT_CLASSIFICATION	4.215219657842447E-6	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999992256024068	WITHOUT_CLASSIFICATION	7.74397593200063E-7	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999997444715109	WITHOUT_CLASSIFICATION	2.55528489212023E-7	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999960703591136	WITHOUT_CLASSIFICATION	3.929640886408813E-6	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9998644855987581	WITHOUT_CLASSIFICATION	1.355144012418788E-4	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999921209200433	WITHOUT_CLASSIFICATION	7.87907995672933E-6	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9999941026151825	WITHOUT_CLASSIFICATION	5.897384817519995E-6	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999508321692323	WITHOUT_CLASSIFICATION	4.916783076755524E-5	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999005258445	WITHOUT_CLASSIFICATION	9.947415546411218E-8	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999990585577639	WITHOUT_CLASSIFICATION	9.41442236089965E-7	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999998063775597	WITHOUT_CLASSIFICATION	1.9362244039245643E-7	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999999976962712	WITHOUT_CLASSIFICATION	2.303728752771769E-9	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999665071513155	WITHOUT_CLASSIFICATION	3.3492848684612594E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9993838790919702	WITHOUT_CLASSIFICATION	6.161209080296833E-4	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9999886258547597	WITHOUT_CLASSIFICATION	1.1374145240268683E-5	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999980275177738	WITHOUT_CLASSIFICATION	1.9724822261820467E-6	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9999479609984249	WITHOUT_CLASSIFICATION	5.20390015751588E-5	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.999972044392044	WITHOUT_CLASSIFICATION	2.795560795602063E-5	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9999218527679752	WITHOUT_CLASSIFICATION	7.814723202484466E-5	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9982357185051852	WITHOUT_CLASSIFICATION	0.0017642814948147093	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999996374587521	WITHOUT_CLASSIFICATION	3.625412478699229E-7	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999992002054762	WITHOUT_CLASSIFICATION	7.997945239218692E-7	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.999999995105469	WITHOUT_CLASSIFICATION	4.894531004671717E-9	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.999997812440196	WITHOUT_CLASSIFICATION	2.187559804031665E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999996373157165	WITHOUT_CLASSIFICATION	3.626842835029001E-7	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9999996373157165	WITHOUT_CLASSIFICATION	3.626842835029001E-7	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9999839612665637	WITHOUT_CLASSIFICATION	1.6038733436217434E-5	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9999952464911445	WITHOUT_CLASSIFICATION	4.753508855495992E-6	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9999685993740406	WITHOUT_CLASSIFICATION	3.140062595937763E-5	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999999225769728	WITHOUT_CLASSIFICATION	7.742302718515397E-8	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999992672536789	WITHOUT_CLASSIFICATION	7.327463209151362E-7	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999998421485194	WITHOUT_CLASSIFICATION	1.5785148052466835E-7	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999815999680562	WITHOUT_CLASSIFICATION	1.8400031943765253E-5	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999999838779698	WITHOUT_CLASSIFICATION	1.6122030126839548E-8	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999857699151405	WITHOUT_CLASSIFICATION	1.4230084859465889E-5	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9999938896012976	WITHOUT_CLASSIFICATION	6.110398702386765E-6	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9989245771337926	WITHOUT_CLASSIFICATION	0.001075422866207387	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9998373786517576	WITHOUT_CLASSIFICATION	1.6262134824246847E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9999985485996559	WITHOUT_CLASSIFICATION	1.4514003441930917E-6	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9981437990566636	WITHOUT_CLASSIFICATION	0.0018562009433364056	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9999917295339349	WITHOUT_CLASSIFICATION	8.270466065036249E-6	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999986259527718	WITHOUT_CLASSIFICATION	1.3740472282079162E-6	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.999998051518136	WITHOUT_CLASSIFICATION	1.948481863884171E-6	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9997497534626384	WITHOUT_CLASSIFICATION	2.502465373616476E-4	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999896570947284	WITHOUT_CLASSIFICATION	1.0342905271480517E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999939735084112	WITHOUT_CLASSIFICATION	6.0264915887718E-6	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999957049436046	WITHOUT_CLASSIFICATION	4.295056395366091E-6	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999989456467561	WITHOUT_CLASSIFICATION	1.054353243946502E-6	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9981259835028978	WITHOUT_CLASSIFICATION	0.0018740164971020766	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9990550579966672	WITHOUT_CLASSIFICATION	9.44942003332833E-4	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9997676417649951	WITHOUT_CLASSIFICATION	2.3235823500490142E-4	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.99999535050897	WITHOUT_CLASSIFICATION	4.649491029936437E-6	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9984181368645741	WITHOUT_CLASSIFICATION	0.001581863135425835	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9999937799473242	WITHOUT_CLASSIFICATION	6.220052675837417E-6	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.999995088254865	WITHOUT_CLASSIFICATION	4.9117451350398815E-6	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9998993515469262	WITHOUT_CLASSIFICATION	1.0064845307379746E-4	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9999846494314052	WITHOUT_CLASSIFICATION	1.5350568594734972E-5	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999989803867955	WITHOUT_CLASSIFICATION	1.0196132045516948E-6	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999832297288026	WITHOUT_CLASSIFICATION	1.6770271197357415E-5	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9999999519539893	WITHOUT_CLASSIFICATION	4.80460108242043E-8	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9999968647061107	WITHOUT_CLASSIFICATION	3.135293889356674E-6	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9999995689315797	WITHOUT_CLASSIFICATION	4.3106842036554214E-7	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999865271921126	WITHOUT_CLASSIFICATION	1.3472807887468594E-5	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9999865271921126	WITHOUT_CLASSIFICATION	1.3472807887468594E-5	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9999958257778189	WITHOUT_CLASSIFICATION	4.174222181087223E-6	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999290310072776	WITHOUT_CLASSIFICATION	7.096899272233091E-5	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.999999576812602	WITHOUT_CLASSIFICATION	4.231873979995829E-7	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999518033104	WITHOUT_CLASSIFICATION	4.819668954255695E-8	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999999878498115	WITHOUT_CLASSIFICATION	1.2150188407158175E-8	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9999976732037666	WITHOUT_CLASSIFICATION	2.326796233315291E-6	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.999997117122902	WITHOUT_CLASSIFICATION	2.8828770980314098E-6	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9999998210722582	WITHOUT_CLASSIFICATION	1.7892774192859344E-7	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999900116825908	WITHOUT_CLASSIFICATION	9.988317409171041E-6	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9999999689904957	WITHOUT_CLASSIFICATION	3.1009504360975305E-8	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9999998078944285	WITHOUT_CLASSIFICATION	1.921055714280205E-7	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9999911156954893	WITHOUT_CLASSIFICATION	8.8843045108101E-6	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.999998078587602	WITHOUT_CLASSIFICATION	1.9214123979225734E-6	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999991622172221	WITHOUT_CLASSIFICATION	8.377827778933204E-7	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999996834986503	WITHOUT_CLASSIFICATION	3.1650134959053467E-7	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9999999420140466	WITHOUT_CLASSIFICATION	5.7985953349650524E-8	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9999329064223772	WITHOUT_CLASSIFICATION	6.70935776228619E-5	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999981468969387	WITHOUT_CLASSIFICATION	1.853103061239661E-6	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9999988760781698	WITHOUT_CLASSIFICATION	1.1239218301707141E-6	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9999598584575439	WITHOUT_CLASSIFICATION	4.0141542456170675E-5	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9999998365282508	WITHOUT_CLASSIFICATION	1.6347174919800783E-7	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999844615607545	WITHOUT_CLASSIFICATION	1.5538439245443958E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999984536594709	WITHOUT_CLASSIFICATION	1.5463405289772289E-6	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9999937069485221	WITHOUT_CLASSIFICATION	6.2930514778540125E-6	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999970162739948	WITHOUT_CLASSIFICATION	2.983726005160132E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999952008323537	WITHOUT_CLASSIFICATION	4.7991676462947695E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999998457975193	WITHOUT_CLASSIFICATION	1.5420248075256065E-7	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999915716895005	WITHOUT_CLASSIFICATION	8.428310499588297E-6	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9999995048068918	WITHOUT_CLASSIFICATION	4.951931081667402E-7	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9999994943468563	WITHOUT_CLASSIFICATION	5.056531436918121E-7	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.999999133024433	WITHOUT_CLASSIFICATION	8.669755669637133E-7	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999999751585421	WITHOUT_CLASSIFICATION	2.4841457981361607E-8	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9999992309490146	WITHOUT_CLASSIFICATION	7.69050985474488E-7	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9999990311903222	WITHOUT_CLASSIFICATION	9.688096777312785E-7	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9999975028081988	WITHOUT_CLASSIFICATION	2.497191801240278E-6	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999987549882267	WITHOUT_CLASSIFICATION	1.245011773395649E-6	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9999955464818637	WITHOUT_CLASSIFICATION	4.453518136225901E-6	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999888353192793	WITHOUT_CLASSIFICATION	1.1164680720688546E-5	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999978297713978	WITHOUT_CLASSIFICATION	2.170228602133229E-6	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9999999789312024	WITHOUT_CLASSIFICATION	2.106879761883577E-8	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999998845085973	WITHOUT_CLASSIFICATION	1.1549140267338065E-7	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999999306335031	WITHOUT_CLASSIFICATION	6.936649690313215E-8	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999998316432109	WITHOUT_CLASSIFICATION	1.6835678905308989E-7	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9999874755614145	WITHOUT_CLASSIFICATION	1.2524438585338761E-5	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9999999788952785	WITHOUT_CLASSIFICATION	2.110472159069396E-8	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9999998114970706	WITHOUT_CLASSIFICATION	1.8850292942280495E-7	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9999625514791213	WITHOUT_CLASSIFICATION	3.7448520878787474E-5	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.999999758145211	WITHOUT_CLASSIFICATION	2.4185478902897215E-7	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9999958487511181	WITHOUT_CLASSIFICATION	4.151248881870282E-6	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999999673484675	WITHOUT_CLASSIFICATION	3.2651532550330286E-8	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999980382715374	WITHOUT_CLASSIFICATION	1.961728462575552E-6	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999999723100557	WITHOUT_CLASSIFICATION	2.768994439082693E-8	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999997965618045	WITHOUT_CLASSIFICATION	2.0343819555732877E-7	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999995198228671	WITHOUT_CLASSIFICATION	4.801771329552662E-7	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.999999876078894	WITHOUT_CLASSIFICATION	1.2392110614993275E-7	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.999999925944399	WITHOUT_CLASSIFICATION	7.405560102232431E-8	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999999497393034	WITHOUT_CLASSIFICATION	5.02606966937794E-8	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999996167136599	WITHOUT_CLASSIFICATION	3.8328634009761096E-7	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.999999248498163	WITHOUT_CLASSIFICATION	7.515018370193152E-7	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999993207942598	WITHOUT_CLASSIFICATION	6.792057400994345E-7	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9989694359024706	WITHOUT_CLASSIFICATION	0.0010305640975294024	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999996961512807	WITHOUT_CLASSIFICATION	3.038487192514537E-7	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999260598416487	WITHOUT_CLASSIFICATION	7.394015835128627E-5	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.999999490532624	WITHOUT_CLASSIFICATION	5.094673759594012E-7	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.998365251616891	WITHOUT_CLASSIFICATION	0.0016347483831089906	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9999970826670094	WITHOUT_CLASSIFICATION	2.917332990607073E-6	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9971440604304903	WITHOUT_CLASSIFICATION	0.002855939569509656	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.999999996155297	WITHOUT_CLASSIFICATION	3.8447030141139225E-9	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999999818019626	WITHOUT_CLASSIFICATION	1.819803736107901E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999959510461589	WITHOUT_CLASSIFICATION	4.048953841052931E-6	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999982368518981	WITHOUT_CLASSIFICATION	1.76314810177363E-6	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9999930286292951	WITHOUT_CLASSIFICATION	6.971370704883682E-6	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9999844568440754	WITHOUT_CLASSIFICATION	1.5543155924547755E-5	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.999999771190441	WITHOUT_CLASSIFICATION	2.288095589390564E-7	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.999999771190441	WITHOUT_CLASSIFICATION	2.288095589390564E-7	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.999973764239944	WITHOUT_CLASSIFICATION	2.6235760055926873E-5	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999936213899746	WITHOUT_CLASSIFICATION	6.37861002538484E-6	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9999898701208844	WITHOUT_CLASSIFICATION	1.0129879115516289E-5	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9999939843058538	WITHOUT_CLASSIFICATION	6.015694146158523E-6	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.999999703050235	WITHOUT_CLASSIFICATION	2.969497649722928E-7	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9999982405704135	WITHOUT_CLASSIFICATION	1.7594295863691886E-6	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9999999608421363	WITHOUT_CLASSIFICATION	3.915786373374943E-8	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9999998102913294	WITHOUT_CLASSIFICATION	1.8970867066917402E-7	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9997008979993778	WITHOUT_CLASSIFICATION	2.9910200062221635E-4	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9999913525876972	WITHOUT_CLASSIFICATION	8.647412302772978E-6	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.999989249717693	WITHOUT_CLASSIFICATION	1.0750282307147588E-5	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999999248835066	WITHOUT_CLASSIFICATION	7.511649337440226E-8	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999980168952577	WITHOUT_CLASSIFICATION	1.9831047422993975E-6	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999990167889264	WITHOUT_CLASSIFICATION	9.832110735646508E-7	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9999890848853342	WITHOUT_CLASSIFICATION	1.0915114665760066E-5	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999969732198334	WITHOUT_CLASSIFICATION	3.0267801666576447E-6	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999994485298439	WITHOUT_CLASSIFICATION	5.514701561791198E-7	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999977956944348	WITHOUT_CLASSIFICATION	2.204305565113047E-6	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999995871669289	WITHOUT_CLASSIFICATION	4.128330710948785E-7	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9999409955502999	WITHOUT_CLASSIFICATION	5.900444970005755E-5	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9999972752669493	WITHOUT_CLASSIFICATION	2.7247330507901485E-6	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9999967948896492	WITHOUT_CLASSIFICATION	3.205110350865776E-6	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999806012386763	WITHOUT_CLASSIFICATION	1.9398761323693405E-5	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9999989046594743	WITHOUT_CLASSIFICATION	1.095340525652174E-6	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9999969680065565	WITHOUT_CLASSIFICATION	3.0319934435895955E-6	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999997848315056	WITHOUT_CLASSIFICATION	2.151684944568854E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999994337659551	WITHOUT_CLASSIFICATION	5.662340448785821E-7	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999984024071773	WITHOUT_CLASSIFICATION	1.597592822753265E-6	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9999999742274736	WITHOUT_CLASSIFICATION	2.577252640249204E-8	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999996780962179	WITHOUT_CLASSIFICATION	3.219037820160715E-7	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999996874813779	WITHOUT_CLASSIFICATION	3.1251862204293925E-7	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9999943936359733	WITHOUT_CLASSIFICATION	5.606364026714141E-6	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999999239864389	WITHOUT_CLASSIFICATION	7.601356112180305E-8	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999979756584558	WITHOUT_CLASSIFICATION	2.024341544246964E-6	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999989512991029	WITHOUT_CLASSIFICATION	1.0487008970615033E-6	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999993430619452	WITHOUT_CLASSIFICATION	6.569380548527385E-7	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999997767599785	WITHOUT_CLASSIFICATION	2.232400215748002E-7	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999984290079883	WITHOUT_CLASSIFICATION	1.5709920117092698E-6	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999996786036213	WITHOUT_CLASSIFICATION	3.2139637872065166E-7	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999964529319005	WITHOUT_CLASSIFICATION	3.5470680994372493E-6	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9999957369184793	WITHOUT_CLASSIFICATION	4.263081520674293E-6	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999999852719333	WITHOUT_CLASSIFICATION	1.472806658641462E-8	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999982696758456	WITHOUT_CLASSIFICATION	1.7303241544611566E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999999903965349	WITHOUT_CLASSIFICATION	9.603465211499779E-9	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9999985807821642	WITHOUT_CLASSIFICATION	1.4192178357936179E-6	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999969199108536	WITHOUT_CLASSIFICATION	3.0800891464816964E-6	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9998582124827506	WITHOUT_CLASSIFICATION	1.417875172492948E-4	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999994771414625	WITHOUT_CLASSIFICATION	5.228585374763435E-7	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9999885166178221	WITHOUT_CLASSIFICATION	1.1483382177873167E-5	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9999939919205961	WITHOUT_CLASSIFICATION	6.008079403848728E-6	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9999805126556464	WITHOUT_CLASSIFICATION	1.9487344353713918E-5	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999930428047757	WITHOUT_CLASSIFICATION	6.957195224209887E-6	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.9939632847160124	WITHOUT_CLASSIFICATION	0.006036715283987701	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999990540050281	WITHOUT_CLASSIFICATION	9.459949719063764E-7	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9999857060850041	WITHOUT_CLASSIFICATION	1.4293914995850919E-5	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999994691344046	WITHOUT_CLASSIFICATION	5.30865595395416E-7	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.999999959274137	WITHOUT_CLASSIFICATION	4.07258630677801E-8	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999997946848693	WITHOUT_CLASSIFICATION	2.0531513074338857E-7	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999955759984812	WITHOUT_CLASSIFICATION	4.424001518774673E-6	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999996266653697	WITHOUT_CLASSIFICATION	3.7333463028908836E-7	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999588651534528	WITHOUT_CLASSIFICATION	4.11348465472044E-5	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9999895754185811	WITHOUT_CLASSIFICATION	1.0424581418903459E-5	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.99999981351853	WITHOUT_CLASSIFICATION	1.8648147008564742E-7	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999909008580917	WITHOUT_CLASSIFICATION	9.099141908303151E-6	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999989301404746	WITHOUT_CLASSIFICATION	1.0698595253487168E-6	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9992397323931631	WITHOUT_CLASSIFICATION	7.602676068368373E-4	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.999999576001222	WITHOUT_CLASSIFICATION	4.2399877804389266E-7	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.999998602505064	WITHOUT_CLASSIFICATION	1.3974949359981702E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999966709092523	WITHOUT_CLASSIFICATION	3.329090747821587E-6	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999999064779632	WITHOUT_CLASSIFICATION	9.352203678487196E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9999999961999205	WITHOUT_CLASSIFICATION	3.8000795277255355E-9	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9999998548919521	WITHOUT_CLASSIFICATION	1.4510804798789507E-7	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999998261014298	WITHOUT_CLASSIFICATION	1.738985702369696E-7	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999997077273751	WITHOUT_CLASSIFICATION	2.922726249451486E-7	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999953410905283	WITHOUT_CLASSIFICATION	4.658909471698197E-6	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999961566826309	WITHOUT_CLASSIFICATION	3.843317369168454E-6	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.999999716186753	WITHOUT_CLASSIFICATION	2.838132469398545E-7	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999991026168085	WITHOUT_CLASSIFICATION	8.973831916431649E-7	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999999359902083	WITHOUT_CLASSIFICATION	6.400979173563988E-8	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999992906639407	WITHOUT_CLASSIFICATION	7.093360593284168E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9822379603118767	WITHOUT_CLASSIFICATION	0.017762039688123257	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999995532834653	WITHOUT_CLASSIFICATION	4.467165345433965E-7	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999995866209737	WITHOUT_CLASSIFICATION	4.133790262314443E-7	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999999555799607	WITHOUT_CLASSIFICATION	4.442003944850503E-8	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.999999285404322	WITHOUT_CLASSIFICATION	7.14595677895087E-7	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999999540723841	WITHOUT_CLASSIFICATION	4.5927615938287875E-8	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9999728591857742	WITHOUT_CLASSIFICATION	2.7140814225924593E-5	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999999660179179	WITHOUT_CLASSIFICATION	3.398208212948469E-8	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9999933205467354	WITHOUT_CLASSIFICATION	6.679453264619871E-6	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999999851729248	WITHOUT_CLASSIFICATION	1.4827075263131695E-8	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999996253723867	WITHOUT_CLASSIFICATION	3.746276132977787E-7	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9999933760179125	WITHOUT_CLASSIFICATION	6.623982087481856E-6	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999985737414194	WITHOUT_CLASSIFICATION	1.4262585805471592E-6	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999997446349315	WITHOUT_CLASSIFICATION	2.5536506844905795E-7	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999895378200911	WITHOUT_CLASSIFICATION	1.0462179908734097E-5	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999995276224689	WITHOUT_CLASSIFICATION	4.7237753101899015E-7	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999891915891	WITHOUT_CLASSIFICATION	1.0808411002584164E-8	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.999985712043677	WITHOUT_CLASSIFICATION	1.4287956322964458E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999994195165428	WITHOUT_CLASSIFICATION	5.804834572007178E-7	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.999999921780756	WITHOUT_CLASSIFICATION	7.821924399744902E-8	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999974956117038	WITHOUT_CLASSIFICATION	2.5043882962735E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999995713760617	WITHOUT_CLASSIFICATION	4.286239383463856E-7	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999997578288009	WITHOUT_CLASSIFICATION	2.421711991183291E-7	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999997695992037	WITHOUT_CLASSIFICATION	2.3040079635920537E-7	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9999962219669011	WITHOUT_CLASSIFICATION	3.7780330988206687E-6	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9999973717762909	WITHOUT_CLASSIFICATION	2.6282237090154092E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999990725807979	WITHOUT_CLASSIFICATION	9.274192020858011E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999911315011943	WITHOUT_CLASSIFICATION	8.868498805679192E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999974956117038	WITHOUT_CLASSIFICATION	2.5043882962735E-6	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999957593925425	WITHOUT_CLASSIFICATION	4.240607457465258E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999990725807979	WITHOUT_CLASSIFICATION	9.274192020858011E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999911315011943	WITHOUT_CLASSIFICATION	8.868498805679192E-6	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999926644287794	WITHOUT_CLASSIFICATION	7.335571220562941E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999921549287535	WITHOUT_CLASSIFICATION	7.845071246620303E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999921549287535	WITHOUT_CLASSIFICATION	7.845071246620303E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.999997304694373	WITHOUT_CLASSIFICATION	2.695305627141632E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.999997304694373	WITHOUT_CLASSIFICATION	2.695305627141632E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.999997304694373	WITHOUT_CLASSIFICATION	2.695305627141632E-6	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999999058308938	WITHOUT_CLASSIFICATION	9.41691061952297E-7	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999970962001103	WITHOUT_CLASSIFICATION	2.903799889529357E-6	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999991673144838	WITHOUT_CLASSIFICATION	8.326855161350196E-7	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999908493968563	WITHOUT_CLASSIFICATION	9.15060314360117E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999976145092425	WITHOUT_CLASSIFICATION	2.3854907574378746E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999999264680569	WITHOUT_CLASSIFICATION	7.353194319565417E-8	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999984382534168	WITHOUT_CLASSIFICATION	1.5617465830848555E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999995023413106	WITHOUT_CLASSIFICATION	4.97658689284594E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999998978018768	WITHOUT_CLASSIFICATION	1.021981232351362E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999579634678442	WITHOUT_CLASSIFICATION	4.203653215581578E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999974956117038	WITHOUT_CLASSIFICATION	2.5043882962735E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999974956117038	WITHOUT_CLASSIFICATION	2.5043882962735E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999974956117038	WITHOUT_CLASSIFICATION	2.5043882962735E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999995713760617	WITHOUT_CLASSIFICATION	4.286239383463856E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999995713760617	WITHOUT_CLASSIFICATION	4.286239383463856E-7	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9999911315011943	WITHOUT_CLASSIFICATION	8.868498805679192E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999921549287535	WITHOUT_CLASSIFICATION	7.845071246620303E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999921549287535	WITHOUT_CLASSIFICATION	7.845071246620303E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.999997304694373	WITHOUT_CLASSIFICATION	2.695305627141632E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999970962001103	WITHOUT_CLASSIFICATION	2.903799889529357E-6	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9999908493968563	WITHOUT_CLASSIFICATION	9.15060314360117E-6	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999988735008281	WITHOUT_CLASSIFICATION	1.1264991719798604E-6	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9999989979594255	WITHOUT_CLASSIFICATION	1.002040574524719E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999911504759575	WITHOUT_CLASSIFICATION	8.849524042489664E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999993630741134	WITHOUT_CLASSIFICATION	6.369258865637512E-7	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999904219740011	WITHOUT_CLASSIFICATION	9.578025998810544E-6	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9999904219740011	WITHOUT_CLASSIFICATION	9.578025998810544E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999987883782524	WITHOUT_CLASSIFICATION	1.2116217476612653E-6	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.99999183400778	WITHOUT_CLASSIFICATION	8.165992219868407E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999994592929976	WITHOUT_CLASSIFICATION	5.407070023752836E-7	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999986208055683	WITHOUT_CLASSIFICATION	1.3791944316838627E-6	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9999995740867413	WITHOUT_CLASSIFICATION	4.25913258662266E-7	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9999958901654012	WITHOUT_CLASSIFICATION	4.109834598778515E-6	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9999769442171885	WITHOUT_CLASSIFICATION	2.3055782811394152E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999974956117038	WITHOUT_CLASSIFICATION	2.5043882962735E-6	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999990725807979	WITHOUT_CLASSIFICATION	9.274192020858011E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999921549287535	WITHOUT_CLASSIFICATION	7.845071246620303E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999921549287535	WITHOUT_CLASSIFICATION	7.845071246620303E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.999997304694373	WITHOUT_CLASSIFICATION	2.695305627141632E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.999997304694373	WITHOUT_CLASSIFICATION	2.695305627141632E-6	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999992836587345	WITHOUT_CLASSIFICATION	7.163412656555114E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999999058308938	WITHOUT_CLASSIFICATION	9.41691061952297E-7	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999976145092425	WITHOUT_CLASSIFICATION	2.3854907574378746E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999999264680569	WITHOUT_CLASSIFICATION	7.353194319565417E-8	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999999264680569	WITHOUT_CLASSIFICATION	7.353194319565417E-8	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999995023413106	WITHOUT_CLASSIFICATION	4.97658689284594E-7	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999998978018768	WITHOUT_CLASSIFICATION	1.021981232351362E-7	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999579634678442	WITHOUT_CLASSIFICATION	4.203653215581578E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999989393662836	WITHOUT_CLASSIFICATION	1.0606337164385125E-6	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999984118809958	WITHOUT_CLASSIFICATION	1.5881190042233554E-6	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9998580987347023	WITHOUT_CLASSIFICATION	1.4190126529762547E-4	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9999988709950667	WITHOUT_CLASSIFICATION	1.1290049333536243E-6	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999979413031347	WITHOUT_CLASSIFICATION	2.0586968653117194E-6	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9999933403301839	WITHOUT_CLASSIFICATION	6.65966981598798E-6	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999980024591463	WITHOUT_CLASSIFICATION	1.9975408537489137E-6	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9999980905367798	WITHOUT_CLASSIFICATION	1.9094632202312303E-6	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999990187660212	WITHOUT_CLASSIFICATION	9.812339788576842E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999974956117038	WITHOUT_CLASSIFICATION	2.5043882962735E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999921549287535	WITHOUT_CLASSIFICATION	7.845071246620303E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.999997304694373	WITHOUT_CLASSIFICATION	2.695305627141632E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9999970962001103	WITHOUT_CLASSIFICATION	2.903799889529357E-6	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999999264680569	WITHOUT_CLASSIFICATION	7.353194319565417E-8	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999995023413106	WITHOUT_CLASSIFICATION	4.97658689284594E-7	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999995023413106	WITHOUT_CLASSIFICATION	4.97658689284594E-7	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999988735008281	WITHOUT_CLASSIFICATION	1.1264991719798604E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999987883782524	WITHOUT_CLASSIFICATION	1.2116217476612653E-6	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999987883782524	WITHOUT_CLASSIFICATION	1.2116217476612653E-6	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999994592929976	WITHOUT_CLASSIFICATION	5.407070023752836E-7	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999984107046723	WITHOUT_CLASSIFICATION	1.589295327635055E-6	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999998767427041	WITHOUT_CLASSIFICATION	1.232572959014912E-6	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999829889923447	WITHOUT_CLASSIFICATION	1.7011007655281205E-5	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999952634714453	WITHOUT_CLASSIFICATION	4.7365285546450405E-6	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999974769999703	WITHOUT_CLASSIFICATION	2.523000029637115E-6	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999993663818568	WITHOUT_CLASSIFICATION	6.336181432623233E-7	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9999964207062928	WITHOUT_CLASSIFICATION	3.5792937072119106E-6	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9999964968720008	WITHOUT_CLASSIFICATION	3.5031279992176896E-6	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999997599413897	WITHOUT_CLASSIFICATION	2.400586104264812E-7	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999991875357853	WITHOUT_CLASSIFICATION	8.124642147576914E-7	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999953945781003	WITHOUT_CLASSIFICATION	4.6054218996807366E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9999956601332409	WITHOUT_CLASSIFICATION	4.3398667590704265E-6	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999993369627496	WITHOUT_CLASSIFICATION	6.630372504318386E-7	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9999972683105385	WITHOUT_CLASSIFICATION	2.7316894616042346E-6	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9999995592505637	WITHOUT_CLASSIFICATION	4.407494362675265E-7	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999847774691794	WITHOUT_CLASSIFICATION	1.5222530820749734E-5	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999998873236644	WITHOUT_CLASSIFICATION	1.1267633556769403E-7	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.999999621665434	WITHOUT_CLASSIFICATION	3.783345660148687E-7	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999987007323129	WITHOUT_CLASSIFICATION	1.2992676871058122E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999999432306605	WITHOUT_CLASSIFICATION	5.676933930897823E-8	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9999998372137742	WITHOUT_CLASSIFICATION	1.6278622576003886E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999997959308082	WITHOUT_CLASSIFICATION	2.040691918578196E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.999999938849645	WITHOUT_CLASSIFICATION	6.115035498841101E-8	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999999819801515	WITHOUT_CLASSIFICATION	1.801984851100026E-8	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9998839613288775	WITHOUT_CLASSIFICATION	1.1603867112250168E-4	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999942108339028	WITHOUT_CLASSIFICATION	5.7891660972379745E-6	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.999996411625106	WITHOUT_CLASSIFICATION	3.588374893960946E-6	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999834673914584	WITHOUT_CLASSIFICATION	1.6532608541625382E-5	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999928768810248	WITHOUT_CLASSIFICATION	7.123118975223712E-6	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.999999530716449	WITHOUT_CLASSIFICATION	4.6928355095923553E-7	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9999999943649105	WITHOUT_CLASSIFICATION	5.635089449112097E-9	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9999845350233658	WITHOUT_CLASSIFICATION	1.5464976634191606E-5	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9999984077309306	WITHOUT_CLASSIFICATION	1.5922690694098656E-6	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999999919484501	WITHOUT_CLASSIFICATION	8.05154987023178E-9	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999865874593407	WITHOUT_CLASSIFICATION	1.3412540659315398E-5	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999999325640894	WITHOUT_CLASSIFICATION	6.743591059966779E-8	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999985835696028	WITHOUT_CLASSIFICATION	1.4164303972585288E-6	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999917047775991	WITHOUT_CLASSIFICATION	8.295222400872937E-6	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999998745892009	WITHOUT_CLASSIFICATION	1.2541079907749883E-7	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999999549734234	WITHOUT_CLASSIFICATION	4.502657655658684E-8	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9998885845510751	WITHOUT_CLASSIFICATION	1.1141544892490245E-4	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9999956967065166	WITHOUT_CLASSIFICATION	4.3032934834405225E-6	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999999783415413	WITHOUT_CLASSIFICATION	2.165845872593644E-8	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999999355138616	WITHOUT_CLASSIFICATION	6.448613843649487E-8	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999975437992177	WITHOUT_CLASSIFICATION	2.4562007822739855E-6	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999988960158313	WITHOUT_CLASSIFICATION	1.103984168646374E-6	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9999161882772158	WITHOUT_CLASSIFICATION	8.381172278414253E-5	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9999701668929506	WITHOUT_CLASSIFICATION	2.9833107049361587E-5	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999960920721213	WITHOUT_CLASSIFICATION	3.907927878753673E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980580444668	WITHOUT_CLASSIFICATION	1.9419555331218187E-6	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9999999397037995	WITHOUT_CLASSIFICATION	6.02962005557424E-8	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999999595063761	WITHOUT_CLASSIFICATION	4.049362388173169E-8	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999935310700039	WITHOUT_CLASSIFICATION	6.468929996118916E-6	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999979438152433	WITHOUT_CLASSIFICATION	2.0561847567578904E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999742178301347	WITHOUT_CLASSIFICATION	2.5782169865140283E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999742178301347	WITHOUT_CLASSIFICATION	2.5782169865140283E-5	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.999999261496793	WITHOUT_CLASSIFICATION	7.385032070707891E-7	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999989666928768	WITHOUT_CLASSIFICATION	1.0333071231836308E-6	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.99999957623784	WITHOUT_CLASSIFICATION	4.237621601012652E-7	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9999986266631354	WITHOUT_CLASSIFICATION	1.3733368646506907E-6	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.8400828238820105	WITHOUT_CLASSIFICATION	0.1599171761179895	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999955684811332	WITHOUT_CLASSIFICATION	4.4315188667324805E-6	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9995738213920898	WITHOUT_CLASSIFICATION	4.2617860791013037E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.999986904315869	WITHOUT_CLASSIFICATION	1.3095684130877929E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999957102844953	WITHOUT_CLASSIFICATION	4.289715504646307E-6	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999957102844953	WITHOUT_CLASSIFICATION	4.289715504646307E-6	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999995119764535	WITHOUT_CLASSIFICATION	4.880235464298041E-7	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999983516798957	WITHOUT_CLASSIFICATION	1.6483201042783E-6	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999990141130313	WITHOUT_CLASSIFICATION	9.858869687279826E-7	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9999992676674825	WITHOUT_CLASSIFICATION	7.323325175738111E-7	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999997314185631	WITHOUT_CLASSIFICATION	2.685814368004185E-7	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999987439431081	WITHOUT_CLASSIFICATION	1.2560568919360296E-6	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999996174838963	WITHOUT_CLASSIFICATION	3.8251610378616835E-7	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999891911552783	WITHOUT_CLASSIFICATION	1.08088447218211E-5	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999988967290298	WITHOUT_CLASSIFICATION	1.1032709702077685E-6	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9999867593312729	WITHOUT_CLASSIFICATION	1.3240668727086778E-5	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9999993245606774	WITHOUT_CLASSIFICATION	6.754393226353504E-7	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9999903996190548	WITHOUT_CLASSIFICATION	9.600380945117266E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999979930966364	WITHOUT_CLASSIFICATION	2.0069033635781654E-6	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999552461208031	WITHOUT_CLASSIFICATION	4.475387919692852E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999996374587521	WITHOUT_CLASSIFICATION	3.625412478699229E-7	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999988960158313	WITHOUT_CLASSIFICATION	1.103984168646374E-6	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999742178301347	WITHOUT_CLASSIFICATION	2.5782169865140283E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999742178301347	WITHOUT_CLASSIFICATION	2.5782169865140283E-5	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9999989666928768	WITHOUT_CLASSIFICATION	1.0333071231836308E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9999996885678728	WITHOUT_CLASSIFICATION	3.114321271385153E-7	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9999973594933429	WITHOUT_CLASSIFICATION	2.640506657072574E-6	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999997382624743	WITHOUT_CLASSIFICATION	2.617375256811458E-7	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999989285753079	WITHOUT_CLASSIFICATION	1.0714246920038015E-6	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999977044167742	WITHOUT_CLASSIFICATION	2.2955832259034616E-6	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999996322902832	WITHOUT_CLASSIFICATION	3.6770971676682843E-7	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999960687102925	WITHOUT_CLASSIFICATION	3.931289707559815E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999991674463183	WITHOUT_CLASSIFICATION	8.32553681715311E-7	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999764923441758	WITHOUT_CLASSIFICATION	2.350765582420453E-5	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.99999990081476	WITHOUT_CLASSIFICATION	9.918523995058105E-8	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.999986329953443	WITHOUT_CLASSIFICATION	1.3670046556894734E-5	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999999584105583	WITHOUT_CLASSIFICATION	4.158944172399006E-8	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999998976190071	WITHOUT_CLASSIFICATION	1.0238099298748707E-7	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9998595761229747	WITHOUT_CLASSIFICATION	1.4042387702523212E-4	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.9999807523459445	WITHOUT_CLASSIFICATION	1.924765405546659E-5	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999697686543216	WITHOUT_CLASSIFICATION	3.023134567841679E-5	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999998097044253	WITHOUT_CLASSIFICATION	1.9029557480217158E-7	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999999720382077	WITHOUT_CLASSIFICATION	2.7961792250776355E-8	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999999699472487	WITHOUT_CLASSIFICATION	3.005275128638027E-8	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9999434394804826	WITHOUT_CLASSIFICATION	5.656051951746793E-5	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999566564345796	WITHOUT_CLASSIFICATION	4.3343565420322645E-5	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999999174933834	WITHOUT_CLASSIFICATION	8.250661671045571E-8	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9999999239535633	WITHOUT_CLASSIFICATION	7.604643666613658E-8	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999951947584106	WITHOUT_CLASSIFICATION	4.8052415893937045E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999998366942504	WITHOUT_CLASSIFICATION	1.633057495954882E-7	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999998009832338	WITHOUT_CLASSIFICATION	1.9901676624891856E-7	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999999230348017	WITHOUT_CLASSIFICATION	7.696519836391245E-8	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999354146336124	WITHOUT_CLASSIFICATION	6.458536638757897E-5	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999999900826293	WITHOUT_CLASSIFICATION	9.917370670630307E-9	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9999010795189426	WITHOUT_CLASSIFICATION	9.892048105751875E-5	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999412607969672	WITHOUT_CLASSIFICATION	5.873920303275557E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9998533573452085	WITHOUT_CLASSIFICATION	1.4664265479141014E-4	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999998512036649	WITHOUT_CLASSIFICATION	1.4879633519414594E-7	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999345597135385	WITHOUT_CLASSIFICATION	6.544028646154773E-5	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.999995641601567	WITHOUT_CLASSIFICATION	4.358398433030203E-6	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999995641562627	WITHOUT_CLASSIFICATION	4.3584373731382144E-7	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9999959916000744	WITHOUT_CLASSIFICATION	4.0083999257087015E-6	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999999641764136	WITHOUT_CLASSIFICATION	3.582358643031749E-8	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999995137417129	WITHOUT_CLASSIFICATION	4.862582870983975E-7	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9999981824774563	WITHOUT_CLASSIFICATION	1.8175225437581045E-6	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999981064310304	WITHOUT_CLASSIFICATION	1.8935689695405599E-6	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999996073034177	WITHOUT_CLASSIFICATION	3.926965822530711E-7	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999921411109276	WITHOUT_CLASSIFICATION	7.858889072319648E-6	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9995499141890181	WITHOUT_CLASSIFICATION	4.500858109819843E-4	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9999985748879884	WITHOUT_CLASSIFICATION	1.4251120115211063E-6	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9999867340432597	WITHOUT_CLASSIFICATION	1.326595674040317E-5	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9999890321021174	WITHOUT_CLASSIFICATION	1.0967897882561516E-5	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999995154360588	WITHOUT_CLASSIFICATION	4.845639412002E-7	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999987964735283	WITHOUT_CLASSIFICATION	1.203526471654433E-6	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999995858004341	WITHOUT_CLASSIFICATION	4.1419956583025105E-7	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.999998470367318	WITHOUT_CLASSIFICATION	1.5296326819499881E-6	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999833848238467	WITHOUT_CLASSIFICATION	1.6615176153350752E-5	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9999983769779982	WITHOUT_CLASSIFICATION	1.6230220017018344E-6	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9999915191093831	WITHOUT_CLASSIFICATION	8.48089061686809E-6	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999997496968079	WITHOUT_CLASSIFICATION	2.503031920604412E-7	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9999958873130086	WITHOUT_CLASSIFICATION	4.1126869914328656E-6	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999997495429331	WITHOUT_CLASSIFICATION	2.504570669284807E-7	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9999997933600719	WITHOUT_CLASSIFICATION	2.0663992805839202E-7	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999993341625182	WITHOUT_CLASSIFICATION	6.65837481769939E-7	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999985628497287	WITHOUT_CLASSIFICATION	1.4371502714204467E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999985628497287	WITHOUT_CLASSIFICATION	1.4371502714204467E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999990501138399	WITHOUT_CLASSIFICATION	9.498861600380035E-7	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999990501138399	WITHOUT_CLASSIFICATION	9.498861600380035E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999945767846664	WITHOUT_CLASSIFICATION	5.42321533359044E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999945767846664	WITHOUT_CLASSIFICATION	5.42321533359044E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999847206117677	WITHOUT_CLASSIFICATION	1.527938823236603E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999961065818415	WITHOUT_CLASSIFICATION	3.8934181584958506E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999961065818415	WITHOUT_CLASSIFICATION	3.8934181584958506E-5	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999932240469288	WITHOUT_CLASSIFICATION	6.775953071090053E-6	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999973741108329	WITHOUT_CLASSIFICATION	2.6258891671105733E-6	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999271940659744	WITHOUT_CLASSIFICATION	7.280593402561921E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999271940659744	WITHOUT_CLASSIFICATION	7.280593402561921E-5	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999951379859786	WITHOUT_CLASSIFICATION	4.862014021368377E-6	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999983644136548	WITHOUT_CLASSIFICATION	1.6355863451371583E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999961065818415	WITHOUT_CLASSIFICATION	3.8934181584958506E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999271940659744	WITHOUT_CLASSIFICATION	7.280593402561921E-5	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999977142853984	WITHOUT_CLASSIFICATION	2.2857146015847563E-6	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999900299735162	WITHOUT_CLASSIFICATION	9.970026483901458E-6	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9997369045198948	WITHOUT_CLASSIFICATION	2.630954801051673E-4	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.999999891628589	WITHOUT_CLASSIFICATION	1.0837141086588708E-7	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.999977107439202	WITHOUT_CLASSIFICATION	2.289256079796829E-5	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999998104048083	WITHOUT_CLASSIFICATION	1.8959519163656808E-7	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9999999653878867	WITHOUT_CLASSIFICATION	3.461211333313196E-8	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999999895519658	WITHOUT_CLASSIFICATION	1.0448034308097977E-8	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999989146069701	WITHOUT_CLASSIFICATION	1.0853930298871728E-6	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999998263874774	WITHOUT_CLASSIFICATION	1.7361252262262196E-7	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999997663850546	WITHOUT_CLASSIFICATION	2.3361494547117685E-7	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999990814457078	WITHOUT_CLASSIFICATION	9.185542921848291E-7	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999998723358035	WITHOUT_CLASSIFICATION	1.276641965272861E-7	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999999103915297	WITHOUT_CLASSIFICATION	8.960847038070662E-8	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999987647632107	WITHOUT_CLASSIFICATION	1.2352367891967753E-6	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999948788535422	WITHOUT_CLASSIFICATION	5.121146457835203E-6	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999980714944111	WITHOUT_CLASSIFICATION	1.9285055889154103E-6	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9936124599049796	WITHOUT_CLASSIFICATION	0.006387540095020354	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.999995525527969	WITHOUT_CLASSIFICATION	4.474472030942814E-6	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9999923365883168	WITHOUT_CLASSIFICATION	7.663411683297001E-6	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999985855116041	WITHOUT_CLASSIFICATION	1.414488395914876E-6	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.999992220384285	WITHOUT_CLASSIFICATION	7.779615714930892E-6	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999955648345893	WITHOUT_CLASSIFICATION	4.43516541069645E-6	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.999992279269807	WITHOUT_CLASSIFICATION	7.720730192945568E-6	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999990486291263	WITHOUT_CLASSIFICATION	9.513708737404108E-7	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999992893969964	WITHOUT_CLASSIFICATION	7.106030035990372E-7	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999990144296875	WITHOUT_CLASSIFICATION	9.855703124593327E-7	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.999997332075547	WITHOUT_CLASSIFICATION	2.667924452979252E-6	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999991893126121	WITHOUT_CLASSIFICATION	8.106873879096896E-7	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999514877760041	WITHOUT_CLASSIFICATION	4.851222399592947E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9997369045198948	WITHOUT_CLASSIFICATION	2.630954801051673E-4	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999996312809185	WITHOUT_CLASSIFICATION	3.6871908140087516E-7	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999987647632107	WITHOUT_CLASSIFICATION	1.2352367891967753E-6	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9999998696796765	WITHOUT_CLASSIFICATION	1.3032032358809574E-7	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.999992279269807	WITHOUT_CLASSIFICATION	7.720730192945568E-6	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999986695529103	WITHOUT_CLASSIFICATION	1.3304470896722691E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999993656349011	WITHOUT_CLASSIFICATION	6.343650988669552E-7	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9999853070218416	WITHOUT_CLASSIFICATION	1.4692978158387881E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999460997898854	WITHOUT_CLASSIFICATION	5.390021011473202E-5	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9999460997898854	WITHOUT_CLASSIFICATION	5.390021011473202E-5	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999849140969462	WITHOUT_CLASSIFICATION	1.5085903053722128E-5	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999999364240784	WITHOUT_CLASSIFICATION	6.357592160557448E-8	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999999965897319	WITHOUT_CLASSIFICATION	3.4102680369498145E-9	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999999657169476	WITHOUT_CLASSIFICATION	3.428305237277672E-8	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999991775754921	WITHOUT_CLASSIFICATION	8.224245079276746E-7	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9999997183810413	WITHOUT_CLASSIFICATION	2.8161895874797555E-7	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999991884059645	WITHOUT_CLASSIFICATION	8.115940356625575E-7	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.999999997836439	WITHOUT_CLASSIFICATION	2.163561011038398E-9	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999999417050834	WITHOUT_CLASSIFICATION	5.829491658252489E-8	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9999985346864102	WITHOUT_CLASSIFICATION	1.465313589811615E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999998067318412	WITHOUT_CLASSIFICATION	1.9326815884349097E-7	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9999481393913618	WITHOUT_CLASSIFICATION	5.186060863814592E-5	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9999976117570356	WITHOUT_CLASSIFICATION	2.38824296430817E-6	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.999999451362375	WITHOUT_CLASSIFICATION	5.486376249843087E-7	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9999998009079023	WITHOUT_CLASSIFICATION	1.9909209762455916E-7	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9999975854547336	WITHOUT_CLASSIFICATION	2.4145452663548327E-6	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999998132622876	WITHOUT_CLASSIFICATION	1.867377123664881E-7	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999946150798408	WITHOUT_CLASSIFICATION	5.3849201592753745E-6	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999998741492281	WITHOUT_CLASSIFICATION	1.2585077190694144E-7	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999988296270359	WITHOUT_CLASSIFICATION	1.1703729640549333E-6	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999988046005027	WITHOUT_CLASSIFICATION	1.1953994973226128E-6	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999996957818764	WITHOUT_CLASSIFICATION	3.0421812359942497E-7	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9999954594608245	WITHOUT_CLASSIFICATION	4.540539175580632E-6	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999998128538338	WITHOUT_CLASSIFICATION	1.8714616626463297E-7	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999998438266707	WITHOUT_CLASSIFICATION	1.5617332930584304E-7	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999999744128993	WITHOUT_CLASSIFICATION	2.558710069902238E-8	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9999999399984945	WITHOUT_CLASSIFICATION	6.00015055803499E-8	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.999999890206463	WITHOUT_CLASSIFICATION	1.0979353698389105E-7	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999995796619858	WITHOUT_CLASSIFICATION	4.203380140788716E-7	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999987526813571	WITHOUT_CLASSIFICATION	1.247318642910033E-6	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999999873957199	WITHOUT_CLASSIFICATION	1.2604280041920547E-8	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999983187660759	WITHOUT_CLASSIFICATION	1.6812339241568651E-6	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999987397561795	WITHOUT_CLASSIFICATION	1.2602438204651174E-6	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999900148069387	WITHOUT_CLASSIFICATION	9.985193061238644E-6	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9999931685559211	WITHOUT_CLASSIFICATION	6.831444078862142E-6	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999996843772717	WITHOUT_CLASSIFICATION	3.156227282873425E-7	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9999936952162485	WITHOUT_CLASSIFICATION	6.304783751604741E-6	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999973819778313	WITHOUT_CLASSIFICATION	2.6180221687732324E-6	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999949645207457	WITHOUT_CLASSIFICATION	5.035479254387346E-6	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9999573236869681	WITHOUT_CLASSIFICATION	4.267631303185233E-5	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999995211448964	WITHOUT_CLASSIFICATION	4.788551035827097E-7	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999976165414214	WITHOUT_CLASSIFICATION	2.383458578675572E-6	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999999928493237	WITHOUT_CLASSIFICATION	7.1506762333531995E-9	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9999971524179498	WITHOUT_CLASSIFICATION	2.8475820501859233E-6	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9998246159446378	WITHOUT_CLASSIFICATION	1.7538405536220554E-4	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999969572496621	WITHOUT_CLASSIFICATION	3.0427503380125886E-6	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999834208001026	WITHOUT_CLASSIFICATION	1.657919989729731E-5	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999955831042864	WITHOUT_CLASSIFICATION	4.416895713642047E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999945767846664	WITHOUT_CLASSIFICATION	5.42321533359044E-6	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999963417929116	WITHOUT_CLASSIFICATION	3.6582070884943084E-6	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999994014045548	WITHOUT_CLASSIFICATION	5.985954451292009E-7	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9999828860451999	WITHOUT_CLASSIFICATION	1.7113954800166262E-5	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999897431208014	WITHOUT_CLASSIFICATION	1.025687919873099E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999999616323113	WITHOUT_CLASSIFICATION	3.8367688668297544E-8	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999998192475302	WITHOUT_CLASSIFICATION	1.8075246970732787E-7	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999999637821196	WITHOUT_CLASSIFICATION	3.621788031967129E-8	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999999001297479	WITHOUT_CLASSIFICATION	9.987025205887346E-8	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999997075881096	WITHOUT_CLASSIFICATION	2.92411890430822E-7	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999971620072394	WITHOUT_CLASSIFICATION	2.837992760574494E-6	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999997673204986	WITHOUT_CLASSIFICATION	2.3267950150997753E-7	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999999248688145	WITHOUT_CLASSIFICATION	7.513118553388764E-8	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9999943190854196	WITHOUT_CLASSIFICATION	5.680914580437758E-6	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999761677764845	WITHOUT_CLASSIFICATION	2.3832223515559585E-5	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999975286158634	WITHOUT_CLASSIFICATION	2.471384136628603E-6	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.999996991769123	WITHOUT_CLASSIFICATION	3.008230876925336E-6	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999998080189577	WITHOUT_CLASSIFICATION	1.9198104230214396E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999982891410684	WITHOUT_CLASSIFICATION	1.710858931621667E-6	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999996505641691	WITHOUT_CLASSIFICATION	3.4943583093164127E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999777175921614	WITHOUT_CLASSIFICATION	2.2282407838627536E-5	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9999998869953288	WITHOUT_CLASSIFICATION	1.1300467118922361E-7	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9999973613458709	WITHOUT_CLASSIFICATION	2.6386541291116345E-6	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999988442099481	WITHOUT_CLASSIFICATION	1.1557900518775935E-6	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9999999474705545	WITHOUT_CLASSIFICATION	5.252944542473628E-8	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999997248900017	WITHOUT_CLASSIFICATION	2.7510999839653585E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999922652776883	WITHOUT_CLASSIFICATION	7.734722311675128E-6	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999935141998452	WITHOUT_CLASSIFICATION	6.485800154858022E-6	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9999960546053493	WITHOUT_CLASSIFICATION	3.945394650614242E-6	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999998860300067	WITHOUT_CLASSIFICATION	1.1396999333126882E-7	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.99999769701458	WITHOUT_CLASSIFICATION	2.3029854200720667E-6	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999951947584106	WITHOUT_CLASSIFICATION	4.8052415893937045E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999945767846664	WITHOUT_CLASSIFICATION	5.42321533359044E-6	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9999847206117677	WITHOUT_CLASSIFICATION	1.527938823236603E-5	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999946150798408	WITHOUT_CLASSIFICATION	5.3849201592753745E-6	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999862470659	WITHOUT_CLASSIFICATION	1.3752934070381861E-8	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999963417929116	WITHOUT_CLASSIFICATION	3.6582070884943084E-6	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999986543397683	WITHOUT_CLASSIFICATION	1.3456602317165049E-6	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999998487880026	WITHOUT_CLASSIFICATION	1.512119973243135E-7	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9999978399228788	WITHOUT_CLASSIFICATION	2.1600771212628273E-6	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9999999082277861	WITHOUT_CLASSIFICATION	9.177221388399257E-8	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.999999691125193	WITHOUT_CLASSIFICATION	3.088748069960781E-7	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999994978271654	WITHOUT_CLASSIFICATION	5.021728345962324E-7	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999999043143634	WITHOUT_CLASSIFICATION	9.568563651807178E-8	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999998641232205	WITHOUT_CLASSIFICATION	1.358767794628221E-7	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999999669437764	WITHOUT_CLASSIFICATION	3.3056223661043375E-8	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999997113228055	WITHOUT_CLASSIFICATION	2.8867719450492523E-7	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9999904827485299	WITHOUT_CLASSIFICATION	9.517251470214071E-6	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999973220270851	WITHOUT_CLASSIFICATION	2.6779729149491362E-6	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.9996087444998261	WITHOUT_CLASSIFICATION	3.9125550017392297E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999949152040242	WITHOUT_CLASSIFICATION	5.084795975827777E-6	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9999969230313671	WITHOUT_CLASSIFICATION	3.0769686328443013E-6	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999852255355776	WITHOUT_CLASSIFICATION	1.4774464422406229E-5	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9999762252602263	WITHOUT_CLASSIFICATION	2.377473977369692E-5	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.99999295182935	WITHOUT_CLASSIFICATION	7.048170650042227E-6	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9994479416915386	WITHOUT_CLASSIFICATION	5.520583084613181E-4	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9995100818798235	WITHOUT_CLASSIFICATION	4.899181201765433E-4	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9999374669935964	WITHOUT_CLASSIFICATION	6.253300640350024E-5	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9999746000384858	WITHOUT_CLASSIFICATION	2.539996151411102E-5	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999824574992682	WITHOUT_CLASSIFICATION	1.7542500731898395E-5	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.999998462478059	WITHOUT_CLASSIFICATION	1.537521941023562E-6	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999997800580427	WITHOUT_CLASSIFICATION	2.1994195722637032E-7	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999991209803565	WITHOUT_CLASSIFICATION	8.79019643548063E-7	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999090897615617	WITHOUT_CLASSIFICATION	9.091023843837038E-5	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999963263229791	WITHOUT_CLASSIFICATION	3.673677020879884E-6	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999946523255102	WITHOUT_CLASSIFICATION	5.347674489857284E-6	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9999983408085727	WITHOUT_CLASSIFICATION	1.6591914273334013E-6	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999518033104	WITHOUT_CLASSIFICATION	4.819668954255695E-8	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999945767846664	WITHOUT_CLASSIFICATION	5.42321533359044E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999971620072394	WITHOUT_CLASSIFICATION	2.837992760574494E-6	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999997673204986	WITHOUT_CLASSIFICATION	2.3267950150997753E-7	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.999996991769123	WITHOUT_CLASSIFICATION	3.008230876925336E-6	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9999998080189577	WITHOUT_CLASSIFICATION	1.9198104230214396E-7	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9999982891410684	WITHOUT_CLASSIFICATION	1.710858931621667E-6	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999996505641691	WITHOUT_CLASSIFICATION	3.4943583093164127E-7	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9999777175921614	WITHOUT_CLASSIFICATION	2.2282407838627536E-5	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999649147463657	WITHOUT_CLASSIFICATION	3.508525363427449E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9999988442099481	WITHOUT_CLASSIFICATION	1.1557900518775935E-6	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999999624512305	WITHOUT_CLASSIFICATION	3.754876955753012E-8	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9977324247286989	WITHOUT_CLASSIFICATION	0.0022675752713011105	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999149000433487	WITHOUT_CLASSIFICATION	8.509995665129919E-5	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999998546447169	WITHOUT_CLASSIFICATION	1.453552831835864E-7	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999783373266	WITHOUT_CLASSIFICATION	2.1662673421138867E-8	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.999999811481564	WITHOUT_CLASSIFICATION	1.885184360543039E-7	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.999999881026779	WITHOUT_CLASSIFICATION	1.1897322113366307E-7	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9999958275243124	WITHOUT_CLASSIFICATION	4.172475687596896E-6	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.999995727685478	WITHOUT_CLASSIFICATION	4.272314522087578E-6	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9999991435893824	WITHOUT_CLASSIFICATION	8.564106177246524E-7	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9999963510652219	WITHOUT_CLASSIFICATION	3.6489347780624654E-6	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9999999314635327	WITHOUT_CLASSIFICATION	6.853646720567357E-8	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9999994989847059	WITHOUT_CLASSIFICATION	5.010152942480351E-7	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999512124044	WITHOUT_CLASSIFICATION	4.8787595605035574E-8	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999955189989226	WITHOUT_CLASSIFICATION	4.481001077416147E-6	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999955189989226	WITHOUT_CLASSIFICATION	4.481001077416147E-6	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999987441054262	WITHOUT_CLASSIFICATION	1.2558945738629278E-6	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999993258591552	WITHOUT_CLASSIFICATION	6.741408448056136E-7	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9999993258591552	WITHOUT_CLASSIFICATION	6.741408448056136E-7	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999971867056857	WITHOUT_CLASSIFICATION	2.8132943141568054E-6	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999954354510061	WITHOUT_CLASSIFICATION	4.564548993862888E-6	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999999777593261	WITHOUT_CLASSIFICATION	2.2240673878103498E-8	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999999518033104	WITHOUT_CLASSIFICATION	4.819668954255695E-8	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999974478744852	WITHOUT_CLASSIFICATION	2.5521255148067034E-5	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999888353192793	WITHOUT_CLASSIFICATION	1.1164680720688546E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999995523237004	WITHOUT_CLASSIFICATION	4.4767629956881446E-7	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999999972698378	WITHOUT_CLASSIFICATION	2.730162199161768E-9	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9991079813569884	WITHOUT_CLASSIFICATION	8.920186430115699E-4	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.999996139484223	WITHOUT_CLASSIFICATION	3.860515777031185E-6	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999994504946833	WITHOUT_CLASSIFICATION	5.495053166755065E-7	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.999989695445539	WITHOUT_CLASSIFICATION	1.0304554461116243E-5	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.999998888796438	WITHOUT_CLASSIFICATION	1.1112035620688033E-6	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9999941862120554	WITHOUT_CLASSIFICATION	5.813787944734713E-6	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9981111447876979	WITHOUT_CLASSIFICATION	0.001888855212302183	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999997833414563	WITHOUT_CLASSIFICATION	2.1665854367683697E-7	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9999855096194934	WITHOUT_CLASSIFICATION	1.4490380506623253E-5	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.999995691225486	WITHOUT_CLASSIFICATION	4.308774513983022E-6	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.999999790663657	WITHOUT_CLASSIFICATION	2.0933634314690044E-7	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999998254093119	WITHOUT_CLASSIFICATION	1.745906881279549E-7	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9999998430282931	WITHOUT_CLASSIFICATION	1.5697170684882593E-7	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9997020186486015	WITHOUT_CLASSIFICATION	2.979813513984015E-4	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9935434254814604	WITHOUT_CLASSIFICATION	0.006456574518539621	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.999995623750925	WITHOUT_CLASSIFICATION	4.376249075056476E-6	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999938989289573	WITHOUT_CLASSIFICATION	6.1010710426753314E-6	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999995673314065	WITHOUT_CLASSIFICATION	4.326685935343548E-7	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999979363085643	WITHOUT_CLASSIFICATION	2.0636914357529375E-6	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999999008466387	WITHOUT_CLASSIFICATION	9.915336131584376E-8	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9999989559499206	WITHOUT_CLASSIFICATION	1.0440500794213226E-6	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.999999886748884	WITHOUT_CLASSIFICATION	1.1325111607377834E-7	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999985198742881	WITHOUT_CLASSIFICATION	1.4801257118487213E-6	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9987409709506144	WITHOUT_CLASSIFICATION	0.0012590290493855105	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999969726329709	WITHOUT_CLASSIFICATION	3.027367029130243E-6	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999999887715529	WITHOUT_CLASSIFICATION	1.1228447124858347E-8	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999999937260767	WITHOUT_CLASSIFICATION	6.273923283166052E-9	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999999810484584	WITHOUT_CLASSIFICATION	1.8951541597227373E-8	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.999999824937704	WITHOUT_CLASSIFICATION	1.7506229584434478E-7	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999969110232912	WITHOUT_CLASSIFICATION	3.088976708702801E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993845442403	WITHOUT_CLASSIFICATION	6.154557596515343E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992951874009	WITHOUT_CLASSIFICATION	7.048125990550169E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999965776726616	WITHOUT_CLASSIFICATION	3.4223273385172382E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.999999824937704	WITHOUT_CLASSIFICATION	1.7506229584434478E-7	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999567281158065	WITHOUT_CLASSIFICATION	4.3271884193508307E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999999554240844	WITHOUT_CLASSIFICATION	4.4575915594659415E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999999554240844	WITHOUT_CLASSIFICATION	4.4575915594659415E-7	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999999554240844	WITHOUT_CLASSIFICATION	4.4575915594659415E-7	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999789996513	WITHOUT_CLASSIFICATION	2.1000348713565222E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999789996513	WITHOUT_CLASSIFICATION	2.1000348713565222E-8	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999999789996513	WITHOUT_CLASSIFICATION	2.1000348713565222E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999573789853	WITHOUT_CLASSIFICATION	4.262101468577964E-8	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999573789853	WITHOUT_CLASSIFICATION	4.262101468577964E-8	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999998441219892	WITHOUT_CLASSIFICATION	1.558780108218971E-7	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999998195081542	WITHOUT_CLASSIFICATION	1.804918457703058E-7	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999998910708217	WITHOUT_CLASSIFICATION	1.0892917835714652E-7	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999913175835864	WITHOUT_CLASSIFICATION	8.682416413549673E-6	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9999909524873841	WITHOUT_CLASSIFICATION	9.047512615834404E-6	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999988720597276	WITHOUT_CLASSIFICATION	1.1279402723337039E-6	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999968104898305	WITHOUT_CLASSIFICATION	3.189510169446888E-6	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999997375758343	WITHOUT_CLASSIFICATION	2.624241657395008E-7	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999966342926778	WITHOUT_CLASSIFICATION	3.3657073222108997E-6	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9999970907734578	WITHOUT_CLASSIFICATION	2.909226542255958E-6	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9999973215186222	WITHOUT_CLASSIFICATION	2.678481377814531E-6	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999998991247392	WITHOUT_CLASSIFICATION	1.0087526089978023E-7	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999999486098469	WITHOUT_CLASSIFICATION	5.139015306338446E-8	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999712326879778	WITHOUT_CLASSIFICATION	2.8767312022153026E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999834673914584	WITHOUT_CLASSIFICATION	1.6532608541625382E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9935816502223865	WITHOUT_CLASSIFICATION	0.006418349777613549	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999998986957068	WITHOUT_CLASSIFICATION	1.0130429321336975E-7	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.999982526006688	WITHOUT_CLASSIFICATION	1.747399331197635E-5	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.999999022137022	WITHOUT_CLASSIFICATION	9.778629780045752E-7	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9999988787085536	WITHOUT_CLASSIFICATION	1.121291446320739E-6	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9999455723142598	WITHOUT_CLASSIFICATION	5.442768574021704E-5	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9999999182823348	WITHOUT_CLASSIFICATION	8.17176652437983E-8	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9995050857557056	WITHOUT_CLASSIFICATION	4.949142442943461E-4	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.999994803459538	WITHOUT_CLASSIFICATION	5.1965404620246696E-6	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999998602842135	WITHOUT_CLASSIFICATION	1.3971578654198128E-7	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9999625419515394	WITHOUT_CLASSIFICATION	3.745804846046188E-5	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999984708424383	WITHOUT_CLASSIFICATION	1.5291575616585878E-6	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999836793051367	WITHOUT_CLASSIFICATION	1.6320694863370703E-5	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999963097854973	WITHOUT_CLASSIFICATION	3.69021450270122E-6	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999889941929407	WITHOUT_CLASSIFICATION	1.1005807059173123E-5	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9999898863430018	WITHOUT_CLASSIFICATION	1.0113656998258968E-5	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999997439902258	WITHOUT_CLASSIFICATION	2.5600977414274115E-7	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999642438727355	WITHOUT_CLASSIFICATION	3.575612726438568E-5	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9999960823651325	WITHOUT_CLASSIFICATION	3.917634867537121E-6	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9999975290081976	WITHOUT_CLASSIFICATION	2.4709918023787002E-6	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.7290387357222109	DEFECT	0.2709612642777892	WITHOUT_CLASSIFICATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999889941929407	WITHOUT_CLASSIFICATION	1.1005807059173123E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999983654216593	WITHOUT_CLASSIFICATION	1.6345783406950434E-6	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999999165854755	WITHOUT_CLASSIFICATION	8.341452455924154E-8	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999983524237764	WITHOUT_CLASSIFICATION	1.6475762235516515E-6	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999997509657165	WITHOUT_CLASSIFICATION	2.4903428354754473E-7	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999996110318586	WITHOUT_CLASSIFICATION	3.889681414103562E-7	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999991231525839	WITHOUT_CLASSIFICATION	8.76847416032289E-7	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999996636552047	WITHOUT_CLASSIFICATION	3.3634479531004205E-7	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9999964694961591	WITHOUT_CLASSIFICATION	3.530503841030311E-6	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9998978474119584	WITHOUT_CLASSIFICATION	1.0215258804150422E-4	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999998696404417	WITHOUT_CLASSIFICATION	1.3035955827136423E-7	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9999908396464274	WITHOUT_CLASSIFICATION	9.160353572503925E-6	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9999994026614032	WITHOUT_CLASSIFICATION	5.973385969194445E-7	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.99999460754869	WITHOUT_CLASSIFICATION	5.392451310006621E-6	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9999983654216593	WITHOUT_CLASSIFICATION	1.6345783406950434E-6	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9999976369110275	WITHOUT_CLASSIFICATION	2.3630889724692928E-6	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9999964304125043	WITHOUT_CLASSIFICATION	3.569587495609484E-6	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999994940063711	WITHOUT_CLASSIFICATION	5.059936288539847E-7	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9953835660544967	WITHOUT_CLASSIFICATION	0.004616433945503356	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999985339923544	WITHOUT_CLASSIFICATION	1.4660076455819926E-6	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.999952533247457	WITHOUT_CLASSIFICATION	4.746675254308443E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999979930966364	WITHOUT_CLASSIFICATION	2.0069033635781654E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999989458648731	WITHOUT_CLASSIFICATION	1.0541351268129961E-6	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999999202419867	WITHOUT_CLASSIFICATION	7.975801327669976E-8	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999984947981567	WITHOUT_CLASSIFICATION	1.5052018433203424E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999995947301881	WITHOUT_CLASSIFICATION	4.0526981193592194E-7	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999994337659551	WITHOUT_CLASSIFICATION	5.662340448785821E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9999999565268282	WITHOUT_CLASSIFICATION	4.3473171725197905E-8	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.999999640474352	WITHOUT_CLASSIFICATION	3.595256480920251E-7	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9999993638102721	WITHOUT_CLASSIFICATION	6.361897279139849E-7	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999998617770212	WITHOUT_CLASSIFICATION	1.382229788860803E-7	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9999992260169558	WITHOUT_CLASSIFICATION	7.739830443173024E-7	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.999998350232766	WITHOUT_CLASSIFICATION	1.649767234048118E-6	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9998780320155722	WITHOUT_CLASSIFICATION	1.2196798442782933E-4	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999998040222765	WITHOUT_CLASSIFICATION	1.9597772357556642E-7	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9999992682478362	WITHOUT_CLASSIFICATION	7.317521637690216E-7	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.999950037773977	WITHOUT_CLASSIFICATION	4.996222602296962E-5	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999992403407585	WITHOUT_CLASSIFICATION	7.596592414152926E-7	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999999205508581	WITHOUT_CLASSIFICATION	7.944914198087005E-8	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9998731249240645	WITHOUT_CLASSIFICATION	1.26875075935512E-4	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9999998056585945	WITHOUT_CLASSIFICATION	1.9434140550707743E-7	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9996933483040913	WITHOUT_CLASSIFICATION	3.066516959086514E-4	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9999984929253432	WITHOUT_CLASSIFICATION	1.507074656838597E-6	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9999992054046503	WITHOUT_CLASSIFICATION	7.945953497704573E-7	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999999637347488	WITHOUT_CLASSIFICATION	3.6265251290683216E-8	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999989733294465	WITHOUT_CLASSIFICATION	1.0266705534256057E-6	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999976934375757	WITHOUT_CLASSIFICATION	2.306562424218652E-6	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.999999982700074	WITHOUT_CLASSIFICATION	1.7299926146729945E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999992547888895	WITHOUT_CLASSIFICATION	7.452111104341752E-7	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999989456467561	WITHOUT_CLASSIFICATION	1.054353243946502E-6	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999998343601467	WITHOUT_CLASSIFICATION	1.6563985334317798E-7	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999989733294465	WITHOUT_CLASSIFICATION	1.0266705534256057E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9999984049563713	WITHOUT_CLASSIFICATION	1.5950436286774399E-6	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9999283191844843	WITHOUT_CLASSIFICATION	7.168081551566024E-5	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9999753764764453	WITHOUT_CLASSIFICATION	2.4623523554724783E-5	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999953603541599	WITHOUT_CLASSIFICATION	4.63964583998816E-6	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999927395155934	WITHOUT_CLASSIFICATION	7.2604844065108555E-6	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999998939061768	WITHOUT_CLASSIFICATION	1.060938231193085E-7	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.999997593252721	WITHOUT_CLASSIFICATION	2.4067472790988244E-6	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999933799938571	WITHOUT_CLASSIFICATION	6.620006143000822E-6	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999985617341939	WITHOUT_CLASSIFICATION	1.4382658060988946E-6	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9999994665548426	WITHOUT_CLASSIFICATION	5.334451574678479E-7	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9999971567483367	WITHOUT_CLASSIFICATION	2.843251663353952E-6	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9999945957662225	WITHOUT_CLASSIFICATION	5.404233777502377E-6	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.999999874132596	WITHOUT_CLASSIFICATION	1.258674040455839E-7	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9999988916010675	WITHOUT_CLASSIFICATION	1.1083989325524273E-6	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999626744684008	WITHOUT_CLASSIFICATION	3.7325531599167395E-5	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.999999892144263	WITHOUT_CLASSIFICATION	1.0785573693065457E-7	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9999992118942039	WITHOUT_CLASSIFICATION	7.881057961105878E-7	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9999987836157682	WITHOUT_CLASSIFICATION	1.2163842317936984E-6	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.999961057462241	WITHOUT_CLASSIFICATION	3.894253775914654E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999983657051837	WITHOUT_CLASSIFICATION	1.6342948163418218E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999999486098469	WITHOUT_CLASSIFICATION	5.139015306338446E-8	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999999486098469	WITHOUT_CLASSIFICATION	5.139015306338446E-8	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999790428781096	WITHOUT_CLASSIFICATION	2.0957121890424216E-5	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999712326879778	WITHOUT_CLASSIFICATION	2.8767312022153026E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999573879628826	WITHOUT_CLASSIFICATION	4.2612037117354896E-5	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.999999443915269	WITHOUT_CLASSIFICATION	5.560847310360565E-7	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9999833039402831	WITHOUT_CLASSIFICATION	1.6696059716913537E-5	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999985473635585	WITHOUT_CLASSIFICATION	1.4526364414320224E-6	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.9726133906970389	WITHOUT_CLASSIFICATION	0.027386609302961013	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.999999933448483	WITHOUT_CLASSIFICATION	6.655151697021861E-8	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999999295679258	WITHOUT_CLASSIFICATION	7.043207409091244E-8	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9999461688260993	WITHOUT_CLASSIFICATION	5.3831173900644935E-5	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9999982156732283	WITHOUT_CLASSIFICATION	1.784326771598208E-6	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9999035272303601	WITHOUT_CLASSIFICATION	9.647276963979593E-5	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999999886567507	WITHOUT_CLASSIFICATION	1.1343249221525352E-8	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999999716627493	WITHOUT_CLASSIFICATION	2.8337250702224087E-8	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999695740032777	WITHOUT_CLASSIFICATION	3.042599672220713E-5	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999998905101718	WITHOUT_CLASSIFICATION	1.094898281653697E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9999995285515598	WITHOUT_CLASSIFICATION	4.7144844022528266E-7	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.999999978741024	WITHOUT_CLASSIFICATION	2.125897609475932E-8	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9999998684210153	WITHOUT_CLASSIFICATION	1.3157898464896645E-7	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999991102094326	WITHOUT_CLASSIFICATION	8.897905674996083E-7	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9999943426656736	WITHOUT_CLASSIFICATION	5.6573343264492E-6	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9999927382048	WITHOUT_CLASSIFICATION	7.261795200053358E-6	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999409751270697	WITHOUT_CLASSIFICATION	5.902487293041783E-5	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9999835911543605	WITHOUT_CLASSIFICATION	1.6408845639451665E-5	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.999999955209152	WITHOUT_CLASSIFICATION	4.479084801794786E-8	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9999905370334793	WITHOUT_CLASSIFICATION	9.462966520806076E-6	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999984418969874	WITHOUT_CLASSIFICATION	1.5581030125995336E-6	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999999932403344	WITHOUT_CLASSIFICATION	6.759665692235016E-9	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999987421799709	WITHOUT_CLASSIFICATION	1.257820029135485E-6	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9999146897423077	WITHOUT_CLASSIFICATION	8.531025769222317E-5	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999415855900546	WITHOUT_CLASSIFICATION	5.841440994533118E-5	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9999960865090706	WITHOUT_CLASSIFICATION	3.913490929398241E-6	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999878090921462	WITHOUT_CLASSIFICATION	1.2190907853695913E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9999992408264022	WITHOUT_CLASSIFICATION	7.591735977381898E-7	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999975346556198	WITHOUT_CLASSIFICATION	2.4653443801426806E-6	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999957766210186	WITHOUT_CLASSIFICATION	4.2233789814219105E-6	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9999994871546816	WITHOUT_CLASSIFICATION	5.128453184336972E-7	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9999992371270955	WITHOUT_CLASSIFICATION	7.62872904431251E-7	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.999999702575539	WITHOUT_CLASSIFICATION	2.9742446091535955E-7	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9999704820351882	WITHOUT_CLASSIFICATION	2.951796481173668E-5	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9942870430713474	WITHOUT_CLASSIFICATION	0.005712956928652527	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9999856260875354	WITHOUT_CLASSIFICATION	1.4373912464714517E-5	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999992768262338	WITHOUT_CLASSIFICATION	7.231737662388958E-7	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9999859494778159	WITHOUT_CLASSIFICATION	1.4050522184163917E-5	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9999725916857115	WITHOUT_CLASSIFICATION	2.740831428851992E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999995208040279	WITHOUT_CLASSIFICATION	4.791959721137255E-7	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999911602365038	WITHOUT_CLASSIFICATION	8.83976349627423E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999990943248841	WITHOUT_CLASSIFICATION	9.056751159052782E-7	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.999997498116832	WITHOUT_CLASSIFICATION	2.5018831679292906E-6	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.999969669407215	WITHOUT_CLASSIFICATION	3.0330592784948057E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999983657051837	WITHOUT_CLASSIFICATION	1.6342948163418218E-6	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999968104898305	WITHOUT_CLASSIFICATION	3.189510169446888E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9990213446526293	WITHOUT_CLASSIFICATION	9.786553473707237E-4	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999927122706534	WITHOUT_CLASSIFICATION	7.287729346632418E-6	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999989667715	WITHOUT_CLASSIFICATION	1.033228549646965E-9	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9999330102653469	WITHOUT_CLASSIFICATION	6.698973465321442E-5	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999874684131798	WITHOUT_CLASSIFICATION	1.2531586820220286E-5	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999991172426815	WITHOUT_CLASSIFICATION	8.82757318376005E-7	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9999999231240977	WITHOUT_CLASSIFICATION	7.687590226355266E-8	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.999831815520722	WITHOUT_CLASSIFICATION	1.6818447927808775E-4	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999987513687212	WITHOUT_CLASSIFICATION	1.2486312787845043E-6	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9999577155429857	WITHOUT_CLASSIFICATION	4.2284457014262734E-5	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9999921764965972	WITHOUT_CLASSIFICATION	7.82350340273863E-6	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9999996529532041	WITHOUT_CLASSIFICATION	3.47046795919007E-7	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999999949504786	WITHOUT_CLASSIFICATION	5.049521322572437E-9	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999989428797128	WITHOUT_CLASSIFICATION	1.0571202872218314E-6	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.999999899102945	WITHOUT_CLASSIFICATION	1.0089705516517278E-7	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999995605240761	WITHOUT_CLASSIFICATION	4.394759238518682E-7	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999995966140945	WITHOUT_CLASSIFICATION	4.033859055284474E-7	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999992540636714	WITHOUT_CLASSIFICATION	7.459363285862141E-7	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9999957628213073	WITHOUT_CLASSIFICATION	4.237178692648491E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999994552436191	WITHOUT_CLASSIFICATION	5.447563808880339E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999994552436191	WITHOUT_CLASSIFICATION	5.447563808880339E-7	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.999999492211231	WITHOUT_CLASSIFICATION	5.077887691294929E-7	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999993068847328	WITHOUT_CLASSIFICATION	6.931152671070892E-7	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999998454648527	WITHOUT_CLASSIFICATION	1.5453514732527903E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999737393625651	WITHOUT_CLASSIFICATION	2.626063743495103E-5	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999993313994127	WITHOUT_CLASSIFICATION	6.686005874380776E-7	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999991688603593	WITHOUT_CLASSIFICATION	8.311396406365147E-7	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999999875167537	WITHOUT_CLASSIFICATION	1.248324629324412E-8	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9999930493894126	WITHOUT_CLASSIFICATION	6.950610587391332E-6	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9999437464939794	WITHOUT_CLASSIFICATION	5.62535060205348E-5	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9999357630939218	WITHOUT_CLASSIFICATION	6.423690607818182E-5	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999971415486141	WITHOUT_CLASSIFICATION	2.8584513860270672E-6	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9999998564086521	WITHOUT_CLASSIFICATION	1.435913478323141E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999999875243578	WITHOUT_CLASSIFICATION	1.2475642257792168E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9999764222548303	WITHOUT_CLASSIFICATION	2.357774516963894E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998244305064788	WITHOUT_CLASSIFICATION	1.755694935211347E-4	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9999910814880935	WITHOUT_CLASSIFICATION	8.918511906593447E-6	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9998741337259582	WITHOUT_CLASSIFICATION	1.2586627404181081E-4	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9999998674215724	WITHOUT_CLASSIFICATION	1.3257842761184133E-7	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999999742676597	WITHOUT_CLASSIFICATION	2.5732340253290765E-8	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.999999963021436	WITHOUT_CLASSIFICATION	3.697856395809676E-8	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9998953194483439	WITHOUT_CLASSIFICATION	1.0468055165609642E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999990947652888	WITHOUT_CLASSIFICATION	9.052347111386022E-7	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999985533775877	WITHOUT_CLASSIFICATION	1.4466224123593292E-6	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9999059972147921	WITHOUT_CLASSIFICATION	9.40027852078191E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998244305064788	WITHOUT_CLASSIFICATION	1.755694935211347E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998244305064788	WITHOUT_CLASSIFICATION	1.755694935211347E-4	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9999386276172493	WITHOUT_CLASSIFICATION	6.137238275068127E-5	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9999471292809744	WITHOUT_CLASSIFICATION	5.2870719025558576E-5	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.999910962142716	WITHOUT_CLASSIFICATION	8.903785728405448E-5	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999999827592669	WITHOUT_CLASSIFICATION	1.7240733043993395E-8	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.999991888467711	WITHOUT_CLASSIFICATION	8.11153228889251E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999959510461589	WITHOUT_CLASSIFICATION	4.048953841052931E-6	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999982368518981	WITHOUT_CLASSIFICATION	1.76314810177363E-6	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.999992527184605	WITHOUT_CLASSIFICATION	7.472815394980445E-6	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.999999911127877	WITHOUT_CLASSIFICATION	8.887212294100057E-8	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9995607112324705	WITHOUT_CLASSIFICATION	4.3928876752945056E-4	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9999950062313597	WITHOUT_CLASSIFICATION	4.993768640258323E-6	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9999980768986234	WITHOUT_CLASSIFICATION	1.923101376576414E-6	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9999962440228632	WITHOUT_CLASSIFICATION	3.7559771367026708E-6	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999978696704526	WITHOUT_CLASSIFICATION	2.1303295473873455E-6	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9999974545342076	WITHOUT_CLASSIFICATION	2.545465792432167E-6	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999738825258994	WITHOUT_CLASSIFICATION	2.6117474100693387E-5	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9989733360384081	WITHOUT_CLASSIFICATION	0.0010266639615919117	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9999993996161157	WITHOUT_CLASSIFICATION	6.003838843160985E-7	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9989034862144626	WITHOUT_CLASSIFICATION	0.0010965137855373582	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.999999987623982	WITHOUT_CLASSIFICATION	1.2376018037495963E-8	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999995867455695	WITHOUT_CLASSIFICATION	4.132544305151274E-7	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999966087627717	WITHOUT_CLASSIFICATION	3.3912372282676927E-6	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999973736701037	WITHOUT_CLASSIFICATION	2.626329896440504E-6	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999427977735345	WITHOUT_CLASSIFICATION	5.7202226465674866E-5	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9999999775869345	WITHOUT_CLASSIFICATION	2.2413065573267863E-8	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999991656474846	WITHOUT_CLASSIFICATION	8.343525154458322E-7	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999997822381073	WITHOUT_CLASSIFICATION	2.1776189280028056E-7	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.999991524735755	WITHOUT_CLASSIFICATION	8.475264245001005E-6	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999998656218552	WITHOUT_CLASSIFICATION	1.3437814485284656E-7	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.999999892839898	WITHOUT_CLASSIFICATION	1.071601020156743E-7	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9999926623457532	WITHOUT_CLASSIFICATION	7.337654246768227E-6	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999959395920228	WITHOUT_CLASSIFICATION	4.060407977212124E-6	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9999947262955948	WITHOUT_CLASSIFICATION	5.273704405116351E-6	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999977152443256	WITHOUT_CLASSIFICATION	2.2847556744559198E-6	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999999127788614	WITHOUT_CLASSIFICATION	8.722113857405802E-8	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999992827594869	WITHOUT_CLASSIFICATION	7.172405131317155E-7	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9997707326958072	WITHOUT_CLASSIFICATION	2.2926730419280868E-4	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9999787319668438	WITHOUT_CLASSIFICATION	2.1268033156194923E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999235517838	WITHOUT_CLASSIFICATION	7.644821628896037E-8	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999972990794036	WITHOUT_CLASSIFICATION	2.7009205963209925E-6	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999999164732096	WITHOUT_CLASSIFICATION	8.352679038352209E-8	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.999997152504264	WITHOUT_CLASSIFICATION	2.847495735913624E-6	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9997875774676427	WITHOUT_CLASSIFICATION	2.124225323573873E-4	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999971292426378	WITHOUT_CLASSIFICATION	2.8707573622090586E-6	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999993727475407	WITHOUT_CLASSIFICATION	6.272524591899275E-7	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.999999939988327	WITHOUT_CLASSIFICATION	6.0011672963309E-8	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999991617903338	WITHOUT_CLASSIFICATION	8.382096662148907E-7	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999999453919844	WITHOUT_CLASSIFICATION	5.4608015610921034E-8	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999993145151387	WITHOUT_CLASSIFICATION	6.854848613090352E-7	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999999047882552	WITHOUT_CLASSIFICATION	9.521174490100728E-8	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999964220585729	WITHOUT_CLASSIFICATION	3.5779414272597207E-6	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9999583024836638	WITHOUT_CLASSIFICATION	4.1697516336280885E-5	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999998183908179	WITHOUT_CLASSIFICATION	1.8160918225251928E-7	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999994932449301	WITHOUT_CLASSIFICATION	5.0675506998921E-7	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999725701529982	WITHOUT_CLASSIFICATION	2.7429847001862552E-5	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9999970641135706	WITHOUT_CLASSIFICATION	2.9358864295409258E-6	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999945558474609	WITHOUT_CLASSIFICATION	5.444152539048985E-6	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999801789906941	WITHOUT_CLASSIFICATION	1.9821009305891224E-5	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999996567829456	WITHOUT_CLASSIFICATION	3.4321705434030113E-7	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9994519956715824	WITHOUT_CLASSIFICATION	5.480043284176933E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9999905743833366	WITHOUT_CLASSIFICATION	9.425616663286668E-6	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9999801485009657	WITHOUT_CLASSIFICATION	1.985149903434189E-5	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999999887337736	WITHOUT_CLASSIFICATION	1.1266226296544196E-8	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999999989897881	WITHOUT_CLASSIFICATION	1.0102119918696508E-9	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999544279580844	WITHOUT_CLASSIFICATION	4.5572041915588625E-5	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999924806190963	WITHOUT_CLASSIFICATION	7.51938090361061E-6	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999997654642905	WITHOUT_CLASSIFICATION	2.3453570957451313E-7	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999999583754168	WITHOUT_CLASSIFICATION	4.162458325018217E-8	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9999998764175232	WITHOUT_CLASSIFICATION	1.2358247680440345E-7	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999994020425549	WITHOUT_CLASSIFICATION	5.979574450964873E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999235517838	WITHOUT_CLASSIFICATION	7.644821628896037E-8	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999994615990397	WITHOUT_CLASSIFICATION	5.384009602511263E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999997495429331	WITHOUT_CLASSIFICATION	2.504570669284807E-7	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999997495429331	WITHOUT_CLASSIFICATION	2.504570669284807E-7	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999995159839914	WITHOUT_CLASSIFICATION	4.840160086781672E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999998456775291	WITHOUT_CLASSIFICATION	1.5432247091871534E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999998456775291	WITHOUT_CLASSIFICATION	1.5432247091871534E-7	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999901107409866	WITHOUT_CLASSIFICATION	9.889259013392607E-6	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999994386129888	WITHOUT_CLASSIFICATION	5.613870111640501E-7	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9999986111299521	WITHOUT_CLASSIFICATION	1.3888700478732666E-6	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999997442446454	WITHOUT_CLASSIFICATION	2.557553545742359E-7	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9999992720285475	WITHOUT_CLASSIFICATION	7.279714523335946E-7	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999994887582992	WITHOUT_CLASSIFICATION	5.11241700746721E-7	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999998569336355	WITHOUT_CLASSIFICATION	1.4306636455968548E-7	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999993457896272	WITHOUT_CLASSIFICATION	6.542103727991473E-7	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999993707894219	WITHOUT_CLASSIFICATION	6.292105780860166E-7	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9999780935912707	WITHOUT_CLASSIFICATION	2.1906408729315235E-5	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.999999769321812	WITHOUT_CLASSIFICATION	2.306781879802335E-7	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999997697165631	WITHOUT_CLASSIFICATION	2.3028343678517568E-7	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9999930974193693	WITHOUT_CLASSIFICATION	6.9025806307662675E-6	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9999867220924722	WITHOUT_CLASSIFICATION	1.3277907527723103E-5	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9999858586152967	WITHOUT_CLASSIFICATION	1.4141384703375896E-5	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.999999464207379	WITHOUT_CLASSIFICATION	5.357926210043113E-7	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999974899948469	WITHOUT_CLASSIFICATION	2.5100051531185737E-6	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9999965716315524	WITHOUT_CLASSIFICATION	3.4283684475293673E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999996600986186	WITHOUT_CLASSIFICATION	3.399013813389741E-7	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999998456775291	WITHOUT_CLASSIFICATION	1.5432247091871534E-7	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999901107409866	WITHOUT_CLASSIFICATION	9.889259013392607E-6	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.999999464207379	WITHOUT_CLASSIFICATION	5.357926210043113E-7	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9999920202471535	WITHOUT_CLASSIFICATION	7.97975284642465E-6	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999997620656333	WITHOUT_CLASSIFICATION	2.3793436663564E-7	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999999238055429	WITHOUT_CLASSIFICATION	7.619445707540195E-8	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.999994964339157	WITHOUT_CLASSIFICATION	5.035660842959824E-6	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999994344169869	WITHOUT_CLASSIFICATION	5.655830131110584E-7	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999999827677833	WITHOUT_CLASSIFICATION	1.7232216573380284E-8	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999996530712398	WITHOUT_CLASSIFICATION	3.46928760168523E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999936855947614	WITHOUT_CLASSIFICATION	6.314405238548106E-6	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9999900945374269	WITHOUT_CLASSIFICATION	9.905462573079725E-6	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.999993246238529	WITHOUT_CLASSIFICATION	6.75376147102138E-6	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.999987075625716	WITHOUT_CLASSIFICATION	1.29243742839896E-5	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9998778370568284	WITHOUT_CLASSIFICATION	1.2216294317163792E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999702708706295	WITHOUT_CLASSIFICATION	2.9729129370537086E-5	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.999999640544755	WITHOUT_CLASSIFICATION	3.594552449190458E-7	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9969752288140233	WITHOUT_CLASSIFICATION	0.003024771185976747	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9999671547012102	WITHOUT_CLASSIFICATION	3.284529878974777E-5	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.999999804865096	WITHOUT_CLASSIFICATION	1.9513490408663623E-7	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9999989041455979	WITHOUT_CLASSIFICATION	1.0958544020832264E-6	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999926257111054	WITHOUT_CLASSIFICATION	7.374288894588317E-6	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.999933879922918	WITHOUT_CLASSIFICATION	6.61200770819338E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999992027287625	WITHOUT_CLASSIFICATION	7.972712374243893E-7	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999996224292418	WITHOUT_CLASSIFICATION	3.7757075821202437E-7	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999996798737092	WITHOUT_CLASSIFICATION	3.20126290820872E-7	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999993403416632	WITHOUT_CLASSIFICATION	6.596583367475883E-7	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999976741426427	WITHOUT_CLASSIFICATION	2.3258573572276408E-6	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9999995561646463	WITHOUT_CLASSIFICATION	4.438353536958478E-7	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9999972608984498	WITHOUT_CLASSIFICATION	2.73910155021356E-6	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999913514570993	WITHOUT_CLASSIFICATION	8.648542900829353E-6	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999997785616287	WITHOUT_CLASSIFICATION	2.2143837136308345E-7	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999065995791835	WITHOUT_CLASSIFICATION	9.340042081660494E-5	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999996820714713	WITHOUT_CLASSIFICATION	3.1792852870013117E-7	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999868229609	WITHOUT_CLASSIFICATION	1.3177039204440592E-8	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9999984482908497	WITHOUT_CLASSIFICATION	1.5517091501981746E-6	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999385485931844	WITHOUT_CLASSIFICATION	6.145140681558308E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.999996559377074	WITHOUT_CLASSIFICATION	3.440622925932999E-6	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9999985315452355	WITHOUT_CLASSIFICATION	1.4684547644528935E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999954024999117	WITHOUT_CLASSIFICATION	4.597500088360602E-6	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999935620301	WITHOUT_CLASSIFICATION	6.437969948252134E-9	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999936776879688	WITHOUT_CLASSIFICATION	6.322312031214385E-6	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999936776879688	WITHOUT_CLASSIFICATION	6.322312031214385E-6	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999999989236369	WITHOUT_CLASSIFICATION	1.0763630284555401E-9	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999862172263	WITHOUT_CLASSIFICATION	1.378277381170899E-8	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999999862172263	WITHOUT_CLASSIFICATION	1.378277381170899E-8	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999989416876203	WITHOUT_CLASSIFICATION	1.0583123797178403E-6	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9999989416876203	WITHOUT_CLASSIFICATION	1.0583123797178403E-6	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999888608322429	WITHOUT_CLASSIFICATION	1.113916775721043E-5	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9999993558803112	WITHOUT_CLASSIFICATION	6.44119688698059E-7	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999997992871108	WITHOUT_CLASSIFICATION	2.0071288909713268E-7	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999978189383588	WITHOUT_CLASSIFICATION	2.1810616412320792E-6	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999999950331309	WITHOUT_CLASSIFICATION	4.966869070225605E-9	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999988323389313	WITHOUT_CLASSIFICATION	1.1676610687148463E-6	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.999999902528564	WITHOUT_CLASSIFICATION	9.7471436049635E-8	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999552461208031	WITHOUT_CLASSIFICATION	4.475387919692852E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999936776879688	WITHOUT_CLASSIFICATION	6.322312031214385E-6	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9999993456178786	WITHOUT_CLASSIFICATION	6.543821214051308E-7	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999999983186922	WITHOUT_CLASSIFICATION	1.6813077349779654E-9	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999999388061233	WITHOUT_CLASSIFICATION	6.119387676291653E-8	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9998754250684	WITHOUT_CLASSIFICATION	1.2457493160005203E-4	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999880821782271	WITHOUT_CLASSIFICATION	1.1917821772890944E-5	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999995415570893	WITHOUT_CLASSIFICATION	4.5844291066899423E-7	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999922802883556	WITHOUT_CLASSIFICATION	7.719711644276003E-6	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9999871383614478	WITHOUT_CLASSIFICATION	1.2861638552281985E-5	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999988816334572	WITHOUT_CLASSIFICATION	1.1183665427406409E-6	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999988816334572	WITHOUT_CLASSIFICATION	1.1183665427406409E-6	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999942685391208	WITHOUT_CLASSIFICATION	5.731460879176399E-6	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999996314315415	WITHOUT_CLASSIFICATION	3.685684585226607E-7	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999677573089264	WITHOUT_CLASSIFICATION	3.224269107365242E-5	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999995565115224	WITHOUT_CLASSIFICATION	4.434884775694765E-7	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9999964347241191	WITHOUT_CLASSIFICATION	3.565275880836439E-6	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997051418629	WITHOUT_CLASSIFICATION	2.948581371361215E-7	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999376315413	WITHOUT_CLASSIFICATION	6.236845870341564E-7	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9999999983661275	WITHOUT_CLASSIFICATION	1.6338724486451714E-9	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999999605162109	WITHOUT_CLASSIFICATION	3.948378909474409E-8	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997051418629	WITHOUT_CLASSIFICATION	2.948581371361215E-7	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999991813431619	WITHOUT_CLASSIFICATION	8.186568380937947E-7	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999998113930747	WITHOUT_CLASSIFICATION	1.8860692527031803E-7	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999945683361292	WITHOUT_CLASSIFICATION	5.431663870719509E-6	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9997839602654496	WITHOUT_CLASSIFICATION	2.16039734550305E-4	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999998634835647	WITHOUT_CLASSIFICATION	1.365164353281074E-7	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999999138193186	WITHOUT_CLASSIFICATION	8.618068142822932E-8	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999982538141775	WITHOUT_CLASSIFICATION	1.7461858225273707E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.999991529324684	WITHOUT_CLASSIFICATION	8.470675315983271E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.999991529324684	WITHOUT_CLASSIFICATION	8.470675315983271E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999952005737373	WITHOUT_CLASSIFICATION	4.799426262742222E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999952005737373	WITHOUT_CLASSIFICATION	4.799426262742222E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999915286437906	WITHOUT_CLASSIFICATION	8.471356209362475E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999893371758244	WITHOUT_CLASSIFICATION	1.0662824175621136E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999893371758244	WITHOUT_CLASSIFICATION	1.0662824175621136E-5	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999901325400925	WITHOUT_CLASSIFICATION	9.867459907475085E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999904664120794	WITHOUT_CLASSIFICATION	9.533587920644938E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999904664120794	WITHOUT_CLASSIFICATION	9.533587920644938E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999912407890363	WITHOUT_CLASSIFICATION	8.759210963659038E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999912407890363	WITHOUT_CLASSIFICATION	8.759210963659038E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999927804523264	WITHOUT_CLASSIFICATION	7.219547673538418E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999949950738942	WITHOUT_CLASSIFICATION	5.004926105760741E-6	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999999401919172	WITHOUT_CLASSIFICATION	5.980808276378984E-8	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999932521577056	WITHOUT_CLASSIFICATION	6.747842294256809E-6	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999999090760566	WITHOUT_CLASSIFICATION	9.092394340166846E-8	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980580444668	WITHOUT_CLASSIFICATION	1.9419555331218187E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980580444668	WITHOUT_CLASSIFICATION	1.9419555331218187E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999900291267305	WITHOUT_CLASSIFICATION	9.970873269471412E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999900291267305	WITHOUT_CLASSIFICATION	9.970873269471412E-6	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999998201928322	WITHOUT_CLASSIFICATION	1.7980716785403467E-7	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.999997534314334	WITHOUT_CLASSIFICATION	2.4656856660242915E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999986311449205	WITHOUT_CLASSIFICATION	1.3688550795913818E-6	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999911602365038	WITHOUT_CLASSIFICATION	8.83976349627423E-6	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.999991529324684	WITHOUT_CLASSIFICATION	8.470675315983271E-6	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999993824500502	WITHOUT_CLASSIFICATION	6.175499498791611E-7	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999995148979545	WITHOUT_CLASSIFICATION	4.8510204548399E-7	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999952005737373	WITHOUT_CLASSIFICATION	4.799426262742222E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999952005737373	WITHOUT_CLASSIFICATION	4.799426262742222E-6	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9999915286437906	WITHOUT_CLASSIFICATION	8.471356209362475E-6	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999893371758244	WITHOUT_CLASSIFICATION	1.0662824175621136E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999893371758244	WITHOUT_CLASSIFICATION	1.0662824175621136E-5	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9999893371758244	WITHOUT_CLASSIFICATION	1.0662824175621136E-5	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9999901325400925	WITHOUT_CLASSIFICATION	9.867459907475085E-6	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9999904664120794	WITHOUT_CLASSIFICATION	9.533587920644938E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999912407890363	WITHOUT_CLASSIFICATION	8.759210963659038E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999912407890363	WITHOUT_CLASSIFICATION	8.759210963659038E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999912407890363	WITHOUT_CLASSIFICATION	8.759210963659038E-6	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9999927804523264	WITHOUT_CLASSIFICATION	7.219547673538418E-6	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999949950738942	WITHOUT_CLASSIFICATION	5.004926105760741E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980580444668	WITHOUT_CLASSIFICATION	1.9419555331218187E-6	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999999857643556	WITHOUT_CLASSIFICATION	1.423564432046917E-8	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999999351571713	WITHOUT_CLASSIFICATION	6.484282864156212E-8	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9999997022541487	WITHOUT_CLASSIFICATION	2.9774585131187643E-7	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999995158792931	WITHOUT_CLASSIFICATION	4.841207067681765E-7	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980580444668	WITHOUT_CLASSIFICATION	1.9419555331218187E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999900291267305	WITHOUT_CLASSIFICATION	9.970873269471412E-6	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9999900291267305	WITHOUT_CLASSIFICATION	9.970873269471412E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999986311449205	WITHOUT_CLASSIFICATION	1.3688550795913818E-6	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9999986311449205	WITHOUT_CLASSIFICATION	1.3688550795913818E-6	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999977923236665	WITHOUT_CLASSIFICATION	2.2076763335113488E-6	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9999884584416078	WITHOUT_CLASSIFICATION	1.1541558392148973E-5	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999846903032881	WITHOUT_CLASSIFICATION	1.5309696711895948E-5	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9999941094600178	WITHOUT_CLASSIFICATION	5.890539982207621E-6	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9999981144117347	WITHOUT_CLASSIFICATION	1.8855882652597978E-6	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9999932085858245	WITHOUT_CLASSIFICATION	6.7914141755042745E-6	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9999990719901017	WITHOUT_CLASSIFICATION	9.280098983760589E-7	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999989831545865	WITHOUT_CLASSIFICATION	1.016845413504133E-5	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999928416100056	WITHOUT_CLASSIFICATION	7.158389994454358E-6	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999996245071181	WITHOUT_CLASSIFICATION	3.754928818339683E-7	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9999993404070414	WITHOUT_CLASSIFICATION	6.595929585700433E-7	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9999954503565336	WITHOUT_CLASSIFICATION	4.5496434664882446E-6	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999933083376695	WITHOUT_CLASSIFICATION	6.69166233041159E-6	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999933679854355	WITHOUT_CLASSIFICATION	6.632014564575878E-6	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9999981545539838	WITHOUT_CLASSIFICATION	1.8454460162972713E-6	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.99999267999401	WITHOUT_CLASSIFICATION	7.320005990035528E-6	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999992002054762	WITHOUT_CLASSIFICATION	7.997945239218692E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999966709092523	WITHOUT_CLASSIFICATION	3.329090747821587E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999981846791723	WITHOUT_CLASSIFICATION	1.8153208276366235E-6	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9999955376735993	WITHOUT_CLASSIFICATION	4.462326400764131E-6	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9999817227695122	WITHOUT_CLASSIFICATION	1.827723048779011E-5	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9996393768050368	WITHOUT_CLASSIFICATION	3.6062319496321183E-4	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999994847945703	WITHOUT_CLASSIFICATION	5.152054296264068E-7	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999994847945703	WITHOUT_CLASSIFICATION	5.152054296264068E-7	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.999999479122905	WITHOUT_CLASSIFICATION	5.208770948960156E-7	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999975690477619	WITHOUT_CLASSIFICATION	2.430952237967302E-6	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9999769395163851	WITHOUT_CLASSIFICATION	2.3060483614861034E-5	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.999999848768196	WITHOUT_CLASSIFICATION	1.512318040276557E-7	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999998959545225	WITHOUT_CLASSIFICATION	1.0404547747771815E-7	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9999997212754583	WITHOUT_CLASSIFICATION	2.7872454163272144E-7	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999984053935457	WITHOUT_CLASSIFICATION	1.5946064543423905E-6	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9999990907423044	WITHOUT_CLASSIFICATION	9.092576955339661E-7	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999787793963077	WITHOUT_CLASSIFICATION	2.1220603692234227E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999787793963077	WITHOUT_CLASSIFICATION	2.1220603692234227E-5	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9999787793963077	WITHOUT_CLASSIFICATION	2.1220603692234227E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999659774795903	WITHOUT_CLASSIFICATION	3.402252040977627E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999659774795903	WITHOUT_CLASSIFICATION	3.402252040977627E-5	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9999659774795903	WITHOUT_CLASSIFICATION	3.402252040977627E-5	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.999998870524849	WITHOUT_CLASSIFICATION	1.1294751510205828E-6	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.999993722324327	WITHOUT_CLASSIFICATION	6.277675672912954E-6	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9999846669458479	WITHOUT_CLASSIFICATION	1.5333054152193113E-5	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9985788085221116	WITHOUT_CLASSIFICATION	0.0014211914778884203	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999990857524834	WITHOUT_CLASSIFICATION	9.142475166298106E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999835726582602	WITHOUT_CLASSIFICATION	1.642734173984712E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999882656586975	WITHOUT_CLASSIFICATION	1.173434130258154E-5	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999999524241032	WITHOUT_CLASSIFICATION	4.757589681991769E-8	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999993464512669	WITHOUT_CLASSIFICATION	6.535487331156371E-7	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9999999104511033	WITHOUT_CLASSIFICATION	8.95488966779048E-8	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9999999014015057	WITHOUT_CLASSIFICATION	9.859849419327427E-8	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999999436723587	WITHOUT_CLASSIFICATION	5.632764123419977E-8	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999437504316677	WITHOUT_CLASSIFICATION	5.624956833225365E-5	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999999933717958	WITHOUT_CLASSIFICATION	6.6282042224036E-9	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9999748142971067	WITHOUT_CLASSIFICATION	2.5185702893265914E-5	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999981592431858	WITHOUT_CLASSIFICATION	1.8407568141300842E-6	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.999999902325215	WITHOUT_CLASSIFICATION	9.767478500878931E-8	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9999996330377801	WITHOUT_CLASSIFICATION	3.669622199015864E-7	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9980744931082677	WITHOUT_CLASSIFICATION	0.0019255068917323557	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999999823707866	WITHOUT_CLASSIFICATION	1.7629213370335874E-8	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999998556070785	WITHOUT_CLASSIFICATION	1.4439292154166433E-7	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9999999941027324	WITHOUT_CLASSIFICATION	5.89726748831485E-9	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9998909128870987	WITHOUT_CLASSIFICATION	1.0908711290129506E-4	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999961625702	WITHOUT_CLASSIFICATION	3.837429852302386E-9	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9999998877467531	WITHOUT_CLASSIFICATION	1.1225324680293768E-7	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9999515802047901	WITHOUT_CLASSIFICATION	4.8419795209791555E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999998435999026	WITHOUT_CLASSIFICATION	1.564000974360688E-7	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999999989667715	WITHOUT_CLASSIFICATION	1.033228549646965E-9	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999941674215991	WITHOUT_CLASSIFICATION	5.832578400882574E-6	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999941674215991	WITHOUT_CLASSIFICATION	5.832578400882574E-6	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9993054289579745	WITHOUT_CLASSIFICATION	6.945710420254847E-4	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999999857128374	WITHOUT_CLASSIFICATION	1.428716245757975E-8	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.999994189734084	WITHOUT_CLASSIFICATION	5.8102659158874544E-6	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999990291822981	WITHOUT_CLASSIFICATION	9.708177019774036E-7	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.999999216700376	WITHOUT_CLASSIFICATION	7.832996240687712E-7	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999995791472209	WITHOUT_CLASSIFICATION	4.2085277905028277E-7	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999924839561127	WITHOUT_CLASSIFICATION	7.516043887345862E-6	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999990127299503	WITHOUT_CLASSIFICATION	9.872700496922228E-7	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9999826291127943	WITHOUT_CLASSIFICATION	1.7370887205647952E-5	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9999992836927588	WITHOUT_CLASSIFICATION	7.163072412653662E-7	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999964340126293	WITHOUT_CLASSIFICATION	3.5659873706876454E-6	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.999328953453961	WITHOUT_CLASSIFICATION	6.710465460389633E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9997725915537038	WITHOUT_CLASSIFICATION	2.2740844629614242E-4	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9998739467583314	WITHOUT_CLASSIFICATION	1.2605324166859239E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999966709092523	WITHOUT_CLASSIFICATION	3.329090747821587E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999969804489127	WITHOUT_CLASSIFICATION	3.0195510871964273E-6	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9998987451542991	WITHOUT_CLASSIFICATION	1.012548457008072E-4	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9999964604955595	WITHOUT_CLASSIFICATION	3.539504440514937E-6	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.8658598843273513	WITHOUT_CLASSIFICATION	0.13414011567264872	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9998129750173629	WITHOUT_CLASSIFICATION	1.8702498263716835E-4	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999992574686544	WITHOUT_CLASSIFICATION	7.425313455585283E-7	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9999698929091233	WITHOUT_CLASSIFICATION	3.0107090876654283E-5	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9999955731964149	WITHOUT_CLASSIFICATION	4.4268035851881865E-6	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9999980227536174	WITHOUT_CLASSIFICATION	1.97724638263019E-6	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9999241779168381	WITHOUT_CLASSIFICATION	7.582208316198673E-5	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.999999685140167	WITHOUT_CLASSIFICATION	3.1485983302155517E-7	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9999484085355508	WITHOUT_CLASSIFICATION	5.1591464449248654E-5	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.999996137328521	WITHOUT_CLASSIFICATION	3.862671478905003E-6	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999995275355709	WITHOUT_CLASSIFICATION	4.7246442915520413E-7	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9999905336420926	WITHOUT_CLASSIFICATION	9.466357907493397E-6	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9999854904643368	WITHOUT_CLASSIFICATION	1.4509535663166597E-5	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999883606526558	WITHOUT_CLASSIFICATION	1.1639347344229459E-5	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999924230928063	WITHOUT_CLASSIFICATION	7.576907193700551E-6	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9999995274593241	WITHOUT_CLASSIFICATION	4.7254067594698626E-7	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9999979955425343	WITHOUT_CLASSIFICATION	2.0044574656439075E-6	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999966965377869	WITHOUT_CLASSIFICATION	3.3034622131851447E-6	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999946819506002	WITHOUT_CLASSIFICATION	5.31804939979797E-6	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9999956254610788	WITHOUT_CLASSIFICATION	4.3745389212242616E-6	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9999953594029694	WITHOUT_CLASSIFICATION	4.640597030582059E-6	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9999897483550205	WITHOUT_CLASSIFICATION	1.0251644979465922E-5	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9998266996027965	WITHOUT_CLASSIFICATION	1.7330039720350035E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9999984957935454	WITHOUT_CLASSIFICATION	1.504206454536896E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999998637168892	WITHOUT_CLASSIFICATION	1.3628311077893976E-7	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999998637168892	WITHOUT_CLASSIFICATION	1.3628311077893976E-7	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999888353192793	WITHOUT_CLASSIFICATION	1.1164680720688546E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999959510461589	WITHOUT_CLASSIFICATION	4.048953841052931E-6	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999995523237004	WITHOUT_CLASSIFICATION	4.4767629956881446E-7	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999995523237004	WITHOUT_CLASSIFICATION	4.4767629956881446E-7	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999835726582602	WITHOUT_CLASSIFICATION	1.642734173984712E-5	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999882656586975	WITHOUT_CLASSIFICATION	1.173434130258154E-5	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9999963422448871	WITHOUT_CLASSIFICATION	3.657755112870793E-6	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9999823050600957	WITHOUT_CLASSIFICATION	1.7694939904310703E-5	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9999672147008959	WITHOUT_CLASSIFICATION	3.278529910414905E-5	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999980461065889	WITHOUT_CLASSIFICATION	1.953893411002172E-6	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999999117491697	WITHOUT_CLASSIFICATION	8.825083026054521E-8	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999976641033403	WITHOUT_CLASSIFICATION	2.3358966596354304E-6	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9999979530315987	WITHOUT_CLASSIFICATION	2.0469684012630364E-6	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9999981446466815	WITHOUT_CLASSIFICATION	1.8553533185316702E-6	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999998868487049	WITHOUT_CLASSIFICATION	1.1315129510143888E-7	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9999992934497799	WITHOUT_CLASSIFICATION	7.065502200788372E-7	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.999999972122686	WITHOUT_CLASSIFICATION	2.7877313990768426E-8	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9999868121852805	WITHOUT_CLASSIFICATION	1.318781471938456E-5	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999967810770108	WITHOUT_CLASSIFICATION	3.2189229892617388E-6	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9999967810770108	WITHOUT_CLASSIFICATION	3.2189229892617388E-6	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999995917623683	WITHOUT_CLASSIFICATION	4.082376317529153E-7	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999974413413181	WITHOUT_CLASSIFICATION	2.558658682051563E-6	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.999993104170079	WITHOUT_CLASSIFICATION	6.895829920907603E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999979811340145	WITHOUT_CLASSIFICATION	2.0188659853920738E-6	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.999987867082418	WITHOUT_CLASSIFICATION	1.2132917581902189E-5	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9999998997176627	WITHOUT_CLASSIFICATION	1.0028233723107934E-7	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9999947077458219	WITHOUT_CLASSIFICATION	5.292254178163826E-6	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999991643833984	WITHOUT_CLASSIFICATION	8.356166015928452E-7	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9999996589823573	WITHOUT_CLASSIFICATION	3.410176426360843E-7	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9999885664057572	WITHOUT_CLASSIFICATION	1.1433594242852935E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.999932455320444	WITHOUT_CLASSIFICATION	6.754467955606135E-5	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9997243591862881	WITHOUT_CLASSIFICATION	2.7564081371189714E-4	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9994072873091051	WITHOUT_CLASSIFICATION	5.927126908948393E-4	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9999749014587394	WITHOUT_CLASSIFICATION	2.509854126057066E-5	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9999944328736683	WITHOUT_CLASSIFICATION	5.567126331729548E-6	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9999447159776585	WITHOUT_CLASSIFICATION	5.5284022341401496E-5	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999995429519292	WITHOUT_CLASSIFICATION	4.570480708000557E-7	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999998183618537	WITHOUT_CLASSIFICATION	1.8163814623935915E-7	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999959519459553	WITHOUT_CLASSIFICATION	4.048054044760552E-6	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999999855601596	WITHOUT_CLASSIFICATION	1.4439840333607421E-8	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9999624530203219	WITHOUT_CLASSIFICATION	3.7546979678036946E-5	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9999986442115213	WITHOUT_CLASSIFICATION	1.3557884787349863E-6	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9999868546436591	WITHOUT_CLASSIFICATION	1.3145356340917606E-5	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999988934351537	WITHOUT_CLASSIFICATION	1.1065648463476423E-6	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999945325624341	WITHOUT_CLASSIFICATION	5.467437565897423E-6	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9999999648274793	WITHOUT_CLASSIFICATION	3.5172520607280846E-8	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999990255936017	WITHOUT_CLASSIFICATION	9.744063982634868E-7	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9999760447062543	WITHOUT_CLASSIFICATION	2.395529374570706E-5	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9999755337920864	WITHOUT_CLASSIFICATION	2.446620791362887E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998551258479889	WITHOUT_CLASSIFICATION	1.4487415201111203E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998551258479889	WITHOUT_CLASSIFICATION	1.4487415201111203E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998551258479889	WITHOUT_CLASSIFICATION	1.4487415201111203E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998551258479889	WITHOUT_CLASSIFICATION	1.4487415201111203E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998551258479889	WITHOUT_CLASSIFICATION	1.4487415201111203E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998551258479889	WITHOUT_CLASSIFICATION	1.4487415201111203E-4	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.999999872176625	WITHOUT_CLASSIFICATION	1.2782337504428003E-7	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999999210253677	WITHOUT_CLASSIFICATION	7.897463230091129E-8	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9999999568875418	WITHOUT_CLASSIFICATION	4.31124581617717E-8	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.999987660391847	WITHOUT_CLASSIFICATION	1.2339608152992778E-5	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.999987660391847	WITHOUT_CLASSIFICATION	1.2339608152992778E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999982898247189	WITHOUT_CLASSIFICATION	1.7101752809439096E-6	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999982898247189	WITHOUT_CLASSIFICATION	1.7101752809439096E-6	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999998571342653	WITHOUT_CLASSIFICATION	1.4286573470502212E-7	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.999851796381452	WITHOUT_CLASSIFICATION	1.482036185479735E-4	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.999999914345754	WITHOUT_CLASSIFICATION	8.565424605991173E-8	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999057502692361	WITHOUT_CLASSIFICATION	9.424973076393055E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999994231805077	WITHOUT_CLASSIFICATION	5.768194922223829E-7	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9999950998514189	WITHOUT_CLASSIFICATION	4.90014858113309E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999997427381982	WITHOUT_CLASSIFICATION	2.572618017281312E-7	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999997427381982	WITHOUT_CLASSIFICATION	2.572618017281312E-7	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999963369985643	WITHOUT_CLASSIFICATION	3.663001435773865E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999963369985643	WITHOUT_CLASSIFICATION	3.663001435773865E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9999963369985643	WITHOUT_CLASSIFICATION	3.663001435773865E-6	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9998589357792953	WITHOUT_CLASSIFICATION	1.41064220704721E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9998589357792953	WITHOUT_CLASSIFICATION	1.41064220704721E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999988829289247	WITHOUT_CLASSIFICATION	1.1170710753518438E-6	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999999714254709	WITHOUT_CLASSIFICATION	2.8574529067860863E-8	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999984607143249	WITHOUT_CLASSIFICATION	1.5392856751327994E-6	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9999748818347014	WITHOUT_CLASSIFICATION	2.5118165298649584E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999997437182455	WITHOUT_CLASSIFICATION	2.5628175455533097E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999997437182455	WITHOUT_CLASSIFICATION	2.5628175455533097E-7	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.99999875981455	WITHOUT_CLASSIFICATION	1.2401854499775843E-6	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9998551258479889	WITHOUT_CLASSIFICATION	1.4487415201111203E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999997437182455	WITHOUT_CLASSIFICATION	2.5628175455533097E-7	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999995932696499	WITHOUT_CLASSIFICATION	4.067303500225348E-7	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999995932696499	WITHOUT_CLASSIFICATION	4.067303500225348E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999997437182455	WITHOUT_CLASSIFICATION	2.5628175455533097E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999997437182455	WITHOUT_CLASSIFICATION	2.5628175455533097E-7	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999997437182455	WITHOUT_CLASSIFICATION	2.5628175455533097E-7	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999632346524948	WITHOUT_CLASSIFICATION	3.6765347505165E-5	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999999914936106	WITHOUT_CLASSIFICATION	8.506389444776827E-9	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.999999992919495	WITHOUT_CLASSIFICATION	7.0805048878051525E-9	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.999999992919495	WITHOUT_CLASSIFICATION	7.0805048878051525E-9	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999999282651219	WITHOUT_CLASSIFICATION	7.173487816638452E-8	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999999211301384	WITHOUT_CLASSIFICATION	7.886986164824284E-8	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999999952346477	WITHOUT_CLASSIFICATION	4.765352239772289E-9	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999999895452972	WITHOUT_CLASSIFICATION	1.0454702817322019E-8	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9996489739189814	WITHOUT_CLASSIFICATION	3.510260810186056E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9999968500847247	WITHOUT_CLASSIFICATION	3.149915275234224E-6	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.999997594738241	WITHOUT_CLASSIFICATION	2.4052617589684416E-6	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999986548928721	WITHOUT_CLASSIFICATION	1.3451071278190076E-6	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999997167260277	WITHOUT_CLASSIFICATION	2.832739722772533E-7	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.999999806423107	WITHOUT_CLASSIFICATION	1.9357689292064947E-7	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9999998474828795	WITHOUT_CLASSIFICATION	1.525171204975972E-7	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9999996973895797	WITHOUT_CLASSIFICATION	3.0261042026870746E-7	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999995952538325	WITHOUT_CLASSIFICATION	4.047461674642067E-7	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999947109155748	WITHOUT_CLASSIFICATION	5.289084425201758E-6	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9999999497388828	WITHOUT_CLASSIFICATION	5.026111716361205E-8	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9998846626776713	WITHOUT_CLASSIFICATION	1.1533732232869829E-4	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9999994191314566	WITHOUT_CLASSIFICATION	5.808685433355583E-7	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999999094999042	WITHOUT_CLASSIFICATION	9.050009566719904E-8	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999999006880931	WITHOUT_CLASSIFICATION	9.931190685218585E-8	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999786744311	WITHOUT_CLASSIFICATION	2.132556891403929E-8	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999984817518138	WITHOUT_CLASSIFICATION	1.5182481862044805E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999999094999042	WITHOUT_CLASSIFICATION	9.050009566719904E-8	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999990747591284	WITHOUT_CLASSIFICATION	9.252408715110928E-7	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999999006880931	WITHOUT_CLASSIFICATION	9.931190685218585E-8	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999786744311	WITHOUT_CLASSIFICATION	2.132556891403929E-8	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999985991914483	WITHOUT_CLASSIFICATION	1.4008085517520958E-6	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.999999819376277	WITHOUT_CLASSIFICATION	1.806237229274606E-7	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999996238728914	WITHOUT_CLASSIFICATION	3.7612710866059947E-7	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999992823083989	WITHOUT_CLASSIFICATION	7.176916010458647E-7	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9999993327774823	WITHOUT_CLASSIFICATION	6.67222517680568E-7	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999990874837142	WITHOUT_CLASSIFICATION	9.125162858145669E-7	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.999947727604393	WITHOUT_CLASSIFICATION	5.2272395606956594E-5	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999996548920855	WITHOUT_CLASSIFICATION	3.4510791448464287E-7	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999911801580267	WITHOUT_CLASSIFICATION	8.81984197333837E-6	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999936581828605	WITHOUT_CLASSIFICATION	6.3418171396505006E-6	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999996901232998	WITHOUT_CLASSIFICATION	3.098767001089726E-7	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9999999656257221	WITHOUT_CLASSIFICATION	3.4374277861963815E-8	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999977353776929	WITHOUT_CLASSIFICATION	2.264622307047069E-6	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999987267787417	WITHOUT_CLASSIFICATION	1.2732212582950796E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999961566195005	WITHOUT_CLASSIFICATION	3.843380499485585E-6	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999998747153701	WITHOUT_CLASSIFICATION	1.2528462976747803E-7	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999730821756629	WITHOUT_CLASSIFICATION	2.691782433705151E-5	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9999889461986843	WITHOUT_CLASSIFICATION	1.1053801315708824E-5	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999984293338293	WITHOUT_CLASSIFICATION	1.5706661707071615E-6	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9999984293338293	WITHOUT_CLASSIFICATION	1.5706661707071615E-6	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999998925085836	WITHOUT_CLASSIFICATION	1.0749141642330767E-7	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999998925085836	WITHOUT_CLASSIFICATION	1.0749141642330767E-7	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999954599994658	WITHOUT_CLASSIFICATION	4.54000053417122E-6	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9999954599994658	WITHOUT_CLASSIFICATION	4.54000053417122E-6	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9999997191332313	WITHOUT_CLASSIFICATION	2.808667687191552E-7	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999929513681195	WITHOUT_CLASSIFICATION	7.048631880491126E-6	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9999998390879117	WITHOUT_CLASSIFICATION	1.6091208837999085E-7	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9999998856125831	WITHOUT_CLASSIFICATION	1.1438741687535456E-7	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9999999025661797	WITHOUT_CLASSIFICATION	9.743382028471976E-8	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9999998290101837	WITHOUT_CLASSIFICATION	1.709898163709548E-7	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9999985292432885	WITHOUT_CLASSIFICATION	1.4707567115537581E-6	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9999997757079604	WITHOUT_CLASSIFICATION	2.2429203957369382E-7	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999938815259899	WITHOUT_CLASSIFICATION	6.11847401001978E-6	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9978616541239377	WITHOUT_CLASSIFICATION	0.0021383458760623865	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999966252543745	WITHOUT_CLASSIFICATION	3.3747456256171167E-6	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999999325326128	WITHOUT_CLASSIFICATION	6.746738730034423E-8	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9999954077252183	WITHOUT_CLASSIFICATION	4.592274781654914E-6	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999993960398191	WITHOUT_CLASSIFICATION	6.03960180930672E-7	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9999996290791835	WITHOUT_CLASSIFICATION	3.709208164989695E-7	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999989299902483	WITHOUT_CLASSIFICATION	1.0700097517770092E-6	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9999862496487987	WITHOUT_CLASSIFICATION	1.3750351201292183E-5	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999995319135812	WITHOUT_CLASSIFICATION	4.6808641886417216E-7	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999978092787634	WITHOUT_CLASSIFICATION	2.19072123657253E-6	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9999289003106154	WITHOUT_CLASSIFICATION	7.109968938459247E-5	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9999976403829035	WITHOUT_CLASSIFICATION	2.3596170965115084E-6	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999420205319547	WITHOUT_CLASSIFICATION	5.797946804531549E-5	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999999831567716	WITHOUT_CLASSIFICATION	1.6843228357185248E-8	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999986443198148	WITHOUT_CLASSIFICATION	1.355680185245183E-6	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999999574218452	WITHOUT_CLASSIFICATION	4.257815473851863E-8	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999981890174073	WITHOUT_CLASSIFICATION	1.8109825925777244E-6	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999998435112355	WITHOUT_CLASSIFICATION	1.564887646225451E-7	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999998829907556	WITHOUT_CLASSIFICATION	1.1700924449173922E-7	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999996956759475	WITHOUT_CLASSIFICATION	3.0432405243010575E-7	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9999991492506782	WITHOUT_CLASSIFICATION	8.507493217154803E-7	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999803396576344	WITHOUT_CLASSIFICATION	1.966034236560816E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9986150499742642	WITHOUT_CLASSIFICATION	0.0013849500257358388	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9999945202369486	WITHOUT_CLASSIFICATION	5.4797630514289785E-6	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9999732589412824	WITHOUT_CLASSIFICATION	2.674105871763226E-5	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9973879884515068	WITHOUT_CLASSIFICATION	0.0026120115484932443	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9973879884515068	WITHOUT_CLASSIFICATION	0.0026120115484932443	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9976726303690132	WITHOUT_CLASSIFICATION	0.0023273696309867526	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999334056049394	WITHOUT_CLASSIFICATION	6.659439506065818E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9979125317651983	WITHOUT_CLASSIFICATION	0.0020874682348015518	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9999972430941512	WITHOUT_CLASSIFICATION	2.7569058488440923E-6	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9999821157483095	WITHOUT_CLASSIFICATION	1.7884251690522384E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999939210032622	WITHOUT_CLASSIFICATION	6.078996737692096E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999939210032622	WITHOUT_CLASSIFICATION	6.078996737692096E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999939210032622	WITHOUT_CLASSIFICATION	6.078996737692096E-6	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999458456927741	WITHOUT_CLASSIFICATION	5.415430722588465E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999821507031172	WITHOUT_CLASSIFICATION	1.784929688271858E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9999821507031172	WITHOUT_CLASSIFICATION	1.784929688271858E-5	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999823692496366	WITHOUT_CLASSIFICATION	1.7630750363466717E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9999616363599861	WITHOUT_CLASSIFICATION	3.836364001386755E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999957537912066	WITHOUT_CLASSIFICATION	4.2462087933911625E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999957537912066	WITHOUT_CLASSIFICATION	4.2462087933911625E-6	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999957537912066	WITHOUT_CLASSIFICATION	4.2462087933911625E-6	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999938688664043	WITHOUT_CLASSIFICATION	6.1311335956805804E-6	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.999994968623181	WITHOUT_CLASSIFICATION	5.03137681900959E-6	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9999855651395063	WITHOUT_CLASSIFICATION	1.4434860493632762E-5	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9999999958607195	WITHOUT_CLASSIFICATION	4.139280372708541E-9	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999983882885818	WITHOUT_CLASSIFICATION	1.6117114183189436E-6	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.999999348063784	WITHOUT_CLASSIFICATION	6.519362158996867E-7	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999685517980245	WITHOUT_CLASSIFICATION	3.144820197559187E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999979930966364	WITHOUT_CLASSIFICATION	2.0069033635781654E-6	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999989458648731	WITHOUT_CLASSIFICATION	1.0541351268129961E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9998123744091277	WITHOUT_CLASSIFICATION	1.8762559087218215E-4	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9958753869019027	WITHOUT_CLASSIFICATION	0.0041246130980972864	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999989299902483	WITHOUT_CLASSIFICATION	1.0700097517770092E-6	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999995319135812	WITHOUT_CLASSIFICATION	4.6808641886417216E-7	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9999979736877624	WITHOUT_CLASSIFICATION	2.0263122375433287E-6	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9999993868241795	WITHOUT_CLASSIFICATION	6.131758204238634E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999997189879615	WITHOUT_CLASSIFICATION	2.8101203852506014E-7	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999796768933321	WITHOUT_CLASSIFICATION	2.03231066678308E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999017469006	WITHOUT_CLASSIFICATION	9.82530993525505E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999017469006	WITHOUT_CLASSIFICATION	9.82530993525505E-8	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999999017469006	WITHOUT_CLASSIFICATION	9.82530993525505E-8	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999742485921475	WITHOUT_CLASSIFICATION	2.5751407852529772E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999742485921475	WITHOUT_CLASSIFICATION	2.5751407852529772E-5	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9999966766330205	WITHOUT_CLASSIFICATION	3.3233669795417834E-6	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9999938687859834	WITHOUT_CLASSIFICATION	6.131214016601065E-6	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999935215477048	WITHOUT_CLASSIFICATION	6.478452295289525E-6	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999977090172248	WITHOUT_CLASSIFICATION	2.290982775121084E-6	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999342156718325	WITHOUT_CLASSIFICATION	6.57843281675925E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9999342156718325	WITHOUT_CLASSIFICATION	6.57843281675925E-5	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9999996712833298	WITHOUT_CLASSIFICATION	3.2871667019649924E-7	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.999998551479756	WITHOUT_CLASSIFICATION	1.4485202440223E-6	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999993561968183	WITHOUT_CLASSIFICATION	6.438031816038723E-7	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999997049642372	WITHOUT_CLASSIFICATION	2.950357627621041E-7	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9999975465355502	WITHOUT_CLASSIFICATION	2.453464449799502E-6	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999987892326275	WITHOUT_CLASSIFICATION	1.2107673724502744E-6	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9999969956419366	WITHOUT_CLASSIFICATION	3.0043580634042274E-6	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999999634672236	WITHOUT_CLASSIFICATION	3.6532776306339334E-8	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999996140790945	WITHOUT_CLASSIFICATION	3.859209054298609E-7	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999999850937359	WITHOUT_CLASSIFICATION	1.490626413275883E-8	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999998127278078	WITHOUT_CLASSIFICATION	1.8727219220273704E-7	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999956550485406	WITHOUT_CLASSIFICATION	4.344951459366929E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999997189879615	WITHOUT_CLASSIFICATION	2.8101203852506014E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.999999938849645	WITHOUT_CLASSIFICATION	6.115035498841101E-8	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9999964340126293	WITHOUT_CLASSIFICATION	3.5659873706876454E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999997189879615	WITHOUT_CLASSIFICATION	2.8101203852506014E-7	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999977090172248	WITHOUT_CLASSIFICATION	2.290982775121084E-6	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9993908960568408	WITHOUT_CLASSIFICATION	6.091039431591778E-4	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999999731859375	WITHOUT_CLASSIFICATION	2.6814062625444696E-8	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999996608074618	WITHOUT_CLASSIFICATION	3.391925381613977E-7	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999996608074618	WITHOUT_CLASSIFICATION	3.391925381613977E-7	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9999972969582531	WITHOUT_CLASSIFICATION	2.703041746830483E-6	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9999907819675465	WITHOUT_CLASSIFICATION	9.218032453473013E-6	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999992050203078	WITHOUT_CLASSIFICATION	7.949796921711282E-7	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999999498647321	WITHOUT_CLASSIFICATION	5.013526788247847E-8	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999999996578022	WITHOUT_CLASSIFICATION	3.4219788398707144E-10	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999996011876287	WITHOUT_CLASSIFICATION	3.988123713085448E-7	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999997345298239	WITHOUT_CLASSIFICATION	2.65470176005251E-7	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999996700859651	WITHOUT_CLASSIFICATION	3.2991403491540904E-7	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999999688010734	WITHOUT_CLASSIFICATION	3.119892659377451E-8	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999997204459276	WITHOUT_CLASSIFICATION	2.7955407246888143E-7	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9999872043727255	WITHOUT_CLASSIFICATION	1.2795627274471754E-5	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999993245273368	WITHOUT_CLASSIFICATION	6.754726631431029E-7	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.999997654591023	WITHOUT_CLASSIFICATION	2.3454089769413085E-6	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999999978729789	WITHOUT_CLASSIFICATION	2.1270210575253657E-9	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999934450535722	WITHOUT_CLASSIFICATION	6.554946427696662E-6	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9999946539723057	WITHOUT_CLASSIFICATION	5.346027694248641E-6	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999883894747923	WITHOUT_CLASSIFICATION	1.1610525207581824E-5	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999968306515108	WITHOUT_CLASSIFICATION	3.1693484892526097E-6	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999994468466644	WITHOUT_CLASSIFICATION	5.531533355763778E-7	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999994468466644	WITHOUT_CLASSIFICATION	5.531533355763778E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999997189879615	WITHOUT_CLASSIFICATION	2.8101203852506014E-7	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999997959308082	WITHOUT_CLASSIFICATION	2.040691918578196E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999998127278078	WITHOUT_CLASSIFICATION	1.8727219220273704E-7	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999950043910778	WITHOUT_CLASSIFICATION	4.9956089221218474E-6	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999996161280811	WITHOUT_CLASSIFICATION	3.8387191883268207E-7	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999990072475057	WITHOUT_CLASSIFICATION	9.92752494367914E-7	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999997750386045	WITHOUT_CLASSIFICATION	2.2496139555275083E-7	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9999989153606647	WITHOUT_CLASSIFICATION	1.0846393353170434E-6	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999998127278078	WITHOUT_CLASSIFICATION	1.8727219220273704E-7	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9999932853884651	WITHOUT_CLASSIFICATION	6.7146115348468176E-6	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9998675760520926	WITHOUT_CLASSIFICATION	1.324239479073472E-4	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.999988594960805	WITHOUT_CLASSIFICATION	1.140503919489027E-5	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999997942771284	WITHOUT_CLASSIFICATION	2.0572287159884E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999997080689123	WITHOUT_CLASSIFICATION	2.9193108779352277E-7	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999982803082358	WITHOUT_CLASSIFICATION	1.7196917642117663E-6	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.999992740770816	WITHOUT_CLASSIFICATION	7.2592291840028425E-6	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.999999064932552	WITHOUT_CLASSIFICATION	9.350674481281809E-7	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999965303407454	WITHOUT_CLASSIFICATION	3.469659254680921E-6	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999998602490028	WITHOUT_CLASSIFICATION	1.3975099718029843E-7	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999967557428823	WITHOUT_CLASSIFICATION	3.2442571177011398E-6	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999967557428823	WITHOUT_CLASSIFICATION	3.2442571177011398E-6	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9999972362670492	WITHOUT_CLASSIFICATION	2.763732950725455E-6	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999997426475182	WITHOUT_CLASSIFICATION	2.5735248179137056E-7	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999999007305552	WITHOUT_CLASSIFICATION	9.926944478223801E-8	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999991158365389	WITHOUT_CLASSIFICATION	8.841634609911425E-7	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9999934188743816	WITHOUT_CLASSIFICATION	6.581125618326687E-6	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999965090259142	WITHOUT_CLASSIFICATION	3.490974085742815E-6	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999997763195811	WITHOUT_CLASSIFICATION	2.236804187921633E-7	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999964416805212	WITHOUT_CLASSIFICATION	3.558319478901743E-6	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999991794263984	WITHOUT_CLASSIFICATION	8.205736016047855E-7	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999823122683469	WITHOUT_CLASSIFICATION	1.768773165316504E-5	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999992760863914	WITHOUT_CLASSIFICATION	7.239136087205744E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995782770346	WITHOUT_CLASSIFICATION	4.217229654692776E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995782770346	WITHOUT_CLASSIFICATION	4.217229654692776E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995782770346	WITHOUT_CLASSIFICATION	4.217229654692776E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995782770346	WITHOUT_CLASSIFICATION	4.217229654692776E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995782770346	WITHOUT_CLASSIFICATION	4.217229654692776E-7	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995782770346	WITHOUT_CLASSIFICATION	4.217229654692776E-7	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9999476875848305	WITHOUT_CLASSIFICATION	5.2312415169537106E-5	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.999997803049443	WITHOUT_CLASSIFICATION	2.1969505569817265E-6	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9999995109543098	WITHOUT_CLASSIFICATION	4.89045690159488E-7	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999993634789351	WITHOUT_CLASSIFICATION	6.365210649222901E-7	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.999995348459712	WITHOUT_CLASSIFICATION	4.651540287956384E-6	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.999981424683185	WITHOUT_CLASSIFICATION	1.8575316815049432E-5	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999982516861552	WITHOUT_CLASSIFICATION	1.7483138448097223E-6	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.999991669351364	WITHOUT_CLASSIFICATION	8.330648636033089E-6	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9999960028327333	WITHOUT_CLASSIFICATION	3.997167266683438E-6	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999955863262118	WITHOUT_CLASSIFICATION	4.413673788175639E-6	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9999999656781603	WITHOUT_CLASSIFICATION	3.4321839730973485E-8	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9999995962249439	WITHOUT_CLASSIFICATION	4.037750560815478E-7	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.999997870677187	WITHOUT_CLASSIFICATION	2.1293228130878985E-6	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999999373035451	WITHOUT_CLASSIFICATION	6.269645500036595E-8	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9999999652836703	WITHOUT_CLASSIFICATION	3.471632969403729E-8	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9999895935456655	WITHOUT_CLASSIFICATION	1.0406454334479613E-5	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999523982602044	WITHOUT_CLASSIFICATION	4.7601739795503354E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999702982296205	WITHOUT_CLASSIFICATION	2.9701770379532836E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999702982296205	WITHOUT_CLASSIFICATION	2.9701770379532836E-5	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999971541386529	WITHOUT_CLASSIFICATION	2.845861347116482E-6	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999822109868274	WITHOUT_CLASSIFICATION	1.77890131725821E-5	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999614420896409	WITHOUT_CLASSIFICATION	3.8557910359052414E-5	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9998747554146631	WITHOUT_CLASSIFICATION	1.2524458533688727E-4	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999608449059054	WITHOUT_CLASSIFICATION	3.915509409468523E-5	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9999036409175408	WITHOUT_CLASSIFICATION	9.63590824591795E-5	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9999877826503941	WITHOUT_CLASSIFICATION	1.2217349605953328E-5	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999996780068942	WITHOUT_CLASSIFICATION	3.219931058400943E-7	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9999667048940154	WITHOUT_CLASSIFICATION	3.329510598457263E-5	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999980061185962	WITHOUT_CLASSIFICATION	1.9938814036696173E-6	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999998674997023	WITHOUT_CLASSIFICATION	1.3250029762844987E-7	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9999999950883733	WITHOUT_CLASSIFICATION	4.911626631903901E-9	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999995311951864	WITHOUT_CLASSIFICATION	4.6880481373186723E-7	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999999511687973	WITHOUT_CLASSIFICATION	4.8831202658659464E-8	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999997076405404	WITHOUT_CLASSIFICATION	2.923594596127059E-7	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9999515174195676	WITHOUT_CLASSIFICATION	4.8482580432381305E-5	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9999946363917612	WITHOUT_CLASSIFICATION	5.363608238803719E-6	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9999944462514784	WITHOUT_CLASSIFICATION	5.55374852163521E-6	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999999761355629	WITHOUT_CLASSIFICATION	2.386443714665769E-8	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9999899160932205	WITHOUT_CLASSIFICATION	1.0083906779465702E-5	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9999906895524713	WITHOUT_CLASSIFICATION	9.310447528698623E-6	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9999943220755396	WITHOUT_CLASSIFICATION	5.677924460313979E-6	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999912026757638	WITHOUT_CLASSIFICATION	8.797324236269472E-6	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9999924657696643	WITHOUT_CLASSIFICATION	7.5342303356510865E-6	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9999945821417612	WITHOUT_CLASSIFICATION	5.417858238787064E-6	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9999897479387293	WITHOUT_CLASSIFICATION	1.0252061270661702E-5	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9999984485382107	WITHOUT_CLASSIFICATION	1.5514617893165598E-6	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999172160468122	WITHOUT_CLASSIFICATION	8.278395318787761E-5	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999999043795866	WITHOUT_CLASSIFICATION	9.562041325240967E-8	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999964765745107	WITHOUT_CLASSIFICATION	3.523425489381704E-6	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9999439059979354	WITHOUT_CLASSIFICATION	5.609400206466013E-5	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9999564987040432	WITHOUT_CLASSIFICATION	4.350129595677621E-5	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999958988313621	WITHOUT_CLASSIFICATION	4.101168637905196E-6	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.999996857741743	WITHOUT_CLASSIFICATION	3.1422582569745454E-6	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9999902049180855	WITHOUT_CLASSIFICATION	9.795081914395018E-6	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999712040971742	WITHOUT_CLASSIFICATION	2.8795902825877383E-5	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.999999965986255	WITHOUT_CLASSIFICATION	3.4013744958871016E-8	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9999849675265263	WITHOUT_CLASSIFICATION	1.5032473473552414E-5	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999961508558143	WITHOUT_CLASSIFICATION	3.849144185658112E-6	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9999961508558143	WITHOUT_CLASSIFICATION	3.849144185658112E-6	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9999899402517141	WITHOUT_CLASSIFICATION	1.0059748285879108E-5	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9999783598615228	WITHOUT_CLASSIFICATION	2.1640138477151356E-5	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9999567112632848	WITHOUT_CLASSIFICATION	4.328873671531914E-5	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999968239639505	WITHOUT_CLASSIFICATION	3.1760360495638393E-6	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999998813272052	WITHOUT_CLASSIFICATION	1.1867279473927919E-7	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9999462176688949	WITHOUT_CLASSIFICATION	5.3782331105109795E-5	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9999283552033954	WITHOUT_CLASSIFICATION	7.164479660465357E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9997841416410157	WITHOUT_CLASSIFICATION	2.1585835898432114E-4	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9999999306335031	WITHOUT_CLASSIFICATION	6.936649690313215E-8	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9999998316432109	WITHOUT_CLASSIFICATION	1.6835678905308989E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9999950626300964	WITHOUT_CLASSIFICATION	4.937369903640149E-6	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9999946005680658	WITHOUT_CLASSIFICATION	5.399431934217531E-6	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9999951087125655	WITHOUT_CLASSIFICATION	4.8912874345025286E-6	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9999901796692332	WITHOUT_CLASSIFICATION	9.820330766818805E-6	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9999603226888663	WITHOUT_CLASSIFICATION	3.967731113370959E-5	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9999815211282657	WITHOUT_CLASSIFICATION	1.8478871734411878E-5	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9999848543063493	WITHOUT_CLASSIFICATION	1.5145693650773794E-5	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999871201672822	WITHOUT_CLASSIFICATION	1.2879832717776625E-5	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9999990381996381	WITHOUT_CLASSIFICATION	9.618003619339334E-7	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999993466648381	WITHOUT_CLASSIFICATION	6.533351617934996E-7	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.999999729291426	WITHOUT_CLASSIFICATION	2.7070857398182043E-7	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999791352783789	WITHOUT_CLASSIFICATION	2.0864721621140534E-5	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.999997020441059	WITHOUT_CLASSIFICATION	2.9795589410219113E-6	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9997841416410157	WITHOUT_CLASSIFICATION	2.1585835898432114E-4	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999978342753585	WITHOUT_CLASSIFICATION	2.1657246415386344E-6	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999978342753585	WITHOUT_CLASSIFICATION	2.1657246415386344E-6	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.999997020441059	WITHOUT_CLASSIFICATION	2.9795589410219113E-6	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9999925928472835	WITHOUT_CLASSIFICATION	7.4071527165686064E-6	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999999657868069	WITHOUT_CLASSIFICATION	3.4213193167084755E-8	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999997663266724	WITHOUT_CLASSIFICATION	2.3367332765158123E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999996453127002	WITHOUT_CLASSIFICATION	3.546872997380318E-7	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999994463351048	WITHOUT_CLASSIFICATION	5.536648950968785E-7	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9999706210284823	WITHOUT_CLASSIFICATION	2.9378971517722036E-5	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999980160003503	WITHOUT_CLASSIFICATION	1.9839996497098427E-6	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9999986153548673	WITHOUT_CLASSIFICATION	1.3846451327136046E-6	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999995168137419	WITHOUT_CLASSIFICATION	4.83186258081745E-7	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999947782213442	WITHOUT_CLASSIFICATION	5.221778655818843E-6	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999221559836301	WITHOUT_CLASSIFICATION	7.78440163699362E-5	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999966123975619	WITHOUT_CLASSIFICATION	3.387602438172082E-6	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999995471913485	WITHOUT_CLASSIFICATION	4.528086515257429E-7	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9999995471913485	WITHOUT_CLASSIFICATION	4.528086515257429E-7	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.999993721332961	WITHOUT_CLASSIFICATION	6.27866703891178E-6	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9999994560709312	WITHOUT_CLASSIFICATION	5.43929068846622E-7	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9999991085523615	WITHOUT_CLASSIFICATION	8.914476383895991E-7	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999999918115384	WITHOUT_CLASSIFICATION	8.188461580409553E-9	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999999918115384	WITHOUT_CLASSIFICATION	8.188461580409553E-9	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999913081524322	WITHOUT_CLASSIFICATION	8.691847567860257E-6	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999913081524322	WITHOUT_CLASSIFICATION	8.691847567860257E-6	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999920924003599	WITHOUT_CLASSIFICATION	7.90759964009911E-6	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.999989702155569	WITHOUT_CLASSIFICATION	1.029784443091324E-5	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999940967046325	WITHOUT_CLASSIFICATION	5.903295367527652E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999950354893011	WITHOUT_CLASSIFICATION	4.964510698852189E-6	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999981399148268	WITHOUT_CLASSIFICATION	1.8600851732950208E-6	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999986077240965	WITHOUT_CLASSIFICATION	1.3922759034907812E-6	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.999999924718941	WITHOUT_CLASSIFICATION	7.52810590500499E-8	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999920924003599	WITHOUT_CLASSIFICATION	7.90759964009911E-6	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999999803290228	WITHOUT_CLASSIFICATION	1.967097721169391E-8	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.999989702155569	WITHOUT_CLASSIFICATION	1.029784443091324E-5	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999989611167969	WITHOUT_CLASSIFICATION	1.0388832031380307E-6	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999940967046325	WITHOUT_CLASSIFICATION	5.903295367527652E-6	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999950354893011	WITHOUT_CLASSIFICATION	4.964510698852189E-6	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999981399148268	WITHOUT_CLASSIFICATION	1.8600851732950208E-6	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999333883211777	WITHOUT_CLASSIFICATION	6.661167882233363E-5	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999996559383554	WITHOUT_CLASSIFICATION	3.4406164461877706E-7	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9999999065758897	WITHOUT_CLASSIFICATION	9.34241103374558E-8	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999997970031916	WITHOUT_CLASSIFICATION	2.029968083333166E-7	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9999998290835899	WITHOUT_CLASSIFICATION	1.7091641002133864E-7	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999996293368812	WITHOUT_CLASSIFICATION	3.706631188239388E-7	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999999916689054	WITHOUT_CLASSIFICATION	8.331094475373052E-9	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.999995103309906	WITHOUT_CLASSIFICATION	4.8966900939938835E-6	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999594717034693	WITHOUT_CLASSIFICATION	4.0528296530619384E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9999994944345828	WITHOUT_CLASSIFICATION	5.055654172936819E-7	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9999933529467268	WITHOUT_CLASSIFICATION	6.647053273320723E-6	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999988789214146	WITHOUT_CLASSIFICATION	1.1210785853587982E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.999997160673378	WITHOUT_CLASSIFICATION	2.8393266221096585E-6	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999904352480246	WITHOUT_CLASSIFICATION	9.564751975314911E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999658907006705	WITHOUT_CLASSIFICATION	3.41092993294362E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999908991564826	WITHOUT_CLASSIFICATION	9.10084351730079E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999831169115161	WITHOUT_CLASSIFICATION	1.6883088483943873E-5	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999975449090794	WITHOUT_CLASSIFICATION	2.4550909206815186E-6	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.999923725678918	WITHOUT_CLASSIFICATION	7.62743210819515E-5	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9999773875740398	WITHOUT_CLASSIFICATION	2.2612425960218076E-5	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9995263743012969	WITHOUT_CLASSIFICATION	4.73625698703172E-4	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999994153463558	WITHOUT_CLASSIFICATION	5.846536442200312E-7	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999985455994396	WITHOUT_CLASSIFICATION	1.454400560503299E-6	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9999988773650984	WITHOUT_CLASSIFICATION	1.1226349015258462E-6	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999994397496067	WITHOUT_CLASSIFICATION	5.602503933389544E-7	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999989640475019	WITHOUT_CLASSIFICATION	1.035952498124322E-6	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9999993401215875	WITHOUT_CLASSIFICATION	6.598784124725807E-7	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999999161876191	WITHOUT_CLASSIFICATION	8.381238089805064E-8	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999956230689448	WITHOUT_CLASSIFICATION	4.376931055114812E-6	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999996285093142	WITHOUT_CLASSIFICATION	3.714906857321354E-7	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999994463351048	WITHOUT_CLASSIFICATION	5.536648950968785E-7	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999524495361559	WITHOUT_CLASSIFICATION	4.755046384407E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999931532110515	WITHOUT_CLASSIFICATION	6.846788948419572E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999985099729303	WITHOUT_CLASSIFICATION	1.4900270697594023E-6	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9999999090035887	WITHOUT_CLASSIFICATION	9.099641131067072E-8	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999922652776883	WITHOUT_CLASSIFICATION	7.734722311675128E-6	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9999905141427832	WITHOUT_CLASSIFICATION	9.48585721683447E-6	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9999999872087402	WITHOUT_CLASSIFICATION	1.2791259892693234E-8	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.999999915843427	WITHOUT_CLASSIFICATION	8.415657313381347E-8	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9999962538431251	WITHOUT_CLASSIFICATION	3.746156874808647E-6	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999998705437003	WITHOUT_CLASSIFICATION	1.294562996965776E-7	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999984861260649	WITHOUT_CLASSIFICATION	1.5138739351495873E-6	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999999961684118	WITHOUT_CLASSIFICATION	3.831588120008898E-9	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999761677474338	WITHOUT_CLASSIFICATION	2.38322525661415E-5	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999998466316481	WITHOUT_CLASSIFICATION	1.5336835194393074E-7	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9999960432410366	WITHOUT_CLASSIFICATION	3.956758963357286E-6	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999999145356869	WITHOUT_CLASSIFICATION	8.546431308781634E-8	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9999999042990914	WITHOUT_CLASSIFICATION	9.570090864559566E-8	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9999988789214146	WITHOUT_CLASSIFICATION	1.1210785853587982E-6	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.999997160673378	WITHOUT_CLASSIFICATION	2.8393266221096585E-6	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9999904352480246	WITHOUT_CLASSIFICATION	9.564751975314911E-6	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999658907006705	WITHOUT_CLASSIFICATION	3.41092993294362E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9999908991564826	WITHOUT_CLASSIFICATION	9.10084351730079E-6	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9999831169115161	WITHOUT_CLASSIFICATION	1.6883088483943873E-5	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999972720270345	WITHOUT_CLASSIFICATION	2.7279729654813286E-6	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9999975449090794	WITHOUT_CLASSIFICATION	2.4550909206815186E-6	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9999999161876191	WITHOUT_CLASSIFICATION	8.381238089805064E-8	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9999956230689448	WITHOUT_CLASSIFICATION	4.376931055114812E-6	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9999996285093142	WITHOUT_CLASSIFICATION	3.714906857321354E-7	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999993502893791	WITHOUT_CLASSIFICATION	6.497106208443298E-7	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999993502893791	WITHOUT_CLASSIFICATION	6.497106208443298E-7	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9999524495361559	WITHOUT_CLASSIFICATION	4.755046384407E-5	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9999931532110515	WITHOUT_CLASSIFICATION	6.846788948419572E-6	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999985099729303	WITHOUT_CLASSIFICATION	1.4900270697594023E-6	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.999998873692719	WITHOUT_CLASSIFICATION	1.1263072809823516E-6	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.999833822257174	WITHOUT_CLASSIFICATION	1.661777428261104E-4	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9999987561180153	WITHOUT_CLASSIFICATION	1.2438819848285866E-6	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999997851146601	WITHOUT_CLASSIFICATION	2.1488533982053158E-7	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9999913632437419	WITHOUT_CLASSIFICATION	8.636756258071689E-6	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9999830350740493	WITHOUT_CLASSIFICATION	1.6964925950741712E-5	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9999991313786536	WITHOUT_CLASSIFICATION	8.6862134633184E-7	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999976540492085	WITHOUT_CLASSIFICATION	2.345950791576741E-6	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9998840738604072	WITHOUT_CLASSIFICATION	1.1592613959277334E-4	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999997492672253	WITHOUT_CLASSIFICATION	2.507327746689508E-7	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999904089264238	WITHOUT_CLASSIFICATION	9.59107357626012E-6	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999148339139025	WITHOUT_CLASSIFICATION	8.516608609753941E-5	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999994035517402	WITHOUT_CLASSIFICATION	5.964482598548549E-7	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9999995741908233	WITHOUT_CLASSIFICATION	4.2580917670262707E-7	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999999384005918	WITHOUT_CLASSIFICATION	6.159940819645575E-8	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999999326837362	WITHOUT_CLASSIFICATION	6.731626371911594E-8	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999989425660338	WITHOUT_CLASSIFICATION	1.05743396619183E-6	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999989755354529	WITHOUT_CLASSIFICATION	1.0244645471518676E-6	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999911504759575	WITHOUT_CLASSIFICATION	8.849524042489664E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999991002701709	WITHOUT_CLASSIFICATION	8.997298290297375E-7	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9999974059373976	WITHOUT_CLASSIFICATION	2.594062602434304E-6	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999997211313777	WITHOUT_CLASSIFICATION	2.7886862226375207E-7	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9999996312809185	WITHOUT_CLASSIFICATION	3.6871908140087516E-7	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999999585365581	WITHOUT_CLASSIFICATION	4.146344188626839E-8	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999999942580446	WITHOUT_CLASSIFICATION	5.7419554265885215E-9	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9999699856013857	WITHOUT_CLASSIFICATION	3.001439861430218E-5	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999966594709074	WITHOUT_CLASSIFICATION	3.3405290926350135E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999567281158065	WITHOUT_CLASSIFICATION	4.3271884193508307E-5	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9999051973366833	WITHOUT_CLASSIFICATION	9.480266331672382E-5	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999937125263303	WITHOUT_CLASSIFICATION	6.287473669660177E-6	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9993955317531164	WITHOUT_CLASSIFICATION	6.044682468837382E-4	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999998637168892	WITHOUT_CLASSIFICATION	1.3628311077893976E-7	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999999377678781	WITHOUT_CLASSIFICATION	6.223212187896938E-8	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999494234961129	WITHOUT_CLASSIFICATION	5.05765038870004E-5	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9999989611167969	WITHOUT_CLASSIFICATION	1.0388832031380307E-6	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999999749299066	WITHOUT_CLASSIFICATION	2.5070093539942292E-8	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9999999495064007	WITHOUT_CLASSIFICATION	5.049359922605493E-8	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.999992186688004	WITHOUT_CLASSIFICATION	7.813311995929646E-6	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9999938990710092	WITHOUT_CLASSIFICATION	6.1009289907785315E-6	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9999366468973769	WITHOUT_CLASSIFICATION	6.335310262306125E-5	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9999935183827304	WITHOUT_CLASSIFICATION	6.481617269616179E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999951278636393	WITHOUT_CLASSIFICATION	4.872136360626988E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999951278636393	WITHOUT_CLASSIFICATION	4.872136360626988E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999951278636393	WITHOUT_CLASSIFICATION	4.872136360626988E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999951278636393	WITHOUT_CLASSIFICATION	4.872136360626988E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999951278636393	WITHOUT_CLASSIFICATION	4.872136360626988E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999951278636393	WITHOUT_CLASSIFICATION	4.872136360626988E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999985030039416	WITHOUT_CLASSIFICATION	1.4969960584773364E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999977674658134	WITHOUT_CLASSIFICATION	2.2325341866540157E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999910797550452	WITHOUT_CLASSIFICATION	8.920244954774339E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999910797550452	WITHOUT_CLASSIFICATION	8.920244954774339E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999910797550452	WITHOUT_CLASSIFICATION	8.920244954774339E-6	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999999824771688	WITHOUT_CLASSIFICATION	1.7522831164202753E-8	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999975797331953	WITHOUT_CLASSIFICATION	2.420266804747927E-6	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9999980610278416	WITHOUT_CLASSIFICATION	1.9389721583968663E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999978458681777	WITHOUT_CLASSIFICATION	2.154131822189906E-6	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9999978458681777	WITHOUT_CLASSIFICATION	2.154131822189906E-6	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999999233777956	WITHOUT_CLASSIFICATION	7.662220445597152E-8	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9999997480163533	WITHOUT_CLASSIFICATION	2.5198364674742034E-7	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999966600975556	WITHOUT_CLASSIFICATION	3.3399024443037155E-6	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9999981469259113	WITHOUT_CLASSIFICATION	1.853074088750563E-6	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9999764417375504	WITHOUT_CLASSIFICATION	2.3558262449615595E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998106109004	WITHOUT_CLASSIFICATION	1.8938909956387128E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998106109004	WITHOUT_CLASSIFICATION	1.8938909956387128E-7	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999998106109004	WITHOUT_CLASSIFICATION	1.8938909956387128E-7	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999992932516012	WITHOUT_CLASSIFICATION	7.067483987515563E-7	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999978978913013	WITHOUT_CLASSIFICATION	2.102108698638087E-6	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999994270103818	WITHOUT_CLASSIFICATION	5.729896181981607E-7	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.999999989162226	WITHOUT_CLASSIFICATION	1.083777405130735E-8	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999930842163138	WITHOUT_CLASSIFICATION	6.915783686263223E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999930842163138	WITHOUT_CLASSIFICATION	6.915783686263223E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999930842163138	WITHOUT_CLASSIFICATION	6.915783686263223E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999930842163138	WITHOUT_CLASSIFICATION	6.915783686263223E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999930842163138	WITHOUT_CLASSIFICATION	6.915783686263223E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999930842163138	WITHOUT_CLASSIFICATION	6.915783686263223E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999930842163138	WITHOUT_CLASSIFICATION	6.915783686263223E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999930842163138	WITHOUT_CLASSIFICATION	6.915783686263223E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999930842163138	WITHOUT_CLASSIFICATION	6.915783686263223E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999930842163138	WITHOUT_CLASSIFICATION	6.915783686263223E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999930842163138	WITHOUT_CLASSIFICATION	6.915783686263223E-6	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999930842163138	WITHOUT_CLASSIFICATION	6.915783686263223E-6	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.999980754524577	WITHOUT_CLASSIFICATION	1.9245475422974683E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999685093481512	WITHOUT_CLASSIFICATION	3.1490651848904225E-5	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999685093481512	WITHOUT_CLASSIFICATION	3.1490651848904225E-5	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999999570262401	WITHOUT_CLASSIFICATION	4.2973759834863186E-8	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9999978938005395	WITHOUT_CLASSIFICATION	2.1061994605487503E-6	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9999980424273544	WITHOUT_CLASSIFICATION	1.957572645666006E-6	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9999971936305415	WITHOUT_CLASSIFICATION	2.8063694584852003E-6	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9999934824118506	WITHOUT_CLASSIFICATION	6.517588149368304E-6	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9999990211205242	WITHOUT_CLASSIFICATION	9.788794758013174E-7	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.999997036086051	WITHOUT_CLASSIFICATION	2.963913949089497E-6	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.999998782755137	WITHOUT_CLASSIFICATION	1.2172448630003322E-6	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9999997881895938	WITHOUT_CLASSIFICATION	2.1181040618436657E-7	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999999937836115	WITHOUT_CLASSIFICATION	6.216388490707722E-9	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999986177741951	WITHOUT_CLASSIFICATION	1.3822258050200749E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999986177741951	WITHOUT_CLASSIFICATION	1.3822258050200749E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999986177741951	WITHOUT_CLASSIFICATION	1.3822258050200749E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999986177741951	WITHOUT_CLASSIFICATION	1.3822258050200749E-6	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999986177741951	WITHOUT_CLASSIFICATION	1.3822258050200749E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999974956117038	WITHOUT_CLASSIFICATION	2.5043882962735E-6	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999372880178637	WITHOUT_CLASSIFICATION	6.271198213626159E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999372880178637	WITHOUT_CLASSIFICATION	6.271198213626159E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999372880178637	WITHOUT_CLASSIFICATION	6.271198213626159E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9999372880178637	WITHOUT_CLASSIFICATION	6.271198213626159E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9999961822697432	WITHOUT_CLASSIFICATION	3.817730256722376E-6	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999990181103131	WITHOUT_CLASSIFICATION	9.818896868961741E-7	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.7315767620543417	WITHOUT_CLASSIFICATION	0.26842323794565814	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9999996765976539	WITHOUT_CLASSIFICATION	3.2340234619925316E-7	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999982448457088	WITHOUT_CLASSIFICATION	1.7551542913357033E-6	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9999441630593459	WITHOUT_CLASSIFICATION	5.58369406541556E-5	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9999977894152444	WITHOUT_CLASSIFICATION	2.21058475553979E-6	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9999996600715656	WITHOUT_CLASSIFICATION	3.399284344425531E-7	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999999309336555	WITHOUT_CLASSIFICATION	6.90663444943976E-8	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999821465551527	WITHOUT_CLASSIFICATION	1.785344484727734E-5	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9999872063315299	WITHOUT_CLASSIFICATION	1.2793668469978093E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999867266700316	WITHOUT_CLASSIFICATION	1.3273329968365694E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.999984858249519	WITHOUT_CLASSIFICATION	1.5141750480986993E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999984007672031	WITHOUT_CLASSIFICATION	1.599232796901203E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999984007672031	WITHOUT_CLASSIFICATION	1.599232796901203E-6	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999984007672031	WITHOUT_CLASSIFICATION	1.599232796901203E-6	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999998109758435	WITHOUT_CLASSIFICATION	1.890241565564873E-7	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9999998109758435	WITHOUT_CLASSIFICATION	1.890241565564873E-7	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999994930842883	WITHOUT_CLASSIFICATION	5.069157117066213E-6	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999988427934907	WITHOUT_CLASSIFICATION	1.1572065091958742E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999999998437422	WITHOUT_CLASSIFICATION	1.5625771192214768E-10	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999960853046053	WITHOUT_CLASSIFICATION	3.914695394688032E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999960853046053	WITHOUT_CLASSIFICATION	3.914695394688032E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999960853046053	WITHOUT_CLASSIFICATION	3.914695394688032E-6	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999988951432668	WITHOUT_CLASSIFICATION	1.1048567332292252E-6	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9999966252543745	WITHOUT_CLASSIFICATION	3.3747456256171167E-6	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9999995213507017	WITHOUT_CLASSIFICATION	4.786492982468385E-7	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999960769572213	WITHOUT_CLASSIFICATION	3.9230427787831585E-6	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9999792477601078	WITHOUT_CLASSIFICATION	2.075223989210938E-5	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9999920853989783	WITHOUT_CLASSIFICATION	7.9146010216549E-6	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9999999955770617	WITHOUT_CLASSIFICATION	4.42293828042084E-9	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999999455329152	WITHOUT_CLASSIFICATION	5.4467084903793506E-8	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.99972275676494	WITHOUT_CLASSIFICATION	2.772432350598789E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999591657428365	WITHOUT_CLASSIFICATION	4.0834257163501977E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.999591657428365	WITHOUT_CLASSIFICATION	4.0834257163501977E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.7124522524836169	DEFECT	0.2875477475163831	WITHOUT_CLASSIFICATION
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9999902800662824	WITHOUT_CLASSIFICATION	9.719933717535837E-6	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996699579926	WITHOUT_CLASSIFICATION	3.300420073935562E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996699579926	WITHOUT_CLASSIFICATION	3.300420073935562E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996699579926	WITHOUT_CLASSIFICATION	3.300420073935562E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996699579926	WITHOUT_CLASSIFICATION	3.300420073935562E-7	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9999996699579926	WITHOUT_CLASSIFICATION	3.300420073935562E-7	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999999734496793	WITHOUT_CLASSIFICATION	2.6550320703389678E-8	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.999502682822191	WITHOUT_CLASSIFICATION	4.973171778089571E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.99999798739852	WITHOUT_CLASSIFICATION	2.0126014800621433E-6	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999999875639699	WITHOUT_CLASSIFICATION	1.2436030147432607E-8	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999990974775641	WITHOUT_CLASSIFICATION	9.025224359360531E-7	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999997757362747	WITHOUT_CLASSIFICATION	2.2426372528277188E-7	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9999999284911928	WITHOUT_CLASSIFICATION	7.150880715876957E-8	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999996754873267	WITHOUT_CLASSIFICATION	3.245126733608243E-7	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999100698030607	WITHOUT_CLASSIFICATION	8.993019693936816E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9999100698030607	WITHOUT_CLASSIFICATION	8.993019693936816E-5	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.999999862971616	WITHOUT_CLASSIFICATION	1.370283839578707E-7	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9999976938371811	WITHOUT_CLASSIFICATION	2.306162818880027E-6	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999858482864714	WITHOUT_CLASSIFICATION	1.4151713528619689E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999858482864714	WITHOUT_CLASSIFICATION	1.4151713528619689E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999998219099231	WITHOUT_CLASSIFICATION	1.7809007682013257E-7	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9999988594183482	WITHOUT_CLASSIFICATION	1.1405816517399523E-6	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999977279135601	WITHOUT_CLASSIFICATION	2.272086439871812E-6	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9999989798872114	WITHOUT_CLASSIFICATION	1.0201127885869326E-6	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.999988491245448	WITHOUT_CLASSIFICATION	1.150875455213909E-5	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999999967271	WITHOUT_CLASSIFICATION	3.2729000366200857E-9	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999995614810929	WITHOUT_CLASSIFICATION	4.3851890704418356E-7	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.999969669407215	WITHOUT_CLASSIFICATION	3.0330592784948057E-5	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9992220739746338	WITHOUT_CLASSIFICATION	7.77926025366164E-4	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999999618960728	WITHOUT_CLASSIFICATION	3.8103927243530676E-8	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999997254360711	WITHOUT_CLASSIFICATION	2.7456392889799034E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999997254360711	WITHOUT_CLASSIFICATION	2.7456392889799034E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999997254360711	WITHOUT_CLASSIFICATION	2.7456392889799034E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999997254360711	WITHOUT_CLASSIFICATION	2.7456392889799034E-6	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999803396576344	WITHOUT_CLASSIFICATION	1.966034236560816E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999803396576344	WITHOUT_CLASSIFICATION	1.966034236560816E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999803396576344	WITHOUT_CLASSIFICATION	1.966034236560816E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999803396576344	WITHOUT_CLASSIFICATION	1.966034236560816E-5	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.992025263146298	WITHOUT_CLASSIFICATION	0.007974736853701954	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999996296457129	WITHOUT_CLASSIFICATION	3.7035428704625215E-7	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999967677541869	WITHOUT_CLASSIFICATION	3.232245813119404E-6	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999999735254105	WITHOUT_CLASSIFICATION	2.647458955817852E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999983657051837	WITHOUT_CLASSIFICATION	1.6342948163418218E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999983657051837	WITHOUT_CLASSIFICATION	1.6342948163418218E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999983657051837	WITHOUT_CLASSIFICATION	1.6342948163418218E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999983657051837	WITHOUT_CLASSIFICATION	1.6342948163418218E-6	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9971944101343321	WITHOUT_CLASSIFICATION	0.002805589865667944	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999999649403976	WITHOUT_CLASSIFICATION	3.5059602372572534E-8	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999999435505224	WITHOUT_CLASSIFICATION	5.644947764857552E-8	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999997063814577	WITHOUT_CLASSIFICATION	2.9361854230302044E-7	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9999999959876912	WITHOUT_CLASSIFICATION	4.012308843418454E-9	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9983124145110754	WITHOUT_CLASSIFICATION	0.0016875854889244744	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999999784329778	WITHOUT_CLASSIFICATION	2.1567022078242985E-8	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999826588091902	WITHOUT_CLASSIFICATION	1.7341190809779603E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9999826588091902	WITHOUT_CLASSIFICATION	1.7341190809779603E-5	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9999999082049099	WITHOUT_CLASSIFICATION	9.179509006761289E-8	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9999976517254525	WITHOUT_CLASSIFICATION	2.348274547567872E-6	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9997198055010992	WITHOUT_CLASSIFICATION	2.80194498900845E-4	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.999999591480944	WITHOUT_CLASSIFICATION	4.0851905603987606E-7	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9999992186644402	WITHOUT_CLASSIFICATION	7.813355596723867E-7	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9999999327784016	WITHOUT_CLASSIFICATION	6.722159839553873E-8	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9999939735084112	WITHOUT_CLASSIFICATION	6.0264915887718E-6	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999999368966012	WITHOUT_CLASSIFICATION	6.31033987792862E-8	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9999999985079583	WITHOUT_CLASSIFICATION	1.4920416386322397E-9	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999957049436046	WITHOUT_CLASSIFICATION	4.295056395366091E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999994195165428	WITHOUT_CLASSIFICATION	5.804834572007178E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999994195165428	WITHOUT_CLASSIFICATION	5.804834572007178E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999994195165428	WITHOUT_CLASSIFICATION	5.804834572007178E-7	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999999994815775	WITHOUT_CLASSIFICATION	5.18422436262107E-10	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999992711334256	WITHOUT_CLASSIFICATION	7.28866574338299E-7	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999999888944715	WITHOUT_CLASSIFICATION	1.1105528489963006E-8	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.999968572051804	WITHOUT_CLASSIFICATION	3.142794819599747E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.999968572051804	WITHOUT_CLASSIFICATION	3.142794819599747E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999971655589368	WITHOUT_CLASSIFICATION	2.8344410631887515E-6	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999989870040691	WITHOUT_CLASSIFICATION	1.0129959308696772E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9999839018335683	WITHOUT_CLASSIFICATION	1.6098166431606483E-5	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9999968363727124	WITHOUT_CLASSIFICATION	3.1636272875032876E-6	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999910485096425	WITHOUT_CLASSIFICATION	8.951490357480326E-6	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9999952850130099	WITHOUT_CLASSIFICATION	4.714986990075898E-6	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999996600986186	WITHOUT_CLASSIFICATION	3.399013813389741E-7	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9999999113976775	WITHOUT_CLASSIFICATION	8.860232243648253E-8	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999843670363688	WITHOUT_CLASSIFICATION	1.5632963631230358E-5	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999999924194385	WITHOUT_CLASSIFICATION	7.580561447983021E-9	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999967953689978	WITHOUT_CLASSIFICATION	3.204631002189096E-6	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999143862207389	WITHOUT_CLASSIFICATION	8.561377926108495E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999143862207389	WITHOUT_CLASSIFICATION	8.561377926108495E-5	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999982141492596	WITHOUT_CLASSIFICATION	1.7858507403129945E-6	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999999960675856	WITHOUT_CLASSIFICATION	3.932414410776635E-9	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9999992227628456	WITHOUT_CLASSIFICATION	7.77237154551172E-7	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999963896909212	WITHOUT_CLASSIFICATION	3.610309078817585E-6	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999994328086848	WITHOUT_CLASSIFICATION	5.671913152866388E-7	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.999941944948144	WITHOUT_CLASSIFICATION	5.8055051855861496E-5	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999998438719118	WITHOUT_CLASSIFICATION	1.561280882848967E-7	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999998358390187	WITHOUT_CLASSIFICATION	1.641609811877401E-7	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.999998373689605	WITHOUT_CLASSIFICATION	1.6263103949645251E-6	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999998384951403	WITHOUT_CLASSIFICATION	1.6150485965326144E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999994195165428	WITHOUT_CLASSIFICATION	5.804834572007178E-7	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999999270715124	WITHOUT_CLASSIFICATION	7.292848758492969E-8	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999998896904664	WITHOUT_CLASSIFICATION	1.103095335693263E-7	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999991819755865	WITHOUT_CLASSIFICATION	8.180244135218934E-7	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999999842148737	WITHOUT_CLASSIFICATION	1.5785126297217878E-8	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999999448280474	WITHOUT_CLASSIFICATION	5.517195248835831E-8	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.99999972661947	WITHOUT_CLASSIFICATION	2.733805299359099E-7	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999988411687039	WITHOUT_CLASSIFICATION	1.1588312960873844E-6	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9999962058898777	WITHOUT_CLASSIFICATION	3.794110122213677E-6	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999986272529799	WITHOUT_CLASSIFICATION	1.372747020084077E-6	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999995559703948	WITHOUT_CLASSIFICATION	4.4402960517724115E-7	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999997884888618	WITHOUT_CLASSIFICATION	2.1151113822295375E-7	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999998981819728	WITHOUT_CLASSIFICATION	1.0181802717533864E-7	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999603845844303	WITHOUT_CLASSIFICATION	3.961541556976697E-5	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999996069071432	WITHOUT_CLASSIFICATION	3.930928568758828E-7	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9998487453710336	WITHOUT_CLASSIFICATION	1.5125462896644923E-4	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999999942901269	WITHOUT_CLASSIFICATION	5.709873078997989E-9	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9997989381250294	WITHOUT_CLASSIFICATION	2.010618749705286E-4	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9999992021959211	WITHOUT_CLASSIFICATION	7.978040789355157E-7	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999999238338362	WITHOUT_CLASSIFICATION	7.616616375179033E-8	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999998312279754	WITHOUT_CLASSIFICATION	1.6877202459046006E-7	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999999869719691	WITHOUT_CLASSIFICATION	1.302803086043374E-8	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999998435999026	WITHOUT_CLASSIFICATION	1.564000974360688E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999998435999026	WITHOUT_CLASSIFICATION	1.564000974360688E-7	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999998435999026	WITHOUT_CLASSIFICATION	1.564000974360688E-7	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999999834344557	WITHOUT_CLASSIFICATION	1.6565544278890175E-8	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999874931823091	WITHOUT_CLASSIFICATION	1.2506817690890667E-5	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999996507460486	WITHOUT_CLASSIFICATION	3.4925395142826083E-7	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.999987285166269	WITHOUT_CLASSIFICATION	1.2714833731044143E-5	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.9999975643289497	WITHOUT_CLASSIFICATION	2.435671050304692E-6	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.996705346102444	WITHOUT_CLASSIFICATION	0.0032946538975560506	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.999999977683185	WITHOUT_CLASSIFICATION	2.2316814873569968E-8	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999324846860446	WITHOUT_CLASSIFICATION	6.751531395543819E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999993464512669	WITHOUT_CLASSIFICATION	6.535487331156371E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999993464512669	WITHOUT_CLASSIFICATION	6.535487331156371E-7	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999993464512669	WITHOUT_CLASSIFICATION	6.535487331156371E-7	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999996955808205	WITHOUT_CLASSIFICATION	3.04419179526777E-7	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999998744383674	WITHOUT_CLASSIFICATION	1.2556163269852545E-7	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999996465771217	WITHOUT_CLASSIFICATION	3.534228782181149E-7	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999998091857771	WITHOUT_CLASSIFICATION	1.9081422277193147E-7	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9999999862956754	WITHOUT_CLASSIFICATION	1.3704324591103316E-8	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.999991511025668	WITHOUT_CLASSIFICATION	8.488974332082454E-6	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999995947301881	WITHOUT_CLASSIFICATION	4.0526981193592194E-7	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999986633513702	WITHOUT_CLASSIFICATION	1.336648629812156E-6	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9999998797201676	WITHOUT_CLASSIFICATION	1.2027983234015643E-7	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999872839009961	WITHOUT_CLASSIFICATION	1.2716099003992104E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999996374587521	WITHOUT_CLASSIFICATION	3.625412478699229E-7	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999989425660338	WITHOUT_CLASSIFICATION	1.05743396619183E-6	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999989425660338	WITHOUT_CLASSIFICATION	1.05743396619183E-6	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.999999995105469	WITHOUT_CLASSIFICATION	4.894531004671717E-9	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9999995904319259	WITHOUT_CLASSIFICATION	4.0956807421451753E-7	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9999990822153855	WITHOUT_CLASSIFICATION	9.177846146749911E-7	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999999235069361	WITHOUT_CLASSIFICATION	7.649306391849244E-8	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999988503277102	WITHOUT_CLASSIFICATION	1.1496722898484487E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999994195165428	WITHOUT_CLASSIFICATION	5.804834572007178E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999994195165428	WITHOUT_CLASSIFICATION	5.804834572007178E-7	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999974956117038	WITHOUT_CLASSIFICATION	2.5043882962735E-6	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999995713760617	WITHOUT_CLASSIFICATION	4.286239383463856E-7	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999995713760617	WITHOUT_CLASSIFICATION	4.286239383463856E-7	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.99999865299946	WITHOUT_CLASSIFICATION	1.3470005399669314E-6	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999921549287535	WITHOUT_CLASSIFICATION	7.845071246620303E-6	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999997053882074	WITHOUT_CLASSIFICATION	2.946117926275651E-7	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999974478744852	WITHOUT_CLASSIFICATION	2.5521255148067034E-5	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.999999923920986	WITHOUT_CLASSIFICATION	7.60790140175665E-8	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999999848457871	WITHOUT_CLASSIFICATION	1.5154212900364884E-8	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999800488633681	WITHOUT_CLASSIFICATION	1.9951136631918903E-5	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999960255219387	WITHOUT_CLASSIFICATION	3.974478061376514E-6	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9999842209544814	WITHOUT_CLASSIFICATION	1.577904551861705E-5	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9999994284614847	WITHOUT_CLASSIFICATION	5.715385153449108E-7	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999991621281558	WITHOUT_CLASSIFICATION	8.378718442332538E-7	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999999987584395	WITHOUT_CLASSIFICATION	1.2415605676404301E-9	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9999586929643968	WITHOUT_CLASSIFICATION	4.130703560314242E-5	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999998866187466	WITHOUT_CLASSIFICATION	1.1338125328990177E-7	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999966709092523	WITHOUT_CLASSIFICATION	3.329090747821587E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999966709092523	WITHOUT_CLASSIFICATION	3.329090747821587E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999966709092523	WITHOUT_CLASSIFICATION	3.329090747821587E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9999966709092523	WITHOUT_CLASSIFICATION	3.329090747821587E-6	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9999998386464171	WITHOUT_CLASSIFICATION	1.6135358298718548E-7	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9999999936325468	WITHOUT_CLASSIFICATION	6.367453307166965E-9	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9822379603118767	WITHOUT_CLASSIFICATION	0.017762039688123257	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999895378200911	WITHOUT_CLASSIFICATION	1.0462179908734097E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9999999891915891	WITHOUT_CLASSIFICATION	1.0808411002584164E-8	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999994195165428	WITHOUT_CLASSIFICATION	5.804834572007178E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999994195165428	WITHOUT_CLASSIFICATION	5.804834572007178E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999994195165428	WITHOUT_CLASSIFICATION	5.804834572007178E-7	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9999994195165428	WITHOUT_CLASSIFICATION	5.804834572007178E-7	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999996035119468	WITHOUT_CLASSIFICATION	3.964880531270628E-7	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9999921549287535	WITHOUT_CLASSIFICATION	7.845071246620303E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.999997304694373	WITHOUT_CLASSIFICATION	2.695305627141632E-6	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.999997304694373	WITHOUT_CLASSIFICATION	2.695305627141632E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999961065818415	WITHOUT_CLASSIFICATION	3.8934181584958506E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999952005737373	WITHOUT_CLASSIFICATION	4.799426262742222E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999952005737373	WITHOUT_CLASSIFICATION	4.799426262742222E-6	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999952005737373	WITHOUT_CLASSIFICATION	4.799426262742222E-6	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.999999483269906	WITHOUT_CLASSIFICATION	5.167300941336901E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999271940659744	WITHOUT_CLASSIFICATION	7.280593402561921E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999912407890363	WITHOUT_CLASSIFICATION	8.759210963659038E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999912407890363	WITHOUT_CLASSIFICATION	8.759210963659038E-6	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9999912407890363	WITHOUT_CLASSIFICATION	8.759210963659038E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980580444668	WITHOUT_CLASSIFICATION	1.9419555331218187E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999980580444668	WITHOUT_CLASSIFICATION	1.9419555331218187E-6	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999999722817264	WITHOUT_CLASSIFICATION	2.771827347706017E-8	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.999999483269906	WITHOUT_CLASSIFICATION	5.167300941336901E-7	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998340736245515	WITHOUT_CLASSIFICATION	1.659263754486735E-4	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999997959308082	WITHOUT_CLASSIFICATION	2.040691918578196E-7	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999992535211173	WITHOUT_CLASSIFICATION	7.464788826546509E-7	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999996251376855	WITHOUT_CLASSIFICATION	3.748623145418206E-7	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999998104146736	WITHOUT_CLASSIFICATION	1.8958532649319537E-7	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9999593447557361	WITHOUT_CLASSIFICATION	4.065524426386861E-5	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9999993552717461	WITHOUT_CLASSIFICATION	6.447282538520557E-7	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9999091829609523	WITHOUT_CLASSIFICATION	9.081703904764131E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999742178301347	WITHOUT_CLASSIFICATION	2.5782169865140283E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9999742178301347	WITHOUT_CLASSIFICATION	2.5782169865140283E-5	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9995019018145089	WITHOUT_CLASSIFICATION	4.980981854911575E-4	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9999994499945203	WITHOUT_CLASSIFICATION	5.500054796754329E-7	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999989224581418	WITHOUT_CLASSIFICATION	1.0775418581573157E-6	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999999959407746	WITHOUT_CLASSIFICATION	4.0592253704726424E-9	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999998366942504	WITHOUT_CLASSIFICATION	1.633057495954882E-7	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9879877458767885	WITHOUT_CLASSIFICATION	0.012012254123211445	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9999883940783871	WITHOUT_CLASSIFICATION	1.1605921612857713E-5	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.999997137742013	WITHOUT_CLASSIFICATION	2.8622579868283516E-6	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999985628497287	WITHOUT_CLASSIFICATION	1.4371502714204467E-6	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999990501138399	WITHOUT_CLASSIFICATION	9.498861600380035E-7	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9999945767846664	WITHOUT_CLASSIFICATION	5.42321533359044E-6	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999961065818415	WITHOUT_CLASSIFICATION	3.8934181584958506E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999961065818415	WITHOUT_CLASSIFICATION	3.8934181584958506E-5	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999999982190589	WITHOUT_CLASSIFICATION	1.780940962132857E-9	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9999963886367987	WITHOUT_CLASSIFICATION	3.611363201256071E-6	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999986695529103	WITHOUT_CLASSIFICATION	1.3304470896722691E-6	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999998067318412	WITHOUT_CLASSIFICATION	1.9326815884349097E-7	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999998942749432	WITHOUT_CLASSIFICATION	1.0572505679902765E-7	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999995849302971	WITHOUT_CLASSIFICATION	4.1506970303320116E-7	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.999999997661238	WITHOUT_CLASSIFICATION	2.3387620016924886E-9	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999998426680804	WITHOUT_CLASSIFICATION	1.5733191961273394E-7	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999999862470659	WITHOUT_CLASSIFICATION	1.3752934070381861E-8	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.999999970520413	WITHOUT_CLASSIFICATION	2.947958697501105E-8	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999649147463657	WITHOUT_CLASSIFICATION	3.508525363427449E-5	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999997248900017	WITHOUT_CLASSIFICATION	2.7510999839653585E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999922652776883	WITHOUT_CLASSIFICATION	7.734722311675128E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999922652776883	WITHOUT_CLASSIFICATION	7.734722311675128E-6	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999828226270525	WITHOUT_CLASSIFICATION	1.7177372947396576E-5	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999999729641236	WITHOUT_CLASSIFICATION	2.703587643004438E-8	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999824574992682	WITHOUT_CLASSIFICATION	1.7542500731898395E-5	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999999709912568	WITHOUT_CLASSIFICATION	2.9008743191172632E-8	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999995523237004	WITHOUT_CLASSIFICATION	4.4767629956881446E-7	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999999512124044	WITHOUT_CLASSIFICATION	4.8787595605035574E-8	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999987441054262	WITHOUT_CLASSIFICATION	1.2558945738629278E-6	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9999550425740815	WITHOUT_CLASSIFICATION	4.495742591859156E-5	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.999989695445539	WITHOUT_CLASSIFICATION	1.0304554461116243E-5	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9999969949425096	WITHOUT_CLASSIFICATION	3.0050574903511036E-6	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999995828944095	WITHOUT_CLASSIFICATION	4.1710559044106954E-7	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.999999824937704	WITHOUT_CLASSIFICATION	1.7506229584434478E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999999573789853	WITHOUT_CLASSIFICATION	4.262101468577964E-8	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999790428781096	WITHOUT_CLASSIFICATION	2.0957121890424216E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999996035119468	WITHOUT_CLASSIFICATION	3.964880531270628E-7	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.974808720166365	WITHOUT_CLASSIFICATION	0.025191279833635054	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9935816502223865	WITHOUT_CLASSIFICATION	0.006418349777613549	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9935816502223865	WITHOUT_CLASSIFICATION	0.006418349777613549	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9935816502223865	WITHOUT_CLASSIFICATION	0.006418349777613549	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999889941929407	WITHOUT_CLASSIFICATION	1.1005807059173123E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999889941929407	WITHOUT_CLASSIFICATION	1.1005807059173123E-5	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999979787410569	WITHOUT_CLASSIFICATION	2.0212589431249813E-6	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.7631877531345045	WITHOUT_CLASSIFICATION	0.23681224686549557	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999998343601467	WITHOUT_CLASSIFICATION	1.6563985334317798E-7	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999981776174267	WITHOUT_CLASSIFICATION	1.8223825732494594E-6	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9999997104077198	WITHOUT_CLASSIFICATION	2.8959228015102285E-7	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999985473635585	WITHOUT_CLASSIFICATION	1.4526364414320224E-6	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9999996035119468	WITHOUT_CLASSIFICATION	3.964880531270628E-7	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999999908261419	WITHOUT_CLASSIFICATION	9.173857995995355E-9	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.999999335342222	WITHOUT_CLASSIFICATION	6.646577780353143E-7	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9999962384098814	WITHOUT_CLASSIFICATION	3.7615901187047078E-6	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9993090187774929	WITHOUT_CLASSIFICATION	6.909812225071224E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999995208040279	WITHOUT_CLASSIFICATION	4.791959721137255E-7	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999961938474702	WITHOUT_CLASSIFICATION	3.8061525298875577E-6	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9999991427397369	WITHOUT_CLASSIFICATION	8.572602631134683E-7	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999994552436191	WITHOUT_CLASSIFICATION	5.447563808880339E-7	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9999992686312938	WITHOUT_CLASSIFICATION	7.313687060127119E-7	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999821971282439	WITHOUT_CLASSIFICATION	1.780287175612392E-5	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999640507684802	WITHOUT_CLASSIFICATION	3.594923151984636E-5	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9999992027780407	WITHOUT_CLASSIFICATION	7.972219592313564E-7	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999999827612048	WITHOUT_CLASSIFICATION	1.7238795171813917E-8	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999888511447551	WITHOUT_CLASSIFICATION	1.1148855244824277E-5	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9999987238722242	WITHOUT_CLASSIFICATION	1.2761277757746913E-6	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.999999397160827	WITHOUT_CLASSIFICATION	6.028391730017747E-7	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999999235517838	WITHOUT_CLASSIFICATION	7.644821628896037E-8	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999998663320535	WITHOUT_CLASSIFICATION	1.3366794648999148E-7	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999998663320535	WITHOUT_CLASSIFICATION	1.3366794648999148E-7	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9999936899845966	WITHOUT_CLASSIFICATION	6.310015403411716E-6	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999986501748366	WITHOUT_CLASSIFICATION	1.3498251634589835E-6	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999978156357812	WITHOUT_CLASSIFICATION	2.184364218813275E-6	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.999047756394928	WITHOUT_CLASSIFICATION	9.522436050719569E-4	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9998665937783816	WITHOUT_CLASSIFICATION	1.3340622161840118E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999702708706295	WITHOUT_CLASSIFICATION	2.9729129370537086E-5	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9999702708706295	WITHOUT_CLASSIFICATION	2.9729129370537086E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999999868229609	WITHOUT_CLASSIFICATION	1.3177039204440592E-8	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999999815838482	WITHOUT_CLASSIFICATION	1.8416151820587083E-8	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999954024999117	WITHOUT_CLASSIFICATION	4.597500088360602E-6	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9999954024999117	WITHOUT_CLASSIFICATION	4.597500088360602E-6	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999999935620301	WITHOUT_CLASSIFICATION	6.437969948252134E-9	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.999999971972776	WITHOUT_CLASSIFICATION	2.8027224101037278E-8	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.999999333600334	WITHOUT_CLASSIFICATION	6.663996659965391E-7	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999990912413523	WITHOUT_CLASSIFICATION	9.087586477244941E-7	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9999820166560173	WITHOUT_CLASSIFICATION	1.798334398266653E-5	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999977484521313	WITHOUT_CLASSIFICATION	2.25154786870453E-6	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999989477311944	WITHOUT_CLASSIFICATION	1.0522688057325224E-6	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9999974691543814	WITHOUT_CLASSIFICATION	2.530845618492837E-6	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999999470776268	WITHOUT_CLASSIFICATION	5.292237318275895E-8	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999999992096978	WITHOUT_CLASSIFICATION	7.903020656955059E-10	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9999969591240808	WITHOUT_CLASSIFICATION	3.040875919126808E-6	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9998909128870987	WITHOUT_CLASSIFICATION	1.0908711290129506E-4	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999997654311187	WITHOUT_CLASSIFICATION	2.3456888129102078E-7	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999993214732876	WITHOUT_CLASSIFICATION	6.785267123853975E-7	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999989601715383	WITHOUT_CLASSIFICATION	1.0398284615839024E-6	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9999999578580041	WITHOUT_CLASSIFICATION	4.214199593651072E-8	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.99938537153937	WITHOUT_CLASSIFICATION	6.146284606300379E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999984450420828	WITHOUT_CLASSIFICATION	1.5549579172049014E-6	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.999932455320444	WITHOUT_CLASSIFICATION	6.754467955606135E-5	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9999886013440895	WITHOUT_CLASSIFICATION	1.1398655910535565E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9998266538666994	WITHOUT_CLASSIFICATION	1.7334613330058753E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9998266538666994	WITHOUT_CLASSIFICATION	1.7334613330058753E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9998266538666994	WITHOUT_CLASSIFICATION	1.7334613330058753E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9998266538666994	WITHOUT_CLASSIFICATION	1.7334613330058753E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9998266538666994	WITHOUT_CLASSIFICATION	1.7334613330058753E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.999851796381452	WITHOUT_CLASSIFICATION	1.482036185479735E-4	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999995060553528	WITHOUT_CLASSIFICATION	4.939446473156518E-7	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999999786744311	WITHOUT_CLASSIFICATION	2.132556891403929E-8	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.999999955306979	WITHOUT_CLASSIFICATION	4.469302089708669E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999961566195005	WITHOUT_CLASSIFICATION	3.843380499485585E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999961566195005	WITHOUT_CLASSIFICATION	3.843380499485585E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999961566195005	WITHOUT_CLASSIFICATION	3.843380499485585E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999961566195005	WITHOUT_CLASSIFICATION	3.843380499485585E-6	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9999998745642984	WITHOUT_CLASSIFICATION	1.2543570169219865E-7	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999999219311039	WITHOUT_CLASSIFICATION	7.8068896139519E-8	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9999732589412824	WITHOUT_CLASSIFICATION	2.674105871763226E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999939210032622	WITHOUT_CLASSIFICATION	6.078996737692096E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999939210032622	WITHOUT_CLASSIFICATION	6.078996737692096E-6	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9999996256938305	WITHOUT_CLASSIFICATION	3.7430616944046025E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999997189879615	WITHOUT_CLASSIFICATION	2.8101203852506014E-7	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999997189879615	WITHOUT_CLASSIFICATION	2.8101203852506014E-7	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9999935215477048	WITHOUT_CLASSIFICATION	6.478452295289525E-6	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999993735024854	WITHOUT_CLASSIFICATION	6.264975146974299E-7	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9999974608773078	WITHOUT_CLASSIFICATION	2.539122692239026E-6	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9999990570508404	WITHOUT_CLASSIFICATION	9.429491596265921E-7	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999990412655992	WITHOUT_CLASSIFICATION	9.587344007569324E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999997080689123	WITHOUT_CLASSIFICATION	2.9193108779352277E-7	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999997080689123	WITHOUT_CLASSIFICATION	2.9193108779352277E-7	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9998743638068558	WITHOUT_CLASSIFICATION	1.2563619314426218E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999995782770346	WITHOUT_CLASSIFICATION	4.217229654692776E-7	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9999987297881249	WITHOUT_CLASSIFICATION	1.2702118751311608E-6	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9999992154249907	WITHOUT_CLASSIFICATION	7.84575009311565E-7	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999603211362097	WITHOUT_CLASSIFICATION	3.967886379024709E-5	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999999831545817	WITHOUT_CLASSIFICATION	1.6845418273861806E-8	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9999991315195912	WITHOUT_CLASSIFICATION	8.684804089273408E-7	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9999965809476675	WITHOUT_CLASSIFICATION	3.4190523325263004E-6	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9999970851139433	WITHOUT_CLASSIFICATION	2.914886056703686E-6	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9999995761312745	WITHOUT_CLASSIFICATION	4.2386872557531105E-7	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9996346973998583	WITHOUT_CLASSIFICATION	3.653026001416862E-4	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9997860767041815	WITHOUT_CLASSIFICATION	2.1392329581843591E-4	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9999791352783789	WITHOUT_CLASSIFICATION	2.0864721621140534E-5	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9996799067607336	WITHOUT_CLASSIFICATION	3.200932392663349E-4	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.999999924718941	WITHOUT_CLASSIFICATION	7.52810590500499E-8	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9999999803290228	WITHOUT_CLASSIFICATION	1.967097721169391E-8	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999800399503768	WITHOUT_CLASSIFICATION	1.9960049623231118E-5	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9999998545473641	WITHOUT_CLASSIFICATION	1.454526359254444E-7	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9999972720270345	WITHOUT_CLASSIFICATION	2.7279729654813286E-6	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9999991332554877	WITHOUT_CLASSIFICATION	8.667445121437697E-7	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999993502893791	WITHOUT_CLASSIFICATION	6.497106208443298E-7	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9999993502893791	WITHOUT_CLASSIFICATION	6.497106208443298E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999967630148688	WITHOUT_CLASSIFICATION	3.2369851311963707E-6	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9998538797064669	WITHOUT_CLASSIFICATION	1.4612029353319655E-4	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9991650027848007	WITHOUT_CLASSIFICATION	8.349972151992138E-4	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9952402998344015	WITHOUT_CLASSIFICATION	0.004759700165598416	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9729381690313101	WITHOUT_CLASSIFICATION	0.027061830968689863	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9999710656856563	WITHOUT_CLASSIFICATION	2.8934314343798025E-5	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.9825045595488914	WITHOUT_CLASSIFICATION	0.017495440451108624	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9721693440890835	WITHOUT_CLASSIFICATION	0.027830655910916546	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9993104103607736	DEFECT	6.895896392265099E-4	WITHOUT_CLASSIFICATION
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.9998867277946103	WITHOUT_CLASSIFICATION	1.1327220538980043E-4	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9997890008990168	WITHOUT_CLASSIFICATION	2.1099910098326953E-4	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.9315182386766024	DEFECT	0.06848176132339757	WITHOUT_CLASSIFICATION
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.9993104103607736	DEFECT	6.895896392265099E-4	WITHOUT_CLASSIFICATION
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.6803361351101399	WITHOUT_CLASSIFICATION	0.3196638648898601	DEFECT
