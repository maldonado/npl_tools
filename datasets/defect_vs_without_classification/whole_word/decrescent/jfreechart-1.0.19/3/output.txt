// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.999756393488606	WITHOUT_CLASSIFICATION	2.4360651139392045E-4	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9998262491679836	WITHOUT_CLASSIFICATION	1.737508320163637E-4	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9996998550594106	WITHOUT_CLASSIFICATION	3.001449405894515E-4	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9997102373627399	WITHOUT_CLASSIFICATION	2.8976263726010427E-4	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9997226104729459	WITHOUT_CLASSIFICATION	2.773895270541724E-4	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9995198207867363	WITHOUT_CLASSIFICATION	4.801792132637325E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9997562383588999	WITHOUT_CLASSIFICATION	2.4376164110003336E-4	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9996574919159849	WITHOUT_CLASSIFICATION	3.425080840150824E-4	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9997637360331809	WITHOUT_CLASSIFICATION	2.3626396681914036E-4	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999355829872585	WITHOUT_CLASSIFICATION	6.441701274150093E-5	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999192370167445	WITHOUT_CLASSIFICATION	8.076298325552753E-5	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999290409650933	WITHOUT_CLASSIFICATION	7.095903490674408E-5	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.999982979389855	WITHOUT_CLASSIFICATION	1.702061014502541E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999071404173218	WITHOUT_CLASSIFICATION	9.285958267815693E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9997516472714751	WITHOUT_CLASSIFICATION	2.4835272852491604E-4	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9998111794116201	WITHOUT_CLASSIFICATION	1.8882058838001856E-4	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999455334972408	WITHOUT_CLASSIFICATION	5.446650275921334E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999199808897159	WITHOUT_CLASSIFICATION	8.001911028406092E-5	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9998847502271718	WITHOUT_CLASSIFICATION	1.1524977282810074E-4	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999559156937158	WITHOUT_CLASSIFICATION	4.408430628429344E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9997532971003249	WITHOUT_CLASSIFICATION	2.4670289967509236E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9998364809621495	WITHOUT_CLASSIFICATION	1.6351903785059843E-4	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9997842237572324	WITHOUT_CLASSIFICATION	2.1577624276750327E-4	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9997842237572324	WITHOUT_CLASSIFICATION	2.1577624276750327E-4	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9997842237572324	WITHOUT_CLASSIFICATION	2.1577624276750327E-4	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999203317042161	WITHOUT_CLASSIFICATION	7.966829578395597E-5	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999946117866974	WITHOUT_CLASSIFICATION	5.3882133025927835E-5	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999961092868233	WITHOUT_CLASSIFICATION	3.890713176700912E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999589675541632	WITHOUT_CLASSIFICATION	4.103244583679541E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999531054911803	WITHOUT_CLASSIFICATION	4.689450881977676E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999531054911803	WITHOUT_CLASSIFICATION	4.689450881977676E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999531054911803	WITHOUT_CLASSIFICATION	4.689450881977676E-5	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999883615175521	WITHOUT_CLASSIFICATION	1.1638482447915239E-5	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999504899057464	WITHOUT_CLASSIFICATION	4.95100942536354E-5	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999449907864247	WITHOUT_CLASSIFICATION	5.500921357524143E-5	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9995430593913318	WITHOUT_CLASSIFICATION	4.569406086681326E-4	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9926884442315427	WITHOUT_CLASSIFICATION	0.007311555768457422	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999711241860211	WITHOUT_CLASSIFICATION	2.8875813978927552E-5	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999368698169615	WITHOUT_CLASSIFICATION	6.31301830385443E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.999953582645409	WITHOUT_CLASSIFICATION	4.641735459087863E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.999953582645409	WITHOUT_CLASSIFICATION	4.641735459087863E-5	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9998066951558404	WITHOUT_CLASSIFICATION	1.933048441596023E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.994137288717672	WITHOUT_CLASSIFICATION	0.0058627112823280035	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.994137288717672	WITHOUT_CLASSIFICATION	0.0058627112823280035	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.994137288717672	WITHOUT_CLASSIFICATION	0.0058627112823280035	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.994137288717672	WITHOUT_CLASSIFICATION	0.0058627112823280035	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999205399779598	WITHOUT_CLASSIFICATION	7.946002204017356E-5	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9981849194705558	WITHOUT_CLASSIFICATION	0.0018150805294443145	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999328417218555	WITHOUT_CLASSIFICATION	6.715827814453237E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9997022004320694	WITHOUT_CLASSIFICATION	2.977995679306886E-4	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999941502184408	WITHOUT_CLASSIFICATION	5.849781559052765E-6	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9921109242346808	WITHOUT_CLASSIFICATION	0.007889075765319128	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999654243701379	WITHOUT_CLASSIFICATION	3.457562986211785E-5	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999347671130576	WITHOUT_CLASSIFICATION	6.52328869424202E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9995695179138895	WITHOUT_CLASSIFICATION	4.3048208611045627E-4	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999122400345918	WITHOUT_CLASSIFICATION	8.775996540822252E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9990164143579939	WITHOUT_CLASSIFICATION	9.835856420061222E-4	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9995417797669531	WITHOUT_CLASSIFICATION	4.5822023304678387E-4	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.976186879679894	WITHOUT_CLASSIFICATION	0.02381312032010595	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9997523922099486	WITHOUT_CLASSIFICATION	2.4760779005136586E-4	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9979989456048491	WITHOUT_CLASSIFICATION	0.0020010543951508534	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9987084828554856	WITHOUT_CLASSIFICATION	0.0012915171445142966	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9998240834387503	WITHOUT_CLASSIFICATION	1.759165612496963E-4	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999982935412535	WITHOUT_CLASSIFICATION	1.7064587465389128E-6	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999623052387244	WITHOUT_CLASSIFICATION	3.7694761275529135E-5	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999623052387244	WITHOUT_CLASSIFICATION	3.7694761275529135E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999141369794196	WITHOUT_CLASSIFICATION	8.586302058047393E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9964186032763683	WITHOUT_CLASSIFICATION	0.0035813967236317666	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999379543781609	WITHOUT_CLASSIFICATION	6.20456218390817E-5	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9989432477952505	WITHOUT_CLASSIFICATION	0.0010567522047495218	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999589594492149	WITHOUT_CLASSIFICATION	4.104055078506525E-5	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9995528973721767	WITHOUT_CLASSIFICATION	4.4710262782333765E-4	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9970311103675723	WITHOUT_CLASSIFICATION	0.0029688896324278242	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999370447971494	WITHOUT_CLASSIFICATION	6.295520285056802E-5	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.999779187436094	WITHOUT_CLASSIFICATION	2.2081256390603377E-4	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9995724720459123	WITHOUT_CLASSIFICATION	4.2752795408769603E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9998273120765537	WITHOUT_CLASSIFICATION	1.7268792344629072E-4	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.999654038287564	WITHOUT_CLASSIFICATION	3.4596171243592605E-4	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999906085640695	WITHOUT_CLASSIFICATION	9.391435930451292E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999906085640695	WITHOUT_CLASSIFICATION	9.391435930451292E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999295248216971	WITHOUT_CLASSIFICATION	7.04751783029476E-5	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9996765889223237	WITHOUT_CLASSIFICATION	3.2341107767626745E-4	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.999428329256028	WITHOUT_CLASSIFICATION	5.716707439720165E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9996355559410898	WITHOUT_CLASSIFICATION	3.64444058910216E-4	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999337882701045	WITHOUT_CLASSIFICATION	6.621172989553748E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999337882701045	WITHOUT_CLASSIFICATION	6.621172989553748E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999337882701045	WITHOUT_CLASSIFICATION	6.621172989553748E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999337882701045	WITHOUT_CLASSIFICATION	6.621172989553748E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999337882701045	WITHOUT_CLASSIFICATION	6.621172989553748E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999337882701045	WITHOUT_CLASSIFICATION	6.621172989553748E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999337882701045	WITHOUT_CLASSIFICATION	6.621172989553748E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999337882701045	WITHOUT_CLASSIFICATION	6.621172989553748E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999337882701045	WITHOUT_CLASSIFICATION	6.621172989553748E-5	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9982613884377964	WITHOUT_CLASSIFICATION	0.001738611562203529	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9982613884377964	WITHOUT_CLASSIFICATION	0.001738611562203529	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9998763164156725	WITHOUT_CLASSIFICATION	1.2368358432757293E-4	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9998763164156725	WITHOUT_CLASSIFICATION	1.2368358432757293E-4	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.999886764718264	WITHOUT_CLASSIFICATION	1.1323528173603941E-4	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999396866974851	WITHOUT_CLASSIFICATION	6.031330251490363E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.999618775620907	WITHOUT_CLASSIFICATION	3.8122437909311383E-4	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999255142556012	WITHOUT_CLASSIFICATION	7.44857443988643E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999255142556012	WITHOUT_CLASSIFICATION	7.44857443988643E-5	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9994881918016383	WITHOUT_CLASSIFICATION	5.11808198361674E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9962492405868648	WITHOUT_CLASSIFICATION	0.003750759413135208	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9997962447985358	WITHOUT_CLASSIFICATION	2.0375520146415698E-4	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999903300382049	WITHOUT_CLASSIFICATION	9.669961795131866E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999903300382049	WITHOUT_CLASSIFICATION	9.669961795131866E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9998744452389924	WITHOUT_CLASSIFICATION	1.2555476100759814E-4	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9998744452389924	WITHOUT_CLASSIFICATION	1.2555476100759814E-4	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999851485291685	WITHOUT_CLASSIFICATION	1.4851470831527599E-5	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999003466794408	WITHOUT_CLASSIFICATION	9.965332055921673E-5	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9997948153812136	WITHOUT_CLASSIFICATION	2.0518461878642763E-4	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999328421592947	WITHOUT_CLASSIFICATION	6.715784070529858E-5	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999905301777086	WITHOUT_CLASSIFICATION	9.46982229133901E-6	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999388538872676	WITHOUT_CLASSIFICATION	6.114611273250125E-5	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9993982647942522	WITHOUT_CLASSIFICATION	6.01735205747934E-4	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999804112715401	WITHOUT_CLASSIFICATION	1.958872845991358E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9996519937559001	WITHOUT_CLASSIFICATION	3.4800624409988027E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999002467325219	WITHOUT_CLASSIFICATION	9.975326747815291E-5	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999814120037387	WITHOUT_CLASSIFICATION	1.8587996261238918E-5	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999814120037387	WITHOUT_CLASSIFICATION	1.8587996261238918E-5	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9998434390111137	WITHOUT_CLASSIFICATION	1.5656098888630092E-4	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9998434390111137	WITHOUT_CLASSIFICATION	1.5656098888630092E-4	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999765512307484	WITHOUT_CLASSIFICATION	2.344876925159006E-5	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999044733345527	WITHOUT_CLASSIFICATION	9.552666544740237E-5	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999044733345527	WITHOUT_CLASSIFICATION	9.552666544740237E-5	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999044733345527	WITHOUT_CLASSIFICATION	9.552666544740237E-5	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9998125182462708	WITHOUT_CLASSIFICATION	1.8748175372921587E-4	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9980889163842761	WITHOUT_CLASSIFICATION	0.0019110836157239886	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999771780114785	WITHOUT_CLASSIFICATION	2.2821988521536488E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9995720215756769	WITHOUT_CLASSIFICATION	4.2797842432310565E-4	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9995720215756769	WITHOUT_CLASSIFICATION	4.2797842432310565E-4	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9993623518779449	WITHOUT_CLASSIFICATION	6.376481220551137E-4	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9997601975480502	WITHOUT_CLASSIFICATION	2.3980245194978319E-4	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9997601975480502	WITHOUT_CLASSIFICATION	2.3980245194978319E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999519760827617	WITHOUT_CLASSIFICATION	4.802391723830311E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999604686019304	WITHOUT_CLASSIFICATION	3.953139806962216E-5	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999604686019304	WITHOUT_CLASSIFICATION	3.953139806962216E-5	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999482471078166	WITHOUT_CLASSIFICATION	5.175289218341902E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9997600888929911	WITHOUT_CLASSIFICATION	2.3991110700892046E-4	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9996947654131727	WITHOUT_CLASSIFICATION	3.0523458682739363E-4	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9997074580924024	WITHOUT_CLASSIFICATION	2.925419075976243E-4	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9984244530684495	WITHOUT_CLASSIFICATION	0.0015755469315504964	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.999663428533127	WITHOUT_CLASSIFICATION	3.3657146687307517E-4	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9994783941174782	WITHOUT_CLASSIFICATION	5.216058825218418E-4	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999631203934779	WITHOUT_CLASSIFICATION	3.6879606522039736E-5	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.7683449417689235	WITHOUT_CLASSIFICATION	0.23165505823107654	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999530300611733	WITHOUT_CLASSIFICATION	4.696993882677142E-5	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999094538021572	WITHOUT_CLASSIFICATION	9.054619784271085E-5	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999198404708084	WITHOUT_CLASSIFICATION	8.015952919166061E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998151608001054	WITHOUT_CLASSIFICATION	1.848391998946335E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999073595080534	WITHOUT_CLASSIFICATION	9.2640491946558E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9992214284821115	WITHOUT_CLASSIFICATION	7.785715178885101E-4	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9992214284821115	WITHOUT_CLASSIFICATION	7.785715178885101E-4	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991178028457269	WITHOUT_CLASSIFICATION	8.821971542729859E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991178028457269	WITHOUT_CLASSIFICATION	8.821971542729859E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991178028457269	WITHOUT_CLASSIFICATION	8.821971542729859E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999332716678513	WITHOUT_CLASSIFICATION	6.6728332148752E-5	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.5570497697404471	WITHOUT_CLASSIFICATION	0.442950230259553	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991663510648243	WITHOUT_CLASSIFICATION	8.336489351756842E-4	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999865926841713	WITHOUT_CLASSIFICATION	1.3407315828655399E-5	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9998512491237629	WITHOUT_CLASSIFICATION	1.4875087623724204E-4	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999975533370752	WITHOUT_CLASSIFICATION	2.4466629247532977E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9997635716173012	WITHOUT_CLASSIFICATION	2.3642838269869154E-4	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9997635716173012	WITHOUT_CLASSIFICATION	2.3642838269869154E-4	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999843697675478	WITHOUT_CLASSIFICATION	1.5630232452264087E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999843697675478	WITHOUT_CLASSIFICATION	1.5630232452264087E-5	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9997945741433324	WITHOUT_CLASSIFICATION	2.0542585666756452E-4	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9994933213668417	WITHOUT_CLASSIFICATION	5.066786331583805E-4	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999496485920655	WITHOUT_CLASSIFICATION	5.035140793467159E-5	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999772855206517	WITHOUT_CLASSIFICATION	2.27144793483015E-5	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.996735297910887	WITHOUT_CLASSIFICATION	0.003264702089113072	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9999583547595343	WITHOUT_CLASSIFICATION	4.164524046572831E-5	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999264479647614	WITHOUT_CLASSIFICATION	7.355203523867065E-5	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9996707988246722	WITHOUT_CLASSIFICATION	3.2920117532781975E-4	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999483632200257	WITHOUT_CLASSIFICATION	5.1636779974236116E-5	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999694077259009	WITHOUT_CLASSIFICATION	3.0592274099023455E-5	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.9999962380478794	WITHOUT_CLASSIFICATION	3.761952120491161E-6	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9950859809190753	WITHOUT_CLASSIFICATION	0.004914019080924652	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9998796019006931	WITHOUT_CLASSIFICATION	1.2039809930688331E-4	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9916361567460652	WITHOUT_CLASSIFICATION	0.00836384325393489	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999562831040327	WITHOUT_CLASSIFICATION	4.3716895967308456E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999562831040327	WITHOUT_CLASSIFICATION	4.3716895967308456E-5	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999906984027958	WITHOUT_CLASSIFICATION	9.30159720427775E-6	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9998677722656618	WITHOUT_CLASSIFICATION	1.3222773433820353E-4	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999404335265205	WITHOUT_CLASSIFICATION	5.9566473479539123E-5	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9994665218128952	WITHOUT_CLASSIFICATION	5.334781871048521E-4	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9995760591191343	WITHOUT_CLASSIFICATION	4.239408808658221E-4	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999621141238418	WITHOUT_CLASSIFICATION	3.788587615810596E-5	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9998118396419804	WITHOUT_CLASSIFICATION	1.881603580196092E-4	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9983508864694755	WITHOUT_CLASSIFICATION	0.001649113530524602	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9983508864694755	WITHOUT_CLASSIFICATION	0.001649113530524602	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9987617357875301	WITHOUT_CLASSIFICATION	0.0012382642124699234	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9851015621379685	WITHOUT_CLASSIFICATION	0.014898437862031405	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9851015621379685	WITHOUT_CLASSIFICATION	0.014898437862031405	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9851015621379685	WITHOUT_CLASSIFICATION	0.014898437862031405	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9851015621379685	WITHOUT_CLASSIFICATION	0.014898437862031405	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9970024014387838	WITHOUT_CLASSIFICATION	0.0029975985612161722	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9998825633736493	WITHOUT_CLASSIFICATION	1.1743662635064415E-4	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9998825633736493	WITHOUT_CLASSIFICATION	1.1743662635064415E-4	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9993050980500536	WITHOUT_CLASSIFICATION	6.949019499462564E-4	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999839705358189	WITHOUT_CLASSIFICATION	1.602946418110226E-5	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999687085971581	WITHOUT_CLASSIFICATION	3.129140284191512E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999845386022616	WITHOUT_CLASSIFICATION	1.5461397738459792E-5	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9996998543613836	WITHOUT_CLASSIFICATION	3.0014563861645E-4	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999499251413281	WITHOUT_CLASSIFICATION	5.007485867197545E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998842078714858	WITHOUT_CLASSIFICATION	1.157921285142835E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998842078714858	WITHOUT_CLASSIFICATION	1.157921285142835E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998842078714858	WITHOUT_CLASSIFICATION	1.157921285142835E-4	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9998849989192071	WITHOUT_CLASSIFICATION	1.1500108079298822E-4	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999886820116172	WITHOUT_CLASSIFICATION	1.1317988382840703E-5	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9998887292942756	WITHOUT_CLASSIFICATION	1.1127070572430576E-4	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999896599960755	WITHOUT_CLASSIFICATION	1.0340003924594659E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999921301857145	WITHOUT_CLASSIFICATION	7.869814285482E-6	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9998405024179077	WITHOUT_CLASSIFICATION	1.594975820923722E-4	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999950531141126	WITHOUT_CLASSIFICATION	4.946885887479145E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999564526228657	WITHOUT_CLASSIFICATION	4.35473771342769E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9983140989251491	WITHOUT_CLASSIFICATION	0.0016859010748509107	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9983140989251491	WITHOUT_CLASSIFICATION	0.0016859010748509107	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999069095773019	WITHOUT_CLASSIFICATION	9.309042269801636E-5	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999069095773019	WITHOUT_CLASSIFICATION	9.309042269801636E-5	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999069095773019	WITHOUT_CLASSIFICATION	9.309042269801636E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999069095773019	WITHOUT_CLASSIFICATION	9.309042269801636E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9995873126614746	WITHOUT_CLASSIFICATION	4.126873385254725E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9997532971003249	WITHOUT_CLASSIFICATION	2.4670289967509236E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9997532971003249	WITHOUT_CLASSIFICATION	2.4670289967509236E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9997532971003249	WITHOUT_CLASSIFICATION	2.4670289967509236E-4	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9996524413505282	WITHOUT_CLASSIFICATION	3.4755864947185204E-4	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9997637360331809	WITHOUT_CLASSIFICATION	2.3626396681914036E-4	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9999759430933296	WITHOUT_CLASSIFICATION	2.4056906670348254E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998582402690704	WITHOUT_CLASSIFICATION	1.4175973092952723E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998582402690704	WITHOUT_CLASSIFICATION	1.4175973092952723E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998582402690704	WITHOUT_CLASSIFICATION	1.4175973092952723E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998582402690704	WITHOUT_CLASSIFICATION	1.4175973092952723E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998582402690704	WITHOUT_CLASSIFICATION	1.4175973092952723E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998582402690704	WITHOUT_CLASSIFICATION	1.4175973092952723E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998582402690704	WITHOUT_CLASSIFICATION	1.4175973092952723E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998582402690704	WITHOUT_CLASSIFICATION	1.4175973092952723E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998582402690704	WITHOUT_CLASSIFICATION	1.4175973092952723E-4	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9997722016010547	WITHOUT_CLASSIFICATION	2.2779839894518107E-4	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999222314109505	WITHOUT_CLASSIFICATION	7.776858904955706E-5	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999222314109505	WITHOUT_CLASSIFICATION	7.776858904955706E-5	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9998208700559167	WITHOUT_CLASSIFICATION	1.7912994408331623E-4	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999369668737651	WITHOUT_CLASSIFICATION	6.303312623488746E-5	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999369668737651	WITHOUT_CLASSIFICATION	6.303312623488746E-5	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9998401961479957	WITHOUT_CLASSIFICATION	1.5980385200442586E-4	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9998497774616389	WITHOUT_CLASSIFICATION	1.5022253836104513E-4	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999357444855863	WITHOUT_CLASSIFICATION	6.425551441369911E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999481421652144	WITHOUT_CLASSIFICATION	5.1857834785497653E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999481421652144	WITHOUT_CLASSIFICATION	5.1857834785497653E-5	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999546984884327	WITHOUT_CLASSIFICATION	4.530151156723844E-5	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9999927400679776	WITHOUT_CLASSIFICATION	7.2599320224515525E-6	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9998442624341548	WITHOUT_CLASSIFICATION	1.5573756584518159E-4	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999449400726034	WITHOUT_CLASSIFICATION	5.5059927396710705E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999705382871058	WITHOUT_CLASSIFICATION	2.9461712894121995E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999886150669776	WITHOUT_CLASSIFICATION	1.1384933022500172E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999725998180966	WITHOUT_CLASSIFICATION	2.7400181903334093E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998879738206099	WITHOUT_CLASSIFICATION	1.1202617939007834E-4	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999697867458414	WITHOUT_CLASSIFICATION	3.0213254158756968E-5	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999316242926585	WITHOUT_CLASSIFICATION	6.837570734150122E-5	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999245616601572	WITHOUT_CLASSIFICATION	7.543833984285906E-5	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9998136916319825	WITHOUT_CLASSIFICATION	1.8630836801748727E-4	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9997722016010547	WITHOUT_CLASSIFICATION	2.2779839894518107E-4	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9998377188299618	WITHOUT_CLASSIFICATION	1.6228117003816298E-4	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9995519370706792	WITHOUT_CLASSIFICATION	4.4806292932073066E-4	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9995519370706792	WITHOUT_CLASSIFICATION	4.4806292932073066E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9994467742643006	WITHOUT_CLASSIFICATION	5.532257356993861E-4	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9998261385149477	WITHOUT_CLASSIFICATION	1.7386148505226003E-4	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9996990117369499	WITHOUT_CLASSIFICATION	3.0098826305017114E-4	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9997317247426512	WITHOUT_CLASSIFICATION	2.6827525734883745E-4	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9998573567848212	WITHOUT_CLASSIFICATION	1.42643215178827E-4	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999330950744898	WITHOUT_CLASSIFICATION	6.690492551017416E-5	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.999978001110619	WITHOUT_CLASSIFICATION	2.199888938103976E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.999966218066143	WITHOUT_CLASSIFICATION	3.378193385693415E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.999966218066143	WITHOUT_CLASSIFICATION	3.378193385693415E-5	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9998904853141644	WITHOUT_CLASSIFICATION	1.0951468583560438E-4	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999597481345068	WITHOUT_CLASSIFICATION	4.025186549313076E-5	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999597481345068	WITHOUT_CLASSIFICATION	4.025186549313076E-5	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999606107517578	WITHOUT_CLASSIFICATION	3.9389248242167265E-5	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9999566316898769	WITHOUT_CLASSIFICATION	4.3368310123015886E-5	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9997248470774883	WITHOUT_CLASSIFICATION	2.751529225116997E-4	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999222498124997	WITHOUT_CLASSIFICATION	7.775018750027184E-5	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999222498124997	WITHOUT_CLASSIFICATION	7.775018750027184E-5	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999145540620966	WITHOUT_CLASSIFICATION	8.544593790340459E-5	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999145540620966	WITHOUT_CLASSIFICATION	8.544593790340459E-5	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999877868151841	WITHOUT_CLASSIFICATION	1.2213184816030865E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.998565544454334	WITHOUT_CLASSIFICATION	0.001434455545665983	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999448583556618	WITHOUT_CLASSIFICATION	5.514164433813998E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999448583556618	WITHOUT_CLASSIFICATION	5.514164433813998E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9998819074857899	WITHOUT_CLASSIFICATION	1.1809251421011521E-4	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9998917237857303	WITHOUT_CLASSIFICATION	1.082762142696002E-4	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999633171942628	WITHOUT_CLASSIFICATION	3.6682805737160666E-5	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999190766670225	WITHOUT_CLASSIFICATION	8.092333297745366E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999496719170838	WITHOUT_CLASSIFICATION	5.032808291624855E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999496719170838	WITHOUT_CLASSIFICATION	5.032808291624855E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999496719170838	WITHOUT_CLASSIFICATION	5.032808291624855E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999496719170838	WITHOUT_CLASSIFICATION	5.032808291624855E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999496719170838	WITHOUT_CLASSIFICATION	5.032808291624855E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999496719170838	WITHOUT_CLASSIFICATION	5.032808291624855E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999496719170838	WITHOUT_CLASSIFICATION	5.032808291624855E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999496719170838	WITHOUT_CLASSIFICATION	5.032808291624855E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999496719170838	WITHOUT_CLASSIFICATION	5.032808291624855E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999496719170838	WITHOUT_CLASSIFICATION	5.032808291624855E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999496719170838	WITHOUT_CLASSIFICATION	5.032808291624855E-5	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9998587956189535	WITHOUT_CLASSIFICATION	1.4120438104657136E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9998587956189535	WITHOUT_CLASSIFICATION	1.4120438104657136E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9998587956189535	WITHOUT_CLASSIFICATION	1.4120438104657136E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9998587956189535	WITHOUT_CLASSIFICATION	1.4120438104657136E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9998587956189535	WITHOUT_CLASSIFICATION	1.4120438104657136E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9998587956189535	WITHOUT_CLASSIFICATION	1.4120438104657136E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9998587956189535	WITHOUT_CLASSIFICATION	1.4120438104657136E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9998587956189535	WITHOUT_CLASSIFICATION	1.4120438104657136E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9998587956189535	WITHOUT_CLASSIFICATION	1.4120438104657136E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9998587956189535	WITHOUT_CLASSIFICATION	1.4120438104657136E-4	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9997342802971926	WITHOUT_CLASSIFICATION	2.657197028074444E-4	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999610324129393	WITHOUT_CLASSIFICATION	3.896758706062136E-5	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9998940939464499	WITHOUT_CLASSIFICATION	1.0590605355004141E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999939815267177	WITHOUT_CLASSIFICATION	6.018473282293053E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999939815267177	WITHOUT_CLASSIFICATION	6.018473282293053E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999939815267177	WITHOUT_CLASSIFICATION	6.018473282293053E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999939815267177	WITHOUT_CLASSIFICATION	6.018473282293053E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999939815267177	WITHOUT_CLASSIFICATION	6.018473282293053E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999939815267177	WITHOUT_CLASSIFICATION	6.018473282293053E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999939815267177	WITHOUT_CLASSIFICATION	6.018473282293053E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999871636669002	WITHOUT_CLASSIFICATION	1.2836333099696679E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999871636669002	WITHOUT_CLASSIFICATION	1.2836333099696679E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999871636669002	WITHOUT_CLASSIFICATION	1.2836333099696679E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999871636669002	WITHOUT_CLASSIFICATION	1.2836333099696679E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999871636669002	WITHOUT_CLASSIFICATION	1.2836333099696679E-5	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999979649577004	WITHOUT_CLASSIFICATION	2.0350422995747193E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999895394156764	WITHOUT_CLASSIFICATION	1.0460584323680496E-5	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9996755081181117	WITHOUT_CLASSIFICATION	3.2449188188832966E-4	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9997028185649505	WITHOUT_CLASSIFICATION	2.9718143504951636E-4	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999625844037677	WITHOUT_CLASSIFICATION	3.741559623227252E-5	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9997444325551208	WITHOUT_CLASSIFICATION	2.555674448792351E-4	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9997842237572324	WITHOUT_CLASSIFICATION	2.1577624276750327E-4	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9997842237572324	WITHOUT_CLASSIFICATION	2.1577624276750327E-4	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9998872256810674	WITHOUT_CLASSIFICATION	1.127743189326324E-4	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999898462808967	WITHOUT_CLASSIFICATION	1.0153719103233583E-5	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9998530953628962	WITHOUT_CLASSIFICATION	1.4690463710376468E-4	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9983372324757452	WITHOUT_CLASSIFICATION	0.001662767524254721	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999916676346297	WITHOUT_CLASSIFICATION	8.332365370374161E-6	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9963397678496847	WITHOUT_CLASSIFICATION	0.0036602321503152917	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999738044628034	WITHOUT_CLASSIFICATION	2.6195537196666022E-5	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.999921583624599	WITHOUT_CLASSIFICATION	7.841637540097833E-5	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999720997065166	WITHOUT_CLASSIFICATION	2.790029348345556E-5	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.999978789424165	WITHOUT_CLASSIFICATION	2.1210575835007568E-5	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999203317042161	WITHOUT_CLASSIFICATION	7.966829578395597E-5	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999346160132954	WITHOUT_CLASSIFICATION	6.53839867046057E-5	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.999881749662431	WITHOUT_CLASSIFICATION	1.1825033756898127E-4	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9998427805411559	WITHOUT_CLASSIFICATION	1.5721945884419972E-4	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999116142742631	WITHOUT_CLASSIFICATION	8.838572573684799E-5	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9960529852753042	WITHOUT_CLASSIFICATION	0.003947014724695777	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9992642314329551	WITHOUT_CLASSIFICATION	7.357685670449778E-4	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.999837301625638	WITHOUT_CLASSIFICATION	1.6269837436204407E-4	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999350662463692	WITHOUT_CLASSIFICATION	6.493375363080174E-5	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999807474440463	WITHOUT_CLASSIFICATION	1.925255595365166E-5	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999405055368593	WITHOUT_CLASSIFICATION	5.949446314055336E-5	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999838275830562	WITHOUT_CLASSIFICATION	1.617241694379831E-5	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9998348103022272	WITHOUT_CLASSIFICATION	1.6518969777286457E-4	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999534840430923	WITHOUT_CLASSIFICATION	4.651595690759791E-5	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999639361479751	WITHOUT_CLASSIFICATION	3.606385202498213E-5	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9998989598169618	WITHOUT_CLASSIFICATION	1.0104018303827085E-4	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999270048740587	WITHOUT_CLASSIFICATION	7.299512594133882E-5	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.999996724698632	WITHOUT_CLASSIFICATION	3.275301367951108E-6	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999522533481665	WITHOUT_CLASSIFICATION	4.7746651833441715E-5	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.999891702670258	WITHOUT_CLASSIFICATION	1.0829732974213866E-4	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9996995313730769	WITHOUT_CLASSIFICATION	3.0046862692316065E-4	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9996995313730769	WITHOUT_CLASSIFICATION	3.0046862692316065E-4	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9998849343393413	WITHOUT_CLASSIFICATION	1.1506566065859911E-4	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999850070193307	WITHOUT_CLASSIFICATION	1.4992980669301377E-4	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999946117866974	WITHOUT_CLASSIFICATION	5.3882133025927835E-5	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999946117866974	WITHOUT_CLASSIFICATION	5.3882133025927835E-5	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9992573451388139	WITHOUT_CLASSIFICATION	7.42654861186048E-4	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999752497835679	WITHOUT_CLASSIFICATION	2.4750216432115497E-5	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999752497835679	WITHOUT_CLASSIFICATION	2.4750216432115497E-5	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999752497835679	WITHOUT_CLASSIFICATION	2.4750216432115497E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999850070193307	WITHOUT_CLASSIFICATION	1.4992980669301377E-4	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999533804087336	WITHOUT_CLASSIFICATION	4.6619591266446396E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999892598819893	WITHOUT_CLASSIFICATION	1.0740118010756476E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999850070193307	WITHOUT_CLASSIFICATION	1.4992980669301377E-4	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999850070193307	WITHOUT_CLASSIFICATION	1.4992980669301377E-4	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.999850070193307	WITHOUT_CLASSIFICATION	1.4992980669301377E-4	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9996527575532942	WITHOUT_CLASSIFICATION	3.4724244670582196E-4	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9998964247399418	WITHOUT_CLASSIFICATION	1.035752600583251E-4	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999533245232434	WITHOUT_CLASSIFICATION	4.6675476756591545E-5	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999688918641079	WITHOUT_CLASSIFICATION	3.1108135892092325E-5	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9997077413122121	WITHOUT_CLASSIFICATION	2.9225868778796855E-4	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999961092868233	WITHOUT_CLASSIFICATION	3.890713176700912E-5	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999936118742015	WITHOUT_CLASSIFICATION	6.388125798450416E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999961092868233	WITHOUT_CLASSIFICATION	3.890713176700912E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9999254633323008	WITHOUT_CLASSIFICATION	7.453666769913108E-5	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9993208884048066	WITHOUT_CLASSIFICATION	6.791115951934497E-4	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999961092868233	WITHOUT_CLASSIFICATION	3.890713176700912E-5	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.999961092868233	WITHOUT_CLASSIFICATION	3.890713176700912E-5	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999589675541632	WITHOUT_CLASSIFICATION	4.103244583679541E-5	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999589675541632	WITHOUT_CLASSIFICATION	4.103244583679541E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999589675541632	WITHOUT_CLASSIFICATION	4.103244583679541E-5	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9998796824111256	WITHOUT_CLASSIFICATION	1.2031758887445527E-4	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999946581272878	WITHOUT_CLASSIFICATION	5.3418727122042965E-6	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999905544750411	WITHOUT_CLASSIFICATION	9.445524958749783E-6	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999051319452917	WITHOUT_CLASSIFICATION	9.486805470828083E-5	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999673605151386	WITHOUT_CLASSIFICATION	3.263948486135322E-5	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999673605151386	WITHOUT_CLASSIFICATION	3.263948486135322E-5	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9997963565101502	WITHOUT_CLASSIFICATION	2.0364348984977938E-4	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9998272791042749	WITHOUT_CLASSIFICATION	1.7272089572500956E-4	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9840805361339308	WITHOUT_CLASSIFICATION	0.015919463866069173	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999443793080187	WITHOUT_CLASSIFICATION	5.5620691981381456E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999531054911803	WITHOUT_CLASSIFICATION	4.689450881977676E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999531054911803	WITHOUT_CLASSIFICATION	4.689450881977676E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999531054911803	WITHOUT_CLASSIFICATION	4.689450881977676E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999443793080187	WITHOUT_CLASSIFICATION	5.5620691981381456E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999443793080187	WITHOUT_CLASSIFICATION	5.5620691981381456E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999443793080187	WITHOUT_CLASSIFICATION	5.5620691981381456E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999443793080187	WITHOUT_CLASSIFICATION	5.5620691981381456E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999443793080187	WITHOUT_CLASSIFICATION	5.5620691981381456E-5	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999142678929643	WITHOUT_CLASSIFICATION	8.573210703561125E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.99991562284794	WITHOUT_CLASSIFICATION	8.437715205997805E-5	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999066236629689	WITHOUT_CLASSIFICATION	9.337633703111971E-5	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999066236629689	WITHOUT_CLASSIFICATION	9.337633703111971E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.99991562284794	WITHOUT_CLASSIFICATION	8.437715205997805E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.99991562284794	WITHOUT_CLASSIFICATION	8.437715205997805E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.99991562284794	WITHOUT_CLASSIFICATION	8.437715205997805E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999269101903021	WITHOUT_CLASSIFICATION	7.30898096978144E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999269101903021	WITHOUT_CLASSIFICATION	7.30898096978144E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999269101903021	WITHOUT_CLASSIFICATION	7.30898096978144E-5	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9963397678496847	WITHOUT_CLASSIFICATION	0.0036602321503152917	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.99991562284794	WITHOUT_CLASSIFICATION	8.437715205997805E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999269101903021	WITHOUT_CLASSIFICATION	7.30898096978144E-5	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.999841289994708	WITHOUT_CLASSIFICATION	1.5871000529201043E-4	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9998379143462173	WITHOUT_CLASSIFICATION	1.6208565378282496E-4	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9998391846331154	WITHOUT_CLASSIFICATION	1.6081536688466848E-4	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9998458785812538	WITHOUT_CLASSIFICATION	1.5412141874618322E-4	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9998486482914734	WITHOUT_CLASSIFICATION	1.51351708526754E-4	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9998707272946414	WITHOUT_CLASSIFICATION	1.2927270535855866E-4	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.999968983480878	WITHOUT_CLASSIFICATION	3.101651912198876E-5	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999807239474057	WITHOUT_CLASSIFICATION	1.927605259429399E-5	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.999969598100304	WITHOUT_CLASSIFICATION	3.0401899696019436E-5	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.999969598100304	WITHOUT_CLASSIFICATION	3.0401899696019436E-5	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999710142899024	WITHOUT_CLASSIFICATION	2.898571009754117E-5	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999710142899024	WITHOUT_CLASSIFICATION	2.898571009754117E-5	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999694783169424	WITHOUT_CLASSIFICATION	3.052168305759887E-5	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999694783169424	WITHOUT_CLASSIFICATION	3.052168305759887E-5	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999694951223931	WITHOUT_CLASSIFICATION	3.0504877607031515E-5	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9998327706994454	WITHOUT_CLASSIFICATION	1.6722930055452866E-4	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.99998871782694	WITHOUT_CLASSIFICATION	1.1282173059926332E-5	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9998340625328992	WITHOUT_CLASSIFICATION	1.6593746710078742E-4	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.999982144667314	WITHOUT_CLASSIFICATION	1.7855332685924695E-5	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9997020877996913	WITHOUT_CLASSIFICATION	2.9791220030878063E-4	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.999966098639355	WITHOUT_CLASSIFICATION	3.390136064488025E-5	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999688918641079	WITHOUT_CLASSIFICATION	3.1108135892092325E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999565828580487	WITHOUT_CLASSIFICATION	4.3417141951356554E-5	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999711241860211	WITHOUT_CLASSIFICATION	2.8875813978927552E-5	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999962405379614	WITHOUT_CLASSIFICATION	3.7594620385135877E-6	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999504899057464	WITHOUT_CLASSIFICATION	4.95100942536354E-5	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999504899057464	WITHOUT_CLASSIFICATION	4.95100942536354E-5	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9998099703243771	WITHOUT_CLASSIFICATION	1.9002967562292385E-4	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9997794746229117	WITHOUT_CLASSIFICATION	2.20525377088268E-4	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9998815385881901	WITHOUT_CLASSIFICATION	1.1846141180995201E-4	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999730664322957	WITHOUT_CLASSIFICATION	2.6933567704288054E-5	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999129868752921	WITHOUT_CLASSIFICATION	8.70131247078769E-5	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999448582824574	WITHOUT_CLASSIFICATION	5.514171754265663E-5	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9998396927899008	WITHOUT_CLASSIFICATION	1.6030721009922572E-4	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999313348372109	WITHOUT_CLASSIFICATION	6.86651627890701E-5	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9998506281903985	WITHOUT_CLASSIFICATION	1.4937180960148408E-4	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9997194574113676	WITHOUT_CLASSIFICATION	2.8054258863240963E-4	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9993362057035575	WITHOUT_CLASSIFICATION	6.637942964425099E-4	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9926884442315427	WITHOUT_CLASSIFICATION	0.007311555768457422	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9979697093977352	WITHOUT_CLASSIFICATION	0.002030290602264752	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999014282622546	WITHOUT_CLASSIFICATION	9.857173774548746E-5	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9989897784383625	WITHOUT_CLASSIFICATION	0.001010221561637535	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999690455665488	WITHOUT_CLASSIFICATION	3.095443345123361E-5	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999690455665488	WITHOUT_CLASSIFICATION	3.095443345123361E-5	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999555518236729	WITHOUT_CLASSIFICATION	4.4448176327048596E-5	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999555518236729	WITHOUT_CLASSIFICATION	4.4448176327048596E-5	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999368698169615	WITHOUT_CLASSIFICATION	6.31301830385443E-5	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999368698169615	WITHOUT_CLASSIFICATION	6.31301830385443E-5	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.999918082438764	WITHOUT_CLASSIFICATION	8.191756123599855E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9998272791042749	WITHOUT_CLASSIFICATION	1.7272089572500956E-4	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9988153453137327	WITHOUT_CLASSIFICATION	0.0011846546862673008	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9990724981990835	WITHOUT_CLASSIFICATION	9.275018009164617E-4	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999718705310855	WITHOUT_CLASSIFICATION	2.8129468914438635E-5	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999898723694317	WITHOUT_CLASSIFICATION	1.012763056819961E-5	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999690455665488	WITHOUT_CLASSIFICATION	3.095443345123361E-5	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9999587146495464	WITHOUT_CLASSIFICATION	4.128535045347686E-5	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9998297210608322	WITHOUT_CLASSIFICATION	1.7027893916772875E-4	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999934356098045	WITHOUT_CLASSIFICATION	6.564390195526862E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999384168012421	WITHOUT_CLASSIFICATION	6.158319875796093E-5	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999555518236729	WITHOUT_CLASSIFICATION	4.4448176327048596E-5	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999368698169615	WITHOUT_CLASSIFICATION	6.31301830385443E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9998272791042749	WITHOUT_CLASSIFICATION	1.7272089572500956E-4	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999182877917622	WITHOUT_CLASSIFICATION	8.17122082377933E-5	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999836301552001	WITHOUT_CLASSIFICATION	1.636984480001254E-5	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9998329235326774	WITHOUT_CLASSIFICATION	1.6707646732255083E-4	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.994137288717672	WITHOUT_CLASSIFICATION	0.0058627112823280035	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9994291820763902	WITHOUT_CLASSIFICATION	5.708179236098914E-4	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9995516116642695	WITHOUT_CLASSIFICATION	4.4838833573040043E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9962150953033015	WITHOUT_CLASSIFICATION	0.003784904696698392	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999205399779598	WITHOUT_CLASSIFICATION	7.946002204017356E-5	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9981849194705558	WITHOUT_CLASSIFICATION	0.0018150805294443145	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9993340351604543	WITHOUT_CLASSIFICATION	6.659648395455856E-4	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9993340351604543	WITHOUT_CLASSIFICATION	6.659648395455856E-4	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9997310806187821	WITHOUT_CLASSIFICATION	2.6891938121789325E-4	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9997310806187821	WITHOUT_CLASSIFICATION	2.6891938121789325E-4	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999788415522892	WITHOUT_CLASSIFICATION	2.115844771078255E-5	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999788415522892	WITHOUT_CLASSIFICATION	2.115844771078255E-5	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9964186032763683	WITHOUT_CLASSIFICATION	0.0035813967236317666	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999328417218555	WITHOUT_CLASSIFICATION	6.715827814453237E-5	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9997687059046267	WITHOUT_CLASSIFICATION	2.3129409537315894E-4	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9997022004320694	WITHOUT_CLASSIFICATION	2.977995679306886E-4	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.999853172445157	WITHOUT_CLASSIFICATION	1.4682755484294287E-4	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9998777844585495	WITHOUT_CLASSIFICATION	1.2221554145053128E-4	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9998436380040843	WITHOUT_CLASSIFICATION	1.5636199591571287E-4	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9998436380040843	WITHOUT_CLASSIFICATION	1.5636199591571287E-4	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999334136525513	WITHOUT_CLASSIFICATION	6.658634744874475E-5	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999334136525513	WITHOUT_CLASSIFICATION	6.658634744874475E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999941502184408	WITHOUT_CLASSIFICATION	5.849781559052765E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.999949670139751	WITHOUT_CLASSIFICATION	5.032986024892641E-5	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9998840056155484	WITHOUT_CLASSIFICATION	1.1599438445168133E-4	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999947944422836	WITHOUT_CLASSIFICATION	5.205557716451394E-6	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9984286714043622	WITHOUT_CLASSIFICATION	0.0015713285956377961	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999818496116653	WITHOUT_CLASSIFICATION	1.8150388334750638E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.999953582645409	WITHOUT_CLASSIFICATION	4.641735459087863E-5	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.999949670139751	WITHOUT_CLASSIFICATION	5.032986024892641E-5	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9998840056155484	WITHOUT_CLASSIFICATION	1.1599438445168133E-4	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999947944422836	WITHOUT_CLASSIFICATION	5.205557716451394E-6	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999736666322134	WITHOUT_CLASSIFICATION	2.633336778654845E-5	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999354208134024	WITHOUT_CLASSIFICATION	6.457918659764304E-5	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9987634166369815	WITHOUT_CLASSIFICATION	0.0012365833630184069	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9997578473753334	WITHOUT_CLASSIFICATION	2.4215262466652438E-4	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9998795659300129	WITHOUT_CLASSIFICATION	1.2043406998698575E-4	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9985232016071628	WITHOUT_CLASSIFICATION	0.0014767983928372184	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999654243701379	WITHOUT_CLASSIFICATION	3.457562986211785E-5	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999839502251667	WITHOUT_CLASSIFICATION	1.6049774833308234E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9998510664618111	WITHOUT_CLASSIFICATION	1.4893353818880948E-4	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999698939568178	WITHOUT_CLASSIFICATION	3.0106043182236252E-5	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.999596984912784	WITHOUT_CLASSIFICATION	4.030150872160229E-4	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.999596984912784	WITHOUT_CLASSIFICATION	4.030150872160229E-4	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.999980371469607	WITHOUT_CLASSIFICATION	1.962853039291112E-5	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.999980371469607	WITHOUT_CLASSIFICATION	1.962853039291112E-5	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9996773671567034	WITHOUT_CLASSIFICATION	3.2263284329656875E-4	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.999659261104404	WITHOUT_CLASSIFICATION	3.4073889559600544E-4	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999122400345918	WITHOUT_CLASSIFICATION	8.775996540822252E-5	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9998811898220784	WITHOUT_CLASSIFICATION	1.1881017792161994E-4	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.999659261104404	WITHOUT_CLASSIFICATION	3.4073889559600544E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9994291820763902	WITHOUT_CLASSIFICATION	5.708179236098914E-4	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9992936699480354	WITHOUT_CLASSIFICATION	7.063300519646164E-4	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999841510356	WITHOUT_CLASSIFICATION	1.5848964399932595E-5	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9973785900942941	WITHOUT_CLASSIFICATION	0.0026214099057058522	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9995695179138895	WITHOUT_CLASSIFICATION	4.3048208611045627E-4	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9993667831462548	WITHOUT_CLASSIFICATION	6.332168537451523E-4	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9993667831462548	WITHOUT_CLASSIFICATION	6.332168537451523E-4	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9952969725047751	WITHOUT_CLASSIFICATION	0.004703027495224887	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9990164143579939	WITHOUT_CLASSIFICATION	9.835856420061222E-4	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9954350791736166	WITHOUT_CLASSIFICATION	0.00456492082638348	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9953986416610975	WITHOUT_CLASSIFICATION	0.004601358338902511	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9995668743242851	WITHOUT_CLASSIFICATION	4.3312567571491433E-4	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9997075374231691	WITHOUT_CLASSIFICATION	2.92462576830855E-4	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9965620817880987	WITHOUT_CLASSIFICATION	0.0034379182119013444	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9997369105774291	WITHOUT_CLASSIFICATION	2.6308942257092794E-4	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9997054019431669	WITHOUT_CLASSIFICATION	2.945980568331067E-4	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9996783288278146	WITHOUT_CLASSIFICATION	3.2167117218534627E-4	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9993208884048066	WITHOUT_CLASSIFICATION	6.791115951934497E-4	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9997059407955213	WITHOUT_CLASSIFICATION	2.940592044786608E-4	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9997373280484924	WITHOUT_CLASSIFICATION	2.626719515077149E-4	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9998079211787971	WITHOUT_CLASSIFICATION	1.9207882120279857E-4	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9997049727657974	WITHOUT_CLASSIFICATION	2.9502723420264416E-4	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9986971687247415	WITHOUT_CLASSIFICATION	0.0013028312752585067	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.9996867045987137	WITHOUT_CLASSIFICATION	3.13295401286258E-4	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9983013310130726	WITHOUT_CLASSIFICATION	0.0016986689869273415	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9995990301272139	WITHOUT_CLASSIFICATION	4.00969872786253E-4	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9988895797210383	WITHOUT_CLASSIFICATION	0.0011104202789616261	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9989956153079268	WITHOUT_CLASSIFICATION	0.001004384692073172	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9998353851629826	WITHOUT_CLASSIFICATION	1.646148370172493E-4	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9998079211787971	WITHOUT_CLASSIFICATION	1.9207882120279857E-4	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.9999342967803353	WITHOUT_CLASSIFICATION	6.570321966468838E-5	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9997049727657974	WITHOUT_CLASSIFICATION	2.9502723420264416E-4	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999814116589002	WITHOUT_CLASSIFICATION	1.8588341099838583E-5	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9987084828554856	WITHOUT_CLASSIFICATION	0.0012915171445142966	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9986971687247415	WITHOUT_CLASSIFICATION	0.0013028312752585067	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9983013310130726	WITHOUT_CLASSIFICATION	0.0016986689869273415	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9988703578326588	WITHOUT_CLASSIFICATION	0.001129642167341134	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999622551771745	WITHOUT_CLASSIFICATION	3.774482282553447E-5	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999907664763257	WITHOUT_CLASSIFICATION	9.233523674357556E-6	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9998281915443267	WITHOUT_CLASSIFICATION	1.718084556732662E-4	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.9989760146040676	WITHOUT_CLASSIFICATION	0.001023985395932398	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9955904620282453	WITHOUT_CLASSIFICATION	0.004409537971754681	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999161917766535	WITHOUT_CLASSIFICATION	8.380822334650621E-5	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9786334275369053	WITHOUT_CLASSIFICATION	0.021366572463094598	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9981054674861435	WITHOUT_CLASSIFICATION	0.00189453251385651	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9996412046147002	WITHOUT_CLASSIFICATION	3.587953852997416E-4	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9998183212673311	WITHOUT_CLASSIFICATION	1.816787326689529E-4	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9998584117966758	WITHOUT_CLASSIFICATION	1.4158820332420196E-4	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999814116589002	WITHOUT_CLASSIFICATION	1.8588341099838583E-5	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9988703578326588	WITHOUT_CLASSIFICATION	0.001129642167341134	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9786334275369053	WITHOUT_CLASSIFICATION	0.021366572463094598	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9998863155382797	WITHOUT_CLASSIFICATION	1.1368446172035695E-4	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9998863155382797	WITHOUT_CLASSIFICATION	1.1368446172035695E-4	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999491584826095	WITHOUT_CLASSIFICATION	5.0841517390577325E-5	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.99922039255182	WITHOUT_CLASSIFICATION	7.796074481799958E-4	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9998617081967771	WITHOUT_CLASSIFICATION	1.3829180322291146E-4	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9998308759261251	WITHOUT_CLASSIFICATION	1.691240738748509E-4	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9990200677680315	WITHOUT_CLASSIFICATION	9.799322319684499E-4	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9954780387696506	WITHOUT_CLASSIFICATION	0.00452196123034942	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9981775995680157	WITHOUT_CLASSIFICATION	0.0018224004319843552	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.999827139150003	WITHOUT_CLASSIFICATION	1.7286084999695145E-4	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.999827139150003	WITHOUT_CLASSIFICATION	1.7286084999695145E-4	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9997976226853968	WITHOUT_CLASSIFICATION	2.0237731460305886E-4	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.999757968019656	WITHOUT_CLASSIFICATION	2.4203198034399923E-4	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9997691155550126	WITHOUT_CLASSIFICATION	2.3088444498745348E-4	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9997776449835881	WITHOUT_CLASSIFICATION	2.2235501641197254E-4	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999084627876488	WITHOUT_CLASSIFICATION	9.15372123512147E-5	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999564553720998	WITHOUT_CLASSIFICATION	4.354462790038462E-5	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9999582610675005	WITHOUT_CLASSIFICATION	4.173893249951484E-5	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999862562462752	WITHOUT_CLASSIFICATION	1.3743753724883825E-5	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999862562462752	WITHOUT_CLASSIFICATION	1.3743753724883825E-5	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.997232356919104	WITHOUT_CLASSIFICATION	0.002767643080895998	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999352258030512	WITHOUT_CLASSIFICATION	6.477419694885082E-5	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999352289622736	WITHOUT_CLASSIFICATION	6.477103772637311E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999328417218555	WITHOUT_CLASSIFICATION	6.715827814453237E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999941502184408	WITHOUT_CLASSIFICATION	5.849781559052765E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.999949670139751	WITHOUT_CLASSIFICATION	5.032986024892641E-5	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9997551750770314	WITHOUT_CLASSIFICATION	2.448249229686492E-4	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// years	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9995751843349403	WITHOUT_CLASSIFICATION	4.248156650596362E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999141369794196	WITHOUT_CLASSIFICATION	8.586302058047393E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999391829354088	WITHOUT_CLASSIFICATION	6.0817064591183114E-5	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9994006820659844	WITHOUT_CLASSIFICATION	5.993179340156139E-4	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9998463439348946	WITHOUT_CLASSIFICATION	1.5365606510542738E-4	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9998493611802662	WITHOUT_CLASSIFICATION	1.5063881973367095E-4	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9964186032763683	WITHOUT_CLASSIFICATION	0.0035813967236317666	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9995114095567489	WITHOUT_CLASSIFICATION	4.88590443251071E-4	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9995114095567489	WITHOUT_CLASSIFICATION	4.88590443251071E-4	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9992506258106972	WITHOUT_CLASSIFICATION	7.493741893028304E-4	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9992506258106972	WITHOUT_CLASSIFICATION	7.493741893028304E-4	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9551347066500416	WITHOUT_CLASSIFICATION	0.044865293349958396	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999379543781609	WITHOUT_CLASSIFICATION	6.20456218390817E-5	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9998366909858055	WITHOUT_CLASSIFICATION	1.6330901419452302E-4	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9995431549136103	WITHOUT_CLASSIFICATION	4.568450863896293E-4	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9991723082974924	WITHOUT_CLASSIFICATION	8.276917025076208E-4	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9991723082974924	WITHOUT_CLASSIFICATION	8.276917025076208E-4	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.999783302460795	WITHOUT_CLASSIFICATION	2.166975392049104E-4	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9997082035186206	WITHOUT_CLASSIFICATION	2.917964813794638E-4	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.99994162781549	WITHOUT_CLASSIFICATION	5.837218450987661E-5	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9998777844585495	WITHOUT_CLASSIFICATION	1.2221554145053128E-4	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999947944422836	WITHOUT_CLASSIFICATION	5.205557716451394E-6	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9998510664618111	WITHOUT_CLASSIFICATION	1.4893353818880948E-4	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999677559945432	WITHOUT_CLASSIFICATION	3.224400545678524E-5	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9996021338630692	WITHOUT_CLASSIFICATION	3.9786613693092876E-4	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999846961852282	WITHOUT_CLASSIFICATION	1.5303814771700587E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999841004889583	WITHOUT_CLASSIFICATION	1.589951104168391E-4	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999793970934231	WITHOUT_CLASSIFICATION	2.0602906576908282E-4	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999230543492501	WITHOUT_CLASSIFICATION	7.694565074989451E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999078139716601	WITHOUT_CLASSIFICATION	9.21860283399437E-5	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.999864125121295	WITHOUT_CLASSIFICATION	1.358748787049443E-4	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999589594492149	WITHOUT_CLASSIFICATION	4.104055078506525E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999592096445657	WITHOUT_CLASSIFICATION	4.079035543422193E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997395637110918	WITHOUT_CLASSIFICATION	2.6043628890810963E-4	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9997725203208507	WITHOUT_CLASSIFICATION	2.27479679149354E-4	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9998827612102995	WITHOUT_CLASSIFICATION	1.1723878970045962E-4	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9998827612102995	WITHOUT_CLASSIFICATION	1.1723878970045962E-4	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9996771024753334	WITHOUT_CLASSIFICATION	3.2289752466664834E-4	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999979991301394	WITHOUT_CLASSIFICATION	2.000869860555449E-6	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9998898941427757	WITHOUT_CLASSIFICATION	1.1010585722422856E-4	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9997745731347931	WITHOUT_CLASSIFICATION	2.2542686520691225E-4	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999077535934242	WITHOUT_CLASSIFICATION	9.224640657578209E-5	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.999870761925537	WITHOUT_CLASSIFICATION	1.2923807446297284E-4	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999727967179439	WITHOUT_CLASSIFICATION	2.7203282056026532E-5	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.999870761925537	WITHOUT_CLASSIFICATION	1.2923807446297284E-4	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999382784324405	WITHOUT_CLASSIFICATION	6.172156755943885E-5	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999001220180438	WITHOUT_CLASSIFICATION	9.98779819562671E-5	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999727967179439	WITHOUT_CLASSIFICATION	2.7203282056026532E-5	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9970311103675723	WITHOUT_CLASSIFICATION	0.0029688896324278242	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999759696272612	WITHOUT_CLASSIFICATION	2.403037273879376E-5	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9998382526482463	WITHOUT_CLASSIFICATION	1.617473517536452E-4	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9998990319548248	WITHOUT_CLASSIFICATION	1.0096804517519749E-4	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9988110080224846	WITHOUT_CLASSIFICATION	0.0011889919775154062	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.999779187436094	WITHOUT_CLASSIFICATION	2.2081256390603377E-4	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9998717394204417	WITHOUT_CLASSIFICATION	1.282605795583352E-4	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9998006202343294	WITHOUT_CLASSIFICATION	1.993797656707335E-4	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9995724720459123	WITHOUT_CLASSIFICATION	4.2752795408769603E-4	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999186234155767	WITHOUT_CLASSIFICATION	8.137658442330259E-5	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999186234155767	WITHOUT_CLASSIFICATION	8.137658442330259E-5	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999573061490846	WITHOUT_CLASSIFICATION	4.269385091530855E-5	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9997038298181707	WITHOUT_CLASSIFICATION	2.9617018182922394E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.999953582645409	WITHOUT_CLASSIFICATION	4.641735459087863E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.999953582645409	WITHOUT_CLASSIFICATION	4.641735459087863E-5	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9998066951558404	WITHOUT_CLASSIFICATION	1.933048441596023E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9994291820763902	WITHOUT_CLASSIFICATION	5.708179236098914E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9994291820763902	WITHOUT_CLASSIFICATION	5.708179236098914E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.994137288717672	WITHOUT_CLASSIFICATION	0.0058627112823280035	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9962150953033015	WITHOUT_CLASSIFICATION	0.003784904696698392	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999328417218555	WITHOUT_CLASSIFICATION	6.715827814453237E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999379543781609	WITHOUT_CLASSIFICATION	6.20456218390817E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999759696272612	WITHOUT_CLASSIFICATION	2.403037273879376E-5	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9998638215141744	WITHOUT_CLASSIFICATION	1.3617848582567294E-4	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9996936386622346	WITHOUT_CLASSIFICATION	3.063613377653481E-4	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9998413863054136	WITHOUT_CLASSIFICATION	1.5861369458643914E-4	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9997465840352038	WITHOUT_CLASSIFICATION	2.534159647961691E-4	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9995698399212889	WITHOUT_CLASSIFICATION	4.3016007871118873E-4	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9995624442386912	WITHOUT_CLASSIFICATION	4.375557613088071E-4	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9998273120765537	WITHOUT_CLASSIFICATION	1.7268792344629072E-4	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999353018932545	WITHOUT_CLASSIFICATION	6.469810674554327E-5	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.999654038287564	WITHOUT_CLASSIFICATION	3.4596171243592605E-4	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999660847938713	WITHOUT_CLASSIFICATION	3.391520612874514E-5	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9995885167450512	WITHOUT_CLASSIFICATION	4.1148325494878114E-4	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9996087581365601	WITHOUT_CLASSIFICATION	3.912418634399664E-4	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9996087581365601	WITHOUT_CLASSIFICATION	3.912418634399664E-4	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.998845546159095	WITHOUT_CLASSIFICATION	0.0011544538409049398	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.998845546159095	WITHOUT_CLASSIFICATION	0.0011544538409049398	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9989761631619944	WITHOUT_CLASSIFICATION	0.001023836838005504	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9989761631619944	WITHOUT_CLASSIFICATION	0.001023836838005504	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999759696272612	WITHOUT_CLASSIFICATION	2.403037273879376E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.994137288717672	WITHOUT_CLASSIFICATION	0.0058627112823280035	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9962150953033015	WITHOUT_CLASSIFICATION	0.003784904696698392	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9964186032763683	WITHOUT_CLASSIFICATION	0.0035813967236317666	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9998777844585495	WITHOUT_CLASSIFICATION	1.2221554145053128E-4	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999941502184408	WITHOUT_CLASSIFICATION	5.849781559052765E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.999949670139751	WITHOUT_CLASSIFICATION	5.032986024892641E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999141369794196	WITHOUT_CLASSIFICATION	8.586302058047393E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999141369794196	WITHOUT_CLASSIFICATION	8.586302058047393E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999391829354088	WITHOUT_CLASSIFICATION	6.0817064591183114E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999391829354088	WITHOUT_CLASSIFICATION	6.0817064591183114E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999516505222016	WITHOUT_CLASSIFICATION	4.834947779837075E-5	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999613532522912	WITHOUT_CLASSIFICATION	3.8646747708912894E-5	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999658235003247	WITHOUT_CLASSIFICATION	3.4176499675272376E-5	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999805617994262	WITHOUT_CLASSIFICATION	1.943820057380182E-5	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999805617994262	WITHOUT_CLASSIFICATION	1.943820057380182E-5	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9998680744889671	WITHOUT_CLASSIFICATION	1.3192551103281797E-4	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9991467519526372	WITHOUT_CLASSIFICATION	8.53248047362677E-4	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999353620409858	WITHOUT_CLASSIFICATION	6.463795901426847E-5	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.999735613814025	WITHOUT_CLASSIFICATION	2.643861859749326E-4	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999583847510232	WITHOUT_CLASSIFICATION	4.1615248976800115E-5	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9997072710351825	WITHOUT_CLASSIFICATION	2.9272896481743457E-4	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9998867619341134	WITHOUT_CLASSIFICATION	1.132380658866547E-4	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9998867619341134	WITHOUT_CLASSIFICATION	1.132380658866547E-4	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.9995198978670258	WITHOUT_CLASSIFICATION	4.801021329741636E-4	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9996821651778612	WITHOUT_CLASSIFICATION	3.1783482213868923E-4	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999516505222016	WITHOUT_CLASSIFICATION	4.834947779837075E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999516505222016	WITHOUT_CLASSIFICATION	4.834947779837075E-5	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9945603168959727	WITHOUT_CLASSIFICATION	0.005439683104027278	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999805617994262	WITHOUT_CLASSIFICATION	1.943820057380182E-5	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999906085640695	WITHOUT_CLASSIFICATION	9.391435930451292E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999845441208483	WITHOUT_CLASSIFICATION	1.54558791517539E-5	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999845441208483	WITHOUT_CLASSIFICATION	1.54558791517539E-5	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9998680744889671	WITHOUT_CLASSIFICATION	1.3192551103281797E-4	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.999735613814025	WITHOUT_CLASSIFICATION	2.643861859749326E-4	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999732610842751	WITHOUT_CLASSIFICATION	2.6738915724807794E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9997572220227876	WITHOUT_CLASSIFICATION	2.4277797721236933E-4	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9993892832367796	WITHOUT_CLASSIFICATION	6.107167632204021E-4	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9993892832367796	WITHOUT_CLASSIFICATION	6.107167632204021E-4	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999676511710077	WITHOUT_CLASSIFICATION	3.2348828992207545E-5	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9999386043330513	WITHOUT_CLASSIFICATION	6.139566694873816E-5	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9945603168959727	WITHOUT_CLASSIFICATION	0.005439683104027278	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.999667340395938	WITHOUT_CLASSIFICATION	3.3265960406208054E-4	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999748114418249	WITHOUT_CLASSIFICATION	2.518855817508001E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999295248216971	WITHOUT_CLASSIFICATION	7.04751783029476E-5	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9974543129853711	WITHOUT_CLASSIFICATION	0.0025456870146287978	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999284002847497	WITHOUT_CLASSIFICATION	7.15997152503096E-5	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999249545667918	WITHOUT_CLASSIFICATION	7.504543320826142E-5	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999107926699948	WITHOUT_CLASSIFICATION	8.920733000523916E-5	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9996765889223237	WITHOUT_CLASSIFICATION	3.2341107767626745E-4	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9998276934457019	WITHOUT_CLASSIFICATION	1.7230655429800778E-4	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9998595672272271	WITHOUT_CLASSIFICATION	1.4043277277290043E-4	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999131785681458	WITHOUT_CLASSIFICATION	8.682143185417354E-5	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9996899075655629	WITHOUT_CLASSIFICATION	3.100924344371584E-4	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999119850409985	WITHOUT_CLASSIFICATION	8.80149590014195E-5	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9998147780485782	WITHOUT_CLASSIFICATION	1.8522195142175554E-4	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9990023729495262	WITHOUT_CLASSIFICATION	9.976270504738177E-4	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9990023729495262	WITHOUT_CLASSIFICATION	9.976270504738177E-4	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9990023729495262	WITHOUT_CLASSIFICATION	9.976270504738177E-4	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9993972974388872	WITHOUT_CLASSIFICATION	6.027025611129496E-4	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9993972974388872	WITHOUT_CLASSIFICATION	6.027025611129496E-4	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.99998532873905	WITHOUT_CLASSIFICATION	1.4671260949926365E-5	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999750656216789	WITHOUT_CLASSIFICATION	2.4934378321107683E-5	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999669872466327	WITHOUT_CLASSIFICATION	3.301275336726843E-5	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999579103241378	WITHOUT_CLASSIFICATION	4.208967586215573E-5	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.999428329256028	WITHOUT_CLASSIFICATION	5.716707439720165E-4	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9992642769226687	WITHOUT_CLASSIFICATION	7.3572307733116E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.999985678815325	WITHOUT_CLASSIFICATION	1.4321184675142904E-5	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999594780342516	WITHOUT_CLASSIFICATION	4.052196574841291E-5	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9985034369281988	WITHOUT_CLASSIFICATION	0.0014965630718011369	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9996355559410898	WITHOUT_CLASSIFICATION	3.64444058910216E-4	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9996355559410898	WITHOUT_CLASSIFICATION	3.64444058910216E-4	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999337882701045	WITHOUT_CLASSIFICATION	6.621172989553748E-5	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9989779709639217	WITHOUT_CLASSIFICATION	0.0010220290360783222	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.999941929928581	WITHOUT_CLASSIFICATION	5.8070071418865306E-5	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9998824491227138	WITHOUT_CLASSIFICATION	1.1755087728618883E-4	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9998824491227138	WITHOUT_CLASSIFICATION	1.1755087728618883E-4	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9998824491227138	WITHOUT_CLASSIFICATION	1.1755087728618883E-4	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999887873814046	WITHOUT_CLASSIFICATION	1.1212618595468991E-5	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999748606570161	WITHOUT_CLASSIFICATION	2.5139342983824462E-5	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999822136173531	WITHOUT_CLASSIFICATION	1.778638264700968E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.99997083143248	WITHOUT_CLASSIFICATION	2.9168567520011375E-5	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9979697093977352	WITHOUT_CLASSIFICATION	0.002030290602264752	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999014282622546	WITHOUT_CLASSIFICATION	9.857173774548746E-5	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9974543129853711	WITHOUT_CLASSIFICATION	0.0025456870146287978	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999284002847497	WITHOUT_CLASSIFICATION	7.15997152503096E-5	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9998595672272271	WITHOUT_CLASSIFICATION	1.4043277277290043E-4	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999131785681458	WITHOUT_CLASSIFICATION	8.682143185417354E-5	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9996899075655629	WITHOUT_CLASSIFICATION	3.100924344371584E-4	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999119850409985	WITHOUT_CLASSIFICATION	8.80149590014195E-5	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9998147780485782	WITHOUT_CLASSIFICATION	1.8522195142175554E-4	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9998824491227138	WITHOUT_CLASSIFICATION	1.1755087728618883E-4	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9998195115592664	WITHOUT_CLASSIFICATION	1.804884407336778E-4	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999947218787697	WITHOUT_CLASSIFICATION	5.278121230299943E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999225749055911	WITHOUT_CLASSIFICATION	7.742509440888122E-5	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.9982023185378796	WITHOUT_CLASSIFICATION	0.0017976814621204387	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9939856733641317	WITHOUT_CLASSIFICATION	0.006014326635868211	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9998860109110519	WITHOUT_CLASSIFICATION	1.1398908894807381E-4	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9997713647938735	WITHOUT_CLASSIFICATION	2.2863520612656626E-4	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999551251774058	WITHOUT_CLASSIFICATION	4.487482259410092E-5	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9982613884377964	WITHOUT_CLASSIFICATION	0.001738611562203529	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9982613884377964	WITHOUT_CLASSIFICATION	0.001738611562203529	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9996335409709572	WITHOUT_CLASSIFICATION	3.6645902904278215E-4	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9996335409709572	WITHOUT_CLASSIFICATION	3.6645902904278215E-4	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999855925083843	WITHOUT_CLASSIFICATION	1.4407491615848963E-5	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9996193359860883	WITHOUT_CLASSIFICATION	3.8066401391163157E-4	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9996193359860883	WITHOUT_CLASSIFICATION	3.8066401391163157E-4	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9998763164156725	WITHOUT_CLASSIFICATION	1.2368358432757293E-4	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9998763164156725	WITHOUT_CLASSIFICATION	1.2368358432757293E-4	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9998763164156725	WITHOUT_CLASSIFICATION	1.2368358432757293E-4	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999534840430923	WITHOUT_CLASSIFICATION	4.651595690759791E-5	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.999996724698632	WITHOUT_CLASSIFICATION	3.275301367951108E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999249545667918	WITHOUT_CLASSIFICATION	7.504543320826142E-5	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9998763164156725	WITHOUT_CLASSIFICATION	1.2368358432757293E-4	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999900036300945	WITHOUT_CLASSIFICATION	9.996369905505544E-6	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9998796252515699	WITHOUT_CLASSIFICATION	1.2037474843010904E-4	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9998265621300387	WITHOUT_CLASSIFICATION	1.7343786996128782E-4	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999682115196428	WITHOUT_CLASSIFICATION	3.178848035729737E-5	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9996699367971296	WITHOUT_CLASSIFICATION	3.3006320287053804E-4	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9998579109117177	WITHOUT_CLASSIFICATION	1.420890882823804E-4	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9998779907130195	WITHOUT_CLASSIFICATION	1.2200928698040788E-4	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999799639265327	WITHOUT_CLASSIFICATION	2.0036073467291972E-5	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9993620466302812	WITHOUT_CLASSIFICATION	6.379533697188032E-4	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9993620466302812	WITHOUT_CLASSIFICATION	6.379533697188032E-4	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.999618775620907	WITHOUT_CLASSIFICATION	3.8122437909311383E-4	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.999618775620907	WITHOUT_CLASSIFICATION	3.8122437909311383E-4	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.999618775620907	WITHOUT_CLASSIFICATION	3.8122437909311383E-4	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9996935671951891	WITHOUT_CLASSIFICATION	3.0643280481096406E-4	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9996935671951891	WITHOUT_CLASSIFICATION	3.0643280481096406E-4	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9997338816564206	WITHOUT_CLASSIFICATION	2.661183435793611E-4	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9997338816564206	WITHOUT_CLASSIFICATION	2.661183435793611E-4	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9993620466302812	WITHOUT_CLASSIFICATION	6.379533697188032E-4	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999380846128837	WITHOUT_CLASSIFICATION	6.191538711633347E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999255142556012	WITHOUT_CLASSIFICATION	7.44857443988643E-5	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999481941976587	WITHOUT_CLASSIFICATION	5.1805802341355365E-5	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9994881918016383	WITHOUT_CLASSIFICATION	5.11808198361674E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9962492405868648	WITHOUT_CLASSIFICATION	0.003750759413135208	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.999765349937132	WITHOUT_CLASSIFICATION	2.3465006286807193E-4	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9997962447985358	WITHOUT_CLASSIFICATION	2.0375520146415698E-4	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999383140848517	WITHOUT_CLASSIFICATION	6.168591514841323E-5	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9998744452389924	WITHOUT_CLASSIFICATION	1.2555476100759814E-4	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.999892476816614	WITHOUT_CLASSIFICATION	1.075231833860584E-4	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999495402632962	WITHOUT_CLASSIFICATION	5.0459736703849704E-5	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.999963169804071	WITHOUT_CLASSIFICATION	3.683019592902532E-5	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999471040329906	WITHOUT_CLASSIFICATION	5.289596700933711E-5	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.9993099678606464	WITHOUT_CLASSIFICATION	6.900321393537319E-4	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999835248854867	WITHOUT_CLASSIFICATION	1.6475114513305804E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9998920760999889	WITHOUT_CLASSIFICATION	1.0792390001113143E-4	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9994291562968434	WITHOUT_CLASSIFICATION	5.708437031567338E-4	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9990232606942006	WITHOUT_CLASSIFICATION	9.767393057995108E-4	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999082120997356	WITHOUT_CLASSIFICATION	9.178790026441725E-5	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999122741720977	WITHOUT_CLASSIFICATION	8.77258279023418E-5	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9992580913300461	WITHOUT_CLASSIFICATION	7.419086699539328E-4	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999812456904681	WITHOUT_CLASSIFICATION	1.8754309531940407E-5	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999842633161155	WITHOUT_CLASSIFICATION	1.5736683884568933E-5	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999535496823846	WITHOUT_CLASSIFICATION	4.6450317615366256E-5	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999781285337208	WITHOUT_CLASSIFICATION	2.1871466279219264E-5	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9968173730729255	WITHOUT_CLASSIFICATION	0.0031826269270745352	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999396517909296	WITHOUT_CLASSIFICATION	6.0348209070484495E-5	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999448165668935	WITHOUT_CLASSIFICATION	5.518343310644452E-5	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.999752471607099	WITHOUT_CLASSIFICATION	2.4752839290098893E-4	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9998721488132044	WITHOUT_CLASSIFICATION	1.2785118679560522E-4	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999258164398633	WITHOUT_CLASSIFICATION	7.418356013672322E-5	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999583091804264	WITHOUT_CLASSIFICATION	4.169081957365036E-5	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9996412114867281	WITHOUT_CLASSIFICATION	3.587885132718487E-4	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999066163448286	WITHOUT_CLASSIFICATION	9.338365517140153E-5	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9997408650536431	WITHOUT_CLASSIFICATION	2.591349463569069E-4	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9994432956159739	WITHOUT_CLASSIFICATION	5.567043840261503E-4	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9987446615844857	WITHOUT_CLASSIFICATION	0.0012553384155143104	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9995684542684153	WITHOUT_CLASSIFICATION	4.315457315847164E-4	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9998294680480508	WITHOUT_CLASSIFICATION	1.7053195194912968E-4	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.999411755705762	WITHOUT_CLASSIFICATION	5.882442942379827E-4	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9996242891332797	WITHOUT_CLASSIFICATION	3.7571086672032953E-4	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999564956315606	WITHOUT_CLASSIFICATION	4.350436843940472E-5	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9993731942777826	WITHOUT_CLASSIFICATION	6.268057222173916E-4	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9998857585420544	WITHOUT_CLASSIFICATION	1.142414579455522E-4	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9995733036636976	WITHOUT_CLASSIFICATION	4.266963363024246E-4	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9989346063871585	WITHOUT_CLASSIFICATION	0.0010653936128414794	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9998765604801257	WITHOUT_CLASSIFICATION	1.234395198743089E-4	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9988876148895546	WITHOUT_CLASSIFICATION	0.0011123851104454445	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999847990634171	WITHOUT_CLASSIFICATION	1.5200936582970857E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999994819521484	WITHOUT_CLASSIFICATION	5.180478516933504E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9998770387662803	WITHOUT_CLASSIFICATION	1.2296123371965042E-4	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.999946642729591	WITHOUT_CLASSIFICATION	5.335727040900957E-5	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.999946642729591	WITHOUT_CLASSIFICATION	5.335727040900957E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999804112715401	WITHOUT_CLASSIFICATION	1.958872845991358E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999460216430173	WITHOUT_CLASSIFICATION	5.397835698276122E-5	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9992444674168366	WITHOUT_CLASSIFICATION	7.555325831634507E-4	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.999932909894262	WITHOUT_CLASSIFICATION	6.70901057380321E-5	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999324140776464	WITHOUT_CLASSIFICATION	6.758592235358123E-5	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9999403415257725	WITHOUT_CLASSIFICATION	5.965847422754216E-5	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9999430808275742	WITHOUT_CLASSIFICATION	5.691917242567261E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999002467325219	WITHOUT_CLASSIFICATION	9.975326747815291E-5	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9994881918016383	WITHOUT_CLASSIFICATION	5.11808198361674E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999002467325219	WITHOUT_CLASSIFICATION	9.975326747815291E-5	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9998519903674978	WITHOUT_CLASSIFICATION	1.4800963250217775E-4	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9998887136186501	WITHOUT_CLASSIFICATION	1.1128638134985304E-4	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9998167285262105	WITHOUT_CLASSIFICATION	1.8327147378947268E-4	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999564956542698	WITHOUT_CLASSIFICATION	4.35043457301511E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9998712470447572	WITHOUT_CLASSIFICATION	1.2875295524278284E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999419246796821	WITHOUT_CLASSIFICATION	5.80753203179409E-5	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999882594188035	WITHOUT_CLASSIFICATION	1.1740581196565051E-5	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999876943628327	WITHOUT_CLASSIFICATION	1.230563716736245E-5	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9998265621300387	WITHOUT_CLASSIFICATION	1.7343786996128782E-4	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9998920760999889	WITHOUT_CLASSIFICATION	1.0792390001113143E-4	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999003466794408	WITHOUT_CLASSIFICATION	9.965332055921673E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999994819521484	WITHOUT_CLASSIFICATION	5.180478516933504E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9998770387662803	WITHOUT_CLASSIFICATION	1.2296123371965042E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9996519937559001	WITHOUT_CLASSIFICATION	3.4800624409988027E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999419246796821	WITHOUT_CLASSIFICATION	5.80753203179409E-5	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999882594188035	WITHOUT_CLASSIFICATION	1.1740581196565051E-5	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999876943628327	WITHOUT_CLASSIFICATION	1.230563716736245E-5	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999620028732316	WITHOUT_CLASSIFICATION	3.799712676843941E-5	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9996765841791385	WITHOUT_CLASSIFICATION	3.234158208614477E-4	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9996765841791385	WITHOUT_CLASSIFICATION	3.234158208614477E-4	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9993796380197756	WITHOUT_CLASSIFICATION	6.20361980224436E-4	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999427590041324	WITHOUT_CLASSIFICATION	5.724099586764817E-5	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999223624016307	WITHOUT_CLASSIFICATION	7.763759836923439E-5	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9996615895592433	WITHOUT_CLASSIFICATION	3.384104407566323E-4	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9998050267397358	WITHOUT_CLASSIFICATION	1.9497326026430783E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9962492405868648	WITHOUT_CLASSIFICATION	0.003750759413135208	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999383140848517	WITHOUT_CLASSIFICATION	6.168591514841323E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999383140848517	WITHOUT_CLASSIFICATION	6.168591514841323E-5	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999903300382049	WITHOUT_CLASSIFICATION	9.669961795131866E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9998744452389924	WITHOUT_CLASSIFICATION	1.2555476100759814E-4	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.999892476816614	WITHOUT_CLASSIFICATION	1.075231833860584E-4	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999495402632962	WITHOUT_CLASSIFICATION	5.0459736703849704E-5	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.999963169804071	WITHOUT_CLASSIFICATION	3.683019592902532E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999847990634171	WITHOUT_CLASSIFICATION	1.5200936582970857E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999994819521484	WITHOUT_CLASSIFICATION	5.180478516933504E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999460216430173	WITHOUT_CLASSIFICATION	5.397835698276122E-5	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999480744492192	WITHOUT_CLASSIFICATION	5.192555078083021E-5	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999814120037387	WITHOUT_CLASSIFICATION	1.8587996261238918E-5	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999471040329906	WITHOUT_CLASSIFICATION	5.289596700933711E-5	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9986608457759093	WITHOUT_CLASSIFICATION	0.001339154224090669	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9998517662661802	WITHOUT_CLASSIFICATION	1.4823373381966964E-4	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9998744452389924	WITHOUT_CLASSIFICATION	1.2555476100759814E-4	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9997942421818831	WITHOUT_CLASSIFICATION	2.0575781811689204E-4	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9997942421818831	WITHOUT_CLASSIFICATION	2.0575781811689204E-4	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9998251296841598	WITHOUT_CLASSIFICATION	1.7487031584016832E-4	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9993996873892453	WITHOUT_CLASSIFICATION	6.00312610754656E-4	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999654243701379	WITHOUT_CLASSIFICATION	3.457562986211785E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9998896580796919	WITHOUT_CLASSIFICATION	1.1034192030822385E-4	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999903300382049	WITHOUT_CLASSIFICATION	9.669961795131866E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999495402632962	WITHOUT_CLASSIFICATION	5.0459736703849704E-5	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.999963169804071	WITHOUT_CLASSIFICATION	3.683019592902532E-5	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999471040329906	WITHOUT_CLASSIFICATION	5.289596700933711E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9998920760999889	WITHOUT_CLASSIFICATION	1.0792390001113143E-4	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999847990634171	WITHOUT_CLASSIFICATION	1.5200936582970857E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999994819521484	WITHOUT_CLASSIFICATION	5.180478516933504E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9998770387662803	WITHOUT_CLASSIFICATION	1.2296123371965042E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999002467325219	WITHOUT_CLASSIFICATION	9.975326747815291E-5	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999814120037387	WITHOUT_CLASSIFICATION	1.8587996261238918E-5	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9996795307654175	WITHOUT_CLASSIFICATION	3.2046923458255356E-4	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9996795307654175	WITHOUT_CLASSIFICATION	3.2046923458255356E-4	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.999864886228211	WITHOUT_CLASSIFICATION	1.351137717889442E-4	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9998434390111137	WITHOUT_CLASSIFICATION	1.5656098888630092E-4	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999693619921377	WITHOUT_CLASSIFICATION	3.063800786236949E-5	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999693619921377	WITHOUT_CLASSIFICATION	3.063800786236949E-5	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999765512307484	WITHOUT_CLASSIFICATION	2.344876925159006E-5	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999765512307484	WITHOUT_CLASSIFICATION	2.344876925159006E-5	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999044733345527	WITHOUT_CLASSIFICATION	9.552666544740237E-5	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999044733345527	WITHOUT_CLASSIFICATION	9.552666544740237E-5	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999044733345527	WITHOUT_CLASSIFICATION	9.552666544740237E-5	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999691038535611	WITHOUT_CLASSIFICATION	3.0896146439016475E-5	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9998987423089847	WITHOUT_CLASSIFICATION	1.0125769101531353E-4	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9994291562968434	WITHOUT_CLASSIFICATION	5.708437031567338E-4	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9994881918016383	WITHOUT_CLASSIFICATION	5.11808198361674E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9962492405868648	WITHOUT_CLASSIFICATION	0.003750759413135208	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999383140848517	WITHOUT_CLASSIFICATION	6.168591514841323E-5	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9998744452389924	WITHOUT_CLASSIFICATION	1.2555476100759814E-4	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999122741720977	WITHOUT_CLASSIFICATION	8.77258279023418E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999847990634171	WITHOUT_CLASSIFICATION	1.5200936582970857E-5	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9993796380197756	WITHOUT_CLASSIFICATION	6.20361980224436E-4	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9998896580796919	WITHOUT_CLASSIFICATION	1.1034192030822385E-4	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999682259004516	WITHOUT_CLASSIFICATION	3.177409954834998E-5	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9980889163842761	WITHOUT_CLASSIFICATION	0.0019110836157239886	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9999420921190609	WITHOUT_CLASSIFICATION	5.790788093910338E-5	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999410755359082	WITHOUT_CLASSIFICATION	5.8924464091793275E-5	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999312054288756	WITHOUT_CLASSIFICATION	6.879457112437818E-5	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999567389859038	WITHOUT_CLASSIFICATION	4.3261014096320294E-5	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9994735807770342	WITHOUT_CLASSIFICATION	5.264192229658409E-4	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999654974345826	WITHOUT_CLASSIFICATION	3.450256541739547E-5	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9993070175242562	WITHOUT_CLASSIFICATION	6.929824757438663E-4	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9998384725935285	WITHOUT_CLASSIFICATION	1.615274064714973E-4	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999575498811332	WITHOUT_CLASSIFICATION	4.245011886673199E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999495402632962	WITHOUT_CLASSIFICATION	5.0459736703849704E-5	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.999963169804071	WITHOUT_CLASSIFICATION	3.683019592902532E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999847990634171	WITHOUT_CLASSIFICATION	1.5200936582970857E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999994819521484	WITHOUT_CLASSIFICATION	5.180478516933504E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999002467325219	WITHOUT_CLASSIFICATION	9.975326747815291E-5	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999814120037387	WITHOUT_CLASSIFICATION	1.8587996261238918E-5	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999471040329906	WITHOUT_CLASSIFICATION	5.289596700933711E-5	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9998517662661802	WITHOUT_CLASSIFICATION	1.4823373381966964E-4	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9998744452389924	WITHOUT_CLASSIFICATION	1.2555476100759814E-4	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999002467325219	WITHOUT_CLASSIFICATION	9.975326747815291E-5	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999844229022905	WITHOUT_CLASSIFICATION	1.557709770956647E-5	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999007854499309	WITHOUT_CLASSIFICATION	9.921455006907516E-5	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9998086538767194	WITHOUT_CLASSIFICATION	1.913461232806564E-4	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9998426278278988	WITHOUT_CLASSIFICATION	1.573721721011732E-4	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9995675268297717	WITHOUT_CLASSIFICATION	4.324731702283536E-4	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9996966803757252	WITHOUT_CLASSIFICATION	3.033196242747827E-4	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9997535166355881	WITHOUT_CLASSIFICATION	2.4648336441185256E-4	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.999951700758099	WITHOUT_CLASSIFICATION	4.8299241900969036E-5	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.9982616092653581	WITHOUT_CLASSIFICATION	0.0017383907346418313	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9997875944311312	WITHOUT_CLASSIFICATION	2.1240556886884532E-4	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9994550923562644	WITHOUT_CLASSIFICATION	5.449076437356087E-4	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9519977549613421	WITHOUT_CLASSIFICATION	0.04800224503865793	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9998445572229885	WITHOUT_CLASSIFICATION	1.5544277701150775E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.999892476816614	WITHOUT_CLASSIFICATION	1.075231833860584E-4	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9998770387662803	WITHOUT_CLASSIFICATION	1.2296123371965042E-4	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999804112715401	WITHOUT_CLASSIFICATION	1.958872845991358E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999460216430173	WITHOUT_CLASSIFICATION	5.397835698276122E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9998744452389924	WITHOUT_CLASSIFICATION	1.2555476100759814E-4	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999355365704875	WITHOUT_CLASSIFICATION	6.446342951252491E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9997580855480148	WITHOUT_CLASSIFICATION	2.4191445198507722E-4	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999944120886787	WITHOUT_CLASSIFICATION	5.587911321297286E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999944120886787	WITHOUT_CLASSIFICATION	5.587911321297286E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9998836517803381	WITHOUT_CLASSIFICATION	1.1634821966189328E-4	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9998836517803381	WITHOUT_CLASSIFICATION	1.1634821966189328E-4	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9998461609186058	WITHOUT_CLASSIFICATION	1.5383908139425935E-4	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9813377889298078	WITHOUT_CLASSIFICATION	0.018662211070192176	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9996735650652886	WITHOUT_CLASSIFICATION	3.2643493471135656E-4	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999698317767961	WITHOUT_CLASSIFICATION	3.016822320390429E-5	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.999950269758683	WITHOUT_CLASSIFICATION	4.973024131713868E-5	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999188313861419	WITHOUT_CLASSIFICATION	8.116861385812971E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999712370815255	WITHOUT_CLASSIFICATION	2.8762918474531033E-5	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999403756821696	WITHOUT_CLASSIFICATION	5.962431783049229E-5	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999893709287841	WITHOUT_CLASSIFICATION	1.06290712158793E-5	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999753195087775	WITHOUT_CLASSIFICATION	2.4680491222527465E-5	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9994214199350132	WITHOUT_CLASSIFICATION	5.785800649867201E-4	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.999895930328564	WITHOUT_CLASSIFICATION	1.0406967143586007E-4	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9981119900266711	WITHOUT_CLASSIFICATION	0.0018880099733289105	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9996000602232691	WITHOUT_CLASSIFICATION	3.9993977673098496E-4	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999863515775977	WITHOUT_CLASSIFICATION	1.364842240225051E-5	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.999966098639355	WITHOUT_CLASSIFICATION	3.390136064488025E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999129868752921	WITHOUT_CLASSIFICATION	8.70131247078769E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9999064711676012	WITHOUT_CLASSIFICATION	9.352883239875876E-5	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999403755495363	WITHOUT_CLASSIFICATION	5.962445046364243E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999431529145936	WITHOUT_CLASSIFICATION	5.6847085406316276E-5	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999566597549291	WITHOUT_CLASSIFICATION	4.3340245070894156E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999288945943106	WITHOUT_CLASSIFICATION	7.110540568940749E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999322067172026	WITHOUT_CLASSIFICATION	6.779328279732026E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999795666873839	WITHOUT_CLASSIFICATION	2.0433312616132693E-5	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.999961571577459	WITHOUT_CLASSIFICATION	3.842842254091691E-5	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999509351593431	WITHOUT_CLASSIFICATION	4.9064840656917826E-5	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999312054288756	WITHOUT_CLASSIFICATION	6.879457112437818E-5	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999621232525566	WITHOUT_CLASSIFICATION	3.787674744348375E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999543215451427	WITHOUT_CLASSIFICATION	4.567845485713821E-5	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9998586119554368	WITHOUT_CLASSIFICATION	1.4138804456326193E-4	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9996916059845248	WITHOUT_CLASSIFICATION	3.083940154751785E-4	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9991342620408376	WITHOUT_CLASSIFICATION	8.657379591624054E-4	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9995720215756769	WITHOUT_CLASSIFICATION	4.2797842432310565E-4	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999449217055887	WITHOUT_CLASSIFICATION	5.5078294411282215E-5	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999126994104041	WITHOUT_CLASSIFICATION	8.73005895959793E-5	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999856364458484	WITHOUT_CLASSIFICATION	1.43635541517342E-5	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999825154917056	WITHOUT_CLASSIFICATION	1.7484508294396076E-5	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.998803747779625	WITHOUT_CLASSIFICATION	0.0011962522203749408	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9998115540238047	WITHOUT_CLASSIFICATION	1.8844597619532838E-4	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999716593555216	WITHOUT_CLASSIFICATION	2.8340644478429787E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9998770387662803	WITHOUT_CLASSIFICATION	1.2296123371965042E-4	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999804112715401	WITHOUT_CLASSIFICATION	1.958872845991358E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999460216430173	WITHOUT_CLASSIFICATION	5.397835698276122E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9997580855480148	WITHOUT_CLASSIFICATION	2.4191445198507722E-4	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9998744452389924	WITHOUT_CLASSIFICATION	1.2555476100759814E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.99997083143248	WITHOUT_CLASSIFICATION	2.9168567520011375E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999944120886787	WITHOUT_CLASSIFICATION	5.587911321297286E-5	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.999782000701403	WITHOUT_CLASSIFICATION	2.179992985969289E-4	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9998836517803381	WITHOUT_CLASSIFICATION	1.1634821966189328E-4	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999543215451427	WITHOUT_CLASSIFICATION	4.567845485713821E-5	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9998586119554368	WITHOUT_CLASSIFICATION	1.4138804456326193E-4	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999589675541632	WITHOUT_CLASSIFICATION	4.103244583679541E-5	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9993623518779449	WITHOUT_CLASSIFICATION	6.376481220551137E-4	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.999994001127085	WITHOUT_CLASSIFICATION	5.998872914967917E-6	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999389575287638	WITHOUT_CLASSIFICATION	6.104247123611884E-5	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.999945209571276	WITHOUT_CLASSIFICATION	5.479042872402936E-5	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9999127297876291	WITHOUT_CLASSIFICATION	8.727021237090906E-5	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9998487493437264	WITHOUT_CLASSIFICATION	1.5125065627358047E-4	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999602726801422	WITHOUT_CLASSIFICATION	3.9727319857831405E-5	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999660665491776	WITHOUT_CLASSIFICATION	3.393345082236194E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9992019612651868	WITHOUT_CLASSIFICATION	7.980387348131618E-4	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9997522547985213	WITHOUT_CLASSIFICATION	2.4774520147867197E-4	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.999609359762175	WITHOUT_CLASSIFICATION	3.9064023782499823E-4	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999295138364361	WITHOUT_CLASSIFICATION	7.048616356394576E-5	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999260393770159	WITHOUT_CLASSIFICATION	7.396062298410825E-5	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999261216555442	WITHOUT_CLASSIFICATION	7.38783444557619E-5	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9998920760999889	WITHOUT_CLASSIFICATION	1.0792390001113143E-4	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999003466794408	WITHOUT_CLASSIFICATION	9.965332055921673E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999994819521484	WITHOUT_CLASSIFICATION	5.180478516933504E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9998517662661802	WITHOUT_CLASSIFICATION	1.4823373381966964E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999519760827617	WITHOUT_CLASSIFICATION	4.802391723830311E-5	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999922955464999	WITHOUT_CLASSIFICATION	7.704453499946525E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999519760827617	WITHOUT_CLASSIFICATION	4.802391723830311E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999519760827617	WITHOUT_CLASSIFICATION	4.802391723830311E-5	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999922955464999	WITHOUT_CLASSIFICATION	7.704453499946525E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999922955464999	WITHOUT_CLASSIFICATION	7.704453499946525E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9979768790728664	WITHOUT_CLASSIFICATION	0.0020231209271337	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.999949125785957	WITHOUT_CLASSIFICATION	5.087421404317567E-5	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9997674857784054	WITHOUT_CLASSIFICATION	2.325142215945978E-4	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999486396659792	WITHOUT_CLASSIFICATION	5.1360334020805606E-5	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999684479513148	WITHOUT_CLASSIFICATION	3.155204868526813E-5	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.999651106657614	WITHOUT_CLASSIFICATION	3.4889334238599474E-4	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999567044723734	WITHOUT_CLASSIFICATION	4.3295527626608804E-5	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.999387700745802	WITHOUT_CLASSIFICATION	6.122992541980505E-4	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9995710718564196	WITHOUT_CLASSIFICATION	4.289281435804409E-4	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.999975625634864	WITHOUT_CLASSIFICATION	2.4374365136039427E-5	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9998518389688204	WITHOUT_CLASSIFICATION	1.4816103117971845E-4	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999566151927278	WITHOUT_CLASSIFICATION	4.338480727221331E-5	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999354548259086	WITHOUT_CLASSIFICATION	6.454517409130077E-5	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9974543129853711	WITHOUT_CLASSIFICATION	0.0025456870146287978	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9998920760999889	WITHOUT_CLASSIFICATION	1.0792390001113143E-4	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9998770387662803	WITHOUT_CLASSIFICATION	1.2296123371965042E-4	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.999946642729591	WITHOUT_CLASSIFICATION	5.335727040900957E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999804112715401	WITHOUT_CLASSIFICATION	1.958872845991358E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999460216430173	WITHOUT_CLASSIFICATION	5.397835698276122E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9997580855480148	WITHOUT_CLASSIFICATION	2.4191445198507722E-4	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999620028732316	WITHOUT_CLASSIFICATION	3.799712676843941E-5	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9993796380197756	WITHOUT_CLASSIFICATION	6.20361980224436E-4	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9998744452389924	WITHOUT_CLASSIFICATION	1.2555476100759814E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999944120886787	WITHOUT_CLASSIFICATION	5.587911321297286E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.999944120886787	WITHOUT_CLASSIFICATION	5.587911321297286E-5	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.999782000701403	WITHOUT_CLASSIFICATION	2.179992985969289E-4	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999698317767961	WITHOUT_CLASSIFICATION	3.016822320390429E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999712370815255	WITHOUT_CLASSIFICATION	2.8762918474531033E-5	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.999945209571276	WITHOUT_CLASSIFICATION	5.479042872402936E-5	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9998874331466995	WITHOUT_CLASSIFICATION	1.1256685330053884E-4	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9996727648478727	WITHOUT_CLASSIFICATION	3.2723515212728196E-4	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999635420498184	WITHOUT_CLASSIFICATION	3.645795018166763E-5	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999153901884753	WITHOUT_CLASSIFICATION	8.460981152458919E-5	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.99992729577607	WITHOUT_CLASSIFICATION	7.270422392994783E-5	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9996011356606826	WITHOUT_CLASSIFICATION	3.9886433931733434E-4	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9997686540490103	WITHOUT_CLASSIFICATION	2.3134595098964957E-4	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9998356377435159	WITHOUT_CLASSIFICATION	1.6436225648406514E-4	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9998586102085617	WITHOUT_CLASSIFICATION	1.4138979143824338E-4	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999559087312412	WITHOUT_CLASSIFICATION	4.409126875888674E-5	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999751355193709	WITHOUT_CLASSIFICATION	2.4864480629138876E-5	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9972529442572221	WITHOUT_CLASSIFICATION	0.002747055742777865	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9996933814390013	WITHOUT_CLASSIFICATION	3.066185609987388E-4	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999418514780314	WITHOUT_CLASSIFICATION	5.8148521968706606E-5	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999445600967114	WITHOUT_CLASSIFICATION	5.54399032884909E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9998836517803381	WITHOUT_CLASSIFICATION	1.1634821966189328E-4	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9998836517803381	WITHOUT_CLASSIFICATION	1.1634821966189328E-4	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999403755495363	WITHOUT_CLASSIFICATION	5.962445046364243E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999431529145936	WITHOUT_CLASSIFICATION	5.6847085406316276E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999288945943106	WITHOUT_CLASSIFICATION	7.110540568940749E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999322067172026	WITHOUT_CLASSIFICATION	6.779328279732026E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999795666873839	WITHOUT_CLASSIFICATION	2.0433312616132693E-5	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.999961571577459	WITHOUT_CLASSIFICATION	3.842842254091691E-5	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999509351593431	WITHOUT_CLASSIFICATION	4.9064840656917826E-5	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999312054288756	WITHOUT_CLASSIFICATION	6.879457112437818E-5	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999621232525566	WITHOUT_CLASSIFICATION	3.787674744348375E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999543215451427	WITHOUT_CLASSIFICATION	4.567845485713821E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999543215451427	WITHOUT_CLASSIFICATION	4.567845485713821E-5	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999602726801422	WITHOUT_CLASSIFICATION	3.9727319857831405E-5	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9998370300922992	WITHOUT_CLASSIFICATION	1.629699077008449E-4	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9995406756849633	WITHOUT_CLASSIFICATION	4.5932431503665876E-4	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.999943003646501	WITHOUT_CLASSIFICATION	5.699635349905666E-5	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9994279935460562	WITHOUT_CLASSIFICATION	5.720064539437159E-4	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999347874850001	WITHOUT_CLASSIFICATION	6.52125149998338E-5	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9995851103209727	WITHOUT_CLASSIFICATION	4.148896790272726E-4	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9996191071108044	WITHOUT_CLASSIFICATION	3.8089288919559625E-4	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9996191071108044	WITHOUT_CLASSIFICATION	3.8089288919559625E-4	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9975784103106103	WITHOUT_CLASSIFICATION	0.00242158968938966	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999903765957837	WITHOUT_CLASSIFICATION	9.623404216367962E-6	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.999303211258581	WITHOUT_CLASSIFICATION	6.967887414190337E-4	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9993111810145332	WITHOUT_CLASSIFICATION	6.888189854668403E-4	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9997481614280601	WITHOUT_CLASSIFICATION	2.518385719398622E-4	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999903300382049	WITHOUT_CLASSIFICATION	9.669961795131866E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9998744452389924	WITHOUT_CLASSIFICATION	1.2555476100759814E-4	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.99997083143248	WITHOUT_CLASSIFICATION	2.9168567520011375E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.99997083143248	WITHOUT_CLASSIFICATION	2.9168567520011375E-5	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9998586119554368	WITHOUT_CLASSIFICATION	1.4138804456326193E-4	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999449217055887	WITHOUT_CLASSIFICATION	5.5078294411282215E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999449217055887	WITHOUT_CLASSIFICATION	5.5078294411282215E-5	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999126994104041	WITHOUT_CLASSIFICATION	8.73005895959793E-5	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999856364458484	WITHOUT_CLASSIFICATION	1.43635541517342E-5	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999856364458484	WITHOUT_CLASSIFICATION	1.43635541517342E-5	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.999945209571276	WITHOUT_CLASSIFICATION	5.479042872402936E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9992019612651868	WITHOUT_CLASSIFICATION	7.980387348131618E-4	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.999986201215939	WITHOUT_CLASSIFICATION	1.3798784061152254E-5	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9991857359866244	WITHOUT_CLASSIFICATION	8.142640133756222E-4	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9991857359866244	WITHOUT_CLASSIFICATION	8.142640133756222E-4	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.99993234853868	WITHOUT_CLASSIFICATION	6.765146132003907E-5	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999545967284417	WITHOUT_CLASSIFICATION	4.540327155841227E-5	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.999848119182439	WITHOUT_CLASSIFICATION	1.5188081756093653E-4	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9998882654704397	WITHOUT_CLASSIFICATION	1.1173452956036012E-4	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9998151612908378	WITHOUT_CLASSIFICATION	1.8483870916206357E-4	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999864566407	WITHOUT_CLASSIFICATION	1.3543359300062292E-5	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999084343216984	WITHOUT_CLASSIFICATION	9.15656783016512E-5	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9998920760999889	WITHOUT_CLASSIFICATION	1.0792390001113143E-4	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999994819521484	WITHOUT_CLASSIFICATION	5.180478516933504E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9998770387662803	WITHOUT_CLASSIFICATION	1.2296123371965042E-4	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999620028732316	WITHOUT_CLASSIFICATION	3.799712676843941E-5	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999223624016307	WITHOUT_CLASSIFICATION	7.763759836923439E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9997601975480502	WITHOUT_CLASSIFICATION	2.3980245194978319E-4	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.9456004765916914	WITHOUT_CLASSIFICATION	0.05439952340830858	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999204622949287	WITHOUT_CLASSIFICATION	7.953770507122954E-5	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999847990634171	WITHOUT_CLASSIFICATION	1.5200936582970857E-5	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.999964581704011	WITHOUT_CLASSIFICATION	3.541829598890596E-5	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9998920760999889	WITHOUT_CLASSIFICATION	1.0792390001113143E-4	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9998841104781174	WITHOUT_CLASSIFICATION	1.1588952188257878E-4	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999380350137386	WITHOUT_CLASSIFICATION	6.196498626143883E-5	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9998983604954091	WITHOUT_CLASSIFICATION	1.0163950459078991E-4	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999661493004726	WITHOUT_CLASSIFICATION	3.385069952749323E-5	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.99982425049754	WITHOUT_CLASSIFICATION	1.7574950246000703E-4	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999654243701379	WITHOUT_CLASSIFICATION	3.457562986211785E-5	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9995350779824369	WITHOUT_CLASSIFICATION	4.6492201756315047E-4	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999138078114438	WITHOUT_CLASSIFICATION	8.619218855615599E-5	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.9998667228421869	WITHOUT_CLASSIFICATION	1.3327715781315374E-4	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999350929688436	WITHOUT_CLASSIFICATION	6.49070311563274E-5	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999604686019304	WITHOUT_CLASSIFICATION	3.953139806962216E-5	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9991859081883896	WITHOUT_CLASSIFICATION	8.140918116103684E-4	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9998714382187607	WITHOUT_CLASSIFICATION	1.2856178123939944E-4	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9994651126560046	WITHOUT_CLASSIFICATION	5.348873439953212E-4	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999803867135872	WITHOUT_CLASSIFICATION	1.961328641267481E-5	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999598719211116	WITHOUT_CLASSIFICATION	4.0128078888400355E-5	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999700761879018	WITHOUT_CLASSIFICATION	2.9923812098256665E-5	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999142678929643	WITHOUT_CLASSIFICATION	8.573210703561125E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9998770387662803	WITHOUT_CLASSIFICATION	1.2296123371965042E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999519760827617	WITHOUT_CLASSIFICATION	4.802391723830311E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999519760827617	WITHOUT_CLASSIFICATION	4.802391723830311E-5	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999922955464999	WITHOUT_CLASSIFICATION	7.704453499946525E-6	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9991859081883896	WITHOUT_CLASSIFICATION	8.140918116103684E-4	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9993481673458526	WITHOUT_CLASSIFICATION	6.518326541474128E-4	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9998610763734639	WITHOUT_CLASSIFICATION	1.3892362653613143E-4	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999654243701379	WITHOUT_CLASSIFICATION	3.457562986211785E-5	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9998410520757066	WITHOUT_CLASSIFICATION	1.5894792429341047E-4	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999744443575102	WITHOUT_CLASSIFICATION	2.5555642489831582E-5	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9997600888929911	WITHOUT_CLASSIFICATION	2.3991110700892046E-4	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9996616077244325	WITHOUT_CLASSIFICATION	3.383922755675537E-4	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999343080568217	WITHOUT_CLASSIFICATION	6.569194317826675E-5	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999145498697964	WITHOUT_CLASSIFICATION	8.545013020350342E-5	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999966145838787	WITHOUT_CLASSIFICATION	3.3854161212283242E-6	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999701392504395	WITHOUT_CLASSIFICATION	2.9860749560376155E-5	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999691385564148	WITHOUT_CLASSIFICATION	3.0861443585195763E-4	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9996947654131727	WITHOUT_CLASSIFICATION	3.0523458682739363E-4	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.999984479855455	WITHOUT_CLASSIFICATION	1.5520144544976215E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999519760827617	WITHOUT_CLASSIFICATION	4.802391723830311E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999519760827617	WITHOUT_CLASSIFICATION	4.802391723830311E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999519760827617	WITHOUT_CLASSIFICATION	4.802391723830311E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999519760827617	WITHOUT_CLASSIFICATION	4.802391723830311E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999519760827617	WITHOUT_CLASSIFICATION	4.802391723830311E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999519760827617	WITHOUT_CLASSIFICATION	4.802391723830311E-5	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999709074092287	WITHOUT_CLASSIFICATION	2.9092590771324315E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.999984479855455	WITHOUT_CLASSIFICATION	1.5520144544976215E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.999984479855455	WITHOUT_CLASSIFICATION	1.5520144544976215E-5	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999843490894758	WITHOUT_CLASSIFICATION	1.5650910524272303E-5	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999922306316184	WITHOUT_CLASSIFICATION	7.769368381671082E-6	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999909453715795	WITHOUT_CLASSIFICATION	9.054628420520384E-6	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999706580798184	WITHOUT_CLASSIFICATION	2.934192018165502E-5	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991558686367347	WITHOUT_CLASSIFICATION	8.441313632652905E-4	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.999988162631054	WITHOUT_CLASSIFICATION	1.183736894606436E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.9999941237474174	WITHOUT_CLASSIFICATION	5.876252582635771E-6	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9893558365933888	WITHOUT_CLASSIFICATION	0.010644163406611154	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999709074092287	WITHOUT_CLASSIFICATION	2.9092590771324315E-5	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997067178675572	WITHOUT_CLASSIFICATION	2.9328213244284165E-4	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9994286189361175	WITHOUT_CLASSIFICATION	5.713810638825093E-4	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.999918368873056	WITHOUT_CLASSIFICATION	8.163112694408688E-5	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9946084128909614	WITHOUT_CLASSIFICATION	0.005391587109038717	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999400869700914	WITHOUT_CLASSIFICATION	5.991302990850639E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999587088375335	WITHOUT_CLASSIFICATION	4.1291162466503554E-4	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996202768108352	WITHOUT_CLASSIFICATION	3.7972318916475645E-4	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9998998460264672	WITHOUT_CLASSIFICATION	1.0015397353292162E-4	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999653957017093	WITHOUT_CLASSIFICATION	3.460429829063029E-5	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.999927166381213	WITHOUT_CLASSIFICATION	7.28336187869628E-5	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999405053973569	WITHOUT_CLASSIFICATION	5.9494602643008226E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9996335047694523	WITHOUT_CLASSIFICATION	3.6649523054759885E-4	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9996335047694523	WITHOUT_CLASSIFICATION	3.6649523054759885E-4	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9997600700648857	WITHOUT_CLASSIFICATION	2.3992993511442255E-4	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9997600700648857	WITHOUT_CLASSIFICATION	2.3992993511442255E-4	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9931197211941369	WITHOUT_CLASSIFICATION	0.0068802788058629424	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9977325973470684	WITHOUT_CLASSIFICATION	0.002267402652931684	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.9999429877291978	WITHOUT_CLASSIFICATION	5.701227080211276E-5	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9999080498547559	WITHOUT_CLASSIFICATION	9.195014524412776E-5	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9997182273580134	WITHOUT_CLASSIFICATION	2.8177264198656895E-4	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999609594122385	WITHOUT_CLASSIFICATION	3.9040587761539294E-5	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9998195745514455	WITHOUT_CLASSIFICATION	1.804254485544771E-4	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9997946395314765	WITHOUT_CLASSIFICATION	2.0536046852355052E-4	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999631203934779	WITHOUT_CLASSIFICATION	3.6879606522039736E-5	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.6969820386975806	WITHOUT_CLASSIFICATION	0.30301796130241937	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999682909859763	WITHOUT_CLASSIFICATION	3.1709014023811305E-5	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.999941250001348	WITHOUT_CLASSIFICATION	5.874999865205251E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999530300611733	WITHOUT_CLASSIFICATION	4.696993882677142E-5	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9998163726558659	WITHOUT_CLASSIFICATION	1.8362734413403923E-4	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999757569423924	WITHOUT_CLASSIFICATION	2.4243057607659292E-5	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999667187657736	WITHOUT_CLASSIFICATION	3.328123422639241E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.999984479855455	WITHOUT_CLASSIFICATION	1.5520144544976215E-5	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999198404708084	WITHOUT_CLASSIFICATION	8.015952919166061E-5	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999667187657736	WITHOUT_CLASSIFICATION	3.328123422639241E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999146253762392	WITHOUT_CLASSIFICATION	8.537462376075461E-5	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999568463715771	WITHOUT_CLASSIFICATION	4.315362842284985E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.999955844045591	WITHOUT_CLASSIFICATION	4.4155954409010577E-5	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.999937685546465	WITHOUT_CLASSIFICATION	6.231445353500571E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998151608001054	WITHOUT_CLASSIFICATION	1.848391998946335E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998151608001054	WITHOUT_CLASSIFICATION	1.848391998946335E-4	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999488326967884	WITHOUT_CLASSIFICATION	5.116730321166304E-5	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9997824269534696	WITHOUT_CLASSIFICATION	2.1757304653045748E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999073595080534	WITHOUT_CLASSIFICATION	9.2640491946558E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999073595080534	WITHOUT_CLASSIFICATION	9.2640491946558E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9998944666203253	WITHOUT_CLASSIFICATION	1.0553337967458258E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999086886163151	WITHOUT_CLASSIFICATION	9.131138368490837E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999672068160232	WITHOUT_CLASSIFICATION	3.279318397681321E-5	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999889625351553	WITHOUT_CLASSIFICATION	1.1037464844578009E-5	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999272316462527	WITHOUT_CLASSIFICATION	7.276835374717827E-5	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9999045743641838	WITHOUT_CLASSIFICATION	9.542563581622826E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9997915078742675	WITHOUT_CLASSIFICATION	2.0849212573255144E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999419246796821	WITHOUT_CLASSIFICATION	5.80753203179409E-5	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.999918368873056	WITHOUT_CLASSIFICATION	8.163112694408688E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999218093364707	WITHOUT_CLASSIFICATION	7.819066352928639E-5	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9998800587771837	WITHOUT_CLASSIFICATION	1.1994122281636461E-4	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.999958504455997	WITHOUT_CLASSIFICATION	4.149554400297506E-5	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9994120373116083	WITHOUT_CLASSIFICATION	5.879626883916542E-4	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999654243701379	WITHOUT_CLASSIFICATION	3.457562986211785E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999182271432456	WITHOUT_CLASSIFICATION	8.177285675434297E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999285221533821	WITHOUT_CLASSIFICATION	7.147784661790883E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999285221533821	WITHOUT_CLASSIFICATION	7.147784661790883E-5	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999849669943999	WITHOUT_CLASSIFICATION	1.5033005600125818E-5	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999849669943999	WITHOUT_CLASSIFICATION	1.5033005600125818E-5	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999182271432456	WITHOUT_CLASSIFICATION	8.177285675434297E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999401940061862	WITHOUT_CLASSIFICATION	5.980599381393954E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9992214284821115	WITHOUT_CLASSIFICATION	7.785715178885101E-4	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9997721502528018	WITHOUT_CLASSIFICATION	2.2784974719821844E-4	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999721181794947	WITHOUT_CLASSIFICATION	2.788182050527789E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9998070322938764	WITHOUT_CLASSIFICATION	1.9296770612375316E-4	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999602760477785	WITHOUT_CLASSIFICATION	3.972395222160341E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9997950123010598	WITHOUT_CLASSIFICATION	2.0498769894013757E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9998004431411522	WITHOUT_CLASSIFICATION	1.995568588477287E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999463844767464	WITHOUT_CLASSIFICATION	5.361552325362701E-5	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9992495329913224	WITHOUT_CLASSIFICATION	7.504670086776801E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9997950123010598	WITHOUT_CLASSIFICATION	2.0498769894013757E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9998004431411522	WITHOUT_CLASSIFICATION	1.995568588477287E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999463844767464	WITHOUT_CLASSIFICATION	5.361552325362701E-5	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.9999730424141207	WITHOUT_CLASSIFICATION	2.695758587939641E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991178028457269	WITHOUT_CLASSIFICATION	8.821971542729859E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991178028457269	WITHOUT_CLASSIFICATION	8.821971542729859E-4	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999218093364707	WITHOUT_CLASSIFICATION	7.819066352928639E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999218093364707	WITHOUT_CLASSIFICATION	7.819066352928639E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999156436798827	WITHOUT_CLASSIFICATION	8.435632011731664E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999156436798827	WITHOUT_CLASSIFICATION	8.435632011731664E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9997972772767233	WITHOUT_CLASSIFICATION	2.0272272327663033E-4	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9997972772767233	WITHOUT_CLASSIFICATION	2.0272272327663033E-4	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999969897594719	WITHOUT_CLASSIFICATION	3.010240527925824E-6	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9996989350941355	WITHOUT_CLASSIFICATION	3.0106490586444463E-4	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999531293265101	WITHOUT_CLASSIFICATION	4.6870673489963557E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999672068160232	WITHOUT_CLASSIFICATION	3.279318397681321E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999672068160232	WITHOUT_CLASSIFICATION	3.279318397681321E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999654243701379	WITHOUT_CLASSIFICATION	3.457562986211785E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999463844767464	WITHOUT_CLASSIFICATION	5.361552325362701E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991178028457269	WITHOUT_CLASSIFICATION	8.821971542729859E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991178028457269	WITHOUT_CLASSIFICATION	8.821971542729859E-4	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999218093364707	WITHOUT_CLASSIFICATION	7.819066352928639E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999156436798827	WITHOUT_CLASSIFICATION	8.435632011731664E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9975008902989299	WITHOUT_CLASSIFICATION	0.002499109701070032	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.999726405845261	WITHOUT_CLASSIFICATION	2.7359415473904487E-4	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9999353246975844	WITHOUT_CLASSIFICATION	6.46753024156582E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997970459266	WITHOUT_CLASSIFICATION	2.0295407340006539E-4	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9998004431411522	WITHOUT_CLASSIFICATION	1.995568588477287E-4	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9997950123010598	WITHOUT_CLASSIFICATION	2.0498769894013757E-4	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999026510945913	WITHOUT_CLASSIFICATION	9.734890540871444E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999530300611733	WITHOUT_CLASSIFICATION	4.696993882677142E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999654243701379	WITHOUT_CLASSIFICATION	3.457562986211785E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9997950123010598	WITHOUT_CLASSIFICATION	2.0498769894013757E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9998004431411522	WITHOUT_CLASSIFICATION	1.995568588477287E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999463844767464	WITHOUT_CLASSIFICATION	5.361552325362701E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991178028457269	WITHOUT_CLASSIFICATION	8.821971542729859E-4	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999156436798827	WITHOUT_CLASSIFICATION	8.435632011731664E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997970459266	WITHOUT_CLASSIFICATION	2.0295407340006539E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997970459266	WITHOUT_CLASSIFICATION	2.0295407340006539E-4	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9998911107171199	WITHOUT_CLASSIFICATION	1.0888928288006786E-4	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999625881239167	WITHOUT_CLASSIFICATION	3.74118760833744E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999332716678513	WITHOUT_CLASSIFICATION	6.6728332148752E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9998830983387634	WITHOUT_CLASSIFICATION	1.1690166123656703E-4	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999631494104	WITHOUT_CLASSIFICATION	3.6850589600087545E-5	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999530300611733	WITHOUT_CLASSIFICATION	4.696993882677142E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999672068160232	WITHOUT_CLASSIFICATION	3.279318397681321E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999672068160232	WITHOUT_CLASSIFICATION	3.279318397681321E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9994120373116083	WITHOUT_CLASSIFICATION	5.879626883916542E-4	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999654243701379	WITHOUT_CLASSIFICATION	3.457562986211785E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9998070322938764	WITHOUT_CLASSIFICATION	1.9296770612375316E-4	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9998070322938764	WITHOUT_CLASSIFICATION	1.9296770612375316E-4	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9998070322938764	WITHOUT_CLASSIFICATION	1.9296770612375316E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991178028457269	WITHOUT_CLASSIFICATION	8.821971542729859E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9991178028457269	WITHOUT_CLASSIFICATION	8.821971542729859E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997970459266	WITHOUT_CLASSIFICATION	2.0295407340006539E-4	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999625881239167	WITHOUT_CLASSIFICATION	3.74118760833744E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999332716678513	WITHOUT_CLASSIFICATION	6.6728332148752E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9998884451952748	WITHOUT_CLASSIFICATION	1.1155480472532012E-4	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9998562299581903	WITHOUT_CLASSIFICATION	1.4377004180970412E-4	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9998800824120753	WITHOUT_CLASSIFICATION	1.1991758792470694E-4	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9982001065018123	WITHOUT_CLASSIFICATION	0.0017998934981876646	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7181023460966758	WITHOUT_CLASSIFICATION	0.28189765390332416	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9982174044725939	WITHOUT_CLASSIFICATION	0.0017825955274061802	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998151608001054	WITHOUT_CLASSIFICATION	1.848391998946335E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999073595080534	WITHOUT_CLASSIFICATION	9.2640491946558E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999073595080534	WITHOUT_CLASSIFICATION	9.2640491946558E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9998944666203253	WITHOUT_CLASSIFICATION	1.0553337967458258E-4	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999625881239167	WITHOUT_CLASSIFICATION	3.74118760833744E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999731178639745	WITHOUT_CLASSIFICATION	2.688213602546647E-5	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.7680742445401094	DEFECT	0.23192575545989064	WITHOUT_CLASSIFICATION
// switch x and y	WITHOUT_CLASSIFICATION	0.9999384723147848	WITHOUT_CLASSIFICATION	6.152768521519846E-5	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9999271410329947	WITHOUT_CLASSIFICATION	7.285896700532453E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9999271410329947	WITHOUT_CLASSIFICATION	7.285896700532453E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999165279276795	WITHOUT_CLASSIFICATION	8.347207232057291E-5	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999311468538495	WITHOUT_CLASSIFICATION	6.88531461504447E-5	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.99993170430957	WITHOUT_CLASSIFICATION	6.829569042993295E-5	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9996585190053372	WITHOUT_CLASSIFICATION	3.414809946627381E-4	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999731178639745	WITHOUT_CLASSIFICATION	2.688213602546647E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999731178639745	WITHOUT_CLASSIFICATION	2.688213602546647E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9998944666203253	WITHOUT_CLASSIFICATION	1.0553337967458258E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999086886163151	WITHOUT_CLASSIFICATION	9.131138368490837E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9997950123010598	WITHOUT_CLASSIFICATION	2.0498769894013757E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9998004431411522	WITHOUT_CLASSIFICATION	1.995568588477287E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9998565242370178	WITHOUT_CLASSIFICATION	1.4347576298222E-4	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999742136704531	WITHOUT_CLASSIFICATION	2.578632954690797E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9998753784994321	WITHOUT_CLASSIFICATION	1.2462150056787513E-4	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7181023460966758	WITHOUT_CLASSIFICATION	0.28189765390332416	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7181023460966758	WITHOUT_CLASSIFICATION	0.28189765390332416	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999182271432456	WITHOUT_CLASSIFICATION	8.177285675434297E-5	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999182271432456	WITHOUT_CLASSIFICATION	8.177285675434297E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7181023460966758	WITHOUT_CLASSIFICATION	0.28189765390332416	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7181023460966758	WITHOUT_CLASSIFICATION	0.28189765390332416	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997659250459352	WITHOUT_CLASSIFICATION	2.3407495406487254E-4	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999576633904643	WITHOUT_CLASSIFICATION	4.2336609535680924E-5	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.5563879157025255	WITHOUT_CLASSIFICATION	0.4436120842974744	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991558686367347	WITHOUT_CLASSIFICATION	8.441313632652905E-4	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991663510648243	WITHOUT_CLASSIFICATION	8.336489351756842E-4	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999248017703285	WITHOUT_CLASSIFICATION	7.519822967158096E-5	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999815358221741	WITHOUT_CLASSIFICATION	1.8464177825912363E-5	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9996778054391002	WITHOUT_CLASSIFICATION	3.22194560899795E-4	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9997475301997785	WITHOUT_CLASSIFICATION	2.52469800221491E-4	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999576633904643	WITHOUT_CLASSIFICATION	4.2336609535680924E-5	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9997824269534696	WITHOUT_CLASSIFICATION	2.1757304653045748E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999073595080534	WITHOUT_CLASSIFICATION	9.2640491946558E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9998944666203253	WITHOUT_CLASSIFICATION	1.0553337967458258E-4	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9998944666203253	WITHOUT_CLASSIFICATION	1.0553337967458258E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999086886163151	WITHOUT_CLASSIFICATION	9.131138368490837E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999672068160232	WITHOUT_CLASSIFICATION	3.279318397681321E-5	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999272316462527	WITHOUT_CLASSIFICATION	7.276835374717827E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9997915078742675	WITHOUT_CLASSIFICATION	2.0849212573255144E-4	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9998800587771837	WITHOUT_CLASSIFICATION	1.1994122281636461E-4	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999654243701379	WITHOUT_CLASSIFICATION	3.457562986211785E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997970459266	WITHOUT_CLASSIFICATION	2.0295407340006539E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999976801200521	WITHOUT_CLASSIFICATION	2.3198799479285656E-6	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9998800824120753	WITHOUT_CLASSIFICATION	1.1991758792470694E-4	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999893467990271	WITHOUT_CLASSIFICATION	1.0653200973066534E-5	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999746836034585	WITHOUT_CLASSIFICATION	2.5316396541558622E-5	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999503079555054	WITHOUT_CLASSIFICATION	4.969204449461275E-5	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.9998999188983776	WITHOUT_CLASSIFICATION	1.0008110162236537E-4	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9996507055522199	WITHOUT_CLASSIFICATION	3.4929444778005706E-4	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9999045743641838	WITHOUT_CLASSIFICATION	9.542563581622826E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998151608001054	WITHOUT_CLASSIFICATION	1.848391998946335E-4	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9998070322938764	WITHOUT_CLASSIFICATION	1.9296770612375316E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997970459266	WITHOUT_CLASSIFICATION	2.0295407340006539E-4	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9995205273323824	WITHOUT_CLASSIFICATION	4.7947266761762757E-4	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999981740491162	WITHOUT_CLASSIFICATION	1.8259508837600941E-6	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999690576674992	WITHOUT_CLASSIFICATION	3.0942332500771256E-5	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9996769950786825	WITHOUT_CLASSIFICATION	3.2300492131749067E-4	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.99996409587309	WITHOUT_CLASSIFICATION	3.590412690994058E-5	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9994458238487047	WITHOUT_CLASSIFICATION	5.541761512953545E-4	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9977090936338178	WITHOUT_CLASSIFICATION	0.0022909063661822396	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999654243701379	WITHOUT_CLASSIFICATION	3.457562986211785E-5	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999568809238545	WITHOUT_CLASSIFICATION	4.3119076145476756E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999572558495124	WITHOUT_CLASSIFICATION	4.2744150487663844E-5	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7181023460966758	WITHOUT_CLASSIFICATION	0.28189765390332416	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9994458238487047	WITHOUT_CLASSIFICATION	5.541761512953545E-4	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999568809238545	WITHOUT_CLASSIFICATION	4.3119076145476756E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999572558495124	WITHOUT_CLASSIFICATION	4.2744150487663844E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9997332297069657	WITHOUT_CLASSIFICATION	2.6677029303441953E-4	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9998512491237629	WITHOUT_CLASSIFICATION	1.4875087623724204E-4	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999489432238774	WITHOUT_CLASSIFICATION	5.105677612267494E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999489432238774	WITHOUT_CLASSIFICATION	5.105677612267494E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.99984633615173	WITHOUT_CLASSIFICATION	1.5366384826986574E-4	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999481072909837	WITHOUT_CLASSIFICATION	5.189270901622143E-5	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999481072909837	WITHOUT_CLASSIFICATION	5.189270901622143E-5	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9977090936338178	WITHOUT_CLASSIFICATION	0.0022909063661822396	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999654243701379	WITHOUT_CLASSIFICATION	3.457562986211785E-5	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999481072909837	WITHOUT_CLASSIFICATION	5.189270901622143E-5	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999347515600031	WITHOUT_CLASSIFICATION	6.524843999688553E-5	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9998922686388162	WITHOUT_CLASSIFICATION	1.0773136118375558E-4	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999705563535786	WITHOUT_CLASSIFICATION	2.9443646421387232E-5	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9804700434776086	WITHOUT_CLASSIFICATION	0.01952995652239145	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999757615199566	WITHOUT_CLASSIFICATION	2.4238480043324465E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9997635716173012	WITHOUT_CLASSIFICATION	2.3642838269869154E-4	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999405559479381	WITHOUT_CLASSIFICATION	5.944405206195288E-5	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9998298389595143	WITHOUT_CLASSIFICATION	1.7016104048581067E-4	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9998662200400346	WITHOUT_CLASSIFICATION	1.3377995996535652E-4	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9997026632526157	WITHOUT_CLASSIFICATION	2.9733674738435236E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9997635716173012	WITHOUT_CLASSIFICATION	2.3642838269869154E-4	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999709600921244	WITHOUT_CLASSIFICATION	2.9039907875573396E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999493822404105	WITHOUT_CLASSIFICATION	5.061775958935087E-5	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9994981476944633	WITHOUT_CLASSIFICATION	5.018523055367298E-4	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999843697675478	WITHOUT_CLASSIFICATION	1.5630232452264087E-5	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999614393760248	WITHOUT_CLASSIFICATION	3.856062397525579E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999566597549291	WITHOUT_CLASSIFICATION	4.3340245070894156E-5	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999232662208588	WITHOUT_CLASSIFICATION	7.673377914120004E-5	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999216077509258	WITHOUT_CLASSIFICATION	7.839224907429296E-5	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9929026430938226	WITHOUT_CLASSIFICATION	0.007097356906177495	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9929026430938226	WITHOUT_CLASSIFICATION	0.007097356906177495	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9996312116757502	WITHOUT_CLASSIFICATION	3.6878832424982935E-4	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999047461279119	WITHOUT_CLASSIFICATION	9.525387208815392E-5	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9999428957274185	WITHOUT_CLASSIFICATION	5.7104272581529194E-5	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9997977151558461	WITHOUT_CLASSIFICATION	2.0228484415382624E-4	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.999863742837671	WITHOUT_CLASSIFICATION	1.3625716232901542E-4	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9986114397363678	WITHOUT_CLASSIFICATION	0.001388560263632242	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9998555848011899	WITHOUT_CLASSIFICATION	1.4441519881024675E-4	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999183875086161	WITHOUT_CLASSIFICATION	8.161249138390696E-5	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9998470953475437	WITHOUT_CLASSIFICATION	1.5290465245622792E-4	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999661129952475	WITHOUT_CLASSIFICATION	3.388700475259633E-5	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9977972144999534	WITHOUT_CLASSIFICATION	0.0022027855000465745	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9998751614409008	WITHOUT_CLASSIFICATION	1.248385590991513E-4	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999498544271688	WITHOUT_CLASSIFICATION	5.014557283128653E-5	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9994266384480467	WITHOUT_CLASSIFICATION	5.733615519533398E-4	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9994266384480467	WITHOUT_CLASSIFICATION	5.733615519533398E-4	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9998517735727408	WITHOUT_CLASSIFICATION	1.4822642725914291E-4	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9998517735727408	WITHOUT_CLASSIFICATION	1.4822642725914291E-4	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9995148210614635	WITHOUT_CLASSIFICATION	4.8517893853647766E-4	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9993428206417558	WITHOUT_CLASSIFICATION	6.571793582440928E-4	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999315652808108	WITHOUT_CLASSIFICATION	6.843471918916807E-5	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999236485266791	WITHOUT_CLASSIFICATION	7.635147332094708E-5	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999496485920655	WITHOUT_CLASSIFICATION	5.035140793467159E-5	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999256725279667	WITHOUT_CLASSIFICATION	7.432747203325521E-5	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999257931758894	WITHOUT_CLASSIFICATION	7.420682411071657E-5	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999251654009563	WITHOUT_CLASSIFICATION	7.483459904365001E-5	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9998795179500328	WITHOUT_CLASSIFICATION	1.2048204996722232E-4	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999515623201065	WITHOUT_CLASSIFICATION	4.843767989356386E-5	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.999991025747354	WITHOUT_CLASSIFICATION	8.974252645959054E-6	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9997084012720906	WITHOUT_CLASSIFICATION	2.9159872790939856E-4	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.999892458772497	WITHOUT_CLASSIFICATION	1.0754122750306811E-4	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999412428382104	WITHOUT_CLASSIFICATION	5.875716178949524E-5	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999102189617036	WITHOUT_CLASSIFICATION	8.978103829641159E-5	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9997955359172301	WITHOUT_CLASSIFICATION	2.0446408276980044E-4	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999280945906582	WITHOUT_CLASSIFICATION	7.19054093418546E-5	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9998683605583434	WITHOUT_CLASSIFICATION	1.316394416566775E-4	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999734608833514	WITHOUT_CLASSIFICATION	2.6539116648672263E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9996947654131727	WITHOUT_CLASSIFICATION	3.0523458682739363E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999086886163151	WITHOUT_CLASSIFICATION	9.131138368490837E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999566597549291	WITHOUT_CLASSIFICATION	4.3340245070894156E-5	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9998517735727408	WITHOUT_CLASSIFICATION	1.4822642725914291E-4	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9998517735727408	WITHOUT_CLASSIFICATION	1.4822642725914291E-4	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9998683605583434	WITHOUT_CLASSIFICATION	1.316394416566775E-4	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999734608833514	WITHOUT_CLASSIFICATION	2.6539116648672263E-5	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999821205742284	WITHOUT_CLASSIFICATION	1.787942577148085E-5	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999586603944668	WITHOUT_CLASSIFICATION	4.1339605533247254E-5	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.999962466398313	WITHOUT_CLASSIFICATION	3.753360168706605E-5	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.999962466398313	WITHOUT_CLASSIFICATION	3.753360168706605E-5	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999026883306809	WITHOUT_CLASSIFICATION	9.731166931913757E-5	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.999869201331865	WITHOUT_CLASSIFICATION	1.3079866813492695E-4	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.99996598517166	WITHOUT_CLASSIFICATION	3.401482833992516E-5	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999184029628985	WITHOUT_CLASSIFICATION	8.159703710156272E-5	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995884457630995	WITHOUT_CLASSIFICATION	4.115542369006E-4	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997659250459352	WITHOUT_CLASSIFICATION	2.3407495406487254E-4	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999631203934779	WITHOUT_CLASSIFICATION	3.6879606522039736E-5	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7181023460966758	WITHOUT_CLASSIFICATION	0.28189765390332416	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7181023460966758	WITHOUT_CLASSIFICATION	0.28189765390332416	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999399066347169	WITHOUT_CLASSIFICATION	6.009336528321214E-5	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9995926203506165	WITHOUT_CLASSIFICATION	4.073796493834974E-4	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9998751847083289	WITHOUT_CLASSIFICATION	1.2481529167098678E-4	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.999900726454364	WITHOUT_CLASSIFICATION	9.927354563597309E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999587088375335	WITHOUT_CLASSIFICATION	4.1291162466503554E-4	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996202768108352	WITHOUT_CLASSIFICATION	3.7972318916475645E-4	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7198048730831558	WITHOUT_CLASSIFICATION	0.28019512691684423	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997659250459352	WITHOUT_CLASSIFICATION	2.3407495406487254E-4	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999587088375335	WITHOUT_CLASSIFICATION	4.1291162466503554E-4	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999587088375335	WITHOUT_CLASSIFICATION	4.1291162466503554E-4	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.5431379288102752	DEFECT	0.45686207118972477	WITHOUT_CLASSIFICATION
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995865889540825	WITHOUT_CLASSIFICATION	4.134110459175543E-4	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995884457630995	WITHOUT_CLASSIFICATION	4.115542369006E-4	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9999226978145288	WITHOUT_CLASSIFICATION	7.730218547112445E-5	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999845295796349	WITHOUT_CLASSIFICATION	1.547042036503319E-5	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.99989797280847	WITHOUT_CLASSIFICATION	1.020271915299251E-4	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999575811347577	WITHOUT_CLASSIFICATION	4.24188652423592E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998151608001054	WITHOUT_CLASSIFICATION	1.848391998946335E-4	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999405559479381	WITHOUT_CLASSIFICATION	5.944405206195288E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999515947930013	WITHOUT_CLASSIFICATION	4.840520699872162E-5	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9997983181615185	WITHOUT_CLASSIFICATION	2.016818384815076E-4	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999878996860785	WITHOUT_CLASSIFICATION	1.2100313921375801E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9986362053647566	WITHOUT_CLASSIFICATION	0.001363794635243418	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999232502715983	WITHOUT_CLASSIFICATION	7.67497284016665E-5	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9988306966948726	WITHOUT_CLASSIFICATION	0.0011693033051274689	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9991659641972538	WITHOUT_CLASSIFICATION	8.340358027461511E-4	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9997948013725185	WITHOUT_CLASSIFICATION	2.0519862748144533E-4	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9988720392162829	WITHOUT_CLASSIFICATION	0.0011279607837171046	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9997310671198396	WITHOUT_CLASSIFICATION	2.6893288016032477E-4	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9953726728576313	WITHOUT_CLASSIFICATION	0.0046273271423687016	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999343080568217	WITHOUT_CLASSIFICATION	6.569194317826675E-5	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.999918368873056	WITHOUT_CLASSIFICATION	8.163112694408688E-5	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998151608001054	WITHOUT_CLASSIFICATION	1.848391998946335E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999757615199566	WITHOUT_CLASSIFICATION	2.4238480043324465E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9998662200400346	WITHOUT_CLASSIFICATION	1.3377995996535652E-4	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999493822404105	WITHOUT_CLASSIFICATION	5.061775958935087E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999843697675478	WITHOUT_CLASSIFICATION	1.5630232452264087E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999843697675478	WITHOUT_CLASSIFICATION	1.5630232452264087E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999628328660931	WITHOUT_CLASSIFICATION	3.716713390684156E-5	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9922819399259228	WITHOUT_CLASSIFICATION	0.007718060074077163	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999149784019151	WITHOUT_CLASSIFICATION	8.502159808492963E-5	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.999916892520347	WITHOUT_CLASSIFICATION	8.310747965300911E-5	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999042141814397	WITHOUT_CLASSIFICATION	9.578581856022122E-5	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.999725625537396	WITHOUT_CLASSIFICATION	2.7437446260402917E-4	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9997444325551208	WITHOUT_CLASSIFICATION	2.555674448792351E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9998887136186501	WITHOUT_CLASSIFICATION	1.1128638134985304E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999086886163151	WITHOUT_CLASSIFICATION	9.131138368490837E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9986362053647566	WITHOUT_CLASSIFICATION	0.001363794635243418	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9997420547336708	WITHOUT_CLASSIFICATION	2.579452663291403E-4	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9699555998279298	WITHOUT_CLASSIFICATION	0.03004440017207012	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.999963958385192	WITHOUT_CLASSIFICATION	3.604161480790416E-5	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9998664660293374	WITHOUT_CLASSIFICATION	1.335339706625954E-4	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999720787123331	WITHOUT_CLASSIFICATION	2.792128766689286E-5	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999459683608237	WITHOUT_CLASSIFICATION	5.403163917631787E-5	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.999966940958131	WITHOUT_CLASSIFICATION	3.3059041869035504E-5	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999379665926938	WITHOUT_CLASSIFICATION	6.203340730620452E-5	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9998275061800312	WITHOUT_CLASSIFICATION	1.724938199687634E-4	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9996013476242701	WITHOUT_CLASSIFICATION	3.9865237572989695E-4	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999238732731062	WITHOUT_CLASSIFICATION	7.612672689375825E-5	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999200794045998	WITHOUT_CLASSIFICATION	7.992059540027832E-5	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9999458572244901	WITHOUT_CLASSIFICATION	5.414277550975982E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999419246796821	WITHOUT_CLASSIFICATION	5.80753203179409E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999182271432456	WITHOUT_CLASSIFICATION	8.177285675434297E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999285221533821	WITHOUT_CLASSIFICATION	7.147784661790883E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999285221533821	WITHOUT_CLASSIFICATION	7.147784661790883E-5	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999849669943999	WITHOUT_CLASSIFICATION	1.5033005600125818E-5	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999849669943999	WITHOUT_CLASSIFICATION	1.5033005600125818E-5	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999182271432456	WITHOUT_CLASSIFICATION	8.177285675434297E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999401940061862	WITHOUT_CLASSIFICATION	5.980599381393954E-5	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9997721502528018	WITHOUT_CLASSIFICATION	2.2784974719821844E-4	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9997721502528018	WITHOUT_CLASSIFICATION	2.2784974719821844E-4	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999721181794947	WITHOUT_CLASSIFICATION	2.788182050527789E-5	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999721181794947	WITHOUT_CLASSIFICATION	2.788182050527789E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9982001065018123	WITHOUT_CLASSIFICATION	0.0017998934981876646	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.9999527203216049	WITHOUT_CLASSIFICATION	4.727967839508824E-5	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999944135751332	WITHOUT_CLASSIFICATION	5.586424866827382E-6	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999522510701966	WITHOUT_CLASSIFICATION	4.774892980334625E-5	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9999677059375707	WITHOUT_CLASSIFICATION	3.2294062429351544E-5	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9998912160290001	WITHOUT_CLASSIFICATION	1.0878397099994526E-4	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9996940706026468	WITHOUT_CLASSIFICATION	3.0592939735322604E-4	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999801937439474	WITHOUT_CLASSIFICATION	1.9806256052600695E-5	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9987291553460441	WITHOUT_CLASSIFICATION	0.0012708446539559108	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9964543777266577	WITHOUT_CLASSIFICATION	0.003545622273342276	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999877013811802	WITHOUT_CLASSIFICATION	1.2298618819763159E-5	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.999988274288691	WITHOUT_CLASSIFICATION	1.1725711308998966E-5	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999566929745813	WITHOUT_CLASSIFICATION	4.3307025418711695E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998151608001054	WITHOUT_CLASSIFICATION	1.848391998946335E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999086886163151	WITHOUT_CLASSIFICATION	9.131138368490837E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9998981105413219	WITHOUT_CLASSIFICATION	1.0188945867811966E-4	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9998662200400346	WITHOUT_CLASSIFICATION	1.3377995996535652E-4	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999493822404105	WITHOUT_CLASSIFICATION	5.061775958935087E-5	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999184029628985	WITHOUT_CLASSIFICATION	8.159703710156272E-5	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9922819399259228	WITHOUT_CLASSIFICATION	0.007718060074077163	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9996707988246722	WITHOUT_CLASSIFICATION	3.2920117532781975E-4	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9996139246843109	WITHOUT_CLASSIFICATION	3.860753156891383E-4	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999716712700153	WITHOUT_CLASSIFICATION	2.8328729984688352E-5	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999207976896629	WITHOUT_CLASSIFICATION	7.920231033714641E-5	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.999752726058625	WITHOUT_CLASSIFICATION	2.4727394137502996E-4	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999364218590877	WITHOUT_CLASSIFICATION	6.357814091224993E-5	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.999952992903081	WITHOUT_CLASSIFICATION	4.7007096918924796E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.999984479855455	WITHOUT_CLASSIFICATION	1.5520144544976215E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.999955844045591	WITHOUT_CLASSIFICATION	4.4155954409010577E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9998830983387634	WITHOUT_CLASSIFICATION	1.1690166123656703E-4	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999631494104	WITHOUT_CLASSIFICATION	3.6850589600087545E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999843697675478	WITHOUT_CLASSIFICATION	1.5630232452264087E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999566597549291	WITHOUT_CLASSIFICATION	4.3340245070894156E-5	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9995926203506165	WITHOUT_CLASSIFICATION	4.073796493834974E-4	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999860595546436	WITHOUT_CLASSIFICATION	1.3940445356343692E-5	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9989442222311116	WITHOUT_CLASSIFICATION	0.001055777768888449	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999948601629643	WITHOUT_CLASSIFICATION	5.139837035610527E-6	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9997031720018819	WITHOUT_CLASSIFICATION	2.968279981181648E-4	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.999880574589093	WITHOUT_CLASSIFICATION	1.1942541090699E-4	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999631179286301	WITHOUT_CLASSIFICATION	3.6882071369868156E-5	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9997444325551208	WITHOUT_CLASSIFICATION	2.555674448792351E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999086886163151	WITHOUT_CLASSIFICATION	9.131138368490837E-5	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999976801200521	WITHOUT_CLASSIFICATION	2.3198799479285656E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9998662200400346	WITHOUT_CLASSIFICATION	1.3377995996535652E-4	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.999963958385192	WITHOUT_CLASSIFICATION	3.604161480790416E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999720787123331	WITHOUT_CLASSIFICATION	2.792128766689286E-5	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999872429530744	WITHOUT_CLASSIFICATION	1.2757046925621458E-5	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999035638402256	WITHOUT_CLASSIFICATION	9.643615977440057E-5	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999151010940339	WITHOUT_CLASSIFICATION	8.489890596607631E-5	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999171535201226	WITHOUT_CLASSIFICATION	8.2846479877472E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999568809238545	WITHOUT_CLASSIFICATION	4.3119076145476756E-5	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999572558495124	WITHOUT_CLASSIFICATION	4.2744150487663844E-5	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999610947038569	WITHOUT_CLASSIFICATION	3.890529614313967E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999568809238545	WITHOUT_CLASSIFICATION	4.3119076145476756E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996322743345144	WITHOUT_CLASSIFICATION	3.677256654856414E-4	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999572558495124	WITHOUT_CLASSIFICATION	4.2744150487663844E-5	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999610947038569	WITHOUT_CLASSIFICATION	3.890529614313967E-5	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999483632200257	WITHOUT_CLASSIFICATION	5.1636779974236116E-5	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9998279772822993	WITHOUT_CLASSIFICATION	1.7202271770063314E-4	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9998279772822993	WITHOUT_CLASSIFICATION	1.7202271770063314E-4	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9997332297069657	WITHOUT_CLASSIFICATION	2.6677029303441953E-4	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9999488272957222	WITHOUT_CLASSIFICATION	5.117270427773987E-5	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999981550748778	WITHOUT_CLASSIFICATION	1.8449251222032523E-6	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999481072909837	WITHOUT_CLASSIFICATION	5.189270901622143E-5	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999481072909837	WITHOUT_CLASSIFICATION	5.189270901622143E-5	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999481072909837	WITHOUT_CLASSIFICATION	5.189270901622143E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9998673935494721	WITHOUT_CLASSIFICATION	1.326064505279779E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9998662200400346	WITHOUT_CLASSIFICATION	1.3377995996535652E-4	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9997332297069657	WITHOUT_CLASSIFICATION	2.6677029303441953E-4	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999935417075021	WITHOUT_CLASSIFICATION	6.458292497904381E-5	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999705563535786	WITHOUT_CLASSIFICATION	2.9443646421387232E-5	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999814120751254	WITHOUT_CLASSIFICATION	1.8587924874666555E-5	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9972452469552744	WITHOUT_CLASSIFICATION	0.002754753044725581	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9979730577726234	WITHOUT_CLASSIFICATION	0.002026942227376588	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999508121323656	WITHOUT_CLASSIFICATION	4.9187867634376015E-5	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.999533598318926	WITHOUT_CLASSIFICATION	4.664016810741393E-4	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9965129910515197	WITHOUT_CLASSIFICATION	0.00348700894848036	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9998642731621917	WITHOUT_CLASSIFICATION	1.357268378082144E-4	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999935417075021	WITHOUT_CLASSIFICATION	6.458292497904381E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999935417075021	WITHOUT_CLASSIFICATION	6.458292497904381E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999935417075021	WITHOUT_CLASSIFICATION	6.458292497904381E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999935417075021	WITHOUT_CLASSIFICATION	6.458292497904381E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998151608001054	WITHOUT_CLASSIFICATION	1.848391998946335E-4	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999565253769053	WITHOUT_CLASSIFICATION	4.347462309470438E-5	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999815358221741	WITHOUT_CLASSIFICATION	1.8464177825912363E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.999963958385192	WITHOUT_CLASSIFICATION	3.604161480790416E-5	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9998664660293374	WITHOUT_CLASSIFICATION	1.335339706625954E-4	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999720787123331	WITHOUT_CLASSIFICATION	2.792128766689286E-5	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9998313592075311	WITHOUT_CLASSIFICATION	1.686407924688918E-4	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9994054025356682	WITHOUT_CLASSIFICATION	5.945974643317393E-4	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9979285308535973	WITHOUT_CLASSIFICATION	0.0020714691464026385	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9998603502164238	WITHOUT_CLASSIFICATION	1.3964978357625465E-4	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999648399080024	WITHOUT_CLASSIFICATION	3.51600919976306E-5	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999648399080024	WITHOUT_CLASSIFICATION	3.51600919976306E-5	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9996980671553299	WITHOUT_CLASSIFICATION	3.019328446699831E-4	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9996980671553299	WITHOUT_CLASSIFICATION	3.019328446699831E-4	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999631203934779	WITHOUT_CLASSIFICATION	3.6879606522039736E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998151608001054	WITHOUT_CLASSIFICATION	1.848391998946335E-4	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999969897594719	WITHOUT_CLASSIFICATION	3.010240527925824E-6	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999981740491162	WITHOUT_CLASSIFICATION	1.8259508837600941E-6	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999761079553112	WITHOUT_CLASSIFICATION	2.3892044688724483E-5	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9991222206572818	WITHOUT_CLASSIFICATION	8.777793427181855E-4	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9997011301683169	WITHOUT_CLASSIFICATION	2.988698316830927E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9994549260242643	WITHOUT_CLASSIFICATION	5.450739757356705E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999682909859763	WITHOUT_CLASSIFICATION	3.1709014023811305E-5	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.999941250001348	WITHOUT_CLASSIFICATION	5.874999865205251E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9992214284821115	WITHOUT_CLASSIFICATION	7.785715178885101E-4	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9997721502528018	WITHOUT_CLASSIFICATION	2.2784974719821844E-4	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9982001065018123	WITHOUT_CLASSIFICATION	0.0017998934981876646	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9997948013725185	WITHOUT_CLASSIFICATION	2.0519862748144533E-4	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999935417075021	WITHOUT_CLASSIFICATION	6.458292497904381E-5	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9992207860905908	WITHOUT_CLASSIFICATION	7.792139094091658E-4	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999822492439764	WITHOUT_CLASSIFICATION	1.7750756023623074E-5	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9996827166209896	WITHOUT_CLASSIFICATION	3.172833790104148E-4	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999107259099665	WITHOUT_CLASSIFICATION	8.927409003340806E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999935417075021	WITHOUT_CLASSIFICATION	6.458292497904381E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999892598819893	WITHOUT_CLASSIFICATION	1.0740118010756476E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9998382559629422	WITHOUT_CLASSIFICATION	1.6174403705783455E-4	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999568809238545	WITHOUT_CLASSIFICATION	4.3119076145476756E-5	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999572558495124	WITHOUT_CLASSIFICATION	4.2744150487663844E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999610947038569	WITHOUT_CLASSIFICATION	3.890529614313967E-5	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9993428206417558	WITHOUT_CLASSIFICATION	6.571793582440928E-4	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998387945079598	WITHOUT_CLASSIFICATION	1.6120549204021775E-4	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999798858057699	WITHOUT_CLASSIFICATION	2.0114194230128286E-5	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9998731858231129	WITHOUT_CLASSIFICATION	1.2681417688709394E-4	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.999851573982774	WITHOUT_CLASSIFICATION	1.4842601722607612E-4	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9933488706329159	WITHOUT_CLASSIFICATION	0.006651129367084064	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999756562520364	WITHOUT_CLASSIFICATION	2.4343747963510783E-5	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999509719893592	WITHOUT_CLASSIFICATION	4.902801064079144E-5	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9997720593476892	WITHOUT_CLASSIFICATION	2.2794065231071365E-4	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9997791860747204	WITHOUT_CLASSIFICATION	2.2081392527956227E-4	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.999961092868233	WITHOUT_CLASSIFICATION	3.890713176700912E-5	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.999961092868233	WITHOUT_CLASSIFICATION	3.890713176700912E-5	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999531303381345	WITHOUT_CLASSIFICATION	4.686966186556248E-5	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9998313592075311	WITHOUT_CLASSIFICATION	1.686407924688918E-4	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998661378424633	WITHOUT_CLASSIFICATION	1.3386215753676434E-4	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9981915170662987	WITHOUT_CLASSIFICATION	0.0018084829337013531	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9981915170662987	WITHOUT_CLASSIFICATION	0.0018084829337013531	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9998029529516236	WITHOUT_CLASSIFICATION	1.9704704837636525E-4	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9996092805631742	WITHOUT_CLASSIFICATION	3.907194368257191E-4	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999889002714073	WITHOUT_CLASSIFICATION	1.1099728592599655E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998661378424633	WITHOUT_CLASSIFICATION	1.3386215753676434E-4	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998661378424633	WITHOUT_CLASSIFICATION	1.3386215753676434E-4	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998661378424633	WITHOUT_CLASSIFICATION	1.3386215753676434E-4	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9998273120765537	WITHOUT_CLASSIFICATION	1.7268792344629072E-4	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9981915170662987	WITHOUT_CLASSIFICATION	0.0018084829337013531	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9997475301997785	WITHOUT_CLASSIFICATION	2.52469800221491E-4	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.999976508437383	WITHOUT_CLASSIFICATION	2.3491562617054415E-5	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.999993678170015	WITHOUT_CLASSIFICATION	6.321829984961574E-6	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999608183084358	WITHOUT_CLASSIFICATION	3.918169156413434E-5	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9997770095843848	WITHOUT_CLASSIFICATION	2.2299041561510047E-4	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999915239214083	WITHOUT_CLASSIFICATION	8.476078591688069E-6	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999142678929643	WITHOUT_CLASSIFICATION	8.573210703561125E-5	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9992994377943394	WITHOUT_CLASSIFICATION	7.005622056606053E-4	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999660283006602	WITHOUT_CLASSIFICATION	3.3971699339787175E-5	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.9989937562125313	WITHOUT_CLASSIFICATION	0.0010062437874687287	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999710122470785	WITHOUT_CLASSIFICATION	2.898775292151755E-5	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9982586811692551	WITHOUT_CLASSIFICATION	0.0017413188307449639	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999829284878948	WITHOUT_CLASSIFICATION	1.7071512105169027E-5	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999343637411996	WITHOUT_CLASSIFICATION	6.563625880041925E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999807155781276	WITHOUT_CLASSIFICATION	1.9284421872435142E-5	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999418799789483	WITHOUT_CLASSIFICATION	5.812002105160532E-5	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9998796019006931	WITHOUT_CLASSIFICATION	1.2039809930688331E-4	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9997600724252941	WITHOUT_CLASSIFICATION	2.3992757470593944E-4	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9998283605296915	WITHOUT_CLASSIFICATION	1.716394703085342E-4	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9998283605296915	WITHOUT_CLASSIFICATION	1.716394703085342E-4	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999482329642223	WITHOUT_CLASSIFICATION	5.176703577761348E-5	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999482329642223	WITHOUT_CLASSIFICATION	5.176703577761348E-5	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9997485278448704	WITHOUT_CLASSIFICATION	2.51472155129467E-4	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9995193382864428	WITHOUT_CLASSIFICATION	4.806617135572038E-4	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9988094030765012	WITHOUT_CLASSIFICATION	0.0011905969234987774	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.999548581528747	WITHOUT_CLASSIFICATION	4.514184712529475E-4	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.999146268921692	WITHOUT_CLASSIFICATION	8.53731078308096E-4	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9989075902006727	WITHOUT_CLASSIFICATION	0.001092409799327408	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9987444889697018	WITHOUT_CLASSIFICATION	0.0012555110302981554	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9997126365788583	WITHOUT_CLASSIFICATION	2.873634211417121E-4	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9993610253082191	WITHOUT_CLASSIFICATION	6.389746917809687E-4	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9996419991801421	WITHOUT_CLASSIFICATION	3.580008198579254E-4	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999836206912057	WITHOUT_CLASSIFICATION	1.637930879430204E-5	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9987554252668582	WITHOUT_CLASSIFICATION	0.0012445747331418483	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9543063251308759	WITHOUT_CLASSIFICATION	0.04569367486912406	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9980745301964081	WITHOUT_CLASSIFICATION	0.0019254698035918833	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.994884639564706	WITHOUT_CLASSIFICATION	0.0051153604352939894	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999590878292944	WITHOUT_CLASSIFICATION	4.091217070560629E-5	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9997168168333482	WITHOUT_CLASSIFICATION	2.8318316665182407E-4	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9997168168333482	WITHOUT_CLASSIFICATION	2.8318316665182407E-4	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9998876938418441	WITHOUT_CLASSIFICATION	1.1230615815591128E-4	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9998876938418441	WITHOUT_CLASSIFICATION	1.1230615815591128E-4	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9996935671951891	WITHOUT_CLASSIFICATION	3.0643280481096406E-4	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9993830796634723	WITHOUT_CLASSIFICATION	6.169203365277687E-4	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9977854104304323	WITHOUT_CLASSIFICATION	0.0022145895695677123	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9998947293970589	WITHOUT_CLASSIFICATION	1.0527060294116841E-4	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999562831040327	WITHOUT_CLASSIFICATION	4.3716895967308456E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999562831040327	WITHOUT_CLASSIFICATION	4.3716895967308456E-5	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9998625319699193	WITHOUT_CLASSIFICATION	1.3746803008068018E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9997961378909997	WITHOUT_CLASSIFICATION	2.038621090003863E-4	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999575190990684	WITHOUT_CLASSIFICATION	4.248090093159332E-5	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999866107850959	WITHOUT_CLASSIFICATION	1.3389214904111708E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999559247810004	WITHOUT_CLASSIFICATION	4.407521899953069E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9998322680809502	WITHOUT_CLASSIFICATION	1.6773191904989116E-4	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9998322680809502	WITHOUT_CLASSIFICATION	1.6773191904989116E-4	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9998677722656618	WITHOUT_CLASSIFICATION	1.3222773433820353E-4	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999765473293101	WITHOUT_CLASSIFICATION	2.3452670690019044E-5	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999765473293101	WITHOUT_CLASSIFICATION	2.3452670690019044E-5	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999886450431401	WITHOUT_CLASSIFICATION	1.1354956859824571E-5	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9998348723204151	WITHOUT_CLASSIFICATION	1.651276795848765E-4	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999707057019702	WITHOUT_CLASSIFICATION	2.9294298029677808E-5	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999588180620044	WITHOUT_CLASSIFICATION	4.118193799559051E-5	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9997999421441534	WITHOUT_CLASSIFICATION	2.000578558467101E-4	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999088929905755	WITHOUT_CLASSIFICATION	9.110700942452283E-5	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9998498584867874	WITHOUT_CLASSIFICATION	1.5014151321257802E-4	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999562831040327	WITHOUT_CLASSIFICATION	4.3716895967308456E-5	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999575190990684	WITHOUT_CLASSIFICATION	4.248090093159332E-5	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999938372359178	WITHOUT_CLASSIFICATION	6.162764082158885E-6	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999543315759742	WITHOUT_CLASSIFICATION	4.566842402577006E-5	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999543315759742	WITHOUT_CLASSIFICATION	4.566842402577006E-5	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999613028487904	WITHOUT_CLASSIFICATION	3.8697151209551484E-5	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9998470061965513	WITHOUT_CLASSIFICATION	1.5299380344877068E-4	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999858021386729	WITHOUT_CLASSIFICATION	1.4197861326960042E-5	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999904893979458	WITHOUT_CLASSIFICATION	9.5106020542868E-6	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9995683116923226	WITHOUT_CLASSIFICATION	4.316883076773878E-4	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.999935937568409	WITHOUT_CLASSIFICATION	6.406243159097837E-5	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999518747478409	WITHOUT_CLASSIFICATION	4.812525215920654E-5	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.999953321172244	WITHOUT_CLASSIFICATION	4.667882775604079E-5	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.999959684576632	WITHOUT_CLASSIFICATION	4.031542336807496E-5	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9994665218128952	WITHOUT_CLASSIFICATION	5.334781871048521E-4	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999882706592276	WITHOUT_CLASSIFICATION	1.1729340772457377E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9996517992170232	WITHOUT_CLASSIFICATION	3.482007829767929E-4	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999225323136365	WITHOUT_CLASSIFICATION	7.746768636357638E-5	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999963832057246	WITHOUT_CLASSIFICATION	3.6167942752921327E-6	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.999625641564144	WITHOUT_CLASSIFICATION	3.743584358559236E-4	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9998097796088873	WITHOUT_CLASSIFICATION	1.9022039111273254E-4	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9998469217820275	WITHOUT_CLASSIFICATION	1.5307821797250825E-4	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9997154335316365	WITHOUT_CLASSIFICATION	2.8456646836353566E-4	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9998967881441215	WITHOUT_CLASSIFICATION	1.032118558783743E-4	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999492912099318	WITHOUT_CLASSIFICATION	5.070879006807062E-5	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9999626795357967	WITHOUT_CLASSIFICATION	3.7320464203365005E-5	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9998980903478741	WITHOUT_CLASSIFICATION	1.0190965212595135E-4	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999681107689748	WITHOUT_CLASSIFICATION	3.1889231025162284E-5	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999642236531366	WITHOUT_CLASSIFICATION	3.5776346863323875E-5	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999681107689748	WITHOUT_CLASSIFICATION	3.1889231025162284E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998390503867112	WITHOUT_CLASSIFICATION	1.609496132887955E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998390503867112	WITHOUT_CLASSIFICATION	1.609496132887955E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998390503867112	WITHOUT_CLASSIFICATION	1.609496132887955E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998390503867112	WITHOUT_CLASSIFICATION	1.609496132887955E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998802873074278	WITHOUT_CLASSIFICATION	1.1971269257211317E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998338097738144	WITHOUT_CLASSIFICATION	1.661902261856236E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998643692696404	WITHOUT_CLASSIFICATION	1.3563073035957867E-4	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999938372359178	WITHOUT_CLASSIFICATION	6.162764082158885E-6	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999592824903858	WITHOUT_CLASSIFICATION	4.071750961411647E-5	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999592824903858	WITHOUT_CLASSIFICATION	4.071750961411647E-5	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999621141238418	WITHOUT_CLASSIFICATION	3.788587615810596E-5	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999621141238418	WITHOUT_CLASSIFICATION	3.788587615810596E-5	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999621141238418	WITHOUT_CLASSIFICATION	3.788587615810596E-5	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999621141238418	WITHOUT_CLASSIFICATION	3.788587615810596E-5	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999621141238418	WITHOUT_CLASSIFICATION	3.788587615810596E-5	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9998118396419804	WITHOUT_CLASSIFICATION	1.881603580196092E-4	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9998118396419804	WITHOUT_CLASSIFICATION	1.881603580196092E-4	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999621141238418	WITHOUT_CLASSIFICATION	3.788587615810596E-5	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9998985019797452	WITHOUT_CLASSIFICATION	1.0149802025477356E-4	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9998985019797452	WITHOUT_CLASSIFICATION	1.0149802025477356E-4	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9996238786811383	WITHOUT_CLASSIFICATION	3.7612131886157954E-4	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9983508864694755	WITHOUT_CLASSIFICATION	0.001649113530524602	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9983508864694755	WITHOUT_CLASSIFICATION	0.001649113530524602	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.998524599225268	WITHOUT_CLASSIFICATION	0.0014754007747319715	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.998524599225268	WITHOUT_CLASSIFICATION	0.0014754007747319715	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.998524599225268	WITHOUT_CLASSIFICATION	0.0014754007747319715	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.999192406405429	WITHOUT_CLASSIFICATION	8.075935945711611E-4	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9999555022459033	WITHOUT_CLASSIFICATION	4.449775409654572E-5	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999133174610635	WITHOUT_CLASSIFICATION	8.66825389365245E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999969897594719	WITHOUT_CLASSIFICATION	3.010240527925824E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999969897594719	WITHOUT_CLASSIFICATION	3.010240527925824E-6	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9995205273323824	WITHOUT_CLASSIFICATION	4.7947266761762757E-4	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999886450431401	WITHOUT_CLASSIFICATION	1.1354956859824571E-5	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999963832057246	WITHOUT_CLASSIFICATION	3.6167942752921327E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999963832057246	WITHOUT_CLASSIFICATION	3.6167942752921327E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998390503867112	WITHOUT_CLASSIFICATION	1.609496132887955E-4	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999938372359178	WITHOUT_CLASSIFICATION	6.162764082158885E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.999192406405429	WITHOUT_CLASSIFICATION	8.075935945711611E-4	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.999192406405429	WITHOUT_CLASSIFICATION	8.075935945711611E-4	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9855434153619144	WITHOUT_CLASSIFICATION	0.01445658463808572	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9998540545319581	WITHOUT_CLASSIFICATION	1.4594546804196133E-4	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999695605669153	WITHOUT_CLASSIFICATION	3.043943308470273E-5	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.999977239477634	WITHOUT_CLASSIFICATION	2.2760522366026782E-5	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999490288655358	WITHOUT_CLASSIFICATION	5.097113446422269E-5	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999512190796243	WITHOUT_CLASSIFICATION	4.87809203757933E-5	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9995149665614742	WITHOUT_CLASSIFICATION	4.850334385258487E-4	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999936198947951	WITHOUT_CLASSIFICATION	6.380105204834998E-6	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999962513686947	WITHOUT_CLASSIFICATION	3.7486313051400056E-6	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999009921917865	WITHOUT_CLASSIFICATION	9.900780821355562E-5	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.99969395508837	WITHOUT_CLASSIFICATION	3.060449116299984E-4	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.999934141235737	WITHOUT_CLASSIFICATION	6.585876426307262E-5	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999631179286301	WITHOUT_CLASSIFICATION	3.6882071369868156E-5	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9999463964109743	WITHOUT_CLASSIFICATION	5.360358902579263E-5	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9998385274678773	WITHOUT_CLASSIFICATION	1.6147253212265807E-4	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999309504314381	WITHOUT_CLASSIFICATION	6.904956856185798E-5	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9996569606810228	WITHOUT_CLASSIFICATION	3.4303931897727304E-4	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9828252708241437	WITHOUT_CLASSIFICATION	0.01717472917585622	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9992176753055572	WITHOUT_CLASSIFICATION	7.823246944428061E-4	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999780665947389	WITHOUT_CLASSIFICATION	2.193340526114543E-5	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9999101637261184	WITHOUT_CLASSIFICATION	8.983627388169499E-5	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.999705468004087	WITHOUT_CLASSIFICATION	2.945319959130881E-4	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999562831040327	WITHOUT_CLASSIFICATION	4.3716895967308456E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999562831040327	WITHOUT_CLASSIFICATION	4.3716895967308456E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998390503867112	WITHOUT_CLASSIFICATION	1.609496132887955E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998390503867112	WITHOUT_CLASSIFICATION	1.609496132887955E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998802873074278	WITHOUT_CLASSIFICATION	1.1971269257211317E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998802873074278	WITHOUT_CLASSIFICATION	1.1971269257211317E-4	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999839556217743	WITHOUT_CLASSIFICATION	1.60443782256489E-5	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9998925130335324	WITHOUT_CLASSIFICATION	1.074869664676007E-4	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9998832731629537	WITHOUT_CLASSIFICATION	1.1672683704635898E-4	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999708308941677	WITHOUT_CLASSIFICATION	2.91691058322941E-5	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9997117866510735	WITHOUT_CLASSIFICATION	2.8821334892646595E-4	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9998941416273497	WITHOUT_CLASSIFICATION	1.0585837265026228E-4	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999614393760248	WITHOUT_CLASSIFICATION	3.856062397525579E-5	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9996226450902717	WITHOUT_CLASSIFICATION	3.773549097283656E-4	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.9997312762045943	WITHOUT_CLASSIFICATION	2.6872379540562945E-4	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999737793192282	WITHOUT_CLASSIFICATION	2.6220680771899468E-5	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.999889127721368	WITHOUT_CLASSIFICATION	1.1087227863196873E-4	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.999967818913193	WITHOUT_CLASSIFICATION	3.2181086806986474E-5	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999620460165964	WITHOUT_CLASSIFICATION	3.795398340350758E-5	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9997806558221736	WITHOUT_CLASSIFICATION	2.1934417782637342E-4	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999788243249675	WITHOUT_CLASSIFICATION	2.1175675032436208E-5	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999430547539487	WITHOUT_CLASSIFICATION	5.694524605124019E-5	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9998305474700595	WITHOUT_CLASSIFICATION	1.6945252994058062E-4	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999298500502791	WITHOUT_CLASSIFICATION	7.014994972088682E-5	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999516052205631	WITHOUT_CLASSIFICATION	4.839477943671324E-5	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999746982165779	WITHOUT_CLASSIFICATION	2.530178342204674E-5	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999054621796157	WITHOUT_CLASSIFICATION	9.453782038418998E-5	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999430547539487	WITHOUT_CLASSIFICATION	5.694524605124019E-5	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.99936784467314	WITHOUT_CLASSIFICATION	6.321553268599701E-4	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9998836145738234	WITHOUT_CLASSIFICATION	1.1638542617668271E-4	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999659353036006	WITHOUT_CLASSIFICATION	3.4064696399407885E-5	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999517006291069	WITHOUT_CLASSIFICATION	4.8299370893090694E-5	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999864644945078	WITHOUT_CLASSIFICATION	1.3535505492303541E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999642236531366	WITHOUT_CLASSIFICATION	3.5776346863323875E-5	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9998836145738234	WITHOUT_CLASSIFICATION	1.1638542617668271E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9851015621379685	WITHOUT_CLASSIFICATION	0.014898437862031405	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.998498110066062	WITHOUT_CLASSIFICATION	0.0015018899339379835	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9989059116318814	WITHOUT_CLASSIFICATION	0.00109408836811862	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9989059116318814	WITHOUT_CLASSIFICATION	0.00109408836811862	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999193950420773	WITHOUT_CLASSIFICATION	8.06049579227172E-5	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9987519914592407	WITHOUT_CLASSIFICATION	0.0012480085407593673	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998883356298837	WITHOUT_CLASSIFICATION	1.1166437011640155E-4	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.999919953673404	WITHOUT_CLASSIFICATION	8.00463265959216E-5	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999157776600595	WITHOUT_CLASSIFICATION	8.422233994054485E-5	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9994885513276839	WITHOUT_CLASSIFICATION	5.114486723160819E-4	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999042540140154	WITHOUT_CLASSIFICATION	9.57459859846833E-5	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999042540140154	WITHOUT_CLASSIFICATION	9.57459859846833E-5	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9998794649481881	WITHOUT_CLASSIFICATION	1.2053505181184629E-4	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999836206912057	WITHOUT_CLASSIFICATION	1.637930879430204E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9851015621379685	WITHOUT_CLASSIFICATION	0.014898437862031405	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9851015621379685	WITHOUT_CLASSIFICATION	0.014898437862031405	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.998498110066062	WITHOUT_CLASSIFICATION	0.0015018899339379835	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9989059116318814	WITHOUT_CLASSIFICATION	0.00109408836811862	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9989059116318814	WITHOUT_CLASSIFICATION	0.00109408836811862	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998883356298837	WITHOUT_CLASSIFICATION	1.1166437011640155E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998883356298837	WITHOUT_CLASSIFICATION	1.1166437011640155E-4	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9998475380558911	WITHOUT_CLASSIFICATION	1.5246194410890296E-4	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9970024014387838	WITHOUT_CLASSIFICATION	0.0029975985612161722	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999734173073017	WITHOUT_CLASSIFICATION	2.658269269827206E-5	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999812078784814	WITHOUT_CLASSIFICATION	1.879212151856303E-5	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999812078784814	WITHOUT_CLASSIFICATION	1.879212151856303E-5	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9992809457936223	WITHOUT_CLASSIFICATION	7.190542063777875E-4	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999627598988702	WITHOUT_CLASSIFICATION	3.724010112985886E-5	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999599145590422	WITHOUT_CLASSIFICATION	4.008544095782618E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9999193950420773	WITHOUT_CLASSIFICATION	8.06049579227172E-5	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9987519914592407	WITHOUT_CLASSIFICATION	0.0012480085407593673	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999404554566528	WITHOUT_CLASSIFICATION	5.954454334730759E-5	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.999869132895208	WITHOUT_CLASSIFICATION	1.3086710479209805E-4	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999589675541632	WITHOUT_CLASSIFICATION	4.103244583679541E-5	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9998825633736493	WITHOUT_CLASSIFICATION	1.1743662635064415E-4	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.996616055274482	WITHOUT_CLASSIFICATION	0.003383944725518032	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.996616055274482	WITHOUT_CLASSIFICATION	0.003383944725518032	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999489004083703	WITHOUT_CLASSIFICATION	5.109959162966024E-5	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999373768841114	WITHOUT_CLASSIFICATION	6.262311588850181E-5	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999873372925269	WITHOUT_CLASSIFICATION	1.2662707473146898E-5	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999772642020202	WITHOUT_CLASSIFICATION	2.2735797979884117E-5	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999828682172658	WITHOUT_CLASSIFICATION	1.713178273431598E-5	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9851015621379685	WITHOUT_CLASSIFICATION	0.014898437862031405	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.998498110066062	WITHOUT_CLASSIFICATION	0.0015018899339379835	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.998498110066062	WITHOUT_CLASSIFICATION	0.0015018899339379835	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.999877570668061	WITHOUT_CLASSIFICATION	1.2242933193902508E-4	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9987519914592407	WITHOUT_CLASSIFICATION	0.0012480085407593673	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9995486469541868	WITHOUT_CLASSIFICATION	4.513530458132299E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9993935094123297	WITHOUT_CLASSIFICATION	6.064905876702753E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9993935094123297	WITHOUT_CLASSIFICATION	6.064905876702753E-4	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9992669152811117	WITHOUT_CLASSIFICATION	7.330847188882408E-4	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9999883285698569	WITHOUT_CLASSIFICATION	1.1671430143133427E-5	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9986080714536358	WITHOUT_CLASSIFICATION	0.001391928546364085	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9997247959461016	WITHOUT_CLASSIFICATION	2.752040538982654E-4	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999784665685179	WITHOUT_CLASSIFICATION	2.1533431482099736E-5	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9997909590827648	WITHOUT_CLASSIFICATION	2.0904091723521168E-4	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9998681443170001	WITHOUT_CLASSIFICATION	1.3185568299981104E-4	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999982074935092	WITHOUT_CLASSIFICATION	1.7925064907965216E-6	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999982074935092	WITHOUT_CLASSIFICATION	1.7925064907965216E-6	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999766360185737	WITHOUT_CLASSIFICATION	2.3363981426262483E-5	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9998391193081289	WITHOUT_CLASSIFICATION	1.608806918711166E-4	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999828155447174	WITHOUT_CLASSIFICATION	1.7184455282647415E-5	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9998509930318841	WITHOUT_CLASSIFICATION	1.4900696811582075E-4	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9995617992854956	WITHOUT_CLASSIFICATION	4.3820071450437485E-4	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9998539669885544	WITHOUT_CLASSIFICATION	1.4603301144555433E-4	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999839705358189	WITHOUT_CLASSIFICATION	1.602946418110226E-5	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.9965060171735038	WITHOUT_CLASSIFICATION	0.0034939828264960626	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9998748255278599	WITHOUT_CLASSIFICATION	1.2517447214016781E-4	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.999915778689501	WITHOUT_CLASSIFICATION	8.42213104989815E-5	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9995305867946408	WITHOUT_CLASSIFICATION	4.6941320535917754E-4	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.977389210689383	WITHOUT_CLASSIFICATION	0.022610789310616945	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9994042017636466	WITHOUT_CLASSIFICATION	5.957982363533979E-4	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999752289027606	WITHOUT_CLASSIFICATION	2.4771097239417077E-5	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9998677207819472	WITHOUT_CLASSIFICATION	1.3227921805283107E-4	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9998677207819472	WITHOUT_CLASSIFICATION	1.3227921805283107E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999638989513326	WITHOUT_CLASSIFICATION	3.6101048667274514E-5	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999757835182006	WITHOUT_CLASSIFICATION	2.421648179939117E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999638989513326	WITHOUT_CLASSIFICATION	3.6101048667274514E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999638989513326	WITHOUT_CLASSIFICATION	3.6101048667274514E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9996517992170232	WITHOUT_CLASSIFICATION	3.482007829767929E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9851015621379685	WITHOUT_CLASSIFICATION	0.014898437862031405	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.998498110066062	WITHOUT_CLASSIFICATION	0.0015018899339379835	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.998498110066062	WITHOUT_CLASSIFICATION	0.0015018899339379835	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9989059116318814	WITHOUT_CLASSIFICATION	0.00109408836811862	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9989059116318814	WITHOUT_CLASSIFICATION	0.00109408836811862	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998883356298837	WITHOUT_CLASSIFICATION	1.1166437011640155E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998883356298837	WITHOUT_CLASSIFICATION	1.1166437011640155E-4	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.999869132895208	WITHOUT_CLASSIFICATION	1.3086710479209805E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999848177328621	WITHOUT_CLASSIFICATION	1.5182267137906007E-5	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9996445513825207	WITHOUT_CLASSIFICATION	3.554486174791549E-4	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999587609700922	WITHOUT_CLASSIFICATION	4.123902990781295E-5	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999781084682282	WITHOUT_CLASSIFICATION	2.1891531771752915E-5	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999661634148578	WITHOUT_CLASSIFICATION	3.38365851422701E-5	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.965009163679544	WITHOUT_CLASSIFICATION	0.03499083632045587	DEFECT
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9987519914592407	WITHOUT_CLASSIFICATION	0.0012480085407593673	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999000628057707	WITHOUT_CLASSIFICATION	9.993719422932817E-5	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999206524309177	WITHOUT_CLASSIFICATION	7.934756908234404E-5	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999417955090816	WITHOUT_CLASSIFICATION	5.8204490918469294E-5	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9987519914592407	WITHOUT_CLASSIFICATION	0.0012480085407593673	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999267038062677	WITHOUT_CLASSIFICATION	7.329619373233273E-5	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999839705358189	WITHOUT_CLASSIFICATION	1.602946418110226E-5	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9995044890248284	WITHOUT_CLASSIFICATION	4.955109751716111E-4	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.999501677066209	WITHOUT_CLASSIFICATION	4.983229337910289E-4	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999916717015034	WITHOUT_CLASSIFICATION	8.328298496551965E-6	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9990705071807703	WITHOUT_CLASSIFICATION	9.294928192297043E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999848177328621	WITHOUT_CLASSIFICATION	1.5182267137906007E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999848177328621	WITHOUT_CLASSIFICATION	1.5182267137906007E-5	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9543063251308759	WITHOUT_CLASSIFICATION	0.04569367486912406	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9996517992170232	WITHOUT_CLASSIFICATION	3.482007829767929E-4	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9987617357875301	WITHOUT_CLASSIFICATION	0.0012382642124699234	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9851015621379685	WITHOUT_CLASSIFICATION	0.014898437862031405	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.998498110066062	WITHOUT_CLASSIFICATION	0.0015018899339379835	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.998498110066062	WITHOUT_CLASSIFICATION	0.0015018899339379835	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.998498110066062	WITHOUT_CLASSIFICATION	0.0015018899339379835	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9989059116318814	WITHOUT_CLASSIFICATION	0.00109408836811862	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9989059116318814	WITHOUT_CLASSIFICATION	0.00109408836811862	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9989059116318814	WITHOUT_CLASSIFICATION	0.00109408836811862	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9989059116318814	WITHOUT_CLASSIFICATION	0.00109408836811862	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9989059116318814	WITHOUT_CLASSIFICATION	0.00109408836811862	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998883356298837	WITHOUT_CLASSIFICATION	1.1166437011640155E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998883356298837	WITHOUT_CLASSIFICATION	1.1166437011640155E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998883356298837	WITHOUT_CLASSIFICATION	1.1166437011640155E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998883356298837	WITHOUT_CLASSIFICATION	1.1166437011640155E-4	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.999919953673404	WITHOUT_CLASSIFICATION	8.00463265959216E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999848177328621	WITHOUT_CLASSIFICATION	1.5182267137906007E-5	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9994538505862435	WITHOUT_CLASSIFICATION	5.461494137566073E-4	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9987653673304075	WITHOUT_CLASSIFICATION	0.001234632669592489	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9998405908260737	WITHOUT_CLASSIFICATION	1.5940917392628836E-4	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9998405908260737	WITHOUT_CLASSIFICATION	1.5940917392628836E-4	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9987519914592407	WITHOUT_CLASSIFICATION	0.0012480085407593673	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999894413557164	WITHOUT_CLASSIFICATION	1.0558644283575817E-5	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999640307632683	WITHOUT_CLASSIFICATION	3.596923673157975E-5	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999847386199154	WITHOUT_CLASSIFICATION	1.526138008459907E-4	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9987519914592407	WITHOUT_CLASSIFICATION	0.0012480085407593673	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9998032711037845	WITHOUT_CLASSIFICATION	1.967288962154535E-4	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9998753723954263	WITHOUT_CLASSIFICATION	1.2462760457357348E-4	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999886042699586	WITHOUT_CLASSIFICATION	1.1395730041464379E-5	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999882706592276	WITHOUT_CLASSIFICATION	1.1729340772457377E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9996517992170232	WITHOUT_CLASSIFICATION	3.482007829767929E-4	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9995044890248284	WITHOUT_CLASSIFICATION	4.955109751716111E-4	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999916717015034	WITHOUT_CLASSIFICATION	8.328298496551965E-6	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9995548476187742	WITHOUT_CLASSIFICATION	4.45152381225744E-4	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9997536209436809	WITHOUT_CLASSIFICATION	2.463790563191284E-4	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9995548476187742	WITHOUT_CLASSIFICATION	4.45152381225744E-4	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999845386022616	WITHOUT_CLASSIFICATION	1.5461397738459792E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999848177328621	WITHOUT_CLASSIFICATION	1.5182267137906007E-5	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999833903597979	WITHOUT_CLASSIFICATION	1.6609640202099876E-5	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9998063384762225	WITHOUT_CLASSIFICATION	1.9366152377754431E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999848177328621	WITHOUT_CLASSIFICATION	1.5182267137906007E-5	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9997531317621042	WITHOUT_CLASSIFICATION	2.4686823789569237E-4	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999433147057578	WITHOUT_CLASSIFICATION	5.668529424221357E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999848177328621	WITHOUT_CLASSIFICATION	1.5182267137906007E-5	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9989861558123465	WITHOUT_CLASSIFICATION	0.0010138441876534454	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999848177328621	WITHOUT_CLASSIFICATION	1.5182267137906007E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999848177328621	WITHOUT_CLASSIFICATION	1.5182267137906007E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999848177328621	WITHOUT_CLASSIFICATION	1.5182267137906007E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9998273120765537	WITHOUT_CLASSIFICATION	1.7268792344629072E-4	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9998273120765537	WITHOUT_CLASSIFICATION	1.7268792344629072E-4	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9997126365788583	WITHOUT_CLASSIFICATION	2.873634211417121E-4	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.999880574589093	WITHOUT_CLASSIFICATION	1.1942541090699E-4	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9996419991801421	WITHOUT_CLASSIFICATION	3.580008198579254E-4	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9543063251308759	WITHOUT_CLASSIFICATION	0.04569367486912406	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9989059116318814	WITHOUT_CLASSIFICATION	0.00109408836811862	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.999919953673404	WITHOUT_CLASSIFICATION	8.00463265959216E-5	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999042540140154	WITHOUT_CLASSIFICATION	9.57459859846833E-5	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.999501677066209	WITHOUT_CLASSIFICATION	4.983229337910289E-4	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999845386022616	WITHOUT_CLASSIFICATION	1.5461397738459792E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999845386022616	WITHOUT_CLASSIFICATION	1.5461397738459792E-5	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9995548476187742	WITHOUT_CLASSIFICATION	4.45152381225744E-4	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9998063384762225	WITHOUT_CLASSIFICATION	1.9366152377754431E-4	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999833903597979	WITHOUT_CLASSIFICATION	1.6609640202099876E-5	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999833903597979	WITHOUT_CLASSIFICATION	1.6609640202099876E-5	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999433147057578	WITHOUT_CLASSIFICATION	5.668529424221357E-5	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999433147057578	WITHOUT_CLASSIFICATION	5.668529424221357E-5	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9998860036611903	WITHOUT_CLASSIFICATION	1.1399633880970078E-4	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9998670412715182	WITHOUT_CLASSIFICATION	1.3295872848179753E-4	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9997779423048098	WITHOUT_CLASSIFICATION	2.2205769519032168E-4	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9931908959534425	WITHOUT_CLASSIFICATION	0.006809104046557533	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9854776489026649	WITHOUT_CLASSIFICATION	0.014522351097335087	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9987519914592407	WITHOUT_CLASSIFICATION	0.0012480085407593673	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9308852194359356	WITHOUT_CLASSIFICATION	0.06911478056406437	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999685663063655	WITHOUT_CLASSIFICATION	3.1433693634453886E-5	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999685663063655	WITHOUT_CLASSIFICATION	3.1433693634453886E-5	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9997171040719409	WITHOUT_CLASSIFICATION	2.8289592805906663E-4	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9999815407366507	WITHOUT_CLASSIFICATION	1.8459263349322076E-5	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999782472208398	WITHOUT_CLASSIFICATION	2.175277916016915E-5	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9999770583382297	WITHOUT_CLASSIFICATION	2.294166177029134E-5	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999898462808967	WITHOUT_CLASSIFICATION	1.0153719103233583E-5	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9998872256810674	WITHOUT_CLASSIFICATION	1.127743189326324E-4	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999916676346297	WITHOUT_CLASSIFICATION	8.332365370374161E-6	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9963397678496847	WITHOUT_CLASSIFICATION	0.0036602321503152917	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999720997065166	WITHOUT_CLASSIFICATION	2.790029348345556E-5	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999116142742631	WITHOUT_CLASSIFICATION	8.838572573684799E-5	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999534840430923	WITHOUT_CLASSIFICATION	4.651595690759791E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9996995313730769	WITHOUT_CLASSIFICATION	3.0046862692316065E-4	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9996995313730769	WITHOUT_CLASSIFICATION	3.0046862692316065E-4	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999551251774058	WITHOUT_CLASSIFICATION	4.487482259410092E-5	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999836206912057	WITHOUT_CLASSIFICATION	1.637930879430204E-5	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999882706592276	WITHOUT_CLASSIFICATION	1.1729340772457377E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999845386022616	WITHOUT_CLASSIFICATION	1.5461397738459792E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999845386022616	WITHOUT_CLASSIFICATION	1.5461397738459792E-5	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9997690466689606	WITHOUT_CLASSIFICATION	2.3095333103931697E-4	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9997470880616454	WITHOUT_CLASSIFICATION	2.5291193835461887E-4	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9997470880616454	WITHOUT_CLASSIFICATION	2.5291193835461887E-4	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9996982537913927	WITHOUT_CLASSIFICATION	3.0174620860744727E-4	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999651955766811	WITHOUT_CLASSIFICATION	3.480442331900826E-5	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9974002229417365	WITHOUT_CLASSIFICATION	0.002599777058263541	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999711229115913	WITHOUT_CLASSIFICATION	2.8877088408741125E-5	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999501359193868	WITHOUT_CLASSIFICATION	4.986408061326169E-5	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999501359193868	WITHOUT_CLASSIFICATION	4.986408061326169E-5	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999314354375307	WITHOUT_CLASSIFICATION	6.856456246920225E-5	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999228364455967	WITHOUT_CLASSIFICATION	7.716355440330933E-5	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999430252149898	WITHOUT_CLASSIFICATION	5.697478501017424E-5	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.999949914221191	WITHOUT_CLASSIFICATION	5.0085778808965214E-5	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.9999811397171615	WITHOUT_CLASSIFICATION	1.8860282838463824E-5	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999452632627098	WITHOUT_CLASSIFICATION	5.4736737290178934E-5	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999946117866974	WITHOUT_CLASSIFICATION	5.3882133025927835E-5	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9997077413122121	WITHOUT_CLASSIFICATION	2.9225868778796855E-4	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999589675541632	WITHOUT_CLASSIFICATION	4.103244583679541E-5	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9998276934457019	WITHOUT_CLASSIFICATION	1.7230655429800778E-4	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9997690466689606	WITHOUT_CLASSIFICATION	2.3095333103931697E-4	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9998755991370282	WITHOUT_CLASSIFICATION	1.2440086297187917E-4	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999288407373536	WITHOUT_CLASSIFICATION	7.115926264639052E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9998689790106008	WITHOUT_CLASSIFICATION	1.3102098939912966E-4	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9998427805411559	WITHOUT_CLASSIFICATION	1.5721945884419972E-4	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999087572107009	WITHOUT_CLASSIFICATION	9.124278929906913E-5	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999756558324272	WITHOUT_CLASSIFICATION	2.4344167572873735E-5	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9978295618349106	WITHOUT_CLASSIFICATION	0.002170438165089437	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9998339219788615	WITHOUT_CLASSIFICATION	1.6607802113844633E-4	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9997692095531656	WITHOUT_CLASSIFICATION	2.3079044683439837E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999548759293131	WITHOUT_CLASSIFICATION	4.51240706869449E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999589675541632	WITHOUT_CLASSIFICATION	4.103244583679541E-5	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.999839879854124	WITHOUT_CLASSIFICATION	1.6012014587607533E-4	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9998298360437382	WITHOUT_CLASSIFICATION	1.701639562617207E-4	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9999400187520476	WITHOUT_CLASSIFICATION	5.9981247952315954E-5	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999200832187725	WITHOUT_CLASSIFICATION	7.991678122747422E-5	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9998544339839859	WITHOUT_CLASSIFICATION	1.4556601601421076E-4	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9998417773570093	WITHOUT_CLASSIFICATION	1.582226429906204E-4	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9996283920488065	WITHOUT_CLASSIFICATION	3.7160795119346436E-4	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999640644780551	WITHOUT_CLASSIFICATION	3.5935521944905675E-4	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9985815232003415	WITHOUT_CLASSIFICATION	0.001418476799658415	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999346229589885	WITHOUT_CLASSIFICATION	6.537704101156279E-5	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9998887292942756	WITHOUT_CLASSIFICATION	1.1127070572430576E-4	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9998608007353126	WITHOUT_CLASSIFICATION	1.3919926468746195E-4	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9993972974388872	WITHOUT_CLASSIFICATION	6.027025611129496E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.999985678815325	WITHOUT_CLASSIFICATION	1.4321184675142904E-5	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999640644780551	WITHOUT_CLASSIFICATION	3.5935521944905675E-4	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999346229589885	WITHOUT_CLASSIFICATION	6.537704101156279E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999346229589885	WITHOUT_CLASSIFICATION	6.537704101156279E-5	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9998887292942756	WITHOUT_CLASSIFICATION	1.1127070572430576E-4	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999274186427243	WITHOUT_CLASSIFICATION	7.25813572757774E-5	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999896599960755	WITHOUT_CLASSIFICATION	1.0340003924594659E-5	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999896599960755	WITHOUT_CLASSIFICATION	1.0340003924594659E-5	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.999667854136522	WITHOUT_CLASSIFICATION	3.321458634779369E-4	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.999667854136522	WITHOUT_CLASSIFICATION	3.321458634779369E-4	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999833698676875	WITHOUT_CLASSIFICATION	1.663013231252825E-5	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999346229589885	WITHOUT_CLASSIFICATION	6.537704101156279E-5	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999346229589885	WITHOUT_CLASSIFICATION	6.537704101156279E-5	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999829212527964	WITHOUT_CLASSIFICATION	1.7078747203620383E-5	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999441133545031	WITHOUT_CLASSIFICATION	5.588664549691082E-5	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.999942386125265	WITHOUT_CLASSIFICATION	5.761387473517474E-5	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9997167786555857	WITHOUT_CLASSIFICATION	2.8322134441425157E-4	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.999729968569406	WITHOUT_CLASSIFICATION	2.7003143059403607E-4	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9997179178366891	WITHOUT_CLASSIFICATION	2.820821633109629E-4	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999825006263257	WITHOUT_CLASSIFICATION	1.749937367433606E-5	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9998733279693441	WITHOUT_CLASSIFICATION	1.266720306558428E-4	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9998580727778249	WITHOUT_CLASSIFICATION	1.419272221751474E-4	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.999837244513391	WITHOUT_CLASSIFICATION	1.6275548660891302E-4	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9956679406115815	WITHOUT_CLASSIFICATION	0.004332059388418591	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.999538463121608	WITHOUT_CLASSIFICATION	4.615368783919688E-4	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.9999775387975016	WITHOUT_CLASSIFICATION	2.2461202498327758E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9997713647938735	WITHOUT_CLASSIFICATION	2.2863520612656626E-4	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998842078714858	WITHOUT_CLASSIFICATION	1.157921285142835E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999548759293131	WITHOUT_CLASSIFICATION	4.51240706869449E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9991027759008916	WITHOUT_CLASSIFICATION	8.972240991085054E-4	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999605355423659	WITHOUT_CLASSIFICATION	3.9464457634239E-5	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999742777151992	WITHOUT_CLASSIFICATION	2.5722284800802355E-5	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9985059000590945	WITHOUT_CLASSIFICATION	0.001494099940905476	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9997667403793568	WITHOUT_CLASSIFICATION	2.3325962064325972E-4	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999791766187496	WITHOUT_CLASSIFICATION	2.0823381250506263E-5	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999576945947692	WITHOUT_CLASSIFICATION	4.2305405230659984E-5	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9986205533459438	WITHOUT_CLASSIFICATION	0.0013794466540561906	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999887642790867	WITHOUT_CLASSIFICATION	1.1235720913350367E-5	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.99956714851475	WITHOUT_CLASSIFICATION	4.328514852499868E-4	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9998720011213104	WITHOUT_CLASSIFICATION	1.2799887868962217E-4	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.999914890939176	WITHOUT_CLASSIFICATION	8.51090608241101E-5	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9998217284379102	WITHOUT_CLASSIFICATION	1.7827156208987852E-4	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9997656977534018	WITHOUT_CLASSIFICATION	2.3430224659812997E-4	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999205643770787	WITHOUT_CLASSIFICATION	7.943562292129528E-5	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999650738956343	WITHOUT_CLASSIFICATION	3.492610436563278E-5	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9993616103301134	WITHOUT_CLASSIFICATION	6.383896698865243E-4	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9998755991370282	WITHOUT_CLASSIFICATION	1.2440086297187917E-4	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9997811641050005	WITHOUT_CLASSIFICATION	2.1883589499957365E-4	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999885681992812	WITHOUT_CLASSIFICATION	1.1431800718952893E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999589675541632	WITHOUT_CLASSIFICATION	4.103244583679541E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999589675541632	WITHOUT_CLASSIFICATION	4.103244583679541E-5	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999492984209083	WITHOUT_CLASSIFICATION	5.070157909176766E-5	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999423187926577	WITHOUT_CLASSIFICATION	5.768120734240466E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999427251843177	WITHOUT_CLASSIFICATION	5.727481568218376E-5	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999427251843177	WITHOUT_CLASSIFICATION	5.727481568218376E-5	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999665130434836	WITHOUT_CLASSIFICATION	3.348695651647187E-5	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999427251843177	WITHOUT_CLASSIFICATION	5.727481568218376E-5	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999427251843177	WITHOUT_CLASSIFICATION	5.727481568218376E-5	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999427251843177	WITHOUT_CLASSIFICATION	5.727481568218376E-5	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9998495618879101	WITHOUT_CLASSIFICATION	1.5043811208989986E-4	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999742854117346	WITHOUT_CLASSIFICATION	2.571458826528323E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9983140989251491	WITHOUT_CLASSIFICATION	0.0016859010748509107	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9983140989251491	WITHOUT_CLASSIFICATION	0.0016859010748509107	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999742854117346	WITHOUT_CLASSIFICATION	2.571458826528323E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999742854117346	WITHOUT_CLASSIFICATION	2.571458826528323E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999742854117346	WITHOUT_CLASSIFICATION	2.571458826528323E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999742854117346	WITHOUT_CLASSIFICATION	2.571458826528323E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999742854117346	WITHOUT_CLASSIFICATION	2.571458826528323E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9993640019922514	WITHOUT_CLASSIFICATION	6.359980077485878E-4	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9993640019922514	WITHOUT_CLASSIFICATION	6.359980077485878E-4	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9993640019922514	WITHOUT_CLASSIFICATION	6.359980077485878E-4	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9993640019922514	WITHOUT_CLASSIFICATION	6.359980077485878E-4	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9968011776097644	WITHOUT_CLASSIFICATION	0.003198822390235611	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999956509865118	WITHOUT_CLASSIFICATION	4.3490134881411835E-6	DEFECT
// name	WITHOUT_CLASSIFICATION	0.99978498707584	WITHOUT_CLASSIFICATION	2.1501292416005425E-4	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.999726405845261	WITHOUT_CLASSIFICATION	2.7359415473904487E-4	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999400383378829	WITHOUT_CLASSIFICATION	5.9961662117119905E-5	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999069095773019	WITHOUT_CLASSIFICATION	9.309042269801636E-5	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999069095773019	WITHOUT_CLASSIFICATION	9.309042269801636E-5	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999069095773019	WITHOUT_CLASSIFICATION	9.309042269801636E-5	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999069095773019	WITHOUT_CLASSIFICATION	9.309042269801636E-5	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999069095773019	WITHOUT_CLASSIFICATION	9.309042269801636E-5	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999069095773019	WITHOUT_CLASSIFICATION	9.309042269801636E-5	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999069095773019	WITHOUT_CLASSIFICATION	9.309042269801636E-5	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9998032711037845	WITHOUT_CLASSIFICATION	1.967288962154535E-4	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9998032711037845	WITHOUT_CLASSIFICATION	1.967288962154535E-4	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9998032711037845	WITHOUT_CLASSIFICATION	1.967288962154535E-4	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9998032711037845	WITHOUT_CLASSIFICATION	1.967288962154535E-4	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999069095773019	WITHOUT_CLASSIFICATION	9.309042269801636E-5	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9998508433051324	WITHOUT_CLASSIFICATION	1.491566948675445E-4	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9998508433051324	WITHOUT_CLASSIFICATION	1.491566948675445E-4	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9997380775909894	WITHOUT_CLASSIFICATION	2.6192240901047473E-4	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9996818358716141	WITHOUT_CLASSIFICATION	3.1816412838591584E-4	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9995873126614746	WITHOUT_CLASSIFICATION	4.126873385254725E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9997532971003249	WITHOUT_CLASSIFICATION	2.4670289967509236E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9997532971003249	WITHOUT_CLASSIFICATION	2.4670289967509236E-4	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999349488062504	WITHOUT_CLASSIFICATION	6.50511937495877E-5	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999371299791402	WITHOUT_CLASSIFICATION	6.287002085978944E-5	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999610014188148	WITHOUT_CLASSIFICATION	3.8998581185117334E-5	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999538662562696	WITHOUT_CLASSIFICATION	4.6133743730526926E-5	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9994419204311464	WITHOUT_CLASSIFICATION	5.580795688535864E-4	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9966986668287515	WITHOUT_CLASSIFICATION	0.003301333171248616	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999361229161777	WITHOUT_CLASSIFICATION	6.387708382225442E-5	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9996212128797234	WITHOUT_CLASSIFICATION	3.787871202765258E-4	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9997525343051031	WITHOUT_CLASSIFICATION	2.4746569489677813E-4	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9997637360331809	WITHOUT_CLASSIFICATION	2.3626396681914036E-4	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9999885466256709	WITHOUT_CLASSIFICATION	1.1453374329056315E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998582402690704	WITHOUT_CLASSIFICATION	1.4175973092952723E-4	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999640153692564	WITHOUT_CLASSIFICATION	3.598463074363353E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999602760477785	WITHOUT_CLASSIFICATION	3.972395222160341E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999602760477785	WITHOUT_CLASSIFICATION	3.972395222160341E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999602760477785	WITHOUT_CLASSIFICATION	3.972395222160341E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999602760477785	WITHOUT_CLASSIFICATION	3.972395222160341E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999602760477785	WITHOUT_CLASSIFICATION	3.972395222160341E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999602760477785	WITHOUT_CLASSIFICATION	3.972395222160341E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9998269673476486	WITHOUT_CLASSIFICATION	1.7303265235125553E-4	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999856367891155	WITHOUT_CLASSIFICATION	1.4363210884518738E-5	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9957171222588813	WITHOUT_CLASSIFICATION	0.0042828777411186856	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9997722016010547	WITHOUT_CLASSIFICATION	2.2779839894518107E-4	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9996063135735287	WITHOUT_CLASSIFICATION	3.9368642647129087E-4	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9996063135735287	WITHOUT_CLASSIFICATION	3.9368642647129087E-4	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999222314109505	WITHOUT_CLASSIFICATION	7.776858904955706E-5	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9998883086523598	WITHOUT_CLASSIFICATION	1.1169134764026264E-4	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999332394285434	WITHOUT_CLASSIFICATION	6.676057145653729E-5	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999409511475853	WITHOUT_CLASSIFICATION	5.904885241460063E-5	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9998208700559167	WITHOUT_CLASSIFICATION	1.7912994408331623E-4	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999369668737651	WITHOUT_CLASSIFICATION	6.303312623488746E-5	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999369668737651	WITHOUT_CLASSIFICATION	6.303312623488746E-5	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9991966668049053	WITHOUT_CLASSIFICATION	8.03333195094734E-4	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9991966668049053	WITHOUT_CLASSIFICATION	8.03333195094734E-4	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9998883086523598	WITHOUT_CLASSIFICATION	1.1169134764026264E-4	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999332394285434	WITHOUT_CLASSIFICATION	6.676057145653729E-5	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999409511475853	WITHOUT_CLASSIFICATION	5.904885241460063E-5	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999878349093422	WITHOUT_CLASSIFICATION	1.2165090657761108E-5	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9996205907553631	WITHOUT_CLASSIFICATION	3.794092446369045E-4	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9998401961479957	WITHOUT_CLASSIFICATION	1.5980385200442586E-4	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9998401961479957	WITHOUT_CLASSIFICATION	1.5980385200442586E-4	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9996251682739773	WITHOUT_CLASSIFICATION	3.748317260226673E-4	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9993402918667726	WITHOUT_CLASSIFICATION	6.597081332272913E-4	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999450321968841	WITHOUT_CLASSIFICATION	5.4967803115746795E-5	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.999875671919387	WITHOUT_CLASSIFICATION	1.2432808061305442E-4	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999481421652144	WITHOUT_CLASSIFICATION	5.1857834785497653E-5	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999096170949481	WITHOUT_CLASSIFICATION	9.038290505197191E-5	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999506206519246	WITHOUT_CLASSIFICATION	4.937934807536783E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999886150669776	WITHOUT_CLASSIFICATION	1.1384933022500172E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999886150669776	WITHOUT_CLASSIFICATION	1.1384933022500172E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999193037731603	WITHOUT_CLASSIFICATION	8.069622683969112E-5	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9993763935830452	WITHOUT_CLASSIFICATION	6.23606416954835E-4	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9999363019642987	WITHOUT_CLASSIFICATION	6.369803570124625E-5	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9998622379086977	WITHOUT_CLASSIFICATION	1.3776209130244904E-4	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9996884572976321	WITHOUT_CLASSIFICATION	3.115427023679343E-4	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999514925897706	WITHOUT_CLASSIFICATION	4.850741022930717E-5	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999788649174308	WITHOUT_CLASSIFICATION	2.1135082569246033E-5	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9998400876595709	WITHOUT_CLASSIFICATION	1.5991234042920111E-4	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999187991962559	WITHOUT_CLASSIFICATION	8.120080374413059E-5	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999734251283029	WITHOUT_CLASSIFICATION	2.6574871697123978E-5	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9997685409975333	WITHOUT_CLASSIFICATION	2.314590024666324E-4	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9996427788242402	WITHOUT_CLASSIFICATION	3.5722117575980364E-4	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999743488724662	WITHOUT_CLASSIFICATION	2.5651127533829945E-5	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.999289278519233	WITHOUT_CLASSIFICATION	7.107214807669875E-4	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9992345858114923	WITHOUT_CLASSIFICATION	7.654141885076183E-4	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999338387031966	WITHOUT_CLASSIFICATION	6.616129680334523E-5	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999742584361845	WITHOUT_CLASSIFICATION	2.574156381558214E-5	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999743592738852	WITHOUT_CLASSIFICATION	2.5640726114664572E-5	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9998874862399555	WITHOUT_CLASSIFICATION	1.1251376004454583E-4	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999781545393038	WITHOUT_CLASSIFICATION	2.1845460696195377E-5	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999352992244885	WITHOUT_CLASSIFICATION	6.47007755114608E-5	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9990258229268404	WITHOUT_CLASSIFICATION	9.741770731596804E-4	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9998365938418765	WITHOUT_CLASSIFICATION	1.6340615812344563E-4	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999840191867091	WITHOUT_CLASSIFICATION	1.5980813290901946E-5	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999012070898126	WITHOUT_CLASSIFICATION	9.879291018744296E-5	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999158751582771	WITHOUT_CLASSIFICATION	8.412484172293684E-5	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9996798204898321	WITHOUT_CLASSIFICATION	3.2017951016793353E-4	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9998917237857303	WITHOUT_CLASSIFICATION	1.082762142696002E-4	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9900584467996583	WITHOUT_CLASSIFICATION	0.009941553200341778	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998950773694175	WITHOUT_CLASSIFICATION	1.049226305825609E-4	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999697867458414	WITHOUT_CLASSIFICATION	3.0213254158756968E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999494941592951	WITHOUT_CLASSIFICATION	5.050584070492618E-5	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999246094713186	WITHOUT_CLASSIFICATION	7.539052868138377E-5	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999638119308838	WITHOUT_CLASSIFICATION	3.618806911619544E-5	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9999456201105121	WITHOUT_CLASSIFICATION	5.437988948778038E-5	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999456201105121	WITHOUT_CLASSIFICATION	5.437988948778038E-5	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999456201105121	WITHOUT_CLASSIFICATION	5.437988948778038E-5	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999456201105121	WITHOUT_CLASSIFICATION	5.437988948778038E-5	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999456201105121	WITHOUT_CLASSIFICATION	5.437988948778038E-5	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.999839558766779	WITHOUT_CLASSIFICATION	1.6044123322089858E-4	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.999839558766779	WITHOUT_CLASSIFICATION	1.6044123322089858E-4	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.999839558766779	WITHOUT_CLASSIFICATION	1.6044123322089858E-4	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9999316242926585	WITHOUT_CLASSIFICATION	6.837570734150122E-5	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999316242926585	WITHOUT_CLASSIFICATION	6.837570734150122E-5	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999549646745078	WITHOUT_CLASSIFICATION	4.5035325492097744E-5	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999385108937316	WITHOUT_CLASSIFICATION	6.1489106268368E-5	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999155023567398	WITHOUT_CLASSIFICATION	8.449764326024328E-5	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9999245616601572	WITHOUT_CLASSIFICATION	7.543833984285906E-5	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9997110558430267	WITHOUT_CLASSIFICATION	2.889441569734251E-4	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999108281460035	WITHOUT_CLASSIFICATION	8.917185399643767E-5	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9998032711037845	WITHOUT_CLASSIFICATION	1.967288962154535E-4	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.9998032711037845	WITHOUT_CLASSIFICATION	1.967288962154535E-4	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9998032711037845	WITHOUT_CLASSIFICATION	1.967288962154535E-4	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9998032711037845	WITHOUT_CLASSIFICATION	1.967288962154535E-4	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999352379796641	WITHOUT_CLASSIFICATION	6.476202033591341E-5	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9996063135735287	WITHOUT_CLASSIFICATION	3.9368642647129087E-4	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999619830052725	WITHOUT_CLASSIFICATION	3.80169947275153E-5	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9997515097895994	WITHOUT_CLASSIFICATION	2.484902104006165E-4	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9997614405424368	WITHOUT_CLASSIFICATION	2.3855945756317754E-4	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999366797675118	WITHOUT_CLASSIFICATION	6.332023248823516E-5	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999366797675118	WITHOUT_CLASSIFICATION	6.332023248823516E-5	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9999366797675118	WITHOUT_CLASSIFICATION	6.332023248823516E-5	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9999366797675118	WITHOUT_CLASSIFICATION	6.332023248823516E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9997532971003249	WITHOUT_CLASSIFICATION	2.4670289967509236E-4	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999364596006154	WITHOUT_CLASSIFICATION	6.354039938463516E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9999364596006154	WITHOUT_CLASSIFICATION	6.354039938463516E-5	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9999366797675118	WITHOUT_CLASSIFICATION	6.332023248823516E-5	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9999364596006154	WITHOUT_CLASSIFICATION	6.354039938463516E-5	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9999364596006154	WITHOUT_CLASSIFICATION	6.354039938463516E-5	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9992244708801984	WITHOUT_CLASSIFICATION	7.755291198016946E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9992244708801984	WITHOUT_CLASSIFICATION	7.755291198016946E-4	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9997671941642153	WITHOUT_CLASSIFICATION	2.3280583578464125E-4	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9997671941642153	WITHOUT_CLASSIFICATION	2.3280583578464125E-4	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9998623216881559	WITHOUT_CLASSIFICATION	1.3767831184407519E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9994467742643006	WITHOUT_CLASSIFICATION	5.532257356993861E-4	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9998339531972135	WITHOUT_CLASSIFICATION	1.6604680278640833E-4	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9998339531972135	WITHOUT_CLASSIFICATION	1.6604680278640833E-4	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999018047822048	WITHOUT_CLASSIFICATION	9.819521779519318E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9997125388387763	WITHOUT_CLASSIFICATION	2.8746116122376993E-4	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9997694178463299	WITHOUT_CLASSIFICATION	2.3058215367006613E-4	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9995666567760202	WITHOUT_CLASSIFICATION	4.333432239798424E-4	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9995851583548374	WITHOUT_CLASSIFICATION	4.1484164516258996E-4	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9992819544535244	WITHOUT_CLASSIFICATION	7.180455464755691E-4	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9996990117369499	WITHOUT_CLASSIFICATION	3.0098826305017114E-4	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9997317247426512	WITHOUT_CLASSIFICATION	2.6827525734883745E-4	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9997642479677736	WITHOUT_CLASSIFICATION	2.3575203222640816E-4	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9998573567848212	WITHOUT_CLASSIFICATION	1.42643215178827E-4	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999384168012421	WITHOUT_CLASSIFICATION	6.158319875796093E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9997125388387763	WITHOUT_CLASSIFICATION	2.8746116122376993E-4	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9997694178463299	WITHOUT_CLASSIFICATION	2.3058215367006613E-4	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9995666567760202	WITHOUT_CLASSIFICATION	4.333432239798424E-4	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9995851583548374	WITHOUT_CLASSIFICATION	4.1484164516258996E-4	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9992819544535244	WITHOUT_CLASSIFICATION	7.180455464755691E-4	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.999756393488606	WITHOUT_CLASSIFICATION	2.4360651139392045E-4	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9998262491679836	WITHOUT_CLASSIFICATION	1.737508320163637E-4	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9996998550594106	WITHOUT_CLASSIFICATION	3.001449405894515E-4	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9997102373627399	WITHOUT_CLASSIFICATION	2.8976263726010427E-4	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9997226104729459	WITHOUT_CLASSIFICATION	2.773895270541724E-4	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9995198207867363	WITHOUT_CLASSIFICATION	4.801792132637325E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9997562383588999	WITHOUT_CLASSIFICATION	2.4376164110003336E-4	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9996574919159849	WITHOUT_CLASSIFICATION	3.425080840150824E-4	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9998261385149477	WITHOUT_CLASSIFICATION	1.7386148505226003E-4	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999330950744898	WITHOUT_CLASSIFICATION	6.690492551017416E-5	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999761284818697	WITHOUT_CLASSIFICATION	2.38715181303158E-5	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999761284818697	WITHOUT_CLASSIFICATION	2.38715181303158E-5	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999734394451172	WITHOUT_CLASSIFICATION	2.6560554882760657E-5	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.999978001110619	WITHOUT_CLASSIFICATION	2.199888938103976E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.999966218066143	WITHOUT_CLASSIFICATION	3.378193385693415E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.999966218066143	WITHOUT_CLASSIFICATION	3.378193385693415E-5	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999649592456223	WITHOUT_CLASSIFICATION	3.50407543777152E-5	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999690624407214	WITHOUT_CLASSIFICATION	3.0937559278734394E-5	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999733002501472	WITHOUT_CLASSIFICATION	2.669974985277474E-5	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999452211155094	WITHOUT_CLASSIFICATION	5.4778884490688546E-5	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999334556689689	WITHOUT_CLASSIFICATION	6.654433103120086E-5	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.9999485364310724	WITHOUT_CLASSIFICATION	5.1463568927592244E-5	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999720361061838	WITHOUT_CLASSIFICATION	2.7963893816203715E-5	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999660298061528	WITHOUT_CLASSIFICATION	3.3970193847197044E-5	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999737285734346	WITHOUT_CLASSIFICATION	2.627142656541012E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9994230751554682	WITHOUT_CLASSIFICATION	5.769248445317177E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999384168012421	WITHOUT_CLASSIFICATION	6.158319875796093E-5	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999384168012421	WITHOUT_CLASSIFICATION	6.158319875796093E-5	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999726484520969	WITHOUT_CLASSIFICATION	2.7351547903180887E-5	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999688787897779	WITHOUT_CLASSIFICATION	3.112121022221331E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9997642479677736	WITHOUT_CLASSIFICATION	2.3575203222640816E-4	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9991894544384851	WITHOUT_CLASSIFICATION	8.105455615148549E-4	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999597481345068	WITHOUT_CLASSIFICATION	4.025186549313076E-5	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999449405248158	WITHOUT_CLASSIFICATION	5.505947518427911E-5	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999597481345068	WITHOUT_CLASSIFICATION	4.025186549313076E-5	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.9999269181448013	WITHOUT_CLASSIFICATION	7.308185519873134E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999195796763186	WITHOUT_CLASSIFICATION	8.042032368138793E-5	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.9999297117435182	WITHOUT_CLASSIFICATION	7.028825648177867E-5	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999222481199372	WITHOUT_CLASSIFICATION	7.775188006277954E-5	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999320440157393	WITHOUT_CLASSIFICATION	6.795598426066042E-5	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.9999349222070102	WITHOUT_CLASSIFICATION	6.507779298982749E-5	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9996974425547114	WITHOUT_CLASSIFICATION	3.025574452885993E-4	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9997121895220903	WITHOUT_CLASSIFICATION	2.8781047790981816E-4	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9997255930979873	WITHOUT_CLASSIFICATION	2.7440690201264935E-4	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999222498124997	WITHOUT_CLASSIFICATION	7.775018750027184E-5	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9997569377997064	WITHOUT_CLASSIFICATION	2.4306220029343171E-4	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.998565544454334	WITHOUT_CLASSIFICATION	0.001434455545665983	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.998565544454334	WITHOUT_CLASSIFICATION	0.001434455545665983	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9994507627494008	WITHOUT_CLASSIFICATION	5.492372505992497E-4	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999192370167445	WITHOUT_CLASSIFICATION	8.076298325552753E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999448583556618	WITHOUT_CLASSIFICATION	5.514164433813998E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9994625273106057	WITHOUT_CLASSIFICATION	5.374726893942417E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9998819074857899	WITHOUT_CLASSIFICATION	1.1809251421011521E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9998819074857899	WITHOUT_CLASSIFICATION	1.1809251421011521E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9998819074857899	WITHOUT_CLASSIFICATION	1.1809251421011521E-4	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999299606979818	WITHOUT_CLASSIFICATION	7.003930201821511E-5	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999646380287658	WITHOUT_CLASSIFICATION	3.536197123424512E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9993019291367025	WITHOUT_CLASSIFICATION	6.980708632975144E-4	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9993019291367025	WITHOUT_CLASSIFICATION	6.980708632975144E-4	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9998304454137122	WITHOUT_CLASSIFICATION	1.69554586287745E-4	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9998389531899536	WITHOUT_CLASSIFICATION	1.6104681004626875E-4	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.999935430364942	WITHOUT_CLASSIFICATION	6.45696350579441E-5	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9998355104321067	WITHOUT_CLASSIFICATION	1.6448956789325803E-4	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9999016785896696	WITHOUT_CLASSIFICATION	9.832141033036078E-5	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999097810326951	WITHOUT_CLASSIFICATION	9.021896730489761E-5	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999460744461487	WITHOUT_CLASSIFICATION	5.392555385119019E-5	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999777017508551	WITHOUT_CLASSIFICATION	2.2298249144856322E-5	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.999935430364942	WITHOUT_CLASSIFICATION	6.45696350579441E-5	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999397740854358	WITHOUT_CLASSIFICATION	6.0225914564259516E-5	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999371299791402	WITHOUT_CLASSIFICATION	6.287002085978944E-5	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999496719170838	WITHOUT_CLASSIFICATION	5.032808291624855E-5	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999352044111247	WITHOUT_CLASSIFICATION	6.479558887523054E-5	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999698754247418	WITHOUT_CLASSIFICATION	3.0124575258197368E-5	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999698754247418	WITHOUT_CLASSIFICATION	3.0124575258197368E-5	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999667764384285	WITHOUT_CLASSIFICATION	3.322356157157768E-5	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9998587956189535	WITHOUT_CLASSIFICATION	1.4120438104657136E-4	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999619801131436	WITHOUT_CLASSIFICATION	3.8019886856378804E-5	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999619801131436	WITHOUT_CLASSIFICATION	3.8019886856378804E-5	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999484489141195	WITHOUT_CLASSIFICATION	5.155108588041284E-5	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999504841037872	WITHOUT_CLASSIFICATION	4.951589621281603E-5	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999504841037872	WITHOUT_CLASSIFICATION	4.951589621281603E-5	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999887380969805	WITHOUT_CLASSIFICATION	1.1261903019494958E-5	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999844197880042	WITHOUT_CLASSIFICATION	1.5580211995761498E-5	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999802623495674	WITHOUT_CLASSIFICATION	1.9737650432619292E-5	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999745890078343	WITHOUT_CLASSIFICATION	2.5410992165704997E-5	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999218638124024	WITHOUT_CLASSIFICATION	7.81361875975902E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998842078714858	WITHOUT_CLASSIFICATION	1.157921285142835E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9998842078714858	WITHOUT_CLASSIFICATION	1.157921285142835E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999548759293131	WITHOUT_CLASSIFICATION	4.51240706869449E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9997667403793568	WITHOUT_CLASSIFICATION	2.3325962064325972E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999548759293131	WITHOUT_CLASSIFICATION	4.51240706869449E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999548759293131	WITHOUT_CLASSIFICATION	4.51240706869449E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999548759293131	WITHOUT_CLASSIFICATION	4.51240706869449E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9994230751554682	WITHOUT_CLASSIFICATION	5.769248445317177E-4	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999694632909671	WITHOUT_CLASSIFICATION	3.053670903286751E-5	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999392007250161	WITHOUT_CLASSIFICATION	6.079927498395183E-5	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999845518252589	WITHOUT_CLASSIFICATION	1.5448174741096693E-5	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9998436182456859	WITHOUT_CLASSIFICATION	1.5638175431409153E-4	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999386884801924	WITHOUT_CLASSIFICATION	6.131151980753813E-5	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9906991266345642	WITHOUT_CLASSIFICATION	0.00930087336543587	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999218638124024	WITHOUT_CLASSIFICATION	7.81361875975902E-5	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9998436182456859	WITHOUT_CLASSIFICATION	1.5638175431409153E-4	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999362817396477	WITHOUT_CLASSIFICATION	6.371826035230528E-5	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9999218638124024	WITHOUT_CLASSIFICATION	7.81361875975902E-5	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9998436182456859	WITHOUT_CLASSIFICATION	1.5638175431409153E-4	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9998631230767278	WITHOUT_CLASSIFICATION	1.3687692327226124E-4	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999384168012421	WITHOUT_CLASSIFICATION	6.158319875796093E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999384168012421	WITHOUT_CLASSIFICATION	6.158319875796093E-5	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9994230751554682	WITHOUT_CLASSIFICATION	5.769248445317177E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999384168012421	WITHOUT_CLASSIFICATION	6.158319875796093E-5	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999384168012421	WITHOUT_CLASSIFICATION	6.158319875796093E-5	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9998904853141644	WITHOUT_CLASSIFICATION	1.0951468583560438E-4	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999726484520969	WITHOUT_CLASSIFICATION	2.7351547903180887E-5	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9996974425547114	WITHOUT_CLASSIFICATION	3.025574452885993E-4	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9997248470774883	WITHOUT_CLASSIFICATION	2.751529225116997E-4	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.998565544454334	WITHOUT_CLASSIFICATION	0.001434455545665983	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9994507627494008	WITHOUT_CLASSIFICATION	5.492372505992497E-4	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9994625273106057	WITHOUT_CLASSIFICATION	5.374726893942417E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9998819074857899	WITHOUT_CLASSIFICATION	1.1809251421011521E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9998819074857899	WITHOUT_CLASSIFICATION	1.1809251421011521E-4	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999299606979818	WITHOUT_CLASSIFICATION	7.003930201821511E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9993019291367025	WITHOUT_CLASSIFICATION	6.980708632975144E-4	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9993019291367025	WITHOUT_CLASSIFICATION	6.980708632975144E-4	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9998304454137122	WITHOUT_CLASSIFICATION	1.69554586287745E-4	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9998389531899536	WITHOUT_CLASSIFICATION	1.6104681004626875E-4	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999390200200207	WITHOUT_CLASSIFICATION	6.097997997924041E-5	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999268241367166	WITHOUT_CLASSIFICATION	7.317586328336679E-5	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999349265663712	WITHOUT_CLASSIFICATION	6.507343362877708E-5	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.999935430364942	WITHOUT_CLASSIFICATION	6.45696350579441E-5	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9998836492401163	WITHOUT_CLASSIFICATION	1.1635075988361847E-4	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999871723988073	WITHOUT_CLASSIFICATION	1.2827601192741353E-5	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9997633215105647	WITHOUT_CLASSIFICATION	2.3667848943533329E-4	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999946904111628	WITHOUT_CLASSIFICATION	5.309588837081577E-6	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999613579861291	WITHOUT_CLASSIFICATION	3.864201387096851E-5	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999516666834075	WITHOUT_CLASSIFICATION	4.833331659246925E-5	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999512594614054	WITHOUT_CLASSIFICATION	4.874053859462959E-5	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999610324129393	WITHOUT_CLASSIFICATION	3.896758706062136E-5	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9998949787300715	WITHOUT_CLASSIFICATION	1.0502126992852502E-4	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9998686418932714	WITHOUT_CLASSIFICATION	1.3135810672859708E-4	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.999867535256355	WITHOUT_CLASSIFICATION	1.3246474364505284E-4	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9998940939464499	WITHOUT_CLASSIFICATION	1.0590605355004141E-4	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999384168012421	WITHOUT_CLASSIFICATION	6.158319875796093E-5	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9997600888929911	WITHOUT_CLASSIFICATION	2.3991110700892046E-4	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9995873126614746	WITHOUT_CLASSIFICATION	4.126873385254725E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9997532971003249	WITHOUT_CLASSIFICATION	2.4670289967509236E-4	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999877868151841	WITHOUT_CLASSIFICATION	1.2213184816030865E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999448583556618	WITHOUT_CLASSIFICATION	5.514164433813998E-5	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999646380287658	WITHOUT_CLASSIFICATION	3.536197123424512E-5	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9995389871279337	WITHOUT_CLASSIFICATION	4.6101287206633756E-4	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9998609786215151	WITHOUT_CLASSIFICATION	1.3902137848488218E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999939815267177	WITHOUT_CLASSIFICATION	6.018473282293053E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999871636669002	WITHOUT_CLASSIFICATION	1.2836333099696679E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999871636669002	WITHOUT_CLASSIFICATION	1.2836333099696679E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999871636669002	WITHOUT_CLASSIFICATION	1.2836333099696679E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999871636669002	WITHOUT_CLASSIFICATION	1.2836333099696679E-5	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9998617242237522	WITHOUT_CLASSIFICATION	1.3827577624782547E-4	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9997883287811945	WITHOUT_CLASSIFICATION	2.1167121880539923E-4	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999956235611083	WITHOUT_CLASSIFICATION	4.3764388917569085E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999956235611083	WITHOUT_CLASSIFICATION	4.3764388917569085E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999956235611083	WITHOUT_CLASSIFICATION	4.3764388917569085E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999956235611083	WITHOUT_CLASSIFICATION	4.3764388917569085E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999956235611083	WITHOUT_CLASSIFICATION	4.3764388917569085E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999956235611083	WITHOUT_CLASSIFICATION	4.3764388917569085E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9997883287811945	WITHOUT_CLASSIFICATION	2.1167121880539923E-4	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9997883287811945	WITHOUT_CLASSIFICATION	2.1167121880539923E-4	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.999943565534208	WITHOUT_CLASSIFICATION	5.643446579188749E-5	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.999935430364942	WITHOUT_CLASSIFICATION	6.45696350579441E-5	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.9999495176595422	WITHOUT_CLASSIFICATION	5.048234045780222E-5	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9998912653076575	WITHOUT_CLASSIFICATION	1.0873469234259304E-4	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9998940939464499	WITHOUT_CLASSIFICATION	1.0590605355004141E-4	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9998940939464499	WITHOUT_CLASSIFICATION	1.0590605355004141E-4	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9997597897092304	WITHOUT_CLASSIFICATION	2.40210290769509E-4	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999426100646813	WITHOUT_CLASSIFICATION	5.738993531867751E-5	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999357682222016	WITHOUT_CLASSIFICATION	6.423177779839686E-5	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999352270597979	WITHOUT_CLASSIFICATION	6.477294020205466E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.999977504318073	WITHOUT_CLASSIFICATION	2.24956819270836E-5	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.999916798710043	WITHOUT_CLASSIFICATION	8.320128995698987E-5	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999430900615938	WITHOUT_CLASSIFICATION	5.6909938406178664E-5	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9998092124035676	WITHOUT_CLASSIFICATION	1.9078759643249065E-4	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9997543187113317	WITHOUT_CLASSIFICATION	2.456812886682687E-4	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9997814049340772	WITHOUT_CLASSIFICATION	2.1859506592290898E-4	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9995873126614746	WITHOUT_CLASSIFICATION	4.126873385254725E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9997532971003249	WITHOUT_CLASSIFICATION	2.4670289967509236E-4	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.999939815267177	WITHOUT_CLASSIFICATION	6.018473282293053E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999871636669002	WITHOUT_CLASSIFICATION	1.2836333099696679E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999871636669002	WITHOUT_CLASSIFICATION	1.2836333099696679E-5	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999956235611083	WITHOUT_CLASSIFICATION	4.3764388917569085E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999956235611083	WITHOUT_CLASSIFICATION	4.3764388917569085E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999956235611083	WITHOUT_CLASSIFICATION	4.3764388917569085E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9997883287811945	WITHOUT_CLASSIFICATION	2.1167121880539923E-4	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9997597897092304	WITHOUT_CLASSIFICATION	2.40210290769509E-4	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.999977504318073	WITHOUT_CLASSIFICATION	2.24956819270836E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.999977504318073	WITHOUT_CLASSIFICATION	2.24956819270836E-5	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.999916798710043	WITHOUT_CLASSIFICATION	8.320128995698987E-5	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999979649577004	WITHOUT_CLASSIFICATION	2.0350422995747193E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999895394156764	WITHOUT_CLASSIFICATION	1.0460584323680496E-5	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9997922233563123	WITHOUT_CLASSIFICATION	2.0777664368771127E-4	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999194793584663	WITHOUT_CLASSIFICATION	8.05206415338228E-5	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999955052027951	WITHOUT_CLASSIFICATION	4.494797204798897E-6	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9978788461364014	WITHOUT_CLASSIFICATION	0.00212115386359859	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9997776245077004	WITHOUT_CLASSIFICATION	2.2237549229969415E-4	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999301131128978	WITHOUT_CLASSIFICATION	6.988688710217593E-5	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999301131128978	WITHOUT_CLASSIFICATION	6.988688710217593E-5	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999301131128978	WITHOUT_CLASSIFICATION	6.988688710217593E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999516505222016	WITHOUT_CLASSIFICATION	4.834947779837075E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999516505222016	WITHOUT_CLASSIFICATION	4.834947779837075E-5	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999107926699948	WITHOUT_CLASSIFICATION	8.920733000523916E-5	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999107926699948	WITHOUT_CLASSIFICATION	8.920733000523916E-5	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999107926699948	WITHOUT_CLASSIFICATION	8.920733000523916E-5	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999107926699948	WITHOUT_CLASSIFICATION	8.920733000523916E-5	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999225749055911	WITHOUT_CLASSIFICATION	7.742509440888122E-5	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999225749055911	WITHOUT_CLASSIFICATION	7.742509440888122E-5	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999225749055911	WITHOUT_CLASSIFICATION	7.742509440888122E-5	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999225749055911	WITHOUT_CLASSIFICATION	7.742509440888122E-5	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999679336462071	WITHOUT_CLASSIFICATION	3.206635379290634E-4	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999679336462071	WITHOUT_CLASSIFICATION	3.206635379290634E-4	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999679336462071	WITHOUT_CLASSIFICATION	3.206635379290634E-4	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999679336462071	WITHOUT_CLASSIFICATION	3.206635379290634E-4	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999679336462071	WITHOUT_CLASSIFICATION	3.206635379290634E-4	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9998265621300387	WITHOUT_CLASSIFICATION	1.7343786996128782E-4	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9998265621300387	WITHOUT_CLASSIFICATION	1.7343786996128782E-4	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9998265621300387	WITHOUT_CLASSIFICATION	1.7343786996128782E-4	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9998265621300387	WITHOUT_CLASSIFICATION	1.7343786996128782E-4	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9998265621300387	WITHOUT_CLASSIFICATION	1.7343786996128782E-4	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9998265621300387	WITHOUT_CLASSIFICATION	1.7343786996128782E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999516505222016	WITHOUT_CLASSIFICATION	4.834947779837075E-5	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999107926699948	WITHOUT_CLASSIFICATION	8.920733000523916E-5	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999225749055911	WITHOUT_CLASSIFICATION	7.742509440888122E-5	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.999679336462071	WITHOUT_CLASSIFICATION	3.206635379290634E-4	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9998265621300387	WITHOUT_CLASSIFICATION	1.7343786996128782E-4	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9998265621300387	WITHOUT_CLASSIFICATION	1.7343786996128782E-4	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9998077431796647	WITHOUT_CLASSIFICATION	1.922568203354175E-4	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9998050267397358	WITHOUT_CLASSIFICATION	1.9497326026430783E-4	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.9999648453463386	WITHOUT_CLASSIFICATION	3.515465366140256E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9996735650652886	WITHOUT_CLASSIFICATION	3.2643493471135656E-4	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9996735650652886	WITHOUT_CLASSIFICATION	3.2643493471135656E-4	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999410155360486	WITHOUT_CLASSIFICATION	5.898446395134329E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999410155360486	WITHOUT_CLASSIFICATION	5.898446395134329E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999410155360486	WITHOUT_CLASSIFICATION	5.898446395134329E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9967630850694568	WITHOUT_CLASSIFICATION	0.0032369149305432315	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9996063135735287	WITHOUT_CLASSIFICATION	3.9368642647129087E-4	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9998445741691884	WITHOUT_CLASSIFICATION	1.5542583081156573E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9996735650652886	WITHOUT_CLASSIFICATION	3.2643493471135656E-4	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999410155360486	WITHOUT_CLASSIFICATION	5.898446395134329E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999178245999885	WITHOUT_CLASSIFICATION	8.21754000116413E-5	DEFECT
// map	WITHOUT_CLASSIFICATION	0.999557010269248	WITHOUT_CLASSIFICATION	4.429897307519578E-4	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999586558768476	WITHOUT_CLASSIFICATION	4.134412315236439E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999586558768476	WITHOUT_CLASSIFICATION	4.134412315236439E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999586558768476	WITHOUT_CLASSIFICATION	4.134412315236439E-5	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999205463175025	WITHOUT_CLASSIFICATION	7.945368249747227E-5	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999178245999885	WITHOUT_CLASSIFICATION	8.21754000116413E-5	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999802197093037	WITHOUT_CLASSIFICATION	1.978029069623612E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999915862063566	WITHOUT_CLASSIFICATION	8.413793643366228E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999915862063566	WITHOUT_CLASSIFICATION	8.413793643366228E-6	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9999151034310252	WITHOUT_CLASSIFICATION	8.489656897480883E-5	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999916906603424	WITHOUT_CLASSIFICATION	8.30933965753768E-6	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999677233098515	WITHOUT_CLASSIFICATION	3.227669014855794E-5	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999732481640903	WITHOUT_CLASSIFICATION	2.675183590969323E-5	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.999954170454004	WITHOUT_CLASSIFICATION	4.582954599593817E-5	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999150887081985	WITHOUT_CLASSIFICATION	8.491129180159424E-5	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999858157275974	WITHOUT_CLASSIFICATION	1.418427240272931E-5	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999533352409801	WITHOUT_CLASSIFICATION	4.6664759019880224E-5	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999737837812361	WITHOUT_CLASSIFICATION	2.621621876381821E-5	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9997667403793568	WITHOUT_CLASSIFICATION	2.3325962064325972E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9997532971003249	WITHOUT_CLASSIFICATION	2.4670289967509236E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9998722225934874	WITHOUT_CLASSIFICATION	1.2777740651267845E-4	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999586558768476	WITHOUT_CLASSIFICATION	4.134412315236439E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999586558768476	WITHOUT_CLASSIFICATION	4.134412315236439E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999586558768476	WITHOUT_CLASSIFICATION	4.134412315236439E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999915862063566	WITHOUT_CLASSIFICATION	8.413793643366228E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999915862063566	WITHOUT_CLASSIFICATION	8.413793643366228E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999915862063566	WITHOUT_CLASSIFICATION	8.413793643366228E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999858157275974	WITHOUT_CLASSIFICATION	1.418427240272931E-5	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999533352409801	WITHOUT_CLASSIFICATION	4.6664759019880224E-5	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9997156834830365	WITHOUT_CLASSIFICATION	2.8431651696354885E-4	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9998874331466995	WITHOUT_CLASSIFICATION	1.1256685330053884E-4	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9998874331466995	WITHOUT_CLASSIFICATION	1.1256685330053884E-4	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999475899752786	WITHOUT_CLASSIFICATION	5.241002472136417E-5	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999634068209112	WITHOUT_CLASSIFICATION	3.659317908886506E-5	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999268676866555	WITHOUT_CLASSIFICATION	7.313231334453058E-5	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9995125507891226	WITHOUT_CLASSIFICATION	4.8744921087743497E-4	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9997520874697418	WITHOUT_CLASSIFICATION	2.4791253025823525E-4	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9997112775304404	WITHOUT_CLASSIFICATION	2.887224695596206E-4	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999323432600266	WITHOUT_CLASSIFICATION	6.765673997353658E-5	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9989115144300978	WITHOUT_CLASSIFICATION	0.0010884855699021044	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999718705310855	WITHOUT_CLASSIFICATION	2.8129468914438635E-5	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999690624407214	WITHOUT_CLASSIFICATION	3.0937559278734394E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999802197093037	WITHOUT_CLASSIFICATION	1.978029069623612E-5	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9992495329913224	WITHOUT_CLASSIFICATION	7.504670086776801E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9989115144300978	WITHOUT_CLASSIFICATION	0.0010884855699021044	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9975008902989299	WITHOUT_CLASSIFICATION	0.002499109701070032	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999085769874255	WITHOUT_CLASSIFICATION	9.142301257456203E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999085769874255	WITHOUT_CLASSIFICATION	9.142301257456203E-5	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.99617003139668	WITHOUT_CLASSIFICATION	0.00382996860331982	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.99617003139668	WITHOUT_CLASSIFICATION	0.00382996860331982	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9998911107171199	WITHOUT_CLASSIFICATION	1.0888928288006786E-4	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9998884451952748	WITHOUT_CLASSIFICATION	1.1155480472532012E-4	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999690020637039	WITHOUT_CLASSIFICATION	3.0997936296074284E-5	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999449000606511	WITHOUT_CLASSIFICATION	5.509993934894213E-5	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999812855708943	WITHOUT_CLASSIFICATION	1.871442910569548E-5	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999812855708943	WITHOUT_CLASSIFICATION	1.871442910569548E-5	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9998420731704998	WITHOUT_CLASSIFICATION	1.5792682950014895E-4	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999655293717663	WITHOUT_CLASSIFICATION	3.44706282337167E-5	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9998311286358109	WITHOUT_CLASSIFICATION	1.6887136418909746E-4	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999731178639745	WITHOUT_CLASSIFICATION	2.688213602546647E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.99984633615173	WITHOUT_CLASSIFICATION	1.5366384826986574E-4	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999709600921244	WITHOUT_CLASSIFICATION	2.9039907875573396E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9995547238754038	WITHOUT_CLASSIFICATION	4.452761245962276E-4	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9995547238754038	WITHOUT_CLASSIFICATION	4.452761245962276E-4	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.999863742837671	WITHOUT_CLASSIFICATION	1.3625716232901542E-4	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999522715282014	WITHOUT_CLASSIFICATION	4.772847179850278E-5	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.999936720806799	WITHOUT_CLASSIFICATION	6.327919320106054E-5	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9985929615092827	WITHOUT_CLASSIFICATION	0.0014070384907173144	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999831205689227	WITHOUT_CLASSIFICATION	1.687943107724945E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.999950068682752	WITHOUT_CLASSIFICATION	4.993131724802884E-5	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999806868122713	WITHOUT_CLASSIFICATION	1.93131877287624E-5	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9996457056276192	WITHOUT_CLASSIFICATION	3.5429437238071655E-4	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999427490639675	WITHOUT_CLASSIFICATION	5.725093603253513E-5	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.999502759134114	WITHOUT_CLASSIFICATION	4.972408658858955E-4	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9994867594328222	WITHOUT_CLASSIFICATION	5.132405671778172E-4	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999834316662718	WITHOUT_CLASSIFICATION	1.6568333728185848E-5	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9997768695885852	WITHOUT_CLASSIFICATION	2.2313041141478943E-4	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999515947930013	WITHOUT_CLASSIFICATION	4.840520699872162E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999628328660931	WITHOUT_CLASSIFICATION	3.716713390684156E-5	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999785640097612	WITHOUT_CLASSIFICATION	2.1435990238828707E-5	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.999930196928102	WITHOUT_CLASSIFICATION	6.980307189795007E-5	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9998308758526776	WITHOUT_CLASSIFICATION	1.69124147322369E-4	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999531178287769	WITHOUT_CLASSIFICATION	4.68821712231623E-5	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999860595546436	WITHOUT_CLASSIFICATION	1.3940445356343692E-5	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999739721845103	WITHOUT_CLASSIFICATION	2.602781548970575E-5	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9998906056727265	WITHOUT_CLASSIFICATION	1.0939432727343242E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9998420731704998	WITHOUT_CLASSIFICATION	1.5792682950014895E-4	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999731178639745	WITHOUT_CLASSIFICATION	2.688213602546647E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999731178639745	WITHOUT_CLASSIFICATION	2.688213602546647E-5	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999576633904643	WITHOUT_CLASSIFICATION	4.2336609535680924E-5	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999576633904643	WITHOUT_CLASSIFICATION	4.2336609535680924E-5	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999576633904643	WITHOUT_CLASSIFICATION	4.2336609535680924E-5	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999576633904643	WITHOUT_CLASSIFICATION	4.2336609535680924E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.99984633615173	WITHOUT_CLASSIFICATION	1.5366384826986574E-4	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.99984633615173	WITHOUT_CLASSIFICATION	1.5366384826986574E-4	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.99984633615173	WITHOUT_CLASSIFICATION	1.5366384826986574E-4	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.99984633615173	WITHOUT_CLASSIFICATION	1.5366384826986574E-4	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999739721845103	WITHOUT_CLASSIFICATION	2.602781548970575E-5	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.9995976622686575	WITHOUT_CLASSIFICATION	4.023377313424665E-4	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9999803524472106	WITHOUT_CLASSIFICATION	1.9647552789385823E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999664374160305	WITHOUT_CLASSIFICATION	3.3562583969447995E-5	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999222209239617	WITHOUT_CLASSIFICATION	7.777907603827605E-5	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999510535672117	WITHOUT_CLASSIFICATION	4.894643278823676E-5	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999930582622986	WITHOUT_CLASSIFICATION	6.9417377014711395E-6	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9967392223817425	WITHOUT_CLASSIFICATION	0.0032607776182574126	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9998488853863828	WITHOUT_CLASSIFICATION	1.5111461361720687E-4	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999518440947445	WITHOUT_CLASSIFICATION	4.815590525555907E-5	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999518440947445	WITHOUT_CLASSIFICATION	4.815590525555907E-5	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.9998666338252427	WITHOUT_CLASSIFICATION	1.333661747572617E-4	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999796531937041	WITHOUT_CLASSIFICATION	2.0346806295838857E-5	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9998886462609958	WITHOUT_CLASSIFICATION	1.1135373900416124E-4	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9999308750943943	WITHOUT_CLASSIFICATION	6.912490560584475E-5	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999566056825949	WITHOUT_CLASSIFICATION	4.339431740520272E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999730628642808	WITHOUT_CLASSIFICATION	2.6937135719194634E-5	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999575473197081	WITHOUT_CLASSIFICATION	4.245268029183947E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999625667719091	WITHOUT_CLASSIFICATION	3.743322809098134E-5	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999834569756811	WITHOUT_CLASSIFICATION	1.6543024318870886E-5	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999816585484597	WITHOUT_CLASSIFICATION	1.8341451540334077E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999328937803732	WITHOUT_CLASSIFICATION	6.710621962688846E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999328937803732	WITHOUT_CLASSIFICATION	6.710621962688846E-5	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9997609020672709	WITHOUT_CLASSIFICATION	2.3909793272901842E-4	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999583449232629	WITHOUT_CLASSIFICATION	4.165507673723659E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998661378424633	WITHOUT_CLASSIFICATION	1.3386215753676434E-4	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998661378424633	WITHOUT_CLASSIFICATION	1.3386215753676434E-4	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999905946125426	WITHOUT_CLASSIFICATION	9.405387457387365E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.999731889083323	WITHOUT_CLASSIFICATION	2.681109166770593E-4	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.999731889083323	WITHOUT_CLASSIFICATION	2.681109166770593E-4	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9995067785593952	WITHOUT_CLASSIFICATION	4.932214406048646E-4	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9995067785593952	WITHOUT_CLASSIFICATION	4.932214406048646E-4	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9995067785593952	WITHOUT_CLASSIFICATION	4.932214406048646E-4	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9998962821402018	WITHOUT_CLASSIFICATION	1.0371785979824433E-4	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999792265091227	WITHOUT_CLASSIFICATION	2.0773490877278837E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999688423067344	WITHOUT_CLASSIFICATION	3.1157693265648623E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999935417075021	WITHOUT_CLASSIFICATION	6.458292497904381E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999935417075021	WITHOUT_CLASSIFICATION	6.458292497904381E-5	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998661378424633	WITHOUT_CLASSIFICATION	1.3386215753676434E-4	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998661378424633	WITHOUT_CLASSIFICATION	1.3386215753676434E-4	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9995067785593952	WITHOUT_CLASSIFICATION	4.932214406048646E-4	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9995067785593952	WITHOUT_CLASSIFICATION	4.932214406048646E-4	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9995067785593952	WITHOUT_CLASSIFICATION	4.932214406048646E-4	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9998962821402018	WITHOUT_CLASSIFICATION	1.0371785979824433E-4	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999792265091227	WITHOUT_CLASSIFICATION	2.0773490877278837E-5	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999665159804126	WITHOUT_CLASSIFICATION	3.34840195873241E-5	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9975498062712403	WITHOUT_CLASSIFICATION	0.002450193728759661	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9998843791229469	WITHOUT_CLASSIFICATION	1.1562087705317716E-4	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9998934679165594	WITHOUT_CLASSIFICATION	1.0653208344052663E-4	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999584847937849	WITHOUT_CLASSIFICATION	4.15152062149703E-5	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9994629148559053	WITHOUT_CLASSIFICATION	5.370851440947642E-4	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.999790644649521	WITHOUT_CLASSIFICATION	2.0935535047882347E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999638989513326	WITHOUT_CLASSIFICATION	3.6101048667274514E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999480474566661	WITHOUT_CLASSIFICATION	5.1952543333910104E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999480474566661	WITHOUT_CLASSIFICATION	5.1952543333910104E-5	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999954795636693	WITHOUT_CLASSIFICATION	4.520436330710729E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999848177328621	WITHOUT_CLASSIFICATION	1.5182267137906007E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999848177328621	WITHOUT_CLASSIFICATION	1.5182267137906007E-5	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999709500319397	WITHOUT_CLASSIFICATION	2.9049968060355807E-5	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9998147603402084	WITHOUT_CLASSIFICATION	1.8523965979161026E-4	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999840549401159	WITHOUT_CLASSIFICATION	1.594505988413673E-5	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999132161481438	WITHOUT_CLASSIFICATION	8.678385185621782E-5	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999485172998125	WITHOUT_CLASSIFICATION	5.148270018752902E-5	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999485172998125	WITHOUT_CLASSIFICATION	5.148270018752902E-5	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999485172998125	WITHOUT_CLASSIFICATION	5.148270018752902E-5	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999057997226689	WITHOUT_CLASSIFICATION	9.420027733104779E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999517937337429	WITHOUT_CLASSIFICATION	4.820626625704917E-5	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999850004612464	WITHOUT_CLASSIFICATION	1.4999538753612443E-5	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9998760352276713	WITHOUT_CLASSIFICATION	1.2396477232869805E-4	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9998432818504333	WITHOUT_CLASSIFICATION	1.567181495667117E-4	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9991428796360939	WITHOUT_CLASSIFICATION	8.571203639060294E-4	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999664836283452	WITHOUT_CLASSIFICATION	3.3516371654819356E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9996394671992911	WITHOUT_CLASSIFICATION	3.6053280070897503E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9996394671992911	WITHOUT_CLASSIFICATION	3.6053280070897503E-4	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9998860036611903	WITHOUT_CLASSIFICATION	1.1399633880970078E-4	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.999552895006293	WITHOUT_CLASSIFICATION	4.471049937070227E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999802197093037	WITHOUT_CLASSIFICATION	1.978029069623612E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999802197093037	WITHOUT_CLASSIFICATION	1.978029069623612E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9998884451952748	WITHOUT_CLASSIFICATION	1.1155480472532012E-4	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9975498062712403	WITHOUT_CLASSIFICATION	0.002450193728759661	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999638989513326	WITHOUT_CLASSIFICATION	3.6101048667274514E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999480474566661	WITHOUT_CLASSIFICATION	5.1952543333910104E-5	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9998760352276713	WITHOUT_CLASSIFICATION	1.2396477232869805E-4	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9998760352276713	WITHOUT_CLASSIFICATION	1.2396477232869805E-4	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999850004612464	WITHOUT_CLASSIFICATION	1.4999538753612443E-5	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999665159804126	WITHOUT_CLASSIFICATION	3.34840195873241E-5	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999664836283452	WITHOUT_CLASSIFICATION	3.3516371654819356E-5	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9991428796360939	WITHOUT_CLASSIFICATION	8.571203639060294E-4	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9998364994790085	WITHOUT_CLASSIFICATION	1.6350052099151085E-4	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9995770038872679	WITHOUT_CLASSIFICATION	4.229961127320751E-4	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999791226971505	WITHOUT_CLASSIFICATION	2.0877302849499747E-5	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.999879227625575	WITHOUT_CLASSIFICATION	1.2077237442500167E-4	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999661865819143	WITHOUT_CLASSIFICATION	3.3813418085704006E-5	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999661865819143	WITHOUT_CLASSIFICATION	3.3813418085704006E-5	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9998869803825845	WITHOUT_CLASSIFICATION	1.1301961741550992E-4	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999345761698742	WITHOUT_CLASSIFICATION	6.542383012566981E-5	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9998926675353857	WITHOUT_CLASSIFICATION	1.0733246461421617E-4	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999399059503434	WITHOUT_CLASSIFICATION	6.009404965652448E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.999982979389855	WITHOUT_CLASSIFICATION	1.702061014502541E-5	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.9999253509885011	WITHOUT_CLASSIFICATION	7.464901149885545E-5	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999619830384512	WITHOUT_CLASSIFICATION	3.801696154870449E-5	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999442692979813	WITHOUT_CLASSIFICATION	5.5730702018775214E-5	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9998389188461965	WITHOUT_CLASSIFICATION	1.6108115380358273E-4	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9994313697759964	WITHOUT_CLASSIFICATION	5.686302240034702E-4	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9998930242906912	WITHOUT_CLASSIFICATION	1.0697570930875061E-4	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999807176848231	WITHOUT_CLASSIFICATION	1.9282315176788598E-5	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999553268471467	WITHOUT_CLASSIFICATION	4.467315285319742E-5	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9998853606763879	WITHOUT_CLASSIFICATION	1.1463932361210555E-4	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.999984252135388	WITHOUT_CLASSIFICATION	1.5747864612024127E-5	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999798449324624	WITHOUT_CLASSIFICATION	2.015506753760618E-5	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999492984209083	WITHOUT_CLASSIFICATION	5.070157909176766E-5	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999540993109682	WITHOUT_CLASSIFICATION	4.590068903171595E-5	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9998608413366087	WITHOUT_CLASSIFICATION	1.391586633912309E-4	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999879215680461	WITHOUT_CLASSIFICATION	1.2078431953970946E-5	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.999967611834276	WITHOUT_CLASSIFICATION	3.238816572405666E-5	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999807607971964	WITHOUT_CLASSIFICATION	1.923920280361249E-5	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999935362646669	WITHOUT_CLASSIFICATION	6.463735333144381E-6	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999743931345363	WITHOUT_CLASSIFICATION	2.560686546380006E-5	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999814037705332	WITHOUT_CLASSIFICATION	1.859622946668707E-5	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999818671300286	WITHOUT_CLASSIFICATION	1.8132869971387344E-5	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999757835182006	WITHOUT_CLASSIFICATION	2.421648179939117E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9997580855480148	WITHOUT_CLASSIFICATION	2.4191445198507722E-4	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999802197093037	WITHOUT_CLASSIFICATION	1.978029069623612E-5	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999921304407786	WITHOUT_CLASSIFICATION	7.869559221499744E-6	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9998540713097622	WITHOUT_CLASSIFICATION	1.4592869023769255E-4	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9998665332253936	WITHOUT_CLASSIFICATION	1.3346677460644021E-4	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999718424469554	WITHOUT_CLASSIFICATION	2.815755304460996E-5	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999640941234303	WITHOUT_CLASSIFICATION	3.590587656965381E-5	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999768210828428	WITHOUT_CLASSIFICATION	2.31789171571638E-5	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999907697177917	WITHOUT_CLASSIFICATION	9.230282208367677E-6	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999804869110135	WITHOUT_CLASSIFICATION	1.9513088986517513E-5	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999689940028684	WITHOUT_CLASSIFICATION	3.100599713162802E-5	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999658952953364	WITHOUT_CLASSIFICATION	3.4104704663610405E-5	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9997156834830365	WITHOUT_CLASSIFICATION	2.8431651696354885E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9999578694821392	WITHOUT_CLASSIFICATION	4.2130517860812505E-5	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999792263179342	WITHOUT_CLASSIFICATION	2.0773682065804822E-5	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9994937299594095	WITHOUT_CLASSIFICATION	5.062700405903263E-4	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9998372649553989	WITHOUT_CLASSIFICATION	1.6273504460105398E-4	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9998083062913804	WITHOUT_CLASSIFICATION	1.9169370861958125E-4	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999915187893389	WITHOUT_CLASSIFICATION	8.48121066102227E-6	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999832734261324	WITHOUT_CLASSIFICATION	1.6726573867690224E-5	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9997767724844009	WITHOUT_CLASSIFICATION	2.2322751559906696E-4	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999663649298319	WITHOUT_CLASSIFICATION	3.363507016797039E-5	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999246508926736	WITHOUT_CLASSIFICATION	7.534910732652823E-5	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999405865244163	WITHOUT_CLASSIFICATION	5.9413475583756453E-5	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999467067021386	WITHOUT_CLASSIFICATION	5.329329786152969E-5	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999467067021386	WITHOUT_CLASSIFICATION	5.329329786152969E-5	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9995897866000926	WITHOUT_CLASSIFICATION	4.1021339990737017E-4	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999245354910709	WITHOUT_CLASSIFICATION	7.546450892908192E-5	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9995583122571748	WITHOUT_CLASSIFICATION	4.4168774282520945E-4	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9987870252864425	WITHOUT_CLASSIFICATION	0.0012129747135575244	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9998574169962323	WITHOUT_CLASSIFICATION	1.4258300376757086E-4	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999956643011193	WITHOUT_CLASSIFICATION	4.33569888071733E-6	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9998838396444145	WITHOUT_CLASSIFICATION	1.1616035558541171E-4	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999756247536029	WITHOUT_CLASSIFICATION	2.4375246397071386E-5	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999487021126602	WITHOUT_CLASSIFICATION	5.1297887339819745E-5	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999554776061343	WITHOUT_CLASSIFICATION	4.452239386574575E-5	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9997483262090253	WITHOUT_CLASSIFICATION	2.5167379097465714E-4	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999493381363559	WITHOUT_CLASSIFICATION	5.0661863644037655E-5	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999132361679252	WITHOUT_CLASSIFICATION	8.676383207483791E-5	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.99933476262363	WITHOUT_CLASSIFICATION	6.652373763699474E-4	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9999280077242442	WITHOUT_CLASSIFICATION	7.199227575583059E-5	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999690266484097	WITHOUT_CLASSIFICATION	3.097335159035614E-5	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999109763286967	WITHOUT_CLASSIFICATION	8.902367130322715E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9892555106752969	WITHOUT_CLASSIFICATION	0.010744489324702976	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9892555106752969	WITHOUT_CLASSIFICATION	0.010744489324702976	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9892555106752969	WITHOUT_CLASSIFICATION	0.010744489324702976	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.999608161035928	WITHOUT_CLASSIFICATION	3.9183896407201887E-4	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9987065446665401	WITHOUT_CLASSIFICATION	0.0012934553334598893	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9997941376119558	WITHOUT_CLASSIFICATION	2.0586238804419618E-4	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.999728521472084	WITHOUT_CLASSIFICATION	2.7147852791598915E-4	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999429864921754	WITHOUT_CLASSIFICATION	5.701350782459593E-5	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.999979949813799	WITHOUT_CLASSIFICATION	2.005018620101625E-5	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9996264074954123	WITHOUT_CLASSIFICATION	3.735925045877024E-4	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999429864921754	WITHOUT_CLASSIFICATION	5.701350782459593E-5	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.999979949813799	WITHOUT_CLASSIFICATION	2.005018620101625E-5	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999766636920491	WITHOUT_CLASSIFICATION	2.3336307950996414E-5	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999766676977561	WITHOUT_CLASSIFICATION	2.3332302243853053E-5	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999642572561206	WITHOUT_CLASSIFICATION	3.5742743879425585E-5	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999642572561206	WITHOUT_CLASSIFICATION	3.5742743879425585E-5	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9998851293016427	WITHOUT_CLASSIFICATION	1.1487069835728918E-4	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9998851293016427	WITHOUT_CLASSIFICATION	1.1487069835728918E-4	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9966357487435168	WITHOUT_CLASSIFICATION	0.003364251256483106	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999523469458198	WITHOUT_CLASSIFICATION	4.76530541802377E-5	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9988817032530408	WITHOUT_CLASSIFICATION	0.0011182967469591577	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9986492675551387	WITHOUT_CLASSIFICATION	0.0013507324448613005	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9988648635439339	WITHOUT_CLASSIFICATION	0.001135136456066161	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999240723635454	WITHOUT_CLASSIFICATION	7.592763645455356E-5	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9998062840868144	WITHOUT_CLASSIFICATION	1.9371591318561392E-4	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9997085069379502	WITHOUT_CLASSIFICATION	2.914930620498096E-4	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999013466037109	WITHOUT_CLASSIFICATION	9.865339628917956E-5	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999199808897159	WITHOUT_CLASSIFICATION	8.001911028406092E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999071404173218	WITHOUT_CLASSIFICATION	9.285958267815693E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9978256862493107	WITHOUT_CLASSIFICATION	0.00217431375068937	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999879027013177	WITHOUT_CLASSIFICATION	1.2097298682345295E-5	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999591794615705	WITHOUT_CLASSIFICATION	4.08205384293994E-5	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999608254668316	WITHOUT_CLASSIFICATION	3.917453316838897E-5	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9998990081204346	WITHOUT_CLASSIFICATION	1.0099187956536554E-4	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.999562046294533	WITHOUT_CLASSIFICATION	4.379537054669502E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9997380775909894	WITHOUT_CLASSIFICATION	2.6192240901047473E-4	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9996818358716141	WITHOUT_CLASSIFICATION	3.1816412838591584E-4	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999515947930013	WITHOUT_CLASSIFICATION	4.840520699872162E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999515947930013	WITHOUT_CLASSIFICATION	4.840520699872162E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999628328660931	WITHOUT_CLASSIFICATION	3.716713390684156E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999628328660931	WITHOUT_CLASSIFICATION	3.716713390684156E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999638989513326	WITHOUT_CLASSIFICATION	3.6101048667274514E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999638989513326	WITHOUT_CLASSIFICATION	3.6101048667274514E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.999982979389855	WITHOUT_CLASSIFICATION	1.702061014502541E-5	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9997156834830365	WITHOUT_CLASSIFICATION	2.8431651696354885E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9892555106752969	WITHOUT_CLASSIFICATION	0.010744489324702976	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9892555106752969	WITHOUT_CLASSIFICATION	0.010744489324702976	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999071404173218	WITHOUT_CLASSIFICATION	9.285958267815693E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9978256862493107	WITHOUT_CLASSIFICATION	0.00217431375068937	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999126065832223	WITHOUT_CLASSIFICATION	8.739341677763116E-5	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999479841939523	WITHOUT_CLASSIFICATION	5.201580604767007E-5	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.9998665188998009	WITHOUT_CLASSIFICATION	1.334811001990937E-4	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999566388411458	WITHOUT_CLASSIFICATION	4.336115885412273E-5	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999199808897159	WITHOUT_CLASSIFICATION	8.001911028406092E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999389794144574	WITHOUT_CLASSIFICATION	6.102058554257109E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999389794144574	WITHOUT_CLASSIFICATION	6.102058554257109E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999389794144574	WITHOUT_CLASSIFICATION	6.102058554257109E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999687927861902	WITHOUT_CLASSIFICATION	3.120721380978141E-5	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999707343880858	WITHOUT_CLASSIFICATION	2.9265611914245513E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9998410124689677	WITHOUT_CLASSIFICATION	1.5898753103220264E-4	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9997380775909894	WITHOUT_CLASSIFICATION	2.6192240901047473E-4	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9996818358716141	WITHOUT_CLASSIFICATION	3.1816412838591584E-4	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999915862063566	WITHOUT_CLASSIFICATION	8.413793643366228E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999915862063566	WITHOUT_CLASSIFICATION	8.413793643366228E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999515947930013	WITHOUT_CLASSIFICATION	4.840520699872162E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999628328660931	WITHOUT_CLASSIFICATION	3.716713390684156E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999638989513326	WITHOUT_CLASSIFICATION	3.6101048667274514E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999638989513326	WITHOUT_CLASSIFICATION	3.6101048667274514E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999638989513326	WITHOUT_CLASSIFICATION	3.6101048667274514E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999480474566661	WITHOUT_CLASSIFICATION	5.1952543333910104E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999480474566661	WITHOUT_CLASSIFICATION	5.1952543333910104E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.999982979389855	WITHOUT_CLASSIFICATION	1.702061014502541E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9978256862493107	WITHOUT_CLASSIFICATION	0.00217431375068937	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9978256862493107	WITHOUT_CLASSIFICATION	0.00217431375068937	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9998990081204346	WITHOUT_CLASSIFICATION	1.0099187956536554E-4	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999389794144574	WITHOUT_CLASSIFICATION	6.102058554257109E-5	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999566388411458	WITHOUT_CLASSIFICATION	4.336115885412273E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999199808897159	WITHOUT_CLASSIFICATION	8.001911028406092E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999199808897159	WITHOUT_CLASSIFICATION	8.001911028406092E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999687927861902	WITHOUT_CLASSIFICATION	3.120721380978141E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9998410124689677	WITHOUT_CLASSIFICATION	1.5898753103220264E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999229503190094	WITHOUT_CLASSIFICATION	7.704968099065811E-5	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999229503190094	WITHOUT_CLASSIFICATION	7.704968099065811E-5	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999229503190094	WITHOUT_CLASSIFICATION	7.704968099065811E-5	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.999964086600146	WITHOUT_CLASSIFICATION	3.591339985392727E-5	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.999964086600146	WITHOUT_CLASSIFICATION	3.591339985392727E-5	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.999964086600146	WITHOUT_CLASSIFICATION	3.591339985392727E-5	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999732280183404	WITHOUT_CLASSIFICATION	2.677198165960202E-5	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999692243330486	WITHOUT_CLASSIFICATION	3.077566695136046E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999464918441205	WITHOUT_CLASSIFICATION	5.350815587940499E-5	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999470049478477	WITHOUT_CLASSIFICATION	5.2995052152199046E-5	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.999878650547468	WITHOUT_CLASSIFICATION	1.2134945253198917E-4	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9998239504738469	WITHOUT_CLASSIFICATION	1.760495261531223E-4	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999295248216971	WITHOUT_CLASSIFICATION	7.04751783029476E-5	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9996062475653527	WITHOUT_CLASSIFICATION	3.9375243464736485E-4	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9997145594216018	WITHOUT_CLASSIFICATION	2.8544057839822914E-4	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9990877395976345	WITHOUT_CLASSIFICATION	9.122604023654662E-4	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.998033720284924	WITHOUT_CLASSIFICATION	0.001966279715076077	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.9995563399848157	WITHOUT_CLASSIFICATION	4.436600151842889E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.99995005205779	WITHOUT_CLASSIFICATION	4.99479422100129E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9997380775909894	WITHOUT_CLASSIFICATION	2.6192240901047473E-4	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9996818358716141	WITHOUT_CLASSIFICATION	3.1816412838591584E-4	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999915862063566	WITHOUT_CLASSIFICATION	8.413793643366228E-6	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999688787897779	WITHOUT_CLASSIFICATION	3.112121022221331E-5	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999521219485308	WITHOUT_CLASSIFICATION	4.7878051469115934E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999515947930013	WITHOUT_CLASSIFICATION	4.840520699872162E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999628328660931	WITHOUT_CLASSIFICATION	3.716713390684156E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.999982979389855	WITHOUT_CLASSIFICATION	1.702061014502541E-5	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9997380320619171	WITHOUT_CLASSIFICATION	2.619679380829248E-4	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9992740747889197	WITHOUT_CLASSIFICATION	7.259252110803469E-4	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9999280077242442	WITHOUT_CLASSIFICATION	7.199227575583059E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999071404173218	WITHOUT_CLASSIFICATION	9.285958267815693E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9978256862493107	WITHOUT_CLASSIFICATION	0.00217431375068937	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999389794144574	WITHOUT_CLASSIFICATION	6.102058554257109E-5	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999566388411458	WITHOUT_CLASSIFICATION	4.336115885412273E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999199808897159	WITHOUT_CLASSIFICATION	8.001911028406092E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9998781522576403	WITHOUT_CLASSIFICATION	1.218477423596652E-4	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999546142657538	WITHOUT_CLASSIFICATION	4.538573424612777E-5	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9960173874748093	WITHOUT_CLASSIFICATION	0.003982612525190743	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999897848380791	WITHOUT_CLASSIFICATION	1.0215161920925723E-5	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999451635798806	WITHOUT_CLASSIFICATION	5.483642011942388E-5	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9998941100108011	WITHOUT_CLASSIFICATION	1.0588998919902005E-4	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999200964931955	WITHOUT_CLASSIFICATION	7.990350680456733E-5	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9995538784900108	WITHOUT_CLASSIFICATION	4.4612150998912526E-4	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999417325028557	WITHOUT_CLASSIFICATION	5.826749714422286E-5	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9978429957235653	WITHOUT_CLASSIFICATION	0.0021570042764347055	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9978429957235653	WITHOUT_CLASSIFICATION	0.0021570042764347055	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9980029687188413	WITHOUT_CLASSIFICATION	0.001997031281158656	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9980029687188413	WITHOUT_CLASSIFICATION	0.001997031281158656	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999283906854648	WITHOUT_CLASSIFICATION	7.160931453514845E-5	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999474714421033	WITHOUT_CLASSIFICATION	5.252855789680864E-5	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9996765889223237	WITHOUT_CLASSIFICATION	3.2341107767626745E-4	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9995504328950839	WITHOUT_CLASSIFICATION	4.495671049161149E-4	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9945603168959727	WITHOUT_CLASSIFICATION	0.005439683104027278	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9993017664588261	WITHOUT_CLASSIFICATION	6.982335411738899E-4	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9982502924571184	WITHOUT_CLASSIFICATION	0.0017497075428815948	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9990232606942006	WITHOUT_CLASSIFICATION	9.767393057995108E-4	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999869122918416	WITHOUT_CLASSIFICATION	1.3087708158505022E-5	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999851485291685	WITHOUT_CLASSIFICATION	1.4851470831527599E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999847990634171	WITHOUT_CLASSIFICATION	1.5200936582970857E-5	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.998716503906023	WITHOUT_CLASSIFICATION	0.0012834960939770532	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9995277136688469	WITHOUT_CLASSIFICATION	4.722863311531791E-4	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999814120037387	WITHOUT_CLASSIFICATION	1.8587996261238918E-5	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999754311502689	WITHOUT_CLASSIFICATION	2.4568849731086478E-5	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9994214199350132	WITHOUT_CLASSIFICATION	5.785800649867201E-4	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.999782000701403	WITHOUT_CLASSIFICATION	2.179992985969289E-4	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999659353036006	WITHOUT_CLASSIFICATION	3.4064696399407885E-5	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9982787692289191	WITHOUT_CLASSIFICATION	0.0017212307710809233	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9980926109991832	WITHOUT_CLASSIFICATION	0.0019073890008167087	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9997983976593666	WITHOUT_CLASSIFICATION	2.0160234063347778E-4	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9997784166434849	WITHOUT_CLASSIFICATION	2.2158335651514132E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999709074092287	WITHOUT_CLASSIFICATION	2.9092590771324315E-5	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.999565938948572	WITHOUT_CLASSIFICATION	4.3406105142791706E-4	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9993017664588261	WITHOUT_CLASSIFICATION	6.982335411738899E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9993017664588261	WITHOUT_CLASSIFICATION	6.982335411738899E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998390503867112	WITHOUT_CLASSIFICATION	1.609496132887955E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999976801200521	WITHOUT_CLASSIFICATION	2.3198799479285656E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999976801200521	WITHOUT_CLASSIFICATION	2.3198799479285656E-6	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9997783464549748	WITHOUT_CLASSIFICATION	2.216535450252066E-4	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.5570497697404471	WITHOUT_CLASSIFICATION	0.442950230259553	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9998715135891955	WITHOUT_CLASSIFICATION	1.284864108045848E-4	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9996617737088482	WITHOUT_CLASSIFICATION	3.382262911517356E-4	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9956482676433918	WITHOUT_CLASSIFICATION	0.004351732356608251	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9990842309678548	WITHOUT_CLASSIFICATION	9.157690321451194E-4	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9990842309678548	WITHOUT_CLASSIFICATION	9.157690321451194E-4	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999844058658705	WITHOUT_CLASSIFICATION	1.5594134129603075E-5	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999938372359178	WITHOUT_CLASSIFICATION	6.162764082158885E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.998498110066062	WITHOUT_CLASSIFICATION	0.0015018899339379835	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9987617357875301	WITHOUT_CLASSIFICATION	0.0012382642124699234	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.99777629222411	WITHOUT_CLASSIFICATION	0.002223707775890013	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999497351111486	WITHOUT_CLASSIFICATION	5.026488885141639E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9997332297069657	WITHOUT_CLASSIFICATION	2.6677029303441953E-4	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9998888917011138	WITHOUT_CLASSIFICATION	1.1110829888620583E-4	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9994161080388465	WITHOUT_CLASSIFICATION	5.838919611534875E-4	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9995941675364189	WITHOUT_CLASSIFICATION	4.058324635810965E-4	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9982384847884285	WITHOUT_CLASSIFICATION	0.0017615152115714797	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999399066347169	WITHOUT_CLASSIFICATION	6.009336528321214E-5	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9997299477432484	WITHOUT_CLASSIFICATION	2.7005225675160355E-4	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9994443824497414	WITHOUT_CLASSIFICATION	5.556175502585977E-4	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9977760548587706	WITHOUT_CLASSIFICATION	0.0022239451412293626	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9997784166434849	WITHOUT_CLASSIFICATION	2.2158335651514132E-4	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999708220988917	WITHOUT_CLASSIFICATION	2.9177901108370364E-5	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.999921590347135	WITHOUT_CLASSIFICATION	7.840965286501128E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999921301857145	WITHOUT_CLASSIFICATION	7.869814285482E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9998077431796647	WITHOUT_CLASSIFICATION	1.922568203354175E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999791337080218	WITHOUT_CLASSIFICATION	2.0866291978244747E-5	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9978854265366337	WITHOUT_CLASSIFICATION	0.002114573463366331	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999411710735223	WITHOUT_CLASSIFICATION	5.882892647767581E-5	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999625485512306	WITHOUT_CLASSIFICATION	3.7451448769403255E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997960252847778	WITHOUT_CLASSIFICATION	2.0397471522226994E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9998587956189535	WITHOUT_CLASSIFICATION	1.4120438104657136E-4	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999307911611637	WITHOUT_CLASSIFICATION	6.92088388363166E-5	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999307911611637	WITHOUT_CLASSIFICATION	6.92088388363166E-5	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999628936937885	WITHOUT_CLASSIFICATION	3.710630621154337E-5	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999463857744111	WITHOUT_CLASSIFICATION	5.361422558894292E-5	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9996491659024483	WITHOUT_CLASSIFICATION	3.508340975517152E-4	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9999444053493133	WITHOUT_CLASSIFICATION	5.559465068667163E-5	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9998454719388766	WITHOUT_CLASSIFICATION	1.545280611234585E-4	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999956643011193	WITHOUT_CLASSIFICATION	4.33569888071733E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999756247536029	WITHOUT_CLASSIFICATION	2.4375246397071386E-5	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9997380320619171	WITHOUT_CLASSIFICATION	2.619679380829248E-4	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9992740747889197	WITHOUT_CLASSIFICATION	7.259252110803469E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9892555106752969	WITHOUT_CLASSIFICATION	0.010744489324702976	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999071404173218	WITHOUT_CLASSIFICATION	9.285958267815693E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999071404173218	WITHOUT_CLASSIFICATION	9.285958267815693E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9978256862493107	WITHOUT_CLASSIFICATION	0.00217431375068937	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999865771212759	WITHOUT_CLASSIFICATION	1.3422878723988865E-5	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9998990081204346	WITHOUT_CLASSIFICATION	1.0099187956536554E-4	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9998990081204346	WITHOUT_CLASSIFICATION	1.0099187956536554E-4	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// open	WITHOUT_CLASSIFICATION	0.9998477999474293	WITHOUT_CLASSIFICATION	1.5220005257071152E-4	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999566388411458	WITHOUT_CLASSIFICATION	4.336115885412273E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9998410124689677	WITHOUT_CLASSIFICATION	1.5898753103220264E-4	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9998410124689677	WITHOUT_CLASSIFICATION	1.5898753103220264E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9998781522576403	WITHOUT_CLASSIFICATION	1.218477423596652E-4	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9998781522576403	WITHOUT_CLASSIFICATION	1.218477423596652E-4	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999546142657538	WITHOUT_CLASSIFICATION	4.538573424612777E-5	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999546142657538	WITHOUT_CLASSIFICATION	4.538573424612777E-5	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9996657123769972	WITHOUT_CLASSIFICATION	3.342876230027875E-4	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999565828580487	WITHOUT_CLASSIFICATION	4.3417141951356554E-5	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9994754160511591	WITHOUT_CLASSIFICATION	5.245839488409915E-4	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9994754160511591	WITHOUT_CLASSIFICATION	5.245839488409915E-4	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999565828580487	WITHOUT_CLASSIFICATION	4.3417141951356554E-5	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9997731968255102	WITHOUT_CLASSIFICATION	2.2680317448968722E-4	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9996657123769972	WITHOUT_CLASSIFICATION	3.342876230027875E-4	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999359278082306	WITHOUT_CLASSIFICATION	6.407219176935076E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999359278082306	WITHOUT_CLASSIFICATION	6.407219176935076E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999359278082306	WITHOUT_CLASSIFICATION	6.407219176935076E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999359278082306	WITHOUT_CLASSIFICATION	6.407219176935076E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999359278082306	WITHOUT_CLASSIFICATION	6.407219176935076E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999359278082306	WITHOUT_CLASSIFICATION	6.407219176935076E-5	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999359278082306	WITHOUT_CLASSIFICATION	6.407219176935076E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999359278082306	WITHOUT_CLASSIFICATION	6.407219176935076E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999359278082306	WITHOUT_CLASSIFICATION	6.407219176935076E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999359278082306	WITHOUT_CLASSIFICATION	6.407219176935076E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999359278082306	WITHOUT_CLASSIFICATION	6.407219176935076E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999977152929094	WITHOUT_CLASSIFICATION	2.284707090602039E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999977152929094	WITHOUT_CLASSIFICATION	2.284707090602039E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999977152929094	WITHOUT_CLASSIFICATION	2.284707090602039E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999977152929094	WITHOUT_CLASSIFICATION	2.284707090602039E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9993935094123297	WITHOUT_CLASSIFICATION	6.064905876702753E-4	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999611225032996	WITHOUT_CLASSIFICATION	3.887749670048863E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999611225032996	WITHOUT_CLASSIFICATION	3.887749670048863E-5	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9997756828014733	WITHOUT_CLASSIFICATION	2.2431719852675444E-4	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9997756828014733	WITHOUT_CLASSIFICATION	2.2431719852675444E-4	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9997970964669343	WITHOUT_CLASSIFICATION	2.029035330656456E-4	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9997756828014733	WITHOUT_CLASSIFICATION	2.2431719852675444E-4	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999496007084522	WITHOUT_CLASSIFICATION	5.0399291547889404E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999977152929094	WITHOUT_CLASSIFICATION	2.284707090602039E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999977152929094	WITHOUT_CLASSIFICATION	2.284707090602039E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.999960269232596	WITHOUT_CLASSIFICATION	3.9730767404002724E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9997580855480148	WITHOUT_CLASSIFICATION	2.4191445198507722E-4	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.8108839955223536	WITHOUT_CLASSIFICATION	0.18911600447764643	DEFECT
// todo: not serialized yet	DEFECT	0.9986344741534459	WITHOUT_CLASSIFICATION	0.001365525846554158	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.9964137653122537	WITHOUT_CLASSIFICATION	0.003586234687746295	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.8685252116832388	WITHOUT_CLASSIFICATION	0.13147478831676115	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.8685252116832388	WITHOUT_CLASSIFICATION	0.13147478831676115	DEFECT
// TODO: Check this result...	DEFECT	0.9519816470126322	WITHOUT_CLASSIFICATION	0.048018352987367736	DEFECT
// TODO: Check this result...	DEFECT	0.9519816470126322	WITHOUT_CLASSIFICATION	0.048018352987367736	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9964336607576351	WITHOUT_CLASSIFICATION	0.0035663392423648773	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9977319787824912	WITHOUT_CLASSIFICATION	0.0022680212175089256	DEFECT
