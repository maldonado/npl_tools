// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9995739906923555	WITHOUT_CLASSIFICATION	4.260093076444409E-4	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9996458939167415	WITHOUT_CLASSIFICATION	3.5410608325843674E-4	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9995015260092197	WITHOUT_CLASSIFICATION	4.984739907803791E-4	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9997608651720069	WITHOUT_CLASSIFICATION	2.3913482799298334E-4	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9996274120553641	WITHOUT_CLASSIFICATION	3.725879446358367E-4	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9994758812829208	WITHOUT_CLASSIFICATION	5.241187170792111E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9995759503652677	WITHOUT_CLASSIFICATION	4.2404963473235177E-4	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.99956433651241	WITHOUT_CLASSIFICATION	4.3566348759012846E-4	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9996878851128669	WITHOUT_CLASSIFICATION	3.1211488713317785E-4	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9998756995868598	WITHOUT_CLASSIFICATION	1.243004131400647E-4	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999125135038135	WITHOUT_CLASSIFICATION	8.748649618653513E-5	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999241431073848	WITHOUT_CLASSIFICATION	7.585689261520884E-5	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999598677663653	WITHOUT_CLASSIFICATION	4.01322336347743E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9996007249546133	WITHOUT_CLASSIFICATION	3.9927504538672486E-4	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9995064845118726	WITHOUT_CLASSIFICATION	4.935154881273542E-4	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9996208544881792	WITHOUT_CLASSIFICATION	3.791455118208546E-4	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9998989565113326	WITHOUT_CLASSIFICATION	1.010434886672877E-4	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9998976809427628	WITHOUT_CLASSIFICATION	1.0231905723719748E-4	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9998858674546183	WITHOUT_CLASSIFICATION	1.1413254538178651E-4	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9998450516866051	WITHOUT_CLASSIFICATION	1.5494831339494316E-4	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9995341319582336	WITHOUT_CLASSIFICATION	4.6586804176651666E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.999775274889385	WITHOUT_CLASSIFICATION	2.247251106149999E-4	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9998565809280735	WITHOUT_CLASSIFICATION	1.434190719264658E-4	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9998565809280735	WITHOUT_CLASSIFICATION	1.434190719264658E-4	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9998565809280735	WITHOUT_CLASSIFICATION	1.434190719264658E-4	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9998826758973216	WITHOUT_CLASSIFICATION	1.1732410267844599E-4	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999913811601191	WITHOUT_CLASSIFICATION	8.618839880871791E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999526116523342	WITHOUT_CLASSIFICATION	4.738834766590222E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999567265707711	WITHOUT_CLASSIFICATION	4.327342922891859E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999745567366357	WITHOUT_CLASSIFICATION	2.5443263364311076E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999745567366357	WITHOUT_CLASSIFICATION	2.5443263364311076E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999745567366357	WITHOUT_CLASSIFICATION	2.5443263364311076E-5	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999755896664636	WITHOUT_CLASSIFICATION	2.4410333536360388E-5	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999684243415365	WITHOUT_CLASSIFICATION	3.157565846346054E-5	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999178780823683	WITHOUT_CLASSIFICATION	8.212191763166417E-5	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9980505465931916	WITHOUT_CLASSIFICATION	0.0019494534068084629	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9979939751173179	WITHOUT_CLASSIFICATION	0.0020060248826820823	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999296998086028	WITHOUT_CLASSIFICATION	7.030019139719879E-5	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999429971443823	WITHOUT_CLASSIFICATION	5.7002855617804534E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999517326359207	WITHOUT_CLASSIFICATION	4.82673640793509E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999517326359207	WITHOUT_CLASSIFICATION	4.82673640793509E-5	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9998094425235157	WITHOUT_CLASSIFICATION	1.905574764843363E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9724953683037195	WITHOUT_CLASSIFICATION	0.02750463169628054	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9724953683037195	WITHOUT_CLASSIFICATION	0.02750463169628054	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9724953683037195	WITHOUT_CLASSIFICATION	0.02750463169628054	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9724953683037195	WITHOUT_CLASSIFICATION	0.02750463169628054	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9996847600088763	WITHOUT_CLASSIFICATION	3.1523999112380226E-4	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9990684206304312	WITHOUT_CLASSIFICATION	9.315793695687546E-4	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9997679924498787	WITHOUT_CLASSIFICATION	2.3200755012136456E-4	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9940563468342775	WITHOUT_CLASSIFICATION	0.005943653165722505	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.999993642500265	WITHOUT_CLASSIFICATION	6.357499735031262E-6	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9971666944077515	WITHOUT_CLASSIFICATION	0.0028333055922486012	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999169978101025	WITHOUT_CLASSIFICATION	8.300218989753424E-5	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9997416081443741	WITHOUT_CLASSIFICATION	2.58391855625866E-4	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9998408235872192	WITHOUT_CLASSIFICATION	1.5917641278085347E-4	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999499570804348	WITHOUT_CLASSIFICATION	5.004291956515174E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9995538224195825	WITHOUT_CLASSIFICATION	4.4617758041747474E-4	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9997204114416793	WITHOUT_CLASSIFICATION	2.795885583206787E-4	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.9918640148748802	WITHOUT_CLASSIFICATION	0.008135985125119889	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9998738584658	WITHOUT_CLASSIFICATION	1.2614153419997128E-4	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9999358482420875	WITHOUT_CLASSIFICATION	6.415175791249801E-5	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9997083175621427	WITHOUT_CLASSIFICATION	2.916824378572218E-4	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9999071429954673	WITHOUT_CLASSIFICATION	9.28570045325994E-5	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999989373715987	WITHOUT_CLASSIFICATION	1.0626284012756595E-6	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9952886745548982	WITHOUT_CLASSIFICATION	0.004711325445101692	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9952886745548982	WITHOUT_CLASSIFICATION	0.004711325445101692	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999364258628398	WITHOUT_CLASSIFICATION	6.357413716021276E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9965442422862193	WITHOUT_CLASSIFICATION	0.003455757713780718	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9998687540856405	WITHOUT_CLASSIFICATION	1.3124591435962778E-4	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9994316663137885	WITHOUT_CLASSIFICATION	5.683336862114906E-4	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.999985569816396	WITHOUT_CLASSIFICATION	1.443018360416781E-5	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9997631668738373	WITHOUT_CLASSIFICATION	2.368331261628781E-4	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.996272386453299	WITHOUT_CLASSIFICATION	0.003727613546701128	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999396029961146	WITHOUT_CLASSIFICATION	6.039700388528614E-5	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9996782220243345	WITHOUT_CLASSIFICATION	3.217779756654429E-4	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9997883304764903	WITHOUT_CLASSIFICATION	2.1166952350961432E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9995087996408154	WITHOUT_CLASSIFICATION	4.912003591846264E-4	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9997466200106984	WITHOUT_CLASSIFICATION	2.533799893016049E-4	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9997310251831045	WITHOUT_CLASSIFICATION	2.6897481689548903E-4	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999788217535761	WITHOUT_CLASSIFICATION	2.1178246423837546E-5	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999788217535761	WITHOUT_CLASSIFICATION	2.1178246423837546E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999617134751331	WITHOUT_CLASSIFICATION	3.828652486703878E-5	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9994839590862725	WITHOUT_CLASSIFICATION	5.160409137274524E-4	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9993162828758622	WITHOUT_CLASSIFICATION	6.837171241378198E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9994298318025687	WITHOUT_CLASSIFICATION	5.701681974312804E-4	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999321008903449	WITHOUT_CLASSIFICATION	6.789910965505436E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999321008903449	WITHOUT_CLASSIFICATION	6.789910965505436E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999321008903449	WITHOUT_CLASSIFICATION	6.789910965505436E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999321008903449	WITHOUT_CLASSIFICATION	6.789910965505436E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999321008903449	WITHOUT_CLASSIFICATION	6.789910965505436E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999321008903449	WITHOUT_CLASSIFICATION	6.789910965505436E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999321008903449	WITHOUT_CLASSIFICATION	6.789910965505436E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999321008903449	WITHOUT_CLASSIFICATION	6.789910965505436E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999321008903449	WITHOUT_CLASSIFICATION	6.789910965505436E-5	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9974031539613178	WITHOUT_CLASSIFICATION	0.0025968460386822036	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9974031539613178	WITHOUT_CLASSIFICATION	0.0025968460386822036	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9998143817269488	WITHOUT_CLASSIFICATION	1.8561827305125063E-4	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9998143817269488	WITHOUT_CLASSIFICATION	1.8561827305125063E-4	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9998224674063175	WITHOUT_CLASSIFICATION	1.7753259368258578E-4	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999535574082802	WITHOUT_CLASSIFICATION	4.644259171978469E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9996582946697051	WITHOUT_CLASSIFICATION	3.4170533029491125E-4	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9998490192983127	WITHOUT_CLASSIFICATION	1.509807016872685E-4	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9998490192983127	WITHOUT_CLASSIFICATION	1.509807016872685E-4	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9994959115496951	WITHOUT_CLASSIFICATION	5.040884503049931E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9970802823370379	WITHOUT_CLASSIFICATION	0.0029197176629620534	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9998674871515812	WITHOUT_CLASSIFICATION	1.325128484187906E-4	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999745702105396	WITHOUT_CLASSIFICATION	2.5429789460385156E-5	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999745702105396	WITHOUT_CLASSIFICATION	2.5429789460385156E-5	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9997901404321765	WITHOUT_CLASSIFICATION	2.0985956782351275E-4	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9997901404321765	WITHOUT_CLASSIFICATION	2.0985956782351275E-4	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999544196754688	WITHOUT_CLASSIFICATION	4.55803245310732E-5	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9998939035939927	WITHOUT_CLASSIFICATION	1.0609640600732477E-4	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9995246953249883	WITHOUT_CLASSIFICATION	4.7530467501171744E-4	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999233115195129	WITHOUT_CLASSIFICATION	7.668848048712374E-5	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999467080884191	WITHOUT_CLASSIFICATION	5.3291911580898354E-5	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9998926969424012	WITHOUT_CLASSIFICATION	1.0730305759871195E-4	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9987125021760094	WITHOUT_CLASSIFICATION	0.0012874978239905467	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999968822303552	WITHOUT_CLASSIFICATION	3.117769644802006E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9997408751328937	WITHOUT_CLASSIFICATION	2.591248671063489E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9998405874437015	WITHOUT_CLASSIFICATION	1.5941255629833753E-4	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999195146074865	WITHOUT_CLASSIFICATION	8.048539251347103E-5	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999195146074865	WITHOUT_CLASSIFICATION	8.048539251347103E-5	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9998322914037701	WITHOUT_CLASSIFICATION	1.6770859622998796E-4	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9998322914037701	WITHOUT_CLASSIFICATION	1.6770859622998796E-4	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999727844583048	WITHOUT_CLASSIFICATION	2.721554169519387E-5	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.999852388718302	WITHOUT_CLASSIFICATION	1.476112816979807E-4	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.999852388718302	WITHOUT_CLASSIFICATION	1.476112816979807E-4	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.999852388718302	WITHOUT_CLASSIFICATION	1.476112816979807E-4	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9998089502167878	WITHOUT_CLASSIFICATION	1.910497832121446E-4	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9976654253018866	WITHOUT_CLASSIFICATION	0.0023345746981134094	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999766366477884	WITHOUT_CLASSIFICATION	2.3363352211648996E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9995938390373001	WITHOUT_CLASSIFICATION	4.061609626998574E-4	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9995938390373001	WITHOUT_CLASSIFICATION	4.061609626998574E-4	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9995259960740822	WITHOUT_CLASSIFICATION	4.740039259177697E-4	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9996876117081459	WITHOUT_CLASSIFICATION	3.1238829185406314E-4	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9996876117081459	WITHOUT_CLASSIFICATION	3.1238829185406314E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9998471015281202	WITHOUT_CLASSIFICATION	1.5289847187975332E-4	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.999969369784432	WITHOUT_CLASSIFICATION	3.063021556806405E-5	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.999969369784432	WITHOUT_CLASSIFICATION	3.063021556806405E-5	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999455607841166	WITHOUT_CLASSIFICATION	5.4439215883580637E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9995192780293435	WITHOUT_CLASSIFICATION	4.807219706565916E-4	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9997627971499657	WITHOUT_CLASSIFICATION	2.3720285003435592E-4	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9997981164452202	WITHOUT_CLASSIFICATION	2.0188355477986973E-4	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9996463277586803	WITHOUT_CLASSIFICATION	3.5367224131958787E-4	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9994423282198215	WITHOUT_CLASSIFICATION	5.576717801785524E-4	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9952667689108107	WITHOUT_CLASSIFICATION	0.004733231089189259	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999888990925891	WITHOUT_CLASSIFICATION	1.1100907410932437E-5	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.8599265882752344	WITHOUT_CLASSIFICATION	0.1400734117247656	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9997058966490617	WITHOUT_CLASSIFICATION	2.9410335093830884E-4	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9998955377304759	WITHOUT_CLASSIFICATION	1.044622695241268E-4	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9997812548842805	WITHOUT_CLASSIFICATION	2.1874511571948337E-4	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998634748104956	WITHOUT_CLASSIFICATION	1.3652518950424481E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999600298802577	WITHOUT_CLASSIFICATION	3.9970119742244256E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9995532933834369	WITHOUT_CLASSIFICATION	4.467066165631957E-4	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9995532933834369	WITHOUT_CLASSIFICATION	4.467066165631957E-4	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9975828956867903	WITHOUT_CLASSIFICATION	0.0024171043132097275	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9975828956867903	WITHOUT_CLASSIFICATION	0.0024171043132097275	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9975828956867903	WITHOUT_CLASSIFICATION	0.0024171043132097275	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9996960863374423	WITHOUT_CLASSIFICATION	3.0391366255757093E-4	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.5783212842643459	DEFECT	0.421678715735654	WITHOUT_CLASSIFICATION
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992984841126555	WITHOUT_CLASSIFICATION	7.015158873443778E-4	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999860922543035	WITHOUT_CLASSIFICATION	1.3907745696455875E-5	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9997580470187415	WITHOUT_CLASSIFICATION	2.4195298125844833E-4	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999930183203334	WITHOUT_CLASSIFICATION	6.981679666579456E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9992364790444932	WITHOUT_CLASSIFICATION	7.635209555067668E-4	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9992364790444932	WITHOUT_CLASSIFICATION	7.635209555067668E-4	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999822754791315	WITHOUT_CLASSIFICATION	1.7724520868436647E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999822754791315	WITHOUT_CLASSIFICATION	1.7724520868436647E-5	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9996628492430691	WITHOUT_CLASSIFICATION	3.371507569308637E-4	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9982291018983052	WITHOUT_CLASSIFICATION	0.0017708981016948712	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999403374144779	WITHOUT_CLASSIFICATION	5.966258552209988E-5	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999658445010864	WITHOUT_CLASSIFICATION	3.415549891365067E-5	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9967404934590043	WITHOUT_CLASSIFICATION	0.003259506540995707	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9999536249871337	WITHOUT_CLASSIFICATION	4.637501286622176E-5	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999594553101732	WITHOUT_CLASSIFICATION	4.054468982687114E-5	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9995385585584926	WITHOUT_CLASSIFICATION	4.6144144150740316E-4	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.999903150728781	WITHOUT_CLASSIFICATION	9.684927121897316E-5	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999854754963834	WITHOUT_CLASSIFICATION	1.4524503616684805E-5	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.9999983651744452	WITHOUT_CLASSIFICATION	1.6348255549299718E-6	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9979530075443116	WITHOUT_CLASSIFICATION	0.002046992455688426	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999589058988189	WITHOUT_CLASSIFICATION	4.1094101181197755E-5	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9973300013031136	WITHOUT_CLASSIFICATION	0.002669998696886354	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999461283039782	WITHOUT_CLASSIFICATION	5.3871696021848426E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999461283039782	WITHOUT_CLASSIFICATION	5.3871696021848426E-5	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999419854410698	WITHOUT_CLASSIFICATION	5.8014558930212305E-5	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9998441311780683	WITHOUT_CLASSIFICATION	1.5586882193184158E-4	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9997363709029238	WITHOUT_CLASSIFICATION	2.636290970761909E-4	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9996773836490078	WITHOUT_CLASSIFICATION	3.226163509921152E-4	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9996328631919714	WITHOUT_CLASSIFICATION	3.6713680802858724E-4	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999585843683252	WITHOUT_CLASSIFICATION	4.141563167485214E-5	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9997765957210748	WITHOUT_CLASSIFICATION	2.234042789252376E-4	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9992076636325605	WITHOUT_CLASSIFICATION	7.92336367439472E-4	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9992076636325605	WITHOUT_CLASSIFICATION	7.92336367439472E-4	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9992441794437787	WITHOUT_CLASSIFICATION	7.558205562212903E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9854396353950488	WITHOUT_CLASSIFICATION	0.014560364604951222	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9854396353950488	WITHOUT_CLASSIFICATION	0.014560364604951222	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9854396353950488	WITHOUT_CLASSIFICATION	0.014560364604951222	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9854396353950488	WITHOUT_CLASSIFICATION	0.014560364604951222	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9877484597371788	WITHOUT_CLASSIFICATION	0.012251540262821145	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999440623437704	WITHOUT_CLASSIFICATION	5.593765622950119E-5	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999440623437704	WITHOUT_CLASSIFICATION	5.593765622950119E-5	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9998353899045171	WITHOUT_CLASSIFICATION	1.6461009548291193E-4	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999857669450765	WITHOUT_CLASSIFICATION	1.4233054923426724E-5	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999902493836512	WITHOUT_CLASSIFICATION	9.75061634880428E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999859597005605	WITHOUT_CLASSIFICATION	1.4040299439457584E-5	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9995845607293348	WITHOUT_CLASSIFICATION	4.1543927066528443E-4	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9998444389426856	WITHOUT_CLASSIFICATION	1.5556105731428905E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9997969497430735	WITHOUT_CLASSIFICATION	2.0305025692658006E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9997969497430735	WITHOUT_CLASSIFICATION	2.0305025692658006E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9997969497430735	WITHOUT_CLASSIFICATION	2.0305025692658006E-4	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999462056017273	WITHOUT_CLASSIFICATION	5.379439827280656E-5	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999410222629388	WITHOUT_CLASSIFICATION	5.897773706121171E-5	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999448945594082	WITHOUT_CLASSIFICATION	5.510544059188658E-5	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999513776204234	WITHOUT_CLASSIFICATION	4.862237957663E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999791487635729	WITHOUT_CLASSIFICATION	2.0851236427128642E-5	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9998405093190639	WITHOUT_CLASSIFICATION	1.5949068093617694E-4	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999865501985036	WITHOUT_CLASSIFICATION	1.3449801496388904E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9998313346800484	WITHOUT_CLASSIFICATION	1.686653199515522E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9987485217958171	WITHOUT_CLASSIFICATION	0.0012514782041828845	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9987485217958171	WITHOUT_CLASSIFICATION	0.0012514782041828845	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.999933565976364	WITHOUT_CLASSIFICATION	6.643402363603555E-5	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.999933565976364	WITHOUT_CLASSIFICATION	6.643402363603555E-5	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.999933565976364	WITHOUT_CLASSIFICATION	6.643402363603555E-5	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.999933565976364	WITHOUT_CLASSIFICATION	6.643402363603555E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9993848922858264	WITHOUT_CLASSIFICATION	6.151077141737064E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9995341319582336	WITHOUT_CLASSIFICATION	4.6586804176651666E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9995341319582336	WITHOUT_CLASSIFICATION	4.6586804176651666E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9995341319582336	WITHOUT_CLASSIFICATION	4.6586804176651666E-4	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9997849401687925	WITHOUT_CLASSIFICATION	2.1505983120758237E-4	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9996878851128669	WITHOUT_CLASSIFICATION	3.1211488713317785E-4	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9999837409622403	WITHOUT_CLASSIFICATION	1.6259037759751988E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998783750507982	WITHOUT_CLASSIFICATION	1.2162494920167394E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998783750507982	WITHOUT_CLASSIFICATION	1.2162494920167394E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998783750507982	WITHOUT_CLASSIFICATION	1.2162494920167394E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998783750507982	WITHOUT_CLASSIFICATION	1.2162494920167394E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998783750507982	WITHOUT_CLASSIFICATION	1.2162494920167394E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998783750507982	WITHOUT_CLASSIFICATION	1.2162494920167394E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998783750507982	WITHOUT_CLASSIFICATION	1.2162494920167394E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998783750507982	WITHOUT_CLASSIFICATION	1.2162494920167394E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998783750507982	WITHOUT_CLASSIFICATION	1.2162494920167394E-4	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9998135447956787	WITHOUT_CLASSIFICATION	1.8645520432113247E-4	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9997533501517092	WITHOUT_CLASSIFICATION	2.466498482908125E-4	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9997533501517092	WITHOUT_CLASSIFICATION	2.466498482908125E-4	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.999776841414781	WITHOUT_CLASSIFICATION	2.2315858521906355E-4	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999300122383352	WITHOUT_CLASSIFICATION	6.998776166475444E-5	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999300122383352	WITHOUT_CLASSIFICATION	6.998776166475444E-5	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.999871229601649	WITHOUT_CLASSIFICATION	1.287703983510071E-4	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.999858416392261	WITHOUT_CLASSIFICATION	1.4158360773900127E-4	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9998889513046706	WITHOUT_CLASSIFICATION	1.1104869532938954E-4	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999546960103837	WITHOUT_CLASSIFICATION	4.530398961633543E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999546960103837	WITHOUT_CLASSIFICATION	4.530398961633543E-5	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9997204345129524	WITHOUT_CLASSIFICATION	2.795654870475598E-4	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9996180571088968	WITHOUT_CLASSIFICATION	3.819428911031891E-4	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9997411825959778	WITHOUT_CLASSIFICATION	2.588174040222201E-4	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999664454925431	WITHOUT_CLASSIFICATION	3.355450745697037E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999369325291079	WITHOUT_CLASSIFICATION	6.306747089212692E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999737791405316	WITHOUT_CLASSIFICATION	2.6220859468321026E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999960233130587	WITHOUT_CLASSIFICATION	3.9766869412996035E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997939282737343	WITHOUT_CLASSIFICATION	2.060717262656667E-4	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999742333622004	WITHOUT_CLASSIFICATION	2.57666377996551E-5	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999208834190688	WITHOUT_CLASSIFICATION	7.91165809311682E-5	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999161794884596	WITHOUT_CLASSIFICATION	8.382051154034191E-5	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9998371866068216	WITHOUT_CLASSIFICATION	1.6281339317828348E-4	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9998135447956787	WITHOUT_CLASSIFICATION	1.8645520432113247E-4	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9998949062177636	WITHOUT_CLASSIFICATION	1.050937822363366E-4	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9995721393186991	WITHOUT_CLASSIFICATION	4.2786068130089316E-4	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9995721393186991	WITHOUT_CLASSIFICATION	4.2786068130089316E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9994997113179147	WITHOUT_CLASSIFICATION	5.002886820853279E-4	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9996475229463766	WITHOUT_CLASSIFICATION	3.524770536234125E-4	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9995041671761575	WITHOUT_CLASSIFICATION	4.958328238424757E-4	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9996791446924274	WITHOUT_CLASSIFICATION	3.2085530757264405E-4	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9998578336336318	WITHOUT_CLASSIFICATION	1.421663663681466E-4	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9998517522198805	WITHOUT_CLASSIFICATION	1.4824778011949296E-4	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999627231663807	WITHOUT_CLASSIFICATION	3.727683361942033E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9998623992680342	WITHOUT_CLASSIFICATION	1.3760073196568648E-4	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9998623992680342	WITHOUT_CLASSIFICATION	1.3760073196568648E-4	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9998243683644864	WITHOUT_CLASSIFICATION	1.7563163551361814E-4	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999042726789383	WITHOUT_CLASSIFICATION	9.572732106170713E-5	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999042726789383	WITHOUT_CLASSIFICATION	9.572732106170713E-5	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999068042408483	WITHOUT_CLASSIFICATION	9.319575915169075E-5	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9998321709064568	WITHOUT_CLASSIFICATION	1.6782909354321002E-4	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9998191675237673	WITHOUT_CLASSIFICATION	1.8083247623275223E-4	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999363815661039	WITHOUT_CLASSIFICATION	6.361843389612498E-5	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999363815661039	WITHOUT_CLASSIFICATION	6.361843389612498E-5	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9998256021809012	WITHOUT_CLASSIFICATION	1.7439781909873178E-4	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9998256021809012	WITHOUT_CLASSIFICATION	1.7439781909873178E-4	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999632014251442	WITHOUT_CLASSIFICATION	3.679857485582539E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9988970927257838	WITHOUT_CLASSIFICATION	0.0011029072742162265	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999111166948529	WITHOUT_CLASSIFICATION	8.888330514713602E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999111166948529	WITHOUT_CLASSIFICATION	8.888330514713602E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9995077235645509	WITHOUT_CLASSIFICATION	4.9227643544908E-4	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999273595570685	WITHOUT_CLASSIFICATION	7.264044293152536E-5	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999066357837669	WITHOUT_CLASSIFICATION	9.336421623309837E-5	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999099288307087	WITHOUT_CLASSIFICATION	9.007116929119764E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999368972162427	WITHOUT_CLASSIFICATION	6.310278375733767E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999368972162427	WITHOUT_CLASSIFICATION	6.310278375733767E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999368972162427	WITHOUT_CLASSIFICATION	6.310278375733767E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999368972162427	WITHOUT_CLASSIFICATION	6.310278375733767E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999368972162427	WITHOUT_CLASSIFICATION	6.310278375733767E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999368972162427	WITHOUT_CLASSIFICATION	6.310278375733767E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999368972162427	WITHOUT_CLASSIFICATION	6.310278375733767E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999368972162427	WITHOUT_CLASSIFICATION	6.310278375733767E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999368972162427	WITHOUT_CLASSIFICATION	6.310278375733767E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999368972162427	WITHOUT_CLASSIFICATION	6.310278375733767E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999368972162427	WITHOUT_CLASSIFICATION	6.310278375733767E-5	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999279647037015	WITHOUT_CLASSIFICATION	7.203529629850873E-5	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999279647037015	WITHOUT_CLASSIFICATION	7.203529629850873E-5	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999279647037015	WITHOUT_CLASSIFICATION	7.203529629850873E-5	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999279647037015	WITHOUT_CLASSIFICATION	7.203529629850873E-5	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999279647037015	WITHOUT_CLASSIFICATION	7.203529629850873E-5	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999279647037015	WITHOUT_CLASSIFICATION	7.203529629850873E-5	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999279647037015	WITHOUT_CLASSIFICATION	7.203529629850873E-5	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999279647037015	WITHOUT_CLASSIFICATION	7.203529629850873E-5	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999279647037015	WITHOUT_CLASSIFICATION	7.203529629850873E-5	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999279647037015	WITHOUT_CLASSIFICATION	7.203529629850873E-5	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9998900902168724	WITHOUT_CLASSIFICATION	1.0990978312753523E-4	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999341419363077	WITHOUT_CLASSIFICATION	6.585806369234668E-5	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9998140692917378	WITHOUT_CLASSIFICATION	1.859307082622632E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999404807249476	WITHOUT_CLASSIFICATION	5.9519275052418745E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999404807249476	WITHOUT_CLASSIFICATION	5.9519275052418745E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999404807249476	WITHOUT_CLASSIFICATION	5.9519275052418745E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999404807249476	WITHOUT_CLASSIFICATION	5.9519275052418745E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999404807249476	WITHOUT_CLASSIFICATION	5.9519275052418745E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999404807249476	WITHOUT_CLASSIFICATION	5.9519275052418745E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999404807249476	WITHOUT_CLASSIFICATION	5.9519275052418745E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999738704379217	WITHOUT_CLASSIFICATION	2.6129562078258933E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999738704379217	WITHOUT_CLASSIFICATION	2.6129562078258933E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999738704379217	WITHOUT_CLASSIFICATION	2.6129562078258933E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999738704379217	WITHOUT_CLASSIFICATION	2.6129562078258933E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999738704379217	WITHOUT_CLASSIFICATION	2.6129562078258933E-5	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.999998568800732	WITHOUT_CLASSIFICATION	1.4311992680124732E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999909090469166	WITHOUT_CLASSIFICATION	9.090953083488412E-6	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9998421637336965	WITHOUT_CLASSIFICATION	1.5783626630353213E-4	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9998094709335338	WITHOUT_CLASSIFICATION	1.9052906646608843E-4	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999242473946618	WITHOUT_CLASSIFICATION	7.57526053381066E-5	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9996138668493295	WITHOUT_CLASSIFICATION	3.861331506704917E-4	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9998565809280735	WITHOUT_CLASSIFICATION	1.434190719264658E-4	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9998565809280735	WITHOUT_CLASSIFICATION	1.434190719264658E-4	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9997787442349989	WITHOUT_CLASSIFICATION	2.212557650012171E-4	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999560616748165	WITHOUT_CLASSIFICATION	4.393832518336591E-5	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9998150987563725	WITHOUT_CLASSIFICATION	1.8490124362750978E-4	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9990824550696157	WITHOUT_CLASSIFICATION	9.175449303842938E-4	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999521016396733	WITHOUT_CLASSIFICATION	4.789836032676271E-5	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9955730532675547	WITHOUT_CLASSIFICATION	0.004426946732445265	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999778034366651	WITHOUT_CLASSIFICATION	2.21965633348761E-5	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9998890042501293	WITHOUT_CLASSIFICATION	1.109957498707665E-4	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999560559907245	WITHOUT_CLASSIFICATION	4.394400927561753E-5	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999519781375712	WITHOUT_CLASSIFICATION	4.8021862428851065E-5	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9998826758973216	WITHOUT_CLASSIFICATION	1.1732410267844599E-4	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999153245482967	WITHOUT_CLASSIFICATION	8.467545170336236E-5	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.999789685183296	WITHOUT_CLASSIFICATION	2.1031481670387265E-4	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9998357192104214	WITHOUT_CLASSIFICATION	1.6428078957862334E-4	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9997394963903914	WITHOUT_CLASSIFICATION	2.60503609608662E-4	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9856555784822136	WITHOUT_CLASSIFICATION	0.014344421517786235	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9990345642498842	WITHOUT_CLASSIFICATION	9.654357501157751E-4	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9998092572111403	WITHOUT_CLASSIFICATION	1.9074278885964233E-4	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999644395391942	WITHOUT_CLASSIFICATION	3.55604608057329E-5	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999789979252469	WITHOUT_CLASSIFICATION	2.1002074753120713E-5	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999548847416757	WITHOUT_CLASSIFICATION	4.5115258324346435E-5	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999807109984159	WITHOUT_CLASSIFICATION	1.928900158401792E-5	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999698922257914	WITHOUT_CLASSIFICATION	3.0107774208719732E-5	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9996119479619173	WITHOUT_CLASSIFICATION	3.8805203808278747E-4	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999503726862408	WITHOUT_CLASSIFICATION	4.9627313759146686E-5	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999407675026489	WITHOUT_CLASSIFICATION	5.92324973511523E-5	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.999889364016368	WITHOUT_CLASSIFICATION	1.1063598363210398E-4	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999983646816752	WITHOUT_CLASSIFICATION	1.6353183248008718E-6	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.99992882690828	WITHOUT_CLASSIFICATION	7.117309172001912E-5	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.99988255932834	WITHOUT_CLASSIFICATION	1.1744067165998474E-4	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9996388955888386	WITHOUT_CLASSIFICATION	3.6110441116145526E-4	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9996388955888386	WITHOUT_CLASSIFICATION	3.6110441116145526E-4	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9994464040107159	WITHOUT_CLASSIFICATION	5.535959892839886E-4	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9994073154309523	WITHOUT_CLASSIFICATION	5.926845690477517E-4	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999913811601191	WITHOUT_CLASSIFICATION	8.618839880871791E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999913811601191	WITHOUT_CLASSIFICATION	8.618839880871791E-6	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9996579370712446	WITHOUT_CLASSIFICATION	3.420629287553748E-4	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999155599882809	WITHOUT_CLASSIFICATION	8.44400117192272E-5	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999155599882809	WITHOUT_CLASSIFICATION	8.44400117192272E-5	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999155599882809	WITHOUT_CLASSIFICATION	8.44400117192272E-5	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9994073154309523	WITHOUT_CLASSIFICATION	5.926845690477517E-4	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999616354739577	WITHOUT_CLASSIFICATION	3.836452604232802E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9998701384125018	WITHOUT_CLASSIFICATION	1.298615874980704E-4	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9994073154309523	WITHOUT_CLASSIFICATION	5.926845690477517E-4	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9994073154309523	WITHOUT_CLASSIFICATION	5.926845690477517E-4	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9994073154309523	WITHOUT_CLASSIFICATION	5.926845690477517E-4	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9996851954624708	WITHOUT_CLASSIFICATION	3.148045375292129E-4	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9997397437965709	WITHOUT_CLASSIFICATION	2.6025620342908006E-4	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999615819299937	WITHOUT_CLASSIFICATION	3.841807000621907E-5	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.99996429392078	WITHOUT_CLASSIFICATION	3.570607922003017E-5	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9997619321482569	WITHOUT_CLASSIFICATION	2.380678517430288E-4	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999526116523342	WITHOUT_CLASSIFICATION	4.738834766590222E-5	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999970526646188	WITHOUT_CLASSIFICATION	2.9473353812584467E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999526116523342	WITHOUT_CLASSIFICATION	4.738834766590222E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9998505926341472	WITHOUT_CLASSIFICATION	1.4940736585282658E-4	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.999726811973335	WITHOUT_CLASSIFICATION	2.7318802666498196E-4	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999526116523342	WITHOUT_CLASSIFICATION	4.738834766590222E-5	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999526116523342	WITHOUT_CLASSIFICATION	4.738834766590222E-5	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999567265707711	WITHOUT_CLASSIFICATION	4.327342922891859E-5	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999567265707711	WITHOUT_CLASSIFICATION	4.327342922891859E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999567265707711	WITHOUT_CLASSIFICATION	4.327342922891859E-5	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999048153051233	WITHOUT_CLASSIFICATION	9.518469487662616E-5	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999933088792452	WITHOUT_CLASSIFICATION	6.691120754810021E-6	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999851172540859	WITHOUT_CLASSIFICATION	1.4882745914082788E-5	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999090767958342	WITHOUT_CLASSIFICATION	9.092320416580102E-5	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9998384061319897	WITHOUT_CLASSIFICATION	1.6159386801019773E-4	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9998384061319897	WITHOUT_CLASSIFICATION	1.6159386801019773E-4	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9997406866477585	WITHOUT_CLASSIFICATION	2.593133522414023E-4	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9997019998494373	WITHOUT_CLASSIFICATION	2.980001505625924E-4	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9981350614322022	WITHOUT_CLASSIFICATION	0.001864938567797894	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999281782950997	WITHOUT_CLASSIFICATION	7.182170490028524E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999745567366357	WITHOUT_CLASSIFICATION	2.5443263364311076E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999745567366357	WITHOUT_CLASSIFICATION	2.5443263364311076E-5	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999745567366357	WITHOUT_CLASSIFICATION	2.5443263364311076E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999281782950997	WITHOUT_CLASSIFICATION	7.182170490028524E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999281782950997	WITHOUT_CLASSIFICATION	7.182170490028524E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999281782950997	WITHOUT_CLASSIFICATION	7.182170490028524E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999281782950997	WITHOUT_CLASSIFICATION	7.182170490028524E-5	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999281782950997	WITHOUT_CLASSIFICATION	7.182170490028524E-5	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9998691441222828	WITHOUT_CLASSIFICATION	1.308558777172471E-4	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999339099610821	WITHOUT_CLASSIFICATION	6.609003891788276E-5	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999293193803346	WITHOUT_CLASSIFICATION	7.068061966539942E-5	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999293193803346	WITHOUT_CLASSIFICATION	7.068061966539942E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999339099610821	WITHOUT_CLASSIFICATION	6.609003891788276E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999339099610821	WITHOUT_CLASSIFICATION	6.609003891788276E-5	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999339099610821	WITHOUT_CLASSIFICATION	6.609003891788276E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.99995170635945	WITHOUT_CLASSIFICATION	4.829364055004424E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.99995170635945	WITHOUT_CLASSIFICATION	4.829364055004424E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.99995170635945	WITHOUT_CLASSIFICATION	4.829364055004424E-5	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9955730532675547	WITHOUT_CLASSIFICATION	0.004426946732445265	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999339099610821	WITHOUT_CLASSIFICATION	6.609003891788276E-5	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.99995170635945	WITHOUT_CLASSIFICATION	4.829364055004424E-5	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9997903803563293	WITHOUT_CLASSIFICATION	2.0961964367081974E-4	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9997798397868628	WITHOUT_CLASSIFICATION	2.20160213137143E-4	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9997801246770011	WITHOUT_CLASSIFICATION	2.1987532299901509E-4	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9997921498666784	WITHOUT_CLASSIFICATION	2.078501333214667E-4	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9997977062973689	WITHOUT_CLASSIFICATION	2.0229370263118493E-4	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9998681908041953	WITHOUT_CLASSIFICATION	1.318091958046438E-4	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999506069954862	WITHOUT_CLASSIFICATION	4.939300451392193E-5	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999137460113388	WITHOUT_CLASSIFICATION	8.625398866130911E-5	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999697852362162	WITHOUT_CLASSIFICATION	3.0214763783842652E-5	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999697852362162	WITHOUT_CLASSIFICATION	3.0214763783842652E-5	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.999980897459997	WITHOUT_CLASSIFICATION	1.9102540003077486E-5	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.999980897459997	WITHOUT_CLASSIFICATION	1.9102540003077486E-5	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.999969706159532	WITHOUT_CLASSIFICATION	3.0293840467927736E-5	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.999969706159532	WITHOUT_CLASSIFICATION	3.0293840467927736E-5	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999697354792624	WITHOUT_CLASSIFICATION	3.026452073755816E-5	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9998059077391436	WITHOUT_CLASSIFICATION	1.9409226085630835E-4	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999846222419032	WITHOUT_CLASSIFICATION	1.537775809684079E-5	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9998543115369386	WITHOUT_CLASSIFICATION	1.4568846306131563E-4	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999089442012046	WITHOUT_CLASSIFICATION	9.105579879547115E-5	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9994930530225857	WITHOUT_CLASSIFICATION	5.069469774143694E-4	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.999635671897479	WITHOUT_CLASSIFICATION	3.64328102520873E-4	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.99996429392078	WITHOUT_CLASSIFICATION	3.570607922003017E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9997678107167727	WITHOUT_CLASSIFICATION	2.3218928322731532E-4	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999296998086028	WITHOUT_CLASSIFICATION	7.030019139719879E-5	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999771679841045	WITHOUT_CLASSIFICATION	2.283201589543931E-5	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999684243415365	WITHOUT_CLASSIFICATION	3.157565846346054E-5	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999684243415365	WITHOUT_CLASSIFICATION	3.157565846346054E-5	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9997092344085096	WITHOUT_CLASSIFICATION	2.9076559149041493E-4	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9998516926985777	WITHOUT_CLASSIFICATION	1.4830730142238141E-4	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9998506264653648	WITHOUT_CLASSIFICATION	1.4937353463511941E-4	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.99996278666941	WITHOUT_CLASSIFICATION	3.721333058997993E-5	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9998496385535245	WITHOUT_CLASSIFICATION	1.5036144647549395E-4	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.999878618234603	WITHOUT_CLASSIFICATION	1.213817653970739E-4	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9997911760034695	WITHOUT_CLASSIFICATION	2.0882399653064434E-4	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9997894915786567	WITHOUT_CLASSIFICATION	2.105084213433519E-4	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.999851435120707	WITHOUT_CLASSIFICATION	1.4856487929301436E-4	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9998656883444018	WITHOUT_CLASSIFICATION	1.3431165559814684E-4	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9997356136855097	WITHOUT_CLASSIFICATION	2.643863144902631E-4	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9979939751173179	WITHOUT_CLASSIFICATION	0.0020060248826820823	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9974345392628332	WITHOUT_CLASSIFICATION	0.0025654607371667646	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.99985418965292	WITHOUT_CLASSIFICATION	1.4581034708010192E-4	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9985818683321014	WITHOUT_CLASSIFICATION	0.0014181316678985977	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999776073168007	WITHOUT_CLASSIFICATION	2.2392683199192774E-5	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999776073168007	WITHOUT_CLASSIFICATION	2.2392683199192774E-5	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9994827187105659	WITHOUT_CLASSIFICATION	5.17281289434056E-4	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9994827187105659	WITHOUT_CLASSIFICATION	5.17281289434056E-4	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999429971443823	WITHOUT_CLASSIFICATION	5.7002855617804534E-5	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999429971443823	WITHOUT_CLASSIFICATION	5.7002855617804534E-5	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999359923282313	WITHOUT_CLASSIFICATION	6.400767176874739E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9997019998494373	WITHOUT_CLASSIFICATION	2.980001505625924E-4	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9963378743065738	WITHOUT_CLASSIFICATION	0.0036621256934262682	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9974949454692184	WITHOUT_CLASSIFICATION	0.0025050545307817485	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999565099073736	WITHOUT_CLASSIFICATION	4.349009262644366E-5	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999815519204416	WITHOUT_CLASSIFICATION	1.844807955837993E-5	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999776073168007	WITHOUT_CLASSIFICATION	2.2392683199192774E-5	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9998751638024899	WITHOUT_CLASSIFICATION	1.24836197510094E-4	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9989032868283486	WITHOUT_CLASSIFICATION	0.0010967131716514153	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999888328120313	WITHOUT_CLASSIFICATION	1.1167187968738317E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999493070596766	WITHOUT_CLASSIFICATION	5.06929403233572E-5	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9994827187105659	WITHOUT_CLASSIFICATION	5.17281289434056E-4	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999429971443823	WITHOUT_CLASSIFICATION	5.7002855617804534E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9997019998494373	WITHOUT_CLASSIFICATION	2.980001505625924E-4	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9998963768513188	WITHOUT_CLASSIFICATION	1.0362314868120928E-4	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999826919060227	WITHOUT_CLASSIFICATION	1.730809397732906E-5	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.999833727981064	WITHOUT_CLASSIFICATION	1.6627201893596092E-4	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9724953683037195	WITHOUT_CLASSIFICATION	0.02750463169628054	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9993683476059184	WITHOUT_CLASSIFICATION	6.31652394081527E-4	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9997124076974581	WITHOUT_CLASSIFICATION	2.875923025419167E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9789556260091967	WITHOUT_CLASSIFICATION	0.02104437399080325	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9996847600088763	WITHOUT_CLASSIFICATION	3.1523999112380226E-4	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9990684206304312	WITHOUT_CLASSIFICATION	9.315793695687546E-4	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9988173830806832	WITHOUT_CLASSIFICATION	0.0011826169193167356	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9988173830806832	WITHOUT_CLASSIFICATION	0.0011826169193167356	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9996406249588141	WITHOUT_CLASSIFICATION	3.5937504118597574E-4	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9996406249588141	WITHOUT_CLASSIFICATION	3.5937504118597574E-4	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999667582895555	WITHOUT_CLASSIFICATION	3.324171044453078E-5	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999667582895555	WITHOUT_CLASSIFICATION	3.324171044453078E-5	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9965442422862193	WITHOUT_CLASSIFICATION	0.003455757713780718	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9997679924498787	WITHOUT_CLASSIFICATION	2.3200755012136456E-4	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9998444066534182	WITHOUT_CLASSIFICATION	1.555933465817999E-4	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9940563468342775	WITHOUT_CLASSIFICATION	0.005943653165722505	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.999098155452521	WITHOUT_CLASSIFICATION	9.018445474790829E-4	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9997904312133348	WITHOUT_CLASSIFICATION	2.095687866652574E-4	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9998777289932136	WITHOUT_CLASSIFICATION	1.2227100678637042E-4	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9998777289932136	WITHOUT_CLASSIFICATION	1.2227100678637042E-4	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999342015050263	WITHOUT_CLASSIFICATION	6.579849497367328E-5	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999342015050263	WITHOUT_CLASSIFICATION	6.579849497367328E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.999993642500265	WITHOUT_CLASSIFICATION	6.357499735031262E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996453797535554	WITHOUT_CLASSIFICATION	3.546202464446158E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9998305579257375	WITHOUT_CLASSIFICATION	1.694420742625582E-4	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999796543134752	WITHOUT_CLASSIFICATION	2.0345686524840133E-5	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9986049454759881	WITHOUT_CLASSIFICATION	0.001395054524011908	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999685809047869	WITHOUT_CLASSIFICATION	3.14190952130392E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999517326359207	WITHOUT_CLASSIFICATION	4.82673640793509E-5	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996453797535554	WITHOUT_CLASSIFICATION	3.546202464446158E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9998305579257375	WITHOUT_CLASSIFICATION	1.694420742625582E-4	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999796543134752	WITHOUT_CLASSIFICATION	2.0345686524840133E-5	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9998040691892058	WITHOUT_CLASSIFICATION	1.9593081079426392E-4	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.999934308253025	WITHOUT_CLASSIFICATION	6.569174697496464E-5	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9988505880322144	WITHOUT_CLASSIFICATION	0.001149411967785677	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9997637735082366	WITHOUT_CLASSIFICATION	2.362264917633339E-4	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.999901575695862	WITHOUT_CLASSIFICATION	9.842430413806111E-5	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9988857534567815	WITHOUT_CLASSIFICATION	0.0011142465432184203	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999169978101025	WITHOUT_CLASSIFICATION	8.300218989753424E-5	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999823329950711	WITHOUT_CLASSIFICATION	1.7667004928811488E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9998390338179047	WITHOUT_CLASSIFICATION	1.6096618209522019E-4	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.999986241595758	WITHOUT_CLASSIFICATION	1.37584042419606E-5	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9997983816701711	WITHOUT_CLASSIFICATION	2.0161832982898366E-4	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9997983816701711	WITHOUT_CLASSIFICATION	2.0161832982898366E-4	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999064105444836	WITHOUT_CLASSIFICATION	9.358945551635443E-5	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999064105444836	WITHOUT_CLASSIFICATION	9.358945551635443E-5	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9998256041500863	WITHOUT_CLASSIFICATION	1.7439584991363064E-4	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9997448239463266	WITHOUT_CLASSIFICATION	2.5517605367336076E-4	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999499570804348	WITHOUT_CLASSIFICATION	5.004291956515174E-5	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9998850588311183	WITHOUT_CLASSIFICATION	1.14941168881726E-4	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9997448239463266	WITHOUT_CLASSIFICATION	2.5517605367336076E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9993683476059184	WITHOUT_CLASSIFICATION	6.31652394081527E-4	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9994538542398095	WITHOUT_CLASSIFICATION	5.461457601906005E-4	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999889445818129	WITHOUT_CLASSIFICATION	1.1055418187163309E-5	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.996947886260752	WITHOUT_CLASSIFICATION	0.0030521137392480325	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9998408235872192	WITHOUT_CLASSIFICATION	1.5917641278085347E-4	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9996708518844981	WITHOUT_CLASSIFICATION	3.291481155019463E-4	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9996708518844981	WITHOUT_CLASSIFICATION	3.291481155019463E-4	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9953796539212288	WITHOUT_CLASSIFICATION	0.004620346078771141	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9995538224195825	WITHOUT_CLASSIFICATION	4.4617758041747474E-4	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9962976452863427	WITHOUT_CLASSIFICATION	0.0037023547136572025	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9969108967240079	WITHOUT_CLASSIFICATION	0.0030891032759920965	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9998261969404677	WITHOUT_CLASSIFICATION	1.738030595322448E-4	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9998652287341224	WITHOUT_CLASSIFICATION	1.3477126587756557E-4	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9990476825089993	WITHOUT_CLASSIFICATION	9.523174910007361E-4	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9994707864952834	WITHOUT_CLASSIFICATION	5.292135047165525E-4	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9998130861753673	WITHOUT_CLASSIFICATION	1.8691382463264234E-4	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9998451587338185	WITHOUT_CLASSIFICATION	1.54841266181479E-4	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.999726811973335	WITHOUT_CLASSIFICATION	2.7318802666498196E-4	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9998653783867358	WITHOUT_CLASSIFICATION	1.34621613264135E-4	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9997282999049765	WITHOUT_CLASSIFICATION	2.7170009502351975E-4	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9998773426311791	WITHOUT_CLASSIFICATION	1.2265736882088939E-4	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9998626218824301	WITHOUT_CLASSIFICATION	1.3737811756986136E-4	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9997026765138306	WITHOUT_CLASSIFICATION	2.973234861694411E-4	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.999899547773928	WITHOUT_CLASSIFICATION	1.0045222607201002E-4	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9990710858449817	WITHOUT_CLASSIFICATION	9.289141550181204E-4	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9998593210650781	WITHOUT_CLASSIFICATION	1.406789349218173E-4	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.999590821075192	WITHOUT_CLASSIFICATION	4.0917892480795684E-4	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9992118973156486	WITHOUT_CLASSIFICATION	7.881026843513969E-4	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9998114815858735	WITHOUT_CLASSIFICATION	1.8851841412657438E-4	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9998773426311791	WITHOUT_CLASSIFICATION	1.2265736882088939E-4	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.9994482415469906	WITHOUT_CLASSIFICATION	5.517584530093393E-4	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9998626218824301	WITHOUT_CLASSIFICATION	1.3737811756986136E-4	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999704889998982	WITHOUT_CLASSIFICATION	2.9511000101846522E-5	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9997083175621427	WITHOUT_CLASSIFICATION	2.916824378572218E-4	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9997026765138306	WITHOUT_CLASSIFICATION	2.973234861694411E-4	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9990710858449817	WITHOUT_CLASSIFICATION	9.289141550181204E-4	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9981079038616634	WITHOUT_CLASSIFICATION	0.001892096138336742	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999811318804263	WITHOUT_CLASSIFICATION	1.886811957380579E-5	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999971947429726	WITHOUT_CLASSIFICATION	2.8052570273841796E-6	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999686213810138	WITHOUT_CLASSIFICATION	3.137861898608411E-5	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.999141933756475	WITHOUT_CLASSIFICATION	8.580662435249641E-4	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9991430666224881	WITHOUT_CLASSIFICATION	8.569333775118058E-4	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999777959297248	WITHOUT_CLASSIFICATION	2.2204070275213755E-5	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9940493220644093	WITHOUT_CLASSIFICATION	0.0059506779355906056	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9989050905779239	WITHOUT_CLASSIFICATION	0.0010949094220761573	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9998370698308489	WITHOUT_CLASSIFICATION	1.629301691511562E-4	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999449383507665	WITHOUT_CLASSIFICATION	5.506164923361943E-5	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999033875410543	WITHOUT_CLASSIFICATION	9.661245894571374E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999704889998982	WITHOUT_CLASSIFICATION	2.9511000101846522E-5	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9981079038616634	WITHOUT_CLASSIFICATION	0.001892096138336742	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9940493220644093	WITHOUT_CLASSIFICATION	0.0059506779355906056	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999350081419357	WITHOUT_CLASSIFICATION	6.499185806436356E-5	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999350081419357	WITHOUT_CLASSIFICATION	6.499185806436356E-5	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9998931321573788	WITHOUT_CLASSIFICATION	1.0686784262118457E-4	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9997137508950453	WITHOUT_CLASSIFICATION	2.8624910495461426E-4	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999498855463801	WITHOUT_CLASSIFICATION	5.011445361991653E-5	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999204929888416	WITHOUT_CLASSIFICATION	7.950701115844308E-5	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9994303684460702	WITHOUT_CLASSIFICATION	5.69631553929825E-4	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9979128993002576	WITHOUT_CLASSIFICATION	0.0020871006997423684	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9992191632000734	WITHOUT_CLASSIFICATION	7.808367999264974E-4	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9998819732074624	WITHOUT_CLASSIFICATION	1.1802679253759573E-4	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9998819732074624	WITHOUT_CLASSIFICATION	1.1802679253759573E-4	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9997985988612027	WITHOUT_CLASSIFICATION	2.014011387973936E-4	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999087547886683	WITHOUT_CLASSIFICATION	9.124521133176503E-5	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999740937834569	WITHOUT_CLASSIFICATION	2.5906216543058027E-5	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9996062284245727	WITHOUT_CLASSIFICATION	3.9377157542734825E-4	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9998597690147275	WITHOUT_CLASSIFICATION	1.4023098527249155E-4	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9998573201285844	WITHOUT_CLASSIFICATION	1.4267987141554968E-4	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9997896267433639	WITHOUT_CLASSIFICATION	2.1037325663613275E-4	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999894703809018	WITHOUT_CLASSIFICATION	1.0529619098174991E-5	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999894703809018	WITHOUT_CLASSIFICATION	1.0529619098174991E-5	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9972345017336265	WITHOUT_CLASSIFICATION	0.0027654982663735035	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9998745390262608	WITHOUT_CLASSIFICATION	1.2546097373926027E-4	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9998741157047354	WITHOUT_CLASSIFICATION	1.258842952646865E-4	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9997679924498787	WITHOUT_CLASSIFICATION	2.3200755012136456E-4	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.999993642500265	WITHOUT_CLASSIFICATION	6.357499735031262E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996453797535554	WITHOUT_CLASSIFICATION	3.546202464446158E-4	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9995139250171178	WITHOUT_CLASSIFICATION	4.8607498288222886E-4	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// years	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9998595603630218	WITHOUT_CLASSIFICATION	1.4043963697810258E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999364258628398	WITHOUT_CLASSIFICATION	6.357413716021276E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999456642279326	WITHOUT_CLASSIFICATION	5.43357720673812E-5	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9993624642056702	WITHOUT_CLASSIFICATION	6.375357943299262E-4	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9996626056450798	WITHOUT_CLASSIFICATION	3.373943549202279E-4	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9998355335942284	WITHOUT_CLASSIFICATION	1.6446640577165677E-4	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9965442422862193	WITHOUT_CLASSIFICATION	0.003455757713780718	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9990434588256653	WITHOUT_CLASSIFICATION	9.565411743348149E-4	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9990434588256653	WITHOUT_CLASSIFICATION	9.565411743348149E-4	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.999002049577376	WITHOUT_CLASSIFICATION	9.97950422624015E-4	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.999002049577376	WITHOUT_CLASSIFICATION	9.97950422624015E-4	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.8935564310571653	WITHOUT_CLASSIFICATION	0.10644356894283474	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9998687540856405	WITHOUT_CLASSIFICATION	1.3124591435962778E-4	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9997340619579466	WITHOUT_CLASSIFICATION	2.6593804205338764E-4	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9994964066707334	WITHOUT_CLASSIFICATION	5.035933292666481E-4	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9992300256424138	WITHOUT_CLASSIFICATION	7.699743575862137E-4	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9992300256424138	WITHOUT_CLASSIFICATION	7.699743575862137E-4	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9996894204006888	WITHOUT_CLASSIFICATION	3.105795993113001E-4	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9994827029854596	WITHOUT_CLASSIFICATION	5.172970145404176E-4	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.9999591200447224	WITHOUT_CLASSIFICATION	4.0879955277444455E-5	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9997904312133348	WITHOUT_CLASSIFICATION	2.095687866652574E-4	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999796543134752	WITHOUT_CLASSIFICATION	2.0345686524840133E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9998390338179047	WITHOUT_CLASSIFICATION	1.6096618209522019E-4	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.999936872766659	WITHOUT_CLASSIFICATION	6.3127233340994E-5	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9997680408713697	WITHOUT_CLASSIFICATION	2.3195912863022556E-4	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999893186216336	WITHOUT_CLASSIFICATION	1.0681378366331882E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998048071873348	WITHOUT_CLASSIFICATION	1.9519281266522522E-4	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998301997127462	WITHOUT_CLASSIFICATION	1.6980028725380408E-4	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996886667100588	WITHOUT_CLASSIFICATION	3.113332899411504E-4	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998905858829831	WITHOUT_CLASSIFICATION	1.0941411701697251E-4	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.999880576512874	WITHOUT_CLASSIFICATION	1.1942348712606305E-4	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.999985569816396	WITHOUT_CLASSIFICATION	1.443018360416781E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999266603322574	WITHOUT_CLASSIFICATION	7.33396677425177E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997516555360797	WITHOUT_CLASSIFICATION	2.4834446392028354E-4	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9996979893360153	WITHOUT_CLASSIFICATION	3.020106639847551E-4	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9998373032748984	WITHOUT_CLASSIFICATION	1.626967251016491E-4	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9998373032748984	WITHOUT_CLASSIFICATION	1.626967251016491E-4	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9997721791232579	WITHOUT_CLASSIFICATION	2.2782087674206916E-4	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999974956364613	WITHOUT_CLASSIFICATION	2.5043635387080494E-6	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999175888038861	WITHOUT_CLASSIFICATION	8.241119611383992E-5	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9998978219665395	WITHOUT_CLASSIFICATION	1.0217803346050819E-4	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9997709505011697	WITHOUT_CLASSIFICATION	2.290494988303945E-4	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9998951502643004	WITHOUT_CLASSIFICATION	1.0484973569955691E-4	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999204699261621	WITHOUT_CLASSIFICATION	7.953007383790377E-5	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9998951502643004	WITHOUT_CLASSIFICATION	1.0484973569955691E-4	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999159515692212	WITHOUT_CLASSIFICATION	8.404843077884142E-5	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9998359547608372	WITHOUT_CLASSIFICATION	1.6404523916271977E-4	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999204699261621	WITHOUT_CLASSIFICATION	7.953007383790377E-5	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.996272386453299	WITHOUT_CLASSIFICATION	0.003727613546701128	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9998990822926368	WITHOUT_CLASSIFICATION	1.0091770736320017E-4	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999269817610945	WITHOUT_CLASSIFICATION	7.301823890552762E-5	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999424326212004	WITHOUT_CLASSIFICATION	5.7567378799641786E-5	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9994895914974004	WITHOUT_CLASSIFICATION	5.104085025996928E-4	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9996782220243345	WITHOUT_CLASSIFICATION	3.217779756654429E-4	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9998435794528295	WITHOUT_CLASSIFICATION	1.5642054717055894E-4	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.999787072389642	WITHOUT_CLASSIFICATION	2.129276103580778E-4	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9997883304764903	WITHOUT_CLASSIFICATION	2.1166952350961432E-4	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999266231989107	WITHOUT_CLASSIFICATION	7.337680108927296E-5	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999266231989107	WITHOUT_CLASSIFICATION	7.337680108927296E-5	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9998957608982996	WITHOUT_CLASSIFICATION	1.0423910170045767E-4	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9996325832830729	WITHOUT_CLASSIFICATION	3.674167169271407E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9995087996408154	WITHOUT_CLASSIFICATION	4.912003591846264E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9995087996408154	WITHOUT_CLASSIFICATION	4.912003591846264E-4	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999517326359207	WITHOUT_CLASSIFICATION	4.82673640793509E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999517326359207	WITHOUT_CLASSIFICATION	4.82673640793509E-5	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9998094425235157	WITHOUT_CLASSIFICATION	1.905574764843363E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9993683476059184	WITHOUT_CLASSIFICATION	6.31652394081527E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9993683476059184	WITHOUT_CLASSIFICATION	6.31652394081527E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9724953683037195	WITHOUT_CLASSIFICATION	0.02750463169628054	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9789556260091967	WITHOUT_CLASSIFICATION	0.02104437399080325	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9997679924498787	WITHOUT_CLASSIFICATION	2.3200755012136456E-4	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9998687540856405	WITHOUT_CLASSIFICATION	1.3124591435962778E-4	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9995087996408154	WITHOUT_CLASSIFICATION	4.912003591846264E-4	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9995087996408154	WITHOUT_CLASSIFICATION	4.912003591846264E-4	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9998990822926368	WITHOUT_CLASSIFICATION	1.0091770736320017E-4	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.999881381938203	WITHOUT_CLASSIFICATION	1.186180617969727E-4	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9997822396890776	WITHOUT_CLASSIFICATION	2.1776031092246524E-4	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9998512559737225	WITHOUT_CLASSIFICATION	1.487440262775079E-4	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9996405632100827	WITHOUT_CLASSIFICATION	3.594367899173238E-4	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9995853080142892	WITHOUT_CLASSIFICATION	4.1469198571065466E-4	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9993446385348906	WITHOUT_CLASSIFICATION	6.553614651093271E-4	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9997466200106984	WITHOUT_CLASSIFICATION	2.533799893016049E-4	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9998760887803543	WITHOUT_CLASSIFICATION	1.2391121964571195E-4	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9997310251831045	WITHOUT_CLASSIFICATION	2.6897481689548903E-4	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999522287650522	WITHOUT_CLASSIFICATION	4.7771234947730495E-5	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9978285247044294	WITHOUT_CLASSIFICATION	0.0021714752955706135	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9998422334185547	WITHOUT_CLASSIFICATION	1.5776658144521616E-4	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9998422334185547	WITHOUT_CLASSIFICATION	1.5776658144521616E-4	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9989320537016712	WITHOUT_CLASSIFICATION	0.0010679462983288143	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9989320537016712	WITHOUT_CLASSIFICATION	0.0010679462983288143	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.999407908865307	WITHOUT_CLASSIFICATION	5.920911346930653E-4	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.999407908865307	WITHOUT_CLASSIFICATION	5.920911346930653E-4	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9998990822926368	WITHOUT_CLASSIFICATION	1.0091770736320017E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9724953683037195	WITHOUT_CLASSIFICATION	0.02750463169628054	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9789556260091967	WITHOUT_CLASSIFICATION	0.02104437399080325	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9965442422862193	WITHOUT_CLASSIFICATION	0.003455757713780718	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9997904312133348	WITHOUT_CLASSIFICATION	2.095687866652574E-4	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.999993642500265	WITHOUT_CLASSIFICATION	6.357499735031262E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996453797535554	WITHOUT_CLASSIFICATION	3.546202464446158E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999364258628398	WITHOUT_CLASSIFICATION	6.357413716021276E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999364258628398	WITHOUT_CLASSIFICATION	6.357413716021276E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999456642279326	WITHOUT_CLASSIFICATION	5.43357720673812E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999456642279326	WITHOUT_CLASSIFICATION	5.43357720673812E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999488364427557	WITHOUT_CLASSIFICATION	5.116355724424843E-5	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999763184457539	WITHOUT_CLASSIFICATION	2.3681554246140542E-5	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999187925835685	WITHOUT_CLASSIFICATION	8.120741643147037E-5	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999251620609984	WITHOUT_CLASSIFICATION	7.483793900160287E-5	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999251620609984	WITHOUT_CLASSIFICATION	7.483793900160287E-5	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9998135927378197	WITHOUT_CLASSIFICATION	1.8640726218028462E-4	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9988923151486025	WITHOUT_CLASSIFICATION	0.001107684851397428	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999420218196459	WITHOUT_CLASSIFICATION	5.797818035412853E-5	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9998251241433724	WITHOUT_CLASSIFICATION	1.748758566275355E-4	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999497852728201	WITHOUT_CLASSIFICATION	5.0214727180033424E-5	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9998757697876064	WITHOUT_CLASSIFICATION	1.2423021239362116E-4	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9998953329094414	WITHOUT_CLASSIFICATION	1.0466709055854893E-4	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9998953329094414	WITHOUT_CLASSIFICATION	1.0466709055854893E-4	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.999670532143469	WITHOUT_CLASSIFICATION	3.294678565310227E-4	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9997630760349047	WITHOUT_CLASSIFICATION	2.3692396509539132E-4	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999488364427557	WITHOUT_CLASSIFICATION	5.116355724424843E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999488364427557	WITHOUT_CLASSIFICATION	5.116355724424843E-5	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9949228634757933	WITHOUT_CLASSIFICATION	0.005077136524206763	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999251620609984	WITHOUT_CLASSIFICATION	7.483793900160287E-5	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999788217535761	WITHOUT_CLASSIFICATION	2.1178246423837546E-5	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999841127154361	WITHOUT_CLASSIFICATION	1.5887284563899248E-5	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999841127154361	WITHOUT_CLASSIFICATION	1.5887284563899248E-5	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9998135927378197	WITHOUT_CLASSIFICATION	1.8640726218028462E-4	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9998251241433724	WITHOUT_CLASSIFICATION	1.748758566275355E-4	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999401615667953	WITHOUT_CLASSIFICATION	5.983843320470436E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9996789185606183	WITHOUT_CLASSIFICATION	3.210814393815919E-4	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9994876076508207	WITHOUT_CLASSIFICATION	5.123923491794159E-4	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9994876076508207	WITHOUT_CLASSIFICATION	5.123923491794159E-4	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999506022242336	WITHOUT_CLASSIFICATION	4.9397775766353094E-5	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9979870208208442	WITHOUT_CLASSIFICATION	0.0020129791791558154	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9949228634757933	WITHOUT_CLASSIFICATION	0.005077136524206763	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9996109512138348	WITHOUT_CLASSIFICATION	3.8904878616523265E-4	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999796503737005	WITHOUT_CLASSIFICATION	2.0349626299485256E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999617134751331	WITHOUT_CLASSIFICATION	3.828652486703878E-5	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9937608179133206	WITHOUT_CLASSIFICATION	0.00623918208667944	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9998891684588866	WITHOUT_CLASSIFICATION	1.1083154111335035E-4	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999426681587442	WITHOUT_CLASSIFICATION	5.733184125567895E-5	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9998997325540954	WITHOUT_CLASSIFICATION	1.0026744590461082E-4	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9994839590862725	WITHOUT_CLASSIFICATION	5.160409137274524E-4	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9995295778989122	WITHOUT_CLASSIFICATION	4.7042210108772973E-4	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9996739257818887	WITHOUT_CLASSIFICATION	3.2607421811130683E-4	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9998693031446477	WITHOUT_CLASSIFICATION	1.3069685535239015E-4	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9996409733765153	WITHOUT_CLASSIFICATION	3.5902662348473094E-4	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9998474516928175	WITHOUT_CLASSIFICATION	1.5254830718243643E-4	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9995064124170776	WITHOUT_CLASSIFICATION	4.935875829222962E-4	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9987129266059976	WITHOUT_CLASSIFICATION	0.0012870733940023595	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9987129266059976	WITHOUT_CLASSIFICATION	0.0012870733940023595	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9987129266059976	WITHOUT_CLASSIFICATION	0.0012870733940023595	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.999270028301247	WITHOUT_CLASSIFICATION	7.299716987530446E-4	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.999270028301247	WITHOUT_CLASSIFICATION	7.299716987530446E-4	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999609630253817	WITHOUT_CLASSIFICATION	3.903697461832673E-5	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999387149126697	WITHOUT_CLASSIFICATION	6.128508733028243E-5	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999085502049179	WITHOUT_CLASSIFICATION	9.144979508209508E-5	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999572017616266	WITHOUT_CLASSIFICATION	4.2798238373358025E-5	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9993162828758622	WITHOUT_CLASSIFICATION	6.837171241378198E-4	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9995479116998625	WITHOUT_CLASSIFICATION	4.520883001374806E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999553155467464	WITHOUT_CLASSIFICATION	4.468445325350007E-5	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.999953616885786	WITHOUT_CLASSIFICATION	4.638311421404913E-5	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.998492570980046	WITHOUT_CLASSIFICATION	0.0015074290199540766	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9994298318025687	WITHOUT_CLASSIFICATION	5.701681974312804E-4	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9994298318025687	WITHOUT_CLASSIFICATION	5.701681974312804E-4	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999321008903449	WITHOUT_CLASSIFICATION	6.789910965505436E-5	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9995238566174295	WITHOUT_CLASSIFICATION	4.761433825704913E-4	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9997015256093756	WITHOUT_CLASSIFICATION	2.9847439062441884E-4	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999427331810996	WITHOUT_CLASSIFICATION	5.726681890040276E-5	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999427331810996	WITHOUT_CLASSIFICATION	5.726681890040276E-5	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999427331810996	WITHOUT_CLASSIFICATION	5.726681890040276E-5	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999663238276578	WITHOUT_CLASSIFICATION	3.36761723421442E-5	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9997524492490559	WITHOUT_CLASSIFICATION	2.475507509440541E-4	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999362540614907	WITHOUT_CLASSIFICATION	6.37459385094028E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.999971922641809	WITHOUT_CLASSIFICATION	2.8077358190939883E-5	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9974345392628332	WITHOUT_CLASSIFICATION	0.0025654607371667646	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.99985418965292	WITHOUT_CLASSIFICATION	1.4581034708010192E-4	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9937608179133206	WITHOUT_CLASSIFICATION	0.00623918208667944	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9998891684588866	WITHOUT_CLASSIFICATION	1.1083154111335035E-4	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9996739257818887	WITHOUT_CLASSIFICATION	3.2607421811130683E-4	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9998693031446477	WITHOUT_CLASSIFICATION	1.3069685535239015E-4	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9996409733765153	WITHOUT_CLASSIFICATION	3.5902662348473094E-4	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9998474516928175	WITHOUT_CLASSIFICATION	1.5254830718243643E-4	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9995064124170776	WITHOUT_CLASSIFICATION	4.935875829222962E-4	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999427331810996	WITHOUT_CLASSIFICATION	5.726681890040276E-5	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.999805118008361	WITHOUT_CLASSIFICATION	1.948819916389176E-4	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999104733620601	WITHOUT_CLASSIFICATION	8.952663793993702E-5	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9995945069901627	WITHOUT_CLASSIFICATION	4.054930098372316E-4	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.9921145822457005	WITHOUT_CLASSIFICATION	0.007885417754299524	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9936829141540469	WITHOUT_CLASSIFICATION	0.0063170858459532285	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9965187827507319	WITHOUT_CLASSIFICATION	0.0034812172492681413	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9995954840874061	WITHOUT_CLASSIFICATION	4.0451591259392316E-4	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999135478494905	WITHOUT_CLASSIFICATION	8.645215050954664E-5	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9974031539613178	WITHOUT_CLASSIFICATION	0.0025968460386822036	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9974031539613178	WITHOUT_CLASSIFICATION	0.0025968460386822036	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9996820771657368	WITHOUT_CLASSIFICATION	3.1792283426325234E-4	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9996820771657368	WITHOUT_CLASSIFICATION	3.1792283426325234E-4	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999703494348793	WITHOUT_CLASSIFICATION	2.9650565120786913E-5	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.999764856551684	WITHOUT_CLASSIFICATION	2.351434483159346E-4	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.999764856551684	WITHOUT_CLASSIFICATION	2.351434483159346E-4	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9998143817269488	WITHOUT_CLASSIFICATION	1.8561827305125063E-4	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9998143817269488	WITHOUT_CLASSIFICATION	1.8561827305125063E-4	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9998143817269488	WITHOUT_CLASSIFICATION	1.8561827305125063E-4	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9996119479619173	WITHOUT_CLASSIFICATION	3.8805203808278747E-4	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999983646816752	WITHOUT_CLASSIFICATION	1.6353183248008718E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999426681587442	WITHOUT_CLASSIFICATION	5.733184125567895E-5	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9998143817269488	WITHOUT_CLASSIFICATION	1.8561827305125063E-4	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999532375576593	WITHOUT_CLASSIFICATION	4.6762442340797445E-5	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9998279052452268	WITHOUT_CLASSIFICATION	1.720947547732642E-4	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9997957261534768	WITHOUT_CLASSIFICATION	2.0427384652322092E-4	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999828871121627	WITHOUT_CLASSIFICATION	1.711288783742569E-5	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9997928211070171	WITHOUT_CLASSIFICATION	2.0717889298290979E-4	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999579881891576	WITHOUT_CLASSIFICATION	4.201181084241863E-5	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999712808631349	WITHOUT_CLASSIFICATION	2.871913686513944E-5	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.999911641568445	WITHOUT_CLASSIFICATION	8.835843155490727E-5	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9995673297317365	WITHOUT_CLASSIFICATION	4.326702682635652E-4	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9995673297317365	WITHOUT_CLASSIFICATION	4.326702682635652E-4	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9996582946697051	WITHOUT_CLASSIFICATION	3.4170533029491125E-4	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9996582946697051	WITHOUT_CLASSIFICATION	3.4170533029491125E-4	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9996582946697051	WITHOUT_CLASSIFICATION	3.4170533029491125E-4	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9997811480869034	WITHOUT_CLASSIFICATION	2.1885191309651373E-4	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9997811480869034	WITHOUT_CLASSIFICATION	2.1885191309651373E-4	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.999855980859853	WITHOUT_CLASSIFICATION	1.440191401468408E-4	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.999855980859853	WITHOUT_CLASSIFICATION	1.440191401468408E-4	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9995673297317365	WITHOUT_CLASSIFICATION	4.326702682635652E-4	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9998757708731935	WITHOUT_CLASSIFICATION	1.2422912680652365E-4	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9998490192983127	WITHOUT_CLASSIFICATION	1.509807016872685E-4	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999497170064311	WITHOUT_CLASSIFICATION	5.0282993569019346E-5	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9994959115496951	WITHOUT_CLASSIFICATION	5.040884503049931E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9970802823370379	WITHOUT_CLASSIFICATION	0.0029197176629620534	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9997060714204242	WITHOUT_CLASSIFICATION	2.939285795758557E-4	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9998674871515812	WITHOUT_CLASSIFICATION	1.325128484187906E-4	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999361203925349	WITHOUT_CLASSIFICATION	6.387960746511099E-5	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9997901404321765	WITHOUT_CLASSIFICATION	2.0985956782351275E-4	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999142149399864	WITHOUT_CLASSIFICATION	8.578506001365452E-5	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9998729032519212	WITHOUT_CLASSIFICATION	1.2709674807879402E-4	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999521462142891	WITHOUT_CLASSIFICATION	4.785378571096252E-5	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.999946389949061	WITHOUT_CLASSIFICATION	5.361005093900622E-5	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.9997032945348595	WITHOUT_CLASSIFICATION	2.9670546514059127E-4	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999863210929761	WITHOUT_CLASSIFICATION	1.3678907023833775E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9998866624708079	WITHOUT_CLASSIFICATION	1.1333752919214806E-4	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9984891168826218	WITHOUT_CLASSIFICATION	0.0015108831173782631	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9994596827959124	WITHOUT_CLASSIFICATION	5.403172040876906E-4	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999080530120373	WITHOUT_CLASSIFICATION	9.194698796263172E-5	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999117725053167	WITHOUT_CLASSIFICATION	8.822749468339273E-5	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9995751661274103	WITHOUT_CLASSIFICATION	4.2483387258974726E-4	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999764882201648	WITHOUT_CLASSIFICATION	2.3511779835211274E-5	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999784413765129	WITHOUT_CLASSIFICATION	2.1558623487082122E-5	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999798649237889	WITHOUT_CLASSIFICATION	2.0135076211026638E-5	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999831976347809	WITHOUT_CLASSIFICATION	1.6802365219117643E-5	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9916216015749811	WITHOUT_CLASSIFICATION	0.008378398425018788	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999231517226154	WITHOUT_CLASSIFICATION	7.684827738465353E-5	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9998691457278346	WITHOUT_CLASSIFICATION	1.3085427216548017E-4	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9997150352411692	WITHOUT_CLASSIFICATION	2.849647588307136E-4	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9998826134191254	WITHOUT_CLASSIFICATION	1.1738658087461153E-4	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9996746600356492	WITHOUT_CLASSIFICATION	3.253399643508143E-4	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999569209821347	WITHOUT_CLASSIFICATION	4.307901786523482E-5	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9987587893467108	WITHOUT_CLASSIFICATION	0.0012412106532891257	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9998467327213398	WITHOUT_CLASSIFICATION	1.5326727866010772E-4	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.999650807002631	WITHOUT_CLASSIFICATION	3.4919299736904316E-4	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9991934199944437	WITHOUT_CLASSIFICATION	8.0658000555626E-4	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9977425062681115	WITHOUT_CLASSIFICATION	0.0022574937318885742	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9992022067079974	WITHOUT_CLASSIFICATION	7.977932920026235E-4	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9997611233266834	WITHOUT_CLASSIFICATION	2.3887667331658912E-4	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9990545422162747	WITHOUT_CLASSIFICATION	9.454577837253712E-4	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9993796870670009	WITHOUT_CLASSIFICATION	6.203129329991899E-4	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9998937528858121	WITHOUT_CLASSIFICATION	1.0624711418798998E-4	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9992214196517522	WITHOUT_CLASSIFICATION	7.785803482478856E-4	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9998603800992255	WITHOUT_CLASSIFICATION	1.3961990077447167E-4	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9991342208483841	WITHOUT_CLASSIFICATION	8.657791516158828E-4	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9987860720372974	WITHOUT_CLASSIFICATION	0.0012139279627025026	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9997919761859372	WITHOUT_CLASSIFICATION	2.080238140628338E-4	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.998004212982226	WITHOUT_CLASSIFICATION	0.001995787017774002	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999594276573571	WITHOUT_CLASSIFICATION	4.057234264296794E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999983777957062	WITHOUT_CLASSIFICATION	1.6222042938484461E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999118215494052	WITHOUT_CLASSIFICATION	8.817845059483913E-5	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999332471182172	WITHOUT_CLASSIFICATION	6.675288178281154E-5	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999332471182172	WITHOUT_CLASSIFICATION	6.675288178281154E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999968822303552	WITHOUT_CLASSIFICATION	3.117769644802006E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999247154175323	WITHOUT_CLASSIFICATION	7.528458246764566E-5	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9990589315383704	WITHOUT_CLASSIFICATION	9.410684616295866E-4	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.999936175769429	WITHOUT_CLASSIFICATION	6.382423057112296E-5	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999355115486838	WITHOUT_CLASSIFICATION	6.448845131618262E-5	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9998833588284146	WITHOUT_CLASSIFICATION	1.1664117158533311E-4	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9998846899475805	WITHOUT_CLASSIFICATION	1.1531005241954787E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9998405874437015	WITHOUT_CLASSIFICATION	1.5941255629833753E-4	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9994959115496951	WITHOUT_CLASSIFICATION	5.040884503049931E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9998405874437015	WITHOUT_CLASSIFICATION	1.5941255629833753E-4	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9996507785582377	WITHOUT_CLASSIFICATION	3.49221441762319E-4	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999358077300542	WITHOUT_CLASSIFICATION	6.419226994582256E-5	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9998513227177453	WITHOUT_CLASSIFICATION	1.4867728225467433E-4	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999360977207955	WITHOUT_CLASSIFICATION	6.390227920448698E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9997497379292104	WITHOUT_CLASSIFICATION	2.502620707895938E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999105101084877	WITHOUT_CLASSIFICATION	8.948989151224213E-5	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999834645125558	WITHOUT_CLASSIFICATION	1.653548744416981E-5	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.999983273610694	WITHOUT_CLASSIFICATION	1.672638930607958E-5	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.999795454824735	WITHOUT_CLASSIFICATION	2.0454517526499857E-4	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9998866624708079	WITHOUT_CLASSIFICATION	1.1333752919214806E-4	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9998939035939927	WITHOUT_CLASSIFICATION	1.0609640600732477E-4	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999983777957062	WITHOUT_CLASSIFICATION	1.6222042938484461E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999118215494052	WITHOUT_CLASSIFICATION	8.817845059483913E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9997408751328937	WITHOUT_CLASSIFICATION	2.591248671063489E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999105101084877	WITHOUT_CLASSIFICATION	8.948989151224213E-5	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999834645125558	WITHOUT_CLASSIFICATION	1.653548744416981E-5	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.999983273610694	WITHOUT_CLASSIFICATION	1.672638930607958E-5	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999947072938237	WITHOUT_CLASSIFICATION	5.292706176299721E-5	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.999772380462789	WITHOUT_CLASSIFICATION	2.276195372109309E-4	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.999772380462789	WITHOUT_CLASSIFICATION	2.276195372109309E-4	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9994367660678757	WITHOUT_CLASSIFICATION	5.632339321242642E-4	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9998829675033332	WITHOUT_CLASSIFICATION	1.1703249666689526E-4	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999184100834753	WITHOUT_CLASSIFICATION	8.158991652476213E-5	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9997865465114386	WITHOUT_CLASSIFICATION	2.1345348856150313E-4	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.999721382724486	WITHOUT_CLASSIFICATION	2.7861727551400077E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9970802823370379	WITHOUT_CLASSIFICATION	0.0029197176629620534	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999361203925349	WITHOUT_CLASSIFICATION	6.387960746511099E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999361203925349	WITHOUT_CLASSIFICATION	6.387960746511099E-5	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999745702105396	WITHOUT_CLASSIFICATION	2.5429789460385156E-5	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9997901404321765	WITHOUT_CLASSIFICATION	2.0985956782351275E-4	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999142149399864	WITHOUT_CLASSIFICATION	8.578506001365452E-5	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9998729032519212	WITHOUT_CLASSIFICATION	1.2709674807879402E-4	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999521462142891	WITHOUT_CLASSIFICATION	4.785378571096252E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999594276573571	WITHOUT_CLASSIFICATION	4.057234264296794E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999983777957062	WITHOUT_CLASSIFICATION	1.6222042938484461E-6	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999247154175323	WITHOUT_CLASSIFICATION	7.528458246764566E-5	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999465144194983	WITHOUT_CLASSIFICATION	5.3485580501641155E-5	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999195146074865	WITHOUT_CLASSIFICATION	8.048539251347103E-5	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.999946389949061	WITHOUT_CLASSIFICATION	5.361005093900622E-5	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9990814845469199	WITHOUT_CLASSIFICATION	9.185154530800557E-4	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9998605072727856	WITHOUT_CLASSIFICATION	1.3949272721430734E-4	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9997901404321765	WITHOUT_CLASSIFICATION	2.0985956782351275E-4	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9996677480706694	WITHOUT_CLASSIFICATION	3.322519293306693E-4	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9996677480706694	WITHOUT_CLASSIFICATION	3.322519293306693E-4	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9998755554743194	WITHOUT_CLASSIFICATION	1.2444452568059959E-4	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.999413459989305	WITHOUT_CLASSIFICATION	5.865400106950653E-4	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999169978101025	WITHOUT_CLASSIFICATION	8.300218989753424E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999436136981642	WITHOUT_CLASSIFICATION	5.6386301835823905E-5	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999745702105396	WITHOUT_CLASSIFICATION	2.5429789460385156E-5	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9998729032519212	WITHOUT_CLASSIFICATION	1.2709674807879402E-4	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999521462142891	WITHOUT_CLASSIFICATION	4.785378571096252E-5	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.999946389949061	WITHOUT_CLASSIFICATION	5.361005093900622E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9998866624708079	WITHOUT_CLASSIFICATION	1.1333752919214806E-4	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999594276573571	WITHOUT_CLASSIFICATION	4.057234264296794E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999983777957062	WITHOUT_CLASSIFICATION	1.6222042938484461E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999118215494052	WITHOUT_CLASSIFICATION	8.817845059483913E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9998405874437015	WITHOUT_CLASSIFICATION	1.5941255629833753E-4	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999195146074865	WITHOUT_CLASSIFICATION	8.048539251347103E-5	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9993792686220172	WITHOUT_CLASSIFICATION	6.207313779828746E-4	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9993792686220172	WITHOUT_CLASSIFICATION	6.207313779828746E-4	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.999865931331184	WITHOUT_CLASSIFICATION	1.340686688160413E-4	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9998322914037701	WITHOUT_CLASSIFICATION	1.6770859622998796E-4	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999603937493183	WITHOUT_CLASSIFICATION	3.960625068162078E-5	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999603937493183	WITHOUT_CLASSIFICATION	3.960625068162078E-5	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999727844583048	WITHOUT_CLASSIFICATION	2.721554169519387E-5	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999727844583048	WITHOUT_CLASSIFICATION	2.721554169519387E-5	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.999852388718302	WITHOUT_CLASSIFICATION	1.476112816979807E-4	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.999852388718302	WITHOUT_CLASSIFICATION	1.476112816979807E-4	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.999852388718302	WITHOUT_CLASSIFICATION	1.476112816979807E-4	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999579258354218	WITHOUT_CLASSIFICATION	4.207416457833869E-5	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9997909862428968	WITHOUT_CLASSIFICATION	2.090137571032585E-4	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9984891168826218	WITHOUT_CLASSIFICATION	0.0015108831173782631	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9994959115496951	WITHOUT_CLASSIFICATION	5.040884503049931E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9970802823370379	WITHOUT_CLASSIFICATION	0.0029197176629620534	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999361203925349	WITHOUT_CLASSIFICATION	6.387960746511099E-5	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9997901404321765	WITHOUT_CLASSIFICATION	2.0985956782351275E-4	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999117725053167	WITHOUT_CLASSIFICATION	8.822749468339273E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999594276573571	WITHOUT_CLASSIFICATION	4.057234264296794E-5	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9994367660678757	WITHOUT_CLASSIFICATION	5.632339321242642E-4	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999436136981642	WITHOUT_CLASSIFICATION	5.6386301835823905E-5	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9998883642795703	WITHOUT_CLASSIFICATION	1.116357204297066E-4	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9976654253018866	WITHOUT_CLASSIFICATION	0.0023345746981134094	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9998834840991019	WITHOUT_CLASSIFICATION	1.1651590089816715E-4	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999326936632504	WITHOUT_CLASSIFICATION	6.730633674959424E-5	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999210091665389	WITHOUT_CLASSIFICATION	7.899083346112457E-5	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999635930266493	WITHOUT_CLASSIFICATION	3.640697335075785E-5	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9995439734191798	WITHOUT_CLASSIFICATION	4.5602658082020687E-4	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999761301970024	WITHOUT_CLASSIFICATION	2.3869802997584172E-5	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9994654553216054	WITHOUT_CLASSIFICATION	5.345446783946675E-4	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9997787204550029	WITHOUT_CLASSIFICATION	2.2127954499706008E-4	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999648469884104	WITHOUT_CLASSIFICATION	3.5153011589593516E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9998729032519212	WITHOUT_CLASSIFICATION	1.2709674807879402E-4	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999521462142891	WITHOUT_CLASSIFICATION	4.785378571096252E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999594276573571	WITHOUT_CLASSIFICATION	4.057234264296794E-5	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999983777957062	WITHOUT_CLASSIFICATION	1.6222042938484461E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9998405874437015	WITHOUT_CLASSIFICATION	1.5941255629833753E-4	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999195146074865	WITHOUT_CLASSIFICATION	8.048539251347103E-5	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.999946389949061	WITHOUT_CLASSIFICATION	5.361005093900622E-5	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9998605072727856	WITHOUT_CLASSIFICATION	1.3949272721430734E-4	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9997901404321765	WITHOUT_CLASSIFICATION	2.0985956782351275E-4	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9998405874437015	WITHOUT_CLASSIFICATION	1.5941255629833753E-4	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999279060519554	WITHOUT_CLASSIFICATION	7.209394804456961E-5	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999020293103054	WITHOUT_CLASSIFICATION	9.797068969459504E-5	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999049615691655	WITHOUT_CLASSIFICATION	9.503843083447352E-5	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9994563948838533	WITHOUT_CLASSIFICATION	5.43605116146655E-4	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.999175480018954	WITHOUT_CLASSIFICATION	8.245199810460148E-4	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9996778066664627	WITHOUT_CLASSIFICATION	3.221933335372831E-4	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9998296080936642	WITHOUT_CLASSIFICATION	1.703919063358246E-4	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.999922681551951	WITHOUT_CLASSIFICATION	7.731844804908448E-5	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.9977710027622666	WITHOUT_CLASSIFICATION	0.0022289972377334756	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9973808856328293	WITHOUT_CLASSIFICATION	0.0026191143671707127	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9925735611392638	WITHOUT_CLASSIFICATION	0.007426438860736121	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.8698128348020379	WITHOUT_CLASSIFICATION	0.13018716519796214	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.999759353274664	WITHOUT_CLASSIFICATION	2.4064672533596592E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999142149399864	WITHOUT_CLASSIFICATION	8.578506001365452E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999118215494052	WITHOUT_CLASSIFICATION	8.817845059483913E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999968822303552	WITHOUT_CLASSIFICATION	3.117769644802006E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999247154175323	WITHOUT_CLASSIFICATION	7.528458246764566E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9997901404321765	WITHOUT_CLASSIFICATION	2.0985956782351275E-4	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9998985254630626	WITHOUT_CLASSIFICATION	1.0147453693736197E-4	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9995162102708267	WITHOUT_CLASSIFICATION	4.837897291732103E-4	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999097188233822	WITHOUT_CLASSIFICATION	9.028117661780638E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999097188233822	WITHOUT_CLASSIFICATION	9.028117661780638E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999529907371618	WITHOUT_CLASSIFICATION	4.700926283825642E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999529907371618	WITHOUT_CLASSIFICATION	4.700926283825642E-5	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9998483925177355	WITHOUT_CLASSIFICATION	1.516074822644525E-4	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9799495302902401	WITHOUT_CLASSIFICATION	0.020050469709759818	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9995360293963822	WITHOUT_CLASSIFICATION	4.639706036177653E-4	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.999902878720346	WITHOUT_CLASSIFICATION	9.712127965396896E-5	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999255968561682	WITHOUT_CLASSIFICATION	7.44031438317636E-5	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999212508454689	WITHOUT_CLASSIFICATION	7.874915453106069E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999385959527242	WITHOUT_CLASSIFICATION	6.14040472758385E-5	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999429350617747	WITHOUT_CLASSIFICATION	5.7064938225328206E-5	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999862403428098	WITHOUT_CLASSIFICATION	1.3759657190143457E-5	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999564978829827	WITHOUT_CLASSIFICATION	4.350211701738071E-5	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9983545679592085	WITHOUT_CLASSIFICATION	0.0016454320407915002	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9997252140860948	WITHOUT_CLASSIFICATION	2.7478591390512567E-4	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9980702743947675	WITHOUT_CLASSIFICATION	0.0019297256052324843	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.999736412632833	WITHOUT_CLASSIFICATION	2.6358736716702364E-4	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999029804391054	WITHOUT_CLASSIFICATION	9.701956089460633E-5	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.999635671897479	WITHOUT_CLASSIFICATION	3.64328102520873E-4	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9998498931701433	WITHOUT_CLASSIFICATION	1.5010682985668706E-4	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.999847994063854	WITHOUT_CLASSIFICATION	1.5200593614586957E-4	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9998830070884961	WITHOUT_CLASSIFICATION	1.1699291150389938E-4	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999260317532955	WITHOUT_CLASSIFICATION	7.396824670451316E-5	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999506417649401	WITHOUT_CLASSIFICATION	4.935823505987089E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9998178002494673	WITHOUT_CLASSIFICATION	1.8219975053256526E-4	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9998848022572564	WITHOUT_CLASSIFICATION	1.1519774274360387E-4	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999573902267735	WITHOUT_CLASSIFICATION	4.260977322642055E-5	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999516516953549	WITHOUT_CLASSIFICATION	4.8348304645057755E-5	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999343453411658	WITHOUT_CLASSIFICATION	6.56546588342301E-5	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999210091665389	WITHOUT_CLASSIFICATION	7.899083346112457E-5	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999378681441465	WITHOUT_CLASSIFICATION	6.213185585345068E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999427386125916	WITHOUT_CLASSIFICATION	5.726138740835519E-5	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9998888594045691	WITHOUT_CLASSIFICATION	1.1114059543095813E-4	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9986195029753914	WITHOUT_CLASSIFICATION	0.00138049702460869	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9995045439998418	WITHOUT_CLASSIFICATION	4.954560001581381E-4	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9995938390373001	WITHOUT_CLASSIFICATION	4.061609626998574E-4	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.999988294047809	WITHOUT_CLASSIFICATION	1.1705952191046106E-5	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9998733658277323	WITHOUT_CLASSIFICATION	1.2663417226758294E-4	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999893361880335	WITHOUT_CLASSIFICATION	1.0663811966404578E-5	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999780766796286	WITHOUT_CLASSIFICATION	2.1923320371471285E-5	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9981466772716997	WITHOUT_CLASSIFICATION	0.00185332272830032	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9993279290550353	WITHOUT_CLASSIFICATION	6.720709449646125E-4	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999673808487047	WITHOUT_CLASSIFICATION	3.261915129532772E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999118215494052	WITHOUT_CLASSIFICATION	8.817845059483913E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999968822303552	WITHOUT_CLASSIFICATION	3.117769644802006E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999247154175323	WITHOUT_CLASSIFICATION	7.528458246764566E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9995162102708267	WITHOUT_CLASSIFICATION	4.837897291732103E-4	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9997901404321765	WITHOUT_CLASSIFICATION	2.0985956782351275E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.999971922641809	WITHOUT_CLASSIFICATION	2.8077358190939883E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999097188233822	WITHOUT_CLASSIFICATION	9.028117661780638E-5	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9997260531874687	WITHOUT_CLASSIFICATION	2.7394681253138577E-4	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999529907371618	WITHOUT_CLASSIFICATION	4.700926283825642E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999427386125916	WITHOUT_CLASSIFICATION	5.726138740835519E-5	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9998888594045691	WITHOUT_CLASSIFICATION	1.1114059543095813E-4	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999567265707711	WITHOUT_CLASSIFICATION	4.327342922891859E-5	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9995259960740822	WITHOUT_CLASSIFICATION	4.740039259177697E-4	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999916152517911	WITHOUT_CLASSIFICATION	8.384748208797241E-6	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9998803917185266	WITHOUT_CLASSIFICATION	1.1960828147338401E-4	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9998820232967001	WITHOUT_CLASSIFICATION	1.179767032999162E-4	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9998892680848508	WITHOUT_CLASSIFICATION	1.1073191514921523E-4	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9996412948307205	WITHOUT_CLASSIFICATION	3.5870516927941185E-4	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999017276049268	WITHOUT_CLASSIFICATION	9.827239507320603E-5	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999210713244244	WITHOUT_CLASSIFICATION	7.892867557564838E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9988330734884936	WITHOUT_CLASSIFICATION	0.0011669265115063841	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9995108476538217	WITHOUT_CLASSIFICATION	4.891523461784193E-4	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9992136032056497	WITHOUT_CLASSIFICATION	7.863967943503052E-4	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999143714667316	WITHOUT_CLASSIFICATION	8.562853326848227E-5	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999099804384973	WITHOUT_CLASSIFICATION	9.001956150272739E-5	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999133829561726	WITHOUT_CLASSIFICATION	8.661704382747346E-5	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9998866624708079	WITHOUT_CLASSIFICATION	1.1333752919214806E-4	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9998939035939927	WITHOUT_CLASSIFICATION	1.0609640600732477E-4	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999983777957062	WITHOUT_CLASSIFICATION	1.6222042938484461E-6	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9998605072727856	WITHOUT_CLASSIFICATION	1.3949272721430734E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9998471015281202	WITHOUT_CLASSIFICATION	1.5289847187975332E-4	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999777991983992	WITHOUT_CLASSIFICATION	2.2200801600762826E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9998471015281202	WITHOUT_CLASSIFICATION	1.5289847187975332E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9998471015281202	WITHOUT_CLASSIFICATION	1.5289847187975332E-4	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999777991983992	WITHOUT_CLASSIFICATION	2.2200801600762826E-5	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999777991983992	WITHOUT_CLASSIFICATION	2.2200801600762826E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9988187930381035	WITHOUT_CLASSIFICATION	0.0011812069618964557	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999275138213963	WITHOUT_CLASSIFICATION	7.24861786036899E-5	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9995246869577087	WITHOUT_CLASSIFICATION	4.7531304229137894E-4	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9998962418758695	WITHOUT_CLASSIFICATION	1.037581241306118E-4	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999599054796992	WITHOUT_CLASSIFICATION	4.00945203008915E-5	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9995395842619396	WITHOUT_CLASSIFICATION	4.6041573806034905E-4	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9998929941933388	WITHOUT_CLASSIFICATION	1.0700580666123713E-4	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.9991846050776032	WITHOUT_CLASSIFICATION	8.153949223968799E-4	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9984212475578468	WITHOUT_CLASSIFICATION	0.0015787524421533134	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9998770382161462	WITHOUT_CLASSIFICATION	1.2296178385388834E-4	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9998191995667598	WITHOUT_CLASSIFICATION	1.8080043324019608E-4	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9998921228614137	WITHOUT_CLASSIFICATION	1.078771385863142E-4	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9998418124695797	WITHOUT_CLASSIFICATION	1.5818753042026916E-4	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9937608179133206	WITHOUT_CLASSIFICATION	0.00623918208667944	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9998866624708079	WITHOUT_CLASSIFICATION	1.1333752919214806E-4	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999118215494052	WITHOUT_CLASSIFICATION	8.817845059483913E-5	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999332471182172	WITHOUT_CLASSIFICATION	6.675288178281154E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.999968822303552	WITHOUT_CLASSIFICATION	3.117769644802006E-5	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999247154175323	WITHOUT_CLASSIFICATION	7.528458246764566E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9995162102708267	WITHOUT_CLASSIFICATION	4.837897291732103E-4	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999947072938237	WITHOUT_CLASSIFICATION	5.292706176299721E-5	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9994367660678757	WITHOUT_CLASSIFICATION	5.632339321242642E-4	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9997901404321765	WITHOUT_CLASSIFICATION	2.0985956782351275E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999097188233822	WITHOUT_CLASSIFICATION	9.028117661780638E-5	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999097188233822	WITHOUT_CLASSIFICATION	9.028117661780638E-5	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9997260531874687	WITHOUT_CLASSIFICATION	2.7394681253138577E-4	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.999902878720346	WITHOUT_CLASSIFICATION	9.712127965396896E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999385959527242	WITHOUT_CLASSIFICATION	6.14040472758385E-5	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9998820232967001	WITHOUT_CLASSIFICATION	1.179767032999162E-4	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9998078734896361	WITHOUT_CLASSIFICATION	1.921265103638652E-4	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9991387282755635	WITHOUT_CLASSIFICATION	8.612717244366424E-4	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999506228673336	WITHOUT_CLASSIFICATION	4.937713266639475E-5	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9998645835775148	WITHOUT_CLASSIFICATION	1.3541642248517642E-4	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999252651420388	WITHOUT_CLASSIFICATION	7.473485796108105E-5	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9996429182573997	WITHOUT_CLASSIFICATION	3.570817426001908E-4	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9997544536743854	WITHOUT_CLASSIFICATION	2.455463256144944E-4	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9998119189773456	WITHOUT_CLASSIFICATION	1.880810226545417E-4	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9998419945927981	WITHOUT_CLASSIFICATION	1.580054072019724E-4	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999605828437966	WITHOUT_CLASSIFICATION	3.941715620340331E-5	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999532347179032	WITHOUT_CLASSIFICATION	4.6765282096816674E-5	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9977673447435553	WITHOUT_CLASSIFICATION	0.0022326552564446685	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9995919897076435	WITHOUT_CLASSIFICATION	4.080102923564767E-4	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999108044897285	WITHOUT_CLASSIFICATION	8.919551027160207E-5	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999436071128448	WITHOUT_CLASSIFICATION	5.6392887155167035E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999529907371618	WITHOUT_CLASSIFICATION	4.700926283825642E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999529907371618	WITHOUT_CLASSIFICATION	4.700926283825642E-5	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9998830070884961	WITHOUT_CLASSIFICATION	1.1699291150389938E-4	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999260317532955	WITHOUT_CLASSIFICATION	7.396824670451316E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9998178002494673	WITHOUT_CLASSIFICATION	1.8219975053256526E-4	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9998848022572564	WITHOUT_CLASSIFICATION	1.1519774274360387E-4	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999573902267735	WITHOUT_CLASSIFICATION	4.260977322642055E-5	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999516516953549	WITHOUT_CLASSIFICATION	4.8348304645057755E-5	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999343453411658	WITHOUT_CLASSIFICATION	6.56546588342301E-5	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999210091665389	WITHOUT_CLASSIFICATION	7.899083346112457E-5	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999378681441465	WITHOUT_CLASSIFICATION	6.213185585345068E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999427386125916	WITHOUT_CLASSIFICATION	5.726138740835519E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999427386125916	WITHOUT_CLASSIFICATION	5.726138740835519E-5	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999017276049268	WITHOUT_CLASSIFICATION	9.827239507320603E-5	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9995844031006155	WITHOUT_CLASSIFICATION	4.155968993845278E-4	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9995484369132311	WITHOUT_CLASSIFICATION	4.515630867688143E-4	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999380583577009	WITHOUT_CLASSIFICATION	6.194164229908873E-5	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9996480994969604	WITHOUT_CLASSIFICATION	3.519005030394614E-4	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.999928319350716	WITHOUT_CLASSIFICATION	7.168064928397861E-5	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9997836495360221	WITHOUT_CLASSIFICATION	2.1635046397795732E-4	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9992762084542741	WITHOUT_CLASSIFICATION	7.237915457258224E-4	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9992762084542741	WITHOUT_CLASSIFICATION	7.237915457258224E-4	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9922634440325613	WITHOUT_CLASSIFICATION	0.007736555967438701	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999908573349001	WITHOUT_CLASSIFICATION	9.142665099801954E-6	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9997291077431074	WITHOUT_CLASSIFICATION	2.7089225689258957E-4	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9996757669085286	WITHOUT_CLASSIFICATION	3.242330914714368E-4	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9995351786205964	WITHOUT_CLASSIFICATION	4.6482137940359944E-4	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999745702105396	WITHOUT_CLASSIFICATION	2.5429789460385156E-5	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9997901404321765	WITHOUT_CLASSIFICATION	2.0985956782351275E-4	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.999971922641809	WITHOUT_CLASSIFICATION	2.8077358190939883E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.999971922641809	WITHOUT_CLASSIFICATION	2.8077358190939883E-5	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9998888594045691	WITHOUT_CLASSIFICATION	1.1114059543095813E-4	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.999988294047809	WITHOUT_CLASSIFICATION	1.1705952191046106E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.999988294047809	WITHOUT_CLASSIFICATION	1.1705952191046106E-5	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9998733658277323	WITHOUT_CLASSIFICATION	1.2663417226758294E-4	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999893361880335	WITHOUT_CLASSIFICATION	1.0663811966404578E-5	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999893361880335	WITHOUT_CLASSIFICATION	1.0663811966404578E-5	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9998820232967001	WITHOUT_CLASSIFICATION	1.179767032999162E-4	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9988330734884936	WITHOUT_CLASSIFICATION	0.0011669265115063841	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999492125050657	WITHOUT_CLASSIFICATION	5.078749493410802E-5	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9434488881983735	WITHOUT_CLASSIFICATION	0.05655111180162665	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9434488881983735	WITHOUT_CLASSIFICATION	0.05655111180162665	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9998399864594855	WITHOUT_CLASSIFICATION	1.6001354051462994E-4	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999377048168324	WITHOUT_CLASSIFICATION	6.229518316762148E-5	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9997864434134733	WITHOUT_CLASSIFICATION	2.135565865266992E-4	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9999107816610551	WITHOUT_CLASSIFICATION	8.921833894482799E-5	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9997744281296788	WITHOUT_CLASSIFICATION	2.255718703213098E-4	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999759034578755	WITHOUT_CLASSIFICATION	2.4096542124588647E-5	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9997997134270471	WITHOUT_CLASSIFICATION	2.002865729529443E-4	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9998866624708079	WITHOUT_CLASSIFICATION	1.1333752919214806E-4	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999983777957062	WITHOUT_CLASSIFICATION	1.6222042938484461E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999118215494052	WITHOUT_CLASSIFICATION	8.817845059483913E-5	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999947072938237	WITHOUT_CLASSIFICATION	5.292706176299721E-5	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999184100834753	WITHOUT_CLASSIFICATION	8.158991652476213E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9996876117081459	WITHOUT_CLASSIFICATION	3.1238829185406314E-4	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.9571055651580404	WITHOUT_CLASSIFICATION	0.042894434841959615	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999345397633892	WITHOUT_CLASSIFICATION	6.546023661073612E-5	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999594276573571	WITHOUT_CLASSIFICATION	4.057234264296794E-5	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999523971844091	WITHOUT_CLASSIFICATION	4.7602815590920635E-5	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9998866624708079	WITHOUT_CLASSIFICATION	1.1333752919214806E-4	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.99992261530859	WITHOUT_CLASSIFICATION	7.738469141000141E-5	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999546787373695	WITHOUT_CLASSIFICATION	4.532126263050694E-5	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999640891453765	WITHOUT_CLASSIFICATION	3.5910854623485885E-5	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999883060496958	WITHOUT_CLASSIFICATION	1.1693950304201166E-5	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999287814168502	WITHOUT_CLASSIFICATION	7.121858314989053E-5	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999169978101025	WITHOUT_CLASSIFICATION	8.300218989753424E-5	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9995931448540111	WITHOUT_CLASSIFICATION	4.068551459889573E-4	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.999945503737986	WITHOUT_CLASSIFICATION	5.449626201408924E-5	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.9998506597114679	WITHOUT_CLASSIFICATION	1.493402885320067E-4	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.999928492740624	WITHOUT_CLASSIFICATION	7.150725937589833E-5	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.999969369784432	WITHOUT_CLASSIFICATION	3.063021556806405E-5	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9992423008256924	WITHOUT_CLASSIFICATION	7.576991743074958E-4	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999028767143385	WITHOUT_CLASSIFICATION	9.712328566149309E-5	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9991013995150894	WITHOUT_CLASSIFICATION	8.986004849106518E-4	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.999850596705603	WITHOUT_CLASSIFICATION	1.4940329439709182E-4	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999167752374459	WITHOUT_CLASSIFICATION	8.322476255416799E-5	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.999967699542236	WITHOUT_CLASSIFICATION	3.2300457763993255E-5	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9998691441222828	WITHOUT_CLASSIFICATION	1.308558777172471E-4	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999118215494052	WITHOUT_CLASSIFICATION	8.817845059483913E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9998471015281202	WITHOUT_CLASSIFICATION	1.5289847187975332E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9998471015281202	WITHOUT_CLASSIFICATION	1.5289847187975332E-4	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999777991983992	WITHOUT_CLASSIFICATION	2.2200801600762826E-5	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9992423008256924	WITHOUT_CLASSIFICATION	7.576991743074958E-4	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9980173793838468	WITHOUT_CLASSIFICATION	0.0019826206161531884	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9996234781121209	WITHOUT_CLASSIFICATION	3.765218878790827E-4	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999169978101025	WITHOUT_CLASSIFICATION	8.300218989753424E-5	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9995635607586422	WITHOUT_CLASSIFICATION	4.364392413577445E-4	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999672617166422	WITHOUT_CLASSIFICATION	3.273828335787388E-5	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9995192780293435	WITHOUT_CLASSIFICATION	4.807219706565916E-4	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9995541555689763	WITHOUT_CLASSIFICATION	4.4584443102365257E-4	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999764337998642	WITHOUT_CLASSIFICATION	2.3566200135802338E-5	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999018090521359	WITHOUT_CLASSIFICATION	9.819094786405924E-5	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999958842000212	WITHOUT_CLASSIFICATION	4.11579997889242E-6	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999671345123006	WITHOUT_CLASSIFICATION	3.286548769940874E-5	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9997585795970833	WITHOUT_CLASSIFICATION	2.4142040291664525E-4	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9997627971499657	WITHOUT_CLASSIFICATION	2.3720285003435592E-4	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999593005202186	WITHOUT_CLASSIFICATION	4.06994797813864E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9998471015281202	WITHOUT_CLASSIFICATION	1.5289847187975332E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9998471015281202	WITHOUT_CLASSIFICATION	1.5289847187975332E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9998471015281202	WITHOUT_CLASSIFICATION	1.5289847187975332E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9998471015281202	WITHOUT_CLASSIFICATION	1.5289847187975332E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9998471015281202	WITHOUT_CLASSIFICATION	1.5289847187975332E-4	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9998471015281202	WITHOUT_CLASSIFICATION	1.5289847187975332E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.999927449960898	WITHOUT_CLASSIFICATION	7.255003910208525E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999593005202186	WITHOUT_CLASSIFICATION	4.06994797813864E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999593005202186	WITHOUT_CLASSIFICATION	4.06994797813864E-5	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999567644888256	WITHOUT_CLASSIFICATION	4.323551117439223E-5	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999764158137328	WITHOUT_CLASSIFICATION	2.3584186267279636E-5	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999753729651681	WITHOUT_CLASSIFICATION	2.462703483191438E-5	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999966947124264	WITHOUT_CLASSIFICATION	3.3052875735424823E-6	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992912352036569	WITHOUT_CLASSIFICATION	7.087647963430683E-4	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999711854619122	WITHOUT_CLASSIFICATION	2.8814538087851137E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.9999842822957203	WITHOUT_CLASSIFICATION	1.5717704279622335E-5	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9860727117834156	WITHOUT_CLASSIFICATION	0.013927288216584427	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.999927449960898	WITHOUT_CLASSIFICATION	7.255003910208525E-5	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9997543486492105	WITHOUT_CLASSIFICATION	2.456513507894434E-4	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.999548662392112	WITHOUT_CLASSIFICATION	4.513376078879875E-4	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999073346264198	WITHOUT_CLASSIFICATION	9.266537358028164E-5	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.998602280252146	WITHOUT_CLASSIFICATION	0.0013977197478540503	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.999979069921875	WITHOUT_CLASSIFICATION	2.093007812491986E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996595875761506	WITHOUT_CLASSIFICATION	3.404124238494657E-4	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996843679235403	WITHOUT_CLASSIFICATION	3.1563207645969734E-4	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999172865110602	WITHOUT_CLASSIFICATION	8.271348893986134E-5	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999615976023879	WITHOUT_CLASSIFICATION	3.840239761217009E-5	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9998480220029581	WITHOUT_CLASSIFICATION	1.5197799704191572E-4	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9998982400065024	WITHOUT_CLASSIFICATION	1.0175999349751325E-4	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9996118137533695	WITHOUT_CLASSIFICATION	3.8818624663053647E-4	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9996118137533695	WITHOUT_CLASSIFICATION	3.8818624663053647E-4	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.999841946772343	WITHOUT_CLASSIFICATION	1.5805322765704237E-4	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.999841946772343	WITHOUT_CLASSIFICATION	1.5805322765704237E-4	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.99645262391291	WITHOUT_CLASSIFICATION	0.0035473760870900622	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9987838710596474	WITHOUT_CLASSIFICATION	0.0012161289403526487	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.9997150738929053	WITHOUT_CLASSIFICATION	2.8492610709479437E-4	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9998486462057816	WITHOUT_CLASSIFICATION	1.513537942184768E-4	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.999424718080374	WITHOUT_CLASSIFICATION	5.752819196259297E-4	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999602481734664	WITHOUT_CLASSIFICATION	3.975182653355453E-5	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9995262892242867	WITHOUT_CLASSIFICATION	4.7371077571334037E-4	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9996211757484142	WITHOUT_CLASSIFICATION	3.7882425158581505E-4	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999888990925891	WITHOUT_CLASSIFICATION	1.1100907410932437E-5	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.733615229328316	WITHOUT_CLASSIFICATION	0.26638477067168403	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999780989376342	WITHOUT_CLASSIFICATION	2.19010623657283E-5	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9998745689354531	WITHOUT_CLASSIFICATION	1.2543106454688136E-4	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9998745689354531	WITHOUT_CLASSIFICATION	1.2543106454688136E-4	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999598085946269	WITHOUT_CLASSIFICATION	4.0191405373061096E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9997058966490617	WITHOUT_CLASSIFICATION	2.9410335093830884E-4	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999091528070478	WITHOUT_CLASSIFICATION	9.084719295220374E-5	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9998684720478583	WITHOUT_CLASSIFICATION	1.315279521416023E-4	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999279013219748	WITHOUT_CLASSIFICATION	7.209867802510912E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999593005202186	WITHOUT_CLASSIFICATION	4.06994797813864E-5	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9997812548842805	WITHOUT_CLASSIFICATION	2.1874511571948337E-4	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999279013219748	WITHOUT_CLASSIFICATION	7.209867802510912E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9998899974083705	WITHOUT_CLASSIFICATION	1.1000259162959873E-4	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.999917537728537	WITHOUT_CLASSIFICATION	8.246227146294353E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9998629745424156	WITHOUT_CLASSIFICATION	1.370254575843971E-4	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9998809451091745	WITHOUT_CLASSIFICATION	1.1905489082553354E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998634748104956	WITHOUT_CLASSIFICATION	1.3652518950424481E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998634748104956	WITHOUT_CLASSIFICATION	1.3652518950424481E-4	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999505002636226	WITHOUT_CLASSIFICATION	4.949973637723794E-5	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.999794783636409	WITHOUT_CLASSIFICATION	2.052163635911086E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999600298802577	WITHOUT_CLASSIFICATION	3.9970119742244256E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999600298802577	WITHOUT_CLASSIFICATION	3.9970119742244256E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999482386186721	WITHOUT_CLASSIFICATION	5.176138132789985E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9998017588870035	WITHOUT_CLASSIFICATION	1.98241112996537E-4	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999820228326363	WITHOUT_CLASSIFICATION	1.79771673636396E-5	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999741820294417	WITHOUT_CLASSIFICATION	2.581797055830789E-5	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999254254345583	WITHOUT_CLASSIFICATION	7.457456544165665E-5	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9998460036780523	WITHOUT_CLASSIFICATION	1.5399632194780253E-4	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9995589461856361	WITHOUT_CLASSIFICATION	4.4105381436389593E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999105101084877	WITHOUT_CLASSIFICATION	8.948989151224213E-5	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999073346264198	WITHOUT_CLASSIFICATION	9.266537358028164E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9998843423217482	WITHOUT_CLASSIFICATION	1.1565767825183761E-4	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999236346425384	WITHOUT_CLASSIFICATION	7.636535746158832E-5	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999535589423582	WITHOUT_CLASSIFICATION	4.644105764197987E-5	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9979359525535969	WITHOUT_CLASSIFICATION	0.0020640474464031283	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999169978101025	WITHOUT_CLASSIFICATION	8.300218989753424E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.999906804434019	WITHOUT_CLASSIFICATION	9.319556598092142E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9998094561161858	WITHOUT_CLASSIFICATION	1.9054388381426304E-4	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9998094561161858	WITHOUT_CLASSIFICATION	1.9054388381426304E-4	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999591917606676	WITHOUT_CLASSIFICATION	4.0808239332362366E-5	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999591917606676	WITHOUT_CLASSIFICATION	4.0808239332362366E-5	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.999906804434019	WITHOUT_CLASSIFICATION	9.319556598092142E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9998830998278768	WITHOUT_CLASSIFICATION	1.1690017212321917E-4	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9995532933834369	WITHOUT_CLASSIFICATION	4.467066165631957E-4	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9998688044427992	WITHOUT_CLASSIFICATION	1.3119555720084096E-4	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999250019622433	WITHOUT_CLASSIFICATION	7.499803775667332E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9997331721421662	WITHOUT_CLASSIFICATION	2.6682785783372964E-4	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999359058913061	WITHOUT_CLASSIFICATION	6.409410869392968E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9996217734186681	WITHOUT_CLASSIFICATION	3.7822658133193534E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9979376481885194	WITHOUT_CLASSIFICATION	0.002062351811480747	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999282761748068	WITHOUT_CLASSIFICATION	7.172382519317253E-5	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9970176181800456	WITHOUT_CLASSIFICATION	0.002982381819954325	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9996217734186681	WITHOUT_CLASSIFICATION	3.7822658133193534E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9979376481885194	WITHOUT_CLASSIFICATION	0.002062351811480747	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999282761748068	WITHOUT_CLASSIFICATION	7.172382519317253E-5	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.9999777362079023	WITHOUT_CLASSIFICATION	2.2263792097691474E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9975828956867903	WITHOUT_CLASSIFICATION	0.0024171043132097275	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9975828956867903	WITHOUT_CLASSIFICATION	0.0024171043132097275	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9998843423217482	WITHOUT_CLASSIFICATION	1.1565767825183761E-4	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9998843423217482	WITHOUT_CLASSIFICATION	1.1565767825183761E-4	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9998768487034986	WITHOUT_CLASSIFICATION	1.2315129650136892E-4	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9998768487034986	WITHOUT_CLASSIFICATION	1.2315129650136892E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9998762761511132	WITHOUT_CLASSIFICATION	1.2372384888679967E-4	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9998762761511132	WITHOUT_CLASSIFICATION	1.2372384888679967E-4	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999958181151684	WITHOUT_CLASSIFICATION	4.181884831629247E-6	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9996227248752021	WITHOUT_CLASSIFICATION	3.772751247979227E-4	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.999951555663505	WITHOUT_CLASSIFICATION	4.844433649495561E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999820228326363	WITHOUT_CLASSIFICATION	1.79771673636396E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999820228326363	WITHOUT_CLASSIFICATION	1.79771673636396E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999169978101025	WITHOUT_CLASSIFICATION	8.300218989753424E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999282761748068	WITHOUT_CLASSIFICATION	7.172382519317253E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9975828956867903	WITHOUT_CLASSIFICATION	0.0024171043132097275	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9975828956867903	WITHOUT_CLASSIFICATION	0.0024171043132097275	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9998843423217482	WITHOUT_CLASSIFICATION	1.1565767825183761E-4	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9998768487034986	WITHOUT_CLASSIFICATION	1.2315129650136892E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9969648489996625	WITHOUT_CLASSIFICATION	0.00303515100033756	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9996744905554834	WITHOUT_CLASSIFICATION	3.25509444516632E-4	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9998745101951484	WITHOUT_CLASSIFICATION	1.254898048515752E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997491382526141	WITHOUT_CLASSIFICATION	2.508617473858302E-4	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9979376481885194	WITHOUT_CLASSIFICATION	0.002062351811480747	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9996217734186681	WITHOUT_CLASSIFICATION	3.7822658133193534E-4	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9998958495857805	WITHOUT_CLASSIFICATION	1.0415041421953222E-4	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9997058966490617	WITHOUT_CLASSIFICATION	2.9410335093830884E-4	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999169978101025	WITHOUT_CLASSIFICATION	8.300218989753424E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9996217734186681	WITHOUT_CLASSIFICATION	3.7822658133193534E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9979376481885194	WITHOUT_CLASSIFICATION	0.002062351811480747	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999282761748068	WITHOUT_CLASSIFICATION	7.172382519317253E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9975828956867903	WITHOUT_CLASSIFICATION	0.0024171043132097275	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9998768487034986	WITHOUT_CLASSIFICATION	1.2315129650136892E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997491382526141	WITHOUT_CLASSIFICATION	2.508617473858302E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997491382526141	WITHOUT_CLASSIFICATION	2.508617473858302E-4	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999515842112939	WITHOUT_CLASSIFICATION	4.841578870609157E-5	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999174621947241	WITHOUT_CLASSIFICATION	8.253780527590046E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9996960863374423	WITHOUT_CLASSIFICATION	3.0391366255757093E-4	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9998734522211645	WITHOUT_CLASSIFICATION	1.265477788355146E-4	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999274456289718	WITHOUT_CLASSIFICATION	7.255437102822306E-5	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9997058966490617	WITHOUT_CLASSIFICATION	2.9410335093830884E-4	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999820228326363	WITHOUT_CLASSIFICATION	1.79771673636396E-5	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999820228326363	WITHOUT_CLASSIFICATION	1.79771673636396E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9979359525535969	WITHOUT_CLASSIFICATION	0.0020640474464031283	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999169978101025	WITHOUT_CLASSIFICATION	8.300218989753424E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9997331721421662	WITHOUT_CLASSIFICATION	2.6682785783372964E-4	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9997331721421662	WITHOUT_CLASSIFICATION	2.6682785783372964E-4	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9997331721421662	WITHOUT_CLASSIFICATION	2.6682785783372964E-4	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9975828956867903	WITHOUT_CLASSIFICATION	0.0024171043132097275	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9975828956867903	WITHOUT_CLASSIFICATION	0.0024171043132097275	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997491382526141	WITHOUT_CLASSIFICATION	2.508617473858302E-4	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999174621947241	WITHOUT_CLASSIFICATION	8.253780527590046E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9996960863374423	WITHOUT_CLASSIFICATION	3.0391366255757093E-4	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9998687942661896	WITHOUT_CLASSIFICATION	1.3120573381047976E-4	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.999879746916834	WITHOUT_CLASSIFICATION	1.2025308316600464E-4	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9998441188610785	WITHOUT_CLASSIFICATION	1.5588113892149775E-4	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9978016898140015	WITHOUT_CLASSIFICATION	0.002198310185998413	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5425348785077819	WITHOUT_CLASSIFICATION	0.45746512149221813	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9957721553655784	WITHOUT_CLASSIFICATION	0.004227844634421615	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998634748104956	WITHOUT_CLASSIFICATION	1.3652518950424481E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999600298802577	WITHOUT_CLASSIFICATION	3.9970119742244256E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999600298802577	WITHOUT_CLASSIFICATION	3.9970119742244256E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999482386186721	WITHOUT_CLASSIFICATION	5.176138132789985E-5	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999174621947241	WITHOUT_CLASSIFICATION	8.253780527590046E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999735862668746	WITHOUT_CLASSIFICATION	2.641373312538251E-5	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.5463031264335276	WITHOUT_CLASSIFICATION	0.4536968735664724	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9997794556354463	WITHOUT_CLASSIFICATION	2.2054436455378918E-4	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9999288418823481	WITHOUT_CLASSIFICATION	7.115811765188152E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9999288418823481	WITHOUT_CLASSIFICATION	7.115811765188152E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9996044182618533	WITHOUT_CLASSIFICATION	3.9558173814664916E-4	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9994165278584944	WITHOUT_CLASSIFICATION	5.834721415055264E-4	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9994187236051706	WITHOUT_CLASSIFICATION	5.812763948293141E-4	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9998582018842384	WITHOUT_CLASSIFICATION	1.4179811576176449E-4	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999735862668746	WITHOUT_CLASSIFICATION	2.641373312538251E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999735862668746	WITHOUT_CLASSIFICATION	2.641373312538251E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999482386186721	WITHOUT_CLASSIFICATION	5.176138132789985E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9998017588870035	WITHOUT_CLASSIFICATION	1.98241112996537E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9996217734186681	WITHOUT_CLASSIFICATION	3.7822658133193534E-4	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9979376481885194	WITHOUT_CLASSIFICATION	0.002062351811480747	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9993002410853384	WITHOUT_CLASSIFICATION	6.997589146616226E-4	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999313620714577	WITHOUT_CLASSIFICATION	6.863792854230422E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9992352200579365	WITHOUT_CLASSIFICATION	7.647799420633871E-4	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5425348785077819	WITHOUT_CLASSIFICATION	0.45746512149221813	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5425348785077819	WITHOUT_CLASSIFICATION	0.45746512149221813	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.999906804434019	WITHOUT_CLASSIFICATION	9.319556598092142E-5	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.999906804434019	WITHOUT_CLASSIFICATION	9.319556598092142E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5425348785077819	WITHOUT_CLASSIFICATION	0.45746512149221813	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5425348785077819	WITHOUT_CLASSIFICATION	0.45746512149221813	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998246645271059	WITHOUT_CLASSIFICATION	1.7533547289407393E-4	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999811873975675	WITHOUT_CLASSIFICATION	1.881260243262531E-5	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.6348585809193924	DEFECT	0.3651414190806077	WITHOUT_CLASSIFICATION
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992912352036569	WITHOUT_CLASSIFICATION	7.087647963430683E-4	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992984841126555	WITHOUT_CLASSIFICATION	7.015158873443778E-4	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999135901676633	WITHOUT_CLASSIFICATION	8.640983233670835E-5	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9998027956165543	WITHOUT_CLASSIFICATION	1.9720438344572204E-4	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9997173577041442	WITHOUT_CLASSIFICATION	2.826422958559215E-4	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9996886896592355	WITHOUT_CLASSIFICATION	3.1131034076445395E-4	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999811873975675	WITHOUT_CLASSIFICATION	1.881260243262531E-5	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.999794783636409	WITHOUT_CLASSIFICATION	2.052163635911086E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999600298802577	WITHOUT_CLASSIFICATION	3.9970119742244256E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999482386186721	WITHOUT_CLASSIFICATION	5.176138132789985E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999482386186721	WITHOUT_CLASSIFICATION	5.176138132789985E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9998017588870035	WITHOUT_CLASSIFICATION	1.98241112996537E-4	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999820228326363	WITHOUT_CLASSIFICATION	1.79771673636396E-5	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999254254345583	WITHOUT_CLASSIFICATION	7.457456544165665E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9995589461856361	WITHOUT_CLASSIFICATION	4.4105381436389593E-4	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999236346425384	WITHOUT_CLASSIFICATION	7.636535746158832E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999169978101025	WITHOUT_CLASSIFICATION	8.300218989753424E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997491382526141	WITHOUT_CLASSIFICATION	2.508617473858302E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9998053418685328	WITHOUT_CLASSIFICATION	1.946581314671426E-4	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9998441188610785	WITHOUT_CLASSIFICATION	1.5588113892149775E-4	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999784508573505	WITHOUT_CLASSIFICATION	2.154914264946226E-5	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999790201519592	WITHOUT_CLASSIFICATION	2.0979848040895852E-5	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999262180401082	WITHOUT_CLASSIFICATION	7.378195989183975E-5	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.9999134069874808	WITHOUT_CLASSIFICATION	8.659301251928706E-5	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9998496847460503	WITHOUT_CLASSIFICATION	1.5031525394980318E-4	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9998314147190983	WITHOUT_CLASSIFICATION	1.6858528090168146E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998634748104956	WITHOUT_CLASSIFICATION	1.3652518950424481E-4	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9997331721421662	WITHOUT_CLASSIFICATION	2.6682785783372964E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997491382526141	WITHOUT_CLASSIFICATION	2.508617473858302E-4	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9990257371855513	WITHOUT_CLASSIFICATION	9.742628144486699E-4	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999956422085576	WITHOUT_CLASSIFICATION	4.357791442448633E-6	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999809025079752	WITHOUT_CLASSIFICATION	1.909749202485893E-5	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9996747476276353	WITHOUT_CLASSIFICATION	3.2525237236465473E-4	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999459655632321	WITHOUT_CLASSIFICATION	5.403443676792194E-5	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9994955896487773	WITHOUT_CLASSIFICATION	5.044103512227605E-4	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9980175954150736	WITHOUT_CLASSIFICATION	0.001982404584926455	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999169978101025	WITHOUT_CLASSIFICATION	8.300218989753424E-5	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999391218552742	WITHOUT_CLASSIFICATION	6.0878144725796636E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999402771499398	WITHOUT_CLASSIFICATION	5.972285006008955E-5	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5425348785077819	WITHOUT_CLASSIFICATION	0.45746512149221813	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9994955896487773	WITHOUT_CLASSIFICATION	5.044103512227605E-4	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999391218552742	WITHOUT_CLASSIFICATION	6.0878144725796636E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999402771499398	WITHOUT_CLASSIFICATION	5.972285006008955E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9994044971812103	WITHOUT_CLASSIFICATION	5.955028187898336E-4	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9997580470187415	WITHOUT_CLASSIFICATION	2.4195298125844833E-4	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999134664016368	WITHOUT_CLASSIFICATION	8.653359836324862E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999134664016368	WITHOUT_CLASSIFICATION	8.653359836324862E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999079053579994	WITHOUT_CLASSIFICATION	9.209464200054455E-5	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.999902767206764	WITHOUT_CLASSIFICATION	9.72327932360258E-5	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.999902767206764	WITHOUT_CLASSIFICATION	9.72327932360258E-5	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9980175954150736	WITHOUT_CLASSIFICATION	0.001982404584926455	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999169978101025	WITHOUT_CLASSIFICATION	8.300218989753424E-5	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.999902767206764	WITHOUT_CLASSIFICATION	9.72327932360258E-5	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999281281960111	WITHOUT_CLASSIFICATION	7.187180398887656E-5	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999487914779989	WITHOUT_CLASSIFICATION	5.12085220011357E-5	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999756721188624	WITHOUT_CLASSIFICATION	2.4327881137598682E-5	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9274437091467994	WITHOUT_CLASSIFICATION	0.07255629085320055	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999820507499774	WITHOUT_CLASSIFICATION	1.7949250022621862E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9992364790444932	WITHOUT_CLASSIFICATION	7.635209555067668E-4	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999247353612861	WITHOUT_CLASSIFICATION	7.526463871387688E-5	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.999887520790975	WITHOUT_CLASSIFICATION	1.1247920902500476E-4	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999275609696899	WITHOUT_CLASSIFICATION	7.243903031010024E-5	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9987899218979834	WITHOUT_CLASSIFICATION	0.0012100781020165491	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9992364790444932	WITHOUT_CLASSIFICATION	7.635209555067668E-4	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999649661268818	WITHOUT_CLASSIFICATION	3.503387311817162E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.999954788644436	WITHOUT_CLASSIFICATION	4.521135556395672E-5	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9997838521594751	WITHOUT_CLASSIFICATION	2.1614784052496793E-4	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999822754791315	WITHOUT_CLASSIFICATION	1.7724520868436647E-5	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999138765230904	WITHOUT_CLASSIFICATION	8.612347690970456E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999506417649401	WITHOUT_CLASSIFICATION	4.935823505987089E-5	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999667377430647	WITHOUT_CLASSIFICATION	3.3262256935367236E-5	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999319056205073	WITHOUT_CLASSIFICATION	6.809437949278824E-5	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9931422574482162	WITHOUT_CLASSIFICATION	0.0068577425517839215	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9931422574482162	WITHOUT_CLASSIFICATION	0.0068577425517839215	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9993308309229634	WITHOUT_CLASSIFICATION	6.691690770366174E-4	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999367652512916	WITHOUT_CLASSIFICATION	6.323474870845327E-5	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9999034293625536	WITHOUT_CLASSIFICATION	9.657063744633833E-5	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9997961695003103	WITHOUT_CLASSIFICATION	2.038304996897712E-4	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9998306059957356	WITHOUT_CLASSIFICATION	1.6939400426431287E-4	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9978568422762703	WITHOUT_CLASSIFICATION	0.002143157723729822	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9997871641533326	WITHOUT_CLASSIFICATION	2.1283584666734792E-4	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999078541312741	WITHOUT_CLASSIFICATION	9.214586872580533E-5	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9997589793338996	WITHOUT_CLASSIFICATION	2.4102066610042142E-4	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999472176155644	WITHOUT_CLASSIFICATION	5.2782384435730656E-5	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9968265685201182	WITHOUT_CLASSIFICATION	0.003173431479881784	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9998715439253265	WITHOUT_CLASSIFICATION	1.2845607467356382E-4	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9998884131653043	WITHOUT_CLASSIFICATION	1.115868346956822E-4	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9991823700162121	WITHOUT_CLASSIFICATION	8.17629983787861E-4	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9991823700162121	WITHOUT_CLASSIFICATION	8.17629983787861E-4	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9998424102730583	WITHOUT_CLASSIFICATION	1.5758972694166393E-4	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9998424102730583	WITHOUT_CLASSIFICATION	1.5758972694166393E-4	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.999676483221307	WITHOUT_CLASSIFICATION	3.235167786930568E-4	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9994739258359907	WITHOUT_CLASSIFICATION	5.260741640091787E-4	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999495121552664	WITHOUT_CLASSIFICATION	5.0487844733536836E-5	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999366481797383	WITHOUT_CLASSIFICATION	6.335182026177328E-5	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999403374144779	WITHOUT_CLASSIFICATION	5.966258552209988E-5	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999272721536226	WITHOUT_CLASSIFICATION	7.272784637743814E-5	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999274123343787	WITHOUT_CLASSIFICATION	7.25876656213893E-5	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999268532069134	WITHOUT_CLASSIFICATION	7.314679308646126E-5	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9998372530045179	WITHOUT_CLASSIFICATION	1.627469954822734E-4	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999269515734208	WITHOUT_CLASSIFICATION	7.304842657914054E-5	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999797153552727	WITHOUT_CLASSIFICATION	2.028464472724939E-5	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9998102921200827	WITHOUT_CLASSIFICATION	1.8970787991731645E-4	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9993556684858033	WITHOUT_CLASSIFICATION	6.443315141966929E-4	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999077842985467	WITHOUT_CLASSIFICATION	9.221570145332808E-5	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999110480584066	WITHOUT_CLASSIFICATION	8.895194159349527E-5	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9997273398844494	WITHOUT_CLASSIFICATION	2.726601155506011E-4	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9997281388850839	WITHOUT_CLASSIFICATION	2.718611149160346E-4	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9997048737317371	WITHOUT_CLASSIFICATION	2.951262682628764E-4	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999822790829729	WITHOUT_CLASSIFICATION	1.772091702708619E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9997627971499657	WITHOUT_CLASSIFICATION	2.3720285003435592E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9998017588870035	WITHOUT_CLASSIFICATION	1.98241112996537E-4	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999506417649401	WITHOUT_CLASSIFICATION	4.935823505987089E-5	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9998424102730583	WITHOUT_CLASSIFICATION	1.5758972694166393E-4	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9998424102730583	WITHOUT_CLASSIFICATION	1.5758972694166393E-4	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9997048737317371	WITHOUT_CLASSIFICATION	2.951262682628764E-4	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999822790829729	WITHOUT_CLASSIFICATION	1.772091702708619E-5	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.999905653103071	WITHOUT_CLASSIFICATION	9.43468969289805E-5	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999045352724039	WITHOUT_CLASSIFICATION	9.546472759602476E-5	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999283572272201	WITHOUT_CLASSIFICATION	7.16427727799458E-5	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.9999283572272201	WITHOUT_CLASSIFICATION	7.16427727799458E-5	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9998169407042948	WITHOUT_CLASSIFICATION	1.8305929570520946E-4	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9998864706128268	WITHOUT_CLASSIFICATION	1.1352938717322308E-4	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9998728685614283	WITHOUT_CLASSIFICATION	1.2713143857165526E-4	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999071125381104	WITHOUT_CLASSIFICATION	9.288746188958541E-5	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996609076210405	WITHOUT_CLASSIFICATION	3.390923789593754E-4	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998246645271059	WITHOUT_CLASSIFICATION	1.7533547289407393E-4	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999888990925891	WITHOUT_CLASSIFICATION	1.1100907410932437E-5	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5425348785077819	WITHOUT_CLASSIFICATION	0.45746512149221813	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5425348785077819	WITHOUT_CLASSIFICATION	0.45746512149221813	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9998365428049938	WITHOUT_CLASSIFICATION	1.6345719500618822E-4	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9997864897856592	WITHOUT_CLASSIFICATION	2.1351021434072083E-4	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9989989862962736	WITHOUT_CLASSIFICATION	0.001001013703726456	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9996032821906551	WITHOUT_CLASSIFICATION	3.9671780934503326E-4	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996595875761506	WITHOUT_CLASSIFICATION	3.404124238494657E-4	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996843679235403	WITHOUT_CLASSIFICATION	3.1563207645969734E-4	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.6024143417130622	WITHOUT_CLASSIFICATION	0.39758565828693787	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998246645271059	WITHOUT_CLASSIFICATION	1.7533547289407393E-4	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996595875761506	WITHOUT_CLASSIFICATION	3.404124238494657E-4	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996595875761506	WITHOUT_CLASSIFICATION	3.404124238494657E-4	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.5506541393430724	DEFECT	0.4493458606569276	WITHOUT_CLASSIFICATION
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996587994164302	WITHOUT_CLASSIFICATION	3.412005835698347E-4	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996609076210405	WITHOUT_CLASSIFICATION	3.390923789593754E-4	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.999913356410729	WITHOUT_CLASSIFICATION	8.664358927103784E-5	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.999980877749504	WITHOUT_CLASSIFICATION	1.912225049610385E-5	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9993197935100206	WITHOUT_CLASSIFICATION	6.802064899793876E-4	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9998824640407129	WITHOUT_CLASSIFICATION	1.1753595928712824E-4	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998634748104956	WITHOUT_CLASSIFICATION	1.3652518950424481E-4	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999247353612861	WITHOUT_CLASSIFICATION	7.526463871387688E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999714692813348	WITHOUT_CLASSIFICATION	2.8530718665194195E-4	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9997949482693547	WITHOUT_CLASSIFICATION	2.0505173064521286E-4	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9997079881405148	WITHOUT_CLASSIFICATION	2.9201185948521803E-4	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999560948495952	WITHOUT_CLASSIFICATION	4.3905150404842654E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.997613425463784	WITHOUT_CLASSIFICATION	0.002386574536216033	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999044395492435	WITHOUT_CLASSIFICATION	9.556045075656722E-5	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9974349941823005	WITHOUT_CLASSIFICATION	0.0025650058176994385	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9973768366417325	WITHOUT_CLASSIFICATION	0.002623163358267483	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9995927836882353	WITHOUT_CLASSIFICATION	4.0721631176458633E-4	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9987293577779822	WITHOUT_CLASSIFICATION	0.0012706422220176668	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9998624973255937	WITHOUT_CLASSIFICATION	1.375026744062821E-4	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9960771407207689	WITHOUT_CLASSIFICATION	0.003922859279231138	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999764337998642	WITHOUT_CLASSIFICATION	2.3566200135802338E-5	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999073346264198	WITHOUT_CLASSIFICATION	9.266537358028164E-5	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998634748104956	WITHOUT_CLASSIFICATION	1.3652518950424481E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999820507499774	WITHOUT_CLASSIFICATION	1.7949250022621862E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999275609696899	WITHOUT_CLASSIFICATION	7.243903031010024E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.999954788644436	WITHOUT_CLASSIFICATION	4.521135556395672E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999822754791315	WITHOUT_CLASSIFICATION	1.7724520868436647E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999822754791315	WITHOUT_CLASSIFICATION	1.7724520868436647E-5	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9998425670377411	WITHOUT_CLASSIFICATION	1.5743296225885034E-4	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9985776716491798	WITHOUT_CLASSIFICATION	0.001422328350820184	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999542310273237	WITHOUT_CLASSIFICATION	4.576897267632707E-5	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9997845139323359	WITHOUT_CLASSIFICATION	2.1548606766416212E-4	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9998865700729597	WITHOUT_CLASSIFICATION	1.1342992704032743E-4	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9996617399667941	WITHOUT_CLASSIFICATION	3.3826003320585793E-4	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9996138668493295	WITHOUT_CLASSIFICATION	3.861331506704917E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999358077300542	WITHOUT_CLASSIFICATION	6.419226994582256E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9998017588870035	WITHOUT_CLASSIFICATION	1.98241112996537E-4	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.997613425463784	WITHOUT_CLASSIFICATION	0.002386574536216033	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9998845883552384	WITHOUT_CLASSIFICATION	1.1541164476159033E-4	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9552746708353012	WITHOUT_CLASSIFICATION	0.04472532916469886	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999026713744729	WITHOUT_CLASSIFICATION	9.732862552710921E-5	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9990941928136752	WITHOUT_CLASSIFICATION	9.058071863247488E-4	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999280850009354	WITHOUT_CLASSIFICATION	7.191499906451406E-5	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.999902679852924	WITHOUT_CLASSIFICATION	9.732014707604887E-5	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999197634159277	WITHOUT_CLASSIFICATION	8.023658407231732E-5	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9997417412719412	WITHOUT_CLASSIFICATION	2.582587280588649E-4	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9997008677524444	WITHOUT_CLASSIFICATION	2.9913224755559215E-4	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9997874945877764	WITHOUT_CLASSIFICATION	2.125054122236576E-4	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9998963352881648	WITHOUT_CLASSIFICATION	1.0366471183510844E-4	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.999935213620151	WITHOUT_CLASSIFICATION	6.478637984900204E-5	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9998959978662472	WITHOUT_CLASSIFICATION	1.0400213375278395E-4	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999105101084877	WITHOUT_CLASSIFICATION	8.948989151224213E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.999906804434019	WITHOUT_CLASSIFICATION	9.319556598092142E-5	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9998094561161858	WITHOUT_CLASSIFICATION	1.9054388381426304E-4	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9998094561161858	WITHOUT_CLASSIFICATION	1.9054388381426304E-4	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999591917606676	WITHOUT_CLASSIFICATION	4.0808239332362366E-5	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999591917606676	WITHOUT_CLASSIFICATION	4.0808239332362366E-5	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.999906804434019	WITHOUT_CLASSIFICATION	9.319556598092142E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9998830998278768	WITHOUT_CLASSIFICATION	1.1690017212321917E-4	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9998688044427992	WITHOUT_CLASSIFICATION	1.3119555720084096E-4	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9998688044427992	WITHOUT_CLASSIFICATION	1.3119555720084096E-4	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999250019622433	WITHOUT_CLASSIFICATION	7.499803775667332E-5	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999250019622433	WITHOUT_CLASSIFICATION	7.499803775667332E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9978016898140015	WITHOUT_CLASSIFICATION	0.002198310185998413	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.9999583450206804	WITHOUT_CLASSIFICATION	4.165497931970577E-5	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999916169000176	WITHOUT_CLASSIFICATION	8.383099982387774E-6	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999363111544021	WITHOUT_CLASSIFICATION	6.368884559790426E-5	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9999643126846974	WITHOUT_CLASSIFICATION	3.5687315302489886E-5	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999087519045226	WITHOUT_CLASSIFICATION	9.124809547740484E-5	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9996061902815805	WITHOUT_CLASSIFICATION	3.938097184195482E-4	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999711050104306	WITHOUT_CLASSIFICATION	2.8894989569306345E-5	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9987089637581641	WITHOUT_CLASSIFICATION	0.0012910362418358126	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9950792776609805	WITHOUT_CLASSIFICATION	0.004920722339019535	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999832231659975	WITHOUT_CLASSIFICATION	1.677683400246408E-5	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.999989393312453	WITHOUT_CLASSIFICATION	1.0606687547031601E-5	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999548230850891	WITHOUT_CLASSIFICATION	4.517691491082874E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998634748104956	WITHOUT_CLASSIFICATION	1.3652518950424481E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9998017588870035	WITHOUT_CLASSIFICATION	1.98241112996537E-4	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.99982551853437	WITHOUT_CLASSIFICATION	1.744814656301085E-4	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999275609696899	WITHOUT_CLASSIFICATION	7.243903031010024E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.999954788644436	WITHOUT_CLASSIFICATION	4.521135556395672E-5	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999071125381104	WITHOUT_CLASSIFICATION	9.288746188958541E-5	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9985776716491798	WITHOUT_CLASSIFICATION	0.001422328350820184	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9995385585584926	WITHOUT_CLASSIFICATION	4.6144144150740316E-4	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9997171391067654	WITHOUT_CLASSIFICATION	2.8286089323467694E-4	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999644369459972	WITHOUT_CLASSIFICATION	3.556305400277658E-5	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999155272223736	WITHOUT_CLASSIFICATION	8.447277762635442E-5	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9998254878802846	WITHOUT_CLASSIFICATION	1.7451211971539706E-4	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999399891937759	WITHOUT_CLASSIFICATION	6.001080622398018E-5	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999595793216997	WITHOUT_CLASSIFICATION	4.042067830031256E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999593005202186	WITHOUT_CLASSIFICATION	4.06994797813864E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9998629745424156	WITHOUT_CLASSIFICATION	1.370254575843971E-4	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9998734522211645	WITHOUT_CLASSIFICATION	1.265477788355146E-4	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999274456289718	WITHOUT_CLASSIFICATION	7.255437102822306E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999822754791315	WITHOUT_CLASSIFICATION	1.7724520868436647E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999506417649401	WITHOUT_CLASSIFICATION	4.935823505987089E-5	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9997864897856592	WITHOUT_CLASSIFICATION	2.1351021434072083E-4	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999922958085652	WITHOUT_CLASSIFICATION	7.704191434857246E-6	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9993065426894917	WITHOUT_CLASSIFICATION	6.934573105082409E-4	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999910523990699	WITHOUT_CLASSIFICATION	8.947600930099489E-6	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9997765472189031	WITHOUT_CLASSIFICATION	2.2345278109693598E-4	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999324464001502	WITHOUT_CLASSIFICATION	6.755359984974879E-5	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999332756100021	WITHOUT_CLASSIFICATION	6.67243899979404E-5	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9996138668493295	WITHOUT_CLASSIFICATION	3.861331506704917E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9998017588870035	WITHOUT_CLASSIFICATION	1.98241112996537E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9998053418685328	WITHOUT_CLASSIFICATION	1.946581314671426E-4	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999275609696899	WITHOUT_CLASSIFICATION	7.243903031010024E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999026713744729	WITHOUT_CLASSIFICATION	9.732862552710921E-5	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999280850009354	WITHOUT_CLASSIFICATION	7.191499906451406E-5	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999797228956501	WITHOUT_CLASSIFICATION	2.02771043498566E-5	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999713254943863	WITHOUT_CLASSIFICATION	2.867450561366615E-5	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999261900105636	WITHOUT_CLASSIFICATION	7.380998943641966E-5	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999443507337952	WITHOUT_CLASSIFICATION	5.564926620479034E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999391218552742	WITHOUT_CLASSIFICATION	6.0878144725796636E-5	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999402771499398	WITHOUT_CLASSIFICATION	5.972285006008955E-5	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999081986267979	WITHOUT_CLASSIFICATION	9.180137320207361E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999391218552742	WITHOUT_CLASSIFICATION	6.0878144725796636E-5	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9978612710533986	WITHOUT_CLASSIFICATION	0.002138728946601407	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999402771499398	WITHOUT_CLASSIFICATION	5.972285006008955E-5	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999081986267979	WITHOUT_CLASSIFICATION	9.180137320207361E-5	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.999903150728781	WITHOUT_CLASSIFICATION	9.684927121897316E-5	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9997382895013356	WITHOUT_CLASSIFICATION	2.617104986644922E-4	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9997382895013356	WITHOUT_CLASSIFICATION	2.617104986644922E-4	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9994044971812103	WITHOUT_CLASSIFICATION	5.955028187898336E-4	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.999937942457009	WITHOUT_CLASSIFICATION	6.205754299104403E-5	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999948864496889	WITHOUT_CLASSIFICATION	5.1135503110914E-6	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.999902767206764	WITHOUT_CLASSIFICATION	9.72327932360258E-5	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.999902767206764	WITHOUT_CLASSIFICATION	9.72327932360258E-5	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.999902767206764	WITHOUT_CLASSIFICATION	9.72327932360258E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999185476936706	WITHOUT_CLASSIFICATION	8.145230632936483E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999275609696899	WITHOUT_CLASSIFICATION	7.243903031010024E-5	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9994044971812103	WITHOUT_CLASSIFICATION	5.955028187898336E-4	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999188465452864	WITHOUT_CLASSIFICATION	8.115345471361477E-5	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999756721188624	WITHOUT_CLASSIFICATION	2.4327881137598682E-5	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.999993857234789	WITHOUT_CLASSIFICATION	6.142765211152204E-6	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9979300856743787	WITHOUT_CLASSIFICATION	0.0020699143256213055	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9968515911435288	WITHOUT_CLASSIFICATION	0.0031484088564711146	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999485142488972	WITHOUT_CLASSIFICATION	5.148575110288842E-5	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9996433987229474	WITHOUT_CLASSIFICATION	3.566012770527212E-4	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9968654344519178	WITHOUT_CLASSIFICATION	0.003134565548082132	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9998326874782105	WITHOUT_CLASSIFICATION	1.6731252178943853E-4	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999188465452864	WITHOUT_CLASSIFICATION	8.115345471361477E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999188465452864	WITHOUT_CLASSIFICATION	8.115345471361477E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999188465452864	WITHOUT_CLASSIFICATION	8.115345471361477E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999188465452864	WITHOUT_CLASSIFICATION	8.115345471361477E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998634748104956	WITHOUT_CLASSIFICATION	1.3652518950424481E-4	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999386472939844	WITHOUT_CLASSIFICATION	6.135270601559137E-5	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9998027956165543	WITHOUT_CLASSIFICATION	1.9720438344572204E-4	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999026713744729	WITHOUT_CLASSIFICATION	9.732862552710921E-5	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9990941928136752	WITHOUT_CLASSIFICATION	9.058071863247488E-4	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999280850009354	WITHOUT_CLASSIFICATION	7.191499906451406E-5	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9998750004310596	WITHOUT_CLASSIFICATION	1.2499956894042872E-4	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9980136346503656	WITHOUT_CLASSIFICATION	0.0019863653496343544	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9976183738070373	WITHOUT_CLASSIFICATION	0.0023816261929626528	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999038151689318	WITHOUT_CLASSIFICATION	9.618483106825863E-5	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999006729791597	WITHOUT_CLASSIFICATION	9.932702084026893E-5	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999006729791597	WITHOUT_CLASSIFICATION	9.932702084026893E-5	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9981886692074492	WITHOUT_CLASSIFICATION	0.001811330792550692	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9981886692074492	WITHOUT_CLASSIFICATION	0.001811330792550692	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999888990925891	WITHOUT_CLASSIFICATION	1.1100907410932437E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9998634748104956	WITHOUT_CLASSIFICATION	1.3652518950424481E-4	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999958181151684	WITHOUT_CLASSIFICATION	4.181884831629247E-6	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999956422085576	WITHOUT_CLASSIFICATION	4.357791442448633E-6	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999854002186873	WITHOUT_CLASSIFICATION	1.4599781312755152E-5	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.998944458570346	WITHOUT_CLASSIFICATION	0.001055541429654057	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9996890447797155	WITHOUT_CLASSIFICATION	3.1095522028441714E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9993498762004366	WITHOUT_CLASSIFICATION	6.501237995634873E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999780989376342	WITHOUT_CLASSIFICATION	2.19010623657283E-5	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9998745689354531	WITHOUT_CLASSIFICATION	1.2543106454688136E-4	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9998745689354531	WITHOUT_CLASSIFICATION	1.2543106454688136E-4	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999598085946269	WITHOUT_CLASSIFICATION	4.0191405373061096E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9995532933834369	WITHOUT_CLASSIFICATION	4.467066165631957E-4	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9998688044427992	WITHOUT_CLASSIFICATION	1.3119555720084096E-4	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9978016898140015	WITHOUT_CLASSIFICATION	0.002198310185998413	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9995927836882353	WITHOUT_CLASSIFICATION	4.0721631176458633E-4	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999188465452864	WITHOUT_CLASSIFICATION	8.115345471361477E-5	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9989696960340095	WITHOUT_CLASSIFICATION	0.0010303039659904003	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999542105199961	WITHOUT_CLASSIFICATION	4.578948000393659E-5	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9995240816062918	WITHOUT_CLASSIFICATION	4.759183937080893E-4	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9997686197099362	WITHOUT_CLASSIFICATION	2.313802900638457E-4	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999188465452864	WITHOUT_CLASSIFICATION	8.115345471361477E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9998701384125018	WITHOUT_CLASSIFICATION	1.298615874980704E-4	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9994150558774243	WITHOUT_CLASSIFICATION	5.849441225757461E-4	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999391218552742	WITHOUT_CLASSIFICATION	6.0878144725796636E-5	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999402771499398	WITHOUT_CLASSIFICATION	5.972285006008955E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999081986267979	WITHOUT_CLASSIFICATION	9.180137320207361E-5	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9994739258359907	WITHOUT_CLASSIFICATION	5.260741640091787E-4	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997771481581192	WITHOUT_CLASSIFICATION	2.2285184188070752E-4	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999488354536183	WITHOUT_CLASSIFICATION	5.116454638162348E-5	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999204759160187	WITHOUT_CLASSIFICATION	7.952408398125226E-5	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9996391041168715	WITHOUT_CLASSIFICATION	3.608958831285704E-4	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9929592192525768	WITHOUT_CLASSIFICATION	0.007040780747423233	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999762553539941	WITHOUT_CLASSIFICATION	2.3744646005869165E-5	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9997538223135614	WITHOUT_CLASSIFICATION	2.4617768643867693E-4	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.999389251636762	WITHOUT_CLASSIFICATION	6.107483632379818E-4	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9996529990028606	WITHOUT_CLASSIFICATION	3.4700099713941095E-4	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999526116523342	WITHOUT_CLASSIFICATION	4.738834766590222E-5	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999526116523342	WITHOUT_CLASSIFICATION	4.738834766590222E-5	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999461107449413	WITHOUT_CLASSIFICATION	5.388925505872858E-5	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9998750004310596	WITHOUT_CLASSIFICATION	1.2499956894042872E-4	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998683857426112	WITHOUT_CLASSIFICATION	1.3161425738887029E-4	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9986855963616523	WITHOUT_CLASSIFICATION	0.0013144036383476194	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9986855963616523	WITHOUT_CLASSIFICATION	0.0013144036383476194	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9991672469913886	WITHOUT_CLASSIFICATION	8.32753008611342E-4	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9997097939494618	WITHOUT_CLASSIFICATION	2.902060505382254E-4	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999595816065715	WITHOUT_CLASSIFICATION	4.041839342861202E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998683857426112	WITHOUT_CLASSIFICATION	1.3161425738887029E-4	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998683857426112	WITHOUT_CLASSIFICATION	1.3161425738887029E-4	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998683857426112	WITHOUT_CLASSIFICATION	1.3161425738887029E-4	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9997466200106984	WITHOUT_CLASSIFICATION	2.533799893016049E-4	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9986855963616523	WITHOUT_CLASSIFICATION	0.0013144036383476194	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9996886896592355	WITHOUT_CLASSIFICATION	3.1131034076445395E-4	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999507440255975	WITHOUT_CLASSIFICATION	4.925597440252229E-5	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999939479728859	WITHOUT_CLASSIFICATION	6.052027114039376E-6	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999370243213797	WITHOUT_CLASSIFICATION	6.2975678620279E-5	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9998744201861586	WITHOUT_CLASSIFICATION	1.2557981384141278E-4	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999870043108052	WITHOUT_CLASSIFICATION	1.2995689194853492E-5	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9998691441222828	WITHOUT_CLASSIFICATION	1.308558777172471E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9996607523583114	WITHOUT_CLASSIFICATION	3.392476416885214E-4	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9998775179667457	WITHOUT_CLASSIFICATION	1.2248203325427825E-4	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.9991519626175971	WITHOUT_CLASSIFICATION	8.48037382402831E-4	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999727185618494	WITHOUT_CLASSIFICATION	2.7281438150577735E-5	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9934931539848164	WITHOUT_CLASSIFICATION	0.00650684601518357	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999761176444438	WITHOUT_CLASSIFICATION	2.3882355556170944E-5	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9998315431037359	WITHOUT_CLASSIFICATION	1.6845689626412673E-4	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999853935354505	WITHOUT_CLASSIFICATION	1.4606464549670018E-5	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.999921823424311	WITHOUT_CLASSIFICATION	7.817657568907096E-5	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999589058988189	WITHOUT_CLASSIFICATION	4.1094101181197755E-5	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9994588406154896	WITHOUT_CLASSIFICATION	5.411593845104207E-4	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9997536707824887	WITHOUT_CLASSIFICATION	2.4632921751132985E-4	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9997536707824887	WITHOUT_CLASSIFICATION	2.4632921751132985E-4	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999467485630399	WITHOUT_CLASSIFICATION	5.325143696006856E-5	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999467485630399	WITHOUT_CLASSIFICATION	5.325143696006856E-5	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9994525962570978	WITHOUT_CLASSIFICATION	5.474037429021075E-4	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.999716233231331	WITHOUT_CLASSIFICATION	2.837667686689792E-4	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9989288217333626	WITHOUT_CLASSIFICATION	0.001071178266637358	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9998199538603045	WITHOUT_CLASSIFICATION	1.8004613969545093E-4	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9994432101256888	WITHOUT_CLASSIFICATION	5.567898743110876E-4	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9994094000513667	WITHOUT_CLASSIFICATION	5.905999486332456E-4	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9993627641892646	WITHOUT_CLASSIFICATION	6.372358107354387E-4	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9996862436033365	WITHOUT_CLASSIFICATION	3.1375639666360967E-4	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9995780763098493	WITHOUT_CLASSIFICATION	4.2192369015067185E-4	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999122846363736	WITHOUT_CLASSIFICATION	8.771536362637819E-5	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999813362277137	WITHOUT_CLASSIFICATION	1.8663772286394615E-5	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9992227505489315	WITHOUT_CLASSIFICATION	7.772494510684624E-4	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9511216581854337	WITHOUT_CLASSIFICATION	0.04887834181456632	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.998358379562844	WITHOUT_CLASSIFICATION	0.001641620437155986	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9941596876790154	WITHOUT_CLASSIFICATION	0.005840312320984554	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.999967518941558	WITHOUT_CLASSIFICATION	3.248105844197574E-5	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9996542925892283	WITHOUT_CLASSIFICATION	3.45707410771669E-4	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9996542925892283	WITHOUT_CLASSIFICATION	3.45707410771669E-4	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9998797404355654	WITHOUT_CLASSIFICATION	1.2025956443461087E-4	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9998797404355654	WITHOUT_CLASSIFICATION	1.2025956443461087E-4	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9997811480869034	WITHOUT_CLASSIFICATION	2.1885191309651373E-4	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9993056029537706	WITHOUT_CLASSIFICATION	6.943970462292907E-4	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9972080241479252	WITHOUT_CLASSIFICATION	0.002791975852074931	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9999056146102825	WITHOUT_CLASSIFICATION	9.438538971749914E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999461283039782	WITHOUT_CLASSIFICATION	5.3871696021848426E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999461283039782	WITHOUT_CLASSIFICATION	5.3871696021848426E-5	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9996046305064272	WITHOUT_CLASSIFICATION	3.9536949357284586E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9995784324871804	WITHOUT_CLASSIFICATION	4.215675128196973E-4	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999612040705477	WITHOUT_CLASSIFICATION	3.879592945239658E-5	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.999913091483052	WITHOUT_CLASSIFICATION	8.690851694804172E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999324270628885	WITHOUT_CLASSIFICATION	6.757293711143145E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9996118209258629	WITHOUT_CLASSIFICATION	3.881790741370747E-4	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9996118209258629	WITHOUT_CLASSIFICATION	3.881790741370747E-4	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9998441311780683	WITHOUT_CLASSIFICATION	1.5586882193184158E-4	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999364301189035	WITHOUT_CLASSIFICATION	6.356988109647935E-5	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999364301189035	WITHOUT_CLASSIFICATION	6.356988109647935E-5	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999842905770027	WITHOUT_CLASSIFICATION	1.5709422997258475E-5	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.999512037434469	WITHOUT_CLASSIFICATION	4.879625655308852E-4	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999515104431853	WITHOUT_CLASSIFICATION	4.848955681466597E-5	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999048391574564	WITHOUT_CLASSIFICATION	9.516084254352843E-5	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9998254668773529	WITHOUT_CLASSIFICATION	1.7453312264707565E-4	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.999911394931183	WITHOUT_CLASSIFICATION	8.860506881701877E-5	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999087451996278	WITHOUT_CLASSIFICATION	9.125480037228871E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999461283039782	WITHOUT_CLASSIFICATION	5.3871696021848426E-5	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999612040705477	WITHOUT_CLASSIFICATION	3.879592945239658E-5	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999877078801526	WITHOUT_CLASSIFICATION	1.2292119847347543E-5	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.999990041385353	WITHOUT_CLASSIFICATION	9.958614647047518E-6	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.999990041385353	WITHOUT_CLASSIFICATION	9.958614647047518E-6	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999448218346354	WITHOUT_CLASSIFICATION	5.5178165364526034E-5	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999125325809255	WITHOUT_CLASSIFICATION	8.746741907453839E-5	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999872122718797	WITHOUT_CLASSIFICATION	1.2787728120267905E-5	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999902708112414	WITHOUT_CLASSIFICATION	9.729188758565984E-6	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9997967228568154	WITHOUT_CLASSIFICATION	2.0327714318451605E-4	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9998648454838781	WITHOUT_CLASSIFICATION	1.3515451612192378E-4	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.999977088394883	WITHOUT_CLASSIFICATION	2.2911605117011228E-5	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999394836250566	WITHOUT_CLASSIFICATION	6.051637494340431E-5	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999360993277766	WITHOUT_CLASSIFICATION	6.390067222342023E-5	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9996773836490078	WITHOUT_CLASSIFICATION	3.226163509921152E-4	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999560939121389	WITHOUT_CLASSIFICATION	4.390608786106373E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9987375477241311	WITHOUT_CLASSIFICATION	0.0012624522758687832	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9998848179960076	WITHOUT_CLASSIFICATION	1.1518200399229804E-4	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999968871647722	WITHOUT_CLASSIFICATION	3.112835227740731E-6	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9997665254302852	WITHOUT_CLASSIFICATION	2.3347456971479144E-4	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9998030504129748	WITHOUT_CLASSIFICATION	1.969495870252394E-4	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999128542336077	WITHOUT_CLASSIFICATION	8.714576639228029E-5	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9994905196150556	WITHOUT_CLASSIFICATION	5.094803849443303E-4	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999289901953792	WITHOUT_CLASSIFICATION	7.1009804620787E-5	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999436254754176	WITHOUT_CLASSIFICATION	5.637452458232214E-5	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9999480836128843	WITHOUT_CLASSIFICATION	5.1916387115570904E-5	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9997656911403497	WITHOUT_CLASSIFICATION	2.3430885965016794E-4	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999665328921185	WITHOUT_CLASSIFICATION	3.3467107881516176E-5	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.999929839432631	WITHOUT_CLASSIFICATION	7.01605673689547E-5	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999665328921185	WITHOUT_CLASSIFICATION	3.3467107881516176E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997755556040091	WITHOUT_CLASSIFICATION	2.244443959909633E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997755556040091	WITHOUT_CLASSIFICATION	2.244443959909633E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997755556040091	WITHOUT_CLASSIFICATION	2.244443959909633E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997755556040091	WITHOUT_CLASSIFICATION	2.244443959909633E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998563583008538	WITHOUT_CLASSIFICATION	1.4364169914613364E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997646324807866	WITHOUT_CLASSIFICATION	2.353675192134717E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998571817770285	WITHOUT_CLASSIFICATION	1.4281822297149008E-4	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999877078801526	WITHOUT_CLASSIFICATION	1.2292119847347543E-5	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9998746637459336	WITHOUT_CLASSIFICATION	1.253362540663802E-4	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9998746637459336	WITHOUT_CLASSIFICATION	1.253362540663802E-4	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999585843683252	WITHOUT_CLASSIFICATION	4.141563167485214E-5	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999585843683252	WITHOUT_CLASSIFICATION	4.141563167485214E-5	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999585843683252	WITHOUT_CLASSIFICATION	4.141563167485214E-5	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999585843683252	WITHOUT_CLASSIFICATION	4.141563167485214E-5	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999585843683252	WITHOUT_CLASSIFICATION	4.141563167485214E-5	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9997765957210748	WITHOUT_CLASSIFICATION	2.234042789252376E-4	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9997765957210748	WITHOUT_CLASSIFICATION	2.234042789252376E-4	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999585843683252	WITHOUT_CLASSIFICATION	4.141563167485214E-5	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.999766614344246	WITHOUT_CLASSIFICATION	2.3338565575410758E-4	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.999766614344246	WITHOUT_CLASSIFICATION	2.3338565575410758E-4	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9996011884644692	WITHOUT_CLASSIFICATION	3.9881153553084244E-4	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9992076636325605	WITHOUT_CLASSIFICATION	7.92336367439472E-4	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9992076636325605	WITHOUT_CLASSIFICATION	7.92336367439472E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9984873417323734	WITHOUT_CLASSIFICATION	0.0015126582676265874	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9984873417323734	WITHOUT_CLASSIFICATION	0.0015126582676265874	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9984873417323734	WITHOUT_CLASSIFICATION	0.0015126582676265874	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9993830995343717	WITHOUT_CLASSIFICATION	6.169004656282347E-4	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9999608809694774	WITHOUT_CLASSIFICATION	3.911903052251381E-5	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9998896416676525	WITHOUT_CLASSIFICATION	1.1035833234747187E-4	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999958181151684	WITHOUT_CLASSIFICATION	4.181884831629247E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999958181151684	WITHOUT_CLASSIFICATION	4.181884831629247E-6	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9990257371855513	WITHOUT_CLASSIFICATION	9.742628144486699E-4	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999842905770027	WITHOUT_CLASSIFICATION	1.5709422997258475E-5	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999968871647722	WITHOUT_CLASSIFICATION	3.112835227740731E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999968871647722	WITHOUT_CLASSIFICATION	3.112835227740731E-6	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997755556040091	WITHOUT_CLASSIFICATION	2.244443959909633E-4	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999877078801526	WITHOUT_CLASSIFICATION	1.2292119847347543E-5	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9993830995343717	WITHOUT_CLASSIFICATION	6.169004656282347E-4	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9993830995343717	WITHOUT_CLASSIFICATION	6.169004656282347E-4	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9702802653260556	WITHOUT_CLASSIFICATION	0.02971973467394432	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9997261561492162	WITHOUT_CLASSIFICATION	2.7384385078378073E-4	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999835671615691	WITHOUT_CLASSIFICATION	1.6432838430830542E-5	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999526074182192	WITHOUT_CLASSIFICATION	4.739258178078077E-5	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.999932688430512	WITHOUT_CLASSIFICATION	6.731156948797721E-5	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999356491998505	WITHOUT_CLASSIFICATION	6.435080014960004E-5	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9991445084403204	WITHOUT_CLASSIFICATION	8.554915596794853E-4	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999903193170339	WITHOUT_CLASSIFICATION	9.680682966178908E-6	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999969705271358	WITHOUT_CLASSIFICATION	3.0294728641223626E-6	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999467604699149	WITHOUT_CLASSIFICATION	5.3239530085025567E-5	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9997914750574124	WITHOUT_CLASSIFICATION	2.085249425875348E-4	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999425507702205	WITHOUT_CLASSIFICATION	5.7449229779340003E-5	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999332756100021	WITHOUT_CLASSIFICATION	6.67243899979404E-5	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9997429754618735	WITHOUT_CLASSIFICATION	2.570245381264456E-4	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999204510818078	WITHOUT_CLASSIFICATION	7.954891819216357E-5	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999354603387021	WITHOUT_CLASSIFICATION	6.453966129791389E-5	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9996080985769137	WITHOUT_CLASSIFICATION	3.9190142308627977E-4	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9887302827550788	WITHOUT_CLASSIFICATION	0.011269717244921115	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9989182872843347	WITHOUT_CLASSIFICATION	0.0010817127156652995	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999945741108632	WITHOUT_CLASSIFICATION	5.425889136791849E-6	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9996325481009198	WITHOUT_CLASSIFICATION	3.674518990801503E-4	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9995784503521103	WITHOUT_CLASSIFICATION	4.215496478896657E-4	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999461283039782	WITHOUT_CLASSIFICATION	5.3871696021848426E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999461283039782	WITHOUT_CLASSIFICATION	5.3871696021848426E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997755556040091	WITHOUT_CLASSIFICATION	2.244443959909633E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997755556040091	WITHOUT_CLASSIFICATION	2.244443959909633E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998563583008538	WITHOUT_CLASSIFICATION	1.4364169914613364E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998563583008538	WITHOUT_CLASSIFICATION	1.4364169914613364E-4	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9969796645195204	WITHOUT_CLASSIFICATION	0.0030203354804797084	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.99992604676346	WITHOUT_CLASSIFICATION	7.395323653998233E-5	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999645744187244	WITHOUT_CLASSIFICATION	3.5425581275621014E-5	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999796295042915	WITHOUT_CLASSIFICATION	2.0370495708459042E-5	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9997594275551973	WITHOUT_CLASSIFICATION	2.405724448026663E-4	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999150626945426	WITHOUT_CLASSIFICATION	8.493730545753928E-5	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999138765230904	WITHOUT_CLASSIFICATION	8.612347690970456E-5	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9996772072611273	WITHOUT_CLASSIFICATION	3.227927388727449E-4	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.9989754857624333	WITHOUT_CLASSIFICATION	0.0010245142375667348	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999238476500119	WITHOUT_CLASSIFICATION	7.615234998813312E-5	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9998806919066032	WITHOUT_CLASSIFICATION	1.193080933967529E-4	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.9999434939890663	WITHOUT_CLASSIFICATION	5.6506010933636596E-5	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9998497992043568	WITHOUT_CLASSIFICATION	1.5020079564318823E-4	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9998339927393903	WITHOUT_CLASSIFICATION	1.6600726060967547E-4	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999281817803245	WITHOUT_CLASSIFICATION	7.181821967548146E-5	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999439927707877	WITHOUT_CLASSIFICATION	5.600722921220041E-5	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9998543642599856	WITHOUT_CLASSIFICATION	1.4563574001429515E-4	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9997719152593897	WITHOUT_CLASSIFICATION	2.2808474061045234E-4	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999178664411902	WITHOUT_CLASSIFICATION	8.213355880985933E-5	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999599765770717	WITHOUT_CLASSIFICATION	4.002342292839358E-5	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9998552758379037	WITHOUT_CLASSIFICATION	1.4472416209634627E-4	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999439927707877	WITHOUT_CLASSIFICATION	5.600722921220041E-5	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9998296558428705	WITHOUT_CLASSIFICATION	1.7034415712939192E-4	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9998942240078587	WITHOUT_CLASSIFICATION	1.0577599214123127E-4	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999010102260207	WITHOUT_CLASSIFICATION	9.898977397915321E-5	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999452063606801	WITHOUT_CLASSIFICATION	5.4793639319807545E-5	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.999978480841021	WITHOUT_CLASSIFICATION	2.1519158978986204E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.999929839432631	WITHOUT_CLASSIFICATION	7.01605673689547E-5	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9998942240078587	WITHOUT_CLASSIFICATION	1.0577599214123127E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9854396353950488	WITHOUT_CLASSIFICATION	0.014560364604951222	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9993365056720248	WITHOUT_CLASSIFICATION	6.634943279752363E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9988958569574727	WITHOUT_CLASSIFICATION	0.0011041430425272254	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9988958569574727	WITHOUT_CLASSIFICATION	0.0011041430425272254	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9998625542306981	WITHOUT_CLASSIFICATION	1.374457693017949E-4	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9992178108259961	WITHOUT_CLASSIFICATION	7.821891740037338E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998959052567065	WITHOUT_CLASSIFICATION	1.0409474329350038E-4	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9952270838376772	WITHOUT_CLASSIFICATION	0.0047729161623228196	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.999521481114951	WITHOUT_CLASSIFICATION	4.7851888504905356E-4	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9995062761091217	WITHOUT_CLASSIFICATION	4.937238908783889E-4	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9996388862451575	WITHOUT_CLASSIFICATION	3.6111375484246727E-4	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9996388862451575	WITHOUT_CLASSIFICATION	3.6111375484246727E-4	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999240691328838	WITHOUT_CLASSIFICATION	7.593086711618341E-5	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999813362277137	WITHOUT_CLASSIFICATION	1.8663772286394615E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9854396353950488	WITHOUT_CLASSIFICATION	0.014560364604951222	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9854396353950488	WITHOUT_CLASSIFICATION	0.014560364604951222	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9993365056720248	WITHOUT_CLASSIFICATION	6.634943279752363E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9988958569574727	WITHOUT_CLASSIFICATION	0.0011041430425272254	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9988958569574727	WITHOUT_CLASSIFICATION	0.0011041430425272254	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998959052567065	WITHOUT_CLASSIFICATION	1.0409474329350038E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998959052567065	WITHOUT_CLASSIFICATION	1.0409474329350038E-4	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9999653168761946	WITHOUT_CLASSIFICATION	3.4683123805374E-5	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9877484597371788	WITHOUT_CLASSIFICATION	0.012251540262821145	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999803578438832	WITHOUT_CLASSIFICATION	1.9642156116785036E-5	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.999960601710086	WITHOUT_CLASSIFICATION	3.939828991399513E-5	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.999960601710086	WITHOUT_CLASSIFICATION	3.939828991399513E-5	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9998323774701502	WITHOUT_CLASSIFICATION	1.6762252984976704E-4	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999031745996048	WITHOUT_CLASSIFICATION	9.682540039531969E-5	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999427362086745	WITHOUT_CLASSIFICATION	5.7263791325585026E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9998625542306981	WITHOUT_CLASSIFICATION	1.374457693017949E-4	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9992178108259961	WITHOUT_CLASSIFICATION	7.821891740037338E-4	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999355917968259	WITHOUT_CLASSIFICATION	6.440820317410888E-5	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9998158984510112	WITHOUT_CLASSIFICATION	1.841015489889815E-4	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999567265707711	WITHOUT_CLASSIFICATION	4.327342922891859E-5	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999440623437704	WITHOUT_CLASSIFICATION	5.593765622950119E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9967074491750032	WITHOUT_CLASSIFICATION	0.0032925508249967974	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9967074491750032	WITHOUT_CLASSIFICATION	0.0032925508249967974	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9998816982629266	WITHOUT_CLASSIFICATION	1.1830173707331641E-4	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999479484532414	WITHOUT_CLASSIFICATION	5.2051546758688014E-5	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999801182405647	WITHOUT_CLASSIFICATION	1.988175943539097E-5	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999232484616928	WITHOUT_CLASSIFICATION	7.675153830727043E-5	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999787848076749	WITHOUT_CLASSIFICATION	2.121519232513778E-5	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9854396353950488	WITHOUT_CLASSIFICATION	0.014560364604951222	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9993365056720248	WITHOUT_CLASSIFICATION	6.634943279752363E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9993365056720248	WITHOUT_CLASSIFICATION	6.634943279752363E-4	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9998985547264246	WITHOUT_CLASSIFICATION	1.0144527357539642E-4	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9992178108259961	WITHOUT_CLASSIFICATION	7.821891740037338E-4	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9996203837748994	WITHOUT_CLASSIFICATION	3.79616225100577E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9992986853672051	WITHOUT_CLASSIFICATION	7.01314632794787E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9992986853672051	WITHOUT_CLASSIFICATION	7.01314632794787E-4	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9998717784693775	WITHOUT_CLASSIFICATION	1.2822153062255843E-4	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9999692388990767	WITHOUT_CLASSIFICATION	3.0761100923297096E-5	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9984774206949631	WITHOUT_CLASSIFICATION	0.0015225793050367689	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999025228062708	WITHOUT_CLASSIFICATION	9.7477193729288E-5	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999782946656234	WITHOUT_CLASSIFICATION	2.1705334376538536E-5	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9996702972550413	WITHOUT_CLASSIFICATION	3.2970274495865436E-4	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9998314492908882	WITHOUT_CLASSIFICATION	1.6855070911185079E-4	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999394529004899	WITHOUT_CLASSIFICATION	6.0547099509940627E-5	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999394529004899	WITHOUT_CLASSIFICATION	6.0547099509940627E-5	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999888320032755	WITHOUT_CLASSIFICATION	1.116799672452823E-5	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9997582133314743	WITHOUT_CLASSIFICATION	2.4178666852577206E-4	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999870914719952	WITHOUT_CLASSIFICATION	1.290852800482898E-5	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9998196835609989	WITHOUT_CLASSIFICATION	1.803164390011765E-4	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9997069146713214	WITHOUT_CLASSIFICATION	2.930853286785648E-4	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9997343351336117	WITHOUT_CLASSIFICATION	2.656648663883E-4	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999857669450765	WITHOUT_CLASSIFICATION	1.4233054923426724E-5	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.990662683048985	WITHOUT_CLASSIFICATION	0.009337316951015006	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9998366142889648	WITHOUT_CLASSIFICATION	1.6338571103514756E-4	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.99982256162026	WITHOUT_CLASSIFICATION	1.7743837974012487E-4	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.999463450819723	WITHOUT_CLASSIFICATION	5.365491802769258E-4	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.979806135742996	WITHOUT_CLASSIFICATION	0.020193864257003903	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9993099052441025	WITHOUT_CLASSIFICATION	6.900947558975922E-4	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999324412415654	WITHOUT_CLASSIFICATION	6.755875843454816E-5	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9998702493670587	WITHOUT_CLASSIFICATION	1.2975063294123123E-4	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9998702493670587	WITHOUT_CLASSIFICATION	1.2975063294123123E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999120945304077	WITHOUT_CLASSIFICATION	8.790546959216781E-5	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999701363772653	WITHOUT_CLASSIFICATION	2.986362273479016E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999120945304077	WITHOUT_CLASSIFICATION	8.790546959216781E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999120945304077	WITHOUT_CLASSIFICATION	8.790546959216781E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9987375477241311	WITHOUT_CLASSIFICATION	0.0012624522758687832	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9854396353950488	WITHOUT_CLASSIFICATION	0.014560364604951222	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9993365056720248	WITHOUT_CLASSIFICATION	6.634943279752363E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999714692813348	WITHOUT_CLASSIFICATION	2.8530718665194195E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9993365056720248	WITHOUT_CLASSIFICATION	6.634943279752363E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9988958569574727	WITHOUT_CLASSIFICATION	0.0011041430425272254	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9988958569574727	WITHOUT_CLASSIFICATION	0.0011041430425272254	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998959052567065	WITHOUT_CLASSIFICATION	1.0409474329350038E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998959052567065	WITHOUT_CLASSIFICATION	1.0409474329350038E-4	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9998158984510112	WITHOUT_CLASSIFICATION	1.841015489889815E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999906658154483	WITHOUT_CLASSIFICATION	9.33418455173363E-6	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.999899613946547	WITHOUT_CLASSIFICATION	1.0038605345290535E-4	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999357462294884	WITHOUT_CLASSIFICATION	6.425377051156225E-5	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9998000986461831	WITHOUT_CLASSIFICATION	1.9990135381689364E-4	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9994981283977347	WITHOUT_CLASSIFICATION	5.018716022654084E-4	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.9974232396361083	WITHOUT_CLASSIFICATION	0.002576760363891758	DEFECT
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9992178108259961	WITHOUT_CLASSIFICATION	7.821891740037338E-4	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9998833793363192	WITHOUT_CLASSIFICATION	1.166206636808347E-4	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999226467513812	WITHOUT_CLASSIFICATION	7.735324861884742E-5	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999205867524148	WITHOUT_CLASSIFICATION	7.941324758513214E-5	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9992178108259961	WITHOUT_CLASSIFICATION	7.821891740037338E-4	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9998776458150823	WITHOUT_CLASSIFICATION	1.2235418491769734E-4	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999857669450765	WITHOUT_CLASSIFICATION	1.4233054923426724E-5	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9993217758787394	WITHOUT_CLASSIFICATION	6.782241212606239E-4	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9985821812392317	WITHOUT_CLASSIFICATION	0.0014178187607683235	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999924815268559	WITHOUT_CLASSIFICATION	7.518473144156293E-6	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9992164344238381	WITHOUT_CLASSIFICATION	7.835655761618207E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999906658154483	WITHOUT_CLASSIFICATION	9.33418455173363E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999906658154483	WITHOUT_CLASSIFICATION	9.33418455173363E-6	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9511216581854337	WITHOUT_CLASSIFICATION	0.04887834181456632	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9987375477241311	WITHOUT_CLASSIFICATION	0.0012624522758687832	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9992441794437787	WITHOUT_CLASSIFICATION	7.558205562212903E-4	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9854396353950488	WITHOUT_CLASSIFICATION	0.014560364604951222	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9993365056720248	WITHOUT_CLASSIFICATION	6.634943279752363E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9993365056720248	WITHOUT_CLASSIFICATION	6.634943279752363E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9993365056720248	WITHOUT_CLASSIFICATION	6.634943279752363E-4	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9988958569574727	WITHOUT_CLASSIFICATION	0.0011041430425272254	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9988958569574727	WITHOUT_CLASSIFICATION	0.0011041430425272254	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9988958569574727	WITHOUT_CLASSIFICATION	0.0011041430425272254	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9988958569574727	WITHOUT_CLASSIFICATION	0.0011041430425272254	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9988958569574727	WITHOUT_CLASSIFICATION	0.0011041430425272254	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998959052567065	WITHOUT_CLASSIFICATION	1.0409474329350038E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998959052567065	WITHOUT_CLASSIFICATION	1.0409474329350038E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998959052567065	WITHOUT_CLASSIFICATION	1.0409474329350038E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9998959052567065	WITHOUT_CLASSIFICATION	1.0409474329350038E-4	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9952270838376772	WITHOUT_CLASSIFICATION	0.0047729161623228196	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999906658154483	WITHOUT_CLASSIFICATION	9.33418455173363E-6	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.999821775677381	WITHOUT_CLASSIFICATION	1.7822432261899732E-4	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9992233679841531	WITHOUT_CLASSIFICATION	7.766320158468938E-4	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9998571002664647	WITHOUT_CLASSIFICATION	1.4289973353530903E-4	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9998571002664647	WITHOUT_CLASSIFICATION	1.4289973353530903E-4	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9992178108259961	WITHOUT_CLASSIFICATION	7.821891740037338E-4	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999862518369674	WITHOUT_CLASSIFICATION	1.3748163032460871E-5	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999598645936943	WITHOUT_CLASSIFICATION	4.01354063056938E-5	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997923386812643	WITHOUT_CLASSIFICATION	2.0766131873575528E-4	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9992178108259961	WITHOUT_CLASSIFICATION	7.821891740037338E-4	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9998664350192064	WITHOUT_CLASSIFICATION	1.3356498079372886E-4	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9998773509863369	WITHOUT_CLASSIFICATION	1.226490136630363E-4	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.999990047252703	WITHOUT_CLASSIFICATION	9.952747296968661E-6	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999560939121389	WITHOUT_CLASSIFICATION	4.390608786106373E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9987375477241311	WITHOUT_CLASSIFICATION	0.0012624522758687832	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9993217758787394	WITHOUT_CLASSIFICATION	6.782241212606239E-4	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999924815268559	WITHOUT_CLASSIFICATION	7.518473144156293E-6	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9994202183169377	WITHOUT_CLASSIFICATION	5.797816830623569E-4	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9997798043661907	WITHOUT_CLASSIFICATION	2.201956338093924E-4	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9994202183169377	WITHOUT_CLASSIFICATION	5.797816830623569E-4	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999859597005605	WITHOUT_CLASSIFICATION	1.4040299439457584E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999906658154483	WITHOUT_CLASSIFICATION	9.33418455173363E-6	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999183780327516	WITHOUT_CLASSIFICATION	8.162196724831823E-5	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9998284215646859	WITHOUT_CLASSIFICATION	1.7157843531416577E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999906658154483	WITHOUT_CLASSIFICATION	9.33418455173363E-6	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9998350600375531	WITHOUT_CLASSIFICATION	1.6493996244688463E-4	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999534848946219	WITHOUT_CLASSIFICATION	4.651510537822738E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999906658154483	WITHOUT_CLASSIFICATION	9.33418455173363E-6	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9992511057758706	WITHOUT_CLASSIFICATION	7.488942241293322E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999906658154483	WITHOUT_CLASSIFICATION	9.33418455173363E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999906658154483	WITHOUT_CLASSIFICATION	9.33418455173363E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999906658154483	WITHOUT_CLASSIFICATION	9.33418455173363E-6	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9997466200106984	WITHOUT_CLASSIFICATION	2.533799893016049E-4	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9997466200106984	WITHOUT_CLASSIFICATION	2.533799893016049E-4	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9996862436033365	WITHOUT_CLASSIFICATION	3.1375639666360967E-4	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999324464001502	WITHOUT_CLASSIFICATION	6.755359984974879E-5	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999122846363736	WITHOUT_CLASSIFICATION	8.771536362637819E-5	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9511216581854337	WITHOUT_CLASSIFICATION	0.04887834181456632	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9988958569574727	WITHOUT_CLASSIFICATION	0.0011041430425272254	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9952270838376772	WITHOUT_CLASSIFICATION	0.0047729161623228196	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9996388862451575	WITHOUT_CLASSIFICATION	3.6111375484246727E-4	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9985821812392317	WITHOUT_CLASSIFICATION	0.0014178187607683235	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999859597005605	WITHOUT_CLASSIFICATION	1.4040299439457584E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999859597005605	WITHOUT_CLASSIFICATION	1.4040299439457584E-5	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9994202183169377	WITHOUT_CLASSIFICATION	5.797816830623569E-4	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9998284215646859	WITHOUT_CLASSIFICATION	1.7157843531416577E-4	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999183780327516	WITHOUT_CLASSIFICATION	8.162196724831823E-5	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999183780327516	WITHOUT_CLASSIFICATION	8.162196724831823E-5	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999534848946219	WITHOUT_CLASSIFICATION	4.651510537822738E-5	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999534848946219	WITHOUT_CLASSIFICATION	4.651510537822738E-5	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9997719034069829	WITHOUT_CLASSIFICATION	2.2809659301723995E-4	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9999120911254845	WITHOUT_CLASSIFICATION	8.79088745155128E-5	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9997295140858606	WITHOUT_CLASSIFICATION	2.704859141393629E-4	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9933095230098944	WITHOUT_CLASSIFICATION	0.0066904769901056016	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9830842491755274	WITHOUT_CLASSIFICATION	0.016915750824472605	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9992178108259961	WITHOUT_CLASSIFICATION	7.821891740037338E-4	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9717578941951681	WITHOUT_CLASSIFICATION	0.02824210580483182	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999680062374253	WITHOUT_CLASSIFICATION	3.1993762574714106E-5	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999680062374253	WITHOUT_CLASSIFICATION	3.1993762574714106E-5	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9969505831204046	WITHOUT_CLASSIFICATION	0.0030494168795952834	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9999633394193559	WITHOUT_CLASSIFICATION	3.6660580644050525E-5	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9998395000173579	WITHOUT_CLASSIFICATION	1.6049998264207194E-4	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9998281006293074	WITHOUT_CLASSIFICATION	1.7189937069254368E-4	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999560616748165	WITHOUT_CLASSIFICATION	4.393832518336591E-5	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9997787442349989	WITHOUT_CLASSIFICATION	2.212557650012171E-4	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999521016396733	WITHOUT_CLASSIFICATION	4.789836032676271E-5	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9955730532675547	WITHOUT_CLASSIFICATION	0.004426946732445265	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999560559907245	WITHOUT_CLASSIFICATION	4.394400927561753E-5	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9997394963903914	WITHOUT_CLASSIFICATION	2.60503609608662E-4	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9996119479619173	WITHOUT_CLASSIFICATION	3.8805203808278747E-4	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9996388955888386	WITHOUT_CLASSIFICATION	3.6110441116145526E-4	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9996388955888386	WITHOUT_CLASSIFICATION	3.6110441116145526E-4	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999135478494905	WITHOUT_CLASSIFICATION	8.645215050954664E-5	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999813362277137	WITHOUT_CLASSIFICATION	1.8663772286394615E-5	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999560939121389	WITHOUT_CLASSIFICATION	4.390608786106373E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999859597005605	WITHOUT_CLASSIFICATION	1.4040299439457584E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999859597005605	WITHOUT_CLASSIFICATION	1.4040299439457584E-5	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9996560463467886	WITHOUT_CLASSIFICATION	3.4395365321136605E-4	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9998710566475958	WITHOUT_CLASSIFICATION	1.2894335240419108E-4	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9998710566475958	WITHOUT_CLASSIFICATION	1.2894335240419108E-4	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9994268737991066	WITHOUT_CLASSIFICATION	5.731262008934307E-4	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9998209208694152	WITHOUT_CLASSIFICATION	1.7907913058484685E-4	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9988281056242426	WITHOUT_CLASSIFICATION	0.0011718943757573748	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999541780950988	WITHOUT_CLASSIFICATION	4.5821904901150404E-5	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999030971612307	WITHOUT_CLASSIFICATION	9.6902838769244E-5	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999030971612307	WITHOUT_CLASSIFICATION	9.6902838769244E-5	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9998495553694917	WITHOUT_CLASSIFICATION	1.5044463050830454E-4	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9998713152435444	WITHOUT_CLASSIFICATION	1.2868475645546126E-4	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9998268954367029	WITHOUT_CLASSIFICATION	1.7310456329714722E-4	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999495081430069	WITHOUT_CLASSIFICATION	5.049185699314822E-5	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.9999703345487422	WITHOUT_CLASSIFICATION	2.9665451257741814E-5	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999056709268179	WITHOUT_CLASSIFICATION	9.432907318202688E-5	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999913811601191	WITHOUT_CLASSIFICATION	8.618839880871791E-6	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9997619321482569	WITHOUT_CLASSIFICATION	2.380678517430288E-4	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999567265707711	WITHOUT_CLASSIFICATION	4.327342922891859E-5	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9995295778989122	WITHOUT_CLASSIFICATION	4.7042210108772973E-4	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9996560463467886	WITHOUT_CLASSIFICATION	3.4395365321136605E-4	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999302773364582	WITHOUT_CLASSIFICATION	6.972266354174605E-5	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999047371707612	WITHOUT_CLASSIFICATION	9.526282923869524E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.999289236920686	WITHOUT_CLASSIFICATION	7.10763079313902E-4	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9998357192104214	WITHOUT_CLASSIFICATION	1.6428078957862334E-4	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9998610300418292	WITHOUT_CLASSIFICATION	1.3896995817069352E-4	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999739133464097	WITHOUT_CLASSIFICATION	2.6086653590287507E-5	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9944375749178866	WITHOUT_CLASSIFICATION	0.005562425082113268	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9998070709461279	WITHOUT_CLASSIFICATION	1.9292905387214868E-4	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9992263511154107	WITHOUT_CLASSIFICATION	7.736488845893248E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999928725152727	WITHOUT_CLASSIFICATION	7.127484727298714E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999567265707711	WITHOUT_CLASSIFICATION	4.327342922891859E-5	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9997812093867393	WITHOUT_CLASSIFICATION	2.187906132606113E-4	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9998945924351441	WITHOUT_CLASSIFICATION	1.0540756485578037E-4	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9998774604545341	WITHOUT_CLASSIFICATION	1.2253954546593245E-4	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9995905899148827	WITHOUT_CLASSIFICATION	4.0941008511721734E-4	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9998990146536029	WITHOUT_CLASSIFICATION	1.009853463972051E-4	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9998327289411854	WITHOUT_CLASSIFICATION	1.6727105881458808E-4	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9996834798084904	WITHOUT_CLASSIFICATION	3.1652019150968624E-4	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9994499767169432	WITHOUT_CLASSIFICATION	5.500232830567645E-4	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9980626407028728	WITHOUT_CLASSIFICATION	0.00193735929712726	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999165291320032	WITHOUT_CLASSIFICATION	8.347086799674574E-5	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999448945594082	WITHOUT_CLASSIFICATION	5.510544059188658E-5	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9997230293395004	WITHOUT_CLASSIFICATION	2.769706604995375E-4	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.999270028301247	WITHOUT_CLASSIFICATION	7.299716987530446E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999553155467464	WITHOUT_CLASSIFICATION	4.468445325350007E-5	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9994499767169432	WITHOUT_CLASSIFICATION	5.500232830567645E-4	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999165291320032	WITHOUT_CLASSIFICATION	8.347086799674574E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999165291320032	WITHOUT_CLASSIFICATION	8.347086799674574E-5	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999448945594082	WITHOUT_CLASSIFICATION	5.510544059188658E-5	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.999953256124336	WITHOUT_CLASSIFICATION	4.674387566392708E-5	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999513776204234	WITHOUT_CLASSIFICATION	4.862237957663E-5	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999513776204234	WITHOUT_CLASSIFICATION	4.862237957663E-5	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9996417800385722	WITHOUT_CLASSIFICATION	3.58219961427908E-4	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9996417800385722	WITHOUT_CLASSIFICATION	3.58219961427908E-4	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999818797330305	WITHOUT_CLASSIFICATION	1.8120266969471455E-5	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999165291320032	WITHOUT_CLASSIFICATION	8.347086799674574E-5	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999165291320032	WITHOUT_CLASSIFICATION	8.347086799674574E-5	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999660067873627	WITHOUT_CLASSIFICATION	3.399321263733667E-5	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999308524287422	WITHOUT_CLASSIFICATION	6.914757125783588E-5	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999342389969734	WITHOUT_CLASSIFICATION	6.576100302661709E-5	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9998048762507199	WITHOUT_CLASSIFICATION	1.9512374927999589E-4	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9998766303342542	WITHOUT_CLASSIFICATION	1.2336966574576214E-4	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9998059765060792	WITHOUT_CLASSIFICATION	1.940234939208481E-4	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.99994207029776	WITHOUT_CLASSIFICATION	5.7929702240074834E-5	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9997719014785973	WITHOUT_CLASSIFICATION	2.280985214028445E-4	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9998674911950904	WITHOUT_CLASSIFICATION	1.3250880490959927E-4	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.99982789978051	WITHOUT_CLASSIFICATION	1.7210021948993093E-4	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9897193010554233	WITHOUT_CLASSIFICATION	0.010280698944576757	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9985642461478872	WITHOUT_CLASSIFICATION	0.001435753852112873	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.9999733776864228	WITHOUT_CLASSIFICATION	2.662231357720397E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9995954840874061	WITHOUT_CLASSIFICATION	4.0451591259392316E-4	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9997969497430735	WITHOUT_CLASSIFICATION	2.0305025692658006E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999928725152727	WITHOUT_CLASSIFICATION	7.127484727298714E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9990857291282131	WITHOUT_CLASSIFICATION	9.142708717868722E-4	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999510529063382	WITHOUT_CLASSIFICATION	4.894709366169749E-5	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999641249718326	WITHOUT_CLASSIFICATION	3.587502816737884E-5	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9988804914125163	WITHOUT_CLASSIFICATION	0.0011195085874837367	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9995597867991254	WITHOUT_CLASSIFICATION	4.402132008746145E-4	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999748962716148	WITHOUT_CLASSIFICATION	2.5103728385238162E-5	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999423915746494	WITHOUT_CLASSIFICATION	5.7608425350727847E-5	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9991093641166364	WITHOUT_CLASSIFICATION	8.906358833635299E-4	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999865294951824	WITHOUT_CLASSIFICATION	1.3470504817500705E-5	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.999449801084927	WITHOUT_CLASSIFICATION	5.50198915073083E-4	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9998104946574483	WITHOUT_CLASSIFICATION	1.895053425517178E-4	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999655041947707	WITHOUT_CLASSIFICATION	3.4495805229229636E-5	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999163781868778	WITHOUT_CLASSIFICATION	8.36218131221318E-5	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9998958274025586	WITHOUT_CLASSIFICATION	1.0417259744148061E-4	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999239621525632	WITHOUT_CLASSIFICATION	7.603784743688534E-5	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9998555023345589	WITHOUT_CLASSIFICATION	1.4449766544115026E-4	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9996120394907526	WITHOUT_CLASSIFICATION	3.8796050924743824E-4	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999302773364582	WITHOUT_CLASSIFICATION	6.972266354174605E-5	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9995607352082652	WITHOUT_CLASSIFICATION	4.39264791734813E-4	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999941360829275	WITHOUT_CLASSIFICATION	5.863917072490691E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999567265707711	WITHOUT_CLASSIFICATION	4.327342922891859E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999567265707711	WITHOUT_CLASSIFICATION	4.327342922891859E-5	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999424405439483	WITHOUT_CLASSIFICATION	5.755945605164626E-5	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999576386737812	WITHOUT_CLASSIFICATION	4.236132621885989E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9998878353453142	WITHOUT_CLASSIFICATION	1.121646546857556E-4	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9998878353453142	WITHOUT_CLASSIFICATION	1.121646546857556E-4	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999057601083914	WITHOUT_CLASSIFICATION	9.423989160857262E-5	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9998878353453142	WITHOUT_CLASSIFICATION	1.121646546857556E-4	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9998878353453142	WITHOUT_CLASSIFICATION	1.121646546857556E-4	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9998878353453142	WITHOUT_CLASSIFICATION	1.121646546857556E-4	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.999904044303045	WITHOUT_CLASSIFICATION	9.595569695494658E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999588712917974	WITHOUT_CLASSIFICATION	4.112870820268613E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9987485217958171	WITHOUT_CLASSIFICATION	0.0012514782041828845	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9987485217958171	WITHOUT_CLASSIFICATION	0.0012514782041828845	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999588712917974	WITHOUT_CLASSIFICATION	4.112870820268613E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999588712917974	WITHOUT_CLASSIFICATION	4.112870820268613E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999588712917974	WITHOUT_CLASSIFICATION	4.112870820268613E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999588712917974	WITHOUT_CLASSIFICATION	4.112870820268613E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999588712917974	WITHOUT_CLASSIFICATION	4.112870820268613E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.999244466206473	WITHOUT_CLASSIFICATION	7.555337935270459E-4	DEFECT
// data	WITHOUT_CLASSIFICATION	0.999244466206473	WITHOUT_CLASSIFICATION	7.555337935270459E-4	DEFECT
// data	WITHOUT_CLASSIFICATION	0.999244466206473	WITHOUT_CLASSIFICATION	7.555337935270459E-4	DEFECT
// data	WITHOUT_CLASSIFICATION	0.999244466206473	WITHOUT_CLASSIFICATION	7.555337935270459E-4	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9953807676820766	WITHOUT_CLASSIFICATION	0.004619232317923435	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999701245121652	WITHOUT_CLASSIFICATION	2.987548783477946E-5	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9994810998498792	WITHOUT_CLASSIFICATION	5.189001501207352E-4	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9996744905554834	WITHOUT_CLASSIFICATION	3.25509444516632E-4	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999496827231088	WITHOUT_CLASSIFICATION	5.031727689120442E-5	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.999933565976364	WITHOUT_CLASSIFICATION	6.643402363603555E-5	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.999933565976364	WITHOUT_CLASSIFICATION	6.643402363603555E-5	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.999933565976364	WITHOUT_CLASSIFICATION	6.643402363603555E-5	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.999933565976364	WITHOUT_CLASSIFICATION	6.643402363603555E-5	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.999933565976364	WITHOUT_CLASSIFICATION	6.643402363603555E-5	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.999933565976364	WITHOUT_CLASSIFICATION	6.643402363603555E-5	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.999933565976364	WITHOUT_CLASSIFICATION	6.643402363603555E-5	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9998664350192064	WITHOUT_CLASSIFICATION	1.3356498079372886E-4	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9998664350192064	WITHOUT_CLASSIFICATION	1.3356498079372886E-4	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.999868276444311	WITHOUT_CLASSIFICATION	1.3172355568903592E-4	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.999868276444311	WITHOUT_CLASSIFICATION	1.3172355568903592E-4	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.999933565976364	WITHOUT_CLASSIFICATION	6.643402363603555E-5	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9997840093727198	WITHOUT_CLASSIFICATION	2.1599062728018317E-4	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9997840093727198	WITHOUT_CLASSIFICATION	2.1599062728018317E-4	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9990922208189074	WITHOUT_CLASSIFICATION	9.07779181092676E-4	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9993739324862528	WITHOUT_CLASSIFICATION	6.260675137472086E-4	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9993848922858264	WITHOUT_CLASSIFICATION	6.151077141737064E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9995341319582336	WITHOUT_CLASSIFICATION	4.6586804176651666E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9995341319582336	WITHOUT_CLASSIFICATION	4.6586804176651666E-4	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9998744745385652	WITHOUT_CLASSIFICATION	1.2552546143484143E-4	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9998781352285573	WITHOUT_CLASSIFICATION	1.2186477144263628E-4	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999450831613421	WITHOUT_CLASSIFICATION	5.491683865788304E-5	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999322432126438	WITHOUT_CLASSIFICATION	6.775678735619137E-5	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9987226270568406	WITHOUT_CLASSIFICATION	0.0012773729431594166	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9938915003884683	WITHOUT_CLASSIFICATION	0.006108499611531674	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9998867977288142	WITHOUT_CLASSIFICATION	1.1320227118583566E-4	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9994562605427451	WITHOUT_CLASSIFICATION	5.437394572550751E-4	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9995119172793917	WITHOUT_CLASSIFICATION	4.880827206083482E-4	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9996878851128669	WITHOUT_CLASSIFICATION	3.1211488713317785E-4	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9999924488884543	WITHOUT_CLASSIFICATION	7.551111545728857E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9998783750507982	WITHOUT_CLASSIFICATION	1.2162494920167394E-4	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999569109126174	WITHOUT_CLASSIFICATION	4.308908738259194E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999359058913061	WITHOUT_CLASSIFICATION	6.409410869392968E-5	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999359058913061	WITHOUT_CLASSIFICATION	6.409410869392968E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999359058913061	WITHOUT_CLASSIFICATION	6.409410869392968E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999359058913061	WITHOUT_CLASSIFICATION	6.409410869392968E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999359058913061	WITHOUT_CLASSIFICATION	6.409410869392968E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999359058913061	WITHOUT_CLASSIFICATION	6.409410869392968E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9997994221128181	WITHOUT_CLASSIFICATION	2.0057788718188518E-4	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999628473032638	WITHOUT_CLASSIFICATION	3.715269673625547E-5	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9960862107165857	WITHOUT_CLASSIFICATION	0.003913789283414389	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9998135447956787	WITHOUT_CLASSIFICATION	1.8645520432113247E-4	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9996726970799106	WITHOUT_CLASSIFICATION	3.2730292008936057E-4	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9996726970799106	WITHOUT_CLASSIFICATION	3.2730292008936057E-4	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9997533501517092	WITHOUT_CLASSIFICATION	2.466498482908125E-4	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9997082941195062	WITHOUT_CLASSIFICATION	2.917058804938759E-4	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9997790862066013	WITHOUT_CLASSIFICATION	2.2091379339865202E-4	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9998234970094318	WITHOUT_CLASSIFICATION	1.765029905681276E-4	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.999776841414781	WITHOUT_CLASSIFICATION	2.2315858521906355E-4	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999300122383352	WITHOUT_CLASSIFICATION	6.998776166475444E-5	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999300122383352	WITHOUT_CLASSIFICATION	6.998776166475444E-5	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9995044961163467	WITHOUT_CLASSIFICATION	4.955038836533172E-4	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9995044961163467	WITHOUT_CLASSIFICATION	4.955038836533172E-4	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9997082941195062	WITHOUT_CLASSIFICATION	2.917058804938759E-4	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9997790862066013	WITHOUT_CLASSIFICATION	2.2091379339865202E-4	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9998234970094318	WITHOUT_CLASSIFICATION	1.765029905681276E-4	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9998652181660355	WITHOUT_CLASSIFICATION	1.3478183396458895E-4	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9993664021188943	WITHOUT_CLASSIFICATION	6.335978811058516E-4	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9998694294547189	WITHOUT_CLASSIFICATION	1.3057054528116713E-4	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9998694294547189	WITHOUT_CLASSIFICATION	1.3057054528116713E-4	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9996039143880417	WITHOUT_CLASSIFICATION	3.9608561195830864E-4	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9994145255674813	WITHOUT_CLASSIFICATION	5.854744325186419E-4	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999381172694628	WITHOUT_CLASSIFICATION	6.188273053727201E-5	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9998840140654597	WITHOUT_CLASSIFICATION	1.1598593454034516E-4	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999546960103837	WITHOUT_CLASSIFICATION	4.530398961633543E-5	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9998764957794704	WITHOUT_CLASSIFICATION	1.2350422052970637E-4	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999466737651875	WITHOUT_CLASSIFICATION	5.332623481255304E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999737791405316	WITHOUT_CLASSIFICATION	2.6220859468321026E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999737791405316	WITHOUT_CLASSIFICATION	2.6220859468321026E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998126198413588	WITHOUT_CLASSIFICATION	1.8738015864124658E-4	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9978625832492181	WITHOUT_CLASSIFICATION	0.002137416750781892	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9998085012948017	WITHOUT_CLASSIFICATION	1.914987051983712E-4	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9995272999194361	WITHOUT_CLASSIFICATION	4.7270008056384867E-4	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9996724154951458	WITHOUT_CLASSIFICATION	3.275845048540979E-4	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999086234348804	WITHOUT_CLASSIFICATION	9.137656511959028E-5	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999781052628773	WITHOUT_CLASSIFICATION	2.1894737122703216E-5	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9998802652812628	WITHOUT_CLASSIFICATION	1.1973471873718524E-4	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999142244276505	WITHOUT_CLASSIFICATION	8.577557234950087E-5	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999838163311141	WITHOUT_CLASSIFICATION	1.6183668885821955E-5	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9998318809234586	WITHOUT_CLASSIFICATION	1.6811907654147636E-4	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9996434431590416	WITHOUT_CLASSIFICATION	3.5655684095841023E-4	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9998615823279464	WITHOUT_CLASSIFICATION	1.3841767205348247E-4	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9989848882106277	WITHOUT_CLASSIFICATION	0.0010151117893722286	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9989326079470711	WITHOUT_CLASSIFICATION	0.0010673920529289274	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999419054712865	WITHOUT_CLASSIFICATION	5.8094528713591865E-5	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999880005148523	WITHOUT_CLASSIFICATION	1.1999485147617053E-5	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999811110136356	WITHOUT_CLASSIFICATION	1.8888986364386845E-5	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9998952887022918	WITHOUT_CLASSIFICATION	1.0471129770816981E-4	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.999978213274646	WITHOUT_CLASSIFICATION	2.1786725354066393E-5	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9998503058343531	WITHOUT_CLASSIFICATION	1.496941656468273E-4	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9948005755960417	WITHOUT_CLASSIFICATION	0.005199424403958327	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9998711070323718	WITHOUT_CLASSIFICATION	1.2889296762808912E-4	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999363075430235	WITHOUT_CLASSIFICATION	6.369245697651524E-5	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9998782159043715	WITHOUT_CLASSIFICATION	1.2178409562847692E-4	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9998956026079235	WITHOUT_CLASSIFICATION	1.0439739207648129E-4	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9997746260318374	WITHOUT_CLASSIFICATION	2.2537396816258316E-4	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9999273595570685	WITHOUT_CLASSIFICATION	7.264044293152536E-5	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9935822659748655	WITHOUT_CLASSIFICATION	0.006417734025134354	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998114479880362	WITHOUT_CLASSIFICATION	1.885520119638588E-4	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999742333622004	WITHOUT_CLASSIFICATION	2.57666377996551E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999282674378495	WITHOUT_CLASSIFICATION	7.173256215047387E-5	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9998514733102536	WITHOUT_CLASSIFICATION	1.485266897464598E-4	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999513476653026	WITHOUT_CLASSIFICATION	4.865233469737772E-5	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9998929662807797	WITHOUT_CLASSIFICATION	1.0703371922025604E-4	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9998929662807797	WITHOUT_CLASSIFICATION	1.0703371922025604E-4	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9998929662807797	WITHOUT_CLASSIFICATION	1.0703371922025604E-4	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9998929662807797	WITHOUT_CLASSIFICATION	1.0703371922025604E-4	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9998929662807797	WITHOUT_CLASSIFICATION	1.0703371922025604E-4	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9998689474916131	WITHOUT_CLASSIFICATION	1.3105250838681354E-4	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9998689474916131	WITHOUT_CLASSIFICATION	1.3105250838681354E-4	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9998689474916131	WITHOUT_CLASSIFICATION	1.3105250838681354E-4	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9999208834190688	WITHOUT_CLASSIFICATION	7.91165809311682E-5	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999208834190688	WITHOUT_CLASSIFICATION	7.91165809311682E-5	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999654871917499	WITHOUT_CLASSIFICATION	3.451280825003777E-5	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999318177433728	WITHOUT_CLASSIFICATION	6.818225662715345E-5	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999003812583969	WITHOUT_CLASSIFICATION	9.961874160316659E-5	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9999161794884596	WITHOUT_CLASSIFICATION	8.382051154034191E-5	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9997906255816393	WITHOUT_CLASSIFICATION	2.0937441836054918E-4	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999495455476411	WITHOUT_CLASSIFICATION	5.0454452358879184E-5	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9998664350192064	WITHOUT_CLASSIFICATION	1.3356498079372886E-4	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.9998664350192064	WITHOUT_CLASSIFICATION	1.3356498079372886E-4	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9998664350192064	WITHOUT_CLASSIFICATION	1.3356498079372886E-4	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9998664350192064	WITHOUT_CLASSIFICATION	1.3356498079372886E-4	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.999874198655015	WITHOUT_CLASSIFICATION	1.2580134498496435E-4	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9996726970799106	WITHOUT_CLASSIFICATION	3.2730292008936057E-4	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999456637220893	WITHOUT_CLASSIFICATION	5.4336277910663316E-5	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9995061501046588	WITHOUT_CLASSIFICATION	4.938498953411819E-4	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9995628958296768	WITHOUT_CLASSIFICATION	4.371041703231643E-4	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9998914683721926	WITHOUT_CLASSIFICATION	1.0853162780737031E-4	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9998914683721926	WITHOUT_CLASSIFICATION	1.0853162780737031E-4	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9998914683721926	WITHOUT_CLASSIFICATION	1.0853162780737031E-4	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9998914683721926	WITHOUT_CLASSIFICATION	1.0853162780737031E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9995341319582336	WITHOUT_CLASSIFICATION	4.6586804176651666E-4	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9998908356863224	WITHOUT_CLASSIFICATION	1.0916431367757805E-4	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9998908356863224	WITHOUT_CLASSIFICATION	1.0916431367757805E-4	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9998914683721926	WITHOUT_CLASSIFICATION	1.0853162780737031E-4	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9998908356863224	WITHOUT_CLASSIFICATION	1.0916431367757805E-4	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9998908356863224	WITHOUT_CLASSIFICATION	1.0916431367757805E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9993981427690989	WITHOUT_CLASSIFICATION	6.018572309010275E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9993981427690989	WITHOUT_CLASSIFICATION	6.018572309010275E-4	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9996310131452079	WITHOUT_CLASSIFICATION	3.6898685479214453E-4	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9996310131452079	WITHOUT_CLASSIFICATION	3.6898685479214453E-4	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.999965218142982	WITHOUT_CLASSIFICATION	3.4781857017997264E-5	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9994997113179147	WITHOUT_CLASSIFICATION	5.002886820853279E-4	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9996932948892837	WITHOUT_CLASSIFICATION	3.067051107163236E-4	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9996932948892837	WITHOUT_CLASSIFICATION	3.067051107163236E-4	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999710906467194	WITHOUT_CLASSIFICATION	2.8909353280568835E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9995685469688832	WITHOUT_CLASSIFICATION	4.3145303111684683E-4	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.999633962828844	WITHOUT_CLASSIFICATION	3.660371711560802E-4	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.99963154356862	WITHOUT_CLASSIFICATION	3.6845643137987206E-4	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.999428150204186	WITHOUT_CLASSIFICATION	5.718497958140294E-4	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9991956452438256	WITHOUT_CLASSIFICATION	8.043547561743518E-4	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9995041671761575	WITHOUT_CLASSIFICATION	4.958328238424757E-4	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9996791446924274	WITHOUT_CLASSIFICATION	3.2085530757264405E-4	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9996348256821396	WITHOUT_CLASSIFICATION	3.6517431786043937E-4	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9998578336336318	WITHOUT_CLASSIFICATION	1.421663663681466E-4	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999493070596766	WITHOUT_CLASSIFICATION	5.06929403233572E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9995685469688832	WITHOUT_CLASSIFICATION	4.3145303111684683E-4	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.999633962828844	WITHOUT_CLASSIFICATION	3.660371711560802E-4	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.99963154356862	WITHOUT_CLASSIFICATION	3.6845643137987206E-4	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.999428150204186	WITHOUT_CLASSIFICATION	5.718497958140294E-4	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9991956452438256	WITHOUT_CLASSIFICATION	8.043547561743518E-4	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9995739906923555	WITHOUT_CLASSIFICATION	4.260093076444409E-4	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9996458939167415	WITHOUT_CLASSIFICATION	3.5410608325843674E-4	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9995015260092197	WITHOUT_CLASSIFICATION	4.984739907803791E-4	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9997608651720069	WITHOUT_CLASSIFICATION	2.3913482799298334E-4	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9996274120553641	WITHOUT_CLASSIFICATION	3.725879446358367E-4	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9994758812829208	WITHOUT_CLASSIFICATION	5.241187170792111E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9995759503652677	WITHOUT_CLASSIFICATION	4.2404963473235177E-4	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.99956433651241	WITHOUT_CLASSIFICATION	4.3566348759012846E-4	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9996475229463766	WITHOUT_CLASSIFICATION	3.524770536234125E-4	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9998517522198805	WITHOUT_CLASSIFICATION	1.4824778011949296E-4	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999590458733039	WITHOUT_CLASSIFICATION	4.0954126696151476E-5	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999590458733039	WITHOUT_CLASSIFICATION	4.0954126696151476E-5	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999515723444614	WITHOUT_CLASSIFICATION	4.84276555385998E-5	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999627231663807	WITHOUT_CLASSIFICATION	3.727683361942033E-5	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9998623992680342	WITHOUT_CLASSIFICATION	1.3760073196568648E-4	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9998623992680342	WITHOUT_CLASSIFICATION	1.3760073196568648E-4	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999362232368458	WITHOUT_CLASSIFICATION	6.37767631541304E-5	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999534516612976	WITHOUT_CLASSIFICATION	4.654833870232095E-5	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.999951220672225	WITHOUT_CLASSIFICATION	4.877932777499955E-5	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9998704887411031	WITHOUT_CLASSIFICATION	1.295112588969845E-4	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999107016360947	WITHOUT_CLASSIFICATION	8.929836390515713E-5	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.9999320308065291	WITHOUT_CLASSIFICATION	6.796919347092827E-5	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999111346632319	WITHOUT_CLASSIFICATION	8.886533676803084E-5	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999387278829099	WITHOUT_CLASSIFICATION	6.12721170900752E-5	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999533632161008	WITHOUT_CLASSIFICATION	4.663678389924665E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9982488748913294	WITHOUT_CLASSIFICATION	0.0017511251086705492	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999493070596766	WITHOUT_CLASSIFICATION	5.06929403233572E-5	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999493070596766	WITHOUT_CLASSIFICATION	5.06929403233572E-5	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9998813608733644	WITHOUT_CLASSIFICATION	1.186391266355252E-4	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999648537094279	WITHOUT_CLASSIFICATION	3.5146290572133485E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9996348256821396	WITHOUT_CLASSIFICATION	3.6517431786043937E-4	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9993449380085493	WITHOUT_CLASSIFICATION	6.5506199145061E-4	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999042726789383	WITHOUT_CLASSIFICATION	9.572732106170713E-5	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999440877424975	WITHOUT_CLASSIFICATION	5.5912257502521174E-5	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999042726789383	WITHOUT_CLASSIFICATION	9.572732106170713E-5	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.9999143831560425	WITHOUT_CLASSIFICATION	8.561684395753339E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999144265224398	WITHOUT_CLASSIFICATION	8.557347756029528E-5	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.9999260529613473	WITHOUT_CLASSIFICATION	7.394703865271906E-5	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999411954861649	WITHOUT_CLASSIFICATION	5.8804513835117116E-5	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999491851451507	WITHOUT_CLASSIFICATION	5.081485484928336E-5	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.9998737503204097	WITHOUT_CLASSIFICATION	1.2624967959030703E-4	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9993814006664913	WITHOUT_CLASSIFICATION	6.185993335088122E-4	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.999791172018709	WITHOUT_CLASSIFICATION	2.088279812909223E-4	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9998679649801461	WITHOUT_CLASSIFICATION	1.320350198539769E-4	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999363815661039	WITHOUT_CLASSIFICATION	6.361843389612498E-5	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999321091767137	WITHOUT_CLASSIFICATION	6.789082328634683E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9988970927257838	WITHOUT_CLASSIFICATION	0.0011029072742162265	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9988970927257838	WITHOUT_CLASSIFICATION	0.0011029072742162265	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9996304692391567	WITHOUT_CLASSIFICATION	3.695307608433064E-4	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999125135038135	WITHOUT_CLASSIFICATION	8.748649618653513E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999111166948529	WITHOUT_CLASSIFICATION	8.888330514713602E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9996402390791154	WITHOUT_CLASSIFICATION	3.597609208846352E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9995077235645509	WITHOUT_CLASSIFICATION	4.9227643544908E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9995077235645509	WITHOUT_CLASSIFICATION	4.9227643544908E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9995077235645509	WITHOUT_CLASSIFICATION	4.9227643544908E-4	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999341699534466	WITHOUT_CLASSIFICATION	6.583004655330534E-5	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9986066442565932	WITHOUT_CLASSIFICATION	0.0013933557434067376	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9988308312458424	WITHOUT_CLASSIFICATION	0.00116916875415763	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9988308312458424	WITHOUT_CLASSIFICATION	0.00116916875415763	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9986152628223667	WITHOUT_CLASSIFICATION	0.0013847371776333553	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9992449345494426	WITHOUT_CLASSIFICATION	7.550654505573454E-4	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9998810399452592	WITHOUT_CLASSIFICATION	1.1896005474077737E-4	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9998274003601555	WITHOUT_CLASSIFICATION	1.7259963984449266E-4	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9998692911549023	WITHOUT_CLASSIFICATION	1.3070884509769332E-4	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9998669516235392	WITHOUT_CLASSIFICATION	1.3304837646077407E-4	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9998992440964514	WITHOUT_CLASSIFICATION	1.0075590354863381E-4	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.999958685691037	WITHOUT_CLASSIFICATION	4.1314308963094784E-5	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9998810399452592	WITHOUT_CLASSIFICATION	1.1896005474077737E-4	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999025064780735	WITHOUT_CLASSIFICATION	9.749352192653511E-5	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9998778170837229	WITHOUT_CLASSIFICATION	1.2218291627715195E-4	DEFECT
//key	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999368972162427	WITHOUT_CLASSIFICATION	6.310278375733767E-5	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9998739286475794	WITHOUT_CLASSIFICATION	1.2607135242063175E-4	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999427938359021	WITHOUT_CLASSIFICATION	5.720616409778935E-5	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999427938359021	WITHOUT_CLASSIFICATION	5.720616409778935E-5	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999557750651935	WITHOUT_CLASSIFICATION	4.4224934806502824E-5	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999279647037015	WITHOUT_CLASSIFICATION	7.203529629850873E-5	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999506179825184	WITHOUT_CLASSIFICATION	4.938201748152458E-5	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999506179825184	WITHOUT_CLASSIFICATION	4.938201748152458E-5	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999298557937414	WITHOUT_CLASSIFICATION	7.014420625860034E-5	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999337936385285	WITHOUT_CLASSIFICATION	6.620636147148738E-5	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999337936385285	WITHOUT_CLASSIFICATION	6.620636147148738E-5	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999696938392855	WITHOUT_CLASSIFICATION	3.0306160714530443E-5	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999672569948186	WITHOUT_CLASSIFICATION	3.2743005181471E-5	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.999973050936367	WITHOUT_CLASSIFICATION	2.694906363291537E-5	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999693721208885	WITHOUT_CLASSIFICATION	3.062787911154128E-5	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999111932725829	WITHOUT_CLASSIFICATION	8.88067274171101E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9997969497430735	WITHOUT_CLASSIFICATION	2.0305025692658006E-4	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9997969497430735	WITHOUT_CLASSIFICATION	2.0305025692658006E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999928725152727	WITHOUT_CLASSIFICATION	7.127484727298714E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9995597867991254	WITHOUT_CLASSIFICATION	4.402132008746145E-4	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999928725152727	WITHOUT_CLASSIFICATION	7.127484727298714E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999928725152727	WITHOUT_CLASSIFICATION	7.127484727298714E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.999928725152727	WITHOUT_CLASSIFICATION	7.127484727298714E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9982488748913294	WITHOUT_CLASSIFICATION	0.0017511251086705492	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999637887524041	WITHOUT_CLASSIFICATION	3.621124759597978E-5	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.999911701418426	WITHOUT_CLASSIFICATION	8.82985815739016E-5	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999774263808235	WITHOUT_CLASSIFICATION	2.257361917643468E-5	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9997823636967427	WITHOUT_CLASSIFICATION	2.176363032574213E-4	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999061997104762	WITHOUT_CLASSIFICATION	9.380028952383269E-5	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9476154483401017	WITHOUT_CLASSIFICATION	0.05238455165989838	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999111932725829	WITHOUT_CLASSIFICATION	8.88067274171101E-5	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9997823636967427	WITHOUT_CLASSIFICATION	2.176363032574213E-4	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9998769699007516	WITHOUT_CLASSIFICATION	1.2303009924839503E-4	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9999111932725829	WITHOUT_CLASSIFICATION	8.88067274171101E-5	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9997823636967427	WITHOUT_CLASSIFICATION	2.176363032574213E-4	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9998412979741004	WITHOUT_CLASSIFICATION	1.5870202589958053E-4	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999493070596766	WITHOUT_CLASSIFICATION	5.06929403233572E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999493070596766	WITHOUT_CLASSIFICATION	5.06929403233572E-5	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9982488748913294	WITHOUT_CLASSIFICATION	0.0017511251086705492	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999493070596766	WITHOUT_CLASSIFICATION	5.06929403233572E-5	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999493070596766	WITHOUT_CLASSIFICATION	5.06929403233572E-5	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9998243683644864	WITHOUT_CLASSIFICATION	1.7563163551361814E-4	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9998813608733644	WITHOUT_CLASSIFICATION	1.186391266355252E-4	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9993814006664913	WITHOUT_CLASSIFICATION	6.185993335088122E-4	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9998191675237673	WITHOUT_CLASSIFICATION	1.8083247623275223E-4	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9988970927257838	WITHOUT_CLASSIFICATION	0.0011029072742162265	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9996304692391567	WITHOUT_CLASSIFICATION	3.695307608433064E-4	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9996402390791154	WITHOUT_CLASSIFICATION	3.597609208846352E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9995077235645509	WITHOUT_CLASSIFICATION	4.9227643544908E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9995077235645509	WITHOUT_CLASSIFICATION	4.9227643544908E-4	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999341699534466	WITHOUT_CLASSIFICATION	6.583004655330534E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9988308312458424	WITHOUT_CLASSIFICATION	0.00116916875415763	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9988308312458424	WITHOUT_CLASSIFICATION	0.00116916875415763	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9986152628223667	WITHOUT_CLASSIFICATION	0.0013847371776333553	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9992449345494426	WITHOUT_CLASSIFICATION	7.550654505573454E-4	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999266816004566	WITHOUT_CLASSIFICATION	7.331839954335325E-5	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999484769913601	WITHOUT_CLASSIFICATION	5.152300863992352E-5	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9998738878820173	WITHOUT_CLASSIFICATION	1.2611211798275532E-4	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9998810399452592	WITHOUT_CLASSIFICATION	1.1896005474077737E-4	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9998115680902954	WITHOUT_CLASSIFICATION	1.8843190970469303E-4	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999815821213124	WITHOUT_CLASSIFICATION	1.8417878687546765E-5	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.999709566627288	WITHOUT_CLASSIFICATION	2.904333727119239E-4	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999495057047241	WITHOUT_CLASSIFICATION	5.049429527597508E-5	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999380048387126	WITHOUT_CLASSIFICATION	6.199516128734637E-5	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999544077404652	WITHOUT_CLASSIFICATION	4.559225953477867E-5	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999515668491054	WITHOUT_CLASSIFICATION	4.843315089468194E-5	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999341419363077	WITHOUT_CLASSIFICATION	6.585806369234668E-5	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.999824973818113	WITHOUT_CLASSIFICATION	1.7502618188695187E-4	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9998712790222257	WITHOUT_CLASSIFICATION	1.2872097777438216E-4	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9998632590200771	WITHOUT_CLASSIFICATION	1.3674097992284512E-4	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9998140692917378	WITHOUT_CLASSIFICATION	1.859307082622632E-4	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999493070596766	WITHOUT_CLASSIFICATION	5.06929403233572E-5	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9995192780293435	WITHOUT_CLASSIFICATION	4.807219706565916E-4	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9993848922858264	WITHOUT_CLASSIFICATION	6.151077141737064E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9995341319582336	WITHOUT_CLASSIFICATION	4.6586804176651666E-4	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999632014251442	WITHOUT_CLASSIFICATION	3.679857485582539E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999111166948529	WITHOUT_CLASSIFICATION	8.888330514713602E-5	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9986066442565932	WITHOUT_CLASSIFICATION	0.0013933557434067376	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9985150867353403	WITHOUT_CLASSIFICATION	0.0014849132646596623	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9995710317176899	WITHOUT_CLASSIFICATION	4.289682823100863E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999404807249476	WITHOUT_CLASSIFICATION	5.9519275052418745E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999738704379217	WITHOUT_CLASSIFICATION	2.6129562078258933E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999738704379217	WITHOUT_CLASSIFICATION	2.6129562078258933E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999738704379217	WITHOUT_CLASSIFICATION	2.6129562078258933E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999738704379217	WITHOUT_CLASSIFICATION	2.6129562078258933E-5	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9998094300094573	WITHOUT_CLASSIFICATION	1.905699905427245E-4	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9996035342981577	WITHOUT_CLASSIFICATION	3.9646570184219686E-4	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999994914419466	WITHOUT_CLASSIFICATION	5.085580534082927E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999994914419466	WITHOUT_CLASSIFICATION	5.085580534082927E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999994914419466	WITHOUT_CLASSIFICATION	5.085580534082927E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999994914419466	WITHOUT_CLASSIFICATION	5.085580534082927E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999994914419466	WITHOUT_CLASSIFICATION	5.085580534082927E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999994914419466	WITHOUT_CLASSIFICATION	5.085580534082927E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9996035342981577	WITHOUT_CLASSIFICATION	3.9646570184219686E-4	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9996035342981577	WITHOUT_CLASSIFICATION	3.9646570184219686E-4	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9998973760672013	WITHOUT_CLASSIFICATION	1.0262393279858731E-4	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.9998812413942163	WITHOUT_CLASSIFICATION	1.187586057837703E-4	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.999913005106167	WITHOUT_CLASSIFICATION	8.699489383301218E-5	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9997756521586929	WITHOUT_CLASSIFICATION	2.2434784130717455E-4	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9998140692917378	WITHOUT_CLASSIFICATION	1.859307082622632E-4	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9998140692917378	WITHOUT_CLASSIFICATION	1.859307082622632E-4	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9995215151754907	WITHOUT_CLASSIFICATION	4.784848245093009E-4	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999050282890195	WITHOUT_CLASSIFICATION	9.497171098052402E-5	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9998816433003008	WITHOUT_CLASSIFICATION	1.1835669969917631E-4	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9998742689666484	WITHOUT_CLASSIFICATION	1.2573103335159586E-4	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999676971118849	WITHOUT_CLASSIFICATION	3.2302888114993294E-5	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999163395717181	WITHOUT_CLASSIFICATION	8.366042828192798E-5	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9998909818725954	WITHOUT_CLASSIFICATION	1.090181274047175E-4	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9996176350414769	WITHOUT_CLASSIFICATION	3.823649585230909E-4	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9989124929960059	WITHOUT_CLASSIFICATION	0.0010875070039940572	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.999572127340101	WITHOUT_CLASSIFICATION	4.2787265989902414E-4	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9993848922858264	WITHOUT_CLASSIFICATION	6.151077141737064E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9995341319582336	WITHOUT_CLASSIFICATION	4.6586804176651666E-4	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999404807249476	WITHOUT_CLASSIFICATION	5.9519275052418745E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999738704379217	WITHOUT_CLASSIFICATION	2.6129562078258933E-5	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999738704379217	WITHOUT_CLASSIFICATION	2.6129562078258933E-5	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999994914419466	WITHOUT_CLASSIFICATION	5.085580534082927E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999994914419466	WITHOUT_CLASSIFICATION	5.085580534082927E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.999994914419466	WITHOUT_CLASSIFICATION	5.085580534082927E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9996035342981577	WITHOUT_CLASSIFICATION	3.9646570184219686E-4	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9995215151754907	WITHOUT_CLASSIFICATION	4.784848245093009E-4	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999676971118849	WITHOUT_CLASSIFICATION	3.2302888114993294E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999676971118849	WITHOUT_CLASSIFICATION	3.2302888114993294E-5	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999163395717181	WITHOUT_CLASSIFICATION	8.366042828192798E-5	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.999998568800732	WITHOUT_CLASSIFICATION	1.4311992680124732E-6	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999909090469166	WITHOUT_CLASSIFICATION	9.090953083488412E-6	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9995808229596943	WITHOUT_CLASSIFICATION	4.191770403056526E-4	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999129704390152	WITHOUT_CLASSIFICATION	8.702956098479307E-5	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999948764493328	WITHOUT_CLASSIFICATION	5.123550667189812E-6	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9989008012163646	WITHOUT_CLASSIFICATION	0.0010991987836354515	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9995710962163694	WITHOUT_CLASSIFICATION	4.289037836305302E-4	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999130337549912	WITHOUT_CLASSIFICATION	8.696624500884074E-5	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999130337549912	WITHOUT_CLASSIFICATION	8.696624500884074E-5	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999130337549912	WITHOUT_CLASSIFICATION	8.696624500884074E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999488364427557	WITHOUT_CLASSIFICATION	5.116355724424843E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999488364427557	WITHOUT_CLASSIFICATION	5.116355724424843E-5	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9998997325540954	WITHOUT_CLASSIFICATION	1.0026744590461082E-4	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9998997325540954	WITHOUT_CLASSIFICATION	1.0026744590461082E-4	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9998997325540954	WITHOUT_CLASSIFICATION	1.0026744590461082E-4	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9998997325540954	WITHOUT_CLASSIFICATION	1.0026744590461082E-4	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9995945069901627	WITHOUT_CLASSIFICATION	4.054930098372316E-4	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9995945069901627	WITHOUT_CLASSIFICATION	4.054930098372316E-4	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9995945069901627	WITHOUT_CLASSIFICATION	4.054930098372316E-4	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9995945069901627	WITHOUT_CLASSIFICATION	4.054930098372316E-4	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9995521910675793	WITHOUT_CLASSIFICATION	4.47808932420693E-4	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9995521910675793	WITHOUT_CLASSIFICATION	4.47808932420693E-4	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9995521910675793	WITHOUT_CLASSIFICATION	4.47808932420693E-4	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9995521910675793	WITHOUT_CLASSIFICATION	4.47808932420693E-4	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9995521910675793	WITHOUT_CLASSIFICATION	4.47808932420693E-4	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9997957261534768	WITHOUT_CLASSIFICATION	2.0427384652322092E-4	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9997957261534768	WITHOUT_CLASSIFICATION	2.0427384652322092E-4	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9997957261534768	WITHOUT_CLASSIFICATION	2.0427384652322092E-4	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9997957261534768	WITHOUT_CLASSIFICATION	2.0427384652322092E-4	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.999795454824735	WITHOUT_CLASSIFICATION	2.0454517526499857E-4	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.999795454824735	WITHOUT_CLASSIFICATION	2.0454517526499857E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999488364427557	WITHOUT_CLASSIFICATION	5.116355724424843E-5	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9998997325540954	WITHOUT_CLASSIFICATION	1.0026744590461082E-4	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9995945069901627	WITHOUT_CLASSIFICATION	4.054930098372316E-4	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9995521910675793	WITHOUT_CLASSIFICATION	4.47808932420693E-4	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9997957261534768	WITHOUT_CLASSIFICATION	2.0427384652322092E-4	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.999795454824735	WITHOUT_CLASSIFICATION	2.0454517526499857E-4	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9997225319332823	WITHOUT_CLASSIFICATION	2.7746806671765306E-4	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.999721382724486	WITHOUT_CLASSIFICATION	2.7861727551400077E-4	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.999969029266206	WITHOUT_CLASSIFICATION	3.097073379399988E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9995360293963822	WITHOUT_CLASSIFICATION	4.639706036177653E-4	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9995360293963822	WITHOUT_CLASSIFICATION	4.639706036177653E-4	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.999915041110863	WITHOUT_CLASSIFICATION	8.495888913691494E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.999915041110863	WITHOUT_CLASSIFICATION	8.495888913691494E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.999915041110863	WITHOUT_CLASSIFICATION	8.495888913691494E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9956269796883511	WITHOUT_CLASSIFICATION	0.004373020311648852	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.999677208656507	WITHOUT_CLASSIFICATION	3.227913434930436E-4	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9998462243979817	WITHOUT_CLASSIFICATION	1.5377560201837814E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9995360293963822	WITHOUT_CLASSIFICATION	4.639706036177653E-4	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.999915041110863	WITHOUT_CLASSIFICATION	8.495888913691494E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999024487769376	WITHOUT_CLASSIFICATION	9.755122306231988E-5	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9991570136236293	WITHOUT_CLASSIFICATION	8.429863763707275E-4	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999467398752275	WITHOUT_CLASSIFICATION	5.326012477237618E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999467398752275	WITHOUT_CLASSIFICATION	5.326012477237618E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999467398752275	WITHOUT_CLASSIFICATION	5.326012477237618E-5	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999004928507009	WITHOUT_CLASSIFICATION	9.950714929906352E-5	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999024487769376	WITHOUT_CLASSIFICATION	9.755122306231988E-5	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999592963336587	WITHOUT_CLASSIFICATION	4.07036663414714E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999871147485762	WITHOUT_CLASSIFICATION	1.2885251423843692E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999871147485762	WITHOUT_CLASSIFICATION	1.2885251423843692E-5	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9991272468485494	WITHOUT_CLASSIFICATION	8.727531514505075E-4	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.999989390330959	WITHOUT_CLASSIFICATION	1.0609669040897598E-5	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999753799382822	WITHOUT_CLASSIFICATION	2.4620061717759722E-5	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999265568234335	WITHOUT_CLASSIFICATION	7.34431765665962E-5	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999082482319943	WITHOUT_CLASSIFICATION	9.175176800569499E-5	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9998316329440695	WITHOUT_CLASSIFICATION	1.6836705593046625E-4	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.999988368546062	WITHOUT_CLASSIFICATION	1.1631453938110151E-5	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999409644385608	WITHOUT_CLASSIFICATION	5.903556143917313E-5	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999695166130046	WITHOUT_CLASSIFICATION	3.048338699543007E-5	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9995597867991254	WITHOUT_CLASSIFICATION	4.402132008746145E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9995341319582336	WITHOUT_CLASSIFICATION	4.6586804176651666E-4	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999162885049707	WITHOUT_CLASSIFICATION	8.371149502925649E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999467398752275	WITHOUT_CLASSIFICATION	5.326012477237618E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999467398752275	WITHOUT_CLASSIFICATION	5.326012477237618E-5	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999467398752275	WITHOUT_CLASSIFICATION	5.326012477237618E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999871147485762	WITHOUT_CLASSIFICATION	1.2885251423843692E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999871147485762	WITHOUT_CLASSIFICATION	1.2885251423843692E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999871147485762	WITHOUT_CLASSIFICATION	1.2885251423843692E-5	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.999988368546062	WITHOUT_CLASSIFICATION	1.1631453938110151E-5	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999409644385608	WITHOUT_CLASSIFICATION	5.903556143917313E-5	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9501726445133934	WITHOUT_CLASSIFICATION	0.049827355486606585	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9998078734896361	WITHOUT_CLASSIFICATION	1.921265103638652E-4	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9998078734896361	WITHOUT_CLASSIFICATION	1.921265103638652E-4	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999533732581195	WITHOUT_CLASSIFICATION	4.662674188059448E-5	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999728121499972	WITHOUT_CLASSIFICATION	2.7187850002676368E-5	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9997877876899204	WITHOUT_CLASSIFICATION	2.1221231007965144E-4	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9993058099751401	WITHOUT_CLASSIFICATION	6.941900248598633E-4	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9995074098929833	WITHOUT_CLASSIFICATION	4.925901070166991E-4	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9995037897999468	WITHOUT_CLASSIFICATION	4.96210200053282E-4	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999044113392297	WITHOUT_CLASSIFICATION	9.558866077033257E-5	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9993480390703038	WITHOUT_CLASSIFICATION	6.519609296962603E-4	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999565099073736	WITHOUT_CLASSIFICATION	4.349009262644366E-5	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999534516612976	WITHOUT_CLASSIFICATION	4.654833870232095E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999592963336587	WITHOUT_CLASSIFICATION	4.07036663414714E-5	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9970176181800456	WITHOUT_CLASSIFICATION	0.002982381819954325	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9993480390703038	WITHOUT_CLASSIFICATION	6.519609296962603E-4	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9969648489996625	WITHOUT_CLASSIFICATION	0.00303515100033756	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999407459013252	WITHOUT_CLASSIFICATION	5.925409867480222E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999407459013252	WITHOUT_CLASSIFICATION	5.925409867480222E-5	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9947160007561692	WITHOUT_CLASSIFICATION	0.005283999243830937	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9947160007561692	WITHOUT_CLASSIFICATION	0.005283999243830937	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999515842112939	WITHOUT_CLASSIFICATION	4.841578870609157E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9998687942661896	WITHOUT_CLASSIFICATION	1.3120573381047976E-4	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999508536454406	WITHOUT_CLASSIFICATION	4.9146354559318944E-5	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9998963815077881	WITHOUT_CLASSIFICATION	1.0361849221178348E-4	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999685599901796	WITHOUT_CLASSIFICATION	3.1440009820343124E-5	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999685599901796	WITHOUT_CLASSIFICATION	3.1440009820343124E-5	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9997733476629556	WITHOUT_CLASSIFICATION	2.2665233704442653E-4	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999639500637734	WITHOUT_CLASSIFICATION	3.604993622669026E-5	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9998380295476212	WITHOUT_CLASSIFICATION	1.6197045237881203E-4	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999735862668746	WITHOUT_CLASSIFICATION	2.641373312538251E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999079053579994	WITHOUT_CLASSIFICATION	9.209464200054455E-5	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999649661268818	WITHOUT_CLASSIFICATION	3.503387311817162E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.999407257271679	WITHOUT_CLASSIFICATION	5.927427283210088E-4	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.999407257271679	WITHOUT_CLASSIFICATION	5.927427283210088E-4	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9998306059957356	WITHOUT_CLASSIFICATION	1.6939400426431287E-4	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999397695550494	WITHOUT_CLASSIFICATION	6.023044495070848E-5	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999651256751793	WITHOUT_CLASSIFICATION	3.487432482083152E-5	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9991477220244711	WITHOUT_CLASSIFICATION	8.522779755289722E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999410631889414	WITHOUT_CLASSIFICATION	5.893681105852723E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9999636953151809	WITHOUT_CLASSIFICATION	3.630468481911505E-5	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999872661644547	WITHOUT_CLASSIFICATION	1.273383554526128E-5	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9995687794599744	WITHOUT_CLASSIFICATION	4.3122054002563153E-4	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999221630217155	WITHOUT_CLASSIFICATION	7.783697828439032E-5	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9994987208157514	WITHOUT_CLASSIFICATION	5.012791842485615E-4	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.99952860203892	WITHOUT_CLASSIFICATION	4.7139796107999486E-4	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999894672088924	WITHOUT_CLASSIFICATION	1.0532791107636082E-5	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9996354055140322	WITHOUT_CLASSIFICATION	3.645944859679102E-4	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9997949482693547	WITHOUT_CLASSIFICATION	2.0505173064521286E-4	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9998425670377411	WITHOUT_CLASSIFICATION	1.5743296225885034E-4	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999351370427649	WITHOUT_CLASSIFICATION	6.486295723502757E-5	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.999962263121673	WITHOUT_CLASSIFICATION	3.7736878326905265E-5	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9996237904123862	WITHOUT_CLASSIFICATION	3.7620958761379016E-4	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.999967417734405	WITHOUT_CLASSIFICATION	3.258226559498516E-5	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999922958085652	WITHOUT_CLASSIFICATION	7.704191434857246E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999689812689361	WITHOUT_CLASSIFICATION	3.1018731063919654E-5	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9998119758067988	WITHOUT_CLASSIFICATION	1.8802419320115637E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9997733476629556	WITHOUT_CLASSIFICATION	2.2665233704442653E-4	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999735862668746	WITHOUT_CLASSIFICATION	2.641373312538251E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999735862668746	WITHOUT_CLASSIFICATION	2.641373312538251E-5	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999811873975675	WITHOUT_CLASSIFICATION	1.881260243262531E-5	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999811873975675	WITHOUT_CLASSIFICATION	1.881260243262531E-5	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999811873975675	WITHOUT_CLASSIFICATION	1.881260243262531E-5	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999811873975675	WITHOUT_CLASSIFICATION	1.881260243262531E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999079053579994	WITHOUT_CLASSIFICATION	9.209464200054455E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999079053579994	WITHOUT_CLASSIFICATION	9.209464200054455E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999079053579994	WITHOUT_CLASSIFICATION	9.209464200054455E-5	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999079053579994	WITHOUT_CLASSIFICATION	9.209464200054455E-5	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999689812689361	WITHOUT_CLASSIFICATION	3.1018731063919654E-5	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.998934057724662	WITHOUT_CLASSIFICATION	0.0010659422753379472	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9996873544813302	WITHOUT_CLASSIFICATION	3.126455186697632E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999559740675473	WITHOUT_CLASSIFICATION	4.402593245274933E-5	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999531438754317	WITHOUT_CLASSIFICATION	4.685612456840515E-5	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999352556726409	WITHOUT_CLASSIFICATION	6.474432735909242E-5	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999914324852937	WITHOUT_CLASSIFICATION	8.56751470644342E-6	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9975035216403191	WITHOUT_CLASSIFICATION	0.0024964783596808722	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9998465858843567	WITHOUT_CLASSIFICATION	1.5341411564322142E-4	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999573869268105	WITHOUT_CLASSIFICATION	4.2613073189589806E-5	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999573869268105	WITHOUT_CLASSIFICATION	4.2613073189589806E-5	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.9998952178839008	WITHOUT_CLASSIFICATION	1.047821160992917E-4	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999602200643912	WITHOUT_CLASSIFICATION	3.977993560874522E-5	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9999084807804496	WITHOUT_CLASSIFICATION	9.151921955044712E-5	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.999954418309876	WITHOUT_CLASSIFICATION	4.5581690124069385E-5	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999678771832734	WITHOUT_CLASSIFICATION	3.212281672657081E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999840015176168	WITHOUT_CLASSIFICATION	1.5998482383224157E-5	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.99991910236657	WITHOUT_CLASSIFICATION	8.089763343004066E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999416158551107	WITHOUT_CLASSIFICATION	5.838414488921854E-5	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999716055059279	WITHOUT_CLASSIFICATION	2.839449407216889E-5	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999848530920648	WITHOUT_CLASSIFICATION	1.5146907935355898E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999105889675254	WITHOUT_CLASSIFICATION	8.941103247463484E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999105889675254	WITHOUT_CLASSIFICATION	8.941103247463484E-5	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999299731767928	WITHOUT_CLASSIFICATION	7.002682320721054E-5	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999755218935257	WITHOUT_CLASSIFICATION	2.4478106474428648E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998683857426112	WITHOUT_CLASSIFICATION	1.3161425738887029E-4	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998683857426112	WITHOUT_CLASSIFICATION	1.3161425738887029E-4	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.999983215484848	WITHOUT_CLASSIFICATION	1.6784515151955223E-5	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9995693543824541	WITHOUT_CLASSIFICATION	4.3064561754584086E-4	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9995693543824541	WITHOUT_CLASSIFICATION	4.3064561754584086E-4	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9992429550221599	WITHOUT_CLASSIFICATION	7.570449778401977E-4	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9992429550221599	WITHOUT_CLASSIFICATION	7.570449778401977E-4	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9992429550221599	WITHOUT_CLASSIFICATION	7.570449778401977E-4	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9998489127533006	WITHOUT_CLASSIFICATION	1.5108724669941483E-4	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999399154893793	WITHOUT_CLASSIFICATION	6.0084510620708804E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999736406598729	WITHOUT_CLASSIFICATION	2.6359340127131293E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999188465452864	WITHOUT_CLASSIFICATION	8.115345471361477E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999188465452864	WITHOUT_CLASSIFICATION	8.115345471361477E-5	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998683857426112	WITHOUT_CLASSIFICATION	1.3161425738887029E-4	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9998683857426112	WITHOUT_CLASSIFICATION	1.3161425738887029E-4	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9992429550221599	WITHOUT_CLASSIFICATION	7.570449778401977E-4	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9992429550221599	WITHOUT_CLASSIFICATION	7.570449778401977E-4	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9992429550221599	WITHOUT_CLASSIFICATION	7.570449778401977E-4	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9998489127533006	WITHOUT_CLASSIFICATION	1.5108724669941483E-4	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999399154893793	WITHOUT_CLASSIFICATION	6.0084510620708804E-5	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999483620159327	WITHOUT_CLASSIFICATION	5.16379840672133E-5	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9943338206286727	WITHOUT_CLASSIFICATION	0.005666179371327364	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.999877007317379	WITHOUT_CLASSIFICATION	1.2299268262099114E-4	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9997666134960774	WITHOUT_CLASSIFICATION	2.3338650392245824E-4	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999180748882447	WITHOUT_CLASSIFICATION	8.192511175525866E-5	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9992352871588489	WITHOUT_CLASSIFICATION	7.647128411512261E-4	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9997314720480196	WITHOUT_CLASSIFICATION	2.6852795198037394E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999120945304077	WITHOUT_CLASSIFICATION	8.790546959216781E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9992498752298586	WITHOUT_CLASSIFICATION	7.501247701413875E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9992498752298586	WITHOUT_CLASSIFICATION	7.501247701413875E-4	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999759354742686	WITHOUT_CLASSIFICATION	2.406452573136001E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999906658154483	WITHOUT_CLASSIFICATION	9.33418455173363E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999906658154483	WITHOUT_CLASSIFICATION	9.33418455173363E-6	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9998182502781852	WITHOUT_CLASSIFICATION	1.8174972181475525E-4	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9998165558003967	WITHOUT_CLASSIFICATION	1.8344419960324179E-4	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999746782607933	WITHOUT_CLASSIFICATION	2.5321739206683122E-5	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.99992942892194	WITHOUT_CLASSIFICATION	7.057107805997421E-5	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9998740210108266	WITHOUT_CLASSIFICATION	1.2597898917341059E-4	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9998740210108266	WITHOUT_CLASSIFICATION	1.2597898917341059E-4	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9998740210108266	WITHOUT_CLASSIFICATION	1.2597898917341059E-4	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999065882198107	WITHOUT_CLASSIFICATION	9.341178018928568E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999190654570321	WITHOUT_CLASSIFICATION	8.093454296785206E-5	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999813392943214	WITHOUT_CLASSIFICATION	1.866070567857372E-5	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9998870279463699	WITHOUT_CLASSIFICATION	1.1297205363002421E-4	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.999694864126497	WITHOUT_CLASSIFICATION	3.051358735030067E-4	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9993436148123859	WITHOUT_CLASSIFICATION	6.563851876141812E-4	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999654279305703	WITHOUT_CLASSIFICATION	3.457206942976439E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9996166375466157	WITHOUT_CLASSIFICATION	3.833624533842743E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9996166375466157	WITHOUT_CLASSIFICATION	3.833624533842743E-4	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9997719034069829	WITHOUT_CLASSIFICATION	2.2809659301723995E-4	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9992997754064559	WITHOUT_CLASSIFICATION	7.002245935442057E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999592963336587	WITHOUT_CLASSIFICATION	4.07036663414714E-5	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999592963336587	WITHOUT_CLASSIFICATION	4.07036663414714E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9998687942661896	WITHOUT_CLASSIFICATION	1.3120573381047976E-4	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9943338206286727	WITHOUT_CLASSIFICATION	0.005666179371327364	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999120945304077	WITHOUT_CLASSIFICATION	8.790546959216781E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9992498752298586	WITHOUT_CLASSIFICATION	7.501247701413875E-4	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9998870279463699	WITHOUT_CLASSIFICATION	1.1297205363002421E-4	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9998870279463699	WITHOUT_CLASSIFICATION	1.1297205363002421E-4	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999813392943214	WITHOUT_CLASSIFICATION	1.866070567857372E-5	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999483620159327	WITHOUT_CLASSIFICATION	5.16379840672133E-5	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999654279305703	WITHOUT_CLASSIFICATION	3.457206942976439E-5	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9993436148123859	WITHOUT_CLASSIFICATION	6.563851876141812E-4	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9987105803109757	WITHOUT_CLASSIFICATION	0.0012894196890243829	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.999112219021772	WITHOUT_CLASSIFICATION	8.877809782279946E-4	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999842786398124	WITHOUT_CLASSIFICATION	1.5721360187638664E-5	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.9984902166707416	WITHOUT_CLASSIFICATION	0.0015097833292584417	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999603904359587	WITHOUT_CLASSIFICATION	3.960956404131056E-5	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999603904359587	WITHOUT_CLASSIFICATION	3.960956404131056E-5	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9996476493529355	WITHOUT_CLASSIFICATION	3.523506470644458E-4	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9998381844657539	WITHOUT_CLASSIFICATION	1.6181553424598282E-4	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9997777900342852	WITHOUT_CLASSIFICATION	2.222099657146761E-4	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.999940116285159	WITHOUT_CLASSIFICATION	5.9883714840968465E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999598677663653	WITHOUT_CLASSIFICATION	4.01322336347743E-5	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.9999311212098942	WITHOUT_CLASSIFICATION	6.887879010564678E-5	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999375907423722	WITHOUT_CLASSIFICATION	6.240925762786547E-5	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999641126841469	WITHOUT_CLASSIFICATION	3.5887315853174064E-5	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.999278707015816	WITHOUT_CLASSIFICATION	7.212929841839818E-4	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.997823528429743	WITHOUT_CLASSIFICATION	0.0021764715702570665	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9993197373004297	WITHOUT_CLASSIFICATION	6.80262699570405E-4	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999390535387959	WITHOUT_CLASSIFICATION	6.0946461204193674E-5	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999547294348962	WITHOUT_CLASSIFICATION	4.527056510387157E-5	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999028555619863	WITHOUT_CLASSIFICATION	9.714443801361862E-5	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9998841683760556	WITHOUT_CLASSIFICATION	1.1583162394436483E-4	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999682206231096	WITHOUT_CLASSIFICATION	3.177937689044445E-5	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999424405439483	WITHOUT_CLASSIFICATION	5.755945605164626E-5	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999530076865959	WITHOUT_CLASSIFICATION	4.699231340405661E-5	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9998009305163043	WITHOUT_CLASSIFICATION	1.9906948369574222E-4	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.999980402537152	WITHOUT_CLASSIFICATION	1.959746284794162E-5	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999772284169463	WITHOUT_CLASSIFICATION	2.277158305382626E-5	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999588151981152	WITHOUT_CLASSIFICATION	4.118480188476736E-5	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999948545275599	WITHOUT_CLASSIFICATION	5.145472440034593E-6	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999753125060192	WITHOUT_CLASSIFICATION	2.4687493980702513E-5	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999700679598874	WITHOUT_CLASSIFICATION	2.993204011255121E-5	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.99997797356851	WITHOUT_CLASSIFICATION	2.202643149003438E-5	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999701363772653	WITHOUT_CLASSIFICATION	2.986362273479016E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9995162102708267	WITHOUT_CLASSIFICATION	4.837897291732103E-4	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999592963336587	WITHOUT_CLASSIFICATION	4.07036663414714E-5	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999954396079169	WITHOUT_CLASSIFICATION	4.560392083079306E-6	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9998748798911595	WITHOUT_CLASSIFICATION	1.2512010884035673E-4	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.999883210159285	WITHOUT_CLASSIFICATION	1.1678984071501232E-4	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999703189619212	WITHOUT_CLASSIFICATION	2.9681038078820353E-5	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999073786771232	WITHOUT_CLASSIFICATION	9.262132287690117E-5	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999607673561245	WITHOUT_CLASSIFICATION	3.9232643875527744E-5	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999902473905867	WITHOUT_CLASSIFICATION	9.752609413313582E-6	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999792405982897	WITHOUT_CLASSIFICATION	2.0759401710355195E-5	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999695077726405	WITHOUT_CLASSIFICATION	3.04922273595686E-5	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999614740051748	WITHOUT_CLASSIFICATION	3.852599482512557E-5	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9501726445133934	WITHOUT_CLASSIFICATION	0.049827355486606585	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.999850649203336	WITHOUT_CLASSIFICATION	1.4935079666397247E-4	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999576243379271	WITHOUT_CLASSIFICATION	4.2375662072882914E-5	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9996873892282409	WITHOUT_CLASSIFICATION	3.1261077175920266E-4	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9998811762021214	WITHOUT_CLASSIFICATION	1.1882379787864808E-4	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9997550081177506	WITHOUT_CLASSIFICATION	2.4499188224933854E-4	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999890187923405	WITHOUT_CLASSIFICATION	1.0981207659452053E-5	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9998967832797155	WITHOUT_CLASSIFICATION	1.0321672028445248E-4	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9993491773607676	WITHOUT_CLASSIFICATION	6.508226392323072E-4	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9997522729744318	WITHOUT_CLASSIFICATION	2.477270255681532E-4	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9998750474023281	WITHOUT_CLASSIFICATION	1.2495259767184673E-4	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999462313329033	WITHOUT_CLASSIFICATION	5.376866709671037E-5	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999655278091625	WITHOUT_CLASSIFICATION	3.4472190837488036E-5	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999655278091625	WITHOUT_CLASSIFICATION	3.4472190837488036E-5	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9996448314867912	WITHOUT_CLASSIFICATION	3.551685132089242E-4	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9989569714001824	WITHOUT_CLASSIFICATION	0.0010430285998177266	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9990072839651783	WITHOUT_CLASSIFICATION	9.927160348216755E-4	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9987036230566143	WITHOUT_CLASSIFICATION	0.0012963769433857264	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999251901612884	WITHOUT_CLASSIFICATION	7.480983871156494E-5	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999973113491403	WITHOUT_CLASSIFICATION	2.688650859739918E-6	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9999131492770943	WITHOUT_CLASSIFICATION	8.685072290569532E-5	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999447507166875	WITHOUT_CLASSIFICATION	5.524928331239051E-5	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999268445687453	WITHOUT_CLASSIFICATION	7.315543125467051E-5	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.999704126654289	WITHOUT_CLASSIFICATION	2.9587334571094754E-4	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9997096174388418	WITHOUT_CLASSIFICATION	2.903825611581914E-4	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999449520648032	WITHOUT_CLASSIFICATION	5.504793519682476E-5	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9992804968724359	WITHOUT_CLASSIFICATION	7.195031275639635E-4	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9989814501759762	WITHOUT_CLASSIFICATION	0.0010185498240238827	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9995275408422046	WITHOUT_CLASSIFICATION	4.724591577953315E-4	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.999963298017999	WITHOUT_CLASSIFICATION	3.670198200099105E-5	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9998281107592207	WITHOUT_CLASSIFICATION	1.7188924077933283E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.8363426316091107	WITHOUT_CLASSIFICATION	0.1636573683908893	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.8363426316091107	WITHOUT_CLASSIFICATION	0.1636573683908893	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.8363426316091107	WITHOUT_CLASSIFICATION	0.1636573683908893	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9992200341845363	WITHOUT_CLASSIFICATION	7.799658154637531E-4	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9990887744267879	WITHOUT_CLASSIFICATION	9.112255732120231E-4	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9997125538072431	WITHOUT_CLASSIFICATION	2.8744619275691515E-4	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.9996639505984042	WITHOUT_CLASSIFICATION	3.3604940159579107E-4	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999447273056854	WITHOUT_CLASSIFICATION	5.5272694314493386E-5	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999843003254826	WITHOUT_CLASSIFICATION	1.569967451742103E-5	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9995067498165129	WITHOUT_CLASSIFICATION	4.932501834871556E-4	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999447273056854	WITHOUT_CLASSIFICATION	5.5272694314493386E-5	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999843003254826	WITHOUT_CLASSIFICATION	1.569967451742103E-5	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999406855640783	WITHOUT_CLASSIFICATION	5.931443592179536E-5	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999407083298965	WITHOUT_CLASSIFICATION	5.929167010352115E-5	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9998611982418341	WITHOUT_CLASSIFICATION	1.3880175816595631E-4	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9998611982418341	WITHOUT_CLASSIFICATION	1.3880175816595631E-4	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.999942938806049	WITHOUT_CLASSIFICATION	5.706119395108751E-5	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.999942938806049	WITHOUT_CLASSIFICATION	5.706119395108751E-5	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9901674843537958	WITHOUT_CLASSIFICATION	0.009832515646204324	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999487860507213	WITHOUT_CLASSIFICATION	5.121394927876575E-5	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9903422325719488	WITHOUT_CLASSIFICATION	0.009657767428051193	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.994361584704383	WITHOUT_CLASSIFICATION	0.005638415295617072	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.998525896030394	WITHOUT_CLASSIFICATION	0.00147410396960605	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999061528531341	WITHOUT_CLASSIFICATION	9.384714686589866E-5	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9997060616609253	WITHOUT_CLASSIFICATION	2.9393833907463934E-4	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9988865273065151	WITHOUT_CLASSIFICATION	0.001113472693484876	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9996879554542056	WITHOUT_CLASSIFICATION	3.120445457943872E-4	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9998976809427628	WITHOUT_CLASSIFICATION	1.0231905723719748E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9996007249546133	WITHOUT_CLASSIFICATION	3.9927504538672486E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9940918782179418	WITHOUT_CLASSIFICATION	0.005908121782058255	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999924906639157	WITHOUT_CLASSIFICATION	7.509336084381025E-6	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999470273943118	WITHOUT_CLASSIFICATION	5.2972605688085265E-5	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999462556983397	WITHOUT_CLASSIFICATION	5.374430166040573E-5	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9997218939807608	WITHOUT_CLASSIFICATION	2.7810601923917343E-4	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9994823824290352	WITHOUT_CLASSIFICATION	5.176175709648487E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9990922208189074	WITHOUT_CLASSIFICATION	9.07779181092676E-4	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9993739324862528	WITHOUT_CLASSIFICATION	6.260675137472086E-4	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9997949482693547	WITHOUT_CLASSIFICATION	2.0505173064521286E-4	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9997949482693547	WITHOUT_CLASSIFICATION	2.0505173064521286E-4	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9998425670377411	WITHOUT_CLASSIFICATION	1.5743296225885034E-4	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9998425670377411	WITHOUT_CLASSIFICATION	1.5743296225885034E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999120945304077	WITHOUT_CLASSIFICATION	8.790546959216781E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999120945304077	WITHOUT_CLASSIFICATION	8.790546959216781E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999598677663653	WITHOUT_CLASSIFICATION	4.01322336347743E-5	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9501726445133934	WITHOUT_CLASSIFICATION	0.049827355486606585	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.8363426316091107	WITHOUT_CLASSIFICATION	0.1636573683908893	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.8363426316091107	WITHOUT_CLASSIFICATION	0.1636573683908893	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9998862419063522	WITHOUT_CLASSIFICATION	1.1375809364781268E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9996007249546133	WITHOUT_CLASSIFICATION	3.9927504538672486E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9940918782179418	WITHOUT_CLASSIFICATION	0.005908121782058255	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9998255840698931	WITHOUT_CLASSIFICATION	1.7441593010687789E-4	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999688247707631	WITHOUT_CLASSIFICATION	3.117522923695163E-5	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.9998502317479763	WITHOUT_CLASSIFICATION	1.497682520236924E-4	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9997265191190361	WITHOUT_CLASSIFICATION	2.734808809638933E-4	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9998976809427628	WITHOUT_CLASSIFICATION	1.0231905723719748E-4	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9997781195854777	WITHOUT_CLASSIFICATION	2.2188041452224475E-4	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9997781195854777	WITHOUT_CLASSIFICATION	2.2188041452224475E-4	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9997781195854777	WITHOUT_CLASSIFICATION	2.2188041452224475E-4	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999546759842142	WITHOUT_CLASSIFICATION	4.532401578591115E-5	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9998837459965609	WITHOUT_CLASSIFICATION	1.1625400343905515E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999282476165671	WITHOUT_CLASSIFICATION	7.17523834329415E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9990922208189074	WITHOUT_CLASSIFICATION	9.07779181092676E-4	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9993739324862528	WITHOUT_CLASSIFICATION	6.260675137472086E-4	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999871147485762	WITHOUT_CLASSIFICATION	1.2885251423843692E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999871147485762	WITHOUT_CLASSIFICATION	1.2885251423843692E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9997949482693547	WITHOUT_CLASSIFICATION	2.0505173064521286E-4	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9998425670377411	WITHOUT_CLASSIFICATION	1.5743296225885034E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999120945304077	WITHOUT_CLASSIFICATION	8.790546959216781E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999120945304077	WITHOUT_CLASSIFICATION	8.790546959216781E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999120945304077	WITHOUT_CLASSIFICATION	8.790546959216781E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9992498752298586	WITHOUT_CLASSIFICATION	7.501247701413875E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9992498752298586	WITHOUT_CLASSIFICATION	7.501247701413875E-4	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999598677663653	WITHOUT_CLASSIFICATION	4.01322336347743E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9940918782179418	WITHOUT_CLASSIFICATION	0.005908121782058255	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9940918782179418	WITHOUT_CLASSIFICATION	0.005908121782058255	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9997218939807608	WITHOUT_CLASSIFICATION	2.7810601923917343E-4	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9997781195854777	WITHOUT_CLASSIFICATION	2.2188041452224475E-4	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9997265191190361	WITHOUT_CLASSIFICATION	2.734808809638933E-4	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9998976809427628	WITHOUT_CLASSIFICATION	1.0231905723719748E-4	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9998976809427628	WITHOUT_CLASSIFICATION	1.0231905723719748E-4	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999546759842142	WITHOUT_CLASSIFICATION	4.532401578591115E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999282476165671	WITHOUT_CLASSIFICATION	7.17523834329415E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9997448990640667	WITHOUT_CLASSIFICATION	2.551009359332525E-4	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9997448990640667	WITHOUT_CLASSIFICATION	2.551009359332525E-4	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9997448990640667	WITHOUT_CLASSIFICATION	2.551009359332525E-4	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999370602162849	WITHOUT_CLASSIFICATION	6.293978371514538E-5	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999370602162849	WITHOUT_CLASSIFICATION	6.293978371514538E-5	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999370602162849	WITHOUT_CLASSIFICATION	6.293978371514538E-5	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999911754461169	WITHOUT_CLASSIFICATION	8.824553883039769E-6	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9998679766921995	WITHOUT_CLASSIFICATION	1.3202330780043593E-4	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9997816728348208	WITHOUT_CLASSIFICATION	2.1832716517919046E-4	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.999938919592302	WITHOUT_CLASSIFICATION	6.108040769800738E-5	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.9999724240691793	WITHOUT_CLASSIFICATION	2.757593082070313E-5	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9997581073366228	WITHOUT_CLASSIFICATION	2.4189266337710716E-4	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999617134751331	WITHOUT_CLASSIFICATION	3.828652486703878E-5	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9998578062369816	WITHOUT_CLASSIFICATION	1.4219376301850733E-4	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999554465191451	WITHOUT_CLASSIFICATION	4.455348085490737E-5	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9994397521910969	WITHOUT_CLASSIFICATION	5.602478089030626E-4	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9986368453837525	WITHOUT_CLASSIFICATION	0.0013631546162474386	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.9997483037633811	WITHOUT_CLASSIFICATION	2.516962366189495E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.999952623808868	WITHOUT_CLASSIFICATION	4.737619113208165E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9990922208189074	WITHOUT_CLASSIFICATION	9.07779181092676E-4	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9993739324862528	WITHOUT_CLASSIFICATION	6.260675137472086E-4	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999871147485762	WITHOUT_CLASSIFICATION	1.2885251423843692E-5	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999648537094279	WITHOUT_CLASSIFICATION	3.5146290572133485E-5	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999755046303486	WITHOUT_CLASSIFICATION	2.4495369651405136E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9997949482693547	WITHOUT_CLASSIFICATION	2.0505173064521286E-4	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9998425670377411	WITHOUT_CLASSIFICATION	1.5743296225885034E-4	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999598677663653	WITHOUT_CLASSIFICATION	4.01322336347743E-5	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9994566218820741	WITHOUT_CLASSIFICATION	5.43378117925919E-4	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9976543259653492	WITHOUT_CLASSIFICATION	0.002345674034650787	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9995275408422046	WITHOUT_CLASSIFICATION	4.724591577953315E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9996007249546133	WITHOUT_CLASSIFICATION	3.9927504538672486E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9940918782179418	WITHOUT_CLASSIFICATION	0.005908121782058255	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9997781195854777	WITHOUT_CLASSIFICATION	2.2188041452224475E-4	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9997265191190361	WITHOUT_CLASSIFICATION	2.734808809638933E-4	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9998976809427628	WITHOUT_CLASSIFICATION	1.0231905723719748E-4	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9998772946537419	WITHOUT_CLASSIFICATION	1.2270534625807958E-4	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999621038989098	WITHOUT_CLASSIFICATION	3.789610109027653E-5	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9994777253981192	WITHOUT_CLASSIFICATION	5.222746018808279E-4	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9994991648920185	WITHOUT_CLASSIFICATION	5.008351079815511E-4	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999591947087916	WITHOUT_CLASSIFICATION	4.080529120847981E-5	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9998298045384922	WITHOUT_CLASSIFICATION	1.7019546150774803E-4	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9986990806774295	WITHOUT_CLASSIFICATION	0.0013009193225705046	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9976550178108662	WITHOUT_CLASSIFICATION	0.0023449821891337584	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9986972703299374	WITHOUT_CLASSIFICATION	0.0013027296700626049	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9939100565642524	WITHOUT_CLASSIFICATION	0.006089943435747652	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9939100565642524	WITHOUT_CLASSIFICATION	0.006089943435747652	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9932971767189308	WITHOUT_CLASSIFICATION	0.006702823281069152	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9932971767189308	WITHOUT_CLASSIFICATION	0.006702823281069152	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999168893995732	WITHOUT_CLASSIFICATION	8.311060042677497E-5	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9998691630029944	WITHOUT_CLASSIFICATION	1.3083699700567936E-4	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9994839590862725	WITHOUT_CLASSIFICATION	5.160409137274524E-4	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9979688039869626	WITHOUT_CLASSIFICATION	0.0020311960130374065	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9949228634757933	WITHOUT_CLASSIFICATION	0.005077136524206763	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.999655822329625	WITHOUT_CLASSIFICATION	3.441776703750149E-4	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9966184341145896	WITHOUT_CLASSIFICATION	0.0033815658854103973	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9994596827959124	WITHOUT_CLASSIFICATION	5.403172040876906E-4	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999858597765134	WITHOUT_CLASSIFICATION	1.4140223486604662E-5	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999544196754688	WITHOUT_CLASSIFICATION	4.55803245310732E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999594276573571	WITHOUT_CLASSIFICATION	4.057234264296794E-5	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9980586486068685	WITHOUT_CLASSIFICATION	0.001941351393131462	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9995930606964705	WITHOUT_CLASSIFICATION	4.0693930352957776E-4	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999195146074865	WITHOUT_CLASSIFICATION	8.048539251347103E-5	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999733978227612	WITHOUT_CLASSIFICATION	2.6602177238747198E-5	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9983545679592085	WITHOUT_CLASSIFICATION	0.0016454320407915002	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9997260531874687	WITHOUT_CLASSIFICATION	2.7394681253138577E-4	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999010102260207	WITHOUT_CLASSIFICATION	9.898977397915321E-5	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9987474180969002	WITHOUT_CLASSIFICATION	0.0012525819030999041	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9980291317504331	WITHOUT_CLASSIFICATION	0.001970868249566968	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999039414286425	WITHOUT_CLASSIFICATION	9.605857135748209E-5	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.999442150922305	WITHOUT_CLASSIFICATION	5.578490776949768E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.999927449960898	WITHOUT_CLASSIFICATION	7.255003910208525E-5	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.999695309292954	WITHOUT_CLASSIFICATION	3.046907070459339E-4	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.999655822329625	WITHOUT_CLASSIFICATION	3.441776703750149E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.999655822329625	WITHOUT_CLASSIFICATION	3.441776703750149E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997755556040091	WITHOUT_CLASSIFICATION	2.244443959909633E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9998053418685328	WITHOUT_CLASSIFICATION	1.946581314671426E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9998053418685328	WITHOUT_CLASSIFICATION	1.946581314671426E-4	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9998156319945369	WITHOUT_CLASSIFICATION	1.843680054630803E-4	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.5783212842643459	DEFECT	0.421678715735654	WITHOUT_CLASSIFICATION
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9998432417296094	WITHOUT_CLASSIFICATION	1.5675827039053855E-4	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9995773410551473	WITHOUT_CLASSIFICATION	4.2265894485263734E-4	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9966008977036309	WITHOUT_CLASSIFICATION	0.0033991022963690094	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999162262015963	WITHOUT_CLASSIFICATION	8.377379840368468E-5	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999162262015963	WITHOUT_CLASSIFICATION	8.377379840368468E-5	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999859212841643	WITHOUT_CLASSIFICATION	1.4078715835732426E-5	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999877078801526	WITHOUT_CLASSIFICATION	1.2292119847347543E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9993365056720248	WITHOUT_CLASSIFICATION	6.634943279752363E-4	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9992441794437787	WITHOUT_CLASSIFICATION	7.558205562212903E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9989658011317993	WITHOUT_CLASSIFICATION	0.0010341988682006868	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.999982647595454	WITHOUT_CLASSIFICATION	1.7352404546083792E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9994044971812103	WITHOUT_CLASSIFICATION	5.955028187898336E-4	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9998588991540537	WITHOUT_CLASSIFICATION	1.411008459462585E-4	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9997897170807135	WITHOUT_CLASSIFICATION	2.1028291928649716E-4	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9997647570169075	WITHOUT_CLASSIFICATION	2.3524298309245614E-4	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9978453459604587	WITHOUT_CLASSIFICATION	0.0021546540395412594	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9998365428049938	WITHOUT_CLASSIFICATION	1.6345719500618822E-4	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9995911038045157	WITHOUT_CLASSIFICATION	4.0889619548436476E-4	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9996871200949191	WITHOUT_CLASSIFICATION	3.128799050808739E-4	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.99922794377641	WITHOUT_CLASSIFICATION	7.720562235900739E-4	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.999442150922305	WITHOUT_CLASSIFICATION	5.578490776949768E-4	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999835990898083	WITHOUT_CLASSIFICATION	1.6400910191692434E-5	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9998248521995206	WITHOUT_CLASSIFICATION	1.7514780047940895E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999791487635729	WITHOUT_CLASSIFICATION	2.0851236427128642E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9997225319332823	WITHOUT_CLASSIFICATION	2.7746806671765306E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999573197006973	WITHOUT_CLASSIFICATION	4.2680299302591925E-5	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9993806522537821	WITHOUT_CLASSIFICATION	6.193477462177544E-4	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999371621760217	WITHOUT_CLASSIFICATION	6.283782397839248E-5	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999622970525466	WITHOUT_CLASSIFICATION	3.770294745344118E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996847172008146	WITHOUT_CLASSIFICATION	3.1528279918536156E-4	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999279647037015	WITHOUT_CLASSIFICATION	7.203529629850873E-5	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.999912379030232	WITHOUT_CLASSIFICATION	8.762096976798501E-5	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.999912379030232	WITHOUT_CLASSIFICATION	8.762096976798501E-5	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999764573480778	WITHOUT_CLASSIFICATION	2.3542651922200128E-5	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9998068095104252	WITHOUT_CLASSIFICATION	1.931904895748046E-4	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9999209544382345	WITHOUT_CLASSIFICATION	7.904556176552274E-5	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9999728074013613	WITHOUT_CLASSIFICATION	2.719259863871711E-5	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9997111149620966	WITHOUT_CLASSIFICATION	2.8888503790338064E-4	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999973113491403	WITHOUT_CLASSIFICATION	2.688650859739918E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999447507166875	WITHOUT_CLASSIFICATION	5.524928331239051E-5	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9994566218820741	WITHOUT_CLASSIFICATION	5.43378117925919E-4	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9976543259653492	WITHOUT_CLASSIFICATION	0.002345674034650787	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.8363426316091107	WITHOUT_CLASSIFICATION	0.1636573683908893	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9996007249546133	WITHOUT_CLASSIFICATION	3.9927504538672486E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9996007249546133	WITHOUT_CLASSIFICATION	3.9927504538672486E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9940918782179418	WITHOUT_CLASSIFICATION	0.005908121782058255	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999799768132073	WITHOUT_CLASSIFICATION	2.0023186792707026E-5	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9997218939807608	WITHOUT_CLASSIFICATION	2.7810601923917343E-4	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9997218939807608	WITHOUT_CLASSIFICATION	2.7810601923917343E-4	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// open	WITHOUT_CLASSIFICATION	0.9997835249879993	WITHOUT_CLASSIFICATION	2.1647501200068266E-4	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9997265191190361	WITHOUT_CLASSIFICATION	2.734808809638933E-4	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999282476165671	WITHOUT_CLASSIFICATION	7.17523834329415E-5	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999282476165671	WITHOUT_CLASSIFICATION	7.17523834329415E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9998772946537419	WITHOUT_CLASSIFICATION	1.2270534625807958E-4	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9998772946537419	WITHOUT_CLASSIFICATION	1.2270534625807958E-4	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999621038989098	WITHOUT_CLASSIFICATION	3.789610109027653E-5	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999621038989098	WITHOUT_CLASSIFICATION	3.789610109027653E-5	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9985540296316991	WITHOUT_CLASSIFICATION	0.001445970368300899	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9997678107167727	WITHOUT_CLASSIFICATION	2.3218928322731532E-4	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9995236048263069	WITHOUT_CLASSIFICATION	4.763951736931321E-4	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9995236048263069	WITHOUT_CLASSIFICATION	4.763951736931321E-4	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9997678107167727	WITHOUT_CLASSIFICATION	2.3218928322731532E-4	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9995817228741153	WITHOUT_CLASSIFICATION	4.182771258847284E-4	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9985540296316991	WITHOUT_CLASSIFICATION	0.001445970368300899	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999081228257567	WITHOUT_CLASSIFICATION	9.187717424325295E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999081228257567	WITHOUT_CLASSIFICATION	9.187717424325295E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999081228257567	WITHOUT_CLASSIFICATION	9.187717424325295E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999081228257567	WITHOUT_CLASSIFICATION	9.187717424325295E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999081228257567	WITHOUT_CLASSIFICATION	9.187717424325295E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999081228257567	WITHOUT_CLASSIFICATION	9.187717424325295E-5	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999081228257567	WITHOUT_CLASSIFICATION	9.187717424325295E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999081228257567	WITHOUT_CLASSIFICATION	9.187717424325295E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999081228257567	WITHOUT_CLASSIFICATION	9.187717424325295E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999081228257567	WITHOUT_CLASSIFICATION	9.187717424325295E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999081228257567	WITHOUT_CLASSIFICATION	9.187717424325295E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999714692813348	WITHOUT_CLASSIFICATION	2.8530718665194195E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999714692813348	WITHOUT_CLASSIFICATION	2.8530718665194195E-4	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999624056850712	WITHOUT_CLASSIFICATION	3.759431492872995E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999624056850712	WITHOUT_CLASSIFICATION	3.759431492872995E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999624056850712	WITHOUT_CLASSIFICATION	3.759431492872995E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999624056850712	WITHOUT_CLASSIFICATION	3.759431492872995E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9992986853672051	WITHOUT_CLASSIFICATION	7.01314632794787E-4	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.999969092257293	WITHOUT_CLASSIFICATION	3.090774270701364E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.999969092257293	WITHOUT_CLASSIFICATION	3.090774270701364E-5	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9995393210383388	WITHOUT_CLASSIFICATION	4.6067896166115344E-4	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9995393210383388	WITHOUT_CLASSIFICATION	4.6067896166115344E-4	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9995227080444321	WITHOUT_CLASSIFICATION	4.772919555679775E-4	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9995393210383388	WITHOUT_CLASSIFICATION	4.6067896166115344E-4	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.999907566706915	WITHOUT_CLASSIFICATION	9.243329308491841E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999624056850712	WITHOUT_CLASSIFICATION	3.759431492872995E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999624056850712	WITHOUT_CLASSIFICATION	3.759431492872995E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999505836961264	WITHOUT_CLASSIFICATION	4.941630387369414E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9995162102708267	WITHOUT_CLASSIFICATION	4.837897291732103E-4	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.6003365566704385	WITHOUT_CLASSIFICATION	0.39966344332956155	DEFECT
// todo: not serialized yet	DEFECT	0.9985457614019769	WITHOUT_CLASSIFICATION	0.001454238598023102	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.9947785560074898	WITHOUT_CLASSIFICATION	0.005221443992510319	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.8654602609583741	WITHOUT_CLASSIFICATION	0.13453973904162583	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.8654602609583741	WITHOUT_CLASSIFICATION	0.13453973904162583	DEFECT
// TODO: Check this result...	DEFECT	0.9586562324482317	WITHOUT_CLASSIFICATION	0.0413437675517683	DEFECT
// TODO: Check this result...	DEFECT	0.9586562324482317	WITHOUT_CLASSIFICATION	0.0413437675517683	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9949074901253196	WITHOUT_CLASSIFICATION	0.005092509874680282	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9972697902196673	WITHOUT_CLASSIFICATION	0.002730209780332676	DEFECT
