/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9999443151466538	WITHOUT_CLASSIFICATION	5.5684853346226436E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9992452841294256	WITHOUT_CLASSIFICATION	7.547158705745142E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999812982384322	WITHOUT_CLASSIFICATION	1.8701761567842005E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999812982384322	WITHOUT_CLASSIFICATION	1.8701761567842005E-5	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9999303266447935	WITHOUT_CLASSIFICATION	6.967335520646366E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9997015994296052	WITHOUT_CLASSIFICATION	2.9840057039473295E-4	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9996222275971227	WITHOUT_CLASSIFICATION	3.7777240287732803E-4	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999621330818695	WITHOUT_CLASSIFICATION	3.7866918130565024E-5	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.999841959476443	WITHOUT_CLASSIFICATION	1.5804052355690014E-4	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.99999733226274	WITHOUT_CLASSIFICATION	2.6677372598955146E-6	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9981259406646679	WITHOUT_CLASSIFICATION	0.0018740593353320824	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999093019220701	WITHOUT_CLASSIFICATION	9.069807792994623E-5	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9993623545956729	WITHOUT_CLASSIFICATION	6.376454043270422E-4	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9995944054530863	WITHOUT_CLASSIFICATION	4.0559454691372623E-4	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9997846827111704	WITHOUT_CLASSIFICATION	2.1531728882953486E-4	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9963369952285341	WITHOUT_CLASSIFICATION	0.003663004771465827	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9963369952285341	WITHOUT_CLASSIFICATION	0.003663004771465827	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.999964277223141	WITHOUT_CLASSIFICATION	3.572277685911395E-5	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.99988457965407	WITHOUT_CLASSIFICATION	1.1542034592998326E-4	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9998172150759773	WITHOUT_CLASSIFICATION	1.827849240226896E-4	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9997512572421842	WITHOUT_CLASSIFICATION	2.487427578158354E-4	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9999420518278354	WITHOUT_CLASSIFICATION	5.794817216473073E-5	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999851529137936	WITHOUT_CLASSIFICATION	1.4847086206329447E-5	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999851529137936	WITHOUT_CLASSIFICATION	1.4847086206329447E-5	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999851529137936	WITHOUT_CLASSIFICATION	1.4847086206329447E-5	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999851529137936	WITHOUT_CLASSIFICATION	1.4847086206329447E-5	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999851529137936	WITHOUT_CLASSIFICATION	1.4847086206329447E-5	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9993970726979138	WITHOUT_CLASSIFICATION	6.029273020862252E-4	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999659463647701	WITHOUT_CLASSIFICATION	3.4053635229882795E-5	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999582613903538	WITHOUT_CLASSIFICATION	4.173860964619003E-5	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999911860959356	WITHOUT_CLASSIFICATION	8.813904064354797E-6	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999300243332342	WITHOUT_CLASSIFICATION	6.997566676574938E-5	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999738714596305	WITHOUT_CLASSIFICATION	2.6128540369539528E-5	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9998523920319786	WITHOUT_CLASSIFICATION	1.4760796802130576E-4	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9999464957499499	WITHOUT_CLASSIFICATION	5.3504250050040543E-5	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999482869311876	WITHOUT_CLASSIFICATION	5.1713068812366833E-5	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9997512572421842	WITHOUT_CLASSIFICATION	2.487427578158354E-4	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999506532954628	WITHOUT_CLASSIFICATION	4.934670453708153E-5	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9998585156733318	WITHOUT_CLASSIFICATION	1.4148432666816722E-4	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9998585156733318	WITHOUT_CLASSIFICATION	1.4148432666816722E-4	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999487030577935	WITHOUT_CLASSIFICATION	5.129694220638764E-5	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9995760885414705	WITHOUT_CLASSIFICATION	4.239114585294143E-4	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999531922776664	WITHOUT_CLASSIFICATION	4.680772233366128E-5	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999531922776664	WITHOUT_CLASSIFICATION	4.680772233366128E-5	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999531922776664	WITHOUT_CLASSIFICATION	4.680772233366128E-5	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9995293936306999	WITHOUT_CLASSIFICATION	4.706063693001246E-4	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999180936738508	WITHOUT_CLASSIFICATION	8.19063261491923E-5	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9998053006315929	WITHOUT_CLASSIFICATION	1.9469936840707622E-4	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9999786558431005	WITHOUT_CLASSIFICATION	2.134415689949887E-5	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998543155662896	WITHOUT_CLASSIFICATION	1.4568443371043812E-4	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9998133419621494	WITHOUT_CLASSIFICATION	1.8665803785065303E-4	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999343640363649	WITHOUT_CLASSIFICATION	6.563596363514887E-5	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999343640363649	WITHOUT_CLASSIFICATION	6.563596363514887E-5	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9998745426193629	WITHOUT_CLASSIFICATION	1.2545738063706407E-4	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9997003767365544	WITHOUT_CLASSIFICATION	2.9962326344563586E-4	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9998676729055109	WITHOUT_CLASSIFICATION	1.323270944891535E-4	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9998676729055109	WITHOUT_CLASSIFICATION	1.323270944891535E-4	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9998914748332293	WITHOUT_CLASSIFICATION	1.0852516677071793E-4	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999886432046541	WITHOUT_CLASSIFICATION	1.1356795345981382E-5	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999632029927169	WITHOUT_CLASSIFICATION	3.679700728308508E-5	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9993970224362777	WITHOUT_CLASSIFICATION	6.029775637223576E-4	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999861856485633	WITHOUT_CLASSIFICATION	1.3814351436572015E-5	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9998924695575173	WITHOUT_CLASSIFICATION	1.0753044248271638E-4	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999758863716628	WITHOUT_CLASSIFICATION	2.4113628337183778E-5	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9998798170248453	WITHOUT_CLASSIFICATION	1.2018297515470618E-4	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9998353566148669	WITHOUT_CLASSIFICATION	1.6464338513320236E-4	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999180936738508	WITHOUT_CLASSIFICATION	8.19063261491923E-5	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9988946569942762	WITHOUT_CLASSIFICATION	0.001105343005723938	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9996704591767314	WITHOUT_CLASSIFICATION	3.2954082326872844E-4	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9997747590867263	WITHOUT_CLASSIFICATION	2.252409132737363E-4	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999458195643524	WITHOUT_CLASSIFICATION	5.418043564761631E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999458195643524	WITHOUT_CLASSIFICATION	5.418043564761631E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999632029927169	WITHOUT_CLASSIFICATION	3.679700728308508E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999631456515241	WITHOUT_CLASSIFICATION	3.685434847587557E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.9999632029927169	WITHOUT_CLASSIFICATION	3.679700728308508E-5	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.9999631456515241	WITHOUT_CLASSIFICATION	3.685434847587557E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.9999631456515241	WITHOUT_CLASSIFICATION	3.685434847587557E-5	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.9999631456515241	WITHOUT_CLASSIFICATION	3.685434847587557E-5	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.9999631456515241	WITHOUT_CLASSIFICATION	3.685434847587557E-5	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.9999631456515241	WITHOUT_CLASSIFICATION	3.685434847587557E-5	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999875576922557	WITHOUT_CLASSIFICATION	1.244230774426202E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999920699534735	WITHOUT_CLASSIFICATION	7.93004652656824E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999920699534735	WITHOUT_CLASSIFICATION	7.93004652656824E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999920699534735	WITHOUT_CLASSIFICATION	7.93004652656824E-6	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999920699534735	WITHOUT_CLASSIFICATION	7.93004652656824E-6	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9997675484736002	WITHOUT_CLASSIFICATION	2.324515263997968E-4	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999677522555852	WITHOUT_CLASSIFICATION	3.22477444148277E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999677522555852	WITHOUT_CLASSIFICATION	3.22477444148277E-5	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999652314369485	WITHOUT_CLASSIFICATION	3.4768563051475754E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999677522555852	WITHOUT_CLASSIFICATION	3.22477444148277E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999901038849601	WITHOUT_CLASSIFICATION	9.896115039901628E-6	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.999525090616548	WITHOUT_CLASSIFICATION	4.7490938345198965E-4	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.999795039401075	WITHOUT_CLASSIFICATION	2.049605989250665E-4	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9998598671353056	WITHOUT_CLASSIFICATION	1.4013286469434012E-4	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9999582380531801	WITHOUT_CLASSIFICATION	4.176194681999307E-5	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9999387939563387	WITHOUT_CLASSIFICATION	6.120604366135122E-5	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.999960490249901	WITHOUT_CLASSIFICATION	3.9509750099055335E-5	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9997105736889373	WITHOUT_CLASSIFICATION	2.894263110626608E-4	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9994638809798285	WITHOUT_CLASSIFICATION	5.36119020171559E-4	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9981322583086542	WITHOUT_CLASSIFICATION	0.0018677416913459102	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9999774461241987	WITHOUT_CLASSIFICATION	2.2553875801318006E-5	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999693985608638	WITHOUT_CLASSIFICATION	3.0601439136216865E-5	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.999635170612681	WITHOUT_CLASSIFICATION	3.6482938731903486E-4	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9996063481339617	WITHOUT_CLASSIFICATION	3.936518660383421E-4	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999408852352848	WITHOUT_CLASSIFICATION	5.911476471515652E-5	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999225255543878	WITHOUT_CLASSIFICATION	7.74744456122635E-5	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9978222460234439	WITHOUT_CLASSIFICATION	0.0021777539765559747	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.999642149646196	WITHOUT_CLASSIFICATION	3.5785035380394285E-4	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.999964337911553	WITHOUT_CLASSIFICATION	3.566208844709867E-5	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9999021542261195	WITHOUT_CLASSIFICATION	9.784577388056191E-5	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999378589983793	WITHOUT_CLASSIFICATION	6.214100162066442E-5	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.999507602428071	WITHOUT_CLASSIFICATION	4.923975719290661E-4	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9998824883130306	WITHOUT_CLASSIFICATION	1.1751168696945445E-4	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9994638809798285	WITHOUT_CLASSIFICATION	5.36119020171559E-4	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.999882712168438	WITHOUT_CLASSIFICATION	1.1728783156195539E-4	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9998829042782417	WITHOUT_CLASSIFICATION	1.1709572175843697E-4	DEFECT
// security	WITHOUT_CLASSIFICATION	0.999949171846837	WITHOUT_CLASSIFICATION	5.082815316310368E-5	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9999358659602555	WITHOUT_CLASSIFICATION	6.4134039744514E-5	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.999989040609051	WITHOUT_CLASSIFICATION	1.0959390948935435E-5	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9999136460909785	WITHOUT_CLASSIFICATION	8.635390902146078E-5	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9999823575845805	WITHOUT_CLASSIFICATION	1.7642415419441395E-5	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9998737501813382	WITHOUT_CLASSIFICATION	1.2624981866177473E-4	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9996311267121587	WITHOUT_CLASSIFICATION	3.6887328784127493E-4	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9998975945639706	WITHOUT_CLASSIFICATION	1.0240543602939202E-4	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9987135979559584	WITHOUT_CLASSIFICATION	0.0012864020440416413	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.999642636180551	WITHOUT_CLASSIFICATION	3.573638194489194E-4	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9997658377996469	WITHOUT_CLASSIFICATION	2.3416220035319608E-4	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9999426444855414	WITHOUT_CLASSIFICATION	5.735551445868562E-5	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.9999537876059357	WITHOUT_CLASSIFICATION	4.6212394064374926E-5	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9985591225856616	WITHOUT_CLASSIFICATION	0.0014408774143384593	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9999618775769102	WITHOUT_CLASSIFICATION	3.812242308969326E-5	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9963249103116112	WITHOUT_CLASSIFICATION	0.003675089688388836	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9999748050040318	WITHOUT_CLASSIFICATION	2.5194995968169617E-5	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9999584348526452	WITHOUT_CLASSIFICATION	4.1565147354797546E-5	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9996721825614865	WITHOUT_CLASSIFICATION	3.278174385134659E-4	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999259063541203	WITHOUT_CLASSIFICATION	7.409364587983156E-5	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.998231937309628	WITHOUT_CLASSIFICATION	0.0017680626903719637	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9905715934635038	WITHOUT_CLASSIFICATION	0.009428406536496263	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9974087539746226	WITHOUT_CLASSIFICATION	0.002591246025377411	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9998901916590854	WITHOUT_CLASSIFICATION	1.0980834091459253E-4	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.999304615062515	WITHOUT_CLASSIFICATION	6.953849374850778E-4	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.999899968464556	WITHOUT_CLASSIFICATION	1.0003153544408347E-4	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9998862445192012	WITHOUT_CLASSIFICATION	1.137554807987892E-4	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9992475013957659	WITHOUT_CLASSIFICATION	7.524986042340427E-4	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999818366713831	WITHOUT_CLASSIFICATION	1.816332861698934E-5	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9999585698074239	WITHOUT_CLASSIFICATION	4.143019257614055E-5	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9999282479365816	WITHOUT_CLASSIFICATION	7.175206341843989E-5	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9998235344037779	WITHOUT_CLASSIFICATION	1.764655962220906E-4	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999901038849601	WITHOUT_CLASSIFICATION	9.896115039901628E-6	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999987255156395	WITHOUT_CLASSIFICATION	1.2744843605756451E-6	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9997254797891683	WITHOUT_CLASSIFICATION	2.745202108317015E-4	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9998961184790566	WITHOUT_CLASSIFICATION	1.0388152094344567E-4	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9999036646557894	WITHOUT_CLASSIFICATION	9.633534421064639E-5	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9985152232619054	WITHOUT_CLASSIFICATION	0.001484776738094563	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9997220552969168	WITHOUT_CLASSIFICATION	2.7794470308320555E-4	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999794919848627	WITHOUT_CLASSIFICATION	2.050801513727128E-5	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9999953039299806	WITHOUT_CLASSIFICATION	4.696070019346995E-6	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9998223833247113	WITHOUT_CLASSIFICATION	1.7761667528874177E-4	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9992813617572646	WITHOUT_CLASSIFICATION	7.186382427354789E-4	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9999945968283581	WITHOUT_CLASSIFICATION	5.403171641899212E-6	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999263156075319	WITHOUT_CLASSIFICATION	7.368439246816052E-5	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999899244853458	WITHOUT_CLASSIFICATION	1.0075514654118443E-5	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9905844877881148	WITHOUT_CLASSIFICATION	0.009415512211885224	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999841613061426	WITHOUT_CLASSIFICATION	1.583869385739983E-5	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9999200796401425	WITHOUT_CLASSIFICATION	7.99203598575022E-5	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.999834241940883	WITHOUT_CLASSIFICATION	1.6575805911695025E-4	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9999737014678995	WITHOUT_CLASSIFICATION	2.6298532100397795E-5	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9998856861814629	WITHOUT_CLASSIFICATION	1.1431381853716502E-4	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999941414076619	WITHOUT_CLASSIFICATION	5.858592338107151E-6	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999555208535852	WITHOUT_CLASSIFICATION	4.4479146414885565E-5	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999656965289315	WITHOUT_CLASSIFICATION	3.430347106855341E-5	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999965311438835	WITHOUT_CLASSIFICATION	3.468856116476008E-6	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999965311438835	WITHOUT_CLASSIFICATION	3.468856116476008E-6	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9999793933059167	WITHOUT_CLASSIFICATION	2.0606694083329784E-5	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.99978531938273	WITHOUT_CLASSIFICATION	2.1468061727009013E-4	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999370989512688	WITHOUT_CLASSIFICATION	6.29010487312058E-5	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9999370989512688	WITHOUT_CLASSIFICATION	6.29010487312058E-5	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9999494426845306	WITHOUT_CLASSIFICATION	5.0557315469504656E-5	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9990951940333936	WITHOUT_CLASSIFICATION	9.048059666063439E-4	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9999619295579735	WITHOUT_CLASSIFICATION	3.807044202648593E-5	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9998778332794653	WITHOUT_CLASSIFICATION	1.2216672053458065E-4	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9998487084585778	WITHOUT_CLASSIFICATION	1.5129154142213118E-4	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9998938370178102	WITHOUT_CLASSIFICATION	1.0616298218981592E-4	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9398069405586068	WITHOUT_CLASSIFICATION	0.06019305944139313	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9997944538970653	WITHOUT_CLASSIFICATION	2.0554610293473138E-4	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999912976567236	WITHOUT_CLASSIFICATION	8.702343276447656E-6	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.999812672790768	WITHOUT_CLASSIFICATION	1.8732720923198343E-4	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9999396604312295	WITHOUT_CLASSIFICATION	6.033956877033912E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999777991632233	WITHOUT_CLASSIFICATION	2.2200836776726944E-5	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9999621330818695	WITHOUT_CLASSIFICATION	3.7866918130565024E-5	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.999841959476443	WITHOUT_CLASSIFICATION	1.5804052355690014E-4	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999458195643524	WITHOUT_CLASSIFICATION	5.418043564761631E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999777991632233	WITHOUT_CLASSIFICATION	2.2200836776726944E-5	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9992924305474334	WITHOUT_CLASSIFICATION	7.075694525664887E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9973812226145597	WITHOUT_CLASSIFICATION	0.002618777385440235	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9973812226145597	WITHOUT_CLASSIFICATION	0.002618777385440235	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9973812226145597	WITHOUT_CLASSIFICATION	0.002618777385440235	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999106126572835	WITHOUT_CLASSIFICATION	8.938734271647325E-5	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999893316935267	WITHOUT_CLASSIFICATION	1.0668306473400987E-5	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9999932225511593	WITHOUT_CLASSIFICATION	6.777448840637749E-6	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9999643147701912	WITHOUT_CLASSIFICATION	3.568522980875461E-5	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999694492488974	WITHOUT_CLASSIFICATION	3.055075110253759E-5	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9999262206208767	WITHOUT_CLASSIFICATION	7.377937912327664E-5	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9992924305474334	WITHOUT_CLASSIFICATION	7.075694525664887E-4	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999661428765335	WITHOUT_CLASSIFICATION	3.385712346654478E-5	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9998926614711336	WITHOUT_CLASSIFICATION	1.0733852886639676E-4	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9998174818011833	WITHOUT_CLASSIFICATION	1.8251819881675858E-4	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9995129895145561	WITHOUT_CLASSIFICATION	4.870104854439181E-4	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999950292513451	WITHOUT_CLASSIFICATION	4.9707486548843255E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999458195643524	WITHOUT_CLASSIFICATION	5.418043564761631E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999458195643524	WITHOUT_CLASSIFICATION	5.418043564761631E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9997944538970653	WITHOUT_CLASSIFICATION	2.0554610293473138E-4	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9999661428765335	WITHOUT_CLASSIFICATION	3.385712346654478E-5	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999704435535968	WITHOUT_CLASSIFICATION	2.9556446403256258E-5	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999704435535968	WITHOUT_CLASSIFICATION	2.9556446403256258E-5	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999704435535968	WITHOUT_CLASSIFICATION	2.9556446403256258E-5	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9996346205952356	WITHOUT_CLASSIFICATION	3.653794047645308E-4	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9991737317964494	WITHOUT_CLASSIFICATION	8.2626820355067E-4	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9999229357436978	WITHOUT_CLASSIFICATION	7.706425630222665E-5	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999356239358822	WITHOUT_CLASSIFICATION	6.437606411786852E-5	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9999249824109188	WITHOUT_CLASSIFICATION	7.501758908118587E-5	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9737050282835096	WITHOUT_CLASSIFICATION	0.026294971716490343	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9999615915095298	WITHOUT_CLASSIFICATION	3.8408490470176316E-5	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999339126165067	WITHOUT_CLASSIFICATION	6.608738349333575E-5	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9998800697347008	WITHOUT_CLASSIFICATION	1.1993026529915147E-4	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9999031508080434	WITHOUT_CLASSIFICATION	9.684919195655903E-5	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9997609675269247	WITHOUT_CLASSIFICATION	2.3903247307542584E-4	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.999895246902363	WITHOUT_CLASSIFICATION	1.0475309763705826E-4	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9998920813779802	WITHOUT_CLASSIFICATION	1.0791862201985182E-4	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999320594061177	WITHOUT_CLASSIFICATION	6.794059388223896E-5	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9997609675269247	WITHOUT_CLASSIFICATION	2.3903247307542584E-4	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9987692806090425	WITHOUT_CLASSIFICATION	0.0012307193909575256	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9997609675269247	WITHOUT_CLASSIFICATION	2.3903247307542584E-4	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.999895246902363	WITHOUT_CLASSIFICATION	1.0475309763705826E-4	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9998285993783493	WITHOUT_CLASSIFICATION	1.714006216507634E-4	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.999965513910771	WITHOUT_CLASSIFICATION	3.448608922891691E-5	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9998920813779802	WITHOUT_CLASSIFICATION	1.0791862201985182E-4	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9998652113902647	WITHOUT_CLASSIFICATION	1.3478860973533126E-4	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9998285993783493	WITHOUT_CLASSIFICATION	1.714006216507634E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9998800697347008	WITHOUT_CLASSIFICATION	1.1993026529915147E-4	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9998652113902647	WITHOUT_CLASSIFICATION	1.3478860973533126E-4	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9992171298155486	WITHOUT_CLASSIFICATION	7.828701844514946E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9998800697347008	WITHOUT_CLASSIFICATION	1.1993026529915147E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9998800697347008	WITHOUT_CLASSIFICATION	1.1993026529915147E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9998800697347008	WITHOUT_CLASSIFICATION	1.1993026529915147E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9998800697347008	WITHOUT_CLASSIFICATION	1.1993026529915147E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9998871812964989	WITHOUT_CLASSIFICATION	1.1281870350115677E-4	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9987660698311104	WITHOUT_CLASSIFICATION	0.0012339301688895853	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999421536251935	WITHOUT_CLASSIFICATION	5.784637480654194E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999421536251935	WITHOUT_CLASSIFICATION	5.784637480654194E-5	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9998917184688931	WITHOUT_CLASSIFICATION	1.0828153110689649E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9999219079248939	WITHOUT_CLASSIFICATION	7.809207510615945E-5	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999320594061177	WITHOUT_CLASSIFICATION	6.794059388223896E-5	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999726083375425	WITHOUT_CLASSIFICATION	2.7391662457539473E-5	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999805335591819	WITHOUT_CLASSIFICATION	1.9466440818098393E-5	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.999957378103818	WITHOUT_CLASSIFICATION	4.262189618200684E-5	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.999957378103818	WITHOUT_CLASSIFICATION	4.262189618200684E-5	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.999957378103818	WITHOUT_CLASSIFICATION	4.262189618200684E-5	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9987454184391911	WITHOUT_CLASSIFICATION	0.001254581560809007	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9997656700308578	WITHOUT_CLASSIFICATION	2.3432996914214747E-4	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9973959568625698	WITHOUT_CLASSIFICATION	0.0026040431374302233	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999414701653667	WITHOUT_CLASSIFICATION	5.852983463336036E-5	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9999242593900576	WITHOUT_CLASSIFICATION	7.574060994246824E-5	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9998789730035589	WITHOUT_CLASSIFICATION	1.2102699644113794E-4	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9999680147804575	WITHOUT_CLASSIFICATION	3.1985219542522074E-5	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999783410958869	WITHOUT_CLASSIFICATION	2.1658904113107E-5	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9995725843460125	WITHOUT_CLASSIFICATION	4.274156539874881E-4	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9999765749589835	WITHOUT_CLASSIFICATION	2.3425041016511134E-5	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9999881340170385	WITHOUT_CLASSIFICATION	1.1865982961519984E-5	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999800260896449	WITHOUT_CLASSIFICATION	1.9973910355077783E-5	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9999424967687676	WITHOUT_CLASSIFICATION	5.750323123250798E-5	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9999899321807106	WITHOUT_CLASSIFICATION	1.0067819289401858E-5	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9999059285540628	WITHOUT_CLASSIFICATION	9.407144593718551E-5	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.999766122993587	WITHOUT_CLASSIFICATION	2.338770064129379E-4	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9998761728899624	WITHOUT_CLASSIFICATION	1.2382711003749124E-4	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.999669425468364	WITHOUT_CLASSIFICATION	3.3057453163596283E-4	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999797361345186	WITHOUT_CLASSIFICATION	2.0263865481368246E-5	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.999976118142975	WITHOUT_CLASSIFICATION	2.3881857024956547E-5	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9999215307546192	WITHOUT_CLASSIFICATION	7.846924538073336E-5	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999866301999129	WITHOUT_CLASSIFICATION	1.3369800087114925E-5	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9998650196016401	WITHOUT_CLASSIFICATION	1.3498039835994305E-4	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999681201701296	WITHOUT_CLASSIFICATION	3.1879829870418834E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999185487580128	WITHOUT_CLASSIFICATION	8.145124198717466E-5	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9999526010891346	WITHOUT_CLASSIFICATION	4.739891086546319E-5	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9999302029090836	WITHOUT_CLASSIFICATION	6.979709091630883E-5	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9999475479953931	WITHOUT_CLASSIFICATION	5.245200460685549E-5	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9999476159312101	WITHOUT_CLASSIFICATION	5.23840687898452E-5	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.99992715118895	WITHOUT_CLASSIFICATION	7.284881104999006E-5	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999789293272991	WITHOUT_CLASSIFICATION	2.107067270081162E-5	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999572707695428	WITHOUT_CLASSIFICATION	4.272923045721859E-5	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999959713179895	WITHOUT_CLASSIFICATION	4.028682010494654E-6	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999859407703536	WITHOUT_CLASSIFICATION	1.4059229646311684E-5	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.99964979316082	WITHOUT_CLASSIFICATION	3.5020683917995555E-4	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9999456909563621	WITHOUT_CLASSIFICATION	5.4309043637936524E-5	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999669980831347	WITHOUT_CLASSIFICATION	3.300191686526057E-5	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999430900246403	WITHOUT_CLASSIFICATION	5.6909975359631576E-5	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9999430900246403	WITHOUT_CLASSIFICATION	5.6909975359631576E-5	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999398672922746	WITHOUT_CLASSIFICATION	6.013270772540735E-5	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999398672922746	WITHOUT_CLASSIFICATION	6.013270772540735E-5	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9998904379921851	WITHOUT_CLASSIFICATION	1.095620078147997E-4	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999093838353478	WITHOUT_CLASSIFICATION	9.06161646521327E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999093838353478	WITHOUT_CLASSIFICATION	9.06161646521327E-5	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999979387858153	WITHOUT_CLASSIFICATION	2.0612141846657692E-6	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999979387858153	WITHOUT_CLASSIFICATION	2.0612141846657692E-6	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999989006538909	WITHOUT_CLASSIFICATION	1.0993461091731605E-6	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999950911506869	WITHOUT_CLASSIFICATION	4.908849313103722E-6	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999793297562432	WITHOUT_CLASSIFICATION	2.0670243756848003E-5	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9999947670599258	WITHOUT_CLASSIFICATION	5.23294007407907E-6	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.999961593872566	WITHOUT_CLASSIFICATION	3.8406127433969035E-5	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999704266170659	WITHOUT_CLASSIFICATION	2.957338293415854E-5	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999437337961825	WITHOUT_CLASSIFICATION	5.626620381762438E-5	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9997701176589967	WITHOUT_CLASSIFICATION	2.2988234100321695E-4	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9998120899495565	WITHOUT_CLASSIFICATION	1.879100504434573E-4	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9981185794690441	WITHOUT_CLASSIFICATION	0.0018814205309558246	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9989023306862957	WITHOUT_CLASSIFICATION	0.001097669313704188	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9997986385075226	WITHOUT_CLASSIFICATION	2.0136149247735688E-4	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999644419858199	WITHOUT_CLASSIFICATION	3.5558014180110645E-5	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9998451274748923	WITHOUT_CLASSIFICATION	1.5487252510765882E-4	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.99991919080714	WITHOUT_CLASSIFICATION	8.080919286006481E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999866301999129	WITHOUT_CLASSIFICATION	1.3369800087114925E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9999185487580128	WITHOUT_CLASSIFICATION	8.145124198717466E-5	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9999920305116174	WITHOUT_CLASSIFICATION	7.969488382548815E-6	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.99992248920725	WITHOUT_CLASSIFICATION	7.751079274997014E-5	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9992726664759005	WITHOUT_CLASSIFICATION	7.273335240993814E-4	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999882184378068	WITHOUT_CLASSIFICATION	1.1781562193182076E-5	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9999126009324163	WITHOUT_CLASSIFICATION	8.739906758364424E-5	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9995545241200582	WITHOUT_CLASSIFICATION	4.454758799417789E-4	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9999758594706393	WITHOUT_CLASSIFICATION	2.4140529360736797E-5	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9998765039398773	WITHOUT_CLASSIFICATION	1.234960601227993E-4	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9996107246690982	WITHOUT_CLASSIFICATION	3.892753309018911E-4	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999999410568077	WITHOUT_CLASSIFICATION	5.894319232724682E-8	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9806546331504788	WITHOUT_CLASSIFICATION	0.019345366849521126	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999902701750795	WITHOUT_CLASSIFICATION	9.729824920611601E-6	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999418917526132	WITHOUT_CLASSIFICATION	5.8108247386824574E-5	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999418917526132	WITHOUT_CLASSIFICATION	5.8108247386824574E-5	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9925525556011685	WITHOUT_CLASSIFICATION	0.007447444398831538	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9995848847242305	WITHOUT_CLASSIFICATION	4.1511527576963973E-4	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9999187878970025	WITHOUT_CLASSIFICATION	8.121210299759046E-5	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9998720636074866	WITHOUT_CLASSIFICATION	1.279363925133307E-4	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999551191248796	WITHOUT_CLASSIFICATION	4.488087512046817E-5	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999569942230832	WITHOUT_CLASSIFICATION	4.300577691680829E-5	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999806140241008	WITHOUT_CLASSIFICATION	1.9385975899278612E-5	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9998299255798239	WITHOUT_CLASSIFICATION	1.7007442017605753E-4	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999665607781892	WITHOUT_CLASSIFICATION	3.3439221810742275E-5	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9999744013505414	WITHOUT_CLASSIFICATION	2.5598649458591688E-5	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999694088520901	WITHOUT_CLASSIFICATION	3.059114790991971E-5	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9998661368192229	WITHOUT_CLASSIFICATION	1.3386318077717E-4	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9991970789961229	WITHOUT_CLASSIFICATION	8.029210038770335E-4	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9972655601360354	WITHOUT_CLASSIFICATION	0.0027344398639646164	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9998607401778006	WITHOUT_CLASSIFICATION	1.392598221993734E-4	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999422157151452	WITHOUT_CLASSIFICATION	5.778428485494106E-5	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9999303254390121	WITHOUT_CLASSIFICATION	6.967456098792782E-5	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9993970726979138	WITHOUT_CLASSIFICATION	6.029273020862252E-4	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999659463647701	WITHOUT_CLASSIFICATION	3.4053635229882795E-5	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999582613903538	WITHOUT_CLASSIFICATION	4.173860964619003E-5	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999582613903538	WITHOUT_CLASSIFICATION	4.173860964619003E-5	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999300243332342	WITHOUT_CLASSIFICATION	6.997566676574938E-5	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999300243332342	WITHOUT_CLASSIFICATION	6.997566676574938E-5	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999824492739907	WITHOUT_CLASSIFICATION	1.7550726009283978E-5	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.99991919080714	WITHOUT_CLASSIFICATION	8.080919286006481E-5	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9990012682144241	WITHOUT_CLASSIFICATION	9.98731785575896E-4	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9989331129534956	WITHOUT_CLASSIFICATION	0.0010668870465043623	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9998009743089964	WITHOUT_CLASSIFICATION	1.990256910035539E-4	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9931980686826735	WITHOUT_CLASSIFICATION	0.006801931317326553	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.986241184474218	WITHOUT_CLASSIFICATION	0.01375881552578203	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9998864310656117	WITHOUT_CLASSIFICATION	1.135689343882079E-4	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9998864310656117	WITHOUT_CLASSIFICATION	1.135689343882079E-4	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999829080871375	WITHOUT_CLASSIFICATION	1.709191286241888E-5	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9999714634103914	WITHOUT_CLASSIFICATION	2.853658960843945E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999057140698187	WITHOUT_CLASSIFICATION	9.428593018135805E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999057140698187	WITHOUT_CLASSIFICATION	9.428593018135805E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9997495546005851	WITHOUT_CLASSIFICATION	2.5044539941496304E-4	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9998743624153061	WITHOUT_CLASSIFICATION	1.2563758469383518E-4	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999236660635207	WITHOUT_CLASSIFICATION	7.633393647938251E-5	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999150947950074	WITHOUT_CLASSIFICATION	8.490520499249814E-5	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9361613279842995	WITHOUT_CLASSIFICATION	0.06383867201570036	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9993846316675209	WITHOUT_CLASSIFICATION	6.153683324791756E-4	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9936627944238243	WITHOUT_CLASSIFICATION	0.006337205576175664	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9936627944238243	WITHOUT_CLASSIFICATION	0.006337205576175664	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9992347846122596	WITHOUT_CLASSIFICATION	7.652153877404388E-4	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9998590693302499	WITHOUT_CLASSIFICATION	1.4093066975020548E-4	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.998789242978458	WITHOUT_CLASSIFICATION	0.001210757021542052	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9998559642789141	WITHOUT_CLASSIFICATION	1.4403572108591484E-4	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9998792536286051	WITHOUT_CLASSIFICATION	1.2074637139491681E-4	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9999116725758451	WITHOUT_CLASSIFICATION	8.832742415492705E-5	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9998167568723403	WITHOUT_CLASSIFICATION	1.8324312765979884E-4	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9999379698954459	WITHOUT_CLASSIFICATION	6.203010455410801E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999155493580232	WITHOUT_CLASSIFICATION	8.445064197674212E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999155493580232	WITHOUT_CLASSIFICATION	8.445064197674212E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999155493580232	WITHOUT_CLASSIFICATION	8.445064197674212E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999155493580232	WITHOUT_CLASSIFICATION	8.445064197674212E-5	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9999664807480332	WITHOUT_CLASSIFICATION	3.351925196676354E-5	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999368509695915	WITHOUT_CLASSIFICATION	6.31490304084942E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9997422510840384	WITHOUT_CLASSIFICATION	2.5774891596162146E-4	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9990026711307697	WITHOUT_CLASSIFICATION	9.973288692302154E-4	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9990026711307697	WITHOUT_CLASSIFICATION	9.973288692302154E-4	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9995158751448024	WITHOUT_CLASSIFICATION	4.8412485519758164E-4	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9995158751448024	WITHOUT_CLASSIFICATION	4.8412485519758164E-4	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9997923706730422	WITHOUT_CLASSIFICATION	2.076293269577337E-4	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9986121339467358	WITHOUT_CLASSIFICATION	0.0013878660532642276	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9999473130155124	WITHOUT_CLASSIFICATION	5.268698448756822E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9999269488940805	WITHOUT_CLASSIFICATION	7.305110591952498E-5	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9999887930658597	WITHOUT_CLASSIFICATION	1.1206934140222585E-5	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9971836815293112	WITHOUT_CLASSIFICATION	0.0028163184706887956	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999283403685917	WITHOUT_CLASSIFICATION	7.165963140833122E-5	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.999925689873877	WITHOUT_CLASSIFICATION	7.431012612296098E-5	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9808352989825229	WITHOUT_CLASSIFICATION	0.019164701017477113	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9998808802696483	WITHOUT_CLASSIFICATION	1.1911973035175146E-4	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.999920792255918	WITHOUT_CLASSIFICATION	7.920774408198133E-5	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9998373870354682	WITHOUT_CLASSIFICATION	1.626129645319182E-4	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999658547779082	WITHOUT_CLASSIFICATION	3.414522209165613E-5	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999671569322237	WITHOUT_CLASSIFICATION	3.2843067776266875E-5	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9998046013178687	WITHOUT_CLASSIFICATION	1.953986821312983E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999695662867766	WITHOUT_CLASSIFICATION	3.0433713223364376E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999695662867766	WITHOUT_CLASSIFICATION	3.0433713223364376E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999695662867766	WITHOUT_CLASSIFICATION	3.0433713223364376E-5	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999678779844318	WITHOUT_CLASSIFICATION	3.212201556832221E-5	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9973047740397413	WITHOUT_CLASSIFICATION	0.0026952259602587686	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9998925164161137	WITHOUT_CLASSIFICATION	1.0748358388636386E-4	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.999770077856973	WITHOUT_CLASSIFICATION	2.2992214302701878E-4	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9998992580963907	WITHOUT_CLASSIFICATION	1.007419036092823E-4	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9997638126102466	WITHOUT_CLASSIFICATION	2.3618738975337414E-4	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9999609829906136	WITHOUT_CLASSIFICATION	3.901700938629047E-5	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9997420029947451	WITHOUT_CLASSIFICATION	2.5799700525486137E-4	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999549070838675	WITHOUT_CLASSIFICATION	4.5092916132551095E-5	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9983932183701585	WITHOUT_CLASSIFICATION	0.0016067816298415178	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9999405889238646	WITHOUT_CLASSIFICATION	5.941107613533331E-5	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.999982601056428	WITHOUT_CLASSIFICATION	1.739894357203815E-5	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999136123070851	WITHOUT_CLASSIFICATION	8.638769291486094E-5	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9999530868420844	WITHOUT_CLASSIFICATION	4.6913157915568666E-5	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999470352694442	WITHOUT_CLASSIFICATION	5.296473055584179E-5	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999755935050607	WITHOUT_CLASSIFICATION	2.4406494939404354E-5	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999732116428719	WITHOUT_CLASSIFICATION	2.6788357128209897E-5	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.999984246788565	WITHOUT_CLASSIFICATION	1.5753211434966584E-5	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999998206915447	WITHOUT_CLASSIFICATION	1.7930845530090606E-7	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.999941864916885	WITHOUT_CLASSIFICATION	5.813508311500924E-5	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.999957359160927	WITHOUT_CLASSIFICATION	4.264083907306169E-5	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9937212970501937	WITHOUT_CLASSIFICATION	0.0062787029498062264	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999786744110237	WITHOUT_CLASSIFICATION	2.1325588976361602E-5	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9998967328639983	WITHOUT_CLASSIFICATION	1.0326713600175158E-4	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9999286214119053	WITHOUT_CLASSIFICATION	7.137858809474126E-5	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9993809176367378	WITHOUT_CLASSIFICATION	6.190823632622856E-4	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9996974254366268	WITHOUT_CLASSIFICATION	3.0257456337330087E-4	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9998162246090289	WITHOUT_CLASSIFICATION	1.8377539097111283E-4	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999429627860842	WITHOUT_CLASSIFICATION	5.703721391580969E-5	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999383889023177	WITHOUT_CLASSIFICATION	6.161109768230357E-5	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999580272995764	WITHOUT_CLASSIFICATION	4.197270042366579E-5	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.9999655296711795	WITHOUT_CLASSIFICATION	3.447032882046085E-5	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9999084947247683	WITHOUT_CLASSIFICATION	9.150527523179723E-5	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9997929390890463	WITHOUT_CLASSIFICATION	2.0706091095375518E-4	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9996672984256655	WITHOUT_CLASSIFICATION	3.3270157433452056E-4	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9996002317874428	WITHOUT_CLASSIFICATION	3.997682125571345E-4	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999689526104023	WITHOUT_CLASSIFICATION	3.104738959761322E-5	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9999600103636115	WITHOUT_CLASSIFICATION	3.998963638849925E-5	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999514346669045	WITHOUT_CLASSIFICATION	4.856533309548703E-5	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999486835159614	WITHOUT_CLASSIFICATION	5.1316484038657776E-5	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.999969909130888	WITHOUT_CLASSIFICATION	3.009086911197058E-5	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9988057214678341	WITHOUT_CLASSIFICATION	0.0011942785321658802	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999928106249891	WITHOUT_CLASSIFICATION	7.189375010775033E-6	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9998127334789435	WITHOUT_CLASSIFICATION	1.872665210564702E-4	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9999533713569484	WITHOUT_CLASSIFICATION	4.6628643051694245E-5	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999583209526103	WITHOUT_CLASSIFICATION	4.167904738968648E-5	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9999583322667861	WITHOUT_CLASSIFICATION	4.1667733213985464E-5	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9999639726424001	WITHOUT_CLASSIFICATION	3.6027357599952836E-5	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9996379108321667	WITHOUT_CLASSIFICATION	3.620891678332432E-4	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999994503768433	WITHOUT_CLASSIFICATION	5.496231565612252E-7	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999975345950918	WITHOUT_CLASSIFICATION	2.465404908222244E-6	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9998777509545745	WITHOUT_CLASSIFICATION	1.22249045425469E-4	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9989775371476032	WITHOUT_CLASSIFICATION	0.001022462852396832	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9997338175863179	WITHOUT_CLASSIFICATION	2.661824136821409E-4	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9999740873395222	WITHOUT_CLASSIFICATION	2.5912660477824273E-5	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9993578451806977	WITHOUT_CLASSIFICATION	6.421548193023334E-4	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999591791193445	WITHOUT_CLASSIFICATION	4.082088065541916E-5	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.999930388020891	WITHOUT_CLASSIFICATION	6.961197910910333E-5	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9999391012023052	WITHOUT_CLASSIFICATION	6.089879769467787E-5	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999960133223361	WITHOUT_CLASSIFICATION	3.986677663805451E-6	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999848887282576	WITHOUT_CLASSIFICATION	1.5111271742445521E-5	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9996232365634286	WITHOUT_CLASSIFICATION	3.767634365714643E-4	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9231106314541074	WITHOUT_CLASSIFICATION	0.07688936854589262	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999796326409606	WITHOUT_CLASSIFICATION	2.036735903936056E-5	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9997925362527733	WITHOUT_CLASSIFICATION	2.0746374722678863E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9992334993884329	WITHOUT_CLASSIFICATION	7.665006115670177E-4	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9999159609436	WITHOUT_CLASSIFICATION	8.403905639998573E-5	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999927332043894	WITHOUT_CLASSIFICATION	7.266795610579957E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9999120522584859	WITHOUT_CLASSIFICATION	8.794774151411651E-5	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999578580172398	WITHOUT_CLASSIFICATION	4.214198276010733E-5	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9861993010904436	WITHOUT_CLASSIFICATION	0.01380069890955634	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.999985460268514	WITHOUT_CLASSIFICATION	1.4539731486021544E-5	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999997610906682	WITHOUT_CLASSIFICATION	2.3890933175249324E-7	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.999985460268514	WITHOUT_CLASSIFICATION	1.4539731486021544E-5	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9998921590100536	WITHOUT_CLASSIFICATION	1.0784098994640585E-4	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9996684408957436	WITHOUT_CLASSIFICATION	3.315591042563621E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9999469826117164	WITHOUT_CLASSIFICATION	5.301738828358171E-5	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9992143692763273	WITHOUT_CLASSIFICATION	7.856307236727467E-4	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9999841511566325	WITHOUT_CLASSIFICATION	1.584884336744553E-5	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.999972200238496	WITHOUT_CLASSIFICATION	2.7799761504133167E-5	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999957604859016	WITHOUT_CLASSIFICATION	4.239514098483334E-6	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999945739452619	WITHOUT_CLASSIFICATION	5.426054738033248E-6	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999180936738508	WITHOUT_CLASSIFICATION	8.19063261491923E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9994916378966155	WITHOUT_CLASSIFICATION	5.083621033844175E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9994916378966155	WITHOUT_CLASSIFICATION	5.083621033844175E-4	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9998033247149984	WITHOUT_CLASSIFICATION	1.9667528500165799E-4	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.999985460268514	WITHOUT_CLASSIFICATION	1.4539731486021544E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999393683391844	WITHOUT_CLASSIFICATION	6.063166081555585E-5	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999961689664459	WITHOUT_CLASSIFICATION	3.831033554086938E-6	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9979637589244281	WITHOUT_CLASSIFICATION	0.0020362410755719617	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.999975505643774	WITHOUT_CLASSIFICATION	2.449435622591414E-5	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9989189467072498	WITHOUT_CLASSIFICATION	0.0010810532927502106	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999609445208284	WITHOUT_CLASSIFICATION	3.9055479171713624E-5	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9998299993184493	WITHOUT_CLASSIFICATION	1.7000068155068724E-4	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9965273529889581	WITHOUT_CLASSIFICATION	0.003472647011041808	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9998815515425995	WITHOUT_CLASSIFICATION	1.1844845740044139E-4	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9998897585448269	WITHOUT_CLASSIFICATION	1.1024145517308204E-4	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9985908633393384	WITHOUT_CLASSIFICATION	0.0014091366606616158	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.999958739144999	WITHOUT_CLASSIFICATION	4.1260855000923707E-5	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999766188291618	WITHOUT_CLASSIFICATION	2.3381170838213464E-5	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9998890022738642	WITHOUT_CLASSIFICATION	1.1099772613569974E-4	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9998594970237343	WITHOUT_CLASSIFICATION	1.4050297626578615E-4	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9998574176915086	WITHOUT_CLASSIFICATION	1.4258230849145627E-4	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9898297387752858	WITHOUT_CLASSIFICATION	0.01017026122471416	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9998299255798239	WITHOUT_CLASSIFICATION	1.7007442017605753E-4	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9998839953350206	WITHOUT_CLASSIFICATION	1.1600466497939406E-4	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999488659356396	WITHOUT_CLASSIFICATION	5.1134064360521655E-5	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.999959144432064	WITHOUT_CLASSIFICATION	4.0855567935941176E-5	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9998694293440092	WITHOUT_CLASSIFICATION	1.3057065599077607E-4	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.999860682164473	WITHOUT_CLASSIFICATION	1.3931783552694147E-4	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9998693665870668	WITHOUT_CLASSIFICATION	1.30633412933225E-4	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999810556185065	WITHOUT_CLASSIFICATION	1.8944381493408373E-5	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9998804267357109	WITHOUT_CLASSIFICATION	1.195732642892155E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.999997234183789	WITHOUT_CLASSIFICATION	2.765816210968244E-6	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999899924206942	WITHOUT_CLASSIFICATION	1.0007579305910026E-5	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999791937126619	WITHOUT_CLASSIFICATION	2.080628733824695E-5	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999997254614298	WITHOUT_CLASSIFICATION	2.745385702031111E-7	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9976747591707544	WITHOUT_CLASSIFICATION	0.0023252408292456497	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9995701965922124	WITHOUT_CLASSIFICATION	4.2980340778759897E-4	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999880006518186	WITHOUT_CLASSIFICATION	1.1999348181371259E-5	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999576450042095	WITHOUT_CLASSIFICATION	4.235499579062018E-5	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999754148379149	WITHOUT_CLASSIFICATION	2.458516208517746E-5	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9971776451853589	WITHOUT_CLASSIFICATION	0.0028223548146411115	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9996473388682354	WITHOUT_CLASSIFICATION	3.5266113176460226E-4	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.9998118282286905	WITHOUT_CLASSIFICATION	1.8817177130948273E-4	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9998552047210946	WITHOUT_CLASSIFICATION	1.4479527890544613E-4	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9991736368461428	WITHOUT_CLASSIFICATION	8.2636315385726E-4	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.999980192659803	WITHOUT_CLASSIFICATION	1.9807340196996125E-5	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9991078593457149	WITHOUT_CLASSIFICATION	8.921406542852339E-4	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.9990119662241608	WITHOUT_CLASSIFICATION	9.880337758392279E-4	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9997304908414248	WITHOUT_CLASSIFICATION	2.69509158575156E-4	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9944960649587664	WITHOUT_CLASSIFICATION	0.0055039350412336265	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9999176460058429	WITHOUT_CLASSIFICATION	8.235399415711986E-5	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999264834275623	WITHOUT_CLASSIFICATION	7.35165724377731E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9992499390151218	WITHOUT_CLASSIFICATION	7.500609848781547E-4	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9988385876735704	WITHOUT_CLASSIFICATION	0.0011614123264296462	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9997462477670686	WITHOUT_CLASSIFICATION	2.5375223293148805E-4	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9997868026976346	WITHOUT_CLASSIFICATION	2.1319730236533761E-4	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9999055903044302	WITHOUT_CLASSIFICATION	9.440969556993158E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9996981661803678	WITHOUT_CLASSIFICATION	3.018338196321801E-4	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9999406745490785	WITHOUT_CLASSIFICATION	5.9325450921504866E-5	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9999425154584942	WITHOUT_CLASSIFICATION	5.748454150589543E-5	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9916181261078707	WITHOUT_CLASSIFICATION	0.008381873892129316	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9951967897813331	WITHOUT_CLASSIFICATION	0.004803210218666951	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.999941914629613	WITHOUT_CLASSIFICATION	5.808537038696268E-5	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9998319224177297	WITHOUT_CLASSIFICATION	1.680775822703295E-4	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9983384208293395	WITHOUT_CLASSIFICATION	0.0016615791706605328	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9992668437334447	WITHOUT_CLASSIFICATION	7.331562665553985E-4	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9998433956484318	WITHOUT_CLASSIFICATION	1.5660435156813893E-4	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9847458995098699	WITHOUT_CLASSIFICATION	0.015254100490130202	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999169016473495	WITHOUT_CLASSIFICATION	8.309835265047394E-5	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999845588569702	WITHOUT_CLASSIFICATION	1.5441143029767236E-5	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999847418181178	WITHOUT_CLASSIFICATION	1.5258181882101526E-5	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9998389973162738	WITHOUT_CLASSIFICATION	1.6100268372622054E-4	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9998455859854438	WITHOUT_CLASSIFICATION	1.54414014556278E-4	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999847418181178	WITHOUT_CLASSIFICATION	1.5258181882101526E-5	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9998389973162738	WITHOUT_CLASSIFICATION	1.6100268372622054E-4	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999485230363466	WITHOUT_CLASSIFICATION	5.1476963653438946E-5	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9999873958888181	WITHOUT_CLASSIFICATION	1.2604111181857473E-5	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9997619620934135	WITHOUT_CLASSIFICATION	2.3803790658654376E-4	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999640345719719	WITHOUT_CLASSIFICATION	3.596542802811883E-5	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.999992998358929	WITHOUT_CLASSIFICATION	7.001641071052118E-6	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.999750794146691	WITHOUT_CLASSIFICATION	2.492058533089977E-4	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9997467739804395	WITHOUT_CLASSIFICATION	2.5322601956043786E-4	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999884177156212	WITHOUT_CLASSIFICATION	1.158228437875595E-5	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.999987950612348	WITHOUT_CLASSIFICATION	1.2049387652034207E-5	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999617809374947	WITHOUT_CLASSIFICATION	3.821906250538869E-5	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999747270821163	WITHOUT_CLASSIFICATION	2.527291788369304E-5	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999231360042963	WITHOUT_CLASSIFICATION	7.686399570367893E-5	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.999765955332063	WITHOUT_CLASSIFICATION	2.3404466793689921E-4	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9998947331094001	WITHOUT_CLASSIFICATION	1.0526689059996384E-4	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999603307378838	WITHOUT_CLASSIFICATION	3.966926211622159E-5	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9998951903227282	WITHOUT_CLASSIFICATION	1.0480967727174215E-4	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9998299255798239	WITHOUT_CLASSIFICATION	1.7007442017605753E-4	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9998932227121936	WITHOUT_CLASSIFICATION	1.0677728780650593E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999753331890523	WITHOUT_CLASSIFICATION	2.4666810947671808E-5	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.999929111671597	WITHOUT_CLASSIFICATION	7.088832840294122E-5	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9997316889993015	WITHOUT_CLASSIFICATION	2.6831100069853755E-4	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999360747434178	WITHOUT_CLASSIFICATION	6.392525658217334E-5	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9998587457889553	WITHOUT_CLASSIFICATION	1.412542110447456E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999927332043894	WITHOUT_CLASSIFICATION	7.266795610579957E-6	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999485808196092	WITHOUT_CLASSIFICATION	5.141918039082452E-5	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9995312537383363	WITHOUT_CLASSIFICATION	4.687462616637159E-4	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9998302757023273	WITHOUT_CLASSIFICATION	1.697242976727481E-4	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.980011977445704	WITHOUT_CLASSIFICATION	0.019988022554295985	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9987424092856595	WITHOUT_CLASSIFICATION	0.001257590714340476	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9995713362606323	WITHOUT_CLASSIFICATION	4.286637393676547E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.999913742529584	WITHOUT_CLASSIFICATION	8.62574704160688E-5	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9994137143534579	WITHOUT_CLASSIFICATION	5.86285646542099E-4	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9992122268988517	WITHOUT_CLASSIFICATION	7.877731011483261E-4	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9999847081498185	WITHOUT_CLASSIFICATION	1.5291850181459335E-5	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999629683162589	WITHOUT_CLASSIFICATION	3.7031683741104084E-5	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999633879174219	WITHOUT_CLASSIFICATION	3.6612082578097404E-5	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999973726693392	WITHOUT_CLASSIFICATION	2.6273306608534603E-6	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.998917873071105	WITHOUT_CLASSIFICATION	0.0010821269288950298	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999649968903518	WITHOUT_CLASSIFICATION	3.500310964826843E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999288683031528	WITHOUT_CLASSIFICATION	7.113169684728136E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999872676450663	WITHOUT_CLASSIFICATION	1.273235493370814E-4	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.999260630611904	WITHOUT_CLASSIFICATION	7.393693880959436E-4	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.999260630611904	WITHOUT_CLASSIFICATION	7.393693880959436E-4	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9999631046969767	WITHOUT_CLASSIFICATION	3.68953030232466E-5	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9999094916103465	WITHOUT_CLASSIFICATION	9.050838965352462E-5	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999360513290585	WITHOUT_CLASSIFICATION	6.394867094155795E-5	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.999993089911178	WITHOUT_CLASSIFICATION	6.910088821988844E-6	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.999955764342917	WITHOUT_CLASSIFICATION	4.423565708304772E-5	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9983980250137835	WITHOUT_CLASSIFICATION	0.001601974986216506	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9990175577358631	WITHOUT_CLASSIFICATION	9.82442264136909E-4	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9978920315619907	WITHOUT_CLASSIFICATION	0.002107968438009338	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.999870888644225	WITHOUT_CLASSIFICATION	1.2911135577495513E-4	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.999969259243306	WITHOUT_CLASSIFICATION	3.074075669400109E-5	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9998485821969537	WITHOUT_CLASSIFICATION	1.514178030463881E-4	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9995607156024124	WITHOUT_CLASSIFICATION	4.392843975875141E-4	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999332793909461	WITHOUT_CLASSIFICATION	6.672060905393535E-5	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9999332793909461	WITHOUT_CLASSIFICATION	6.672060905393535E-5	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999751754912422	WITHOUT_CLASSIFICATION	2.482450875781902E-5	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999732609884824	WITHOUT_CLASSIFICATION	2.673901151768418E-5	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9999485360193481	WITHOUT_CLASSIFICATION	5.146398065202027E-5	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9999604403748914	WITHOUT_CLASSIFICATION	3.9559625108585404E-5	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.999974416831077	WITHOUT_CLASSIFICATION	2.5583168922955893E-5	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9999354828650625	WITHOUT_CLASSIFICATION	6.451713493751553E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999946800869532	WITHOUT_CLASSIFICATION	5.319913046790839E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.999854216709686	WITHOUT_CLASSIFICATION	1.4578329031399916E-4	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999564774820984	WITHOUT_CLASSIFICATION	4.352251790154729E-5	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.999955764342917	WITHOUT_CLASSIFICATION	4.423565708304772E-5	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.999955764342917	WITHOUT_CLASSIFICATION	4.423565708304772E-5	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999291108752592	WITHOUT_CLASSIFICATION	7.088912474077236E-5	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999966176716526	WITHOUT_CLASSIFICATION	3.3823283474802793E-6	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.999963386226508	WITHOUT_CLASSIFICATION	3.661377349198216E-5	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999434188826	WITHOUT_CLASSIFICATION	5.658111740012574E-5	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9998641996346985	WITHOUT_CLASSIFICATION	1.3580036530151755E-4	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999951441776342	WITHOUT_CLASSIFICATION	4.8558223657582324E-6	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999951441776342	WITHOUT_CLASSIFICATION	4.8558223657582324E-6	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999969529437216	WITHOUT_CLASSIFICATION	3.0470562783580802E-6	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999994586819786	WITHOUT_CLASSIFICATION	5.413180214795129E-7	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999685118836125	WITHOUT_CLASSIFICATION	3.1488116387559984E-5	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.999805363603615	WITHOUT_CLASSIFICATION	1.9463639638490687E-4	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9994822180641543	WITHOUT_CLASSIFICATION	5.177819358457499E-4	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9999689870666159	WITHOUT_CLASSIFICATION	3.101293338410828E-5	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9999636024837192	WITHOUT_CLASSIFICATION	3.639751628071656E-5	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9999233578615125	WITHOUT_CLASSIFICATION	7.664213848743218E-5	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9998133239166088	WITHOUT_CLASSIFICATION	1.8667608339121623E-4	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9998415964270722	WITHOUT_CLASSIFICATION	1.5840357292774913E-4	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999601187567871	WITHOUT_CLASSIFICATION	3.9881243212861505E-5	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.99996567365118	WITHOUT_CLASSIFICATION	3.432634882002183E-5	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.999992464001286	WITHOUT_CLASSIFICATION	7.535998713986303E-6	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999764560283615	WITHOUT_CLASSIFICATION	2.3543971638516168E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9998690489273172	WITHOUT_CLASSIFICATION	1.309510726828238E-4	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999156010965349	WITHOUT_CLASSIFICATION	8.439890346511292E-5	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9998806043141267	WITHOUT_CLASSIFICATION	1.1939568587315332E-4	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999694619902872	WITHOUT_CLASSIFICATION	3.053800971276032E-5	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.999941662373471	WITHOUT_CLASSIFICATION	5.8337626528952824E-5	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9998693571006562	WITHOUT_CLASSIFICATION	1.3064289934392132E-4	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999850379510875	WITHOUT_CLASSIFICATION	1.4962048912464477E-5	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.999986639114468	WITHOUT_CLASSIFICATION	1.336088553195169E-5	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999735397352894	WITHOUT_CLASSIFICATION	2.6460264710580957E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999708257133195	WITHOUT_CLASSIFICATION	2.9174286680421744E-5	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9997752630196662	WITHOUT_CLASSIFICATION	2.2473698033373518E-4	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.999930952796684	WITHOUT_CLASSIFICATION	6.9047203316044E-5	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.999930952796684	WITHOUT_CLASSIFICATION	6.9047203316044E-5	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.999960020500297	WITHOUT_CLASSIFICATION	3.997949970298931E-5	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999884132178246	WITHOUT_CLASSIFICATION	1.1586782175396652E-5	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999889077253948	WITHOUT_CLASSIFICATION	1.1092274605215443E-5	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9999597971112792	WITHOUT_CLASSIFICATION	4.020288872074225E-5	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999497440214884	WITHOUT_CLASSIFICATION	5.025597851162623E-5	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.999932315297522	WITHOUT_CLASSIFICATION	6.768470247803307E-5	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999956209067767	WITHOUT_CLASSIFICATION	4.379093223266207E-6	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9921737782333898	WITHOUT_CLASSIFICATION	0.007826221766610153	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9995859590532129	WITHOUT_CLASSIFICATION	4.140409467870425E-4	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9999737386210908	WITHOUT_CLASSIFICATION	2.6261378909153858E-5	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999964727255659	WITHOUT_CLASSIFICATION	3.5272744339729774E-6	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9977942573862029	WITHOUT_CLASSIFICATION	0.002205742613797087	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999910848436561	WITHOUT_CLASSIFICATION	8.915156343920642E-6	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9745015294520157	WITHOUT_CLASSIFICATION	0.02549847054798432	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999708257133195	WITHOUT_CLASSIFICATION	2.9174286680421744E-5	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9999497440214884	WITHOUT_CLASSIFICATION	5.025597851162623E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9999109910730394	WITHOUT_CLASSIFICATION	8.900892696070142E-5	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9998619879257574	WITHOUT_CLASSIFICATION	1.380120742426225E-4	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.999995582769451	WITHOUT_CLASSIFICATION	4.417230548974287E-6	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9997900961647742	WITHOUT_CLASSIFICATION	2.0990383522585842E-4	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9996154479824592	WITHOUT_CLASSIFICATION	3.8455201754076797E-4	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9998328647226546	WITHOUT_CLASSIFICATION	1.6713527734531865E-4	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9999479238292776	WITHOUT_CLASSIFICATION	5.2076170722376354E-5	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.999958395296334	WITHOUT_CLASSIFICATION	4.160470366587424E-5	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9997054705349113	WITHOUT_CLASSIFICATION	2.945294650886917E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999256591454755	WITHOUT_CLASSIFICATION	7.434085452452735E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999498559124241	WITHOUT_CLASSIFICATION	5.0144087575849526E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.999197407708273	WITHOUT_CLASSIFICATION	8.025922917269515E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9995926325561283	WITHOUT_CLASSIFICATION	4.073674438717756E-4	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999760384818307	WITHOUT_CLASSIFICATION	2.3961518169338132E-5	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9995125083559792	WITHOUT_CLASSIFICATION	4.874916440208754E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9983387049647954	WITHOUT_CLASSIFICATION	0.0016612950352046724	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999392775902861	WITHOUT_CLASSIFICATION	6.072240971376938E-5	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9990176649020092	WITHOUT_CLASSIFICATION	9.823350979908524E-4	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9992352472617727	WITHOUT_CLASSIFICATION	7.647527382274067E-4	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999104693452784	WITHOUT_CLASSIFICATION	8.953065472160437E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9998747084608597	WITHOUT_CLASSIFICATION	1.2529153914036883E-4	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9998989737326659	WITHOUT_CLASSIFICATION	1.0102626733418195E-4	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9998020115599843	WITHOUT_CLASSIFICATION	1.979884400155878E-4	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999831677133814	WITHOUT_CLASSIFICATION	1.6832286618599037E-5	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999792663060586	WITHOUT_CLASSIFICATION	2.0733693941385203E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9998024760376646	WITHOUT_CLASSIFICATION	1.9752396233548215E-4	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999591034291967	WITHOUT_CLASSIFICATION	4.089657080331056E-5	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9999288230051727	WITHOUT_CLASSIFICATION	7.11769948272278E-5	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.9999252309244941	WITHOUT_CLASSIFICATION	7.476907550590445E-5	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9999837211219991	WITHOUT_CLASSIFICATION	1.6278878000902914E-5	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999950898805217	WITHOUT_CLASSIFICATION	4.910119478398564E-6	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9998707826400102	WITHOUT_CLASSIFICATION	1.2921735998978719E-4	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999142274766921	WITHOUT_CLASSIFICATION	8.577252330785479E-5	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9992305248543153	WITHOUT_CLASSIFICATION	7.694751456845868E-4	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.999857187411487	WITHOUT_CLASSIFICATION	1.4281258851295208E-4	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9998472866972614	WITHOUT_CLASSIFICATION	1.5271330273868898E-4	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9998466509664532	WITHOUT_CLASSIFICATION	1.5334903354685784E-4	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9998466509664532	WITHOUT_CLASSIFICATION	1.5334903354685784E-4	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9998466509664532	WITHOUT_CLASSIFICATION	1.53349033546858E-4	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9985701846506617	WITHOUT_CLASSIFICATION	0.0014298153493383578	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9968584392350778	WITHOUT_CLASSIFICATION	0.003141560764922323	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999626909428544	WITHOUT_CLASSIFICATION	3.730905714559484E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9849183324742309	WITHOUT_CLASSIFICATION	0.015081667525769045	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999653521195052	WITHOUT_CLASSIFICATION	3.464788049488425E-5	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9981237668095108	WITHOUT_CLASSIFICATION	0.0018762331904893538	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9990120486721205	WITHOUT_CLASSIFICATION	9.879513278795537E-4	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999145141207415	WITHOUT_CLASSIFICATION	8.548587925853592E-5	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999464625770835	WITHOUT_CLASSIFICATION	5.3537422916455083E-5	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9998609078959521	WITHOUT_CLASSIFICATION	1.390921040479338E-4	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9984810443584198	WITHOUT_CLASSIFICATION	0.0015189556415801287	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9988316985711129	WITHOUT_CLASSIFICATION	0.0011683014288871476	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999528491672044	WITHOUT_CLASSIFICATION	4.7150832795568E-5	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.999981387152122	WITHOUT_CLASSIFICATION	1.8612847877998647E-5	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9999718207401623	WITHOUT_CLASSIFICATION	2.8179259837541897E-5	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9996356979428856	WITHOUT_CLASSIFICATION	3.6430205711433046E-4	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.946379830832996	WITHOUT_CLASSIFICATION	0.05362016916700399	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999998534918986	WITHOUT_CLASSIFICATION	1.4650810141891073E-7	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.999999087793573	WITHOUT_CLASSIFICATION	9.122064269189425E-7	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9997402109525602	WITHOUT_CLASSIFICATION	2.597890474399024E-4	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999887723698702	WITHOUT_CLASSIFICATION	1.1227630129812212E-5	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9999359704457722	WITHOUT_CLASSIFICATION	6.402955422774384E-5	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9999664550054758	WITHOUT_CLASSIFICATION	3.354499452426234E-5	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9997402109525602	WITHOUT_CLASSIFICATION	2.597890474399024E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999667458098048	WITHOUT_CLASSIFICATION	3.3254190195086904E-5	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9997654407294495	WITHOUT_CLASSIFICATION	2.3455927055045453E-4	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9999297222289483	WITHOUT_CLASSIFICATION	7.027777105177571E-5	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999434574493392	WITHOUT_CLASSIFICATION	5.654255066087792E-5	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9987224568069992	WITHOUT_CLASSIFICATION	0.001277543193000784	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999881927762155	WITHOUT_CLASSIFICATION	1.1807223784483525E-5	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999637229018276	WITHOUT_CLASSIFICATION	3.6277098172432144E-5	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9998927284835921	WITHOUT_CLASSIFICATION	1.072715164078336E-4	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999954648998379	WITHOUT_CLASSIFICATION	4.5351001621545305E-6	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9998044474157436	WITHOUT_CLASSIFICATION	1.9555258425635997E-4	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9997992477434793	WITHOUT_CLASSIFICATION	2.0075225652067493E-4	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.999956128746966	WITHOUT_CLASSIFICATION	4.38712530339018E-5	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999508961271746	WITHOUT_CLASSIFICATION	4.910387282550252E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9995081356758675	WITHOUT_CLASSIFICATION	4.918643241325126E-4	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.999997647381199	WITHOUT_CLASSIFICATION	2.3526188008968585E-6	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999880935547228	WITHOUT_CLASSIFICATION	1.1906445277161149E-5	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999786410043242	WITHOUT_CLASSIFICATION	2.1358995675686008E-5	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999121253890656	WITHOUT_CLASSIFICATION	8.787461093442824E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.99970550503304	WITHOUT_CLASSIFICATION	2.944949669599944E-4	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.998138171189197	WITHOUT_CLASSIFICATION	0.0018618288108030096	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999639194398682	WITHOUT_CLASSIFICATION	3.608056013186927E-5	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9999383468164672	WITHOUT_CLASSIFICATION	6.165318353275773E-5	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999875404063289	WITHOUT_CLASSIFICATION	1.2459593671189754E-5	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999930677494661	WITHOUT_CLASSIFICATION	6.9322505339482785E-6	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999719142896086	WITHOUT_CLASSIFICATION	2.8085710391424715E-5	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.99997520013126	WITHOUT_CLASSIFICATION	2.4799868740058034E-5	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999766213786683	WITHOUT_CLASSIFICATION	2.3378621331809417E-5	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.999740544701212	WITHOUT_CLASSIFICATION	2.5945529878800434E-4	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.9379151248879362	WITHOUT_CLASSIFICATION	0.0620848751120638	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.9999183260684535	WITHOUT_CLASSIFICATION	8.167393154636736E-5	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9998534506495478	WITHOUT_CLASSIFICATION	1.4654935045211283E-4	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999487272012997	WITHOUT_CLASSIFICATION	5.1272798700226006E-5	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999766213786683	WITHOUT_CLASSIFICATION	2.3378621331809417E-5	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9997724732713064	WITHOUT_CLASSIFICATION	2.2752672869371675E-4	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9997724732713064	WITHOUT_CLASSIFICATION	2.2752672869371675E-4	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9995761125409748	WITHOUT_CLASSIFICATION	4.2388745902520913E-4	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999766213786683	WITHOUT_CLASSIFICATION	2.3378621331809417E-5	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999766213786683	WITHOUT_CLASSIFICATION	2.3378621331809417E-5	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9999416614520055	WITHOUT_CLASSIFICATION	5.8338547994420406E-5	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9999757855300296	WITHOUT_CLASSIFICATION	2.4214469970276565E-5	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.999981316399346	WITHOUT_CLASSIFICATION	1.8683600654035293E-5	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.999981316399346	WITHOUT_CLASSIFICATION	1.8683600654035293E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9996957731369738	WITHOUT_CLASSIFICATION	3.042268630262538E-4	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999858579783928	WITHOUT_CLASSIFICATION	1.4142021607157283E-5	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999699178396219	WITHOUT_CLASSIFICATION	3.0082160378084586E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.99970550503304	WITHOUT_CLASSIFICATION	2.944949669599944E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.99970550503304	WITHOUT_CLASSIFICATION	2.944949669599944E-4	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9996957731369738	WITHOUT_CLASSIFICATION	3.042268630262538E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999826672241431	WITHOUT_CLASSIFICATION	1.7332775856941785E-5	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9999186854152341	WITHOUT_CLASSIFICATION	8.131458476585126E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9990159496045875	WITHOUT_CLASSIFICATION	9.840503954125013E-4	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999596825959985	WITHOUT_CLASSIFICATION	4.031740400150069E-5	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.9996381336641147	WITHOUT_CLASSIFICATION	3.618663358853382E-4	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9996716097539894	WITHOUT_CLASSIFICATION	3.28390246010561E-4	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999828746108289	WITHOUT_CLASSIFICATION	1.712538917106271E-5	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999947782298466	WITHOUT_CLASSIFICATION	5.221770153269976E-6	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999653329333541	WITHOUT_CLASSIFICATION	3.4667066645889916E-5	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9996830890279728	WITHOUT_CLASSIFICATION	3.1691097202719165E-4	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999754917297913	WITHOUT_CLASSIFICATION	2.4508270208744966E-5	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9997913438531837	WITHOUT_CLASSIFICATION	2.0865614681636374E-4	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.8726829702065653	WITHOUT_CLASSIFICATION	0.12731702979343468	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9998326003033711	WITHOUT_CLASSIFICATION	1.673996966289137E-4	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9998690030175423	WITHOUT_CLASSIFICATION	1.3099698245767262E-4	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9999621108990984	WITHOUT_CLASSIFICATION	3.7889100901557464E-5	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9995261600827549	WITHOUT_CLASSIFICATION	4.738399172451422E-4	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999693115362791	WITHOUT_CLASSIFICATION	3.0688463720845606E-5	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.999827021792318	WITHOUT_CLASSIFICATION	1.7297820768199094E-4	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999517418500132	WITHOUT_CLASSIFICATION	4.8258149986762584E-5	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9999364837759883	WITHOUT_CLASSIFICATION	6.351622401166151E-5	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999131588591917	WITHOUT_CLASSIFICATION	8.68411408083223E-5	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.9999367890802949	WITHOUT_CLASSIFICATION	6.321091970511316E-5	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9990539145714059	WITHOUT_CLASSIFICATION	9.460854285941802E-4	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9993965656750307	WITHOUT_CLASSIFICATION	6.034343249692342E-4	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9997791797961825	WITHOUT_CLASSIFICATION	2.208202038174635E-4	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9999751266794591	WITHOUT_CLASSIFICATION	2.4873320540897865E-5	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9998708127858951	WITHOUT_CLASSIFICATION	1.291872141049535E-4	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999517634363142	WITHOUT_CLASSIFICATION	4.8236563685864604E-5	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9999234255402369	WITHOUT_CLASSIFICATION	7.657445976302884E-5	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9995035290861801	WITHOUT_CLASSIFICATION	4.964709138198108E-4	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9977334338955551	WITHOUT_CLASSIFICATION	0.0022665661044448918	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9995657836725809	WITHOUT_CLASSIFICATION	4.342163274190839E-4	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9999458508323739	WITHOUT_CLASSIFICATION	5.414916762607039E-5	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9999893091160381	WITHOUT_CLASSIFICATION	1.0690883961831851E-5	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999792875672883	WITHOUT_CLASSIFICATION	2.071243271174065E-5	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9997989242878487	WITHOUT_CLASSIFICATION	2.010757121512708E-4	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999280067682911	WITHOUT_CLASSIFICATION	7.199323170889372E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999980646810285	WITHOUT_CLASSIFICATION	1.9353189716248797E-6	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9992792048753726	WITHOUT_CLASSIFICATION	7.207951246275274E-4	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999418764849598	WITHOUT_CLASSIFICATION	5.8123515040085625E-5	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9999542308961237	WITHOUT_CLASSIFICATION	4.576910387625509E-5	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9998383096307762	WITHOUT_CLASSIFICATION	1.6169036922380716E-4	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9989675366717278	WITHOUT_CLASSIFICATION	0.0010324633282721672	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9999554444446542	WITHOUT_CLASSIFICATION	4.455555534568842E-5	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9999959853023258	WITHOUT_CLASSIFICATION	4.0146976742189975E-6	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9998504057705405	WITHOUT_CLASSIFICATION	1.495942294595025E-4	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.999918581410402	WITHOUT_CLASSIFICATION	8.14185895979231E-5	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9999526921642425	WITHOUT_CLASSIFICATION	4.7307835757501894E-5	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9994789207505469	WITHOUT_CLASSIFICATION	5.210792494531073E-4	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9998819745824834	WITHOUT_CLASSIFICATION	1.1802541751668368E-4	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999893930869538	WITHOUT_CLASSIFICATION	1.0606913046251193E-5	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999804165100126	WITHOUT_CLASSIFICATION	1.9583489987382552E-5	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999978500435845	WITHOUT_CLASSIFICATION	2.149956415448691E-6	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9999699178396219	WITHOUT_CLASSIFICATION	3.0082160378084586E-5	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999834666080613	WITHOUT_CLASSIFICATION	1.653339193882131E-5	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999908750933607	WITHOUT_CLASSIFICATION	9.1249066392351E-6	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999907305583619	WITHOUT_CLASSIFICATION	9.26944163825079E-6	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9999991732697435	WITHOUT_CLASSIFICATION	8.267302565240541E-7	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999991224104937	WITHOUT_CLASSIFICATION	8.775895063177708E-7	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9998410461023984	WITHOUT_CLASSIFICATION	1.5895389760155434E-4	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9998957579214781	WITHOUT_CLASSIFICATION	1.0424207852192979E-4	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9998798062417126	WITHOUT_CLASSIFICATION	1.2019375828729176E-4	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9999706318406851	WITHOUT_CLASSIFICATION	2.9368159314842616E-5	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9998157204508334	WITHOUT_CLASSIFICATION	1.8427954916664968E-4	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999974636300653	WITHOUT_CLASSIFICATION	2.5363699346919746E-6	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9999296285377929	WITHOUT_CLASSIFICATION	7.037146220710584E-5	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9998881534022754	WITHOUT_CLASSIFICATION	1.118465977246043E-4	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.999989136771485	WITHOUT_CLASSIFICATION	1.0863228514988595E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9998980461621363	WITHOUT_CLASSIFICATION	1.0195383786365846E-4	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999560557263433	WITHOUT_CLASSIFICATION	4.39442736567132E-5	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9995302129001512	WITHOUT_CLASSIFICATION	4.697870998489024E-4	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999934090216384	WITHOUT_CLASSIFICATION	6.5909783617388675E-6	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9998537856504455	WITHOUT_CLASSIFICATION	1.4621434955448636E-4	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9998537856504455	WITHOUT_CLASSIFICATION	1.4621434955448636E-4	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999804894975611	WITHOUT_CLASSIFICATION	1.9510502438876547E-5	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9997910365216626	WITHOUT_CLASSIFICATION	2.0896347833737974E-4	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9999586125926021	WITHOUT_CLASSIFICATION	4.1387407397933634E-5	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9956369140067224	WITHOUT_CLASSIFICATION	0.004363085993277582	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9991630087533548	WITHOUT_CLASSIFICATION	8.36991246645142E-4	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9998712873986211	WITHOUT_CLASSIFICATION	1.2871260137893944E-4	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9788100293497753	WITHOUT_CLASSIFICATION	0.021189970650224658	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9999789745623334	WITHOUT_CLASSIFICATION	2.1025437666559725E-5	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.999939789424028	WITHOUT_CLASSIFICATION	6.021057597205186E-5	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999991222305599	WITHOUT_CLASSIFICATION	8.777694401861483E-7	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9999524282435494	WITHOUT_CLASSIFICATION	4.75717564506337E-5	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9999465567096426	WITHOUT_CLASSIFICATION	5.344329035732613E-5	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999972504450316	WITHOUT_CLASSIFICATION	2.7495549683415402E-6	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999967534086218	WITHOUT_CLASSIFICATION	3.246591378134251E-6	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999801011310485	WITHOUT_CLASSIFICATION	1.9898868951507315E-5	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999181756659948	WITHOUT_CLASSIFICATION	8.182433400511679E-5	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999181756659948	WITHOUT_CLASSIFICATION	8.182433400511679E-5	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999987359970256	WITHOUT_CLASSIFICATION	1.2640029743940966E-6	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9998971388448347	WITHOUT_CLASSIFICATION	1.0286115516530678E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9998702690814424	WITHOUT_CLASSIFICATION	1.2973091855765037E-4	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999195891707949	WITHOUT_CLASSIFICATION	8.04108292051474E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9998781873296575	WITHOUT_CLASSIFICATION	1.2181267034251665E-4	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.999631513201634	WITHOUT_CLASSIFICATION	3.684867983660076E-4	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9992452751113668	WITHOUT_CLASSIFICATION	7.547248886331894E-4	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9997678603627161	WITHOUT_CLASSIFICATION	2.3213963728388495E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9999286696077704	WITHOUT_CLASSIFICATION	7.133039222954879E-5	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9998002190877867	WITHOUT_CLASSIFICATION	1.9978091221331396E-4	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999475360695602	WITHOUT_CLASSIFICATION	5.246393043972121E-5	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9999061451298463	WITHOUT_CLASSIFICATION	9.38548701536433E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9998702690814424	WITHOUT_CLASSIFICATION	1.2973091855765037E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9998781873296575	WITHOUT_CLASSIFICATION	1.2181267034251665E-4	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999951370858041	WITHOUT_CLASSIFICATION	4.862914195852551E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999983830737953	WITHOUT_CLASSIFICATION	1.616926204689213E-5	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999996989855524	WITHOUT_CLASSIFICATION	3.0101444751600025E-7	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9997653888251101	WITHOUT_CLASSIFICATION	2.3461117488981568E-4	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999514061547734	WITHOUT_CLASSIFICATION	4.859384522671366E-5	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9999087187660746	WITHOUT_CLASSIFICATION	9.128123392535711E-5	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9974417020068277	WITHOUT_CLASSIFICATION	0.0025582979931723306	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9999207904658395	WITHOUT_CLASSIFICATION	7.920953416046184E-5	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.999968863006385	WITHOUT_CLASSIFICATION	3.113699361506322E-5	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999526802336561	WITHOUT_CLASSIFICATION	4.731976634384179E-5	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9998710967422892	WITHOUT_CLASSIFICATION	1.2890325771070562E-4	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999536969539897	WITHOUT_CLASSIFICATION	4.6303046010262475E-5	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9996012975766473	WITHOUT_CLASSIFICATION	3.9870242335266344E-4	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9998859982090801	WITHOUT_CLASSIFICATION	1.1400179091994433E-4	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999936874619135	WITHOUT_CLASSIFICATION	6.312538086528894E-6	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999578264440134	WITHOUT_CLASSIFICATION	4.217355598652127E-5	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.999555054800177	WITHOUT_CLASSIFICATION	4.44945199823019E-4	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.985928469426136	WITHOUT_CLASSIFICATION	0.01407153057386407	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999737329362846	WITHOUT_CLASSIFICATION	2.6267063715488155E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.99997520013126	WITHOUT_CLASSIFICATION	2.4799868740058034E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.99995938916452	WITHOUT_CLASSIFICATION	4.061083548000965E-5	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9998610446040331	WITHOUT_CLASSIFICATION	1.389553959670045E-4	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999442516137311	WITHOUT_CLASSIFICATION	5.574838626880672E-5	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999923931842634	WITHOUT_CLASSIFICATION	7.606815736634991E-6	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9999156871331669	WITHOUT_CLASSIFICATION	8.431286683312941E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999327154306484	WITHOUT_CLASSIFICATION	6.728456935154302E-5	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9998342474330756	WITHOUT_CLASSIFICATION	1.6575256692441062E-4	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.999968630261426	WITHOUT_CLASSIFICATION	3.136973857397933E-5	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999718046193495	WITHOUT_CLASSIFICATION	2.819538065054273E-5	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9999886170857958	WITHOUT_CLASSIFICATION	1.1382914204205096E-5	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999180936738508	WITHOUT_CLASSIFICATION	8.19063261491923E-5	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.999928993661509	WITHOUT_CLASSIFICATION	7.100633849094746E-5	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9983784250286369	WITHOUT_CLASSIFICATION	0.0016215749713630037	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9998946288947254	WITHOUT_CLASSIFICATION	1.0537110527459483E-4	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9999262942045078	WITHOUT_CLASSIFICATION	7.370579549215832E-5	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999996961367273	WITHOUT_CLASSIFICATION	3.038632726931506E-7	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999827949029365	WITHOUT_CLASSIFICATION	1.720509706344256E-5	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.9996267327722839	WITHOUT_CLASSIFICATION	3.7326722771612904E-4	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999928349532659	WITHOUT_CLASSIFICATION	7.165046734214505E-6	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999834208674934	WITHOUT_CLASSIFICATION	1.6579132506722596E-5	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9990912057153057	WITHOUT_CLASSIFICATION	9.087942846941486E-4	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9998778740527399	WITHOUT_CLASSIFICATION	1.221259472600226E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9992271805570797	WITHOUT_CLASSIFICATION	7.728194429202334E-4	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999294893145876	WITHOUT_CLASSIFICATION	7.051068541243022E-5	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999871844941441	WITHOUT_CLASSIFICATION	1.2815505855835712E-5	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9997870329587675	WITHOUT_CLASSIFICATION	2.12967041232596E-4	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999134010268376	WITHOUT_CLASSIFICATION	8.659897316240305E-5	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9989030304687173	WITHOUT_CLASSIFICATION	0.0010969695312827198	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9998539441732596	WITHOUT_CLASSIFICATION	1.460558267404973E-4	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999838939736989	WITHOUT_CLASSIFICATION	1.6106026301145948E-5	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999684553579173	WITHOUT_CLASSIFICATION	3.15446420826697E-5	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999906683311774	WITHOUT_CLASSIFICATION	9.331668822524362E-6	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999944563037736	WITHOUT_CLASSIFICATION	5.543696226441131E-6	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9998972480098981	WITHOUT_CLASSIFICATION	1.0275199010189493E-4	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9998412190869885	WITHOUT_CLASSIFICATION	1.5878091301146178E-4	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9999467233321692	WITHOUT_CLASSIFICATION	5.3276667830806656E-5	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.999873575466391	WITHOUT_CLASSIFICATION	1.2642453360909884E-4	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9996444814601723	WITHOUT_CLASSIFICATION	3.555185398277115E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9999121253890656	WITHOUT_CLASSIFICATION	8.787461093442824E-5	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.999983034621919	WITHOUT_CLASSIFICATION	1.6965378081130057E-5	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999714436105125	WITHOUT_CLASSIFICATION	2.8556389487593394E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999241818276702	WITHOUT_CLASSIFICATION	7.581817232985133E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9999241818276702	WITHOUT_CLASSIFICATION	7.581817232985133E-5	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9995923516038324	WITHOUT_CLASSIFICATION	4.0764839616760896E-4	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9999732023196682	WITHOUT_CLASSIFICATION	2.6797680331850725E-5	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.999925957602688	WITHOUT_CLASSIFICATION	7.404239731199444E-5	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9997835663170243	WITHOUT_CLASSIFICATION	2.164336829757485E-4	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999484548770742	WITHOUT_CLASSIFICATION	5.154512292576374E-5	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.999993854731454	WITHOUT_CLASSIFICATION	6.145268546041395E-6	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9998946788906986	WITHOUT_CLASSIFICATION	1.0532110930130556E-4	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9650731360069676	WITHOUT_CLASSIFICATION	0.03492686399303235	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.999890840610126	WITHOUT_CLASSIFICATION	1.0915938987396218E-4	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9999627301567229	WITHOUT_CLASSIFICATION	3.7269843277222226E-5	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.999963077311419	WITHOUT_CLASSIFICATION	3.6922688581063055E-5	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999952862941764	WITHOUT_CLASSIFICATION	4.713705823551272E-6	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9999331347089436	WITHOUT_CLASSIFICATION	6.686529105640064E-5	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9999700691693495	WITHOUT_CLASSIFICATION	2.9930830650536195E-5	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.999844939239263	WITHOUT_CLASSIFICATION	1.5506076073700014E-4	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999788299067491	WITHOUT_CLASSIFICATION	2.117009325089818E-5	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.9994814954705701	WITHOUT_CLASSIFICATION	5.185045294299254E-4	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9998618381863732	WITHOUT_CLASSIFICATION	1.381618136268464E-4	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999612083157523	WITHOUT_CLASSIFICATION	3.879168424771696E-5	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9993708983889761	WITHOUT_CLASSIFICATION	6.291016110239502E-4	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9998288590364417	WITHOUT_CLASSIFICATION	1.7114096355828786E-4	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9997941896432901	WITHOUT_CLASSIFICATION	2.0581035670983017E-4	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999855454874463	WITHOUT_CLASSIFICATION	1.4454512553678497E-5	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999972897454927	WITHOUT_CLASSIFICATION	2.710254507266422E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.999860682164473	WITHOUT_CLASSIFICATION	1.3931783552694147E-4	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9998693665870668	WITHOUT_CLASSIFICATION	1.30633412933225E-4	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9997941896432901	WITHOUT_CLASSIFICATION	2.0581035670983017E-4	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.9998383694957922	WITHOUT_CLASSIFICATION	1.6163050420782627E-4	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9184196179937603	WITHOUT_CLASSIFICATION	0.08158038200623965	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9993768507826851	WITHOUT_CLASSIFICATION	6.231492173148493E-4	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999733762605925	WITHOUT_CLASSIFICATION	2.6623739407508134E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9311627126771469	WITHOUT_CLASSIFICATION	0.068837287322853	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999973273962977	WITHOUT_CLASSIFICATION	2.672603702241798E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999633022254621	WITHOUT_CLASSIFICATION	3.6697774537930115E-5	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999696792368887	WITHOUT_CLASSIFICATION	3.0320763111215733E-5	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999652264581355	WITHOUT_CLASSIFICATION	3.477354186454665E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.999977593399204	WITHOUT_CLASSIFICATION	2.240660079598398E-5	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999690217992916	WITHOUT_CLASSIFICATION	3.0978200708384666E-5	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999230114665296	WITHOUT_CLASSIFICATION	7.698853347035254E-5	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999511579549388	WITHOUT_CLASSIFICATION	4.884204506107375E-5	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.999935570979925	WITHOUT_CLASSIFICATION	6.442902007499915E-5	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999230114665296	WITHOUT_CLASSIFICATION	7.698853347035254E-5	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.999983192059226	WITHOUT_CLASSIFICATION	1.6807940773904007E-5	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9999832951959539	WITHOUT_CLASSIFICATION	1.6704804046071824E-5	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999822990404212	WITHOUT_CLASSIFICATION	1.7700959578740462E-5	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.9999835380015811	WITHOUT_CLASSIFICATION	1.6461998418954826E-5	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.999949412110506	WITHOUT_CLASSIFICATION	5.058788949399165E-5	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9999672785424416	WITHOUT_CLASSIFICATION	3.2721457558468986E-5	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999922296171545	WITHOUT_CLASSIFICATION	7.77038284552559E-6	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999901260654108	WITHOUT_CLASSIFICATION	9.873934589225293E-6	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.999999588713879	WITHOUT_CLASSIFICATION	4.112861210335434E-7	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9999719540352751	WITHOUT_CLASSIFICATION	2.804596472505515E-5	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999956341723941	WITHOUT_CLASSIFICATION	4.365827605926172E-6	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999956341723941	WITHOUT_CLASSIFICATION	4.365827605926172E-6	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999152661400992	WITHOUT_CLASSIFICATION	8.473385990080588E-5	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.999758896017271	WITHOUT_CLASSIFICATION	2.411039827289644E-4	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.999859542419763	WITHOUT_CLASSIFICATION	1.404575802370743E-4	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9999610599423666	WITHOUT_CLASSIFICATION	3.8940057633327056E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.999872676450663	WITHOUT_CLASSIFICATION	1.273235493370814E-4	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9311627126771469	WITHOUT_CLASSIFICATION	0.068837287322853	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999973273962977	WITHOUT_CLASSIFICATION	2.672603702241798E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999633022254621	WITHOUT_CLASSIFICATION	3.6697774537930115E-5	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999652264581355	WITHOUT_CLASSIFICATION	3.477354186454665E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.999977593399204	WITHOUT_CLASSIFICATION	2.240660079598398E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9999383456594386	WITHOUT_CLASSIFICATION	6.16543405612796E-5	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9999379205978844	WITHOUT_CLASSIFICATION	6.20794021155002E-5	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9999642076983049	WITHOUT_CLASSIFICATION	3.579230169511851E-5	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9982851471563242	WITHOUT_CLASSIFICATION	0.0017148528436758642	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999838918573352	WITHOUT_CLASSIFICATION	1.6108142664888616E-5	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9999913370548511	WITHOUT_CLASSIFICATION	8.6629451489368E-6	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9992837863056845	WITHOUT_CLASSIFICATION	7.162136943154525E-4	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9999495156912583	WITHOUT_CLASSIFICATION	5.048430874171948E-5	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9998924305818951	WITHOUT_CLASSIFICATION	1.075694181048244E-4	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9999276094985553	WITHOUT_CLASSIFICATION	7.239050144467126E-5	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999618988687617	WITHOUT_CLASSIFICATION	3.8101131238227784E-5	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9998329394607263	WITHOUT_CLASSIFICATION	1.6706053927381456E-4	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999876256562438	WITHOUT_CLASSIFICATION	1.2374343756196167E-5	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9999196636781177	WITHOUT_CLASSIFICATION	8.033632188234016E-5	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999582567132905	WITHOUT_CLASSIFICATION	4.174328670938576E-5	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999987610519772	WITHOUT_CLASSIFICATION	1.2389480228957854E-6	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999989514586278	WITHOUT_CLASSIFICATION	1.0485413721098807E-6	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999373273551875	WITHOUT_CLASSIFICATION	6.267264481252825E-5	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999557546396177	WITHOUT_CLASSIFICATION	4.4245360382240266E-5	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999712147163746	WITHOUT_CLASSIFICATION	2.8785283625285563E-5	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999849797481384	WITHOUT_CLASSIFICATION	1.5020251861733465E-5	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999476794068427	WITHOUT_CLASSIFICATION	5.232059315725817E-5	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9998410983547493	WITHOUT_CLASSIFICATION	1.5890164525077732E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9988316985711129	WITHOUT_CLASSIFICATION	0.0011683014288871476	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999327154306484	WITHOUT_CLASSIFICATION	6.728456935154302E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999838939736989	WITHOUT_CLASSIFICATION	1.6106026301145948E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.999977593399204	WITHOUT_CLASSIFICATION	2.240660079598398E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9999758637064198	WITHOUT_CLASSIFICATION	2.413629358022373E-5	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999596427254119	WITHOUT_CLASSIFICATION	4.0357274588134545E-5	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9996822153263332	WITHOUT_CLASSIFICATION	3.1778467366683856E-4	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.999894968918457	WITHOUT_CLASSIFICATION	1.0503108154306567E-4	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.999894968918457	WITHOUT_CLASSIFICATION	1.0503108154306567E-4	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.99543889650814	WITHOUT_CLASSIFICATION	0.0045611034918600106	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999815445042781	WITHOUT_CLASSIFICATION	1.8455495721845306E-5	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9995368709856467	WITHOUT_CLASSIFICATION	4.631290143533095E-4	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.999939603039238	WITHOUT_CLASSIFICATION	6.039696076208908E-5	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9994238670454347	WITHOUT_CLASSIFICATION	5.761329545652789E-4	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9981585249057381	WITHOUT_CLASSIFICATION	0.001841475094261908	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999937785367954	WITHOUT_CLASSIFICATION	6.221463204670985E-6	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9994811099769831	WITHOUT_CLASSIFICATION	5.188900230168457E-4	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.998581160908348	WITHOUT_CLASSIFICATION	0.001418839091652016	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999223848768882	WITHOUT_CLASSIFICATION	7.76151231116915E-5	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9996757917629504	WITHOUT_CLASSIFICATION	3.2420823704966243E-4	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.99997624367411	WITHOUT_CLASSIFICATION	2.375632589004482E-5	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9995589825531218	WITHOUT_CLASSIFICATION	4.410174468781283E-4	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9998214137895557	WITHOUT_CLASSIFICATION	1.7858621044425087E-4	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999749010259309	WITHOUT_CLASSIFICATION	2.509897406906523E-5	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999266191477041	WITHOUT_CLASSIFICATION	7.338085229592862E-5	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.999996522176486	WITHOUT_CLASSIFICATION	3.4778235138217715E-6	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9998885784388146	WITHOUT_CLASSIFICATION	1.1142156118537225E-4	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999749010259309	WITHOUT_CLASSIFICATION	2.509897406906523E-5	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999749010259309	WITHOUT_CLASSIFICATION	2.509897406906523E-5	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.999906141442073	WITHOUT_CLASSIFICATION	9.385855792694462E-5	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999801612117935	WITHOUT_CLASSIFICATION	1.9838788206472935E-5	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999801612117935	WITHOUT_CLASSIFICATION	1.9838788206472935E-5	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.999996522176486	WITHOUT_CLASSIFICATION	3.4778235138217715E-6	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999266191477041	WITHOUT_CLASSIFICATION	7.338085229592862E-5	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999299010765523	WITHOUT_CLASSIFICATION	7.009892344760532E-5	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999299010765523	WITHOUT_CLASSIFICATION	7.009892344760532E-5	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999921942017698	WITHOUT_CLASSIFICATION	7.805798230214638E-6	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999853545359624	WITHOUT_CLASSIFICATION	1.4645464037659062E-5	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9995533794081686	WITHOUT_CLASSIFICATION	4.4662059183149446E-4	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.999980120496684	WITHOUT_CLASSIFICATION	1.987950331598521E-5	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9997628614664557	WITHOUT_CLASSIFICATION	2.371385335442147E-4	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9998969400986186	WITHOUT_CLASSIFICATION	1.0305990138139917E-4	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9999356002832466	WITHOUT_CLASSIFICATION	6.439971675340376E-5	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.999839069900563	WITHOUT_CLASSIFICATION	1.6093009943707678E-4	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9997055694675804	WITHOUT_CLASSIFICATION	2.9443053241958686E-4	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9998969400986186	WITHOUT_CLASSIFICATION	1.0305990138139917E-4	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9999876104802584	WITHOUT_CLASSIFICATION	1.238951974154921E-5	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9998993020580839	WITHOUT_CLASSIFICATION	1.0069794191609857E-4	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9784802460043834	WITHOUT_CLASSIFICATION	0.02151975399561647	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999888351032118	WITHOUT_CLASSIFICATION	1.116489678824275E-5	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.999985405418314	WITHOUT_CLASSIFICATION	1.4594581686050221E-5	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9999802633499134	WITHOUT_CLASSIFICATION	1.973665008656656E-5	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.999957690562953	WITHOUT_CLASSIFICATION	4.230943704700099E-5	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9997977521041331	WITHOUT_CLASSIFICATION	2.0224789586681895E-4	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9998321687394214	WITHOUT_CLASSIFICATION	1.6783126057858615E-4	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9998969400986186	WITHOUT_CLASSIFICATION	1.0305990138139917E-4	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.999945076403331	WITHOUT_CLASSIFICATION	5.4923596669117586E-5	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999301869010268	WITHOUT_CLASSIFICATION	6.981309897317937E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999115399180507	WITHOUT_CLASSIFICATION	8.846008194936139E-5	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999686598852612	WITHOUT_CLASSIFICATION	3.134011473891175E-5	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999814314700285	WITHOUT_CLASSIFICATION	1.856852997152777E-5	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999787934339025	WITHOUT_CLASSIFICATION	2.1206566097546037E-5	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9999929983423952	WITHOUT_CLASSIFICATION	7.001657604758826E-6	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999279625048907	WITHOUT_CLASSIFICATION	7.203749510929005E-5	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9998780785822559	WITHOUT_CLASSIFICATION	1.2192141774412864E-4	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.999991493106248	WITHOUT_CLASSIFICATION	8.50689375206254E-6	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.9997353570398283	WITHOUT_CLASSIFICATION	2.6464296017180783E-4	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9998311132300365	WITHOUT_CLASSIFICATION	1.6888676996364464E-4	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9997063062018375	WITHOUT_CLASSIFICATION	2.93693798162468E-4	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9998816624974718	WITHOUT_CLASSIFICATION	1.1833750252830695E-4	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9998436754133894	WITHOUT_CLASSIFICATION	1.5632458661052643E-4	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999834540748741	WITHOUT_CLASSIFICATION	1.654592512594965E-5	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999435814374223	WITHOUT_CLASSIFICATION	5.6418562577672416E-5	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9996647587233943	WITHOUT_CLASSIFICATION	3.352412766057328E-4	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9997549180422133	WITHOUT_CLASSIFICATION	2.450819577867855E-4	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9995964577113788	WITHOUT_CLASSIFICATION	4.035422886210383E-4	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9999014343522638	WITHOUT_CLASSIFICATION	9.856564773626426E-5	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.998846639415953	WITHOUT_CLASSIFICATION	0.001153360584047073	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999829438684433	WITHOUT_CLASSIFICATION	1.7056131556639918E-5	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9994844272320651	WITHOUT_CLASSIFICATION	5.155727679349635E-4	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9997673426632249	WITHOUT_CLASSIFICATION	2.3265733677505147E-4	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9997801226278279	WITHOUT_CLASSIFICATION	2.1987737217218396E-4	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9998546098721997	WITHOUT_CLASSIFICATION	1.4539012780030882E-4	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9998622559623686	WITHOUT_CLASSIFICATION	1.3774403763148208E-4	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9998434361640383	WITHOUT_CLASSIFICATION	1.56563835961674E-4	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.999962911439316	WITHOUT_CLASSIFICATION	3.708856068386383E-5	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9994174266260417	WITHOUT_CLASSIFICATION	5.825733739583762E-4	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9966444277124153	WITHOUT_CLASSIFICATION	0.003355572287584774	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.999972313240915	WITHOUT_CLASSIFICATION	2.768675908507318E-5	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9998536211297476	WITHOUT_CLASSIFICATION	1.4637887025236975E-4	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9997673426632249	WITHOUT_CLASSIFICATION	2.3265733677505147E-4	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9998732004849088	WITHOUT_CLASSIFICATION	1.2679951509123575E-4	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999628339114864	WITHOUT_CLASSIFICATION	3.716608851364827E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9998511495896071	WITHOUT_CLASSIFICATION	1.4885041039292937E-4	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9998511495896071	WITHOUT_CLASSIFICATION	1.4885041039292937E-4	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999980517488133	WITHOUT_CLASSIFICATION	1.9482511867546397E-6	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9999321544266565	WITHOUT_CLASSIFICATION	6.784557334345554E-5	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.999998179183901	WITHOUT_CLASSIFICATION	1.8208160989909497E-6	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9997746038375473	WITHOUT_CLASSIFICATION	2.2539616245264543E-4	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999958830993283	WITHOUT_CLASSIFICATION	4.116900671753231E-6	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9999538628763897	WITHOUT_CLASSIFICATION	4.6137123610415586E-5	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9998422933739193	WITHOUT_CLASSIFICATION	1.577066260806153E-4	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999817353213237	WITHOUT_CLASSIFICATION	1.8264678676265706E-5	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.999657097512917	WITHOUT_CLASSIFICATION	3.4290248708306606E-4	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9998292668740112	WITHOUT_CLASSIFICATION	1.707331259887336E-4	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9998470013616876	WITHOUT_CLASSIFICATION	1.5299863831252233E-4	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9993150222962294	WITHOUT_CLASSIFICATION	6.849777037707146E-4	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9999671531234637	WITHOUT_CLASSIFICATION	3.28468765362905E-5	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9999778630639853	WITHOUT_CLASSIFICATION	2.2136936014762995E-5	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9998599621442391	WITHOUT_CLASSIFICATION	1.400378557608983E-4	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999569715132965	WITHOUT_CLASSIFICATION	4.302848670351115E-5	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.999866249107024	WITHOUT_CLASSIFICATION	1.3375089297593048E-4	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999619633249411	WITHOUT_CLASSIFICATION	3.8036675058775345E-5	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.999957761945882	WITHOUT_CLASSIFICATION	4.223805411791719E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9999878134181949	WITHOUT_CLASSIFICATION	1.2186581805133355E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9996981661803678	WITHOUT_CLASSIFICATION	3.018338196321801E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9996981661803678	WITHOUT_CLASSIFICATION	3.018338196321801E-4	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9997659378186039	WITHOUT_CLASSIFICATION	2.340621813961693E-4	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999986516325692	WITHOUT_CLASSIFICATION	1.3483674307226073E-6	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999992548589295	WITHOUT_CLASSIFICATION	7.451410705544766E-7	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9997714409464865	WITHOUT_CLASSIFICATION	2.2855905351360244E-4	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9998046887420953	WITHOUT_CLASSIFICATION	1.9531125790470976E-4	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999965963915903	WITHOUT_CLASSIFICATION	3.4036084097680656E-6	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999894283457527	WITHOUT_CLASSIFICATION	1.0571654247318611E-5	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9967217175754604	WITHOUT_CLASSIFICATION	0.0032782824245396218	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9997772882117255	WITHOUT_CLASSIFICATION	2.2271178827447654E-4	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9994754509969248	WITHOUT_CLASSIFICATION	5.245490030751654E-4	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999697004943167	WITHOUT_CLASSIFICATION	3.0299505683454013E-5	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9997887621715478	WITHOUT_CLASSIFICATION	2.1123782845220915E-4	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9998804382048185	WITHOUT_CLASSIFICATION	1.1956179518148084E-4	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9998378654530313	WITHOUT_CLASSIFICATION	1.6213454696860537E-4	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999654969115804	WITHOUT_CLASSIFICATION	3.450308841959201E-5	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999748433625378	WITHOUT_CLASSIFICATION	2.5156637462183965E-5	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9996740874952648	WITHOUT_CLASSIFICATION	3.259125047351725E-4	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9998031074348713	WITHOUT_CLASSIFICATION	1.9689256512870118E-4	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.999993505782918	WITHOUT_CLASSIFICATION	6.494217081985747E-6	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9995462141860624	WITHOUT_CLASSIFICATION	4.5378581393760547E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999517418500132	WITHOUT_CLASSIFICATION	4.8258149986762584E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999983830737953	WITHOUT_CLASSIFICATION	1.616926204689213E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999624212593105	WITHOUT_CLASSIFICATION	3.757874068956785E-5	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9999670816415563	WITHOUT_CLASSIFICATION	3.291835844354162E-5	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9999823775872104	WITHOUT_CLASSIFICATION	1.762241278961281E-5	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9997148647422376	WITHOUT_CLASSIFICATION	2.8513525776238235E-4	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999836316719604	WITHOUT_CLASSIFICATION	1.636832803963972E-5	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.999972477556223	WITHOUT_CLASSIFICATION	2.7522443776964112E-5	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9999925934178829	WITHOUT_CLASSIFICATION	7.406582117057364E-6	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999995257236659	WITHOUT_CLASSIFICATION	4.742763341203837E-7	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9998942607799267	WITHOUT_CLASSIFICATION	1.0573922007326994E-4	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999280458084499	WITHOUT_CLASSIFICATION	7.195419155010787E-5	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999866406567095	WITHOUT_CLASSIFICATION	1.3359343290508391E-5	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999866406567095	WITHOUT_CLASSIFICATION	1.3359343290508391E-5	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.999958031241857	WITHOUT_CLASSIFICATION	4.196875814303562E-5	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9997733931745876	WITHOUT_CLASSIFICATION	2.266068254123581E-4	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9959536593111499	WITHOUT_CLASSIFICATION	0.0040463406888501295	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999520536326231	WITHOUT_CLASSIFICATION	4.794636737701351E-5	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.99910698389237	WITHOUT_CLASSIFICATION	8.930161076299588E-4	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9997683942208725	WITHOUT_CLASSIFICATION	2.3160577912751342E-4	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9999257852832533	WITHOUT_CLASSIFICATION	7.421471674671578E-5	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999563138088078	WITHOUT_CLASSIFICATION	4.36861911922903E-5	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999714004289121	WITHOUT_CLASSIFICATION	2.859957108789901E-5	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999949609517684	WITHOUT_CLASSIFICATION	5.039048231581713E-6	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999660469736804	WITHOUT_CLASSIFICATION	3.3953026319614936E-5	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999756260028817	WITHOUT_CLASSIFICATION	2.437399711822361E-5	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999686801253299	WITHOUT_CLASSIFICATION	3.1319874670115094E-5	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9999324338667805	WITHOUT_CLASSIFICATION	6.756613321947816E-5	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.999818557481416	WITHOUT_CLASSIFICATION	1.8144251858404994E-4	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9983138434666261	WITHOUT_CLASSIFICATION	0.0016861565333739642	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9995638500931	WITHOUT_CLASSIFICATION	4.3614990690003927E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999528491672044	WITHOUT_CLASSIFICATION	4.7150832795568E-5	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999464625770835	WITHOUT_CLASSIFICATION	5.3537422916455083E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9999719249352832	WITHOUT_CLASSIFICATION	2.8075064716750366E-5	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9996999577200022	WITHOUT_CLASSIFICATION	3.000422799977805E-4	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.999993165531669	WITHOUT_CLASSIFICATION	6.834468331037076E-6	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9986587820433211	WITHOUT_CLASSIFICATION	0.0013412179566789266	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.999942781390851	WITHOUT_CLASSIFICATION	5.721860914898192E-5	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999413412174324	WITHOUT_CLASSIFICATION	5.865878256767591E-5	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9999178726100295	WITHOUT_CLASSIFICATION	8.212738997051803E-5	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9998746905315403	WITHOUT_CLASSIFICATION	1.2530946845978528E-4	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.999958652708413	WITHOUT_CLASSIFICATION	4.134729158708553E-5	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9994922496825486	WITHOUT_CLASSIFICATION	5.0775031745149E-4	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999798645344075	WITHOUT_CLASSIFICATION	2.0135465592542215E-5	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999299049886258	WITHOUT_CLASSIFICATION	7.009501137425656E-5	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9999350624546058	WITHOUT_CLASSIFICATION	6.493754539422332E-5	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9998586498507261	WITHOUT_CLASSIFICATION	1.4135014927388266E-4	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9998688718811802	WITHOUT_CLASSIFICATION	1.3112811881976774E-4	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9998565179706136	WITHOUT_CLASSIFICATION	1.4348202938645408E-4	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9998565179706136	WITHOUT_CLASSIFICATION	1.4348202938645408E-4	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.999947591910302	WITHOUT_CLASSIFICATION	5.2408089697877507E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.999977593399204	WITHOUT_CLASSIFICATION	2.240660079598398E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999978687913267	WITHOUT_CLASSIFICATION	2.131208673335074E-6	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9995530944503646	WITHOUT_CLASSIFICATION	4.4690554963541335E-4	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9998674417142352	WITHOUT_CLASSIFICATION	1.3255828576479205E-4	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9914790157483271	WITHOUT_CLASSIFICATION	0.008520984251672975	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9999034577621777	WITHOUT_CLASSIFICATION	9.654223782230678E-5	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999978741151759	WITHOUT_CLASSIFICATION	2.1258848241525094E-6	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9991630087533548	WITHOUT_CLASSIFICATION	8.36991246645142E-4	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9949228208514015	WITHOUT_CLASSIFICATION	0.005077179148598572	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9999484042254648	WITHOUT_CLASSIFICATION	5.1595774535105774E-5	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.999947210627657	WITHOUT_CLASSIFICATION	5.2789372343030634E-5	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9998964317638204	WITHOUT_CLASSIFICATION	1.0356823617959362E-4	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9998534599441068	WITHOUT_CLASSIFICATION	1.465400558931773E-4	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9996963953714298	WITHOUT_CLASSIFICATION	3.0360462857015834E-4	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999956233347664	WITHOUT_CLASSIFICATION	4.376665233493274E-6	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9995745323248874	WITHOUT_CLASSIFICATION	4.254676751126279E-4	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9999440561600823	WITHOUT_CLASSIFICATION	5.594383991774211E-5	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999718571800553	WITHOUT_CLASSIFICATION	2.8142819944653043E-5	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.999972795173179	WITHOUT_CLASSIFICATION	2.7204826820891703E-5	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999903486783257	WITHOUT_CLASSIFICATION	9.651321674229858E-6	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999903486783257	WITHOUT_CLASSIFICATION	9.651321674229858E-6	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9990101078857466	WITHOUT_CLASSIFICATION	9.898921142533622E-4	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9998612911362859	WITHOUT_CLASSIFICATION	1.3870886371413437E-4	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9997459717616836	WITHOUT_CLASSIFICATION	2.540282383164048E-4	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9994375939981073	WITHOUT_CLASSIFICATION	5.62406001892707E-4	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9998257185127067	WITHOUT_CLASSIFICATION	1.742814872932767E-4	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9999078707564478	WITHOUT_CLASSIFICATION	9.212924355218837E-5	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9998562771208279	WITHOUT_CLASSIFICATION	1.437228791721731E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9998562771208279	WITHOUT_CLASSIFICATION	1.437228791721731E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999955418685365	WITHOUT_CLASSIFICATION	4.45813146351614E-5	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999866948110854	WITHOUT_CLASSIFICATION	1.3305188914584705E-5	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999586555361752	WITHOUT_CLASSIFICATION	4.134446382474359E-5	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9997494770804621	WITHOUT_CLASSIFICATION	2.5052291953794333E-4	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9998423548980025	WITHOUT_CLASSIFICATION	1.5764510199754082E-4	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999433727172926	WITHOUT_CLASSIFICATION	5.66272827074636E-5	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.999990761297374	WITHOUT_CLASSIFICATION	9.238702626133704E-6	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999765971209945	WITHOUT_CLASSIFICATION	2.3402879005437933E-5	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999904119356043	WITHOUT_CLASSIFICATION	9.588064395728567E-6	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9998243991485317	WITHOUT_CLASSIFICATION	1.7560085146833688E-4	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999713351585425	WITHOUT_CLASSIFICATION	2.866484145746027E-5	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999183349648669	WITHOUT_CLASSIFICATION	8.16650351331327E-5	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9988388186608979	WITHOUT_CLASSIFICATION	0.0011611813391021219	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999362609867015	WITHOUT_CLASSIFICATION	6.373901329849065E-5	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9999075671130371	WITHOUT_CLASSIFICATION	9.243288696289855E-5	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999404988190006	WITHOUT_CLASSIFICATION	5.950118099952882E-5	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.996160064503136	WITHOUT_CLASSIFICATION	0.0038399354968640027	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999648084870281	WITHOUT_CLASSIFICATION	3.519151297191052E-5	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9962049902921937	WITHOUT_CLASSIFICATION	0.003795009707806311	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9999672850000838	WITHOUT_CLASSIFICATION	3.271499991622255E-5	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999828508959901	WITHOUT_CLASSIFICATION	1.7149104009888465E-5	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999298828373435	WITHOUT_CLASSIFICATION	7.011716265648402E-5	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9999613649853893	WITHOUT_CLASSIFICATION	3.863501461072146E-5	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9998704900973105	WITHOUT_CLASSIFICATION	1.2950990268936188E-4	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9997084096522898	WITHOUT_CLASSIFICATION	2.9159034771020415E-4	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9998738133868847	WITHOUT_CLASSIFICATION	1.261866131152992E-4	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9999888592401401	WITHOUT_CLASSIFICATION	1.1140759859901078E-5	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999965953038665	WITHOUT_CLASSIFICATION	3.4046961334964173E-6	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.999989328572729	WITHOUT_CLASSIFICATION	1.0671427271000732E-5	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9883288493376405	WITHOUT_CLASSIFICATION	0.011671150662359473	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9989151009329222	WITHOUT_CLASSIFICATION	0.0010848990670777547	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9996453763018771	WITHOUT_CLASSIFICATION	3.546236981229733E-4	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9985443628411774	WITHOUT_CLASSIFICATION	0.001455637158822478	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.999805048968501	WITHOUT_CLASSIFICATION	1.949510314991197E-4	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9880938554060246	WITHOUT_CLASSIFICATION	0.011906144593975394	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9976086739282971	WITHOUT_CLASSIFICATION	0.0023913260717029054	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9997166833697916	WITHOUT_CLASSIFICATION	2.8331663020850884E-4	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9998780560403084	WITHOUT_CLASSIFICATION	1.2194395969154785E-4	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9998031455382266	WITHOUT_CLASSIFICATION	1.968544617734964E-4	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9998401325897229	WITHOUT_CLASSIFICATION	1.5986741027714698E-4	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9998347261034879	WITHOUT_CLASSIFICATION	1.6527389651202801E-4	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9993573162975361	WITHOUT_CLASSIFICATION	6.426837024639962E-4	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999773761513122	WITHOUT_CLASSIFICATION	2.2623848687742167E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999801372167738	WITHOUT_CLASSIFICATION	1.9862783226219694E-5	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999932926407776	WITHOUT_CLASSIFICATION	6.707359222289133E-6	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9999421768841812	WITHOUT_CLASSIFICATION	5.782311581881562E-5	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999452894418177	WITHOUT_CLASSIFICATION	5.471055818227771E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999983830737953	WITHOUT_CLASSIFICATION	1.616926204689213E-5	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9999452894418177	WITHOUT_CLASSIFICATION	5.471055818227771E-5	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.997099187388186	WITHOUT_CLASSIFICATION	0.0029008126118139636	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9991426801297606	WITHOUT_CLASSIFICATION	8.573198702395053E-4	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999969819800123	WITHOUT_CLASSIFICATION	3.0180199876922054E-6	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9998630055671988	WITHOUT_CLASSIFICATION	1.369944328012784E-4	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9983980926075122	WITHOUT_CLASSIFICATION	0.0016019073924877422	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9996739260056636	WITHOUT_CLASSIFICATION	3.2607399433636956E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9971439707129021	WITHOUT_CLASSIFICATION	0.0028560292870979543	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.999957868228617	WITHOUT_CLASSIFICATION	4.213177138312607E-5	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999659929177395	WITHOUT_CLASSIFICATION	3.4007082260520635E-5	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9993952180075405	WITHOUT_CLASSIFICATION	6.04781992459503E-4	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9998446728764211	WITHOUT_CLASSIFICATION	1.5532712357900103E-4	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9991177838540181	WITHOUT_CLASSIFICATION	8.822161459818222E-4	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9998771269400958	WITHOUT_CLASSIFICATION	1.2287305990414394E-4	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999756173140235	WITHOUT_CLASSIFICATION	2.438268597639033E-5	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999622416752071	WITHOUT_CLASSIFICATION	3.775832479293651E-5	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999518118636402	WITHOUT_CLASSIFICATION	4.818813635967428E-5	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999664110251433	WITHOUT_CLASSIFICATION	3.3588974856774106E-5	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9999530019988213	WITHOUT_CLASSIFICATION	4.699800117861765E-5	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9999060974168199	WITHOUT_CLASSIFICATION	9.390258318012886E-5	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9998542796661026	WITHOUT_CLASSIFICATION	1.4572033389739924E-4	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999562932531613	WITHOUT_CLASSIFICATION	4.370674683868611E-5	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999061441004223	WITHOUT_CLASSIFICATION	9.385589957769459E-5	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999463819587291	WITHOUT_CLASSIFICATION	5.361804127087286E-5	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.999995613897649	WITHOUT_CLASSIFICATION	4.3861023509441475E-6	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999173896829919	WITHOUT_CLASSIFICATION	8.261031700806899E-5	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9997947869651571	WITHOUT_CLASSIFICATION	2.052130348429106E-4	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9946506009285524	WITHOUT_CLASSIFICATION	0.005349399071447576	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9997311370299087	WITHOUT_CLASSIFICATION	2.688629700912456E-4	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999641241979245	WITHOUT_CLASSIFICATION	3.5875802075454784E-5	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9999141504426907	WITHOUT_CLASSIFICATION	8.584955730929891E-5	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.999939777168073	WITHOUT_CLASSIFICATION	6.022283192701561E-5	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9996045308932039	WITHOUT_CLASSIFICATION	3.954691067961411E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999611825181915	WITHOUT_CLASSIFICATION	3.881748180835732E-5	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999972887604979	WITHOUT_CLASSIFICATION	2.7112395022207405E-6	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999973151096243	WITHOUT_CLASSIFICATION	2.6848903756017816E-6	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.999811221634548	WITHOUT_CLASSIFICATION	1.8877836545200033E-4	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.999811221634548	WITHOUT_CLASSIFICATION	1.8877836545200033E-4	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9970032143784572	WITHOUT_CLASSIFICATION	0.0029967856215429487	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9990520460200747	WITHOUT_CLASSIFICATION	9.479539799253781E-4	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9987263201504661	WITHOUT_CLASSIFICATION	0.0012736798495338575	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999061441004223	WITHOUT_CLASSIFICATION	9.385589957769459E-5	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999463819587291	WITHOUT_CLASSIFICATION	5.361804127087286E-5	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.999995613897649	WITHOUT_CLASSIFICATION	4.3861023509441475E-6	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9999469074945788	WITHOUT_CLASSIFICATION	5.309250542121053E-5	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999909840029637	WITHOUT_CLASSIFICATION	9.01599703631535E-6	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999959012272209	WITHOUT_CLASSIFICATION	4.098772779088029E-6	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9997068083044488	WITHOUT_CLASSIFICATION	2.9319169555125954E-4	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9978826803892249	WITHOUT_CLASSIFICATION	0.0021173196107749873	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9987974879230898	WITHOUT_CLASSIFICATION	0.0012025120769103594	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9998582709621006	WITHOUT_CLASSIFICATION	1.4172903789940562E-4	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9565737539541029	WITHOUT_CLASSIFICATION	0.04342624604589704	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9997620571825186	WITHOUT_CLASSIFICATION	2.3794281748130497E-4	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9999266906349021	WITHOUT_CLASSIFICATION	7.330936509783857E-5	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999520821572281	WITHOUT_CLASSIFICATION	4.7917842771961094E-5	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9997369791954284	WITHOUT_CLASSIFICATION	2.630208045717015E-4	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9996084506660774	WITHOUT_CLASSIFICATION	3.9154933392269027E-4	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9990159496045875	WITHOUT_CLASSIFICATION	9.840503954125013E-4	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999687269451079	WITHOUT_CLASSIFICATION	3.127305489215448E-5	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999514061547734	WITHOUT_CLASSIFICATION	4.859384522671366E-5	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9982759825038128	WITHOUT_CLASSIFICATION	0.0017240174961872165	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9984742612613993	WITHOUT_CLASSIFICATION	0.001525738738600773	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9992640912881893	WITHOUT_CLASSIFICATION	7.359087118106547E-4	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9999074944900874	WITHOUT_CLASSIFICATION	9.250550991248616E-5	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9948003090715037	WITHOUT_CLASSIFICATION	0.005199690928496314	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.999432970064657	WITHOUT_CLASSIFICATION	5.670299353429352E-4	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9997938560213084	WITHOUT_CLASSIFICATION	2.0614397869165937E-4	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9984484225727908	WITHOUT_CLASSIFICATION	0.0015515774272092883	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.999964185206477	WITHOUT_CLASSIFICATION	3.5814793522942714E-5	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9999455319874865	WITHOUT_CLASSIFICATION	5.446801251344781E-5	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9997102600067771	WITHOUT_CLASSIFICATION	2.897399932229003E-4	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9999652955757456	WITHOUT_CLASSIFICATION	3.4704424254262314E-5	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9994139321361736	WITHOUT_CLASSIFICATION	5.86067863826449E-4	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9997296530453149	WITHOUT_CLASSIFICATION	2.70346954685102E-4	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9997296530453149	WITHOUT_CLASSIFICATION	2.70346954685102E-4	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9998996609562881	WITHOUT_CLASSIFICATION	1.0033904371195212E-4	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.999947345408866	WITHOUT_CLASSIFICATION	5.265459113403952E-5	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999831693328346	WITHOUT_CLASSIFICATION	1.6830667165326623E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999969490004551	WITHOUT_CLASSIFICATION	3.0509995450013756E-6	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9999463366962711	WITHOUT_CLASSIFICATION	5.366330372894296E-5	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9996343380290466	WITHOUT_CLASSIFICATION	3.656619709534667E-4	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9998662314522379	WITHOUT_CLASSIFICATION	1.337685477620687E-4	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9998424668502006	WITHOUT_CLASSIFICATION	1.5753314979928228E-4	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999451301253981	WITHOUT_CLASSIFICATION	5.4869874601987586E-5	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9997302842836696	WITHOUT_CLASSIFICATION	2.697157163303376E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.999910740975264	WITHOUT_CLASSIFICATION	8.925902473606364E-5	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9977067452139217	WITHOUT_CLASSIFICATION	0.002293254786078339	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.999938729514438	WITHOUT_CLASSIFICATION	6.127048556197552E-5	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9999067601942906	WITHOUT_CLASSIFICATION	9.323980570946797E-5	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.9999850673190612	WITHOUT_CLASSIFICATION	1.4932680938640657E-5	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9998826660622925	WITHOUT_CLASSIFICATION	1.173339377075423E-4	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9998253010022378	WITHOUT_CLASSIFICATION	1.7469899776217305E-4	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9999545456244264	WITHOUT_CLASSIFICATION	4.5454375573612665E-5	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9992182264566701	WITHOUT_CLASSIFICATION	7.817735433299746E-4	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9998760503780438	WITHOUT_CLASSIFICATION	1.2394962195608385E-4	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.999914923298558	WITHOUT_CLASSIFICATION	8.507670144199606E-5	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999913436637381	WITHOUT_CLASSIFICATION	8.656336261924143E-6	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9996677064187253	WITHOUT_CLASSIFICATION	3.3229358127464945E-4	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9996947375257289	WITHOUT_CLASSIFICATION	3.0526247427113516E-4	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999909970496144	WITHOUT_CLASSIFICATION	9.002950385642009E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999915568582995	WITHOUT_CLASSIFICATION	8.443141700463665E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999670536474606	WITHOUT_CLASSIFICATION	3.294635253929941E-5	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9995608119717105	WITHOUT_CLASSIFICATION	4.3918802828946726E-4	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9992117060184117	WITHOUT_CLASSIFICATION	7.882939815883525E-4	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9974340273470206	WITHOUT_CLASSIFICATION	0.0025659726529793127	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999926352923433	WITHOUT_CLASSIFICATION	7.364707656725359E-6	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999959000750235	WITHOUT_CLASSIFICATION	4.099924976552008E-6	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9995926568431095	WITHOUT_CLASSIFICATION	4.0734315689052765E-4	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9996590495834262	WITHOUT_CLASSIFICATION	3.409504165737899E-4	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9995893427330943	WITHOUT_CLASSIFICATION	4.1065726690568146E-4	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999735858910981	WITHOUT_CLASSIFICATION	2.641410890185882E-5	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9997085206080065	WITHOUT_CLASSIFICATION	2.9147939199348507E-4	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999291542083911	WITHOUT_CLASSIFICATION	7.084579160883644E-5	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9997480516480258	WITHOUT_CLASSIFICATION	2.519483519742095E-4	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9999392846114029	WITHOUT_CLASSIFICATION	6.0715388597070874E-5	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9998962563695608	WITHOUT_CLASSIFICATION	1.0374363043909477E-4	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9998962563695608	WITHOUT_CLASSIFICATION	1.0374363043909477E-4	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9940789548286274	WITHOUT_CLASSIFICATION	0.005921045171372487	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.999878223264685	WITHOUT_CLASSIFICATION	1.2177673531498591E-4	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.999668886093773	WITHOUT_CLASSIFICATION	3.3111390622689665E-4	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.999916012642599	WITHOUT_CLASSIFICATION	8.398735740098692E-5	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9999481643763559	WITHOUT_CLASSIFICATION	5.183562364403046E-5	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.999923569866777	WITHOUT_CLASSIFICATION	7.643013322297712E-5	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999896408786565	WITHOUT_CLASSIFICATION	1.0359121343606509E-5	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999923920644912	WITHOUT_CLASSIFICATION	7.607935508775418E-6	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9999080477317055	WITHOUT_CLASSIFICATION	9.19522682945392E-5	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999878471592267	WITHOUT_CLASSIFICATION	1.2152840773241196E-5	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999862356957332	WITHOUT_CLASSIFICATION	1.3764304266830107E-5	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9998810462564145	WITHOUT_CLASSIFICATION	1.1895374358548907E-4	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.999828814871863	WITHOUT_CLASSIFICATION	1.711851281369063E-4	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999715529875709	WITHOUT_CLASSIFICATION	2.8447012429157547E-5	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999961599984256	WITHOUT_CLASSIFICATION	3.840001574329987E-6	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999782294943235	WITHOUT_CLASSIFICATION	2.1770505676539718E-5	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999487733918805	WITHOUT_CLASSIFICATION	5.1226608119432855E-5	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9997792509511352	WITHOUT_CLASSIFICATION	2.207490488649323E-4	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999555526477146	WITHOUT_CLASSIFICATION	4.444735228524085E-5	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.99998479677881	WITHOUT_CLASSIFICATION	1.5203221190133534E-5	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9999036295830006	WITHOUT_CLASSIFICATION	9.637041699944267E-5	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.7636564503188356	WITHOUT_CLASSIFICATION	0.23634354968116447	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9999140744370156	WITHOUT_CLASSIFICATION	8.592556298428239E-5	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9734923000409359	WITHOUT_CLASSIFICATION	0.02650769995906414	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999998839869478	WITHOUT_CLASSIFICATION	1.160130520877219E-7	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9998630578254917	WITHOUT_CLASSIFICATION	1.369421745082334E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9997560224883097	WITHOUT_CLASSIFICATION	2.4397751169026117E-4	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9998193550243424	WITHOUT_CLASSIFICATION	1.806449756575003E-4	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9998193550243424	WITHOUT_CLASSIFICATION	1.806449756575003E-4	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9998933954346824	WITHOUT_CLASSIFICATION	1.0660456531758674E-4	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9995209990559759	WITHOUT_CLASSIFICATION	4.7900094402417414E-4	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9993757143728904	WITHOUT_CLASSIFICATION	6.242856271096434E-4	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9993235014214323	WITHOUT_CLASSIFICATION	6.764985785676374E-4	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.999981885525292	WITHOUT_CLASSIFICATION	1.81144747080165E-5	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9994338271959721	WITHOUT_CLASSIFICATION	5.661728040279518E-4	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9998927284835921	WITHOUT_CLASSIFICATION	1.072715164078336E-4	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9991366143857651	WITHOUT_CLASSIFICATION	8.633856142348784E-4	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9990263021921403	WITHOUT_CLASSIFICATION	9.736978078596929E-4	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9997605239378433	WITHOUT_CLASSIFICATION	2.3947606215670242E-4	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9998780537583088	WITHOUT_CLASSIFICATION	1.2194624169114849E-4	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.9999586945099437	WITHOUT_CLASSIFICATION	4.1305490056213496E-5	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999201363370577	WITHOUT_CLASSIFICATION	7.986366294231429E-5	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.999726188230642	WITHOUT_CLASSIFICATION	2.7381176935808136E-4	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999850270535645	WITHOUT_CLASSIFICATION	1.4972946435488067E-5	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999871898500574	WITHOUT_CLASSIFICATION	1.2810149942559168E-5	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999414980849599	WITHOUT_CLASSIFICATION	5.8501915040035E-5	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999611415908186	WITHOUT_CLASSIFICATION	3.8858409181425735E-5	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9999014889441254	WITHOUT_CLASSIFICATION	9.851105587455786E-5	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9999157464916633	WITHOUT_CLASSIFICATION	8.425350833675673E-5	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9998267576434499	WITHOUT_CLASSIFICATION	1.7324235655018488E-4	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999961033373849	WITHOUT_CLASSIFICATION	3.896662615120674E-6	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999718471070771	WITHOUT_CLASSIFICATION	2.8152892922921466E-5	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999918731316233	WITHOUT_CLASSIFICATION	8.126868376681778E-6	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9999798126897681	WITHOUT_CLASSIFICATION	2.0187310231879694E-5	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.999973663537795	WITHOUT_CLASSIFICATION	2.6336462205013046E-5	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999173282927698	WITHOUT_CLASSIFICATION	8.267170723025358E-5	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999870573708247	WITHOUT_CLASSIFICATION	1.2942629175343731E-5	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9998720091907555	WITHOUT_CLASSIFICATION	1.2799080924457166E-4	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.9999549260332975	WITHOUT_CLASSIFICATION	4.507396670252862E-5	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9999661652410622	WITHOUT_CLASSIFICATION	3.383475893773486E-5	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9999031412621805	WITHOUT_CLASSIFICATION	9.685873781959334E-5	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999479588247214	WITHOUT_CLASSIFICATION	5.2041175278516126E-5	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999822228999153	WITHOUT_CLASSIFICATION	1.7777100084657453E-5	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999588065764154	WITHOUT_CLASSIFICATION	4.119342358456291E-5	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9998563468744369	WITHOUT_CLASSIFICATION	1.436531255631776E-4	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999934860789172	WITHOUT_CLASSIFICATION	6.5139210827197676E-6	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9998637080519344	WITHOUT_CLASSIFICATION	1.362919480656327E-4	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999755020903885	WITHOUT_CLASSIFICATION	2.4497909611505607E-5	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999543668304711	WITHOUT_CLASSIFICATION	4.563316952893957E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999719142896086	WITHOUT_CLASSIFICATION	2.8085710391424715E-5	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9994296597349146	WITHOUT_CLASSIFICATION	5.703402650854196E-4	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.999900332453734	WITHOUT_CLASSIFICATION	9.966754626595248E-5	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999277955390515	WITHOUT_CLASSIFICATION	7.220446094840452E-5	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999656213593974	WITHOUT_CLASSIFICATION	3.437864060262307E-5	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9997562428344876	WITHOUT_CLASSIFICATION	2.4375716551236005E-4	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9998612618597498	WITHOUT_CLASSIFICATION	1.3873814025010223E-4	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.999784895165303	WITHOUT_CLASSIFICATION	2.15104834697121E-4	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999581534754718	WITHOUT_CLASSIFICATION	4.184652452817097E-5	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.9994226696312142	WITHOUT_CLASSIFICATION	5.773303687858565E-4	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999531299691219	WITHOUT_CLASSIFICATION	4.687003087801922E-5	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9985505658836803	WITHOUT_CLASSIFICATION	0.001449434116319631	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999199841529879	WITHOUT_CLASSIFICATION	8.001584701211828E-5	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999658042989725	WITHOUT_CLASSIFICATION	3.4195701027564164E-5	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999646690235044	WITHOUT_CLASSIFICATION	3.533097649558572E-5	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9999544595124575	WITHOUT_CLASSIFICATION	4.5540487542511274E-5	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999296930379779	WITHOUT_CLASSIFICATION	7.030696202209758E-5	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9997617450685357	WITHOUT_CLASSIFICATION	2.3825493146425306E-4	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.999781913015999	WITHOUT_CLASSIFICATION	2.1808698400118846E-4	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999445711378306	WITHOUT_CLASSIFICATION	5.54288621694152E-5	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999471602584024	WITHOUT_CLASSIFICATION	5.283974159775066E-5	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999589226510992	WITHOUT_CLASSIFICATION	4.107734890090752E-5	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9998622895176116	WITHOUT_CLASSIFICATION	1.3771048238835588E-4	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999840977197336	WITHOUT_CLASSIFICATION	1.590228026636203E-5	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999914250591759	WITHOUT_CLASSIFICATION	8.574940824088698E-6	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9998565963356412	WITHOUT_CLASSIFICATION	1.434036643588858E-4	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9999021987377767	WITHOUT_CLASSIFICATION	9.780126222327676E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.999941188363321	WITHOUT_CLASSIFICATION	5.881163667891276E-5	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.999624883551446	WITHOUT_CLASSIFICATION	3.751164485539899E-4	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999612146824186	WITHOUT_CLASSIFICATION	3.8785317581396716E-5	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9999207489871909	WITHOUT_CLASSIFICATION	7.925101280913357E-5	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999504688987231	WITHOUT_CLASSIFICATION	4.9531101276830656E-5	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999690932965065	WITHOUT_CLASSIFICATION	3.0906703493432276E-5	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.999553178685307	WITHOUT_CLASSIFICATION	4.468213146929909E-4	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999866232091141	WITHOUT_CLASSIFICATION	1.3376790885863397E-5	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999938598231026	WITHOUT_CLASSIFICATION	6.140176897394284E-6	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999458195643524	WITHOUT_CLASSIFICATION	5.418043564761631E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9985303161954446	WITHOUT_CLASSIFICATION	0.0014696838045553694	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999998805750001	WITHOUT_CLASSIFICATION	1.1942499981617434E-7	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9999750404208735	WITHOUT_CLASSIFICATION	2.4959579126600492E-5	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999727134314383	WITHOUT_CLASSIFICATION	2.728656856162093E-5	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9999462020077167	WITHOUT_CLASSIFICATION	5.37979922833358E-5	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999510188346352	WITHOUT_CLASSIFICATION	4.8981165364861586E-5	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9998893768149093	WITHOUT_CLASSIFICATION	1.1062318509070055E-4	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999454664508893	WITHOUT_CLASSIFICATION	5.4533549110633605E-5	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9998555285527813	WITHOUT_CLASSIFICATION	1.4447144721876383E-4	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9999696565163819	WITHOUT_CLASSIFICATION	3.034348361807508E-5	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999502484261222	WITHOUT_CLASSIFICATION	4.9751573877633286E-5	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9998797257517331	WITHOUT_CLASSIFICATION	1.2027424826690791E-4	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999551616639064	WITHOUT_CLASSIFICATION	4.483833609359156E-5	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9999653261566921	WITHOUT_CLASSIFICATION	3.467384330797212E-5	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9998909776474773	WITHOUT_CLASSIFICATION	1.0902235252282042E-4	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999689630799469	WITHOUT_CLASSIFICATION	3.103692005307257E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9997835756348488	WITHOUT_CLASSIFICATION	2.1642436515128532E-4	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9995299824589812	WITHOUT_CLASSIFICATION	4.7001754101883415E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9997787073996088	WITHOUT_CLASSIFICATION	2.2129260039129942E-4	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9999984943321464	WITHOUT_CLASSIFICATION	1.505667853693544E-6	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999709366484043	WITHOUT_CLASSIFICATION	2.906335159565331E-5	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9997774372640655	WITHOUT_CLASSIFICATION	2.22562735934417E-4	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.999941760019744	WITHOUT_CLASSIFICATION	5.823998025604369E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998576943246118	WITHOUT_CLASSIFICATION	1.423056753882068E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998576943246118	WITHOUT_CLASSIFICATION	1.423056753882068E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9998508471228607	WITHOUT_CLASSIFICATION	1.4915287713936748E-4	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.9999348804280392	WITHOUT_CLASSIFICATION	6.511957196077851E-5	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.999724684281453	WITHOUT_CLASSIFICATION	2.7531571854708044E-4	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9998508471228607	WITHOUT_CLASSIFICATION	1.4915287713936748E-4	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9998172900347269	WITHOUT_CLASSIFICATION	1.8270996527302525E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999709366484043	WITHOUT_CLASSIFICATION	2.906335159565331E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999709366484043	WITHOUT_CLASSIFICATION	2.906335159565331E-5	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998576943246118	WITHOUT_CLASSIFICATION	1.423056753882068E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998576943246118	WITHOUT_CLASSIFICATION	1.423056753882068E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9998602721551455	WITHOUT_CLASSIFICATION	1.3972784485447208E-4	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9997885841215766	WITHOUT_CLASSIFICATION	2.1141587842343735E-4	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9998508471228607	WITHOUT_CLASSIFICATION	1.4915287713936748E-4	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999878370476888	WITHOUT_CLASSIFICATION	1.2162952311098118E-5	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9998833168085592	WITHOUT_CLASSIFICATION	1.1668319144075238E-4	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.999978917161511	WITHOUT_CLASSIFICATION	2.108283848899938E-5	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9997774372640655	WITHOUT_CLASSIFICATION	2.22562735934417E-4	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998576943246118	WITHOUT_CLASSIFICATION	1.423056753882068E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998576943246118	WITHOUT_CLASSIFICATION	1.423056753882068E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9998508471228607	WITHOUT_CLASSIFICATION	1.4915287713936748E-4	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.999724684281453	WITHOUT_CLASSIFICATION	2.7531571854708044E-4	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.999724684281453	WITHOUT_CLASSIFICATION	2.7531571854708044E-4	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9998172900347269	WITHOUT_CLASSIFICATION	1.8270996527302525E-4	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9999724898500263	WITHOUT_CLASSIFICATION	2.7510149973684038E-5	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9998479246572582	WITHOUT_CLASSIFICATION	1.5207534274167968E-4	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999180936738508	WITHOUT_CLASSIFICATION	8.19063261491923E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999305659192963	WITHOUT_CLASSIFICATION	6.943408070365193E-5	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999180936738508	WITHOUT_CLASSIFICATION	8.19063261491923E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998576943246118	WITHOUT_CLASSIFICATION	1.423056753882068E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.999724684281453	WITHOUT_CLASSIFICATION	2.7531571854708044E-4	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9998602721551455	WITHOUT_CLASSIFICATION	1.3972784485447208E-4	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9998833168085592	WITHOUT_CLASSIFICATION	1.1668319144075238E-4	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9998833168085592	WITHOUT_CLASSIFICATION	1.1668319144075238E-4	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.999978917161511	WITHOUT_CLASSIFICATION	2.108283848899938E-5	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9998499376565831	WITHOUT_CLASSIFICATION	1.500623434167668E-4	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999688992159619	WITHOUT_CLASSIFICATION	3.110078403816095E-5	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9998479246572582	WITHOUT_CLASSIFICATION	1.5207534274167968E-4	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9998925032662728	WITHOUT_CLASSIFICATION	1.0749673372717254E-4	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9999531177713334	WITHOUT_CLASSIFICATION	4.6882228666429714E-5	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999973273962977	WITHOUT_CLASSIFICATION	2.672603702241798E-6	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999633022254621	WITHOUT_CLASSIFICATION	3.6697774537930115E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9999759669380417	WITHOUT_CLASSIFICATION	2.403306195830846E-5	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9697556319241679	WITHOUT_CLASSIFICATION	0.030244368075831994	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999997587273833	WITHOUT_CLASSIFICATION	2.4127261665175453E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999903166437472	WITHOUT_CLASSIFICATION	9.683356252792717E-6	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.999981668988871	WITHOUT_CLASSIFICATION	1.8331011129015493E-5	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9997074625547453	WITHOUT_CLASSIFICATION	2.92537445254684E-4	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9997592942177962	WITHOUT_CLASSIFICATION	2.407057822037308E-4	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9997592942177962	WITHOUT_CLASSIFICATION	2.407057822037308E-4	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9997592942177962	WITHOUT_CLASSIFICATION	2.407057822037308E-4	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9997592942177962	WITHOUT_CLASSIFICATION	2.407057822037308E-4	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999890579106888	WITHOUT_CLASSIFICATION	1.094208931126111E-5	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9998494974656605	WITHOUT_CLASSIFICATION	1.505025343393494E-4	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9998533885972409	WITHOUT_CLASSIFICATION	1.4661140275901358E-4	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9998723047146786	WITHOUT_CLASSIFICATION	1.2769528532147675E-4	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999714984860839	WITHOUT_CLASSIFICATION	2.8501513916083673E-5	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999786738601296	WITHOUT_CLASSIFICATION	2.1326139870448064E-5	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999834960798566	WITHOUT_CLASSIFICATION	1.6503920143438336E-5	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999396611365762	WITHOUT_CLASSIFICATION	6.03388634238462E-5	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999999310708619	WITHOUT_CLASSIFICATION	6.892913808679771E-8	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999409852931898	WITHOUT_CLASSIFICATION	5.901470681035065E-5	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999961298711847	WITHOUT_CLASSIFICATION	3.870128815258159E-6	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999920063220646	WITHOUT_CLASSIFICATION	7.99367793536859E-6	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9998562646369162	WITHOUT_CLASSIFICATION	1.4373536308386672E-4	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999922486751253	WITHOUT_CLASSIFICATION	7.751324874798193E-6	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9999759669380417	WITHOUT_CLASSIFICATION	2.403306195830846E-5	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999773236646433	WITHOUT_CLASSIFICATION	2.267633535671014E-5	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999390716564778	WITHOUT_CLASSIFICATION	6.092834352235448E-5	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.999410572043266	WITHOUT_CLASSIFICATION	5.894279567339356E-4	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.99959627433787	WITHOUT_CLASSIFICATION	4.03725662129892E-4	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999185654195375	WITHOUT_CLASSIFICATION	8.143458046243783E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999709366484043	WITHOUT_CLASSIFICATION	2.906335159565331E-5	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9998856697874422	WITHOUT_CLASSIFICATION	1.1433021255778485E-4	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999877439343354	WITHOUT_CLASSIFICATION	1.225606566467662E-5	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9999731958011681	WITHOUT_CLASSIFICATION	2.6804198831892905E-5	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9999763905320251	WITHOUT_CLASSIFICATION	2.3609467974901415E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9995186554374685	WITHOUT_CLASSIFICATION	4.813445625314644E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9995186554374685	WITHOUT_CLASSIFICATION	4.813445625314644E-4	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999610728641979	WITHOUT_CLASSIFICATION	3.892713580218558E-5	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9995740316859747	WITHOUT_CLASSIFICATION	4.2596831402538576E-4	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9997643235044028	WITHOUT_CLASSIFICATION	2.356764955971419E-4	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9994883805770861	WITHOUT_CLASSIFICATION	5.116194229139157E-4	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9665482030968805	WITHOUT_CLASSIFICATION	0.03345179690311945	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9999255671155952	WITHOUT_CLASSIFICATION	7.443288440479317E-5	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9998468036600859	WITHOUT_CLASSIFICATION	1.531963399139711E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9998571389913252	WITHOUT_CLASSIFICATION	1.4286100867467422E-4	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999571939459568	WITHOUT_CLASSIFICATION	4.2806054043151224E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999571939459568	WITHOUT_CLASSIFICATION	4.2806054043151224E-5	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9999184972569315	WITHOUT_CLASSIFICATION	8.150274306845976E-5	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9999654861841084	WITHOUT_CLASSIFICATION	3.451381589171757E-5	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9999291036278907	WITHOUT_CLASSIFICATION	7.089637210932101E-5	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9998960266194605	WITHOUT_CLASSIFICATION	1.0397338053936037E-4	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999485650567351	WITHOUT_CLASSIFICATION	5.143494326487642E-5	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999864445752698	WITHOUT_CLASSIFICATION	1.3555424730249269E-5	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999942851036964	WITHOUT_CLASSIFICATION	5.714896303691786E-6	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999628272732974	WITHOUT_CLASSIFICATION	3.7172726702483246E-5	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999601410177819	WITHOUT_CLASSIFICATION	3.985898221820384E-5	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9997398633680437	WITHOUT_CLASSIFICATION	2.6013663195624743E-4	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9998872872429955	WITHOUT_CLASSIFICATION	1.1271275700452306E-4	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9997362933585827	WITHOUT_CLASSIFICATION	2.6370664141735727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999390716564778	WITHOUT_CLASSIFICATION	6.092834352235448E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9995186554374685	WITHOUT_CLASSIFICATION	4.813445625314644E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9995186554374685	WITHOUT_CLASSIFICATION	4.813445625314644E-4	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9995740316859747	WITHOUT_CLASSIFICATION	4.2596831402538576E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9996938347463815	WITHOUT_CLASSIFICATION	3.0616525361851915E-4	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9998309785038297	WITHOUT_CLASSIFICATION	1.690214961702067E-4	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9999992371821611	WITHOUT_CLASSIFICATION	7.628178390244881E-7	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.999947609455611	WITHOUT_CLASSIFICATION	5.239054438901294E-5	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9999053285304499	WITHOUT_CLASSIFICATION	9.467146955019043E-5	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9999429112002425	WITHOUT_CLASSIFICATION	5.708879975736616E-5	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9999416649312599	WITHOUT_CLASSIFICATION	5.8335068740063856E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999899225402009	WITHOUT_CLASSIFICATION	1.0077459799091585E-5	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9998493802356273	WITHOUT_CLASSIFICATION	1.5061976437275216E-4	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.999986644664276	WITHOUT_CLASSIFICATION	1.3355335723863003E-5	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9999328493765669	WITHOUT_CLASSIFICATION	6.715062343314707E-5	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999776843220894	WITHOUT_CLASSIFICATION	2.2315677910611533E-5	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.999939439410721	WITHOUT_CLASSIFICATION	6.0560589278872277E-5	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999491066287055	WITHOUT_CLASSIFICATION	5.089337129449443E-5	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999985839755242	WITHOUT_CLASSIFICATION	1.4160244757890167E-6	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9999778735252297	WITHOUT_CLASSIFICATION	2.2126474770303466E-5	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9999272029585741	WITHOUT_CLASSIFICATION	7.279704142584645E-5	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9991106909747397	WITHOUT_CLASSIFICATION	8.89309025260273E-4	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.999995519136911	WITHOUT_CLASSIFICATION	4.480863089034494E-6	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999939816005917	WITHOUT_CLASSIFICATION	6.018399408274121E-6	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9997792240201069	WITHOUT_CLASSIFICATION	2.2077597989305647E-4	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999944274381007	WITHOUT_CLASSIFICATION	5.57256189928041E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.999990291916869	WITHOUT_CLASSIFICATION	9.708083131087408E-6	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999819825241213	WITHOUT_CLASSIFICATION	1.8017475878725288E-5	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999090695057709	WITHOUT_CLASSIFICATION	9.093049422913498E-5	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999869457222567	WITHOUT_CLASSIFICATION	1.305427774336041E-5	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9998783058229638	WITHOUT_CLASSIFICATION	1.2169417703632472E-4	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9998502034593061	WITHOUT_CLASSIFICATION	1.4979654069392236E-4	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9998127087107773	WITHOUT_CLASSIFICATION	1.8729128922260414E-4	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9998492899050203	WITHOUT_CLASSIFICATION	1.5071009497961505E-4	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999736288965234	WITHOUT_CLASSIFICATION	2.637110347660273E-5	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999867363661573	WITHOUT_CLASSIFICATION	1.3263633842543776E-5	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9998250631315998	WITHOUT_CLASSIFICATION	1.7493686840022154E-4	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999945079031507	WITHOUT_CLASSIFICATION	5.4920968493008324E-6	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9997404263287043	WITHOUT_CLASSIFICATION	2.595736712956963E-4	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999907692828238	WITHOUT_CLASSIFICATION	9.230717176109042E-6	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999908925266088	WITHOUT_CLASSIFICATION	9.107473391273512E-6	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9998250631315998	WITHOUT_CLASSIFICATION	1.7493686840022154E-4	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999997621511567	WITHOUT_CLASSIFICATION	2.3784884331952983E-7	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999882113041219	WITHOUT_CLASSIFICATION	1.178869587810771E-5	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999820252092492	WITHOUT_CLASSIFICATION	1.797479075084255E-5	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9996385199197457	WITHOUT_CLASSIFICATION	3.6148008025429644E-4	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9997617675230965	WITHOUT_CLASSIFICATION	2.3823247690337278E-4	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9997806872431485	WITHOUT_CLASSIFICATION	2.193127568515175E-4	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9989886923938958	WITHOUT_CLASSIFICATION	0.0010113076061042292	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999960884288668	WITHOUT_CLASSIFICATION	3.911571133222027E-6	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999694045358328	WITHOUT_CLASSIFICATION	3.059546416718137E-5	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999620482752266	WITHOUT_CLASSIFICATION	3.795172477337187E-5	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9997305946327334	WITHOUT_CLASSIFICATION	2.694053672666206E-4	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9998929603751007	WITHOUT_CLASSIFICATION	1.0703962489940943E-4	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.998842089155831	WITHOUT_CLASSIFICATION	0.0011579108441690687	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9998250631315998	WITHOUT_CLASSIFICATION	1.7493686840022154E-4	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9999794828889642	WITHOUT_CLASSIFICATION	2.0517111035682094E-5	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9998250631315998	WITHOUT_CLASSIFICATION	1.7493686840022154E-4	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999541015671316	WITHOUT_CLASSIFICATION	4.589843286831675E-5	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9997767945179731	WITHOUT_CLASSIFICATION	2.232054820268947E-4	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999758537637384	WITHOUT_CLASSIFICATION	2.4146236261616908E-5	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999535362157852	WITHOUT_CLASSIFICATION	4.646378421487306E-5	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999535362157852	WITHOUT_CLASSIFICATION	4.646378421487306E-5	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999035165773275	WITHOUT_CLASSIFICATION	9.648342267252917E-5	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999035165773275	WITHOUT_CLASSIFICATION	9.648342267252917E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9998430813466974	WITHOUT_CLASSIFICATION	1.5691865330251986E-4	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9998430813466974	WITHOUT_CLASSIFICATION	1.5691865330251986E-4	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999943679880411	WITHOUT_CLASSIFICATION	5.6320119589036275E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999943679880411	WITHOUT_CLASSIFICATION	5.6320119589036275E-5	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999703573386156	WITHOUT_CLASSIFICATION	2.964266138438782E-5	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999872633724624	WITHOUT_CLASSIFICATION	1.2736627537688488E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999074849478978	WITHOUT_CLASSIFICATION	9.251505210205245E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999074849478978	WITHOUT_CLASSIFICATION	9.251505210205245E-5	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999274485327861	WITHOUT_CLASSIFICATION	7.25514672138336E-5	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9999693324177445	WITHOUT_CLASSIFICATION	3.0667582255457265E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999943679880411	WITHOUT_CLASSIFICATION	5.6320119589036275E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999074849478978	WITHOUT_CLASSIFICATION	9.251505210205245E-5	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999688258885343	WITHOUT_CLASSIFICATION	3.117411146576251E-5	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999825816208406	WITHOUT_CLASSIFICATION	1.7418379159281457E-5	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999249240145089	WITHOUT_CLASSIFICATION	7.507598549105836E-5	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999797323097318	WITHOUT_CLASSIFICATION	2.0267690268168427E-5	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9991378929436497	WITHOUT_CLASSIFICATION	8.621070563501594E-4	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9999845470907655	WITHOUT_CLASSIFICATION	1.5452909234521936E-5	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9998936845901951	WITHOUT_CLASSIFICATION	1.063154098048113E-4	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999974972586179	WITHOUT_CLASSIFICATION	2.502741382104369E-6	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999470247626905	WITHOUT_CLASSIFICATION	5.2975237309508206E-5	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999560471957587	WITHOUT_CLASSIFICATION	4.395280424125318E-5	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9985506039234251	WITHOUT_CLASSIFICATION	0.001449396076574979	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999959535869998	WITHOUT_CLASSIFICATION	4.046413000171244E-6	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999813881816281	WITHOUT_CLASSIFICATION	1.8611818371939285E-5	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9999808125623199	WITHOUT_CLASSIFICATION	1.9187437680182063E-5	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999319851066958	WITHOUT_CLASSIFICATION	6.801489330420017E-5	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9372101671421268	WITHOUT_CLASSIFICATION	0.06278983285787311	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999513993743444	WITHOUT_CLASSIFICATION	4.860062565561807E-5	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9997538889518918	WITHOUT_CLASSIFICATION	2.461110481081395E-4	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999746762377406	WITHOUT_CLASSIFICATION	2.5323762259507692E-5	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9998186120753013	WITHOUT_CLASSIFICATION	1.8138792469855802E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9999249240145089	WITHOUT_CLASSIFICATION	7.507598549105836E-5	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9997058113770487	WITHOUT_CLASSIFICATION	2.9418862295129837E-4	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.999484056236818	WITHOUT_CLASSIFICATION	5.159437631820491E-4	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999889676450345	WITHOUT_CLASSIFICATION	1.1032354965372676E-5	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9998484519437509	WITHOUT_CLASSIFICATION	1.5154805624913186E-4	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9998484519437509	WITHOUT_CLASSIFICATION	1.5154805624913186E-4	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999355633068315	WITHOUT_CLASSIFICATION	6.443669316836982E-5	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9996760049482024	WITHOUT_CLASSIFICATION	3.2399505179760575E-4	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999593965651058	WITHOUT_CLASSIFICATION	4.0603434894106564E-5	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999725736968208	WITHOUT_CLASSIFICATION	2.7426303179192975E-5	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999436945757143	WITHOUT_CLASSIFICATION	5.630542428561496E-5	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9996739477158998	WITHOUT_CLASSIFICATION	3.260522841002049E-4	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.999975355850303	WITHOUT_CLASSIFICATION	2.4644149697010664E-5	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9999813288958912	WITHOUT_CLASSIFICATION	1.8671104108871732E-5	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999260325536631	WITHOUT_CLASSIFICATION	7.39674463369045E-5	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9992807062236481	WITHOUT_CLASSIFICATION	7.19293776351891E-4	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999969818471499	WITHOUT_CLASSIFICATION	3.0181528500912534E-6	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9987960298733538	WITHOUT_CLASSIFICATION	0.0012039701266461696	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9997191783397278	WITHOUT_CLASSIFICATION	2.808216602721641E-4	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999382651641175	WITHOUT_CLASSIFICATION	6.173483588253585E-5	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9997220552969168	WITHOUT_CLASSIFICATION	2.7794470308320555E-4	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9997975006260916	WITHOUT_CLASSIFICATION	2.024993739083744E-4	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9997220552969168	WITHOUT_CLASSIFICATION	2.7794470308320555E-4	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999801113269265	WITHOUT_CLASSIFICATION	1.988867307346956E-5	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999793755453347	WITHOUT_CLASSIFICATION	2.062445466537702E-5	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9999604650490911	WITHOUT_CLASSIFICATION	3.9534950908832014E-5	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999720295996919	WITHOUT_CLASSIFICATION	2.797040030806779E-5	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999955422490505	WITHOUT_CLASSIFICATION	4.457750949484457E-6	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9963918826361307	WITHOUT_CLASSIFICATION	0.0036081173638693354	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999885860447092	WITHOUT_CLASSIFICATION	1.1413955290772045E-5	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999001477893658	WITHOUT_CLASSIFICATION	9.985221063427378E-5	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9999831325802676	WITHOUT_CLASSIFICATION	1.686741973244447E-5	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9998764849895758	WITHOUT_CLASSIFICATION	1.2351501042420264E-4	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9999095171966795	WITHOUT_CLASSIFICATION	9.048280332050534E-5	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999913652026473	WITHOUT_CLASSIFICATION	8.634797352728872E-6	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999456873915809	WITHOUT_CLASSIFICATION	5.431260841906169E-5	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999402908537648	WITHOUT_CLASSIFICATION	5.9709146235200436E-5	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999809848669033	WITHOUT_CLASSIFICATION	1.9015133096584125E-5	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999836492630096	WITHOUT_CLASSIFICATION	1.6350736990402633E-5	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999708783929797	WITHOUT_CLASSIFICATION	2.9121607020266603E-5	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9998489220874974	WITHOUT_CLASSIFICATION	1.510779125024685E-4	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9999719225813085	WITHOUT_CLASSIFICATION	2.8077418691408576E-5	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9998196246645543	WITHOUT_CLASSIFICATION	1.8037533544559243E-4	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9999951995614479	WITHOUT_CLASSIFICATION	4.8004385521301355E-6	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999854250714367	WITHOUT_CLASSIFICATION	1.4574928563395867E-5	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9998589296028619	WITHOUT_CLASSIFICATION	1.4107039713795867E-4	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9999655884839883	WITHOUT_CLASSIFICATION	3.441151601180889E-5	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999643425285297	WITHOUT_CLASSIFICATION	3.56574714702252E-5	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999739547389562	WITHOUT_CLASSIFICATION	2.604526104383859E-5	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.999816127075554	WITHOUT_CLASSIFICATION	1.838729244458552E-4	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999822154581199	WITHOUT_CLASSIFICATION	1.7784541880074135E-5	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999936970439197	WITHOUT_CLASSIFICATION	6.302956080275338E-6	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9997152207974682	WITHOUT_CLASSIFICATION	2.8477920253175453E-4	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999692705261363	WITHOUT_CLASSIFICATION	3.072947386377776E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9998430813466974	WITHOUT_CLASSIFICATION	1.5691865330251986E-4	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999141811039766	WITHOUT_CLASSIFICATION	8.581889602353886E-5	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999436449303349	WITHOUT_CLASSIFICATION	5.6355069665086517E-5	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9996837321209107	WITHOUT_CLASSIFICATION	3.1626787908927995E-4	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999868877896985	WITHOUT_CLASSIFICATION	1.3112210301530448E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9999429335932296	WITHOUT_CLASSIFICATION	5.7066406770432826E-5	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999615613496013	WITHOUT_CLASSIFICATION	3.843865039855497E-5	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999993751855626	WITHOUT_CLASSIFICATION	6.248144374825316E-7	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9999798460955331	WITHOUT_CLASSIFICATION	2.0153904466864297E-5	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999914316580379	WITHOUT_CLASSIFICATION	8.568341962086467E-6	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.999955286580102	WITHOUT_CLASSIFICATION	4.471341989807679E-5	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999679539229138	WITHOUT_CLASSIFICATION	3.204607708612008E-5	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9999807374463789	WITHOUT_CLASSIFICATION	1.9262553621072928E-5	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9996158796715322	WITHOUT_CLASSIFICATION	3.8412032846783285E-4	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999522790192481	WITHOUT_CLASSIFICATION	4.7720980751837345E-5	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999858663408852	WITHOUT_CLASSIFICATION	1.4133659114986272E-5	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999989640353013	WITHOUT_CLASSIFICATION	1.0359646986081868E-6	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.999891898574878	WITHOUT_CLASSIFICATION	1.081014251220013E-4	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9994340501781701	WITHOUT_CLASSIFICATION	5.659498218298738E-4	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999749486465245	WITHOUT_CLASSIFICATION	2.5051353475520258E-5	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9998910500775098	WITHOUT_CLASSIFICATION	1.0894992249014946E-4	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9998137147664913	WITHOUT_CLASSIFICATION	1.86285233508729E-4	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9998286464142868	WITHOUT_CLASSIFICATION	1.713535857130959E-4	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9998754089445496	WITHOUT_CLASSIFICATION	1.2459105545036025E-4	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9996524859771708	WITHOUT_CLASSIFICATION	3.4751402282913636E-4	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999969472979656	WITHOUT_CLASSIFICATION	3.0527020344091355E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999703978972909	WITHOUT_CLASSIFICATION	2.9602102709072728E-5	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999703191092463	WITHOUT_CLASSIFICATION	2.9680890753711006E-5	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.999844942286706	WITHOUT_CLASSIFICATION	1.5505771329395304E-4	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999113655857197	WITHOUT_CLASSIFICATION	8.863441428030316E-5	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9998299255798239	WITHOUT_CLASSIFICATION	1.7007442017605753E-4	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999944274381007	WITHOUT_CLASSIFICATION	5.57256189928041E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9998430813466974	WITHOUT_CLASSIFICATION	1.5691865330251986E-4	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999801113269265	WITHOUT_CLASSIFICATION	1.988867307346956E-5	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999779086388009	WITHOUT_CLASSIFICATION	2.209136119920779E-5	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9999141811039766	WITHOUT_CLASSIFICATION	8.581889602353886E-5	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999783908173714	WITHOUT_CLASSIFICATION	2.1609182628589537E-5	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9999952142581173	WITHOUT_CLASSIFICATION	4.7857418827513765E-6	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9998299255798239	WITHOUT_CLASSIFICATION	1.7007442017605753E-4	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9997688319796658	WITHOUT_CLASSIFICATION	2.3116802033413807E-4	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9999959563180393	WITHOUT_CLASSIFICATION	4.04368196073019E-6	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999716831368308	WITHOUT_CLASSIFICATION	2.8316863169072413E-5	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999772115617821	WITHOUT_CLASSIFICATION	2.2788438217947924E-5	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999106382451851	WITHOUT_CLASSIFICATION	8.936175481493614E-5	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999992626568635	WITHOUT_CLASSIFICATION	7.373431365129773E-7	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9985506039234251	WITHOUT_CLASSIFICATION	0.001449396076574979	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9998660517140735	WITHOUT_CLASSIFICATION	1.3394828592647003E-4	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999570684647779	WITHOUT_CLASSIFICATION	4.293153522204318E-5	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.999929210337038	WITHOUT_CLASSIFICATION	7.078966296194774E-5	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9999266004072147	WITHOUT_CLASSIFICATION	7.33995927852751E-5	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9998936558634491	WITHOUT_CLASSIFICATION	1.0634413655082289E-4	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.999964560804046	WITHOUT_CLASSIFICATION	3.543919595399556E-5	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9994972794528773	WITHOUT_CLASSIFICATION	5.027205471227778E-4	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.999929109025644	WITHOUT_CLASSIFICATION	7.089097435596263E-5	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9997844359813479	WITHOUT_CLASSIFICATION	2.1556401865207016E-4	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999799245037055	WITHOUT_CLASSIFICATION	2.007549629437844E-5	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9998212549632778	WITHOUT_CLASSIFICATION	1.787450367222742E-4	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9999099343130144	WITHOUT_CLASSIFICATION	9.006568698550559E-5	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999303009787428	WITHOUT_CLASSIFICATION	6.969902125716087E-5	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9999688078875063	WITHOUT_CLASSIFICATION	3.11921124936551E-5	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9999742899451215	WITHOUT_CLASSIFICATION	2.5710054878478497E-5	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999884906976768	WITHOUT_CLASSIFICATION	1.150930232329729E-5	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999934583869773	WITHOUT_CLASSIFICATION	6.541613022811237E-6	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999779372404789	WITHOUT_CLASSIFICATION	2.2062759521009992E-5	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.99995657952392	WITHOUT_CLASSIFICATION	4.342047607992902E-5	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9998982924816334	WITHOUT_CLASSIFICATION	1.0170751836659537E-4	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999969490004551	WITHOUT_CLASSIFICATION	3.0509995450013756E-6	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9998430813466974	WITHOUT_CLASSIFICATION	1.5691865330251986E-4	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.999955286580102	WITHOUT_CLASSIFICATION	4.471341989807679E-5	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9999679539229138	WITHOUT_CLASSIFICATION	3.204607708612008E-5	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999989640353013	WITHOUT_CLASSIFICATION	1.0359646986081868E-6	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.999891898574878	WITHOUT_CLASSIFICATION	1.081014251220013E-4	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9994340501781701	WITHOUT_CLASSIFICATION	5.659498218298738E-4	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9999749486465245	WITHOUT_CLASSIFICATION	2.5051353475520258E-5	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9998910500775098	WITHOUT_CLASSIFICATION	1.0894992249014946E-4	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999117034778813	WITHOUT_CLASSIFICATION	8.829652211863562E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9998754089445496	WITHOUT_CLASSIFICATION	1.2459105545036025E-4	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999971389520541	WITHOUT_CLASSIFICATION	2.8610479458680664E-6	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.999986913680445	WITHOUT_CLASSIFICATION	1.308631955497658E-5	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9996297354202536	WITHOUT_CLASSIFICATION	3.7026457974643356E-4	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9998991055369495	WITHOUT_CLASSIFICATION	1.0089446305049217E-4	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999413471075301	WITHOUT_CLASSIFICATION	5.8652892469893764E-5	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999914316580379	WITHOUT_CLASSIFICATION	8.568341962086467E-6	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9999807374463789	WITHOUT_CLASSIFICATION	1.9262553621072928E-5	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9996158796715322	WITHOUT_CLASSIFICATION	3.8412032846783285E-4	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999865414512082	WITHOUT_CLASSIFICATION	1.3458548791709322E-5	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9994441638551064	WITHOUT_CLASSIFICATION	5.558361448935764E-4	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9998286464142868	WITHOUT_CLASSIFICATION	1.713535857130959E-4	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9996524859771708	WITHOUT_CLASSIFICATION	3.4751402282913636E-4	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.999973552936052	WITHOUT_CLASSIFICATION	2.6447063948075472E-5	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9992613780857692	WITHOUT_CLASSIFICATION	7.386219142308035E-4	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.999971123851628	WITHOUT_CLASSIFICATION	2.88761483719598E-5	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.999971123851628	WITHOUT_CLASSIFICATION	2.88761483719598E-5	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.99920124084861	WITHOUT_CLASSIFICATION	7.987591513901447E-4	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9998647353936764	WITHOUT_CLASSIFICATION	1.352646063235963E-4	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9998647353936764	WITHOUT_CLASSIFICATION	1.352646063235963E-4	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9999596820220843	WITHOUT_CLASSIFICATION	4.031797791571115E-5	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999838186160497	WITHOUT_CLASSIFICATION	1.6181383950327518E-5	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9999485883721722	WITHOUT_CLASSIFICATION	5.141162782778113E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999969490004551	WITHOUT_CLASSIFICATION	3.0509995450013756E-6	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999753751303491	WITHOUT_CLASSIFICATION	2.462486965086791E-5	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9999416668398355	WITHOUT_CLASSIFICATION	5.833316016454067E-5	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9998278970079952	WITHOUT_CLASSIFICATION	1.7210299200464354E-4	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.999956688216829	WITHOUT_CLASSIFICATION	4.331178317089917E-5	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999795327204555	WITHOUT_CLASSIFICATION	2.0467279544478114E-5	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999350673692773	WITHOUT_CLASSIFICATION	6.493263072267834E-5	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999960718148415	WITHOUT_CLASSIFICATION	3.9281851584167475E-6	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9961349376195999	WITHOUT_CLASSIFICATION	0.003865062380400084	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9999795800703992	WITHOUT_CLASSIFICATION	2.041992960083501E-5	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9999379984990565	WITHOUT_CLASSIFICATION	6.20015009435427E-5	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9947216575804773	WITHOUT_CLASSIFICATION	0.005278342419522703	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9998166737288993	WITHOUT_CLASSIFICATION	1.8332627110063937E-4	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9999503845948976	WITHOUT_CLASSIFICATION	4.961540510231538E-5	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9999675683698966	WITHOUT_CLASSIFICATION	3.2431630103252E-5	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9998128448340945	WITHOUT_CLASSIFICATION	1.8715516590549197E-4	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.999668820235264	WITHOUT_CLASSIFICATION	3.3117976473604285E-4	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9999615876590051	WITHOUT_CLASSIFICATION	3.8412340994923945E-5	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999777393507981	WITHOUT_CLASSIFICATION	2.226064920195259E-5	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9999631808827326	WITHOUT_CLASSIFICATION	3.6819117267433856E-5	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999715472156984	WITHOUT_CLASSIFICATION	2.845278430160878E-5	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9998942420035976	WITHOUT_CLASSIFICATION	1.0575799640252944E-4	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9999475040701038	WITHOUT_CLASSIFICATION	5.24959298961503E-5	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9997362516366263	WITHOUT_CLASSIFICATION	2.637483633737644E-4	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9999360174484107	WITHOUT_CLASSIFICATION	6.39825515893701E-5	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.999937353823625	WITHOUT_CLASSIFICATION	6.264617637499802E-5	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9979788954347831	WITHOUT_CLASSIFICATION	0.0020211045652168743	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999851014587574	WITHOUT_CLASSIFICATION	1.4898541242634306E-5	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999349108173633	WITHOUT_CLASSIFICATION	6.508918263674168E-5	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999580521665857	WITHOUT_CLASSIFICATION	4.1947833414183E-5	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9999451966366061	WITHOUT_CLASSIFICATION	5.4803363393830805E-5	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999799542431489	WITHOUT_CLASSIFICATION	2.0045756851168386E-5	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9999104200521455	WITHOUT_CLASSIFICATION	8.957994785444904E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995267730356626	WITHOUT_CLASSIFICATION	4.732269643373471E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999191724142723	WITHOUT_CLASSIFICATION	8.082758572764684E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999109674389952	WITHOUT_CLASSIFICATION	8.903256100479948E-5	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999799542431489	WITHOUT_CLASSIFICATION	2.0045756851168386E-5	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999708907022355	WITHOUT_CLASSIFICATION	2.9109297764522334E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9998576265473532	WITHOUT_CLASSIFICATION	1.423734526467552E-4	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9998576265473532	WITHOUT_CLASSIFICATION	1.423734526467552E-4	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.9998576265473532	WITHOUT_CLASSIFICATION	1.423734526467552E-4	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999202758946953	WITHOUT_CLASSIFICATION	7.972410530466021E-5	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999202758946953	WITHOUT_CLASSIFICATION	7.972410530466021E-5	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9999202758946953	WITHOUT_CLASSIFICATION	7.972410530466021E-5	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999994986303241	WITHOUT_CLASSIFICATION	5.013696758901689E-7	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999994986303241	WITHOUT_CLASSIFICATION	5.013696758901689E-7	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999922879901436	WITHOUT_CLASSIFICATION	7.712009856317636E-6	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999737122551493	WITHOUT_CLASSIFICATION	2.6287744850701104E-5	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999494864824755	WITHOUT_CLASSIFICATION	5.0513517524390756E-5	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999196037344747	WITHOUT_CLASSIFICATION	8.039626552521117E-5	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9998707469323146	WITHOUT_CLASSIFICATION	1.292530676854116E-4	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999945628265037	WITHOUT_CLASSIFICATION	5.437173496272638E-6	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999754731688594	WITHOUT_CLASSIFICATION	2.4526831140665784E-5	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9999491869609822	WITHOUT_CLASSIFICATION	5.0813039017657774E-5	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9984257891597673	WITHOUT_CLASSIFICATION	0.0015742108402327021	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9998657766406222	WITHOUT_CLASSIFICATION	1.342233593779272E-4	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9986402674025875	WITHOUT_CLASSIFICATION	0.001359732597412492	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.999973296213107	WITHOUT_CLASSIFICATION	2.6703786892929748E-5	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999901733980884	WITHOUT_CLASSIFICATION	9.826601911504143E-6	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999949661427998	WITHOUT_CLASSIFICATION	5.0338572001619594E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9997592942177962	WITHOUT_CLASSIFICATION	2.407057822037308E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9956550630509731	WITHOUT_CLASSIFICATION	0.004344936949026861	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9999544898380678	WITHOUT_CLASSIFICATION	4.5510161932195744E-5	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9997850208856863	WITHOUT_CLASSIFICATION	2.149791143137379E-4	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9993951417418455	WITHOUT_CLASSIFICATION	6.048582581544348E-4	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.999564175466011	WITHOUT_CLASSIFICATION	4.3582453398908414E-4	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.999075987118084	WITHOUT_CLASSIFICATION	9.240128819160147E-4	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9998981649813158	WITHOUT_CLASSIFICATION	1.0183501868423305E-4	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9992618060640422	WITHOUT_CLASSIFICATION	7.381939359577728E-4	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9996645978781652	WITHOUT_CLASSIFICATION	3.3540212183479225E-4	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9999499621778858	WITHOUT_CLASSIFICATION	5.0037822114098046E-5	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9992283453564229	WITHOUT_CLASSIFICATION	7.7165464357706E-4	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9999743736054832	WITHOUT_CLASSIFICATION	2.5626394516779554E-5	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999381502398103	WITHOUT_CLASSIFICATION	6.184976018973826E-5	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9999772519910496	WITHOUT_CLASSIFICATION	2.27480089504131E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999759686896097	WITHOUT_CLASSIFICATION	2.4031310390328675E-5	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9997677570530789	WITHOUT_CLASSIFICATION	2.3224294692129026E-4	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9999156699328346	WITHOUT_CLASSIFICATION	8.433006716530572E-5	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9999654576918805	WITHOUT_CLASSIFICATION	3.45423081195129E-5	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9998558368789616	WITHOUT_CLASSIFICATION	1.4416312103847798E-4	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.999880819135485	WITHOUT_CLASSIFICATION	1.1918086451506713E-4	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.9416727089334401	WITHOUT_CLASSIFICATION	0.0583272910665598	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999759686896097	WITHOUT_CLASSIFICATION	2.4031310390328675E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9998042344215746	WITHOUT_CLASSIFICATION	1.957655784253291E-4	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9999575966665446	WITHOUT_CLASSIFICATION	4.240333345538327E-5	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9999011801648153	WITHOUT_CLASSIFICATION	9.881983518470962E-5	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999982984781075	WITHOUT_CLASSIFICATION	1.7015218924669213E-6	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9999642358180265	WITHOUT_CLASSIFICATION	3.5764181973527255E-5	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999939281276238	WITHOUT_CLASSIFICATION	6.07187237629761E-6	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999747459454931	WITHOUT_CLASSIFICATION	2.5254054506825254E-5	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9999713263368831	WITHOUT_CLASSIFICATION	2.8673663116851063E-5	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999698727269678	WITHOUT_CLASSIFICATION	3.012727303221813E-5	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.999991246936991	WITHOUT_CLASSIFICATION	8.753063009001102E-6	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9992857668578539	WITHOUT_CLASSIFICATION	7.142331421461549E-4	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9997975239446479	WITHOUT_CLASSIFICATION	2.0247605535198416E-4	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999816545341675	WITHOUT_CLASSIFICATION	1.834546583244419E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9998042344215746	WITHOUT_CLASSIFICATION	1.957655784253291E-4	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9998457062474007	WITHOUT_CLASSIFICATION	1.5429375259939598E-4	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9998940067123288	WITHOUT_CLASSIFICATION	1.0599328767118063E-4	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9999757245008799	WITHOUT_CLASSIFICATION	2.4275499120000627E-5	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9261012293461045	WITHOUT_CLASSIFICATION	0.07389877065389548	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999482837706068	WITHOUT_CLASSIFICATION	5.171622939305845E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9997015994296052	WITHOUT_CLASSIFICATION	2.9840057039473295E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9999528491672044	WITHOUT_CLASSIFICATION	4.7150832795568E-5	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999464625770835	WITHOUT_CLASSIFICATION	5.3537422916455083E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999851284329784	WITHOUT_CLASSIFICATION	1.487156702162666E-5	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9999918731316233	WITHOUT_CLASSIFICATION	8.126868376681778E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9998849953867232	WITHOUT_CLASSIFICATION	1.1500461327690558E-4	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9995660678225711	WITHOUT_CLASSIFICATION	4.339321774289759E-4	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.999892999041784	WITHOUT_CLASSIFICATION	1.0700095821614444E-4	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999984823317979	WITHOUT_CLASSIFICATION	1.5176682020449645E-6	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9995660678225711	WITHOUT_CLASSIFICATION	4.339321774289759E-4	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9998567222311316	WITHOUT_CLASSIFICATION	1.4327776886830483E-4	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9973885993498287	WITHOUT_CLASSIFICATION	0.0026114006501712097	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999969083527906	WITHOUT_CLASSIFICATION	3.091647209407477E-6	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9998399628175685	WITHOUT_CLASSIFICATION	1.600371824315854E-4	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9997833166593082	WITHOUT_CLASSIFICATION	2.166833406918344E-4	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999860958737493	WITHOUT_CLASSIFICATION	1.3904126250651871E-5	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9999479303502143	WITHOUT_CLASSIFICATION	5.2069649785719716E-5	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9997386340254872	WITHOUT_CLASSIFICATION	2.613659745126919E-4	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9998760408727196	WITHOUT_CLASSIFICATION	1.23959127280412E-4	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9989697414052109	WITHOUT_CLASSIFICATION	0.0010302585947891219	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9992921586760581	WITHOUT_CLASSIFICATION	7.078413239417927E-4	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9998816793076499	WITHOUT_CLASSIFICATION	1.183206923500586E-4	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9999784864883785	WITHOUT_CLASSIFICATION	2.1513511621485187E-5	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9998852713647952	WITHOUT_CLASSIFICATION	1.1472863520486378E-4	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999485138614568	WITHOUT_CLASSIFICATION	5.148613854328937E-5	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999956249135648	WITHOUT_CLASSIFICATION	4.375086435263193E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.999959144432064	WITHOUT_CLASSIFICATION	4.0855567935941176E-5	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999514061547734	WITHOUT_CLASSIFICATION	4.859384522671366E-5	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999912556633288	WITHOUT_CLASSIFICATION	8.74433667110884E-6	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9998852713647952	WITHOUT_CLASSIFICATION	1.1472863520486378E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9941265610883601	WITHOUT_CLASSIFICATION	0.005873438911639926	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9996855444673906	WITHOUT_CLASSIFICATION	3.144555326094007E-4	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9989490003183185	WITHOUT_CLASSIFICATION	0.0010509996816815436	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999134997825637	WITHOUT_CLASSIFICATION	8.650021743621743E-5	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9999505214651728	WITHOUT_CLASSIFICATION	4.9478534827227335E-5	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9999551279353117	WITHOUT_CLASSIFICATION	4.48720646882257E-5	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9997333264826781	WITHOUT_CLASSIFICATION	2.6667351732188004E-4	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999180936738508	WITHOUT_CLASSIFICATION	8.19063261491923E-5	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.999760626382467	WITHOUT_CLASSIFICATION	2.393736175331225E-4	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9998719158002977	WITHOUT_CLASSIFICATION	1.2808419970236417E-4	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9997767698455501	WITHOUT_CLASSIFICATION	2.2323015444985684E-4	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999404074372505	WITHOUT_CLASSIFICATION	5.9592562749359124E-5	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9995963126652317	WITHOUT_CLASSIFICATION	4.0368733476821235E-4	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999180936738508	WITHOUT_CLASSIFICATION	8.19063261491923E-5	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999982104430925	WITHOUT_CLASSIFICATION	1.7895569074869955E-6	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9998662326075983	WITHOUT_CLASSIFICATION	1.3376739240174098E-4	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9998966871431446	WITHOUT_CLASSIFICATION	1.0331285685538974E-4	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9998484519437509	WITHOUT_CLASSIFICATION	1.5154805624913186E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999256591454755	WITHOUT_CLASSIFICATION	7.434085452452735E-5	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999901733980884	WITHOUT_CLASSIFICATION	9.826601911504143E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999901733980884	WITHOUT_CLASSIFICATION	9.826601911504143E-6	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999411293276115	WITHOUT_CLASSIFICATION	5.8870672388480815E-5	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999949661427998	WITHOUT_CLASSIFICATION	5.0338572001619594E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999500356321942	WITHOUT_CLASSIFICATION	4.996436780569278E-5	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9998324814954108	WITHOUT_CLASSIFICATION	1.6751850458910942E-4	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999599299990969	WITHOUT_CLASSIFICATION	4.007000090315387E-5	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.5483586131452273	DEFECT	0.4516413868547727	WITHOUT_CLASSIFICATION
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9998015484626146	WITHOUT_CLASSIFICATION	1.9845153738549048E-4	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999618384485345	WITHOUT_CLASSIFICATION	3.816155146551132E-5	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.997856624116163	WITHOUT_CLASSIFICATION	0.002143375883836883	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9997187298230098	WITHOUT_CLASSIFICATION	2.8127017699021477E-4	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.908716713576605	DEFECT	0.09128328642339498	WITHOUT_CLASSIFICATION
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999963900974757	WITHOUT_CLASSIFICATION	3.6099025244872318E-6	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9999375524873075	WITHOUT_CLASSIFICATION	6.24475126924633E-5	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.998696076083983	WITHOUT_CLASSIFICATION	0.0013039239160170383	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999638553444788	WITHOUT_CLASSIFICATION	3.614465552116472E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9997413617969173	WITHOUT_CLASSIFICATION	2.5863820308267985E-4	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.999919602584906	WITHOUT_CLASSIFICATION	8.039741509394606E-5	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9998228998064255	WITHOUT_CLASSIFICATION	1.7710019357453395E-4	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999969985621923	WITHOUT_CLASSIFICATION	3.0014378076911922E-6	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.998519686007146	WITHOUT_CLASSIFICATION	0.001480313992854043	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9982029702040339	WITHOUT_CLASSIFICATION	0.0017970297959660788	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999311327584621	WITHOUT_CLASSIFICATION	6.886724153780499E-5	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9997798481584159	WITHOUT_CLASSIFICATION	2.20151841583998E-4	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999833554169002	WITHOUT_CLASSIFICATION	1.66445830998747E-5	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9997018646142867	WITHOUT_CLASSIFICATION	2.98135385713212E-4	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.999947116691084	WITHOUT_CLASSIFICATION	5.28833089160942E-5	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.999967815060937	WITHOUT_CLASSIFICATION	3.218493906305023E-5	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999219315813179	WITHOUT_CLASSIFICATION	7.806841868200692E-5	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9999358216083328	WITHOUT_CLASSIFICATION	6.4178391667227E-5	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9998146499455699	WITHOUT_CLASSIFICATION	1.8535005443021623E-4	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9987505906677472	WITHOUT_CLASSIFICATION	0.0012494093322527845	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9999576462520402	WITHOUT_CLASSIFICATION	4.235374795984676E-5	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.999956685917854	WITHOUT_CLASSIFICATION	4.331408214593111E-5	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999710725795022	WITHOUT_CLASSIFICATION	2.892742049787359E-5	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9998828259761158	WITHOUT_CLASSIFICATION	1.1717402388418276E-4	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9997904661784845	WITHOUT_CLASSIFICATION	2.0953382151549032E-4	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9981384687000108	WITHOUT_CLASSIFICATION	0.0018615312999892318	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999109943034096	WITHOUT_CLASSIFICATION	8.90056965903828E-5	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.998394991681595	WITHOUT_CLASSIFICATION	0.0016050083184049888	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9979486796016606	WITHOUT_CLASSIFICATION	0.0020513203983395195	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999540609743718	WITHOUT_CLASSIFICATION	4.593902562810509E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999490029770721	WITHOUT_CLASSIFICATION	5.099702292795258E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9999288683031528	WITHOUT_CLASSIFICATION	7.113169684728136E-5	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.999969259243306	WITHOUT_CLASSIFICATION	3.074075669400109E-5	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9998564404472096	WITHOUT_CLASSIFICATION	1.4355955279033342E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999256591454755	WITHOUT_CLASSIFICATION	7.434085452452735E-5	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999754731688594	WITHOUT_CLASSIFICATION	2.4526831140665784E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9983717524496284	WITHOUT_CLASSIFICATION	0.001628247550371662	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9999141571761889	WITHOUT_CLASSIFICATION	8.584282381104767E-5	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.99999491887729	WITHOUT_CLASSIFICATION	5.08112270999487E-6	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9999151273574388	WITHOUT_CLASSIFICATION	8.487264256124148E-5	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999371565981248	WITHOUT_CLASSIFICATION	6.284340187520998E-5	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999582969135007	WITHOUT_CLASSIFICATION	4.170308649929219E-5	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9997344403136555	WITHOUT_CLASSIFICATION	2.6555968634438287E-4	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9998203391403903	WITHOUT_CLASSIFICATION	1.796608596096419E-4	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999686194098616	WITHOUT_CLASSIFICATION	3.138059013841244E-5	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9998009999231373	WITHOUT_CLASSIFICATION	1.9900007686277023E-4	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9998452526495336	WITHOUT_CLASSIFICATION	1.547473504664117E-4	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9980765254328364	WITHOUT_CLASSIFICATION	0.0019234745671634814	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999960603545633	WITHOUT_CLASSIFICATION	3.939645436583929E-6	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999778998907137	WITHOUT_CLASSIFICATION	2.2100109286263248E-5	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999878264202291	WITHOUT_CLASSIFICATION	1.2173579770831025E-5	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9999907525434141	WITHOUT_CLASSIFICATION	9.247456585851897E-6	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9999590523285297	WITHOUT_CLASSIFICATION	4.0947671470463825E-5	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9999433663881786	WITHOUT_CLASSIFICATION	5.6633611821364775E-5	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9987073418230219	WITHOUT_CLASSIFICATION	0.001292658176978134	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999711059424446	WITHOUT_CLASSIFICATION	2.8894057555248387E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999711059424446	WITHOUT_CLASSIFICATION	2.8894057555248387E-5	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.999976472153104	WITHOUT_CLASSIFICATION	2.3527846895910646E-5	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999634497655818	WITHOUT_CLASSIFICATION	3.6550234418160495E-5	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9999563897700912	WITHOUT_CLASSIFICATION	4.361022990880688E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999962007591944	WITHOUT_CLASSIFICATION	3.799240805622886E-6	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9997796482105693	WITHOUT_CLASSIFICATION	2.203517894305985E-4	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999970530094717	WITHOUT_CLASSIFICATION	2.9469905282812538E-6	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999299459978488	WITHOUT_CLASSIFICATION	7.00540021512644E-5	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9950795373404554	WITHOUT_CLASSIFICATION	0.004920462659544581	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9992149908718316	WITHOUT_CLASSIFICATION	7.850091281682665E-4	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999509853085907	WITHOUT_CLASSIFICATION	4.9014691409391724E-5	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9997918193603654	WITHOUT_CLASSIFICATION	2.0818063963461142E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9999811304931452	WITHOUT_CLASSIFICATION	1.8869506854750772E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9995260258543057	WITHOUT_CLASSIFICATION	4.739741456942961E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998338090123735	WITHOUT_CLASSIFICATION	1.6619098762653102E-4	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9994739139260697	WITHOUT_CLASSIFICATION	5.260860739303407E-4	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9993882864659603	WITHOUT_CLASSIFICATION	6.117135340395254E-4	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9998171913736896	WITHOUT_CLASSIFICATION	1.8280862631039023E-4	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9999195548654456	WITHOUT_CLASSIFICATION	8.04451345544922E-5	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9998395990274285	WITHOUT_CLASSIFICATION	1.6040097257146168E-4	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9997661272812	WITHOUT_CLASSIFICATION	2.338727187999377E-4	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999991161768336	WITHOUT_CLASSIFICATION	8.83823166388253E-7	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9998338090123735	WITHOUT_CLASSIFICATION	1.6619098762653102E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998338090123735	WITHOUT_CLASSIFICATION	1.6619098762653102E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998338090123735	WITHOUT_CLASSIFICATION	1.6619098762653102E-4	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9998338090123735	WITHOUT_CLASSIFICATION	1.6619098762653102E-4	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9998338375887206	WITHOUT_CLASSIFICATION	1.661624112794092E-4	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.999835366386461	WITHOUT_CLASSIFICATION	1.6463361353889977E-4	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9999392859861937	WITHOUT_CLASSIFICATION	6.071401380609704E-5	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9997774306956415	WITHOUT_CLASSIFICATION	2.2256930435848881E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.9998722973030552	WITHOUT_CLASSIFICATION	1.277026969448694E-4	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9999206604978208	WITHOUT_CLASSIFICATION	7.933950217920207E-5	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9891500724208142	WITHOUT_CLASSIFICATION	0.010849927579185799	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9996052203441665	WITHOUT_CLASSIFICATION	3.947796558334567E-4	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9998729741382487	WITHOUT_CLASSIFICATION	1.2702586175121784E-4	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.999848082878703	WITHOUT_CLASSIFICATION	1.5191712129699808E-4	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999240726314944	WITHOUT_CLASSIFICATION	7.592736850562562E-5	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.999784181183569	WITHOUT_CLASSIFICATION	2.1581881643097515E-4	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999303957516837	WITHOUT_CLASSIFICATION	6.960424831626282E-5	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9996990673868441	WITHOUT_CLASSIFICATION	3.0093261315593885E-4	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9983234254520418	WITHOUT_CLASSIFICATION	0.001676574547958159	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9911908882739372	WITHOUT_CLASSIFICATION	0.00880911172606281	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999848498498412	WITHOUT_CLASSIFICATION	1.5150150158962847E-5	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999673564586823	WITHOUT_CLASSIFICATION	3.264354131763314E-5	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9997621197891483	WITHOUT_CLASSIFICATION	2.3788021085169078E-4	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9998804693599503	WITHOUT_CLASSIFICATION	1.195306400496248E-4	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999278001943929	WITHOUT_CLASSIFICATION	7.219980560713046E-5	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9998773964122689	WITHOUT_CLASSIFICATION	1.226035877310513E-4	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999916976352857	WITHOUT_CLASSIFICATION	8.302364714299122E-6	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999924635342241	WITHOUT_CLASSIFICATION	7.536465775867447E-6	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9992611556840769	WITHOUT_CLASSIFICATION	7.388443159230273E-4	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.99995908647364	WITHOUT_CLASSIFICATION	4.091352636005774E-5	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999989247984659	WITHOUT_CLASSIFICATION	1.0752015341096865E-6	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.999553986647485	WITHOUT_CLASSIFICATION	4.460133525149957E-4	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999276179514287	WITHOUT_CLASSIFICATION	7.238204857123082E-5	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9977236781486656	WITHOUT_CLASSIFICATION	0.0022763218513343693	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999401538815362	WITHOUT_CLASSIFICATION	5.984611846365329E-5	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999468196340866	WITHOUT_CLASSIFICATION	5.318036591326653E-5	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9996675850227296	WITHOUT_CLASSIFICATION	3.32414977270407E-4	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9999810702780941	WITHOUT_CLASSIFICATION	1.8929721905825426E-5	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.999851721496295	WITHOUT_CLASSIFICATION	1.482785037049505E-4	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999037178569411	WITHOUT_CLASSIFICATION	9.62821430588786E-5	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9999866433369266	WITHOUT_CLASSIFICATION	1.3356663073427058E-5	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9999341186593402	WITHOUT_CLASSIFICATION	6.588134065969769E-5	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9998791363935647	WITHOUT_CLASSIFICATION	1.2086360643535146E-4	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.997460613485734	WITHOUT_CLASSIFICATION	0.0025393865142659244	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9999283532911122	WITHOUT_CLASSIFICATION	7.164670888782118E-5	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999950092203675	WITHOUT_CLASSIFICATION	4.990779632446087E-6	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.999994249534281	WITHOUT_CLASSIFICATION	5.750465718967659E-6	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999712561147936	WITHOUT_CLASSIFICATION	2.8743885206296843E-5	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999817271995968	WITHOUT_CLASSIFICATION	1.8272800403148735E-5	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999144057147271	WITHOUT_CLASSIFICATION	8.559428527286751E-5	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999975298589211	WITHOUT_CLASSIFICATION	2.470141078883159E-6	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999403959187054	WITHOUT_CLASSIFICATION	5.960408129459783E-5	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9997071064441441	WITHOUT_CLASSIFICATION	2.9289355585595194E-4	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9999579807655842	WITHOUT_CLASSIFICATION	4.201923441580021E-5	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9999187830890168	WITHOUT_CLASSIFICATION	8.121691098320393E-5	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999486682871176	WITHOUT_CLASSIFICATION	5.1331712882459566E-5	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.999979593502119	WITHOUT_CLASSIFICATION	2.04064978809383E-5	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999490390258103	WITHOUT_CLASSIFICATION	5.0960974189787636E-5	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999501970671754	WITHOUT_CLASSIFICATION	4.980293282466585E-5	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999541015671316	WITHOUT_CLASSIFICATION	4.589843286831675E-5	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9997545452381403	WITHOUT_CLASSIFICATION	2.4545476185965304E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9998165315528186	WITHOUT_CLASSIFICATION	1.8346844718140098E-4	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9997465095850376	WITHOUT_CLASSIFICATION	2.5349041496242286E-4	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999913503891186	WITHOUT_CLASSIFICATION	8.649610881433632E-6	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999996240397273	WITHOUT_CLASSIFICATION	3.7596027272007517E-7	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999585801674994	WITHOUT_CLASSIFICATION	4.141983250061763E-5	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999186137927106	WITHOUT_CLASSIFICATION	8.138620728935323E-5	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999806840260514	WITHOUT_CLASSIFICATION	1.9315973948591953E-5	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999774709199045	WITHOUT_CLASSIFICATION	2.2529080095479925E-5	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9993206404304206	WITHOUT_CLASSIFICATION	6.793595695793967E-4	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9998949631396418	WITHOUT_CLASSIFICATION	1.0503686035822158E-4	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999037178569411	WITHOUT_CLASSIFICATION	9.62821430588786E-5	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999541015671316	WITHOUT_CLASSIFICATION	4.589843286831675E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999541015671316	WITHOUT_CLASSIFICATION	4.589843286831675E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999541015671316	WITHOUT_CLASSIFICATION	4.589843286831675E-5	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999541015671316	WITHOUT_CLASSIFICATION	4.589843286831675E-5	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999705776228088	WITHOUT_CLASSIFICATION	2.9422377191066515E-5	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999705776228088	WITHOUT_CLASSIFICATION	2.9422377191066515E-5	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999327301166665	WITHOUT_CLASSIFICATION	6.726988333343061E-5	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999598414778814	WITHOUT_CLASSIFICATION	4.015852211864665E-5	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9995871274289709	WITHOUT_CLASSIFICATION	4.12872571028988E-4	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999541015671316	WITHOUT_CLASSIFICATION	4.589843286831675E-5	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9997632004000185	WITHOUT_CLASSIFICATION	2.3679959998138737E-4	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.999822867780116	WITHOUT_CLASSIFICATION	1.771322198840239E-4	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999541015671316	WITHOUT_CLASSIFICATION	4.589843286831675E-5	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.999979398095812	WITHOUT_CLASSIFICATION	2.0601904187929883E-5	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9973639788955725	WITHOUT_CLASSIFICATION	0.00263602110442756	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9995554862190109	WITHOUT_CLASSIFICATION	4.4451378098907994E-4	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999701064992371	WITHOUT_CLASSIFICATION	2.989350076291046E-5	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999711875148085	WITHOUT_CLASSIFICATION	2.881248519153569E-5	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9974392773425108	WITHOUT_CLASSIFICATION	0.0025607226574891426	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9992639711855972	WITHOUT_CLASSIFICATION	7.360288144027716E-4	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9980869823730985	WITHOUT_CLASSIFICATION	0.0019130176269014601	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999393172295901	WITHOUT_CLASSIFICATION	6.0682770409877826E-5	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9997110925915537	WITHOUT_CLASSIFICATION	2.8890740844639924E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999983830737953	WITHOUT_CLASSIFICATION	1.616926204689213E-5	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999705776228088	WITHOUT_CLASSIFICATION	2.9422377191066515E-5	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999327301166665	WITHOUT_CLASSIFICATION	6.726988333343061E-5	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9999738722714522	WITHOUT_CLASSIFICATION	2.612772854788557E-5	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999541015671316	WITHOUT_CLASSIFICATION	4.589843286831675E-5	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999541015671316	WITHOUT_CLASSIFICATION	4.589843286831675E-5	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9994451725339856	WITHOUT_CLASSIFICATION	5.548274660145221E-4	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.999984787412374	WITHOUT_CLASSIFICATION	1.5212587626008614E-5	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999927767782824	WITHOUT_CLASSIFICATION	7.2232217176306885E-6	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999677230650236	WITHOUT_CLASSIFICATION	3.227693497636338E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.999974796607721	WITHOUT_CLASSIFICATION	2.52033922789282E-5	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999357686290842	WITHOUT_CLASSIFICATION	6.423137091578373E-5	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9998299255798239	WITHOUT_CLASSIFICATION	1.7007442017605753E-4	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9986410756065467	WITHOUT_CLASSIFICATION	0.00135892439345326	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9995611703141009	WITHOUT_CLASSIFICATION	4.388296858992328E-4	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9999396688210372	WITHOUT_CLASSIFICATION	6.0331178962612E-5	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9997977048647368	WITHOUT_CLASSIFICATION	2.0229513526308265E-4	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9992770084320407	WITHOUT_CLASSIFICATION	7.229915679591906E-4	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.999963500020719	WITHOUT_CLASSIFICATION	3.6499979281113635E-5	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9998557990228367	WITHOUT_CLASSIFICATION	1.4420097716336485E-4	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999560034735946	WITHOUT_CLASSIFICATION	4.3996526405349395E-5	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9998713624605449	WITHOUT_CLASSIFICATION	1.2863753945525027E-4	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999455149054916	WITHOUT_CLASSIFICATION	5.4485094508361895E-5	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9999649262505477	WITHOUT_CLASSIFICATION	3.5073749452314825E-5	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999880195607398	WITHOUT_CLASSIFICATION	1.1980439260139066E-5	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999475276363893	WITHOUT_CLASSIFICATION	5.247236361074382E-5	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9999030918478268	WITHOUT_CLASSIFICATION	9.690815217317242E-5	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9988609761288954	WITHOUT_CLASSIFICATION	0.0011390238711045766	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.999934361202349	WITHOUT_CLASSIFICATION	6.563879765097508E-5	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9999084750550777	WITHOUT_CLASSIFICATION	9.152494492221403E-5	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999179425835885	WITHOUT_CLASSIFICATION	8.205741641156985E-5	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.999960291837334	WITHOUT_CLASSIFICATION	3.970816266594901E-5	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999724129403719	WITHOUT_CLASSIFICATION	2.758705962812103E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999395023011831	WITHOUT_CLASSIFICATION	6.049769881695453E-5	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9992530784058783	WITHOUT_CLASSIFICATION	7.469215941217068E-4	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9998903092400252	WITHOUT_CLASSIFICATION	1.0969075997477788E-4	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9997220552969168	WITHOUT_CLASSIFICATION	2.7794470308320555E-4	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9996422182096488	WITHOUT_CLASSIFICATION	3.577817903510637E-4	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.998966742177835	WITHOUT_CLASSIFICATION	0.0010332578221649389	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999809788796042	WITHOUT_CLASSIFICATION	1.902112039567202E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9996046525067555	WITHOUT_CLASSIFICATION	3.9534749324456736E-4	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9996046525067555	WITHOUT_CLASSIFICATION	3.9534749324456736E-4	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999963846051044	WITHOUT_CLASSIFICATION	3.615394895552777E-6	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999618194756023	WITHOUT_CLASSIFICATION	3.818052439774199E-5	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9999618194756023	WITHOUT_CLASSIFICATION	3.818052439774199E-5	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9997999239802007	WITHOUT_CLASSIFICATION	2.000760197993237E-4	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9997999239802007	WITHOUT_CLASSIFICATION	2.000760197993237E-4	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9999216265895664	WITHOUT_CLASSIFICATION	7.83734104336966E-5	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9991374608366573	WITHOUT_CLASSIFICATION	8.62539163342714E-4	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999991817855896	WITHOUT_CLASSIFICATION	8.182144105393429E-7	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999962224491136	WITHOUT_CLASSIFICATION	3.7775508865520685E-6	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999888578315342	WITHOUT_CLASSIFICATION	1.1142168465746228E-5	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9999312798636079	WITHOUT_CLASSIFICATION	6.87201363921358E-5	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999851284329784	WITHOUT_CLASSIFICATION	1.487156702162666E-5	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9996046525067555	WITHOUT_CLASSIFICATION	3.9534749324456736E-4	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9996657533890411	WITHOUT_CLASSIFICATION	3.342466109588796E-4	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9999712899558046	WITHOUT_CLASSIFICATION	2.8710044195330478E-5	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999862463796637	WITHOUT_CLASSIFICATION	1.3753620336340415E-5	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9995863797260715	WITHOUT_CLASSIFICATION	4.13620273928515E-4	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9998771432337572	WITHOUT_CLASSIFICATION	1.2285676624287063E-4	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9999064903047189	WITHOUT_CLASSIFICATION	9.350969528110232E-5	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999723448991743	WITHOUT_CLASSIFICATION	2.76551008257038E-5	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9997612497033427	WITHOUT_CLASSIFICATION	2.3875029665743123E-4	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.999965749673921	WITHOUT_CLASSIFICATION	3.425032607888278E-5	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.999965749673921	WITHOUT_CLASSIFICATION	3.425032607888278E-5	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999485923043345	WITHOUT_CLASSIFICATION	5.140769566542968E-5	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9999875329698462	WITHOUT_CLASSIFICATION	1.246703015369602E-5	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.999800693337257	WITHOUT_CLASSIFICATION	1.9930666274314292E-4	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9999671810231223	WITHOUT_CLASSIFICATION	3.2818976877645314E-5	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9998739814000468	WITHOUT_CLASSIFICATION	1.2601859995324988E-4	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999523011120178	WITHOUT_CLASSIFICATION	4.7698887982262716E-5	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998647397779723	WITHOUT_CLASSIFICATION	1.3526022202767698E-4	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9997476641584989	WITHOUT_CLASSIFICATION	2.52335841501094E-4	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999972108359386	WITHOUT_CLASSIFICATION	2.789164061311274E-6	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999530586088216	WITHOUT_CLASSIFICATION	4.6941391178465715E-5	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999752583041086	WITHOUT_CLASSIFICATION	2.4741695891324463E-5	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999789761412585	WITHOUT_CLASSIFICATION	2.1023858741482676E-5	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999346384115113	WITHOUT_CLASSIFICATION	6.536158848869957E-5	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9996016999985018	WITHOUT_CLASSIFICATION	3.98300001498197E-4	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9999807541080152	WITHOUT_CLASSIFICATION	1.92458919847514E-5	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999858504552678	WITHOUT_CLASSIFICATION	1.4149544732227153E-5	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999823059910139	WITHOUT_CLASSIFICATION	1.7694008986066726E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999432258615234	WITHOUT_CLASSIFICATION	5.677413847646902E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999432258615234	WITHOUT_CLASSIFICATION	5.677413847646902E-5	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999642822692607	WITHOUT_CLASSIFICATION	3.571773073926737E-5	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999988908201539	WITHOUT_CLASSIFICATION	1.1091798460594417E-6	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9980876439773814	WITHOUT_CLASSIFICATION	0.0019123560226186225	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999699971542362	WITHOUT_CLASSIFICATION	3.000284576391013E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999709366484043	WITHOUT_CLASSIFICATION	2.906335159565331E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999709366484043	WITHOUT_CLASSIFICATION	2.906335159565331E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9999276516548293	WITHOUT_CLASSIFICATION	7.234834517056823E-5	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9998640260813947	WITHOUT_CLASSIFICATION	1.359739186053657E-4	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9996296604130361	WITHOUT_CLASSIFICATION	3.703395869639123E-4	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999490029770721	WITHOUT_CLASSIFICATION	5.099702292795258E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999989392026936	WITHOUT_CLASSIFICATION	1.0607973064025516E-6	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999244230554648	WITHOUT_CLASSIFICATION	7.557694453528779E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999432258615234	WITHOUT_CLASSIFICATION	5.677413847646902E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999432258615234	WITHOUT_CLASSIFICATION	5.677413847646902E-5	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999642822692607	WITHOUT_CLASSIFICATION	3.571773073926737E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999709366484043	WITHOUT_CLASSIFICATION	2.906335159565331E-5	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9999873174331242	WITHOUT_CLASSIFICATION	1.2682566875742333E-5	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999982928368947	WITHOUT_CLASSIFICATION	1.7071631052902109E-6	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9997720154893214	WITHOUT_CLASSIFICATION	2.2798451067867681E-4	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9998816523644322	WITHOUT_CLASSIFICATION	1.183476355678153E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999709366484043	WITHOUT_CLASSIFICATION	2.906335159565331E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9996296604130361	WITHOUT_CLASSIFICATION	3.703395869639123E-4	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9996296604130361	WITHOUT_CLASSIFICATION	3.703395869639123E-4	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9998720020237345	WITHOUT_CLASSIFICATION	1.279979762655297E-4	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999681370302297	WITHOUT_CLASSIFICATION	3.186296977034265E-5	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9996296604130361	WITHOUT_CLASSIFICATION	3.703395869639123E-4	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9998758957283649	WITHOUT_CLASSIFICATION	1.2410427163510941E-4	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9998806587135387	WITHOUT_CLASSIFICATION	1.1934128646131866E-4	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999490029770721	WITHOUT_CLASSIFICATION	5.099702292795258E-5	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999131917561318	WITHOUT_CLASSIFICATION	8.680824386813456E-5	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.999424103937201	WITHOUT_CLASSIFICATION	5.758960627989663E-4	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9997894542553434	WITHOUT_CLASSIFICATION	2.1054574465662146E-4	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9999541966033851	WITHOUT_CLASSIFICATION	4.5803396614810196E-5	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999278881244126	WITHOUT_CLASSIFICATION	7.211187558747904E-5	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9998915459324239	WITHOUT_CLASSIFICATION	1.0845406757615993E-4	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9996406065964416	WITHOUT_CLASSIFICATION	3.5939340355848416E-4	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9999611825181915	WITHOUT_CLASSIFICATION	3.881748180835732E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9998565963356412	WITHOUT_CLASSIFICATION	1.434036643588858E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9998525423689555	WITHOUT_CLASSIFICATION	1.4745763104440147E-4	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.999769539987146	WITHOUT_CLASSIFICATION	2.3046001285400398E-4	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9998918536999617	WITHOUT_CLASSIFICATION	1.08146300038259E-4	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9988785506146396	WITHOUT_CLASSIFICATION	0.0011214493853604537	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999952963424326	WITHOUT_CLASSIFICATION	4.7036575674951775E-6	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9999952963424326	WITHOUT_CLASSIFICATION	4.7036575674951775E-6	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9999868808540959	WITHOUT_CLASSIFICATION	1.311914590417895E-5	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.999984408048078	WITHOUT_CLASSIFICATION	1.5591951922100627E-5	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9997699789641539	WITHOUT_CLASSIFICATION	2.3002103584613993E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9998377416866084	WITHOUT_CLASSIFICATION	1.622583133915395E-4	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999924743133216	WITHOUT_CLASSIFICATION	7.525686678279741E-6	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9997448089589895	WITHOUT_CLASSIFICATION	2.5519104101043213E-4	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.999979741983016	WITHOUT_CLASSIFICATION	2.0258016984102643E-5	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9997419349844486	WITHOUT_CLASSIFICATION	2.580650155513116E-4	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9997722541713928	WITHOUT_CLASSIFICATION	2.2774582860716407E-4	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9997722541713928	WITHOUT_CLASSIFICATION	2.2774582860716407E-4	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9997722541713928	WITHOUT_CLASSIFICATION	2.2774582860716407E-4	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.999898842188626	WITHOUT_CLASSIFICATION	1.0115781137403033E-4	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.999898842188626	WITHOUT_CLASSIFICATION	1.0115781137403033E-4	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.999898842188626	WITHOUT_CLASSIFICATION	1.0115781137403033E-4	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9996448468057453	WITHOUT_CLASSIFICATION	3.5515319425471543E-4	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9997986875002274	WITHOUT_CLASSIFICATION	2.0131249977252977E-4	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9990112843729166	WITHOUT_CLASSIFICATION	9.887156270833469E-4	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999866220676925	WITHOUT_CLASSIFICATION	1.3377932307577452E-5	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997342631400019	WITHOUT_CLASSIFICATION	2.6573685999807794E-4	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999750955099679	WITHOUT_CLASSIFICATION	2.490449003209725E-4	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9999593290752776	WITHOUT_CLASSIFICATION	4.0670924722372834E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999433727172926	WITHOUT_CLASSIFICATION	5.66272827074636E-5	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9988957889475715	WITHOUT_CLASSIFICATION	0.001104211052428439	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9998802649752108	WITHOUT_CLASSIFICATION	1.1973502478914867E-4	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9999291170708418	WITHOUT_CLASSIFICATION	7.08829291582542E-5	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999940716492667	WITHOUT_CLASSIFICATION	5.92835073327888E-6	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999215173199929	WITHOUT_CLASSIFICATION	7.84826800070565E-5	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9995007203746452	WITHOUT_CLASSIFICATION	4.992796253547973E-4	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999433467456951	WITHOUT_CLASSIFICATION	5.665325430495953E-5	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.99992965338972	WITHOUT_CLASSIFICATION	7.034661028006617E-5	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9987281810792838	WITHOUT_CLASSIFICATION	0.001271818920716202	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.983051804770128	WITHOUT_CLASSIFICATION	0.016948195229872086	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9996674989291419	WITHOUT_CLASSIFICATION	3.325010708581878E-4	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999946979218498	WITHOUT_CLASSIFICATION	5.3020781502261E-6	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9994644474405762	WITHOUT_CLASSIFICATION	5.355525594238069E-4	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9427293681397593	WITHOUT_CLASSIFICATION	0.057270631860240846	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999985085123021	WITHOUT_CLASSIFICATION	1.491487697946596E-6	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9998605397399836	WITHOUT_CLASSIFICATION	1.394602600163744E-4	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9998969400986186	WITHOUT_CLASSIFICATION	1.0305990138139917E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999520536326231	WITHOUT_CLASSIFICATION	4.794636737701351E-5	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.99999491887729	WITHOUT_CLASSIFICATION	5.08112270999487E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999449347358041	WITHOUT_CLASSIFICATION	5.5065264195916164E-5	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9999449347358041	WITHOUT_CLASSIFICATION	5.5065264195916164E-5	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9958522066931755	WITHOUT_CLASSIFICATION	0.004147793306824496	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999871284245809	WITHOUT_CLASSIFICATION	1.2871575419103387E-5	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9990279781220801	WITHOUT_CLASSIFICATION	9.720218779198552E-4	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999621395607706	WITHOUT_CLASSIFICATION	3.7860439229302763E-5	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9999790671233224	WITHOUT_CLASSIFICATION	2.0932876677563364E-5	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9999430833148029	WITHOUT_CLASSIFICATION	5.691668519724049E-5	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999734556100441	WITHOUT_CLASSIFICATION	2.6544389955822094E-5	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999933920392472	WITHOUT_CLASSIFICATION	6.607960752758912E-6	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9999635563606737	WITHOUT_CLASSIFICATION	3.644363932624265E-5	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9998059162362092	WITHOUT_CLASSIFICATION	1.9408376379091737E-4	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9998998801562096	WITHOUT_CLASSIFICATION	1.0011984379033221E-4	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9997349865314675	WITHOUT_CLASSIFICATION	2.6501346853248904E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9995508117846651	WITHOUT_CLASSIFICATION	4.491882153348473E-4	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9995561375273844	WITHOUT_CLASSIFICATION	4.4386247261561716E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9998565963356412	WITHOUT_CLASSIFICATION	1.434036643588858E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9996916393232389	WITHOUT_CLASSIFICATION	3.083606767610454E-4	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9991976137693914	WITHOUT_CLASSIFICATION	8.02386230608449E-4	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9997473606497598	WITHOUT_CLASSIFICATION	2.5263935024024634E-4	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.8267238038960294	WITHOUT_CLASSIFICATION	0.17327619610397055	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9998537223319143	WITHOUT_CLASSIFICATION	1.4627766808569521E-4	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999892358237081	WITHOUT_CLASSIFICATION	1.076417629186813E-5	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.999869263959678	WITHOUT_CLASSIFICATION	1.3073604032189524E-4	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9995228940430712	WITHOUT_CLASSIFICATION	4.771059569288473E-4	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9998134613866988	WITHOUT_CLASSIFICATION	1.865386133012163E-4	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9997174054367067	WITHOUT_CLASSIFICATION	2.825945632932918E-4	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999734884943593	WITHOUT_CLASSIFICATION	2.651150564070351E-5	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9997121429440795	WITHOUT_CLASSIFICATION	2.8785705592050746E-4	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.99993177811916	WITHOUT_CLASSIFICATION	6.822188083995073E-5	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999873010550328	WITHOUT_CLASSIFICATION	1.2698944967262962E-5	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9998990795950172	WITHOUT_CLASSIFICATION	1.0092040498281068E-4	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9998990795950172	WITHOUT_CLASSIFICATION	1.0092040498281068E-4	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999258523036856	WITHOUT_CLASSIFICATION	7.414769631450747E-5	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9999378964796851	WITHOUT_CLASSIFICATION	6.21035203148935E-5	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.99970519092193	WITHOUT_CLASSIFICATION	2.948090780700133E-4	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9984956384609164	WITHOUT_CLASSIFICATION	0.001504361539083638	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9999759784674995	WITHOUT_CLASSIFICATION	2.4021532500557164E-5	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9999812497099175	WITHOUT_CLASSIFICATION	1.8750290082489613E-5	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9997348975330689	WITHOUT_CLASSIFICATION	2.6510246693117794E-4	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9993026785918552	WITHOUT_CLASSIFICATION	6.97321408144742E-4	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9985087063285581	WITHOUT_CLASSIFICATION	0.0014912936714418256	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9998852376636289	WITHOUT_CLASSIFICATION	1.1476233637110906E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9988518643271517	WITHOUT_CLASSIFICATION	0.0011481356728483712	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9998941046587263	WITHOUT_CLASSIFICATION	1.0589534127371109E-4	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9998941046587263	WITHOUT_CLASSIFICATION	1.0589534127371109E-4	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999753751303491	WITHOUT_CLASSIFICATION	2.462486965086791E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999753751303491	WITHOUT_CLASSIFICATION	2.462486965086791E-5	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997342631400019	WITHOUT_CLASSIFICATION	2.6573685999807794E-4	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999750955099679	WITHOUT_CLASSIFICATION	2.490449003209725E-4	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9998661937089601	WITHOUT_CLASSIFICATION	1.3380629103974513E-4	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9993507551057708	WITHOUT_CLASSIFICATION	6.492448942291831E-4	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9993615494435328	WITHOUT_CLASSIFICATION	6.384505564671615E-4	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999696387024563	WITHOUT_CLASSIFICATION	3.0361297543648743E-5	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999947199223813	WITHOUT_CLASSIFICATION	5.280077618589331E-6	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999659096562981	WITHOUT_CLASSIFICATION	3.4090343701906997E-5	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.999767816037231	WITHOUT_CLASSIFICATION	2.3218396276906123E-4	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9998361904660886	WITHOUT_CLASSIFICATION	1.638095339113541E-4	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999934817062085	WITHOUT_CLASSIFICATION	6.518293791515431E-6	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9919995702699405	WITHOUT_CLASSIFICATION	0.008000429730059518	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999972146127115	WITHOUT_CLASSIFICATION	2.7853872884981368E-6	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9998966155234028	WITHOUT_CLASSIFICATION	1.033844765972408E-4	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9998966155234028	WITHOUT_CLASSIFICATION	1.033844765972408E-4	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9998966155234028	WITHOUT_CLASSIFICATION	1.033844765972408E-4	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9998195172260439	WITHOUT_CLASSIFICATION	1.8048277395613725E-4	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9999554555516367	WITHOUT_CLASSIFICATION	4.454444836335418E-5	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9995974708081915	WITHOUT_CLASSIFICATION	4.0252919180849237E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9999256622619284	WITHOUT_CLASSIFICATION	7.433773807154299E-5	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9951034126600867	WITHOUT_CLASSIFICATION	0.004896587339913205	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9995176557566386	WITHOUT_CLASSIFICATION	4.8234424336147794E-4	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9998811795236472	WITHOUT_CLASSIFICATION	1.1882047635285169E-4	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999591191269704	WITHOUT_CLASSIFICATION	4.0880873029622026E-5	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9998361904660886	WITHOUT_CLASSIFICATION	1.638095339113541E-4	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9996737262211024	WITHOUT_CLASSIFICATION	3.2627377889765056E-4	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999792719651106	WITHOUT_CLASSIFICATION	2.07280348892958E-5	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9996958410668572	WITHOUT_CLASSIFICATION	3.041589331427369E-4	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9998834471197879	WITHOUT_CLASSIFICATION	1.1655288021207439E-4	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9989023306862957	WITHOUT_CLASSIFICATION	0.001097669313704188	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9998304458573998	WITHOUT_CLASSIFICATION	1.6955414260021919E-4	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999922418304769	WITHOUT_CLASSIFICATION	7.758169523168424E-6	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999707626437452	WITHOUT_CLASSIFICATION	2.9237356254947642E-5	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999706311788509	WITHOUT_CLASSIFICATION	2.9368821149098663E-5	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999862622734284	WITHOUT_CLASSIFICATION	1.3737726571592188E-5	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9997468118497771	WITHOUT_CLASSIFICATION	2.531881502228333E-4	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9998502472501667	WITHOUT_CLASSIFICATION	1.49752749833311E-4	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999913663688593	WITHOUT_CLASSIFICATION	8.633631140789042E-6	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999516765196049	WITHOUT_CLASSIFICATION	4.832348039509041E-5	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.999791253987928	WITHOUT_CLASSIFICATION	2.0874601207194286E-4	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999588119370753	WITHOUT_CLASSIFICATION	4.1188062924738566E-5	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9998645914925683	WITHOUT_CLASSIFICATION	1.354085074315736E-4	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9925794755652658	WITHOUT_CLASSIFICATION	0.007420524434734113	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993457648101919	WITHOUT_CLASSIFICATION	6.542351898081402E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993457648101919	WITHOUT_CLASSIFICATION	6.542351898081402E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993457648101919	WITHOUT_CLASSIFICATION	6.542351898081402E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993457648101919	WITHOUT_CLASSIFICATION	6.542351898081402E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993457648101919	WITHOUT_CLASSIFICATION	6.542351898081402E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993457648101919	WITHOUT_CLASSIFICATION	6.542351898081402E-4	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999848396468898	WITHOUT_CLASSIFICATION	1.5160353110171806E-5	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9999799380824775	WITHOUT_CLASSIFICATION	2.006191752250244E-5	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9998687801511134	WITHOUT_CLASSIFICATION	1.3121984888667067E-4	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999615123389535	WITHOUT_CLASSIFICATION	3.848766104664108E-5	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9999615123389535	WITHOUT_CLASSIFICATION	3.848766104664108E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999581810944891	WITHOUT_CLASSIFICATION	4.181890551089053E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999581810944891	WITHOUT_CLASSIFICATION	4.181890551089053E-5	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9998755840320322	WITHOUT_CLASSIFICATION	1.2441596796771692E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999063148756164	WITHOUT_CLASSIFICATION	9.368512438355735E-5	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999867219527687	WITHOUT_CLASSIFICATION	1.3278047231326364E-5	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.999947542317234	WITHOUT_CLASSIFICATION	5.2457682765977297E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999411594249326	WITHOUT_CLASSIFICATION	5.884057506753744E-5	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9995051835370288	WITHOUT_CLASSIFICATION	4.948164629712656E-4	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999900976271269	WITHOUT_CLASSIFICATION	9.902372873179684E-6	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999900976271269	WITHOUT_CLASSIFICATION	9.902372873179684E-6	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9998939352393575	WITHOUT_CLASSIFICATION	1.0606476064251418E-4	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9998939352393575	WITHOUT_CLASSIFICATION	1.0606476064251418E-4	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9998939352393575	WITHOUT_CLASSIFICATION	1.0606476064251418E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9997758957773183	WITHOUT_CLASSIFICATION	2.2410422268174957E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9997758957773183	WITHOUT_CLASSIFICATION	2.2410422268174957E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999829945797514	WITHOUT_CLASSIFICATION	1.700542024863191E-5	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999922082494918	WITHOUT_CLASSIFICATION	7.791750508272632E-6	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999593373974661	WITHOUT_CLASSIFICATION	4.0662602533837546E-5	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9989051728607974	WITHOUT_CLASSIFICATION	0.0010948271392025742	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999184623931727	WITHOUT_CLASSIFICATION	8.153760682729168E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999184623931727	WITHOUT_CLASSIFICATION	8.153760682729168E-5	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999809985007099	WITHOUT_CLASSIFICATION	1.9001499290115264E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9993457648101919	WITHOUT_CLASSIFICATION	6.542351898081402E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999184623931727	WITHOUT_CLASSIFICATION	8.153760682729168E-5	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999367991767011	WITHOUT_CLASSIFICATION	6.320082329895007E-5	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999367991767011	WITHOUT_CLASSIFICATION	6.320082329895007E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999184623931727	WITHOUT_CLASSIFICATION	8.153760682729168E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999184623931727	WITHOUT_CLASSIFICATION	8.153760682729168E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999184623931727	WITHOUT_CLASSIFICATION	8.153760682729168E-5	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9998974788099086	WITHOUT_CLASSIFICATION	1.0252119009136951E-4	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9999675732286194	WITHOUT_CLASSIFICATION	3.24267713805418E-5	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999656185215372	WITHOUT_CLASSIFICATION	3.4381478462861055E-5	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999656185215372	WITHOUT_CLASSIFICATION	3.4381478462861055E-5	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9999858788987376	WITHOUT_CLASSIFICATION	1.41211012624488E-5	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999774534150616	WITHOUT_CLASSIFICATION	2.254658493831207E-5	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9999654869271101	WITHOUT_CLASSIFICATION	3.451307288996782E-5	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999656185215372	WITHOUT_CLASSIFICATION	3.4381478462861055E-5	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9998971637423419	WITHOUT_CLASSIFICATION	1.0283625765797783E-4	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999878304841247	WITHOUT_CLASSIFICATION	1.2169515875340211E-5	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999772747460951	WITHOUT_CLASSIFICATION	2.272525390486335E-5	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999435197632675	WITHOUT_CLASSIFICATION	5.648023673258339E-5	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9999221695123054	WITHOUT_CLASSIFICATION	7.78304876946259E-5	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9998723956080897	WITHOUT_CLASSIFICATION	1.2760439191037798E-4	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9998822288398814	WITHOUT_CLASSIFICATION	1.1777116011847697E-4	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9999356666605499	WITHOUT_CLASSIFICATION	6.433333945006903E-5	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999846246953749	WITHOUT_CLASSIFICATION	1.537530462505867E-5	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9998999439550481	WITHOUT_CLASSIFICATION	1.0005604495192241E-4	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9984940633308997	WITHOUT_CLASSIFICATION	0.001505936669100194	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9996442259428023	WITHOUT_CLASSIFICATION	3.5577405719766376E-4	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999922173645528	WITHOUT_CLASSIFICATION	7.782635447133261E-6	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999473791330294	WITHOUT_CLASSIFICATION	5.262086697060581E-5	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999724450319704	WITHOUT_CLASSIFICATION	2.7554968029686643E-5	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999904410646292	WITHOUT_CLASSIFICATION	9.558935370735772E-6	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9999922173645528	WITHOUT_CLASSIFICATION	7.782635447133261E-6	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9999138432284116	WITHOUT_CLASSIFICATION	8.615677158847355E-5	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9999473791330294	WITHOUT_CLASSIFICATION	5.262086697060581E-5	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999724450319704	WITHOUT_CLASSIFICATION	2.7554968029686643E-5	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.999988536221423	WITHOUT_CLASSIFICATION	1.1463778576901193E-5	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9999915954063497	WITHOUT_CLASSIFICATION	8.404593650200158E-6	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9999071253735785	WITHOUT_CLASSIFICATION	9.287462642139118E-5	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999378210416118	WITHOUT_CLASSIFICATION	6.21789583882111E-5	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9996857103621638	WITHOUT_CLASSIFICATION	3.1428963783627125E-4	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999047483084686	WITHOUT_CLASSIFICATION	9.525169153132179E-5	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9984236320935865	WITHOUT_CLASSIFICATION	0.001576367906413462	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9999621167835119	WITHOUT_CLASSIFICATION	3.7883216488152644E-5	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9999232661031856	WITHOUT_CLASSIFICATION	7.673389681437843E-5	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999743746773128	WITHOUT_CLASSIFICATION	2.562532268726985E-5	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999879243679607	WITHOUT_CLASSIFICATION	1.2075632039226493E-5	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9994962143297453	WITHOUT_CLASSIFICATION	5.037856702546176E-4	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9998299716297793	WITHOUT_CLASSIFICATION	1.7002837022067548E-4	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9999703773451	WITHOUT_CLASSIFICATION	2.9622654899996008E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998921815560918	WITHOUT_CLASSIFICATION	1.0781844390812276E-4	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9999236377894126	WITHOUT_CLASSIFICATION	7.636221058740252E-5	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999513281631016	WITHOUT_CLASSIFICATION	4.8671836898392664E-5	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9974989247880305	WITHOUT_CLASSIFICATION	0.002501075211969481	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9997816124936444	WITHOUT_CLASSIFICATION	2.183875063555564E-4	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9997816124936444	WITHOUT_CLASSIFICATION	2.183875063555564E-4	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9997700579683174	WITHOUT_CLASSIFICATION	2.2994203168262103E-4	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9997700579683174	WITHOUT_CLASSIFICATION	2.2994203168262103E-4	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9998593010461135	WITHOUT_CLASSIFICATION	1.4069895388650996E-4	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9998593010461135	WITHOUT_CLASSIFICATION	1.4069895388650996E-4	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9994833551460013	WITHOUT_CLASSIFICATION	5.166448539986811E-4	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999638388490759	WITHOUT_CLASSIFICATION	3.616115092413417E-5	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9995305494433815	WITHOUT_CLASSIFICATION	4.694505566184706E-4	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9996498873133823	WITHOUT_CLASSIFICATION	3.50112686617654E-4	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9998626976440559	WITHOUT_CLASSIFICATION	1.373023559440725E-4	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9997700579683174	WITHOUT_CLASSIFICATION	2.2994203168262103E-4	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9998651240095291	WITHOUT_CLASSIFICATION	1.3487599047085116E-4	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.999895521312253	WITHOUT_CLASSIFICATION	1.0447868774708923E-4	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999476375509878	WITHOUT_CLASSIFICATION	5.236244901221527E-5	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9983231711861739	WITHOUT_CLASSIFICATION	0.0016768288138261501	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9997284224989721	WITHOUT_CLASSIFICATION	2.7157750102793025E-4	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999383889023177	WITHOUT_CLASSIFICATION	6.161109768230357E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9965910962585135	WITHOUT_CLASSIFICATION	0.0034089037414864005	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999747954030166	WITHOUT_CLASSIFICATION	2.5204596983324426E-5	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9998688299652798	WITHOUT_CLASSIFICATION	1.3117003472007863E-4	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9966872767018443	WITHOUT_CLASSIFICATION	0.003312723298155692	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999255347939269	WITHOUT_CLASSIFICATION	7.446520607312455E-5	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9952258327465946	WITHOUT_CLASSIFICATION	0.0047741672534053975	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9999941744286607	WITHOUT_CLASSIFICATION	5.825571339347561E-6	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9999666985124733	WITHOUT_CLASSIFICATION	3.3301487526634675E-5	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9999538486162706	WITHOUT_CLASSIFICATION	4.6151383729430764E-5	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999799106790236	WITHOUT_CLASSIFICATION	2.0089320976489586E-5	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999545634428257	WITHOUT_CLASSIFICATION	4.543655717433509E-5	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.999963669686893	WITHOUT_CLASSIFICATION	3.633031310698441E-5	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999879213100906	WITHOUT_CLASSIFICATION	1.2078689909440605E-5	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.999980308976985	WITHOUT_CLASSIFICATION	1.969102301503028E-5	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999893634940655	WITHOUT_CLASSIFICATION	1.063650593451149E-5	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.999963688486921	WITHOUT_CLASSIFICATION	3.631151307910849E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9997874927347605	WITHOUT_CLASSIFICATION	2.1250726523951114E-4	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9995525507146747	WITHOUT_CLASSIFICATION	4.4744928532517835E-4	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9996307960277552	WITHOUT_CLASSIFICATION	3.692039722448209E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9993316178973518	WITHOUT_CLASSIFICATION	6.683821026482118E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9993316178973518	WITHOUT_CLASSIFICATION	6.683821026482118E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9915132930092538	WITHOUT_CLASSIFICATION	0.008486706990746041	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.998404165322759	WITHOUT_CLASSIFICATION	0.0015958346772410403	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9984950475323793	WITHOUT_CLASSIFICATION	0.0015049524676207016	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9998767864207403	WITHOUT_CLASSIFICATION	1.232135792597951E-4	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9998930234485793	WITHOUT_CLASSIFICATION	1.0697655142072554E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999761203013594	WITHOUT_CLASSIFICATION	2.3879698640612833E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999761203013594	WITHOUT_CLASSIFICATION	2.3879698640612833E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999761203013594	WITHOUT_CLASSIFICATION	2.3879698640612833E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9999481641795815	WITHOUT_CLASSIFICATION	5.183582041858131E-5	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9997722393948374	WITHOUT_CLASSIFICATION	2.277606051626968E-4	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9997722393948374	WITHOUT_CLASSIFICATION	2.277606051626968E-4	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9999380826690221	WITHOUT_CLASSIFICATION	6.191733097789855E-5	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9985611048488511	WITHOUT_CLASSIFICATION	0.00143889515114898	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999680941760998	WITHOUT_CLASSIFICATION	3.190582390010265E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999680941760998	WITHOUT_CLASSIFICATION	3.190582390010265E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999680941760998	WITHOUT_CLASSIFICATION	3.190582390010265E-5	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.999782165405002	WITHOUT_CLASSIFICATION	2.1783459499809984E-4	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9992232746172046	WITHOUT_CLASSIFICATION	7.767253827953586E-4	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9996807935194301	WITHOUT_CLASSIFICATION	3.1920648057002187E-4	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9998146521006898	WITHOUT_CLASSIFICATION	1.8534789931024312E-4	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9999624387248678	WITHOUT_CLASSIFICATION	3.75612751323092E-5	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9998043669918367	WITHOUT_CLASSIFICATION	1.9563300816324668E-4	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999236660635207	WITHOUT_CLASSIFICATION	7.633393647938251E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999760384818307	WITHOUT_CLASSIFICATION	2.3961518169338132E-5	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9990176649020092	WITHOUT_CLASSIFICATION	9.823350979908524E-4	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9950804596609547	WITHOUT_CLASSIFICATION	0.004919540339045237	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9996743318504362	WITHOUT_CLASSIFICATION	3.256681495637642E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9999648634044921	WITHOUT_CLASSIFICATION	3.5136595507829725E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999740420065618	WITHOUT_CLASSIFICATION	2.5957993438268205E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999740420065618	WITHOUT_CLASSIFICATION	2.5957993438268205E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999740420065618	WITHOUT_CLASSIFICATION	2.5957993438268205E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9998645876566186	WITHOUT_CLASSIFICATION	1.3541234338149157E-4	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9998645876566186	WITHOUT_CLASSIFICATION	1.3541234338149157E-4	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.999847805601871	WITHOUT_CLASSIFICATION	1.5219439812886405E-4	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9997380918120596	WITHOUT_CLASSIFICATION	2.6190818794038243E-4	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.999684136110044	WITHOUT_CLASSIFICATION	3.1586388995595083E-4	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999671759944785	WITHOUT_CLASSIFICATION	3.282400552151216E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9996985644427588	WITHOUT_CLASSIFICATION	3.0143555724107307E-4	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9996985644427588	WITHOUT_CLASSIFICATION	3.0143555724107307E-4	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9982407422109602	WITHOUT_CLASSIFICATION	0.0017592577890399072	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9999947077189131	WITHOUT_CLASSIFICATION	5.292281086934181E-6	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.999949638459071	WITHOUT_CLASSIFICATION	5.0361540929092955E-5	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999832301892032	WITHOUT_CLASSIFICATION	1.6769810796829735E-5	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9995164602798465	WITHOUT_CLASSIFICATION	4.835397201535264E-4	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9998957928179969	WITHOUT_CLASSIFICATION	1.0420718200319223E-4	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9998663664712611	WITHOUT_CLASSIFICATION	1.3363352873888956E-4	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.999991870116544	WITHOUT_CLASSIFICATION	8.129883456044878E-6	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999262164593634	WITHOUT_CLASSIFICATION	7.37835406365022E-5	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999705783012848	WITHOUT_CLASSIFICATION	2.9421698715257895E-5	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999682828747245	WITHOUT_CLASSIFICATION	3.171712527550975E-5	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999959563931922	WITHOUT_CLASSIFICATION	4.043606807814598E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999903166437472	WITHOUT_CLASSIFICATION	9.683356252792717E-6	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9998998801562096	WITHOUT_CLASSIFICATION	1.0011984379033221E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999671759944785	WITHOUT_CLASSIFICATION	3.282400552151216E-5	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9999546623822171	WITHOUT_CLASSIFICATION	4.5337617782862325E-5	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9999877969212145	WITHOUT_CLASSIFICATION	1.2203078785379018E-5	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999986419646549	WITHOUT_CLASSIFICATION	1.3580353450298005E-6	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999986419646549	WITHOUT_CLASSIFICATION	1.3580353450298005E-6	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.999753223668411	WITHOUT_CLASSIFICATION	2.467763315889741E-4	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9985375842776619	WITHOUT_CLASSIFICATION	0.001462415722337991	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999838201697185	WITHOUT_CLASSIFICATION	1.617983028150699E-5	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9999908422756051	WITHOUT_CLASSIFICATION	9.157724394928749E-6	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999980981642584	WITHOUT_CLASSIFICATION	1.9018357416071864E-6	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9999171333037521	WITHOUT_CLASSIFICATION	8.286669624796095E-5	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999711244149762	WITHOUT_CLASSIFICATION	2.887558502388507E-5	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999925780466038	WITHOUT_CLASSIFICATION	7.421953396117777E-6	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999981092951522	WITHOUT_CLASSIFICATION	1.8907048477800704E-6	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9999275249888527	WITHOUT_CLASSIFICATION	7.247501114735066E-5	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9999434001152653	WITHOUT_CLASSIFICATION	5.659988473476959E-5	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999052838707013	WITHOUT_CLASSIFICATION	9.471612929870001E-5	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9986870934980128	WITHOUT_CLASSIFICATION	0.0013129065019872107	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999777950923013	WITHOUT_CLASSIFICATION	2.220490769858523E-5	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9997489913329156	WITHOUT_CLASSIFICATION	2.510086670844188E-4	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9998123922550911	WITHOUT_CLASSIFICATION	1.8760774490884485E-4	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9998822942253665	WITHOUT_CLASSIFICATION	1.1770577463349201E-4	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999815808274851	WITHOUT_CLASSIFICATION	1.8419172514917727E-5	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999879760645444	WITHOUT_CLASSIFICATION	1.2023935455699324E-5	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999879760645444	WITHOUT_CLASSIFICATION	1.2023935455699324E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999997587273833	WITHOUT_CLASSIFICATION	2.4127261665175453E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999682828747245	WITHOUT_CLASSIFICATION	3.171712527550975E-5	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9997746614849441	WITHOUT_CLASSIFICATION	2.2533851505596094E-4	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999650159003345	WITHOUT_CLASSIFICATION	3.498409966546528E-5	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999614079357925	WITHOUT_CLASSIFICATION	3.85920642074131E-5	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9999844484180843	WITHOUT_CLASSIFICATION	1.5551581915691832E-5	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9998461072644426	WITHOUT_CLASSIFICATION	1.5389273555731355E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999682828747245	WITHOUT_CLASSIFICATION	3.171712527550975E-5	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9989740242181516	WITHOUT_CLASSIFICATION	0.00102597578184834	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9999249695491685	WITHOUT_CLASSIFICATION	7.503045083140893E-5	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999699228968586	WITHOUT_CLASSIFICATION	3.0077103141392007E-5	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999753800112344	WITHOUT_CLASSIFICATION	2.461998876559725E-5	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999952660036154	WITHOUT_CLASSIFICATION	4.7339963845109315E-6	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9995982871913122	WITHOUT_CLASSIFICATION	4.0171280868774793E-4	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9989725517721748	WITHOUT_CLASSIFICATION	0.0010274482278251362	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999875992043391	WITHOUT_CLASSIFICATION	1.2400795660946901E-5	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999601712387053	WITHOUT_CLASSIFICATION	3.98287612946903E-5	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999632066014972	WITHOUT_CLASSIFICATION	3.6793398502743735E-5	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999170748700278	WITHOUT_CLASSIFICATION	8.292512997230977E-5	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999170748700278	WITHOUT_CLASSIFICATION	8.292512997230977E-5	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.999909934697995	WITHOUT_CLASSIFICATION	9.006530200492694E-5	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9999938275896638	WITHOUT_CLASSIFICATION	6.172410336244496E-6	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9999582612299459	WITHOUT_CLASSIFICATION	4.173877005402259E-5	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9999302030899749	WITHOUT_CLASSIFICATION	6.979691002504586E-5	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9998918539525136	WITHOUT_CLASSIFICATION	1.0814604748632264E-4	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9999829687194889	WITHOUT_CLASSIFICATION	1.7031280511084802E-5	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9999536435435032	WITHOUT_CLASSIFICATION	4.635645649680099E-5	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999684544478248	WITHOUT_CLASSIFICATION	3.154555217522828E-5	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9999160065129418	WITHOUT_CLASSIFICATION	8.399348705812963E-5	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999485695923346	WITHOUT_CLASSIFICATION	5.1430407665483145E-5	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999272151813283	WITHOUT_CLASSIFICATION	7.278481867174121E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999652784730189	WITHOUT_CLASSIFICATION	3.472152698102966E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999652784730189	WITHOUT_CLASSIFICATION	3.472152698102966E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999652784730189	WITHOUT_CLASSIFICATION	3.472152698102966E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999652784730189	WITHOUT_CLASSIFICATION	3.472152698102966E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999652784730189	WITHOUT_CLASSIFICATION	3.472152698102966E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999652784730189	WITHOUT_CLASSIFICATION	3.472152698102966E-5	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9966294692692169	WITHOUT_CLASSIFICATION	0.003370530730783022	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.999989398927429	WITHOUT_CLASSIFICATION	1.0601072570954634E-5	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.9998625154380869	WITHOUT_CLASSIFICATION	1.3748456191320588E-4	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999401251891415	WITHOUT_CLASSIFICATION	5.987481085837871E-5	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9998571076237567	WITHOUT_CLASSIFICATION	1.4289237624334785E-4	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9995357868547442	WITHOUT_CLASSIFICATION	4.642131452556999E-4	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999468617266576	WITHOUT_CLASSIFICATION	5.3138273342408304E-5	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999508628578101	WITHOUT_CLASSIFICATION	4.913714218985038E-5	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9996334380190166	WITHOUT_CLASSIFICATION	3.6656198098341316E-4	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999355507272789	WITHOUT_CLASSIFICATION	6.444927272109411E-5	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.999972181970226	WITHOUT_CLASSIFICATION	2.7818029774014458E-5	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9998423124461002	WITHOUT_CLASSIFICATION	1.576875538997729E-4	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9998579874248718	WITHOUT_CLASSIFICATION	1.420125751281804E-4	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9999792870075611	WITHOUT_CLASSIFICATION	2.0712992438935663E-5	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9997422528965823	WITHOUT_CLASSIFICATION	2.57747103417733E-4	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9998922927491505	WITHOUT_CLASSIFICATION	1.0770725084947801E-4	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9999190145699859	WITHOUT_CLASSIFICATION	8.098543001404237E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999184908029626	WITHOUT_CLASSIFICATION	8.150919703745383E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999184908029626	WITHOUT_CLASSIFICATION	8.150919703745383E-5	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9996300578993529	WITHOUT_CLASSIFICATION	3.69942100647081E-4	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999180936738508	WITHOUT_CLASSIFICATION	8.19063261491923E-5	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999181095437812	WITHOUT_CLASSIFICATION	8.189045621877518E-5	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.999877198295907	WITHOUT_CLASSIFICATION	1.2280170409298521E-4	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.999918663041702	WITHOUT_CLASSIFICATION	8.133695829799245E-5	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9998506107217577	WITHOUT_CLASSIFICATION	1.493892782423019E-4	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9997484903295867	WITHOUT_CLASSIFICATION	2.5150967041341117E-4	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9999342648031162	WITHOUT_CLASSIFICATION	6.573519688369212E-5	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9998696254772148	WITHOUT_CLASSIFICATION	1.3037452278518385E-4	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999434142471098	WITHOUT_CLASSIFICATION	5.6585752890223454E-5	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999496493557553	WITHOUT_CLASSIFICATION	5.0350644244675806E-5	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9998090299725011	WITHOUT_CLASSIFICATION	1.9097002749885624E-4	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9999115383165138	WITHOUT_CLASSIFICATION	8.846168348625409E-5	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9999720682461328	WITHOUT_CLASSIFICATION	2.79317538672219E-5	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9999087822247313	WITHOUT_CLASSIFICATION	9.121777526872261E-5	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9998465030655777	WITHOUT_CLASSIFICATION	1.5349693442228462E-4	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9998546901673305	WITHOUT_CLASSIFICATION	1.4530983266948551E-4	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9998586538301678	WITHOUT_CLASSIFICATION	1.4134616983218698E-4	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999928980403205	WITHOUT_CLASSIFICATION	7.101959679445647E-6	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9998648956922984	WITHOUT_CLASSIFICATION	1.3510430770161003E-4	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9998940658116492	WITHOUT_CLASSIFICATION	1.0593418835079226E-4	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9997465199361522	WITHOUT_CLASSIFICATION	2.534800638478054E-4	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9996785551295583	WITHOUT_CLASSIFICATION	3.2144487044173697E-4	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9998207344466451	WITHOUT_CLASSIFICATION	1.7926555335483622E-4	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.999804894889821	WITHOUT_CLASSIFICATION	1.9510511017899353E-4	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.999804846456997	WITHOUT_CLASSIFICATION	1.951535430031185E-4	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9998113167801629	WITHOUT_CLASSIFICATION	1.886832198370958E-4	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9994884234556171	WITHOUT_CLASSIFICATION	5.115765443829997E-4	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999944375347036	WITHOUT_CLASSIFICATION	5.5624652963792836E-6	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999486038696517	WITHOUT_CLASSIFICATION	5.139613034827852E-5	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9988864397063204	WITHOUT_CLASSIFICATION	0.0011135602936795913	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9992261607672953	WITHOUT_CLASSIFICATION	7.738392327046058E-4	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999468082652994	WITHOUT_CLASSIFICATION	5.319173470066042E-5	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9999357196467924	WITHOUT_CLASSIFICATION	6.428035320756805E-5	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9994708997456029	WITHOUT_CLASSIFICATION	5.291002543972305E-4	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999703362305199	WITHOUT_CLASSIFICATION	2.9663769480072722E-5	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999735858731854	WITHOUT_CLASSIFICATION	2.6414126814475538E-5	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9998566732687221	WITHOUT_CLASSIFICATION	1.4332673127791698E-4	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9996525362567769	WITHOUT_CLASSIFICATION	3.474637432231856E-4	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9996525362567769	WITHOUT_CLASSIFICATION	3.474637432231856E-4	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9943177236351327	WITHOUT_CLASSIFICATION	0.005682276364867243	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9997588606782875	WITHOUT_CLASSIFICATION	2.4113932171259276E-4	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9998156837841965	WITHOUT_CLASSIFICATION	1.8431621580352868E-4	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9999248933024248	WITHOUT_CLASSIFICATION	7.510669757510613E-5	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.999979581875532	WITHOUT_CLASSIFICATION	2.0418124467970846E-5	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9997901448596713	WITHOUT_CLASSIFICATION	2.0985514032873984E-4	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.999821484075012	WITHOUT_CLASSIFICATION	1.7851592498791167E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9963954097103702	WITHOUT_CLASSIFICATION	0.003604590289629857	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9998962563695608	WITHOUT_CLASSIFICATION	1.0374363043909477E-4	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9998962563695608	WITHOUT_CLASSIFICATION	1.0374363043909477E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.999804846456997	WITHOUT_CLASSIFICATION	1.951535430031185E-4	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9998050025736831	WITHOUT_CLASSIFICATION	1.9499742631684327E-4	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9993600763997987	WITHOUT_CLASSIFICATION	6.399236002013025E-4	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.999804846456997	WITHOUT_CLASSIFICATION	1.951535430031185E-4	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9999208313794357	WITHOUT_CLASSIFICATION	7.916862056431768E-5	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.9993846566134812	WITHOUT_CLASSIFICATION	6.153433865188472E-4	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9995854391827523	WITHOUT_CLASSIFICATION	4.145608172477012E-4	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999558824360762	WITHOUT_CLASSIFICATION	4.411756392373857E-5	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9997457813041403	WITHOUT_CLASSIFICATION	2.542186958597949E-4	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999337625836024	WITHOUT_CLASSIFICATION	6.62374163975156E-5	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999069950824139	WITHOUT_CLASSIFICATION	9.300491758602686E-5	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9997352109379126	WITHOUT_CLASSIFICATION	2.6478906208739076E-4	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999559790505709	WITHOUT_CLASSIFICATION	4.402094942909881E-5	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9963954097103702	WITHOUT_CLASSIFICATION	0.003604590289629857	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.999951829825784	WITHOUT_CLASSIFICATION	4.8170174216059765E-5	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.999951829825784	WITHOUT_CLASSIFICATION	4.8170174216059765E-5	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999559790505709	WITHOUT_CLASSIFICATION	4.402094942909881E-5	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9998536973249659	WITHOUT_CLASSIFICATION	1.463026750341186E-4	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999982114597511	WITHOUT_CLASSIFICATION	1.7885402489620378E-6	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999616782555357	WITHOUT_CLASSIFICATION	3.832174446424087E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999871216393595	WITHOUT_CLASSIFICATION	1.287836064051453E-5	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999856493509847	WITHOUT_CLASSIFICATION	1.4350649015245817E-5	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9999771126706589	WITHOUT_CLASSIFICATION	2.288732934102629E-5	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999835736342874	WITHOUT_CLASSIFICATION	1.6426365712664767E-5	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9995254681512498	WITHOUT_CLASSIFICATION	4.7453184875025957E-4	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999485644941422	WITHOUT_CLASSIFICATION	5.143550585790215E-5	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999668563842001	WITHOUT_CLASSIFICATION	3.314361579991024E-5	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999761963417945	WITHOUT_CLASSIFICATION	2.380365820556518E-5	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9989747251367955	WITHOUT_CLASSIFICATION	0.0010252748632044598	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.999844435185067	WITHOUT_CLASSIFICATION	1.555648149330087E-4	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.999844435185067	WITHOUT_CLASSIFICATION	1.555648149330087E-4	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.999721895990148	WITHOUT_CLASSIFICATION	2.7810400985195106E-4	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9998967550859589	WITHOUT_CLASSIFICATION	1.0324491404106613E-4	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9986522825081118	WITHOUT_CLASSIFICATION	0.0013477174918882266	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999718841322512	WITHOUT_CLASSIFICATION	2.811586774868156E-5	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9999718841322512	WITHOUT_CLASSIFICATION	2.811586774868156E-5	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999395340437898	WITHOUT_CLASSIFICATION	6.046595621017692E-5	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999395340437898	WITHOUT_CLASSIFICATION	6.046595621017692E-5	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999418677607473	WITHOUT_CLASSIFICATION	5.813223925266518E-5	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999053759236236	WITHOUT_CLASSIFICATION	9.462407637648465E-5	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9998484779070915	WITHOUT_CLASSIFICATION	1.5152209290840036E-4	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999594270745357	WITHOUT_CLASSIFICATION	4.057292546431546E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999591248486621	WITHOUT_CLASSIFICATION	4.0875151337855534E-5	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9999631294776279	WITHOUT_CLASSIFICATION	3.687052237206641E-5	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.999816915836531	WITHOUT_CLASSIFICATION	1.8308416346898146E-4	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9999418677607473	WITHOUT_CLASSIFICATION	5.813223925266518E-5	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9981024302169978	WITHOUT_CLASSIFICATION	0.0018975697830020313	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999053759236236	WITHOUT_CLASSIFICATION	9.462407637648465E-5	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.999697158861903	WITHOUT_CLASSIFICATION	3.028411380969698E-4	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9998484779070915	WITHOUT_CLASSIFICATION	1.5152209290840036E-4	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999594270745357	WITHOUT_CLASSIFICATION	4.057292546431546E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999591248486621	WITHOUT_CLASSIFICATION	4.0875151337855534E-5	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.99971278712664	WITHOUT_CLASSIFICATION	2.8721287335998287E-4	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9999587449994464	WITHOUT_CLASSIFICATION	4.12550005536079E-5	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.999979615165961	WITHOUT_CLASSIFICATION	2.0384834039064067E-5	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999706915338997	WITHOUT_CLASSIFICATION	2.9308466100232193E-5	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9998990030082545	WITHOUT_CLASSIFICATION	1.0099699174548704E-4	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.999974422005779	WITHOUT_CLASSIFICATION	2.557799422092843E-5	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9999799615157459	WITHOUT_CLASSIFICATION	2.0038484254199034E-5	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9998537712686951	WITHOUT_CLASSIFICATION	1.4622873130478887E-4	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999226830694974	WITHOUT_CLASSIFICATION	7.731693050262867E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9997130548098272	WITHOUT_CLASSIFICATION	2.869451901727644E-4	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9998101711569235	WITHOUT_CLASSIFICATION	1.8982884307640905E-4	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9995881245161562	WITHOUT_CLASSIFICATION	4.1187548384378066E-4	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9997663220559223	WITHOUT_CLASSIFICATION	2.3367794407777074E-4	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9998041490742683	WITHOUT_CLASSIFICATION	1.9585092573176863E-4	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999003724261112	WITHOUT_CLASSIFICATION	9.962757388880003E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9997308927205183	WITHOUT_CLASSIFICATION	2.6910727948163416E-4	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9997347158514128	WITHOUT_CLASSIFICATION	2.652841485872221E-4	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9997472482074841	WITHOUT_CLASSIFICATION	2.527517925158984E-4	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9994801981960701	WITHOUT_CLASSIFICATION	5.198018039298738E-4	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9995093157425491	WITHOUT_CLASSIFICATION	4.906842574508934E-4	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.999070181549339	WITHOUT_CLASSIFICATION	9.298184506609237E-4	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9999339670252573	WITHOUT_CLASSIFICATION	6.603297474269336E-5	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9999050624339303	WITHOUT_CLASSIFICATION	9.493756606965136E-5	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9998039037621704	WITHOUT_CLASSIFICATION	1.9609623782944772E-4	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9999404597491609	WITHOUT_CLASSIFICATION	5.9540250839133274E-5	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9999485151206239	WITHOUT_CLASSIFICATION	5.148487937602572E-5	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9995908290910065	WITHOUT_CLASSIFICATION	4.0917090899349824E-4	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9995557207166184	WITHOUT_CLASSIFICATION	4.442792833815748E-4	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9989985301284764	WITHOUT_CLASSIFICATION	0.0010014698715237105	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9997836863739225	WITHOUT_CLASSIFICATION	2.16313626077568E-4	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9999856493509847	WITHOUT_CLASSIFICATION	1.4350649015245817E-5	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9973762428054318	WITHOUT_CLASSIFICATION	0.002623757194568239	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9996742872377442	WITHOUT_CLASSIFICATION	3.2571276225579974E-4	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999802672002297	WITHOUT_CLASSIFICATION	1.9732799770254007E-5	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9998203993596706	WITHOUT_CLASSIFICATION	1.7960064032925907E-4	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999703978972909	WITHOUT_CLASSIFICATION	2.9602102709072728E-5	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.997384000378669	WITHOUT_CLASSIFICATION	0.002615999621331017	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9998924447811818	WITHOUT_CLASSIFICATION	1.0755521881818075E-4	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9999003722827926	WITHOUT_CLASSIFICATION	9.962771720744042E-5	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.999876449291919	WITHOUT_CLASSIFICATION	1.2355070808099333E-4	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999985552265133	WITHOUT_CLASSIFICATION	1.4447734867384853E-6	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999920364580924	WITHOUT_CLASSIFICATION	7.963541907488577E-6	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9999252249738645	WITHOUT_CLASSIFICATION	7.477502613555923E-5	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999746077347247	WITHOUT_CLASSIFICATION	2.539226527536794E-5	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999998262513441	WITHOUT_CLASSIFICATION	1.7374865597942242E-7	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9991067180631464	WITHOUT_CLASSIFICATION	8.932819368536344E-4	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999831684780296	WITHOUT_CLASSIFICATION	1.68315219704125E-5	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9997989369279577	WITHOUT_CLASSIFICATION	2.0106307204231094E-4	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9995881245161562	WITHOUT_CLASSIFICATION	4.1187548384378066E-4	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9997663220559223	WITHOUT_CLASSIFICATION	2.3367794407777074E-4	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9998041490742683	WITHOUT_CLASSIFICATION	1.9585092573176863E-4	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9999003724261112	WITHOUT_CLASSIFICATION	9.962757388880003E-5	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9997308927205183	WITHOUT_CLASSIFICATION	2.6910727948163416E-4	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9997347158514128	WITHOUT_CLASSIFICATION	2.652841485872221E-4	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9997523883602244	WITHOUT_CLASSIFICATION	2.476116397756217E-4	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9997472482074841	WITHOUT_CLASSIFICATION	2.527517925158984E-4	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9995557207166184	WITHOUT_CLASSIFICATION	4.442792833815748E-4	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9989985301284764	WITHOUT_CLASSIFICATION	0.0010014698715237105	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9997836863739225	WITHOUT_CLASSIFICATION	2.16313626077568E-4	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9998500489288226	WITHOUT_CLASSIFICATION	1.499510711774333E-4	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9998500489288226	WITHOUT_CLASSIFICATION	1.499510711774333E-4	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9973762428054318	WITHOUT_CLASSIFICATION	0.002623757194568239	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9996742872377442	WITHOUT_CLASSIFICATION	3.2571276225579974E-4	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999802672002297	WITHOUT_CLASSIFICATION	1.9732799770254007E-5	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9998753640722078	WITHOUT_CLASSIFICATION	1.2463592779226468E-4	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9990644371783891	WITHOUT_CLASSIFICATION	9.355628216107753E-4	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9997451743667044	WITHOUT_CLASSIFICATION	2.548256332956663E-4	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999790059072301	WITHOUT_CLASSIFICATION	2.0994092769889324E-5	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9995810067291896	WITHOUT_CLASSIFICATION	4.189932708103012E-4	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9998929983299342	WITHOUT_CLASSIFICATION	1.0700167006589895E-4	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.999990150679854	WITHOUT_CLASSIFICATION	9.849320145995951E-6	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9999086296672562	WITHOUT_CLASSIFICATION	9.137033274374273E-5	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9999887528546473	WITHOUT_CLASSIFICATION	1.1247145352738378E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9999699178396219	WITHOUT_CLASSIFICATION	3.0082160378084586E-5	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9999214896270121	WITHOUT_CLASSIFICATION	7.851037298778685E-5	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999924501728364	WITHOUT_CLASSIFICATION	7.549827163525015E-6	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999525034551352	WITHOUT_CLASSIFICATION	4.749654486478887E-5	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9997560388960136	WITHOUT_CLASSIFICATION	2.4396110398630647E-4	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999960275669665	WITHOUT_CLASSIFICATION	3.972433033567538E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999944183777092	WITHOUT_CLASSIFICATION	5.581622290874275E-6	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999916281654775	WITHOUT_CLASSIFICATION	8.371834522576965E-6	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9997774372640655	WITHOUT_CLASSIFICATION	2.22562735934417E-4	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9998508471228607	WITHOUT_CLASSIFICATION	1.4915287713936748E-4	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9998508471228607	WITHOUT_CLASSIFICATION	1.4915287713936748E-4	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9997174028652854	WITHOUT_CLASSIFICATION	2.825971347145407E-4	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999971853980136	WITHOUT_CLASSIFICATION	2.8146019863016385E-6	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9997058113770487	WITHOUT_CLASSIFICATION	2.9418862295129837E-4	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999927515927531	WITHOUT_CLASSIFICATION	7.248407246873945E-6	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999214377755894	WITHOUT_CLASSIFICATION	7.856222441058366E-5	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9999969453876166	WITHOUT_CLASSIFICATION	3.054612383405471E-6	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999934492504697	WITHOUT_CLASSIFICATION	6.550749530288164E-6	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999708907022355	WITHOUT_CLASSIFICATION	2.9109297764522334E-5	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9994379230308889	WITHOUT_CLASSIFICATION	5.620769691112344E-4	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9998157382043147	WITHOUT_CLASSIFICATION	1.8426179568525164E-4	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9999949174719953	WITHOUT_CLASSIFICATION	5.082528004667597E-6	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9998941046587263	WITHOUT_CLASSIFICATION	1.0589534127371109E-4	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999929408617161	WITHOUT_CLASSIFICATION	7.059138283944199E-6	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9996839470235859	WITHOUT_CLASSIFICATION	3.1605297641411123E-4	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.999697158861903	WITHOUT_CLASSIFICATION	3.028411380969698E-4	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9999770648312312	WITHOUT_CLASSIFICATION	2.293516876885556E-5	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9998328388054717	WITHOUT_CLASSIFICATION	1.6716119452830984E-4	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999587975848245	WITHOUT_CLASSIFICATION	4.120241517557386E-5	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9975727516642766	WITHOUT_CLASSIFICATION	0.0024272483357233657	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9999945199295922	WITHOUT_CLASSIFICATION	5.480070407769934E-6	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9998329154161195	WITHOUT_CLASSIFICATION	1.670845838804161E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999962062808463	WITHOUT_CLASSIFICATION	3.7937191537658564E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999962062808463	WITHOUT_CLASSIFICATION	3.7937191537658564E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999962062808463	WITHOUT_CLASSIFICATION	3.7937191537658564E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999962062808463	WITHOUT_CLASSIFICATION	3.7937191537658564E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999962062808463	WITHOUT_CLASSIFICATION	3.7937191537658564E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999962062808463	WITHOUT_CLASSIFICATION	3.7937191537658564E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9999130287557618	WITHOUT_CLASSIFICATION	8.69712442381668E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999133573660607	WITHOUT_CLASSIFICATION	8.664263393942284E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999984126375992	WITHOUT_CLASSIFICATION	1.5873624007951202E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999984126375992	WITHOUT_CLASSIFICATION	1.5873624007951202E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999984126375992	WITHOUT_CLASSIFICATION	1.5873624007951202E-5	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999606368843095	WITHOUT_CLASSIFICATION	3.9363115690611756E-5	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999583274629721	WITHOUT_CLASSIFICATION	4.167253702781471E-5	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9995452653888937	WITHOUT_CLASSIFICATION	4.5473461110631707E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9992452841294256	WITHOUT_CLASSIFICATION	7.547158705745142E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9992452841294256	WITHOUT_CLASSIFICATION	7.547158705745142E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999812982384322	WITHOUT_CLASSIFICATION	1.8701761567842005E-5	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9996222275971227	WITHOUT_CLASSIFICATION	3.7777240287732803E-4	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.999993238005242	WITHOUT_CLASSIFICATION	6.761994757994161E-6	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9962066838294122	WITHOUT_CLASSIFICATION	0.0037933161705878816	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9993970726979138	WITHOUT_CLASSIFICATION	6.029273020862252E-4	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999659463647701	WITHOUT_CLASSIFICATION	3.4053635229882795E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999659463647701	WITHOUT_CLASSIFICATION	3.4053635229882795E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999659463647701	WITHOUT_CLASSIFICATION	3.4053635229882795E-5	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9999559013656679	WITHOUT_CLASSIFICATION	4.409863433207558E-5	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998543155662896	WITHOUT_CLASSIFICATION	1.4568443371043812E-4	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9999509018438737	WITHOUT_CLASSIFICATION	4.9098156126329485E-5	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999999900269544	WITHOUT_CLASSIFICATION	9.973045632056504E-9	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9983698773214539	WITHOUT_CLASSIFICATION	0.0016301226785462163	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9975401921004511	WITHOUT_CLASSIFICATION	0.0024598078995489055	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9975401921004511	WITHOUT_CLASSIFICATION	0.0024598078995489055	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999927861679239	WITHOUT_CLASSIFICATION	7.21383207621589E-6	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9994982199164402	WITHOUT_CLASSIFICATION	5.017800835598246E-4	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9987827872149918	WITHOUT_CLASSIFICATION	0.001217212785008243	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.999304615062515	WITHOUT_CLASSIFICATION	6.953849374850778E-4	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9992813617572646	WITHOUT_CLASSIFICATION	7.186382427354789E-4	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.999589921383529	WITHOUT_CLASSIFICATION	4.1007861647107446E-4	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9998973278592052	WITHOUT_CLASSIFICATION	1.0267214079486185E-4	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9996540357803485	WITHOUT_CLASSIFICATION	3.4596421965153105E-4	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9999806559187895	WITHOUT_CLASSIFICATION	1.9344081210412652E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999777991632233	WITHOUT_CLASSIFICATION	2.2200836776726944E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999777991632233	WITHOUT_CLASSIFICATION	2.2200836776726944E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999777991632233	WITHOUT_CLASSIFICATION	2.2200836776726944E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999777991632233	WITHOUT_CLASSIFICATION	2.2200836776726944E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999777991632233	WITHOUT_CLASSIFICATION	2.2200836776726944E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9973812226145597	WITHOUT_CLASSIFICATION	0.002618777385440235	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9973812226145597	WITHOUT_CLASSIFICATION	0.002618777385440235	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9973812226145597	WITHOUT_CLASSIFICATION	0.002618777385440235	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9973812226145597	WITHOUT_CLASSIFICATION	0.002618777385440235	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9996346205952356	WITHOUT_CLASSIFICATION	3.653794047645308E-4	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.999925568423502	WITHOUT_CLASSIFICATION	7.443157649799509E-5	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9046339844647912	DEFECT	0.09536601553520893	WITHOUT_CLASSIFICATION
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9997609675269247	WITHOUT_CLASSIFICATION	2.3903247307542584E-4	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9999440746775036	WITHOUT_CLASSIFICATION	5.592532249656181E-5	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9998904379921851	WITHOUT_CLASSIFICATION	1.095620078147997E-4	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9989254587942447	WITHOUT_CLASSIFICATION	0.0010745412057554297	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9997269605358826	WITHOUT_CLASSIFICATION	2.7303946411740254E-4	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999902701750795	WITHOUT_CLASSIFICATION	9.729824920611601E-6	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999671394903102	WITHOUT_CLASSIFICATION	3.286050968973843E-5	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9997785513012741	WITHOUT_CLASSIFICATION	2.2144869872583065E-4	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999422157151452	WITHOUT_CLASSIFICATION	5.778428485494106E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9998590693302499	WITHOUT_CLASSIFICATION	1.4093066975020548E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999155493580232	WITHOUT_CLASSIFICATION	8.445064197674212E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999155493580232	WITHOUT_CLASSIFICATION	8.445064197674212E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999155493580232	WITHOUT_CLASSIFICATION	8.445064197674212E-5	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9998792536286051	WITHOUT_CLASSIFICATION	1.2074637139491681E-4	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9998792536286051	WITHOUT_CLASSIFICATION	1.2074637139491681E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999614625297204	WITHOUT_CLASSIFICATION	3.8537470279601394E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999949419772242	WITHOUT_CLASSIFICATION	5.058022775852464E-6	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999695662867766	WITHOUT_CLASSIFICATION	3.0433713223364376E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999695662867766	WITHOUT_CLASSIFICATION	3.0433713223364376E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999695662867766	WITHOUT_CLASSIFICATION	3.0433713223364376E-5	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.9999291623560668	WITHOUT_CLASSIFICATION	7.083764393315854E-5	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9997284224989721	WITHOUT_CLASSIFICATION	2.7157750102793025E-4	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9997567549027666	WITHOUT_CLASSIFICATION	2.4324509723331123E-4	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999833780056319	WITHOUT_CLASSIFICATION	1.662199436810483E-5	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.8642448838830732	WITHOUT_CLASSIFICATION	0.13575511611692687	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9998695940906608	WITHOUT_CLASSIFICATION	1.304059093392202E-4	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9995931505855115	WITHOUT_CLASSIFICATION	4.0684941448860325E-4	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9999894645687677	WITHOUT_CLASSIFICATION	1.0535431232400488E-5	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9994641651160209	WITHOUT_CLASSIFICATION	5.358348839792119E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9996952033457521	WITHOUT_CLASSIFICATION	3.0479665424782847E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.7743853693870539	WITHOUT_CLASSIFICATION	0.22561463061294604	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9997375457778344	WITHOUT_CLASSIFICATION	2.624542221656781E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9994916378966155	WITHOUT_CLASSIFICATION	5.083621033844175E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9994916378966155	WITHOUT_CLASSIFICATION	5.083621033844175E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9994916378966155	WITHOUT_CLASSIFICATION	5.083621033844175E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9994916378966155	WITHOUT_CLASSIFICATION	5.083621033844175E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9994916378966155	WITHOUT_CLASSIFICATION	5.083621033844175E-4	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9999393683391844	WITHOUT_CLASSIFICATION	6.063166081555585E-5	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9999202934924156	WITHOUT_CLASSIFICATION	7.970650758447295E-5	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.999772808816217	WITHOUT_CLASSIFICATION	2.2719118378306091E-4	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.999997234183789	WITHOUT_CLASSIFICATION	2.765816210968244E-6	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999604835004803	WITHOUT_CLASSIFICATION	3.951649951973403E-5	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9999708534645914	WITHOUT_CLASSIFICATION	2.914653540870364E-5	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9996199291658121	WITHOUT_CLASSIFICATION	3.8007083418790775E-4	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9999167747921537	WITHOUT_CLASSIFICATION	8.322520784636271E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9996981661803678	WITHOUT_CLASSIFICATION	3.018338196321801E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9996981661803678	WITHOUT_CLASSIFICATION	3.018338196321801E-4	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999971321724979	WITHOUT_CLASSIFICATION	2.867827502087869E-6	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9994325940457334	WITHOUT_CLASSIFICATION	5.674059542666411E-4	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999603307378838	WITHOUT_CLASSIFICATION	3.966926211622159E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9999603307378838	WITHOUT_CLASSIFICATION	3.966926211622159E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999485230363466	WITHOUT_CLASSIFICATION	5.1476963653438946E-5	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9991639024952257	WITHOUT_CLASSIFICATION	8.360975047741957E-4	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999418970885658	WITHOUT_CLASSIFICATION	5.810291143420678E-5	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.999550793274729	WITHOUT_CLASSIFICATION	4.492067252711674E-4	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9999301869010268	WITHOUT_CLASSIFICATION	6.981309897317937E-5	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999633879174219	WITHOUT_CLASSIFICATION	3.6612082578097404E-5	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9998485821969537	WITHOUT_CLASSIFICATION	1.514178030463881E-4	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9998564404472096	WITHOUT_CLASSIFICATION	1.4355955279033342E-4	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9995743854575458	WITHOUT_CLASSIFICATION	4.2561454245424276E-4	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999946777192277	WITHOUT_CLASSIFICATION	5.322280772227611E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999946800869532	WITHOUT_CLASSIFICATION	5.319913046790839E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999946800869532	WITHOUT_CLASSIFICATION	5.319913046790839E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999946800869532	WITHOUT_CLASSIFICATION	5.319913046790839E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.999946800869532	WITHOUT_CLASSIFICATION	5.319913046790839E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9994822180641543	WITHOUT_CLASSIFICATION	5.177819358457499E-4	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9997809216689313	WITHOUT_CLASSIFICATION	2.19078331068789E-4	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999501130555165	WITHOUT_CLASSIFICATION	4.988694448352619E-5	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9999813910553087	WITHOUT_CLASSIFICATION	1.8608944691285002E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999256591454755	WITHOUT_CLASSIFICATION	7.434085452452735E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999256591454755	WITHOUT_CLASSIFICATION	7.434085452452735E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999256591454755	WITHOUT_CLASSIFICATION	7.434085452452735E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999256591454755	WITHOUT_CLASSIFICATION	7.434085452452735E-5	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9730630635341934	WITHOUT_CLASSIFICATION	0.02693693646580669	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9999863277391879	WITHOUT_CLASSIFICATION	1.3672260811987627E-5	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9999098092205335	WITHOUT_CLASSIFICATION	9.019077946636614E-5	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9998534383364578	WITHOUT_CLASSIFICATION	1.4656166354223995E-4	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.99543889650814	WITHOUT_CLASSIFICATION	0.0045611034918600106	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9987224568069992	WITHOUT_CLASSIFICATION	0.001277543193000784	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999881927762155	WITHOUT_CLASSIFICATION	1.1807223784483525E-5	DEFECT
//default	WITHOUT_CLASSIFICATION	0.99970550503304	WITHOUT_CLASSIFICATION	2.944949669599944E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.99970550503304	WITHOUT_CLASSIFICATION	2.944949669599944E-4	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.999954433881257	WITHOUT_CLASSIFICATION	4.556611874293637E-5	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9997642278293124	WITHOUT_CLASSIFICATION	2.357721706875452E-4	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9984702965944005	WITHOUT_CLASSIFICATION	0.0015297034055994612	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9999537803955593	WITHOUT_CLASSIFICATION	4.62196044406938E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9996957731369738	WITHOUT_CLASSIFICATION	3.042268630262538E-4	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9994150775908915	WITHOUT_CLASSIFICATION	5.849224091083525E-4	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9990159496045875	WITHOUT_CLASSIFICATION	9.840503954125013E-4	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999745624322326	WITHOUT_CLASSIFICATION	2.543756776745017E-5	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.999913800010076	WITHOUT_CLASSIFICATION	8.61999899240122E-5	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999687269451079	WITHOUT_CLASSIFICATION	3.127305489215448E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9997787073996088	WITHOUT_CLASSIFICATION	2.2129260039129942E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9997787073996088	WITHOUT_CLASSIFICATION	2.2129260039129942E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9997787073996088	WITHOUT_CLASSIFICATION	2.2129260039129942E-4	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999976924486218	WITHOUT_CLASSIFICATION	2.307551378221493E-6	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999345606227721	WITHOUT_CLASSIFICATION	6.543937722791256E-5	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999991611737994	WITHOUT_CLASSIFICATION	8.38826200630402E-7	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999485733004222	WITHOUT_CLASSIFICATION	5.1426699577737196E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9999560557263433	WITHOUT_CLASSIFICATION	4.39442736567132E-5	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.999971815952621	WITHOUT_CLASSIFICATION	2.8184047378968417E-5	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.999778900411206	WITHOUT_CLASSIFICATION	2.2109958879401964E-4	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9997868228650679	WITHOUT_CLASSIFICATION	2.1317713493205725E-4	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9999195891707949	WITHOUT_CLASSIFICATION	8.04108292051474E-5	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9998711876910716	WITHOUT_CLASSIFICATION	1.288123089284067E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.999983830737953	WITHOUT_CLASSIFICATION	1.616926204689213E-5	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9997597370480577	WITHOUT_CLASSIFICATION	2.4026295194238818E-4	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.999787693726137	WITHOUT_CLASSIFICATION	2.1230627386298087E-4	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999080330781172	WITHOUT_CLASSIFICATION	9.19669218828232E-5	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9999306655051837	WITHOUT_CLASSIFICATION	6.933449481626532E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999327154306484	WITHOUT_CLASSIFICATION	6.728456935154302E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999327154306484	WITHOUT_CLASSIFICATION	6.728456935154302E-5	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9999371746916097	WITHOUT_CLASSIFICATION	6.282530839034121E-5	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999980440574431	WITHOUT_CLASSIFICATION	1.9559425568743226E-6	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9763414994446781	WITHOUT_CLASSIFICATION	0.023658500555321836	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.999905652154132	WITHOUT_CLASSIFICATION	9.434784586796359E-5	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.999983034621919	WITHOUT_CLASSIFICATION	1.6965378081130057E-5	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9998732247910703	WITHOUT_CLASSIFICATION	1.2677520892979082E-4	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999578452366742	WITHOUT_CLASSIFICATION	4.2154763325713174E-5	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9998392858323123	WITHOUT_CLASSIFICATION	1.6071416768766942E-4	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9993988489759394	WITHOUT_CLASSIFICATION	6.011510240605297E-4	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999986817713726	WITHOUT_CLASSIFICATION	1.3182286273949436E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9997787073996088	WITHOUT_CLASSIFICATION	2.2129260039129942E-4	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999952831702008	WITHOUT_CLASSIFICATION	4.716829799208831E-6	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9998759486539268	WITHOUT_CLASSIFICATION	1.2405134607315299E-4	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999984269842395	WITHOUT_CLASSIFICATION	1.573015760559132E-6	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999877869059279	WITHOUT_CLASSIFICATION	1.2213094072081638E-5	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999029112425922	WITHOUT_CLASSIFICATION	9.708875740771663E-5	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999801612117935	WITHOUT_CLASSIFICATION	1.9838788206472935E-5	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9999846868014018	WITHOUT_CLASSIFICATION	1.5313198598161266E-5	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9998816624974718	WITHOUT_CLASSIFICATION	1.1833750252830695E-4	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999829438684433	WITHOUT_CLASSIFICATION	1.7056131556639918E-5	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999951876638733	WITHOUT_CLASSIFICATION	4.812336126685438E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.999962911439316	WITHOUT_CLASSIFICATION	3.708856068386383E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.9999980517488133	WITHOUT_CLASSIFICATION	1.9482511867546397E-6	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999955814807978	WITHOUT_CLASSIFICATION	4.418519202193483E-6	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999619633249411	WITHOUT_CLASSIFICATION	3.8036675058775345E-5	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.999957761945882	WITHOUT_CLASSIFICATION	4.223805411791719E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999999810925688	WITHOUT_CLASSIFICATION	1.8907431232665948E-8	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9998046887420953	WITHOUT_CLASSIFICATION	1.9531125790470976E-4	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9998888968556544	WITHOUT_CLASSIFICATION	1.111031443456468E-4	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999951997329332	WITHOUT_CLASSIFICATION	4.800267066771194E-6	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999417728734342	WITHOUT_CLASSIFICATION	5.8227126565759795E-5	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9999979017158506	WITHOUT_CLASSIFICATION	2.098284149413376E-6	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999520536326231	WITHOUT_CLASSIFICATION	4.794636737701351E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999520536326231	WITHOUT_CLASSIFICATION	4.794636737701351E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999520536326231	WITHOUT_CLASSIFICATION	4.794636737701351E-5	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999996134199738	WITHOUT_CLASSIFICATION	3.86580026179633E-7	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9999363541845429	WITHOUT_CLASSIFICATION	6.364581545711692E-5	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9999368327463168	WITHOUT_CLASSIFICATION	6.316725368315867E-5	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999961302134945	WITHOUT_CLASSIFICATION	3.869786505458544E-6	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.999581729467345	WITHOUT_CLASSIFICATION	4.1827053265500885E-4	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.981017545556673	WITHOUT_CLASSIFICATION	0.018982454443326992	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.999997074112125	WITHOUT_CLASSIFICATION	2.9258878750396064E-6	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999757124980182	WITHOUT_CLASSIFICATION	2.4287501981786077E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999433727172926	WITHOUT_CLASSIFICATION	5.66272827074636E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999433727172926	WITHOUT_CLASSIFICATION	5.66272827074636E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999433727172926	WITHOUT_CLASSIFICATION	5.66272827074636E-5	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999729371729785	WITHOUT_CLASSIFICATION	2.706282702146954E-5	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.999997956133069	WITHOUT_CLASSIFICATION	2.043866930990504E-6	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.999999663842959	WITHOUT_CLASSIFICATION	3.361570409803557E-7	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999506344115621	WITHOUT_CLASSIFICATION	4.9365588437859765E-5	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9987164858264012	WITHOUT_CLASSIFICATION	0.0012835141735988214	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9959304280931099	WITHOUT_CLASSIFICATION	0.0040695719068901326	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999851284329784	WITHOUT_CLASSIFICATION	1.487156702162666E-5	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9997415972983289	WITHOUT_CLASSIFICATION	2.5840270167117204E-4	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9998759486539268	WITHOUT_CLASSIFICATION	1.2405134607315299E-4	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9998874919112968	WITHOUT_CLASSIFICATION	1.1250808870324135E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999916281654775	WITHOUT_CLASSIFICATION	8.371834522576965E-6	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9999916281654775	WITHOUT_CLASSIFICATION	8.371834522576965E-6	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999972887604979	WITHOUT_CLASSIFICATION	2.7112395022207405E-6	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9982640485080453	WITHOUT_CLASSIFICATION	0.0017359514919546872	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9997797831501829	WITHOUT_CLASSIFICATION	2.2021684981703206E-4	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9999429638101982	WITHOUT_CLASSIFICATION	5.7036189801834305E-5	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999760384947489	WITHOUT_CLASSIFICATION	2.3961505251173625E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9997787073996088	WITHOUT_CLASSIFICATION	2.2129260039129942E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9997787073996088	WITHOUT_CLASSIFICATION	2.2129260039129942E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999709366484043	WITHOUT_CLASSIFICATION	2.906335159565331E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999709366484043	WITHOUT_CLASSIFICATION	2.906335159565331E-5	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998576943246118	WITHOUT_CLASSIFICATION	1.423056753882068E-4	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9999991564302979	WITHOUT_CLASSIFICATION	8.435697021879559E-7	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9996563483827798	WITHOUT_CLASSIFICATION	3.436516172201173E-4	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9999507473512733	WITHOUT_CLASSIFICATION	4.9252648726586795E-5	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9999994464578859	WITHOUT_CLASSIFICATION	5.535421142543204E-7	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999944761876612	WITHOUT_CLASSIFICATION	5.523812338835274E-6	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999862607732959	WITHOUT_CLASSIFICATION	1.3739226704053459E-5	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9978232588982495	WITHOUT_CLASSIFICATION	0.0021767411017505154	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.999952226178667	WITHOUT_CLASSIFICATION	4.7773821332942764E-5	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999627290681254	WITHOUT_CLASSIFICATION	3.7270931874485076E-5	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9999208398179354	WITHOUT_CLASSIFICATION	7.916018206464054E-5	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9999048385962137	WITHOUT_CLASSIFICATION	9.516140378621053E-5	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999738686153039	WITHOUT_CLASSIFICATION	2.6131384696034178E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9998565963356412	WITHOUT_CLASSIFICATION	1.434036643588858E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9998565963356412	WITHOUT_CLASSIFICATION	1.434036643588858E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9998565963356412	WITHOUT_CLASSIFICATION	1.434036643588858E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9998565963356412	WITHOUT_CLASSIFICATION	1.434036643588858E-4	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9992892748050174	WITHOUT_CLASSIFICATION	7.107251949826331E-4	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.999956120247364	WITHOUT_CLASSIFICATION	4.387975263586106E-5	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9985303161954446	WITHOUT_CLASSIFICATION	0.0014696838045553694	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9998909776474773	WITHOUT_CLASSIFICATION	1.0902235252282042E-4	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9997835756348488	WITHOUT_CLASSIFICATION	2.1642436515128532E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9997787073996088	WITHOUT_CLASSIFICATION	2.2129260039129942E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9997787073996088	WITHOUT_CLASSIFICATION	2.2129260039129942E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9997787073996088	WITHOUT_CLASSIFICATION	2.2129260039129942E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9997787073996088	WITHOUT_CLASSIFICATION	2.2129260039129942E-4	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9994736290558351	WITHOUT_CLASSIFICATION	5.263709441648093E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9998576943246118	WITHOUT_CLASSIFICATION	1.423056753882068E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999943679880411	WITHOUT_CLASSIFICATION	5.6320119589036275E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999432258615234	WITHOUT_CLASSIFICATION	5.677413847646902E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999432258615234	WITHOUT_CLASSIFICATION	5.677413847646902E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999432258615234	WITHOUT_CLASSIFICATION	5.677413847646902E-5	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9997515093499318	WITHOUT_CLASSIFICATION	2.4849065006815266E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9999074849478978	WITHOUT_CLASSIFICATION	9.251505210205245E-5	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9998532023914325	WITHOUT_CLASSIFICATION	1.467976085674971E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999709366484043	WITHOUT_CLASSIFICATION	2.906335159565331E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999709366484043	WITHOUT_CLASSIFICATION	2.906335159565331E-5	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9998041439594719	WITHOUT_CLASSIFICATION	1.9585604052819444E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9997515093499318	WITHOUT_CLASSIFICATION	2.4849065006815266E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9999194308728079	WITHOUT_CLASSIFICATION	8.05691271920697E-5	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999997587273833	WITHOUT_CLASSIFICATION	2.4127261665175453E-7	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999146394368708	WITHOUT_CLASSIFICATION	8.536056312927395E-5	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999849840027504	WITHOUT_CLASSIFICATION	1.501599724968747E-5	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999803239717201	WITHOUT_CLASSIFICATION	1.967602827987495E-5	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9998223467622724	WITHOUT_CLASSIFICATION	1.7765323772754035E-4	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9992764761120791	WITHOUT_CLASSIFICATION	7.235238879209023E-4	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9999117681265519	WITHOUT_CLASSIFICATION	8.82318734480316E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9995186554374685	WITHOUT_CLASSIFICATION	4.813445625314644E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9995186554374685	WITHOUT_CLASSIFICATION	4.813445625314644E-4	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9999013382854108	WITHOUT_CLASSIFICATION	9.866171458918184E-5	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9999597269535327	WITHOUT_CLASSIFICATION	4.0273046467171425E-5	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999836814043411	WITHOUT_CLASSIFICATION	1.631859565884781E-5	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999999427403377	WITHOUT_CLASSIFICATION	5.725966234693274E-8	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.999990291916869	WITHOUT_CLASSIFICATION	9.708083131087408E-6	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.8734452635380929	WITHOUT_CLASSIFICATION	0.1265547364619071	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9984089135640043	WITHOUT_CLASSIFICATION	0.0015910864359957274	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9996072042275543	WITHOUT_CLASSIFICATION	3.9279577244573935E-4	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999535362157852	WITHOUT_CLASSIFICATION	4.646378421487306E-5	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9999035165773275	WITHOUT_CLASSIFICATION	9.648342267252917E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9998430813466974	WITHOUT_CLASSIFICATION	1.5691865330251986E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999943679880411	WITHOUT_CLASSIFICATION	5.6320119589036275E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999943679880411	WITHOUT_CLASSIFICATION	5.6320119589036275E-5	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9999053709265564	WITHOUT_CLASSIFICATION	9.462907344362091E-5	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9997243771205406	WITHOUT_CLASSIFICATION	2.756228794593767E-4	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999969818471499	WITHOUT_CLASSIFICATION	3.0181528500912534E-6	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999325569885104	WITHOUT_CLASSIFICATION	6.74430114896365E-5	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999588407611539	WITHOUT_CLASSIFICATION	4.115923884608165E-5	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999983485458497	WITHOUT_CLASSIFICATION	1.6514541503455675E-6	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9999791174707535	WITHOUT_CLASSIFICATION	2.0882529246402218E-5	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999779086388009	WITHOUT_CLASSIFICATION	2.209136119920779E-5	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9981679103042431	WITHOUT_CLASSIFICATION	0.0018320896957568695	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999117034778813	WITHOUT_CLASSIFICATION	8.829652211863562E-5	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999969472979656	WITHOUT_CLASSIFICATION	3.0527020344091355E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999703978972909	WITHOUT_CLASSIFICATION	2.9602102709072728E-5	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999703978972909	WITHOUT_CLASSIFICATION	2.9602102709072728E-5	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999575286076496	WITHOUT_CLASSIFICATION	4.247139235031521E-5	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999837909555273	WITHOUT_CLASSIFICATION	1.6209044472770424E-5	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9999303009787428	WITHOUT_CLASSIFICATION	6.969902125716087E-5	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999413471075301	WITHOUT_CLASSIFICATION	5.8652892469893764E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9999753751303491	WITHOUT_CLASSIFICATION	2.462486965086791E-5	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9992613780857692	WITHOUT_CLASSIFICATION	7.386219142308035E-4	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.99920124084861	WITHOUT_CLASSIFICATION	7.987591513901447E-4	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9999969453876166	WITHOUT_CLASSIFICATION	3.054612383405471E-6	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999350673692773	WITHOUT_CLASSIFICATION	6.493263072267834E-5	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9994105785304204	WITHOUT_CLASSIFICATION	5.894214695796583E-4	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999957993410686	WITHOUT_CLASSIFICATION	4.200658931369518E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999799542431489	WITHOUT_CLASSIFICATION	2.0045756851168386E-5	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999994986303241	WITHOUT_CLASSIFICATION	5.013696758901689E-7	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9999411293276115	WITHOUT_CLASSIFICATION	5.8870672388480815E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9994736290558351	WITHOUT_CLASSIFICATION	5.263709441648093E-4	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.7450559542678342	DEFECT	0.25494404573216567	WITHOUT_CLASSIFICATION
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9956550630509731	WITHOUT_CLASSIFICATION	0.004344936949026861	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9956550630509731	WITHOUT_CLASSIFICATION	0.004344936949026861	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9956550630509731	WITHOUT_CLASSIFICATION	0.004344936949026861	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999759686896097	WITHOUT_CLASSIFICATION	2.4031310390328675E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999759686896097	WITHOUT_CLASSIFICATION	2.4031310390328675E-5	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999998967795823	WITHOUT_CLASSIFICATION	1.0322041755657256E-7	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9999565569021343	DEFECT	4.344309786571657E-5	WITHOUT_CLASSIFICATION
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999912556633288	WITHOUT_CLASSIFICATION	8.74433667110884E-6	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999666259534448	WITHOUT_CLASSIFICATION	3.337404655532549E-5	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.999596208539849	WITHOUT_CLASSIFICATION	4.037914601510642E-4	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999599299990969	WITHOUT_CLASSIFICATION	4.007000090315387E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9994736290558351	WITHOUT_CLASSIFICATION	5.263709441648093E-4	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999753529545868	WITHOUT_CLASSIFICATION	2.464704541312632E-5	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.999885223910639	WITHOUT_CLASSIFICATION	1.1477608936087929E-4	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9998896282583759	WITHOUT_CLASSIFICATION	1.10371741624153E-4	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9999633631727771	WITHOUT_CLASSIFICATION	3.663682722285287E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999540609743718	WITHOUT_CLASSIFICATION	4.593902562810509E-5	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9999818635442629	WITHOUT_CLASSIFICATION	1.813645573706346E-5	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9991039882106637	WITHOUT_CLASSIFICATION	8.960117893362823E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999711059424446	WITHOUT_CLASSIFICATION	2.8894057555248387E-5	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9996164470004291	WITHOUT_CLASSIFICATION	3.835529995708742E-4	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999901003211139	WITHOUT_CLASSIFICATION	9.899678886151113E-6	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999336353491939	WITHOUT_CLASSIFICATION	6.636465080614216E-5	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9998958725597413	WITHOUT_CLASSIFICATION	1.0412744025860763E-4	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9998998404059888	WITHOUT_CLASSIFICATION	1.0015959401129325E-4	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999836202382197	WITHOUT_CLASSIFICATION	1.63797617802745E-5	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9983371798274779	WITHOUT_CLASSIFICATION	0.0016628201725220782	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999988577722007	WITHOUT_CLASSIFICATION	1.1422277993129115E-6	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999037178569411	WITHOUT_CLASSIFICATION	9.62821430588786E-5	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999183760908741	WITHOUT_CLASSIFICATION	8.162390912600889E-5	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9999183760908741	WITHOUT_CLASSIFICATION	8.162390912600889E-5	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9988012462215332	WITHOUT_CLASSIFICATION	0.0011987537784668406	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999874314783466	WITHOUT_CLASSIFICATION	1.2568521653490146E-5	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999907476221794	WITHOUT_CLASSIFICATION	9.25237782065483E-6	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9126900349702673	WITHOUT_CLASSIFICATION	0.08730996502973265	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9775427710460352	WITHOUT_CLASSIFICATION	0.022457228953964813	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9995611703141009	WITHOUT_CLASSIFICATION	4.388296858992328E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9995611703141009	WITHOUT_CLASSIFICATION	4.388296858992328E-4	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9999395023011831	WITHOUT_CLASSIFICATION	6.049769881695453E-5	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9999895226274161	WITHOUT_CLASSIFICATION	1.0477372583890469E-5	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.998966742177835	WITHOUT_CLASSIFICATION	0.0010332578221649389	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.998966742177835	WITHOUT_CLASSIFICATION	0.0010332578221649389	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999809788796042	WITHOUT_CLASSIFICATION	1.902112039567202E-5	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.99997405823673	WITHOUT_CLASSIFICATION	2.5941763269938147E-5	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9961883940215112	WITHOUT_CLASSIFICATION	0.003811605978488801	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999977133959064	WITHOUT_CLASSIFICATION	2.2866040935950224E-5	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9983977633417993	WITHOUT_CLASSIFICATION	0.001602236658200692	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999538802577138	WITHOUT_CLASSIFICATION	4.611974228616621E-5	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9998720020237345	WITHOUT_CLASSIFICATION	1.279979762655297E-4	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9997812597197029	WITHOUT_CLASSIFICATION	2.1874028029715263E-4	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9999741024773426	WITHOUT_CLASSIFICATION	2.5897522657396474E-5	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999698894840325	WITHOUT_CLASSIFICATION	3.0110515967440324E-5	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9985497785259594	WITHOUT_CLASSIFICATION	0.0014502214740406104	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9427293681397593	WITHOUT_CLASSIFICATION	0.057270631860240846	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9999674404232958	WITHOUT_CLASSIFICATION	3.2559576704172885E-5	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999857821531478	WITHOUT_CLASSIFICATION	1.4217846852289726E-5	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999888935555696	WITHOUT_CLASSIFICATION	1.1106444430479674E-5	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9998802893640082	WITHOUT_CLASSIFICATION	1.1971063599183152E-4	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9998776147987792	WITHOUT_CLASSIFICATION	1.2238520122067847E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999089052813865	WITHOUT_CLASSIFICATION	9.109471861337703E-5	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999792719651106	WITHOUT_CLASSIFICATION	2.07280348892958E-5	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9996489131818687	WITHOUT_CLASSIFICATION	3.510868181312745E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999064362115578	WITHOUT_CLASSIFICATION	9.356378844207633E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999064362115578	WITHOUT_CLASSIFICATION	9.356378844207633E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999064362115578	WITHOUT_CLASSIFICATION	9.356378844207633E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999064362115578	WITHOUT_CLASSIFICATION	9.356378844207633E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999064362115578	WITHOUT_CLASSIFICATION	9.356378844207633E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999063148756164	WITHOUT_CLASSIFICATION	9.368512438355735E-5	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999510938482149	WITHOUT_CLASSIFICATION	4.890615178502376E-5	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999724450319704	WITHOUT_CLASSIFICATION	2.7554968029686643E-5	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9999462654825847	WITHOUT_CLASSIFICATION	5.373451741520322E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998921815560918	WITHOUT_CLASSIFICATION	1.0781844390812276E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998921815560918	WITHOUT_CLASSIFICATION	1.0781844390812276E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998921815560918	WITHOUT_CLASSIFICATION	1.0781844390812276E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998921815560918	WITHOUT_CLASSIFICATION	1.0781844390812276E-4	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9997955039398227	WITHOUT_CLASSIFICATION	2.044960601772561E-4	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.999956118570207	WITHOUT_CLASSIFICATION	4.388142979296746E-5	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9996307960277552	WITHOUT_CLASSIFICATION	3.692039722448209E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999761203013594	WITHOUT_CLASSIFICATION	2.3879698640612833E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999761203013594	WITHOUT_CLASSIFICATION	2.3879698640612833E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9985688754497863	WITHOUT_CLASSIFICATION	0.0014311245502135921	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999484706337726	WITHOUT_CLASSIFICATION	5.152936622738215E-5	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.999684136110044	WITHOUT_CLASSIFICATION	3.1586388995595083E-4	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9999108511906801	WITHOUT_CLASSIFICATION	8.914880931989527E-5	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9981553587306097	WITHOUT_CLASSIFICATION	0.0018446412693902865	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9998324580040769	WITHOUT_CLASSIFICATION	1.675419959230695E-4	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999652180408738	WITHOUT_CLASSIFICATION	3.478195912619379E-5	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999952660036154	WITHOUT_CLASSIFICATION	4.7339963845109315E-6	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999952660036154	WITHOUT_CLASSIFICATION	4.7339963845109315E-6	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9954947385201592	WITHOUT_CLASSIFICATION	0.004505261479840716	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999652784730189	WITHOUT_CLASSIFICATION	3.472152698102966E-5	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9998218207140053	WITHOUT_CLASSIFICATION	1.7817928599464638E-4	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9998505662636265	WITHOUT_CLASSIFICATION	1.4943373637367745E-4	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999863806056889	WITHOUT_CLASSIFICATION	1.3619394311040463E-5	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9999535461124478	WITHOUT_CLASSIFICATION	4.6453887552122465E-5	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.999995171313439	WITHOUT_CLASSIFICATION	4.828686561103954E-6	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9998113167801629	WITHOUT_CLASSIFICATION	1.886832198370958E-4	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9995222643624551	WITHOUT_CLASSIFICATION	4.777356375449062E-4	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9244250522448257	WITHOUT_CLASSIFICATION	0.0755749477551742	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9999843768589898	WITHOUT_CLASSIFICATION	1.5623141010255667E-5	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9912279620531479	WITHOUT_CLASSIFICATION	0.008772037946852164	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9997352109379126	WITHOUT_CLASSIFICATION	2.6478906208739076E-4	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9932143648239544	WITHOUT_CLASSIFICATION	0.006785635176045549	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.999816915836531	WITHOUT_CLASSIFICATION	1.8308416346898146E-4	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9981024302169978	WITHOUT_CLASSIFICATION	0.0018975697830020313	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999225127307065	WITHOUT_CLASSIFICATION	7.748726929345743E-5	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9985258472833765	WITHOUT_CLASSIFICATION	0.0014741527166235119	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9997523883602244	WITHOUT_CLASSIFICATION	2.476116397756217E-4	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9997876014204944	WITHOUT_CLASSIFICATION	2.1239857950565896E-4	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9998500489288226	WITHOUT_CLASSIFICATION	1.499510711774333E-4	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9998500489288226	WITHOUT_CLASSIFICATION	1.499510711774333E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998787448262737	WITHOUT_CLASSIFICATION	1.212551737262301E-4	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9811135789270585	WITHOUT_CLASSIFICATION	0.01888642107294156	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9872860864216383	WITHOUT_CLASSIFICATION	0.01271391357836166	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9285652775450475	WITHOUT_CLASSIFICATION	0.07143472245495248	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.999539115283461	WITHOUT_CLASSIFICATION	4.608847165389889E-4	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.902755463666163	WITHOUT_CLASSIFICATION	0.09724453633383695	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.5509154216603824	DEFECT	0.44908457833961757	WITHOUT_CLASSIFICATION
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9817450650540569	WITHOUT_CLASSIFICATION	0.01825493494594311	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.8875784341147396	DEFECT	0.11242156588526042	WITHOUT_CLASSIFICATION
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.5862625540258198	DEFECT	0.41373744597418016	WITHOUT_CLASSIFICATION
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9982107307090424	WITHOUT_CLASSIFICATION	0.001789269290957505	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.9864363196835502	DEFECT	0.01356368031644979	WITHOUT_CLASSIFICATION
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.8875784341147396	DEFECT	0.11242156588526042	WITHOUT_CLASSIFICATION
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.9794848492358773	DEFECT	0.020515150764122702	WITHOUT_CLASSIFICATION
