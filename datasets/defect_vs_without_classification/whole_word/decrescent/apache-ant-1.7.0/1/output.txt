/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9998914362949177	WITHOUT_CLASSIFICATION	1.0856370508226574E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9982819382290969	WITHOUT_CLASSIFICATION	0.0017180617709030618	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9997690504669238	WITHOUT_CLASSIFICATION	2.309495330763249E-4	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9997690504669238	WITHOUT_CLASSIFICATION	2.309495330763249E-4	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.999514335908454	WITHOUT_CLASSIFICATION	4.8566409154601905E-4	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9990230387803798	WITHOUT_CLASSIFICATION	9.769612196203186E-4	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9991145954105348	WITHOUT_CLASSIFICATION	8.854045894652258E-4	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9998580286385326	WITHOUT_CLASSIFICATION	1.4197136146742952E-4	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9992306717606922	WITHOUT_CLASSIFICATION	7.693282393077902E-4	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.9998903014872803	WITHOUT_CLASSIFICATION	1.096985127196662E-4	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9981489151377234	WITHOUT_CLASSIFICATION	0.0018510848622765954	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9998158505898044	WITHOUT_CLASSIFICATION	1.8414941019557454E-4	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9993819399228994	WITHOUT_CLASSIFICATION	6.180600771005752E-4	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9998485812972924	WITHOUT_CLASSIFICATION	1.5141870270769908E-4	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9978031491662787	WITHOUT_CLASSIFICATION	0.0021968508337214332	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9947566043691418	WITHOUT_CLASSIFICATION	0.005243395630858217	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9947566043691418	WITHOUT_CLASSIFICATION	0.005243395630858217	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.9995040079746248	WITHOUT_CLASSIFICATION	4.959920253752261E-4	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9997368115959393	WITHOUT_CLASSIFICATION	2.63188404060652E-4	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.9998636636662251	WITHOUT_CLASSIFICATION	1.3633633377493936E-4	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9957085288931019	WITHOUT_CLASSIFICATION	0.004291471106898123	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9998192437565884	WITHOUT_CLASSIFICATION	1.8075624341168714E-4	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.999677875519169	WITHOUT_CLASSIFICATION	3.221244808311128E-4	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.999677875519169	WITHOUT_CLASSIFICATION	3.221244808311128E-4	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.999677875519169	WITHOUT_CLASSIFICATION	3.221244808311128E-4	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.999677875519169	WITHOUT_CLASSIFICATION	3.221244808311128E-4	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.999677875519169	WITHOUT_CLASSIFICATION	3.221244808311128E-4	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9996999557952452	WITHOUT_CLASSIFICATION	3.0004420475475066E-4	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999020509430163	WITHOUT_CLASSIFICATION	9.794905698362578E-5	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9998633479584105	WITHOUT_CLASSIFICATION	1.3665204158953316E-4	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9998902591048185	WITHOUT_CLASSIFICATION	1.09740895181513E-4	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999118868976777	WITHOUT_CLASSIFICATION	8.811310232228259E-5	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9997480986109089	WITHOUT_CLASSIFICATION	2.5190138909114284E-4	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.9992804350100891	WITHOUT_CLASSIFICATION	7.195649899109011E-4	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9993526277230536	WITHOUT_CLASSIFICATION	6.473722769463985E-4	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999024520411693	WITHOUT_CLASSIFICATION	9.754795883068982E-5	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9957085288931019	WITHOUT_CLASSIFICATION	0.004291471106898123	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9997647370047251	WITHOUT_CLASSIFICATION	2.3526299527492148E-4	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9996790407666606	WITHOUT_CLASSIFICATION	3.209592333394003E-4	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.9996790407666606	WITHOUT_CLASSIFICATION	3.209592333394003E-4	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.998506514868943	WITHOUT_CLASSIFICATION	0.0014934851310570347	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9989611060445633	WITHOUT_CLASSIFICATION	0.0010388939554367084	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9997709115734674	WITHOUT_CLASSIFICATION	2.2908842653253812E-4	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9997709115734674	WITHOUT_CLASSIFICATION	2.2908842653253812E-4	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9997709115734674	WITHOUT_CLASSIFICATION	2.2908842653253812E-4	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9989299767893104	WITHOUT_CLASSIFICATION	0.0010700232106896598	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9994534447366047	WITHOUT_CLASSIFICATION	5.465552633952618E-4	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9998916783400479	WITHOUT_CLASSIFICATION	1.0832165995204574E-4	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9994323414704535	WITHOUT_CLASSIFICATION	5.676585295466059E-4	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9997516652957255	WITHOUT_CLASSIFICATION	2.483347042746202E-4	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9994606838644873	WITHOUT_CLASSIFICATION	5.393161355127504E-4	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9994606838644873	WITHOUT_CLASSIFICATION	5.393161355127504E-4	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9993696634842905	WITHOUT_CLASSIFICATION	6.303365157095234E-4	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9990461011436891	WITHOUT_CLASSIFICATION	9.538988563109457E-4	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9993282747855009	WITHOUT_CLASSIFICATION	6.717252144992205E-4	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9993282747855009	WITHOUT_CLASSIFICATION	6.717252144992205E-4	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9997279627490997	WITHOUT_CLASSIFICATION	2.720372509002947E-4	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.999824956653367	WITHOUT_CLASSIFICATION	1.7504334663301103E-4	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9999511498351171	WITHOUT_CLASSIFICATION	4.885016488281439E-5	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9998818678351403	WITHOUT_CLASSIFICATION	1.1813216485963793E-4	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9997102983693966	WITHOUT_CLASSIFICATION	2.8970163060334554E-4	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9993651380647004	WITHOUT_CLASSIFICATION	6.34861935299625E-4	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9981590544363338	WITHOUT_CLASSIFICATION	0.001840945563666231	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9986858635000443	WITHOUT_CLASSIFICATION	0.0013141364999556759	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9984470425946733	WITHOUT_CLASSIFICATION	0.0015529574053265926	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9989705965009097	WITHOUT_CLASSIFICATION	0.0010294034990903462	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9995531832872228	WITHOUT_CLASSIFICATION	4.4681671277726765E-4	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9995531832872228	WITHOUT_CLASSIFICATION	4.4681671277726765E-4	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9929782755230044	WITHOUT_CLASSIFICATION	0.007021724476995634	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9998698679968614	WITHOUT_CLASSIFICATION	1.3013200313858638E-4	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9998698679968614	WITHOUT_CLASSIFICATION	1.3013200313858638E-4	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9998698679968614	WITHOUT_CLASSIFICATION	1.3013200313858638E-4	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9998698679968614	WITHOUT_CLASSIFICATION	1.3013200313858638E-4	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.999720451027813	WITHOUT_CLASSIFICATION	2.7954897218696886E-4	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999282592376857	WITHOUT_CLASSIFICATION	7.174076231428494E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999282592376857	WITHOUT_CLASSIFICATION	7.174076231428494E-5	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9998536282603758	WITHOUT_CLASSIFICATION	1.4637173962406537E-4	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999282592376857	WITHOUT_CLASSIFICATION	7.174076231428494E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999627579453313	WITHOUT_CLASSIFICATION	3.724205466871067E-5	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9944360038882074	WITHOUT_CLASSIFICATION	0.005563996111792606	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9997338577981403	WITHOUT_CLASSIFICATION	2.661422018598149E-4	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9987619099785124	WITHOUT_CLASSIFICATION	0.001238090021487598	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9983739915626426	WITHOUT_CLASSIFICATION	0.0016260084373574053	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9944630083577686	WITHOUT_CLASSIFICATION	0.005536991642231403	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.999031456939396	WITHOUT_CLASSIFICATION	9.685430606041053E-4	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9997779634926742	WITHOUT_CLASSIFICATION	2.2203650732587527E-4	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.999731470089538	WITHOUT_CLASSIFICATION	2.685299104619522E-4	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9996363215179209	WITHOUT_CLASSIFICATION	3.636784820790284E-4	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.99954398170165	WITHOUT_CLASSIFICATION	4.560182983498884E-4	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9996672033339118	WITHOUT_CLASSIFICATION	3.3279666608825075E-4	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9995528910365828	WITHOUT_CLASSIFICATION	4.471089634170709E-4	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9997042103722465	WITHOUT_CLASSIFICATION	2.95789627753533E-4	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999693740943837	WITHOUT_CLASSIFICATION	3.062590561626216E-5	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9998666147071837	WITHOUT_CLASSIFICATION	1.333852928161965E-4	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9986149975227679	WITHOUT_CLASSIFICATION	0.0013850024772321065	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9998189939995914	WITHOUT_CLASSIFICATION	1.8100600040851588E-4	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.9994686801234355	WITHOUT_CLASSIFICATION	5.313198765645936E-4	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.9998452863732781	WITHOUT_CLASSIFICATION	1.5471362672195613E-4	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999828666420486	WITHOUT_CLASSIFICATION	1.713335795145928E-5	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9990625230747787	WITHOUT_CLASSIFICATION	9.374769252212438E-4	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9990355129325669	WITHOUT_CLASSIFICATION	9.644870674331183E-4	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.999731470089538	WITHOUT_CLASSIFICATION	2.685299104619522E-4	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9998131818548313	WITHOUT_CLASSIFICATION	1.8681814516870028E-4	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9994812115018493	WITHOUT_CLASSIFICATION	5.187884981507047E-4	DEFECT
// security	WITHOUT_CLASSIFICATION	0.9997342565675567	WITHOUT_CLASSIFICATION	2.657434324433822E-4	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9989691763174428	WITHOUT_CLASSIFICATION	0.00103082368255733	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.9998254440208552	WITHOUT_CLASSIFICATION	1.745559791448212E-4	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9997456768218203	WITHOUT_CLASSIFICATION	2.543231781797075E-4	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.9998201054014557	WITHOUT_CLASSIFICATION	1.7989459854429024E-4	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999486134835703	WITHOUT_CLASSIFICATION	5.138651642962322E-5	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9998690718689859	WITHOUT_CLASSIFICATION	1.3092813101414787E-4	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9999324995989262	WITHOUT_CLASSIFICATION	6.750040107378643E-5	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9998284729114731	WITHOUT_CLASSIFICATION	1.7152708852692091E-4	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.999911566941843	WITHOUT_CLASSIFICATION	8.843305815689788E-5	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.997493495225476	WITHOUT_CLASSIFICATION	0.002506504774523962	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9997906832887722	WITHOUT_CLASSIFICATION	2.0931671122776136E-4	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.999420617902533	WITHOUT_CLASSIFICATION	5.793820974670158E-4	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9992126423454358	WITHOUT_CLASSIFICATION	7.873576545642042E-4	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.999841629279989	WITHOUT_CLASSIFICATION	1.583707200110332E-4	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9998629174310583	WITHOUT_CLASSIFICATION	1.3708256894173515E-4	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9997719592382229	WITHOUT_CLASSIFICATION	2.2804076177703543E-4	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9992945603172644	WITHOUT_CLASSIFICATION	7.054396827355999E-4	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9997574587042524	WITHOUT_CLASSIFICATION	2.4254129574769422E-4	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9998363332623369	WITHOUT_CLASSIFICATION	1.6366673766317357E-4	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9993348769555369	WITHOUT_CLASSIFICATION	6.651230444631516E-4	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9966551993604905	WITHOUT_CLASSIFICATION	0.003344800639509476	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.9981933778593991	WITHOUT_CLASSIFICATION	0.0018066221406008696	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9996839481873939	WITHOUT_CLASSIFICATION	3.160518126060479E-4	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9990095171905212	WITHOUT_CLASSIFICATION	9.904828094787557E-4	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9995764337543239	WITHOUT_CLASSIFICATION	4.235662456761422E-4	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9997616093692682	WITHOUT_CLASSIFICATION	2.383906307318824E-4	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9992264906432098	WITHOUT_CLASSIFICATION	7.735093567901776E-4	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9997516255951449	WITHOUT_CLASSIFICATION	2.4837440485510305E-4	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9995519807563673	WITHOUT_CLASSIFICATION	4.4801924363273635E-4	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9996522774315889	WITHOUT_CLASSIFICATION	3.477225684110663E-4	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9984913215163009	WITHOUT_CLASSIFICATION	0.0015086784836991557	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999627579453313	WITHOUT_CLASSIFICATION	3.724205466871067E-5	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9997627658853901	WITHOUT_CLASSIFICATION	2.3723411460981173E-4	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9984869800394979	WITHOUT_CLASSIFICATION	0.0015130199605021906	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9990895569439099	WITHOUT_CLASSIFICATION	9.104430560900779E-4	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9855962858680164	WITHOUT_CLASSIFICATION	0.014403714131983518	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9989862841289745	WITHOUT_CLASSIFICATION	0.0010137158710255443	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9996320393944618	WITHOUT_CLASSIFICATION	3.679606055382343E-4	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.999820859371659	WITHOUT_CLASSIFICATION	1.7914062834105952E-4	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9994133144226068	WITHOUT_CLASSIFICATION	5.866855773932033E-4	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.998574409379243	WITHOUT_CLASSIFICATION	0.0014255906207569708	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.9998665273955745	WITHOUT_CLASSIFICATION	1.3347260442559674E-4	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9997861440039864	WITHOUT_CLASSIFICATION	2.1385599601359218E-4	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9989981393634121	WITHOUT_CLASSIFICATION	0.0010018606365879304	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9997154644486135	WITHOUT_CLASSIFICATION	2.845355513864367E-4	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9990186610684014	WITHOUT_CLASSIFICATION	9.81338931598605E-4	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9999367918197051	WITHOUT_CLASSIFICATION	6.320818029491162E-5	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9991075947592465	WITHOUT_CLASSIFICATION	8.924052407535741E-4	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9997274839178462	WITHOUT_CLASSIFICATION	2.7251608215390953E-4	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.999924917024835	WITHOUT_CLASSIFICATION	7.508297516498352E-5	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9995891150480546	WITHOUT_CLASSIFICATION	4.1088495194542047E-4	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9997138227648965	WITHOUT_CLASSIFICATION	2.861772351034513E-4	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999553788367349	WITHOUT_CLASSIFICATION	4.462116326504327E-5	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999553788367349	WITHOUT_CLASSIFICATION	4.462116326504327E-5	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9998052715585827	WITHOUT_CLASSIFICATION	1.9472844141732456E-4	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.999890252951659	WITHOUT_CLASSIFICATION	1.0974704834101417E-4	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9997457568910707	WITHOUT_CLASSIFICATION	2.5424310892930343E-4	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9997457568910707	WITHOUT_CLASSIFICATION	2.5424310892930343E-4	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9997400512627408	WITHOUT_CLASSIFICATION	2.5994873725919664E-4	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9938595250894834	WITHOUT_CLASSIFICATION	0.006140474910516612	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9979406926731663	WITHOUT_CLASSIFICATION	0.002059307326833665	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.9996463504798251	WITHOUT_CLASSIFICATION	3.536495201748329E-4	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.998294191966595	WITHOUT_CLASSIFICATION	0.0017058080334050355	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9990731987108975	WITHOUT_CLASSIFICATION	9.268012891026153E-4	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9733848540288506	WITHOUT_CLASSIFICATION	0.026615145971149536	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9997866845637893	WITHOUT_CLASSIFICATION	2.1331543621075683E-4	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.999761663416161	WITHOUT_CLASSIFICATION	2.383365838390828E-4	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.996768004650898	WITHOUT_CLASSIFICATION	0.0032319953491019423	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9979240899360851	WITHOUT_CLASSIFICATION	0.0020759100639149057	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9997737624821813	WITHOUT_CLASSIFICATION	2.2623751781873592E-4	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.9998580286385326	WITHOUT_CLASSIFICATION	1.4197136146742952E-4	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9992306717606922	WITHOUT_CLASSIFICATION	7.693282393077902E-4	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9995531832872228	WITHOUT_CLASSIFICATION	4.4681671277726765E-4	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9997737624821813	WITHOUT_CLASSIFICATION	2.2623751781873592E-4	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9995261292242458	WITHOUT_CLASSIFICATION	4.738707757542946E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9967744480174354	WITHOUT_CLASSIFICATION	0.003225551982564555	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9967744480174354	WITHOUT_CLASSIFICATION	0.003225551982564555	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9967744480174354	WITHOUT_CLASSIFICATION	0.003225551982564555	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9994520604150017	WITHOUT_CLASSIFICATION	5.479395849983233E-4	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9998775533667789	WITHOUT_CLASSIFICATION	1.2244663322114673E-4	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.9998740015224575	WITHOUT_CLASSIFICATION	1.259984775425752E-4	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9996098858991816	WITHOUT_CLASSIFICATION	3.901141008184315E-4	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9998548476680571	WITHOUT_CLASSIFICATION	1.4515233194292604E-4	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9997237788202851	WITHOUT_CLASSIFICATION	2.762211797148934E-4	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9995261292242458	WITHOUT_CLASSIFICATION	4.738707757542946E-4	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.999886889279452	WITHOUT_CLASSIFICATION	1.1311072054808751E-4	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9993582514794284	WITHOUT_CLASSIFICATION	6.417485205715827E-4	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9998223976131599	WITHOUT_CLASSIFICATION	1.7760238684004585E-4	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9985392940608834	WITHOUT_CLASSIFICATION	0.0014607059391165147	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9995436015754348	WITHOUT_CLASSIFICATION	4.563984245652831E-4	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9995531832872228	WITHOUT_CLASSIFICATION	4.4681671277726765E-4	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9995531832872228	WITHOUT_CLASSIFICATION	4.4681671277726765E-4	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9997866845637893	WITHOUT_CLASSIFICATION	2.1331543621075683E-4	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.999886889279452	WITHOUT_CLASSIFICATION	1.1311072054808751E-4	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9995449361768155	WITHOUT_CLASSIFICATION	4.5506382318445345E-4	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9995449361768155	WITHOUT_CLASSIFICATION	4.5506382318445345E-4	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9995449361768155	WITHOUT_CLASSIFICATION	4.5506382318445345E-4	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9997198799327406	WITHOUT_CLASSIFICATION	2.8012006725941567E-4	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9993109314826697	WITHOUT_CLASSIFICATION	6.890685173303711E-4	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.9997791768777154	WITHOUT_CLASSIFICATION	2.208231222846485E-4	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9996978436683225	WITHOUT_CLASSIFICATION	3.021563316774357E-4	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9990899785667425	WITHOUT_CLASSIFICATION	9.100214332574145E-4	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9919780020754417	WITHOUT_CLASSIFICATION	0.008021997924558278	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.99932523164994	WITHOUT_CLASSIFICATION	6.747683500600432E-4	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9996675932202205	WITHOUT_CLASSIFICATION	3.324067797794467E-4	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9996675932202205	WITHOUT_CLASSIFICATION	3.324067797794467E-4	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9996094231424334	WITHOUT_CLASSIFICATION	3.905768575665354E-4	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9995937144605294	WITHOUT_CLASSIFICATION	4.062855394706048E-4	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9990607070485501	WITHOUT_CLASSIFICATION	9.392929514499107E-4	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.999286148352421	WITHOUT_CLASSIFICATION	7.138516475789305E-4	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9996094231424334	WITHOUT_CLASSIFICATION	3.905768575665354E-4	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9976988298707968	WITHOUT_CLASSIFICATION	0.0023011701292030935	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9996094231424334	WITHOUT_CLASSIFICATION	3.905768575665354E-4	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9995937144605294	WITHOUT_CLASSIFICATION	4.062855394706048E-4	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9997505508727517	WITHOUT_CLASSIFICATION	2.4944912724835145E-4	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9991672299288075	WITHOUT_CLASSIFICATION	8.327700711925669E-4	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9990607070485501	WITHOUT_CLASSIFICATION	9.392929514499107E-4	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9997591635787582	WITHOUT_CLASSIFICATION	2.40836421241792E-4	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9997505508727517	WITHOUT_CLASSIFICATION	2.4944912724835145E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9996675932202205	WITHOUT_CLASSIFICATION	3.324067797794467E-4	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.9997591635787582	WITHOUT_CLASSIFICATION	2.40836421241792E-4	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9997758587661909	WITHOUT_CLASSIFICATION	2.2414123380912435E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9996675932202205	WITHOUT_CLASSIFICATION	3.324067797794467E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9996675932202205	WITHOUT_CLASSIFICATION	3.324067797794467E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9996675932202205	WITHOUT_CLASSIFICATION	3.324067797794467E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9996675932202205	WITHOUT_CLASSIFICATION	3.324067797794467E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9996676304496956	WITHOUT_CLASSIFICATION	3.323695503043317E-4	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9996946454540793	WITHOUT_CLASSIFICATION	3.053545459206407E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9996872093308952	WITHOUT_CLASSIFICATION	3.1279066910477784E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9996872093308952	WITHOUT_CLASSIFICATION	3.1279066910477784E-4	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9999270065120937	WITHOUT_CLASSIFICATION	7.299348790638149E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9998317378766255	WITHOUT_CLASSIFICATION	1.6826212337450863E-4	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.999286148352421	WITHOUT_CLASSIFICATION	7.138516475789305E-4	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9996811732583383	WITHOUT_CLASSIFICATION	3.188267416616318E-4	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999397653998987	WITHOUT_CLASSIFICATION	6.023460010125373E-5	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9997909059803732	WITHOUT_CLASSIFICATION	2.0909401962678718E-4	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9997909059803732	WITHOUT_CLASSIFICATION	2.0909401962678718E-4	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9997909059803732	WITHOUT_CLASSIFICATION	2.0909401962678718E-4	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.985210426930428	WITHOUT_CLASSIFICATION	0.014789573069571875	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9992660236612327	WITHOUT_CLASSIFICATION	7.339763387671552E-4	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9960292855723252	WITHOUT_CLASSIFICATION	0.0039707144276747725	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9994359538071985	WITHOUT_CLASSIFICATION	5.64046192801453E-4	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9993998235813754	WITHOUT_CLASSIFICATION	6.001764186246089E-4	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9998190245830374	WITHOUT_CLASSIFICATION	1.80975416962681E-4	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.999872342555805	WITHOUT_CLASSIFICATION	1.2765744419497438E-4	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9966592201788916	WITHOUT_CLASSIFICATION	0.003340779821108395	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9997482993276886	WITHOUT_CLASSIFICATION	2.517006723113556E-4	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9998807493413585	WITHOUT_CLASSIFICATION	1.1925065864152069E-4	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.9999775778604529	WITHOUT_CLASSIFICATION	2.2422139547059058E-5	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9997624464002814	WITHOUT_CLASSIFICATION	2.3755359971855826E-4	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.999755790117987	WITHOUT_CLASSIFICATION	2.4420988201303905E-4	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9992660236612327	WITHOUT_CLASSIFICATION	7.339763387671552E-4	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9992701487713884	WITHOUT_CLASSIFICATION	7.298512286115971E-4	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9994731356795177	WITHOUT_CLASSIFICATION	5.268643204823142E-4	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9997306739023096	WITHOUT_CLASSIFICATION	2.693260976904036E-4	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9997844693582257	WITHOUT_CLASSIFICATION	2.1553064177414884E-4	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999150353795199	WITHOUT_CLASSIFICATION	8.496462048009098E-5	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9992509163423916	WITHOUT_CLASSIFICATION	7.490836576084204E-4	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9996336915277254	WITHOUT_CLASSIFICATION	3.663084722745247E-4	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9998304138958595	WITHOUT_CLASSIFICATION	1.695861041405096E-4	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9998694902741634	WITHOUT_CLASSIFICATION	1.3050972583659778E-4	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9977715165424165	WITHOUT_CLASSIFICATION	0.0022284834575835638	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9978867909208288	WITHOUT_CLASSIFICATION	0.0021132090791711557	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9993455008233428	WITHOUT_CLASSIFICATION	6.54499176657219E-4	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.9996546048800784	WITHOUT_CLASSIFICATION	3.4539511992156635E-4	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.9996546048800784	WITHOUT_CLASSIFICATION	3.4539511992156635E-4	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9996110923380624	WITHOUT_CLASSIFICATION	3.889076619375763E-4	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9997461214878467	WITHOUT_CLASSIFICATION	2.5387851215336857E-4	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9998474284572142	WITHOUT_CLASSIFICATION	1.5257154278575506E-4	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9996342190234859	WITHOUT_CLASSIFICATION	3.657809765140785E-4	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9994675852015427	WITHOUT_CLASSIFICATION	5.324147984573524E-4	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.9998224967053891	WITHOUT_CLASSIFICATION	1.7750329461088042E-4	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9997231427502646	WITHOUT_CLASSIFICATION	2.7685724973536974E-4	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.999873565268467	WITHOUT_CLASSIFICATION	1.2643473153301814E-4	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9997698222487398	WITHOUT_CLASSIFICATION	2.3017775126021577E-4	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.9997698222487398	WITHOUT_CLASSIFICATION	2.3017775126021577E-4	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9996391978925641	WITHOUT_CLASSIFICATION	3.6080210743590557E-4	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9996391978925641	WITHOUT_CLASSIFICATION	3.6080210743590557E-4	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9998701930771308	WITHOUT_CLASSIFICATION	1.2980692286924052E-4	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9995737862147787	WITHOUT_CLASSIFICATION	4.2621378522141414E-4	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9995737862147787	WITHOUT_CLASSIFICATION	4.2621378522141414E-4	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.99977675178297	WITHOUT_CLASSIFICATION	2.2324821703005831E-4	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.99977675178297	WITHOUT_CLASSIFICATION	2.2324821703005831E-4	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999599752348378	WITHOUT_CLASSIFICATION	4.002476516218571E-5	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999188293446966	WITHOUT_CLASSIFICATION	8.117065530336878E-5	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.999746811086425	WITHOUT_CLASSIFICATION	2.531889135749223E-4	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.9997881320038299	WITHOUT_CLASSIFICATION	2.1186799617022167E-4	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9998375335383388	WITHOUT_CLASSIFICATION	1.6246646166119175E-4	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9995578754510965	WITHOUT_CLASSIFICATION	4.421245489034477E-4	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9998391736532687	WITHOUT_CLASSIFICATION	1.6082634673133227E-4	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9990057862952278	WITHOUT_CLASSIFICATION	9.942137047722164E-4	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9989229073365764	WITHOUT_CLASSIFICATION	0.0010770926634236155	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9991088509387958	WITHOUT_CLASSIFICATION	8.911490612042885E-4	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9995450053961271	WITHOUT_CLASSIFICATION	4.5499460387291745E-4	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9994187598147496	WITHOUT_CLASSIFICATION	5.812401852503824E-4	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9996051130259662	WITHOUT_CLASSIFICATION	3.948869740337822E-4	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9998504358645558	WITHOUT_CLASSIFICATION	1.4956413544417875E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9996336915277254	WITHOUT_CLASSIFICATION	3.663084722745247E-4	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9977715165424165	WITHOUT_CLASSIFICATION	0.0022284834575835638	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9998065342512026	WITHOUT_CLASSIFICATION	1.9346574879734683E-4	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9997805136167545	WITHOUT_CLASSIFICATION	2.1948638324554768E-4	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9989186472550483	WITHOUT_CLASSIFICATION	0.0010813527449516794	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9995650413614159	WITHOUT_CLASSIFICATION	4.349586385840741E-4	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9995363429551818	WITHOUT_CLASSIFICATION	4.636570448182203E-4	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.999801322428065	WITHOUT_CLASSIFICATION	1.9867757193514518E-4	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9998569556168541	WITHOUT_CLASSIFICATION	1.4304438314603548E-4	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9965108698012204	WITHOUT_CLASSIFICATION	0.0034891301987794855	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.999074995607991	WITHOUT_CLASSIFICATION	9.250043920090851E-4	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.9999785649928896	WITHOUT_CLASSIFICATION	2.1435007110454716E-5	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9993789175971989	WITHOUT_CLASSIFICATION	6.210824028011547E-4	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9991765249726632	WITHOUT_CLASSIFICATION	8.23475027336833E-4	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9996447531671804	WITHOUT_CLASSIFICATION	3.5524683281963447E-4	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9996447531671804	WITHOUT_CLASSIFICATION	3.5524683281963447E-4	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9993719100413778	WITHOUT_CLASSIFICATION	6.280899586222338E-4	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9985557909863428	WITHOUT_CLASSIFICATION	0.0014442090136570964	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9998754228462703	WITHOUT_CLASSIFICATION	1.2457715372962504E-4	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9996628419092802	WITHOUT_CLASSIFICATION	3.371580907196893E-4	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9996612138703126	WITHOUT_CLASSIFICATION	3.3878612968736956E-4	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.999160183055178	WITHOUT_CLASSIFICATION	8.398169448221278E-4	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9997407283965772	WITHOUT_CLASSIFICATION	2.592716034227483E-4	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.999696090538671	WITHOUT_CLASSIFICATION	3.039094613289351E-4	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.9993500695791454	WITHOUT_CLASSIFICATION	6.499304208545464E-4	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.99966411518552	WITHOUT_CLASSIFICATION	3.3588481447994074E-4	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9997013807289792	WITHOUT_CLASSIFICATION	2.98619271020857E-4	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9995419045363501	WITHOUT_CLASSIFICATION	4.580954636499252E-4	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9999057355307539	WITHOUT_CLASSIFICATION	9.426446924615547E-5	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.999768146790198	WITHOUT_CLASSIFICATION	2.3185320980200874E-4	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9998504750619648	WITHOUT_CLASSIFICATION	1.4952493803516945E-4	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9996999557952452	WITHOUT_CLASSIFICATION	3.0004420475475066E-4	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999020509430163	WITHOUT_CLASSIFICATION	9.794905698362578E-5	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9998633479584105	WITHOUT_CLASSIFICATION	1.3665204158953316E-4	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9998633479584105	WITHOUT_CLASSIFICATION	1.3665204158953316E-4	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999118868976777	WITHOUT_CLASSIFICATION	8.811310232228259E-5	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.9999118868976777	WITHOUT_CLASSIFICATION	8.811310232228259E-5	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9998199073908022	WITHOUT_CLASSIFICATION	1.8009260919772462E-4	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9998504358645558	WITHOUT_CLASSIFICATION	1.4956413544417875E-4	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9993311176680316	WITHOUT_CLASSIFICATION	6.688823319683666E-4	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9997815246264729	WITHOUT_CLASSIFICATION	2.1847537352711742E-4	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9993478990560389	WITHOUT_CLASSIFICATION	6.521009439610294E-4	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9880900498237554	WITHOUT_CLASSIFICATION	0.011909950176244594	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.8397029739719412	WITHOUT_CLASSIFICATION	0.16029702602805887	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9997926568693405	WITHOUT_CLASSIFICATION	2.0734313065950947E-4	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.9997926568693405	WITHOUT_CLASSIFICATION	2.0734313065950947E-4	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999741684295859	WITHOUT_CLASSIFICATION	2.583157041418152E-5	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.9997823422989394	WITHOUT_CLASSIFICATION	2.176577010606748E-4	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9992637364660015	WITHOUT_CLASSIFICATION	7.362635339985326E-4	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9992637364660015	WITHOUT_CLASSIFICATION	7.362635339985326E-4	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9997982817932032	WITHOUT_CLASSIFICATION	2.0171820679681354E-4	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9981723935171182	WITHOUT_CLASSIFICATION	0.0018276064828818006	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9998242153470331	WITHOUT_CLASSIFICATION	1.7578465296679013E-4	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9993167909249075	WITHOUT_CLASSIFICATION	6.832090750924663E-4	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9991942613071886	WITHOUT_CLASSIFICATION	8.057386928113369E-4	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9997256083683826	WITHOUT_CLASSIFICATION	2.7439163161733354E-4	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9992121844284881	WITHOUT_CLASSIFICATION	7.878155715118284E-4	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9992121844284881	WITHOUT_CLASSIFICATION	7.878155715118284E-4	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9993728406688774	WITHOUT_CLASSIFICATION	6.271593311225852E-4	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9997386968715385	WITHOUT_CLASSIFICATION	2.613031284615031E-4	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.999885208202653	WITHOUT_CLASSIFICATION	1.1479179734693066E-4	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9998409992246526	WITHOUT_CLASSIFICATION	1.5900077534739275E-4	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9997957792075189	WITHOUT_CLASSIFICATION	2.0422079248104852E-4	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9996766280701885	WITHOUT_CLASSIFICATION	3.233719298114965E-4	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9999674564688783	WITHOUT_CLASSIFICATION	3.254353112175234E-5	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9997818383280178	WITHOUT_CLASSIFICATION	2.1816167198219604E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9997115720833263	WITHOUT_CLASSIFICATION	2.884279166737837E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9997115720833263	WITHOUT_CLASSIFICATION	2.884279166737837E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9997115720833263	WITHOUT_CLASSIFICATION	2.884279166737837E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9997115720833263	WITHOUT_CLASSIFICATION	2.884279166737837E-4	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.999765345877043	WITHOUT_CLASSIFICATION	2.3465412295696792E-4	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9996793316517314	WITHOUT_CLASSIFICATION	3.206683482685338E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9996898913062552	WITHOUT_CLASSIFICATION	3.101086937447875E-4	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9997367447265386	WITHOUT_CLASSIFICATION	2.63255273461454E-4	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9997367447265386	WITHOUT_CLASSIFICATION	2.63255273461454E-4	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9996820924131039	WITHOUT_CLASSIFICATION	3.1790758689610553E-4	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9996820924131039	WITHOUT_CLASSIFICATION	3.1790758689610553E-4	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9996928743279782	WITHOUT_CLASSIFICATION	3.0712567202184453E-4	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9996999270635963	WITHOUT_CLASSIFICATION	3.000729364037719E-4	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9996635452721301	WITHOUT_CLASSIFICATION	3.364547278698473E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9987832196809291	WITHOUT_CLASSIFICATION	0.0012167803190709446	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.9996326632381881	WITHOUT_CLASSIFICATION	3.67336761811922E-4	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.999855362585348	WITHOUT_CLASSIFICATION	1.446374146518879E-4	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9997633547832798	WITHOUT_CLASSIFICATION	2.3664521672018735E-4	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.9985145616668685	WITHOUT_CLASSIFICATION	0.0014854383331315123	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.9955947481288481	WITHOUT_CLASSIFICATION	0.0044052518711519065	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9996699894131584	WITHOUT_CLASSIFICATION	3.3001058684156226E-4	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9998836402585286	WITHOUT_CLASSIFICATION	1.1635974147130612E-4	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9998627596113006	WITHOUT_CLASSIFICATION	1.3724038869942088E-4	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.9999162117253829	WITHOUT_CLASSIFICATION	8.378827461714309E-5	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999757370444372	WITHOUT_CLASSIFICATION	2.4262955562739615E-5	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9997169529251433	WITHOUT_CLASSIFICATION	2.8304707485671195E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9996075311503627	WITHOUT_CLASSIFICATION	3.9246884963730657E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9996075311503627	WITHOUT_CLASSIFICATION	3.9246884963730657E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9996075311503627	WITHOUT_CLASSIFICATION	3.9246884963730657E-4	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.999833215012921	WITHOUT_CLASSIFICATION	1.6678498707890815E-4	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9993727011369995	WITHOUT_CLASSIFICATION	6.272988630005823E-4	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9998235790926533	WITHOUT_CLASSIFICATION	1.764209073468081E-4	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9985441422009936	WITHOUT_CLASSIFICATION	0.0014558577990063334	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9993826598107027	WITHOUT_CLASSIFICATION	6.173401892972428E-4	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9997486102999662	WITHOUT_CLASSIFICATION	2.513897000338114E-4	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.9996422003945216	WITHOUT_CLASSIFICATION	3.57799605478483E-4	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9992865800926342	WITHOUT_CLASSIFICATION	7.134199073658467E-4	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9997520084774733	WITHOUT_CLASSIFICATION	2.4799152252677134E-4	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9995807016214066	WITHOUT_CLASSIFICATION	4.192983785934918E-4	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9998548956701571	WITHOUT_CLASSIFICATION	1.451043298429687E-4	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.9998111636652665	WITHOUT_CLASSIFICATION	1.8883633473357794E-4	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9998231059766717	WITHOUT_CLASSIFICATION	1.768940233283521E-4	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9996969419571319	WITHOUT_CLASSIFICATION	3.03058042868087E-4	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9998464531433681	WITHOUT_CLASSIFICATION	1.535468566318919E-4	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9998057765007966	WITHOUT_CLASSIFICATION	1.942234992033191E-4	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9994000154965087	WITHOUT_CLASSIFICATION	5.999845034912587E-4	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.999662095246016	WITHOUT_CLASSIFICATION	3.3790475398394134E-4	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9997389728981289	WITHOUT_CLASSIFICATION	2.610271018710756E-4	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9997319275508838	WITHOUT_CLASSIFICATION	2.680724491162326E-4	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9985823525626832	WITHOUT_CLASSIFICATION	0.0014176474373168233	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9992676520968756	WITHOUT_CLASSIFICATION	7.323479031243231E-4	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9997480410792919	WITHOUT_CLASSIFICATION	2.5195892070799757E-4	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9996941470748538	WITHOUT_CLASSIFICATION	3.0585292514617545E-4	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.9995041380711408	WITHOUT_CLASSIFICATION	4.958619288591889E-4	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.999891882714751	WITHOUT_CLASSIFICATION	1.0811728524901395E-4	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9998152970077175	WITHOUT_CLASSIFICATION	1.847029922823501E-4	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9998689189085366	WITHOUT_CLASSIFICATION	1.3108109146345916E-4	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999268664721667	WITHOUT_CLASSIFICATION	7.31335278332574E-5	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9994606838644873	WITHOUT_CLASSIFICATION	5.393161355127504E-4	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.999590007515209	WITHOUT_CLASSIFICATION	4.099924847909201E-4	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9997316463853222	WITHOUT_CLASSIFICATION	2.683536146778591E-4	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.99934708629378	WITHOUT_CLASSIFICATION	6.529137062199071E-4	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9996684508810889	WITHOUT_CLASSIFICATION	3.315491189110435E-4	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.999853223421288	WITHOUT_CLASSIFICATION	1.4677657871195349E-4	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.999690818530007	WITHOUT_CLASSIFICATION	3.0918146999309447E-4	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9985233237132387	WITHOUT_CLASSIFICATION	0.0014766762867612763	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9997412638706424	WITHOUT_CLASSIFICATION	2.587361293576073E-4	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9997955476558259	WITHOUT_CLASSIFICATION	2.0445234417410595E-4	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.9999289384068955	WITHOUT_CLASSIFICATION	7.106159310452342E-5	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.9980092239116711	WITHOUT_CLASSIFICATION	0.0019907760883289567	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.999771041935317	WITHOUT_CLASSIFICATION	2.289580646830844E-4	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9981452059083942	WITHOUT_CLASSIFICATION	0.0018547940916057877	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9946417884837668	WITHOUT_CLASSIFICATION	0.005358211516233153	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9997481549891151	WITHOUT_CLASSIFICATION	2.518450108850341E-4	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9954087427415359	WITHOUT_CLASSIFICATION	0.00459125725846404	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9998217487664307	WITHOUT_CLASSIFICATION	1.7825123356932928E-4	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9994598829144268	WITHOUT_CLASSIFICATION	5.401170855731177E-4	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9998502818122963	WITHOUT_CLASSIFICATION	1.4971818770374027E-4	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9998369040579724	WITHOUT_CLASSIFICATION	1.630959420275832E-4	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9996971260624398	WITHOUT_CLASSIFICATION	3.028739375601989E-4	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9987778410806807	WITHOUT_CLASSIFICATION	0.0012221589193193911	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9987017757913605	WITHOUT_CLASSIFICATION	0.0012982242086393729	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.9994747045307512	WITHOUT_CLASSIFICATION	5.252954692488349E-4	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9992345866909904	WITHOUT_CLASSIFICATION	7.6541330900961E-4	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.999784279030026	WITHOUT_CLASSIFICATION	2.1572096997392906E-4	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9995343097381774	WITHOUT_CLASSIFICATION	4.6569026182272365E-4	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9998647678584317	WITHOUT_CLASSIFICATION	1.352321415682921E-4	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9996312048480857	WITHOUT_CLASSIFICATION	3.687951519143211E-4	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9997126170224527	WITHOUT_CLASSIFICATION	2.8738297754727114E-4	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.998143386811888	WITHOUT_CLASSIFICATION	0.0018566131881120687	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9980292294465426	WITHOUT_CLASSIFICATION	0.0019707705534573643	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9997874414464498	WITHOUT_CLASSIFICATION	2.1255855355016556E-4	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9995430212630537	WITHOUT_CLASSIFICATION	4.5697873694624863E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9976700251260888	WITHOUT_CLASSIFICATION	0.0023299748739111204	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9996640012397251	WITHOUT_CLASSIFICATION	3.359987602749142E-4	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999090654307962	WITHOUT_CLASSIFICATION	9.093456920392067E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9996473967476129	WITHOUT_CLASSIFICATION	3.526032523870756E-4	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9989158366290127	WITHOUT_CLASSIFICATION	0.0010841633709871967	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.9926426630419881	WITHOUT_CLASSIFICATION	0.007357336958011834	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9997263436262944	WITHOUT_CLASSIFICATION	2.7365637370553716E-4	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9993775700730659	WITHOUT_CLASSIFICATION	6.224299269341378E-4	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9997263436262944	WITHOUT_CLASSIFICATION	2.7365637370553716E-4	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9998467159686648	WITHOUT_CLASSIFICATION	1.5328403133523286E-4	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9977790846811293	WITHOUT_CLASSIFICATION	0.002220915318870718	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.9995804558354947	WITHOUT_CLASSIFICATION	4.195441645051791E-4	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.999531529681576	WITHOUT_CLASSIFICATION	4.684703184240456E-4	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.999904067660386	WITHOUT_CLASSIFICATION	9.593233961400364E-5	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9997378111236352	WITHOUT_CLASSIFICATION	2.6218887636476077E-4	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9998384392752225	WITHOUT_CLASSIFICATION	1.615607247774273E-4	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9995846956356104	WITHOUT_CLASSIFICATION	4.153043643896768E-4	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9996798275824459	WITHOUT_CLASSIFICATION	3.2017241755409056E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9996798275824459	WITHOUT_CLASSIFICATION	3.2017241755409056E-4	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9995469766959157	WITHOUT_CLASSIFICATION	4.5302330408424627E-4	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9997263436262944	WITHOUT_CLASSIFICATION	2.7365637370553716E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9936966588873234	WITHOUT_CLASSIFICATION	0.006303341112676593	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.9999772186406037	WITHOUT_CLASSIFICATION	2.2781359396218194E-5	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9992413600317857	WITHOUT_CLASSIFICATION	7.586399682144137E-4	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.999016130531358	WITHOUT_CLASSIFICATION	9.838694686420126E-4	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9997625400424514	WITHOUT_CLASSIFICATION	2.37459957548584E-4	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9997379145652481	WITHOUT_CLASSIFICATION	2.6208543475193406E-4	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9981031925565833	WITHOUT_CLASSIFICATION	0.0018968074434167687	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.998961298604486	WITHOUT_CLASSIFICATION	0.0010387013955139917	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9995962860409997	WITHOUT_CLASSIFICATION	4.037139590002633E-4	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9973743919362064	WITHOUT_CLASSIFICATION	0.0026256080637935583	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9998389517535636	WITHOUT_CLASSIFICATION	1.6104824643631692E-4	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.999515090986397	WITHOUT_CLASSIFICATION	4.84909013603035E-4	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9993768534304596	WITHOUT_CLASSIFICATION	6.23146569540396E-4	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9982030574331187	WITHOUT_CLASSIFICATION	0.0017969425668812997	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9994927140077903	WITHOUT_CLASSIFICATION	5.072859922098061E-4	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9990490275330959	WITHOUT_CLASSIFICATION	9.50972466903984E-4	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9564760496828149	WITHOUT_CLASSIFICATION	0.04352395031718515	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9993095650782644	WITHOUT_CLASSIFICATION	6.904349217356484E-4	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9997370522177054	WITHOUT_CLASSIFICATION	2.629477822945744E-4	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9994606838644873	WITHOUT_CLASSIFICATION	5.393161355127504E-4	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9991901758274292	WITHOUT_CLASSIFICATION	8.098241725708305E-4	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.999638868400411	WITHOUT_CLASSIFICATION	3.611315995888348E-4	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9982609724697981	WITHOUT_CLASSIFICATION	0.0017390275302020131	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999203356495479	WITHOUT_CLASSIFICATION	7.966435045220057E-5	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9990935415452524	WITHOUT_CLASSIFICATION	9.064584547476871E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9997592406556765	WITHOUT_CLASSIFICATION	2.4075934432366927E-4	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9995249185706322	WITHOUT_CLASSIFICATION	4.750814293676834E-4	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9999474012112891	WITHOUT_CLASSIFICATION	5.259878871087761E-5	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9087883066581907	WITHOUT_CLASSIFICATION	0.09121169334180938	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9989680268100584	WITHOUT_CLASSIFICATION	0.0010319731899416226	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9997144152883999	WITHOUT_CLASSIFICATION	2.8558471160001814E-4	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.999687345923617	WITHOUT_CLASSIFICATION	3.1265407638308886E-4	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9990680855930106	WITHOUT_CLASSIFICATION	9.31914406989468E-4	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9998739198065273	WITHOUT_CLASSIFICATION	1.260801934726809E-4	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9997671758601703	WITHOUT_CLASSIFICATION	2.3282413982963858E-4	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.9986824911795104	WITHOUT_CLASSIFICATION	0.0013175088204897126	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.999276018725279	WITHOUT_CLASSIFICATION	7.239812747209999E-4	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9993032747681211	WITHOUT_CLASSIFICATION	6.967252318789998E-4	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9996162528761762	WITHOUT_CLASSIFICATION	3.837471238237336E-4	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9995159920123402	WITHOUT_CLASSIFICATION	4.8400798765973015E-4	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.999944610210288	WITHOUT_CLASSIFICATION	5.538978971206173E-5	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.999027223238084	WITHOUT_CLASSIFICATION	9.727767619159435E-4	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9992733073510657	WITHOUT_CLASSIFICATION	7.2669264893434E-4	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9998043508184932	WITHOUT_CLASSIFICATION	1.9564918150679253E-4	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9987307496730724	WITHOUT_CLASSIFICATION	0.0012692503269276032	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9983580418118605	WITHOUT_CLASSIFICATION	0.0016419581881395762	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9997422445863721	WITHOUT_CLASSIFICATION	2.5775541362798476E-4	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9992585571121961	WITHOUT_CLASSIFICATION	7.41442887803789E-4	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9990556165494516	WITHOUT_CLASSIFICATION	9.443834505482595E-4	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9972804044794427	WITHOUT_CLASSIFICATION	0.0027195955205574036	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.999566544302789	WITHOUT_CLASSIFICATION	4.3345569721103854E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9995876153439758	WITHOUT_CLASSIFICATION	4.123846560242521E-4	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9984228563174529	WITHOUT_CLASSIFICATION	0.001577143682547224	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.999855669841534	WITHOUT_CLASSIFICATION	1.44330158466026E-4	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9999776759430752	WITHOUT_CLASSIFICATION	2.2324056924745975E-5	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9997334072453904	WITHOUT_CLASSIFICATION	2.66592754609654E-4	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9994708431590588	WITHOUT_CLASSIFICATION	5.291568409412426E-4	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.9997295717082827	WITHOUT_CLASSIFICATION	2.704282917173256E-4	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9992748765360308	WITHOUT_CLASSIFICATION	7.251234639692025E-4	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.99795959469944	WITHOUT_CLASSIFICATION	0.0020404053005600212	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9957836888938034	WITHOUT_CLASSIFICATION	0.004216311106196588	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9998830688840622	WITHOUT_CLASSIFICATION	1.1693111593783234E-4	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.9999361787676072	WITHOUT_CLASSIFICATION	6.382123239275074E-5	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.999769336347963	WITHOUT_CLASSIFICATION	2.3066365203714513E-4	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999478407693869	WITHOUT_CLASSIFICATION	5.215923061304053E-5	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9993186979010549	WITHOUT_CLASSIFICATION	6.813020989451912E-4	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.999769336347963	WITHOUT_CLASSIFICATION	2.3066365203714513E-4	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999478407693869	WITHOUT_CLASSIFICATION	5.215923061304053E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9992424812932074	WITHOUT_CLASSIFICATION	7.57518706792537E-4	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.999122440551464	WITHOUT_CLASSIFICATION	8.775594485359921E-4	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9998116350522002	WITHOUT_CLASSIFICATION	1.883649477997936E-4	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.9997284351155955	WITHOUT_CLASSIFICATION	2.715648844044058E-4	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9999144844030053	WITHOUT_CLASSIFICATION	8.551559699471058E-5	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9997881812262309	WITHOUT_CLASSIFICATION	2.1181877376911092E-4	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9996386001979635	WITHOUT_CLASSIFICATION	3.613998020365827E-4	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.999641332088112	WITHOUT_CLASSIFICATION	3.5866791188799807E-4	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9997145066290347	WITHOUT_CLASSIFICATION	2.854933709652412E-4	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9993376307744045	WITHOUT_CLASSIFICATION	6.623692255954729E-4	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.9984357249626088	WITHOUT_CLASSIFICATION	0.0015642750373911591	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9993153089871217	WITHOUT_CLASSIFICATION	6.846910128781924E-4	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9990957876825599	WITHOUT_CLASSIFICATION	9.042123174401671E-4	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.9990452268096055	WITHOUT_CLASSIFICATION	9.547731903944312E-4	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9997694664968709	WITHOUT_CLASSIFICATION	2.305335031290826E-4	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9998546328152871	WITHOUT_CLASSIFICATION	1.4536718471295853E-4	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9992051267611826	WITHOUT_CLASSIFICATION	7.94873238817431E-4	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9998468995041131	WITHOUT_CLASSIFICATION	1.53100495886854E-4	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999090654307962	WITHOUT_CLASSIFICATION	9.093456920392067E-5	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9996963234875581	WITHOUT_CLASSIFICATION	3.0367651244183783E-4	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9975813727323629	WITHOUT_CLASSIFICATION	0.0024186272676370475	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9999053092750839	WITHOUT_CLASSIFICATION	9.469072491611188E-5	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9981741416671766	WITHOUT_CLASSIFICATION	0.0018258583328235266	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9998455624865744	WITHOUT_CLASSIFICATION	1.5443751342561528E-4	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9998098402493172	WITHOUT_CLASSIFICATION	1.9015975068288501E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9998127044791494	WITHOUT_CLASSIFICATION	1.8729552085065636E-4	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9999277237042722	WITHOUT_CLASSIFICATION	7.227629572778056E-5	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9996316799452809	WITHOUT_CLASSIFICATION	3.683200547191447E-4	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.9996786966828174	WITHOUT_CLASSIFICATION	3.2130331718258033E-4	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9996829263388017	WITHOUT_CLASSIFICATION	3.1707366119818796E-4	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9998443048389037	WITHOUT_CLASSIFICATION	1.556951610962967E-4	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.9999523058086892	WITHOUT_CLASSIFICATION	4.769419131069915E-5	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.9981798685970408	WITHOUT_CLASSIFICATION	0.0018201314029592606	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9996598970971806	WITHOUT_CLASSIFICATION	3.401029028194242E-4	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9997600481292596	WITHOUT_CLASSIFICATION	2.3995187074043946E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997241969363179	WITHOUT_CLASSIFICATION	2.75803063682136E-4	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9995802660391266	WITHOUT_CLASSIFICATION	4.197339608733492E-4	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9995802660391266	WITHOUT_CLASSIFICATION	4.197339608733492E-4	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9979973725723289	WITHOUT_CLASSIFICATION	0.002002627427671109	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9998491250828901	WITHOUT_CLASSIFICATION	1.5087491710980938E-4	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9995756806137298	WITHOUT_CLASSIFICATION	4.2431938627026034E-4	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9992207027226699	WITHOUT_CLASSIFICATION	7.792972773299666E-4	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.999674456930398	WITHOUT_CLASSIFICATION	3.2554306960192765E-4	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9797643326788165	WITHOUT_CLASSIFICATION	0.020235667321183523	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9998537024040375	WITHOUT_CLASSIFICATION	1.4629759596259195E-4	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.999840890055577	WITHOUT_CLASSIFICATION	1.591099444231001E-4	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9998104911480686	WITHOUT_CLASSIFICATION	1.8950885193140857E-4	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9996722774650336	WITHOUT_CLASSIFICATION	3.2772253496631025E-4	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9997799269675973	WITHOUT_CLASSIFICATION	2.200730324026374E-4	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.998439684316122	WITHOUT_CLASSIFICATION	0.0015603156838780092	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9855060249731303	WITHOUT_CLASSIFICATION	0.014493975026869626	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.9855060249731303	WITHOUT_CLASSIFICATION	0.014493975026869626	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9997017812830856	WITHOUT_CLASSIFICATION	2.982187169144233E-4	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9991524057890808	WITHOUT_CLASSIFICATION	8.475942109192042E-4	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9997315200453618	WITHOUT_CLASSIFICATION	2.6847995463823767E-4	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9991413793275055	WITHOUT_CLASSIFICATION	8.586206724944989E-4	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9996652724150428	WITHOUT_CLASSIFICATION	3.347275849572511E-4	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9998379067218438	WITHOUT_CLASSIFICATION	1.6209327815619752E-4	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.999674456930398	WITHOUT_CLASSIFICATION	3.2554306960192765E-4	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.999674456930398	WITHOUT_CLASSIFICATION	3.2554306960192765E-4	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.999674456930398	WITHOUT_CLASSIFICATION	3.2554306960192765E-4	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999358086359318	WITHOUT_CLASSIFICATION	6.419136406813178E-5	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.999752915756397	WITHOUT_CLASSIFICATION	2.470842436030261E-4	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9997385571094645	WITHOUT_CLASSIFICATION	2.6144289053549097E-4	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.999938905364671	WITHOUT_CLASSIFICATION	6.109463532900731E-5	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9997760982175032	WITHOUT_CLASSIFICATION	2.2390178249678109E-4	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9996428051769842	WITHOUT_CLASSIFICATION	3.5719482301573116E-4	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9996428051769842	WITHOUT_CLASSIFICATION	3.5719482301573116E-4	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9996468652564888	WITHOUT_CLASSIFICATION	3.5313474351113445E-4	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9994148912441324	WITHOUT_CLASSIFICATION	5.851087558676175E-4	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9996644843413066	WITHOUT_CLASSIFICATION	3.355156586933743E-4	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9996656296046391	WITHOUT_CLASSIFICATION	3.343703953608033E-4	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.99883996126056	WITHOUT_CLASSIFICATION	0.0011600387394400224	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9998712713939574	WITHOUT_CLASSIFICATION	1.2872860604263558E-4	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9989300879964605	WITHOUT_CLASSIFICATION	0.001069912003539449	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.999401117342397	WITHOUT_CLASSIFICATION	5.988826576029334E-4	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9998589637552554	WITHOUT_CLASSIFICATION	1.4103624474452424E-4	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9992660236612327	WITHOUT_CLASSIFICATION	7.339763387671552E-4	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9997254502613983	WITHOUT_CLASSIFICATION	2.74549738601736E-4	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.999620670561675	WITHOUT_CLASSIFICATION	3.7932943832494196E-4	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9997456605630122	WITHOUT_CLASSIFICATION	2.54339436987858E-4	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9996501615705029	WITHOUT_CLASSIFICATION	3.4983842949706817E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9991473885030879	WITHOUT_CLASSIFICATION	8.526114969121835E-4	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999092752695227	WITHOUT_CLASSIFICATION	9.072473047735157E-5	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9998569243839535	WITHOUT_CLASSIFICATION	1.430756160464235E-4	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999060623151148	WITHOUT_CLASSIFICATION	9.39376848850982E-5	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.999868272079221	WITHOUT_CLASSIFICATION	1.317279207790188E-4	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9998638147807106	WITHOUT_CLASSIFICATION	1.3618521928939256E-4	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999207710141084	WITHOUT_CLASSIFICATION	7.922898589164868E-5	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9998187212682235	WITHOUT_CLASSIFICATION	1.812787317766029E-4	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.999732404348886	WITHOUT_CLASSIFICATION	2.675956511139828E-4	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9995920287332213	WITHOUT_CLASSIFICATION	4.0797126677873916E-4	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9984736948194878	WITHOUT_CLASSIFICATION	0.0015263051805122602	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9997116241032571	WITHOUT_CLASSIFICATION	2.8837589674291425E-4	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9997116241032571	WITHOUT_CLASSIFICATION	2.8837589674291425E-4	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.9999220765525082	WITHOUT_CLASSIFICATION	7.792344749181539E-5	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9998816326865184	WITHOUT_CLASSIFICATION	1.1836731348161637E-4	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9997526968459978	WITHOUT_CLASSIFICATION	2.473031540022376E-4	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9994913474282529	WITHOUT_CLASSIFICATION	5.086525717472261E-4	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9996472107136327	WITHOUT_CLASSIFICATION	3.52789286367292E-4	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9998827474235157	WITHOUT_CLASSIFICATION	1.1725257648428841E-4	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9991196764211887	WITHOUT_CLASSIFICATION	8.80323578811293E-4	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9996044397366023	WITHOUT_CLASSIFICATION	3.9556026339768326E-4	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.999882856842856	WITHOUT_CLASSIFICATION	1.1714315714395387E-4	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.9997838716590517	WITHOUT_CLASSIFICATION	2.161283409482558E-4	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9997508165878357	WITHOUT_CLASSIFICATION	2.491834121643799E-4	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.998013716696886	WITHOUT_CLASSIFICATION	0.0019862833031140305	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9998618059374835	WITHOUT_CLASSIFICATION	1.3819406251653095E-4	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9999588239867438	WITHOUT_CLASSIFICATION	4.117601325606734E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9995920287332213	WITHOUT_CLASSIFICATION	4.0797126677873916E-4	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9996472107136327	WITHOUT_CLASSIFICATION	3.52789286367292E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9997264349633148	WITHOUT_CLASSIFICATION	2.735650366851982E-4	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9997732291017727	WITHOUT_CLASSIFICATION	2.2677089822727893E-4	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9998547813866613	WITHOUT_CLASSIFICATION	1.4521861333873792E-4	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9979809101425827	WITHOUT_CLASSIFICATION	0.0020190898574172045	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9995241202230144	WITHOUT_CLASSIFICATION	4.7587977698559475E-4	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.9998643435813288	WITHOUT_CLASSIFICATION	1.3565641867110172E-4	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9998383155623869	WITHOUT_CLASSIFICATION	1.6168443761301242E-4	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.9961138901842184	WITHOUT_CLASSIFICATION	0.0038861098157816245	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999449590396308	WITHOUT_CLASSIFICATION	5.5040960369326945E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999252923211032	WITHOUT_CLASSIFICATION	7.470767889692598E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9998309471944586	WITHOUT_CLASSIFICATION	1.69052805541254E-4	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999040328360504	WITHOUT_CLASSIFICATION	9.596716394956471E-5	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9998002052728685	WITHOUT_CLASSIFICATION	1.9979472713148165E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9996305864831336	WITHOUT_CLASSIFICATION	3.694135168664159E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9984992575784309	WITHOUT_CLASSIFICATION	0.0015007424215690306	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9974562690430236	WITHOUT_CLASSIFICATION	0.0025437309569763303	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9998458278971148	WITHOUT_CLASSIFICATION	1.5417210288514677E-4	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9992764789290052	WITHOUT_CLASSIFICATION	7.235210709948969E-4	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9979503632224447	WITHOUT_CLASSIFICATION	0.0020496367775553388	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.9995959105661497	WITHOUT_CLASSIFICATION	4.0408943385029467E-4	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9998462555552662	WITHOUT_CLASSIFICATION	1.537444447337813E-4	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9995910139047812	WITHOUT_CLASSIFICATION	4.089860952187297E-4	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9998375180000492	WITHOUT_CLASSIFICATION	1.6248199995076777E-4	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9984524321427661	WITHOUT_CLASSIFICATION	0.0015475678572339068	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9996320114151531	WITHOUT_CLASSIFICATION	3.6798858484692537E-4	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9991980512166961	WITHOUT_CLASSIFICATION	8.019487833038318E-4	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.998881963293858	WITHOUT_CLASSIFICATION	0.0011180367061419919	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.9998238298701465	WITHOUT_CLASSIFICATION	1.7617012985343843E-4	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9997154171860917	WITHOUT_CLASSIFICATION	2.8458281390835913E-4	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9994513239242405	WITHOUT_CLASSIFICATION	5.48676075759525E-4	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9997032168077403	WITHOUT_CLASSIFICATION	2.9678319225960093E-4	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.9997806282290372	WITHOUT_CLASSIFICATION	2.1937177096283638E-4	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9998437918341903	WITHOUT_CLASSIFICATION	1.562081658097976E-4	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9998407365028462	WITHOUT_CLASSIFICATION	1.5926349715383178E-4	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9998400845477544	WITHOUT_CLASSIFICATION	1.5991545224558178E-4	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9998400845477544	WITHOUT_CLASSIFICATION	1.5991545224558178E-4	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9998400845477544	WITHOUT_CLASSIFICATION	1.5991545224558178E-4	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.998717193367572	WITHOUT_CLASSIFICATION	0.0012828066324279523	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9983066951752166	WITHOUT_CLASSIFICATION	0.0016933048247833784	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9997680008966028	WITHOUT_CLASSIFICATION	2.3199910339728936E-4	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9996286499385711	WITHOUT_CLASSIFICATION	3.7135006142889463E-4	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9996673884150373	WITHOUT_CLASSIFICATION	3.326115849627681E-4	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9968527393537486	WITHOUT_CLASSIFICATION	0.003147260646251464	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9997509021593752	WITHOUT_CLASSIFICATION	2.4909784062469967E-4	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9998921763412	WITHOUT_CLASSIFICATION	1.0782365880002801E-4	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.999630998536322	WITHOUT_CLASSIFICATION	3.690014636780245E-4	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.9995733313920048	WITHOUT_CLASSIFICATION	4.2666860799518827E-4	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9972076263346903	WITHOUT_CLASSIFICATION	0.0027923736653097	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9997670708229741	WITHOUT_CLASSIFICATION	2.329291770258224E-4	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9993003298156272	WITHOUT_CLASSIFICATION	6.996701843728605E-4	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9999430261778924	WITHOUT_CLASSIFICATION	5.697382210757171E-5	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9998827381885667	WITHOUT_CLASSIFICATION	1.172618114333758E-4	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9998014431399367	WITHOUT_CLASSIFICATION	1.9855686006327533E-4	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9991356438607281	WITHOUT_CLASSIFICATION	8.643561392719647E-4	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999197754313366	WITHOUT_CLASSIFICATION	8.02245686634535E-5	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999003540751181	WITHOUT_CLASSIFICATION	9.964592488188394E-5	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9994065307075842	WITHOUT_CLASSIFICATION	5.934692924158945E-4	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9997834398090434	WITHOUT_CLASSIFICATION	2.1656019095650582E-4	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9974157822889134	WITHOUT_CLASSIFICATION	0.0025842177110865054	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9992505326701716	WITHOUT_CLASSIFICATION	7.494673298283043E-4	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9994065307075842	WITHOUT_CLASSIFICATION	5.934692924158945E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9987972328028224	WITHOUT_CLASSIFICATION	0.001202767197177683	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9998970068939511	WITHOUT_CLASSIFICATION	1.0299310604883991E-4	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.999337912790207	WITHOUT_CLASSIFICATION	6.620872097929496E-4	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9999074551540195	WITHOUT_CLASSIFICATION	9.254484598062881E-5	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9957047939666775	WITHOUT_CLASSIFICATION	0.004295206033322493	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9998898426887397	WITHOUT_CLASSIFICATION	1.1015731126031582E-4	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999376692572789	WITHOUT_CLASSIFICATION	6.2330742721065E-5	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9998935004936931	WITHOUT_CLASSIFICATION	1.0649950630702042E-4	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999644447294468	WITHOUT_CLASSIFICATION	3.555527055321559E-5	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9990098888820762	WITHOUT_CLASSIFICATION	9.901111179238308E-4	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9991229633516989	WITHOUT_CLASSIFICATION	8.770366483010404E-4	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9995169861228137	WITHOUT_CLASSIFICATION	4.8301387718635157E-4	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9997047288629651	WITHOUT_CLASSIFICATION	2.9527113703488214E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.9971889752367487	WITHOUT_CLASSIFICATION	0.0028110247632513008	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9996594393593919	WITHOUT_CLASSIFICATION	3.40560640608057E-4	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9998781678658981	WITHOUT_CLASSIFICATION	1.2183213410186767E-4	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999478036844147	WITHOUT_CLASSIFICATION	5.2196315585319677E-5	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.999795558225133	WITHOUT_CLASSIFICATION	2.0444177486708676E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9997221142503533	WITHOUT_CLASSIFICATION	2.7788574964674064E-4	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9996626062850446	WITHOUT_CLASSIFICATION	3.373937149554019E-4	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9995165683895886	WITHOUT_CLASSIFICATION	4.834316104113592E-4	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9991611055394995	WITHOUT_CLASSIFICATION	8.388944605004716E-4	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9997728246945439	WITHOUT_CLASSIFICATION	2.2717530545625437E-4	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999054217302991	WITHOUT_CLASSIFICATION	9.457826970096837E-5	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9996814053773314	WITHOUT_CLASSIFICATION	3.185946226686827E-4	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9997868678493049	WITHOUT_CLASSIFICATION	2.1313215069500212E-4	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.996734069347145	WITHOUT_CLASSIFICATION	0.003265930652854971	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.996668601776966	WITHOUT_CLASSIFICATION	0.0033313982230338724	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9994905375245883	WITHOUT_CLASSIFICATION	5.09462475411704E-4	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9997868678493049	WITHOUT_CLASSIFICATION	2.1313215069500212E-4	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9991400201236492	WITHOUT_CLASSIFICATION	8.599798763508488E-4	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.9991400201236492	WITHOUT_CLASSIFICATION	8.599798763508488E-4	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.998735736064636	WITHOUT_CLASSIFICATION	0.0012642639353640161	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9997868678493049	WITHOUT_CLASSIFICATION	2.1313215069500212E-4	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9997868678493049	WITHOUT_CLASSIFICATION	2.1313215069500212E-4	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9982114147956785	WITHOUT_CLASSIFICATION	0.0017885852043215392	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9986758819349613	WITHOUT_CLASSIFICATION	0.0013241180650387413	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9998197072624426	WITHOUT_CLASSIFICATION	1.8029273755742033E-4	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9998197072624426	WITHOUT_CLASSIFICATION	1.8029273755742033E-4	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9992230744855303	WITHOUT_CLASSIFICATION	7.769255144697388E-4	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999266845344781	WITHOUT_CLASSIFICATION	7.331546552190387E-5	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9998020455418073	WITHOUT_CLASSIFICATION	1.9795445819256513E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9992230744855303	WITHOUT_CLASSIFICATION	7.769255144697388E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9998133610729628	WITHOUT_CLASSIFICATION	1.8663892703719905E-4	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9995457394638714	WITHOUT_CLASSIFICATION	4.542605361287483E-4	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9997852521148768	WITHOUT_CLASSIFICATION	2.147478851233591E-4	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9997883485233732	WITHOUT_CLASSIFICATION	2.1165147662689852E-4	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.999897421104536	WITHOUT_CLASSIFICATION	1.0257889546391295E-4	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9998939453777995	WITHOUT_CLASSIFICATION	1.0605462220040053E-4	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9997092359636663	WITHOUT_CLASSIFICATION	2.9076403633370525E-4	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999294100382915	WITHOUT_CLASSIFICATION	7.058996170846412E-5	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9997061548253341	WITHOUT_CLASSIFICATION	2.938451746659623E-4	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.999827807660081	WITHOUT_CLASSIFICATION	1.7219233991895436E-4	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9998128091736834	WITHOUT_CLASSIFICATION	1.8719082631651906E-4	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9992091118644333	WITHOUT_CLASSIFICATION	7.908881355667523E-4	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9991297678353555	WITHOUT_CLASSIFICATION	8.702321646445611E-4	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9994006786121553	WITHOUT_CLASSIFICATION	5.993213878445723E-4	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.9989298134513179	WITHOUT_CLASSIFICATION	0.001070186548682169	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9998876795469244	WITHOUT_CLASSIFICATION	1.1232045307554992E-4	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.997734372137515	WITHOUT_CLASSIFICATION	0.002265627862484917	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.999394117658165	WITHOUT_CLASSIFICATION	6.058823418349769E-4	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9992839596840447	WITHOUT_CLASSIFICATION	7.160403159552989E-4	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.999559465754415	WITHOUT_CLASSIFICATION	4.405342455849913E-4	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.9990592553701388	WITHOUT_CLASSIFICATION	9.407446298612143E-4	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9991295994409334	WITHOUT_CLASSIFICATION	8.704005590666479E-4	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.999769659103441	WITHOUT_CLASSIFICATION	2.3034089655906803E-4	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9991174246686727	WITHOUT_CLASSIFICATION	8.825753313272495E-4	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9989401088269696	WITHOUT_CLASSIFICATION	0.0010598911730304518	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.998395988187044	WITHOUT_CLASSIFICATION	0.0016040118129559727	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9990000116931106	WITHOUT_CLASSIFICATION	9.999883068893254E-4	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9982725284352656	WITHOUT_CLASSIFICATION	0.001727471564734337	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9995787208184456	WITHOUT_CLASSIFICATION	4.212791815543883E-4	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9994795265062183	WITHOUT_CLASSIFICATION	5.204734937816891E-4	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.999483348961708	WITHOUT_CLASSIFICATION	5.166510382921079E-4	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9994058410133299	WITHOUT_CLASSIFICATION	5.941589866702164E-4	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9996314249347282	WITHOUT_CLASSIFICATION	3.6857506527181747E-4	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.9984021538609955	WITHOUT_CLASSIFICATION	0.0015978461390044783	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9997558461881433	WITHOUT_CLASSIFICATION	2.4415381185672496E-4	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9997539715736514	WITHOUT_CLASSIFICATION	2.460284263485139E-4	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9869587438134751	WITHOUT_CLASSIFICATION	0.013041256186524904	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9992519122097077	WITHOUT_CLASSIFICATION	7.480877902922656E-4	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9997226907386815	WITHOUT_CLASSIFICATION	2.7730926131859594E-4	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9986606814459846	WITHOUT_CLASSIFICATION	0.0013393185540154112	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9997230749054921	WITHOUT_CLASSIFICATION	2.7692509450795514E-4	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9368198665937308	WITHOUT_CLASSIFICATION	0.06318013340626923	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.999432857854464	WITHOUT_CLASSIFICATION	5.671421455359548E-4	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.9998505164620128	WITHOUT_CLASSIFICATION	1.4948353798721324E-4	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9994906002864524	WITHOUT_CLASSIFICATION	5.093997135475083E-4	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.999531352314049	WITHOUT_CLASSIFICATION	4.6864768595092224E-4	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9983961668819065	WITHOUT_CLASSIFICATION	0.0016038331180934866	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9997168422816612	WITHOUT_CLASSIFICATION	2.831577183387748E-4	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9985746362686728	WITHOUT_CLASSIFICATION	0.0014253637313272562	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9996878336615032	WITHOUT_CLASSIFICATION	3.1216633849680747E-4	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9998834486494137	WITHOUT_CLASSIFICATION	1.1655135058627853E-4	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9996872834301649	WITHOUT_CLASSIFICATION	3.1271656983512824E-4	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9997109393525316	WITHOUT_CLASSIFICATION	2.8906064746834337E-4	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9996638980846104	WITHOUT_CLASSIFICATION	3.361019153896377E-4	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9998020455418073	WITHOUT_CLASSIFICATION	1.9795445819256513E-4	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9998374161115204	WITHOUT_CLASSIFICATION	1.6258388847958079E-4	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9996968560272863	WITHOUT_CLASSIFICATION	3.0314397271373396E-4	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9990378303161949	WITHOUT_CLASSIFICATION	9.621696838051072E-4	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9985230230106924	WITHOUT_CLASSIFICATION	0.0014769769893076279	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9997790011451121	WITHOUT_CLASSIFICATION	2.2099885488787574E-4	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9998223897344947	WITHOUT_CLASSIFICATION	1.776102655052963E-4	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.999838620612928	WITHOUT_CLASSIFICATION	1.613793870719262E-4	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9997591649922152	WITHOUT_CLASSIFICATION	2.4083500778494116E-4	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9992489668777295	WITHOUT_CLASSIFICATION	7.51033122270637E-4	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9988023935799668	WITHOUT_CLASSIFICATION	0.001197606420033255	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9963766498865639	WITHOUT_CLASSIFICATION	0.003623350113436032	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9998776998806415	WITHOUT_CLASSIFICATION	1.2230011935853043E-4	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9992654708075327	WITHOUT_CLASSIFICATION	7.345291924673022E-4	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9998929376738473	WITHOUT_CLASSIFICATION	1.0706232615267786E-4	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9997111231943668	WITHOUT_CLASSIFICATION	2.8887680563322667E-4	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9994503066921981	WITHOUT_CLASSIFICATION	5.49693307801812E-4	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9981598431893832	WITHOUT_CLASSIFICATION	0.0018401568106167698	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9996138828781247	WITHOUT_CLASSIFICATION	3.861171218752879E-4	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999037795034181	WITHOUT_CLASSIFICATION	9.622049658183202E-5	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9998169319249226	WITHOUT_CLASSIFICATION	1.8306807507741522E-4	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.998509462611422	WITHOUT_CLASSIFICATION	0.0014905373885779718	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9994224267603784	WITHOUT_CLASSIFICATION	5.775732396215307E-4	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9997429359699459	WITHOUT_CLASSIFICATION	2.5706403005410557E-4	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9995301995527809	WITHOUT_CLASSIFICATION	4.6980044721901023E-4	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.998453056872702	WITHOUT_CLASSIFICATION	0.0015469431272979147	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9990736215882465	WITHOUT_CLASSIFICATION	9.263784117535307E-4	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.9997315942619046	WITHOUT_CLASSIFICATION	2.6840573809542597E-4	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999431524626596	WITHOUT_CLASSIFICATION	5.6847537340345646E-5	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.9996785969762707	WITHOUT_CLASSIFICATION	3.2140302372928123E-4	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.9979327630199251	WITHOUT_CLASSIFICATION	0.002067236980074917	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999673275737293	WITHOUT_CLASSIFICATION	3.267242627067344E-5	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999261798240109	WITHOUT_CLASSIFICATION	7.382017598908892E-5	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9997352272380302	WITHOUT_CLASSIFICATION	2.647727619696844E-4	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.99951499258132	WITHOUT_CLASSIFICATION	4.850074186798953E-4	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.99951499258132	WITHOUT_CLASSIFICATION	4.850074186798953E-4	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.9999714856886619	WITHOUT_CLASSIFICATION	2.851431133809055E-5	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9999048896499441	WITHOUT_CLASSIFICATION	9.511035005585946E-5	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9996969531170361	WITHOUT_CLASSIFICATION	3.030468829638464E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9996821282283002	WITHOUT_CLASSIFICATION	3.1787177169986753E-4	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9982272089478293	WITHOUT_CLASSIFICATION	0.0017727910521706594	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9986797395222855	WITHOUT_CLASSIFICATION	0.0013202604777145025	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9993580297739079	WITHOUT_CLASSIFICATION	6.419702260920793E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.9983169789261586	WITHOUT_CLASSIFICATION	0.001683021073841476	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9985337039125246	WITHOUT_CLASSIFICATION	0.0014662960874754236	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9995733473288129	WITHOUT_CLASSIFICATION	4.266526711871506E-4	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9996112848476599	WITHOUT_CLASSIFICATION	3.8871515234007825E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9996821282283002	WITHOUT_CLASSIFICATION	3.1787177169986753E-4	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999324577015608	WITHOUT_CLASSIFICATION	6.754229843923434E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9997352807724884	WITHOUT_CLASSIFICATION	2.647192275116218E-4	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999300995725209	WITHOUT_CLASSIFICATION	6.990042747911125E-5	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.9994970112262092	WITHOUT_CLASSIFICATION	5.029887737909324E-4	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9997412351290619	WITHOUT_CLASSIFICATION	2.587648709380651E-4	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9969083132607418	WITHOUT_CLASSIFICATION	0.003091686739258139	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9991918781015168	WITHOUT_CLASSIFICATION	8.081218984832246E-4	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.999699766308618	WITHOUT_CLASSIFICATION	3.00233691382014E-4	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9995889812884459	WITHOUT_CLASSIFICATION	4.110187115541246E-4	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9995287931206738	WITHOUT_CLASSIFICATION	4.712068793262494E-4	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9998080855331951	WITHOUT_CLASSIFICATION	1.9191446680492323E-4	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9884454578542784	WITHOUT_CLASSIFICATION	0.011554542145721585	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9996528318937614	WITHOUT_CLASSIFICATION	3.4716810623858403E-4	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9997344653729743	WITHOUT_CLASSIFICATION	2.655346270257412E-4	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.999734639262642	WITHOUT_CLASSIFICATION	2.6536073735788105E-4	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.999702584493483	WITHOUT_CLASSIFICATION	2.974155065169589E-4	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9733408648561102	WITHOUT_CLASSIFICATION	0.026659135143889758	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9999327157306372	WITHOUT_CLASSIFICATION	6.728426936268103E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9996814053773314	WITHOUT_CLASSIFICATION	3.185946226686827E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9997922109481554	WITHOUT_CLASSIFICATION	2.0778905184452525E-4	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9998302649646742	WITHOUT_CLASSIFICATION	1.697350353257488E-4	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.999565579433602	WITHOUT_CLASSIFICATION	4.344205663980711E-4	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9996919964461869	WITHOUT_CLASSIFICATION	3.080035538130158E-4	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.9997718609143005	WITHOUT_CLASSIFICATION	2.2813908569962207E-4	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999008480797457	WITHOUT_CLASSIFICATION	9.91519202543479E-5	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9998554824306793	WITHOUT_CLASSIFICATION	1.4451756932072857E-4	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9998831410051625	WITHOUT_CLASSIFICATION	1.1685899483744623E-4	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9996270025349855	WITHOUT_CLASSIFICATION	3.7299746501453764E-4	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.999762077875776	WITHOUT_CLASSIFICATION	2.3792212422404552E-4	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9997412140436845	WITHOUT_CLASSIFICATION	2.587859563154574E-4	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.9984698855627256	WITHOUT_CLASSIFICATION	0.0015301144372743484	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9993397213729773	WITHOUT_CLASSIFICATION	6.602786270227516E-4	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9984264237522781	WITHOUT_CLASSIFICATION	0.001573576247721958	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999400358335632	WITHOUT_CLASSIFICATION	5.996416643676927E-5	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9986446145119187	WITHOUT_CLASSIFICATION	0.0013553854880814264	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.994855141687559	WITHOUT_CLASSIFICATION	0.0051448583124410465	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9998788502400543	WITHOUT_CLASSIFICATION	1.2114975994569585E-4	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9993823099755481	WITHOUT_CLASSIFICATION	6.176900244519255E-4	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9999210951775063	WITHOUT_CLASSIFICATION	7.890482249368812E-5	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9997901684550176	WITHOUT_CLASSIFICATION	2.0983154498235065E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.9997955631745136	WITHOUT_CLASSIFICATION	2.0443682548638235E-4	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9998120706132242	WITHOUT_CLASSIFICATION	1.8792938677579657E-4	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9998321706724393	WITHOUT_CLASSIFICATION	1.6782932756056424E-4	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9995484912731575	WITHOUT_CLASSIFICATION	4.5150872684257185E-4	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9996863382655135	WITHOUT_CLASSIFICATION	3.1366173448659526E-4	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.9992687645215077	WITHOUT_CLASSIFICATION	7.312354784923797E-4	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9997226923058282	WITHOUT_CLASSIFICATION	2.7730769417179835E-4	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9998206216845233	WITHOUT_CLASSIFICATION	1.7937831547671761E-4	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9997770694334095	WITHOUT_CLASSIFICATION	2.2293056659053632E-4	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9998398611659095	WITHOUT_CLASSIFICATION	1.6013883409053242E-4	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9994694672967138	WITHOUT_CLASSIFICATION	5.305327032861379E-4	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9987818956623541	WITHOUT_CLASSIFICATION	0.0012181043376458794	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.9997363774716426	WITHOUT_CLASSIFICATION	2.636225283575212E-4	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9982773387378008	WITHOUT_CLASSIFICATION	0.0017226612621991965	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9995401662912572	WITHOUT_CLASSIFICATION	4.5983370874280033E-4	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9996264342272435	WITHOUT_CLASSIFICATION	3.735657727564139E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.999795558225133	WITHOUT_CLASSIFICATION	2.0444177486708676E-4	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9998927982326952	WITHOUT_CLASSIFICATION	1.0720176730492915E-4	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9995761325109819	WITHOUT_CLASSIFICATION	4.238674890181553E-4	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9996993357232076	WITHOUT_CLASSIFICATION	3.006642767924162E-4	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.9996993357232076	WITHOUT_CLASSIFICATION	3.006642767924162E-4	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9966019835870462	WITHOUT_CLASSIFICATION	0.003398016412953855	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9992566999387826	WITHOUT_CLASSIFICATION	7.433000612172494E-4	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9999818805669278	WITHOUT_CLASSIFICATION	1.8119433072256916E-5	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.9992150218040818	WITHOUT_CLASSIFICATION	7.84978195918083E-4	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9993881004961196	WITHOUT_CLASSIFICATION	6.118995038804218E-4	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.999922777936473	WITHOUT_CLASSIFICATION	7.722206352700274E-5	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9995387678714627	WITHOUT_CLASSIFICATION	4.612321285373507E-4	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9982840104594828	WITHOUT_CLASSIFICATION	0.0017159895405171905	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9994121888014281	WITHOUT_CLASSIFICATION	5.878111985718233E-4	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9975384678395152	WITHOUT_CLASSIFICATION	0.0024615321604847403	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.999345315480898	WITHOUT_CLASSIFICATION	6.546845191018719E-4	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9993820198365629	WITHOUT_CLASSIFICATION	6.179801634370529E-4	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9976720879892521	WITHOUT_CLASSIFICATION	0.0023279120107478125	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9996476918808933	WITHOUT_CLASSIFICATION	3.5230811910667305E-4	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9997858587135121	WITHOUT_CLASSIFICATION	2.1414128648796963E-4	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9996721611841051	WITHOUT_CLASSIFICATION	3.278388158948559E-4	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.999223227949086	WITHOUT_CLASSIFICATION	7.76772050913955E-4	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9978162266583435	WITHOUT_CLASSIFICATION	0.002183773341656587	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.9999164998810267	WITHOUT_CLASSIFICATION	8.350011897333856E-5	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9992589119978162	WITHOUT_CLASSIFICATION	7.410880021837686E-4	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9998549266287687	WITHOUT_CLASSIFICATION	1.4507337123133624E-4	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9991213585034991	WITHOUT_CLASSIFICATION	8.786414965009007E-4	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9996873181192077	WITHOUT_CLASSIFICATION	3.126818807922556E-4	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9998473248308024	WITHOUT_CLASSIFICATION	1.5267516919748356E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.999638868400411	WITHOUT_CLASSIFICATION	3.611315995888348E-4	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9982609724697981	WITHOUT_CLASSIFICATION	0.0017390275302020131	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9991213585034991	WITHOUT_CLASSIFICATION	8.786414965009007E-4	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.999760122073132	WITHOUT_CLASSIFICATION	2.3987792686795293E-4	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9971294353417937	WITHOUT_CLASSIFICATION	0.002870564658206333	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.9995348244584916	WITHOUT_CLASSIFICATION	4.651755415083635E-4	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.999315943997501	WITHOUT_CLASSIFICATION	6.840560024990869E-4	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9952269227712461	WITHOUT_CLASSIFICATION	0.004773077228753839	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9997405176717424	WITHOUT_CLASSIFICATION	2.5948232825747546E-4	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9996276704974111	WITHOUT_CLASSIFICATION	3.7232950258890834E-4	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9998852122672902	WITHOUT_CLASSIFICATION	1.1478773270981018E-4	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9997079260426276	WITHOUT_CLASSIFICATION	2.920739573724111E-4	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9998990966875219	WITHOUT_CLASSIFICATION	1.0090331247809195E-4	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9998454298360684	WITHOUT_CLASSIFICATION	1.54570163931548E-4	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9995984296624012	WITHOUT_CLASSIFICATION	4.015703375988354E-4	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9987645220929604	WITHOUT_CLASSIFICATION	0.0012354779070395889	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9987317276119168	WITHOUT_CLASSIFICATION	0.0012682723880832942	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9990825105056047	WITHOUT_CLASSIFICATION	9.174894943953724E-4	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.999760088979034	WITHOUT_CLASSIFICATION	2.3991102096594812E-4	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.999765235989975	WITHOUT_CLASSIFICATION	2.3476401002505754E-4	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9976903560350174	WITHOUT_CLASSIFICATION	0.002309643964982626	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9980095767084811	WITHOUT_CLASSIFICATION	0.0019904232915188497	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.9999352667813465	WITHOUT_CLASSIFICATION	6.47332186535186E-5	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999803320472415	WITHOUT_CLASSIFICATION	1.966795275859332E-5	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9990651237914234	WITHOUT_CLASSIFICATION	9.348762085764612E-4	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9996720548239618	WITHOUT_CLASSIFICATION	3.2794517603818035E-4	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9996720548239618	WITHOUT_CLASSIFICATION	3.2794517603818035E-4	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9988398303466194	WITHOUT_CLASSIFICATION	0.0011601696533806204	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9993562278893969	WITHOUT_CLASSIFICATION	6.437721106030943E-4	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9996476727954392	WITHOUT_CLASSIFICATION	3.523272045608335E-4	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.9997320053697751	WITHOUT_CLASSIFICATION	2.679946302248525E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997241969363179	WITHOUT_CLASSIFICATION	2.75803063682136E-4	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9952269227712461	WITHOUT_CLASSIFICATION	0.004773077228753839	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9997405176717424	WITHOUT_CLASSIFICATION	2.5948232825747546E-4	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9996276704974111	WITHOUT_CLASSIFICATION	3.7232950258890834E-4	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9997079260426276	WITHOUT_CLASSIFICATION	2.920739573724111E-4	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9998990966875219	WITHOUT_CLASSIFICATION	1.0090331247809195E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9828753240982049	WITHOUT_CLASSIFICATION	0.017124675901795103	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9988737063474399	WITHOUT_CLASSIFICATION	0.0011262936525601643	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9996109632045065	WITHOUT_CLASSIFICATION	3.890367954934128E-4	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9888248058442418	WITHOUT_CLASSIFICATION	0.011175194155758168	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.9999408235010631	WITHOUT_CLASSIFICATION	5.91764989368814E-5	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.9998971020896857	WITHOUT_CLASSIFICATION	1.0289791031423513E-4	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.9978600017002844	WITHOUT_CLASSIFICATION	0.0021399982997156045	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9993478100336913	WITHOUT_CLASSIFICATION	6.521899663086019E-4	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9996788647927146	WITHOUT_CLASSIFICATION	3.211352072853368E-4	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9997038482899104	WITHOUT_CLASSIFICATION	2.961517100896412E-4	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9991857741531102	WITHOUT_CLASSIFICATION	8.142258468898699E-4	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9995876004069215	WITHOUT_CLASSIFICATION	4.123995930784595E-4	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999425879734095	WITHOUT_CLASSIFICATION	5.741202659063182E-5	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.9996924424843749	WITHOUT_CLASSIFICATION	3.0755751562500116E-4	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9997518194001161	WITHOUT_CLASSIFICATION	2.4818059988381306E-4	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.9999228632475792	WITHOUT_CLASSIFICATION	7.713675242084074E-5	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9998166993971711	WITHOUT_CLASSIFICATION	1.833006028288737E-4	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9989361097737701	WITHOUT_CLASSIFICATION	0.0010638902262299597	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9997372550278436	WITHOUT_CLASSIFICATION	2.627449721563844E-4	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.999457828122373	WITHOUT_CLASSIFICATION	5.421718776269272E-4	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9996805341866727	WITHOUT_CLASSIFICATION	3.1946581332732823E-4	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9997998683382475	WITHOUT_CLASSIFICATION	2.0013166175254207E-4	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9941329562837469	WITHOUT_CLASSIFICATION	0.0058670437162531034	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9997670708229741	WITHOUT_CLASSIFICATION	2.329291770258224E-4	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999008480797457	WITHOUT_CLASSIFICATION	9.91519202543479E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9998206216845233	WITHOUT_CLASSIFICATION	1.7937831547671761E-4	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9998990966875219	WITHOUT_CLASSIFICATION	1.0090331247809195E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.996636954474153	WITHOUT_CLASSIFICATION	0.003363045525846978	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9998656055163739	WITHOUT_CLASSIFICATION	1.3439448362613532E-4	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9986923820683792	WITHOUT_CLASSIFICATION	0.0013076179316207249	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9998624530242511	WITHOUT_CLASSIFICATION	1.3754697574887908E-4	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9997852927155321	WITHOUT_CLASSIFICATION	2.147072844679151E-4	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9983672588118466	WITHOUT_CLASSIFICATION	0.0016327411881533643	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9993132492941074	WITHOUT_CLASSIFICATION	6.867507058926445E-4	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9995587370519371	WITHOUT_CLASSIFICATION	4.412629480629303E-4	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9989255999148937	WITHOUT_CLASSIFICATION	0.0010744000851062585	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.999765213320193	WITHOUT_CLASSIFICATION	2.347866798070331E-4	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9998088250251365	WITHOUT_CLASSIFICATION	1.911749748635183E-4	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9968733103930085	WITHOUT_CLASSIFICATION	0.003126689606991428	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9992226931892146	WITHOUT_CLASSIFICATION	7.773068107854587E-4	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9999126229709863	WITHOUT_CLASSIFICATION	8.737702901375296E-5	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.999876551521147	WITHOUT_CLASSIFICATION	1.2344847885291567E-4	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9996832861032077	WITHOUT_CLASSIFICATION	3.167138967923266E-4	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9997358200718196	WITHOUT_CLASSIFICATION	2.6417992818039216E-4	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9997942633386326	WITHOUT_CLASSIFICATION	2.057366613672483E-4	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9996992225525316	WITHOUT_CLASSIFICATION	3.0077744746838516E-4	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.999880694727958	WITHOUT_CLASSIFICATION	1.1930527204195282E-4	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9997720535934297	WITHOUT_CLASSIFICATION	2.279464065703546E-4	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9997942633386326	WITHOUT_CLASSIFICATION	2.057366613672483E-4	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9997942633386326	WITHOUT_CLASSIFICATION	2.057366613672483E-4	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9998198530588985	WITHOUT_CLASSIFICATION	1.8014694110159214E-4	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9980698464930299	WITHOUT_CLASSIFICATION	0.001930153506970111	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9980698464930299	WITHOUT_CLASSIFICATION	0.001930153506970111	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.999880694727958	WITHOUT_CLASSIFICATION	1.1930527204195282E-4	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9996992225525316	WITHOUT_CLASSIFICATION	3.0077744746838516E-4	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.99980149314682	WITHOUT_CLASSIFICATION	1.985068531800394E-4	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.99980149314682	WITHOUT_CLASSIFICATION	1.985068531800394E-4	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9998839715493777	WITHOUT_CLASSIFICATION	1.160284506223094E-4	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.999846773543407	WITHOUT_CLASSIFICATION	1.5322645659307147E-4	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9998636310049576	WITHOUT_CLASSIFICATION	1.36368995042487E-4	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.999769480705827	WITHOUT_CLASSIFICATION	2.3051929417301225E-4	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9996696192496634	WITHOUT_CLASSIFICATION	3.3038075033670517E-4	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9997208691861466	WITHOUT_CLASSIFICATION	2.7913081385351154E-4	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9993146942288489	WITHOUT_CLASSIFICATION	6.853057711510914E-4	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9998775523632377	WITHOUT_CLASSIFICATION	1.22447636762167E-4	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.9998482506380793	WITHOUT_CLASSIFICATION	1.5174936192070826E-4	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9998021439531553	WITHOUT_CLASSIFICATION	1.9785604684473412E-4	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9837919631956599	WITHOUT_CLASSIFICATION	0.01620803680434019	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999610979353949	WITHOUT_CLASSIFICATION	3.8902064605026333E-5	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.9991542289659125	WITHOUT_CLASSIFICATION	8.457710340873907E-4	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.99975851068445	WITHOUT_CLASSIFICATION	2.4148931554994067E-4	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.9997479845250852	WITHOUT_CLASSIFICATION	2.520154749148174E-4	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.9996636875073963	WITHOUT_CLASSIFICATION	3.3631249260365195E-4	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.999385900957823	WITHOUT_CLASSIFICATION	6.140990421769202E-4	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9996324019582988	WITHOUT_CLASSIFICATION	3.675980417011534E-4	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9998775697970608	WITHOUT_CLASSIFICATION	1.2243020293923747E-4	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9993825206200208	WITHOUT_CLASSIFICATION	6.174793799793373E-4	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.998772208073512	WITHOUT_CLASSIFICATION	0.0012277919264880779	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999645484575338	WITHOUT_CLASSIFICATION	3.545154246614713E-5	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9996501722329805	WITHOUT_CLASSIFICATION	3.4982776701953966E-4	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.9990109184775724	WITHOUT_CLASSIFICATION	9.890815224276829E-4	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.999883767533032	WITHOUT_CLASSIFICATION	1.1623246696789723E-4	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9992680694685437	WITHOUT_CLASSIFICATION	7.319305314562888E-4	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999671480354755	WITHOUT_CLASSIFICATION	3.285196452444263E-5	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.999586490110444	WITHOUT_CLASSIFICATION	4.1350988955604845E-4	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9996378100663585	WITHOUT_CLASSIFICATION	3.621899336414688E-4	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9991059297665025	WITHOUT_CLASSIFICATION	8.94070233497585E-4	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9965809955127849	WITHOUT_CLASSIFICATION	0.003419004487215119	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9986451689645249	WITHOUT_CLASSIFICATION	0.0013548310354751724	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9997544402752175	WITHOUT_CLASSIFICATION	2.4555972478242577E-4	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9993510931788283	WITHOUT_CLASSIFICATION	6.489068211717545E-4	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.9949484996127738	WITHOUT_CLASSIFICATION	0.005051500387226325	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.999837326969008	WITHOUT_CLASSIFICATION	1.6267303099201492E-4	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9936095732245447	WITHOUT_CLASSIFICATION	0.006390426775455418	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9999225156747713	WITHOUT_CLASSIFICATION	7.748432522868812E-5	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9998317942118901	WITHOUT_CLASSIFICATION	1.6820578811007914E-4	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999191145518216	WITHOUT_CLASSIFICATION	8.088544817839088E-5	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9995736346621192	WITHOUT_CLASSIFICATION	4.263653378807655E-4	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9994973036385312	WITHOUT_CLASSIFICATION	5.026963614689091E-4	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9997000971929847	WITHOUT_CLASSIFICATION	2.999028070153167E-4	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9997839692504956	WITHOUT_CLASSIFICATION	2.1603074950425784E-4	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9997472732571624	WITHOUT_CLASSIFICATION	2.527267428375757E-4	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9998971801637687	WITHOUT_CLASSIFICATION	1.0281983623127079E-4	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.99941360192529	WITHOUT_CLASSIFICATION	5.863980747099413E-4	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999128435292528	WITHOUT_CLASSIFICATION	8.715647074721418E-5	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.9996286907424927	WITHOUT_CLASSIFICATION	3.713092575071904E-4	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9995736346621192	WITHOUT_CLASSIFICATION	4.263653378807655E-4	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9995495311500593	WITHOUT_CLASSIFICATION	4.5046884994070336E-4	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.999579753518036	WITHOUT_CLASSIFICATION	4.2024648196413027E-4	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9992840592904108	WITHOUT_CLASSIFICATION	7.159407095892903E-4	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.9992840592904108	WITHOUT_CLASSIFICATION	7.159407095892903E-4	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.99932128171058	WITHOUT_CLASSIFICATION	6.78718289419916E-4	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9994765949295057	WITHOUT_CLASSIFICATION	5.23405070494202E-4	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9998967037916949	WITHOUT_CLASSIFICATION	1.0329620830499498E-4	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.998878200722252	WITHOUT_CLASSIFICATION	0.001121799277748065	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9998501580270998	WITHOUT_CLASSIFICATION	1.498419729002293E-4	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9995953125921453	WITHOUT_CLASSIFICATION	4.046874078547001E-4	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9996895440010011	WITHOUT_CLASSIFICATION	3.104559989989156E-4	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999485404482101	WITHOUT_CLASSIFICATION	5.1459551789922324E-5	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9994738830730164	WITHOUT_CLASSIFICATION	5.261169269836326E-4	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.999013264344221	WITHOUT_CLASSIFICATION	9.867356557790488E-4	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9988664480857689	WITHOUT_CLASSIFICATION	0.0011335519142311014	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9998432565005733	WITHOUT_CLASSIFICATION	1.567434994267086E-4	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.9995511685789114	WITHOUT_CLASSIFICATION	4.488314210886018E-4	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.9997812519729576	WITHOUT_CLASSIFICATION	2.1874802704236756E-4	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9994933139870819	WITHOUT_CLASSIFICATION	5.066860129182231E-4	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.999846348800393	WITHOUT_CLASSIFICATION	1.5365119960693846E-4	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.999663474561899	WITHOUT_CLASSIFICATION	3.365254381010117E-4	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9997272195897878	WITHOUT_CLASSIFICATION	2.7278041021223384E-4	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.9998008612741781	WITHOUT_CLASSIFICATION	1.9913872582185172E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9994778411307581	WITHOUT_CLASSIFICATION	5.221588692418647E-4	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9998607968995039	WITHOUT_CLASSIFICATION	1.3920310049605667E-4	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9996969567035062	WITHOUT_CLASSIFICATION	3.030432964938187E-4	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9984493230945124	WITHOUT_CLASSIFICATION	0.0015506769054874853	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9997128358063545	WITHOUT_CLASSIFICATION	2.871641936455297E-4	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9995642595104982	WITHOUT_CLASSIFICATION	4.357404895018023E-4	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9997028547971404	WITHOUT_CLASSIFICATION	2.971452028596229E-4	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9992967535954282	WITHOUT_CLASSIFICATION	7.032464045717439E-4	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9976303005837859	WITHOUT_CLASSIFICATION	0.0023696994162141433	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9996634968803882	WITHOUT_CLASSIFICATION	3.3650311961172996E-4	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9998274645783967	WITHOUT_CLASSIFICATION	1.7253542160330484E-4	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9996109836654813	WITHOUT_CLASSIFICATION	3.890163345187771E-4	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9993347153753649	WITHOUT_CLASSIFICATION	6.652846246351175E-4	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9996883991038729	WITHOUT_CLASSIFICATION	3.1160089612715765E-4	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9997865814497789	WITHOUT_CLASSIFICATION	2.1341855022101943E-4	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9997706546888705	WITHOUT_CLASSIFICATION	2.2934531112943566E-4	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9998839119528997	WITHOUT_CLASSIFICATION	1.1608804710024961E-4	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9997589482945004	WITHOUT_CLASSIFICATION	2.410517054996567E-4	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.9998988080062418	WITHOUT_CLASSIFICATION	1.0119199375825493E-4	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.999559465754415	WITHOUT_CLASSIFICATION	4.405342455849913E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9997352807724884	WITHOUT_CLASSIFICATION	2.647192275116218E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9997053741114251	WITHOUT_CLASSIFICATION	2.946258885748109E-4	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9993966657119469	WITHOUT_CLASSIFICATION	6.03334288053162E-4	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9998534923885218	WITHOUT_CLASSIFICATION	1.465076114781918E-4	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9997881139645237	WITHOUT_CLASSIFICATION	2.1188603547626136E-4	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9997870972286134	WITHOUT_CLASSIFICATION	2.12902771386548E-4	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9997225970254744	WITHOUT_CLASSIFICATION	2.774029745255794E-4	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.9992377859726431	WITHOUT_CLASSIFICATION	7.622140273569226E-4	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999708870647743	WITHOUT_CLASSIFICATION	2.911293522564149E-5	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9997903085654289	WITHOUT_CLASSIFICATION	2.0969143457104882E-4	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999852806444869	WITHOUT_CLASSIFICATION	1.4719355513087777E-5	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.9999852806444869	WITHOUT_CLASSIFICATION	1.4719355513087777E-5	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9997957481929011	WITHOUT_CLASSIFICATION	2.0425180709890268E-4	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9991953218762494	WITHOUT_CLASSIFICATION	8.046781237506106E-4	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.9977160912531196	WITHOUT_CLASSIFICATION	0.0022839087468805776	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999420613285119	WITHOUT_CLASSIFICATION	5.7938671487991655E-5	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9989246810652942	WITHOUT_CLASSIFICATION	0.0010753189347058863	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9991713706608432	WITHOUT_CLASSIFICATION	8.286293391567104E-4	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.999919364315892	WITHOUT_CLASSIFICATION	8.063568410795438E-5	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9998414350966086	WITHOUT_CLASSIFICATION	1.585649033914661E-4	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9997590361758582	WITHOUT_CLASSIFICATION	2.4096382414177792E-4	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9997052119067141	WITHOUT_CLASSIFICATION	2.947880932858705E-4	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9993648557572374	WITHOUT_CLASSIFICATION	6.351442427626352E-4	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9994318145598896	WITHOUT_CLASSIFICATION	5.681854401103703E-4	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9998263757524146	WITHOUT_CLASSIFICATION	1.736242475853072E-4	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9992405343069128	WITHOUT_CLASSIFICATION	7.594656930871247E-4	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.998429788547212	WITHOUT_CLASSIFICATION	0.001570211452788082	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9989588106641349	WITHOUT_CLASSIFICATION	0.0010411893358650468	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.998528416304211	WITHOUT_CLASSIFICATION	0.0014715836957890388	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9993003298156272	WITHOUT_CLASSIFICATION	6.996701843728605E-4	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.999630998536322	WITHOUT_CLASSIFICATION	3.690014636780245E-4	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9998214121514049	WITHOUT_CLASSIFICATION	1.7858784859521568E-4	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999455133312988	WITHOUT_CLASSIFICATION	5.4486668701334566E-5	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.9989265662047052	WITHOUT_CLASSIFICATION	0.0010734337952947046	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.999825466289551	WITHOUT_CLASSIFICATION	1.7453371044892453E-4	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9994609438969481	WITHOUT_CLASSIFICATION	5.3905610305199E-4	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.999787063839893	WITHOUT_CLASSIFICATION	2.1293616010701155E-4	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9997647440142602	WITHOUT_CLASSIFICATION	2.35255985739721E-4	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9997974799628842	WITHOUT_CLASSIFICATION	2.0252003711598239E-4	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9995016898978387	WITHOUT_CLASSIFICATION	4.98310102161272E-4	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9998723456386345	WITHOUT_CLASSIFICATION	1.2765436136554536E-4	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999678623725321	WITHOUT_CLASSIFICATION	3.2137627467866566E-5	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9997350504087862	WITHOUT_CLASSIFICATION	2.649495912137172E-4	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9990496506771175	WITHOUT_CLASSIFICATION	9.503493228825361E-4	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.9996595771851547	WITHOUT_CLASSIFICATION	3.4042281484520216E-4	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9995367483666895	WITHOUT_CLASSIFICATION	4.6325163331053165E-4	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9995367483666895	WITHOUT_CLASSIFICATION	4.6325163331053165E-4	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9995367483666895	WITHOUT_CLASSIFICATION	4.6325163331053165E-4	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9998990966875219	WITHOUT_CLASSIFICATION	1.0090331247809195E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999050084353035	WITHOUT_CLASSIFICATION	9.499156469650451E-5	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9992553629089765	WITHOUT_CLASSIFICATION	7.446370910234177E-4	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9995031393683379	WITHOUT_CLASSIFICATION	4.96860631662082E-4	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9984564080487592	WITHOUT_CLASSIFICATION	0.0015435919512406832	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9988110019616301	WITHOUT_CLASSIFICATION	0.0011889980383699397	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999127332899727	WITHOUT_CLASSIFICATION	8.726671002731989E-5	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9997429359699459	WITHOUT_CLASSIFICATION	2.5706403005410557E-4	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9996508318079166	WITHOUT_CLASSIFICATION	3.4916819208341614E-4	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.999538539959823	WITHOUT_CLASSIFICATION	4.6146004017705674E-4	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9996245140762996	WITHOUT_CLASSIFICATION	3.7548592370034885E-4	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9993871051872927	WITHOUT_CLASSIFICATION	6.128948127073067E-4	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9993263349347247	WITHOUT_CLASSIFICATION	6.736650652753507E-4	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9991323060127102	WITHOUT_CLASSIFICATION	8.676939872898321E-4	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999702643077742	WITHOUT_CLASSIFICATION	2.9735692225713747E-5	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9994366411703085	WITHOUT_CLASSIFICATION	5.633588296913992E-4	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9994570150286198	WITHOUT_CLASSIFICATION	5.429849713801982E-4	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.999613617830922	WITHOUT_CLASSIFICATION	3.86382169077978E-4	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.9999767785535191	WITHOUT_CLASSIFICATION	2.3221446480869285E-5	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9998747266982103	WITHOUT_CLASSIFICATION	1.2527330178973127E-4	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9998747266982103	WITHOUT_CLASSIFICATION	1.2527330178973127E-4	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9976911911537221	WITHOUT_CLASSIFICATION	0.002308808846278028	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9997838270518098	WITHOUT_CLASSIFICATION	2.1617294819016426E-4	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9999873710443585	WITHOUT_CLASSIFICATION	1.2628955641465792E-5	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9936551980567823	WITHOUT_CLASSIFICATION	0.006344801943217746	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9996756842997673	WITHOUT_CLASSIFICATION	3.2431570023269517E-4	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9998186213576453	WITHOUT_CLASSIFICATION	1.8137864235463972E-4	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9994808913640877	WITHOUT_CLASSIFICATION	5.191086359122212E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9994808913640877	WITHOUT_CLASSIFICATION	5.191086359122212E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9997751239381237	WITHOUT_CLASSIFICATION	2.2487606187623224E-4	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9995676994592657	WITHOUT_CLASSIFICATION	4.323005407342588E-4	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9999520469599051	WITHOUT_CLASSIFICATION	4.795304009477086E-5	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.998923951016559	WITHOUT_CLASSIFICATION	0.0010760489834410018	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.9989941169662897	WITHOUT_CLASSIFICATION	0.00100588303371038	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9993698822088436	WITHOUT_CLASSIFICATION	6.301177911564153E-4	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9996895375076678	WITHOUT_CLASSIFICATION	3.104624923322584E-4	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9997579065462368	WITHOUT_CLASSIFICATION	2.4209345376330943E-4	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9998177842513963	WITHOUT_CLASSIFICATION	1.8221574860370255E-4	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9994277387811479	WITHOUT_CLASSIFICATION	5.722612188520219E-4	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9998040034708887	WITHOUT_CLASSIFICATION	1.95996529111273E-4	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9999190163104649	WITHOUT_CLASSIFICATION	8.098368953514405E-5	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9989587852691088	WITHOUT_CLASSIFICATION	0.001041214730891184	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9997409451353567	WITHOUT_CLASSIFICATION	2.590548646433092E-4	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9997346406431826	WITHOUT_CLASSIFICATION	2.653593568174154E-4	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9996758151993065	WITHOUT_CLASSIFICATION	3.2418480069345326E-4	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9993476888735701	WITHOUT_CLASSIFICATION	6.52311126429813E-4	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9997275889316718	WITHOUT_CLASSIFICATION	2.7241106832819414E-4	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.999487182078896	WITHOUT_CLASSIFICATION	5.128179211039433E-4	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.999918012858365	WITHOUT_CLASSIFICATION	8.198714163496786E-5	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9997330981618622	WITHOUT_CLASSIFICATION	2.6690183813786765E-4	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9994313796707122	WITHOUT_CLASSIFICATION	5.68620329287873E-4	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9989324078885743	WITHOUT_CLASSIFICATION	0.001067592111425734	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9990845264616431	WITHOUT_CLASSIFICATION	9.154735383568195E-4	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9990441588507878	WITHOUT_CLASSIFICATION	9.558411492121699E-4	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.999248060714597	WITHOUT_CLASSIFICATION	7.519392854029688E-4	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9998061080835012	WITHOUT_CLASSIFICATION	1.9389191649876305E-4	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999401232304885	WITHOUT_CLASSIFICATION	5.9876769511502364E-5	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9995708878841483	WITHOUT_CLASSIFICATION	4.291121158516452E-4	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9988513363004775	WITHOUT_CLASSIFICATION	0.0011486636995224901	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9997972174094656	WITHOUT_CLASSIFICATION	2.0278259053449038E-4	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.999762293034731	WITHOUT_CLASSIFICATION	2.377069652689783E-4	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9945819899702173	WITHOUT_CLASSIFICATION	0.0054180100297827	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9997821185660095	WITHOUT_CLASSIFICATION	2.1788143399043962E-4	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9928691441620773	WITHOUT_CLASSIFICATION	0.007130855837922764	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9955969293657356	WITHOUT_CLASSIFICATION	0.004403070634264466	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9990495636010717	WITHOUT_CLASSIFICATION	9.504363989283044E-4	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9996326890035027	WITHOUT_CLASSIFICATION	3.6731099649725893E-4	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9817218287113759	WITHOUT_CLASSIFICATION	0.018278171288624086	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9985488836978142	WITHOUT_CLASSIFICATION	0.0014511163021857913	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9977472349618899	WITHOUT_CLASSIFICATION	0.002252765038110224	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9998300330910627	WITHOUT_CLASSIFICATION	1.6996690893726003E-4	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9997964217906241	WITHOUT_CLASSIFICATION	2.0357820937582158E-4	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.999869958034516	WITHOUT_CLASSIFICATION	1.3004196548401214E-4	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9998824512984728	WITHOUT_CLASSIFICATION	1.1754870152723434E-4	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9996901397809518	WITHOUT_CLASSIFICATION	3.0986021904815875E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9997352807724884	WITHOUT_CLASSIFICATION	2.647192275116218E-4	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9996901397809518	WITHOUT_CLASSIFICATION	3.0986021904815875E-4	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9988880142685697	WITHOUT_CLASSIFICATION	0.0011119857314303388	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9999352000928695	WITHOUT_CLASSIFICATION	6.479990713055916E-5	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9998530788224401	WITHOUT_CLASSIFICATION	1.4692117755993878E-4	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.9981493679106682	WITHOUT_CLASSIFICATION	0.0018506320893316738	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9987332086525599	WITHOUT_CLASSIFICATION	0.0012667913474401645	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9997326292052672	WITHOUT_CLASSIFICATION	2.6737079473292705E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9933556499354113	WITHOUT_CLASSIFICATION	0.00664435006458877	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9997085714788471	WITHOUT_CLASSIFICATION	2.9142852115293015E-4	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9992519870568302	WITHOUT_CLASSIFICATION	7.480129431697883E-4	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9998987351475828	WITHOUT_CLASSIFICATION	1.0126485241715644E-4	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9996709157690745	WITHOUT_CLASSIFICATION	3.29084230925514E-4	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9949732985598915	WITHOUT_CLASSIFICATION	0.005026701440108559	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9995378964798944	WITHOUT_CLASSIFICATION	4.621035201055463E-4	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9996931196069326	WITHOUT_CLASSIFICATION	3.0688039306737757E-4	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9998733571224409	WITHOUT_CLASSIFICATION	1.2664287755906453E-4	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9997500577770936	WITHOUT_CLASSIFICATION	2.4994222290642483E-4	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9997777857180682	WITHOUT_CLASSIFICATION	2.22214281931815E-4	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.9998685369307865	WITHOUT_CLASSIFICATION	1.314630692135632E-4	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9993059296236567	WITHOUT_CLASSIFICATION	6.940703763431814E-4	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9982191092373779	WITHOUT_CLASSIFICATION	0.00178089076262212	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9997413566929942	WITHOUT_CLASSIFICATION	2.5864330700573125E-4	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999019070186204	WITHOUT_CLASSIFICATION	9.809298137970475E-5	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999633215681745	WITHOUT_CLASSIFICATION	3.667843182558778E-5	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9998592260098981	WITHOUT_CLASSIFICATION	1.40773990101895E-4	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9987304133891403	WITHOUT_CLASSIFICATION	0.0012695866108597554	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.99978053919712	WITHOUT_CLASSIFICATION	2.1946080287997755E-4	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9994534390979979	WITHOUT_CLASSIFICATION	5.465609020020382E-4	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9991970564669996	WITHOUT_CLASSIFICATION	8.029435330003343E-4	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9991650475778316	WITHOUT_CLASSIFICATION	8.349524221682297E-4	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9978309225687445	WITHOUT_CLASSIFICATION	0.0021690774312555228	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9981383030733193	WITHOUT_CLASSIFICATION	0.0018616969266807247	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9997860590275187	WITHOUT_CLASSIFICATION	2.139409724812466E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9993272436982452	WITHOUT_CLASSIFICATION	6.727563017548561E-4	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9997439573333429	WITHOUT_CLASSIFICATION	2.5604266665713835E-4	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999153353986298	WITHOUT_CLASSIFICATION	8.466460137024395E-5	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9951126781663042	WITHOUT_CLASSIFICATION	0.0048873218336957245	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9951126781663042	WITHOUT_CLASSIFICATION	0.0048873218336957245	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.999396113790125	WITHOUT_CLASSIFICATION	6.03886209874985E-4	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9997827083124459	WITHOUT_CLASSIFICATION	2.1729168755411598E-4	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9933636737505523	WITHOUT_CLASSIFICATION	0.006636326249447596	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999019070186204	WITHOUT_CLASSIFICATION	9.809298137970475E-5	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9999633215681745	WITHOUT_CLASSIFICATION	3.667843182558778E-5	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9998592260098981	WITHOUT_CLASSIFICATION	1.40773990101895E-4	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9998558749071295	WITHOUT_CLASSIFICATION	1.4412509287047733E-4	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9997599671662769	WITHOUT_CLASSIFICATION	2.4003283372310113E-4	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999590514839358	WITHOUT_CLASSIFICATION	4.094851606420757E-5	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.998620104302908	WITHOUT_CLASSIFICATION	0.0013798956970919438	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9995058637454868	WITHOUT_CLASSIFICATION	4.941362545131872E-4	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9976263296412385	WITHOUT_CLASSIFICATION	0.0023736703587614334	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9991381716808326	WITHOUT_CLASSIFICATION	8.618283191674525E-4	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9296023891769729	WITHOUT_CLASSIFICATION	0.07039761082302708	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9997429066284318	WITHOUT_CLASSIFICATION	2.570933715682246E-4	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9979283970830192	WITHOUT_CLASSIFICATION	0.002071602916980732	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9995356475304453	WITHOUT_CLASSIFICATION	4.6435246955461396E-4	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.995939587221948	WITHOUT_CLASSIFICATION	0.004060412778052043	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9996596548770001	WITHOUT_CLASSIFICATION	3.403451229998337E-4	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9997852521148768	WITHOUT_CLASSIFICATION	2.147478851233591E-4	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9997318234049924	WITHOUT_CLASSIFICATION	2.6817659500758326E-4	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9997412351290619	WITHOUT_CLASSIFICATION	2.587648709380651E-4	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9995949887013953	WITHOUT_CLASSIFICATION	4.050112986046165E-4	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9994006510299388	WITHOUT_CLASSIFICATION	5.993489700612317E-4	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.993710884526877	WITHOUT_CLASSIFICATION	0.006289115473123055	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9992727040968761	WITHOUT_CLASSIFICATION	7.272959031238588E-4	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9909836448970895	WITHOUT_CLASSIFICATION	0.009016355102910573	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9996000408047875	WITHOUT_CLASSIFICATION	3.999591952124949E-4	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9993270314134614	WITHOUT_CLASSIFICATION	6.72968586538678E-4	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.998991730474316	WITHOUT_CLASSIFICATION	0.0010082695256840714	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9992031436333891	WITHOUT_CLASSIFICATION	7.968563666109661E-4	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.9994016443602051	WITHOUT_CLASSIFICATION	5.983556397950136E-4	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9995348226338195	WITHOUT_CLASSIFICATION	4.651773661803928E-4	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9973496689134771	WITHOUT_CLASSIFICATION	0.0026503310865228493	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.999326254119419	WITHOUT_CLASSIFICATION	6.737458805810169E-4	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9992846822943714	WITHOUT_CLASSIFICATION	7.153177056286439E-4	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9992846822943714	WITHOUT_CLASSIFICATION	7.153177056286439E-4	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9995543380116695	WITHOUT_CLASSIFICATION	4.4566198833053896E-4	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9991542965564671	WITHOUT_CLASSIFICATION	8.457034435328496E-4	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9997440840338193	WITHOUT_CLASSIFICATION	2.559159661806722E-4	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9991203071829395	WITHOUT_CLASSIFICATION	8.796928170604155E-4	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9962745815652795	WITHOUT_CLASSIFICATION	0.003725418434720565	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9993518204344051	WITHOUT_CLASSIFICATION	6.481795655948419E-4	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.9995957690374336	WITHOUT_CLASSIFICATION	4.042309625663523E-4	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9997011912344272	WITHOUT_CLASSIFICATION	2.9880876557267303E-4	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9997202565678192	WITHOUT_CLASSIFICATION	2.797434321808055E-4	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9985381306469194	WITHOUT_CLASSIFICATION	0.0014618693530805689	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9997497604665363	WITHOUT_CLASSIFICATION	2.5023953346364855E-4	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9997044968797852	WITHOUT_CLASSIFICATION	2.955031202147684E-4	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9995770753797131	WITHOUT_CLASSIFICATION	4.22924620286928E-4	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.999709502260153	WITHOUT_CLASSIFICATION	2.904977398469922E-4	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.999672680558732	WITHOUT_CLASSIFICATION	3.273194412679283E-4	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9993041505237378	WITHOUT_CLASSIFICATION	6.958494762623478E-4	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9973174241602653	WITHOUT_CLASSIFICATION	0.002682575839734796	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.9998753136332837	WITHOUT_CLASSIFICATION	1.2468636671634332E-4	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9997272598085876	WITHOUT_CLASSIFICATION	2.727401914124247E-4	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9997162813755508	WITHOUT_CLASSIFICATION	2.837186244491703E-4	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.999658041226201	WITHOUT_CLASSIFICATION	3.4195877379900985E-4	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999186628342667	WITHOUT_CLASSIFICATION	8.133716573332033E-5	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9883379657906866	WITHOUT_CLASSIFICATION	0.011662034209313514	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9883379657906866	WITHOUT_CLASSIFICATION	0.011662034209313514	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999186628342667	WITHOUT_CLASSIFICATION	8.133716573332033E-5	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999218696038484	WITHOUT_CLASSIFICATION	7.813039615149064E-5	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.999952735926052	WITHOUT_CLASSIFICATION	4.726407394795192E-5	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9998469108937369	WITHOUT_CLASSIFICATION	1.5308910626310863E-4	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9998388162025189	WITHOUT_CLASSIFICATION	1.6118379748117392E-4	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.999456256779957	WITHOUT_CLASSIFICATION	5.437432200430523E-4	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9998147254620303	WITHOUT_CLASSIFICATION	1.8527453796962864E-4	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9998205861264498	WITHOUT_CLASSIFICATION	1.7941387355021958E-4	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9997292628998433	WITHOUT_CLASSIFICATION	2.7073710015662313E-4	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9989872900600968	WITHOUT_CLASSIFICATION	0.0010127099399032551	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9996912520760562	WITHOUT_CLASSIFICATION	3.0874792394377354E-4	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9997217934621059	WITHOUT_CLASSIFICATION	2.782065378941571E-4	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9996450811413733	WITHOUT_CLASSIFICATION	3.5491885862662745E-4	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9998178908848836	WITHOUT_CLASSIFICATION	1.8210911511635678E-4	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.998389166814634	WITHOUT_CLASSIFICATION	0.001610833185366003	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.999701390809855	WITHOUT_CLASSIFICATION	2.9860919014497076E-4	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9997056241969724	WITHOUT_CLASSIFICATION	2.943758030275533E-4	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9997056241969724	WITHOUT_CLASSIFICATION	2.943758030275533E-4	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9896615670957509	WITHOUT_CLASSIFICATION	0.010338432904249009	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.999913199953656	WITHOUT_CLASSIFICATION	8.680004634391518E-5	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9991919705838133	WITHOUT_CLASSIFICATION	8.08029416186724E-4	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9997362420274607	WITHOUT_CLASSIFICATION	2.637579725392381E-4	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.9991692811113442	WITHOUT_CLASSIFICATION	8.307188886558967E-4	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9991552652207725	WITHOUT_CLASSIFICATION	8.447347792274766E-4	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9997044751966655	WITHOUT_CLASSIFICATION	2.9552480333455884E-4	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.999251774343192	WITHOUT_CLASSIFICATION	7.482256568080226E-4	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9997162365996853	WITHOUT_CLASSIFICATION	2.837634003146271E-4	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9997974910954887	WITHOUT_CLASSIFICATION	2.0250890451136065E-4	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.999825588998359	WITHOUT_CLASSIFICATION	1.744110016409234E-4	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9996784641436615	WITHOUT_CLASSIFICATION	3.215358563385202E-4	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9997548041815596	WITHOUT_CLASSIFICATION	2.451958184404158E-4	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9997365005001551	WITHOUT_CLASSIFICATION	2.634994998449373E-4	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9995620382000872	WITHOUT_CLASSIFICATION	4.379617999128533E-4	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9997523868701024	WITHOUT_CLASSIFICATION	2.476131298976286E-4	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9997316909345747	WITHOUT_CLASSIFICATION	2.683090654252451E-4	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9930266852980045	WITHOUT_CLASSIFICATION	0.006973314701995464	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9995710369848401	WITHOUT_CLASSIFICATION	4.2896301515995747E-4	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9998579341980772	WITHOUT_CLASSIFICATION	1.420658019228047E-4	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9994571224716394	WITHOUT_CLASSIFICATION	5.428775283605438E-4	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.988267680743787	WITHOUT_CLASSIFICATION	0.011732319256212962	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9992928558825948	WITHOUT_CLASSIFICATION	7.071441174052909E-4	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9992934000615538	WITHOUT_CLASSIFICATION	7.065999384462411E-4	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999771763399325	WITHOUT_CLASSIFICATION	2.2823660067401634E-5	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9999083183841464	WITHOUT_CLASSIFICATION	9.168161585365528E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9995766362033561	WITHOUT_CLASSIFICATION	4.2336379664382795E-4	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9990315765045156	WITHOUT_CLASSIFICATION	9.684234954843041E-4	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9990315765045156	WITHOUT_CLASSIFICATION	9.684234954843041E-4	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9994446560498149	WITHOUT_CLASSIFICATION	5.553439501850863E-4	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.9984757556883161	WITHOUT_CLASSIFICATION	0.001524244311683839	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9992755436742975	WITHOUT_CLASSIFICATION	7.244563257025781E-4	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9995407572006041	WITHOUT_CLASSIFICATION	4.5924279939595926E-4	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9990882213991971	WITHOUT_CLASSIFICATION	9.117786008028725E-4	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.9998935004936931	WITHOUT_CLASSIFICATION	1.0649950630702042E-4	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9976880318648539	WITHOUT_CLASSIFICATION	0.0023119681351459935	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9991694796560051	WITHOUT_CLASSIFICATION	8.305203439948743E-4	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.999803355048064	WITHOUT_CLASSIFICATION	1.9664495193602447E-4	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.999432130094643	WITHOUT_CLASSIFICATION	5.678699053568822E-4	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9999522232041784	WITHOUT_CLASSIFICATION	4.777679582155456E-5	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9998449363910255	WITHOUT_CLASSIFICATION	1.5506360897457394E-4	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9997764530336308	WITHOUT_CLASSIFICATION	2.235469663692073E-4	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.999583817212223	WITHOUT_CLASSIFICATION	4.161827877770024E-4	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9996721833776134	WITHOUT_CLASSIFICATION	3.278166223865649E-4	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9996889194720561	WITHOUT_CLASSIFICATION	3.1108052794390575E-4	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9996357624057578	WITHOUT_CLASSIFICATION	3.642375942421034E-4	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9986057818164372	WITHOUT_CLASSIFICATION	0.0013942181835626907	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9994042566527813	WITHOUT_CLASSIFICATION	5.957433472187209E-4	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9998861710736379	WITHOUT_CLASSIFICATION	1.1382892636220952E-4	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9996683114663052	WITHOUT_CLASSIFICATION	3.316885336948496E-4	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9997123960030746	WITHOUT_CLASSIFICATION	2.8760399692538756E-4	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9993984720117225	WITHOUT_CLASSIFICATION	6.015279882774493E-4	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9995248482691077	WITHOUT_CLASSIFICATION	4.7515173089230815E-4	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9998756099007287	WITHOUT_CLASSIFICATION	1.2439009927129867E-4	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.999806034180925	WITHOUT_CLASSIFICATION	1.9396581907496244E-4	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9996071699018422	WITHOUT_CLASSIFICATION	3.9283009815777584E-4	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.999678989322354	WITHOUT_CLASSIFICATION	3.2101067764605276E-4	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9991998342588452	WITHOUT_CLASSIFICATION	8.00165741154819E-4	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9998969841450496	WITHOUT_CLASSIFICATION	1.0301585495047656E-4	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9996654234280528	WITHOUT_CLASSIFICATION	3.345765719472746E-4	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9991322282190341	WITHOUT_CLASSIFICATION	8.677717809658285E-4	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.999487485928671	WITHOUT_CLASSIFICATION	5.125140713290141E-4	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9993194332239808	WITHOUT_CLASSIFICATION	6.805667760192367E-4	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999473853640689	WITHOUT_CLASSIFICATION	5.261463593114936E-5	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9992011016610629	WITHOUT_CLASSIFICATION	7.98898338937241E-4	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9997955544047704	WITHOUT_CLASSIFICATION	2.044455952294367E-4	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9997332909149076	WITHOUT_CLASSIFICATION	2.6670908509245637E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999054217302991	WITHOUT_CLASSIFICATION	9.457826970096837E-5	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997863036640309	WITHOUT_CLASSIFICATION	2.1369633596920461E-4	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9993284696416395	WITHOUT_CLASSIFICATION	6.715303583605547E-4	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9975986133244311	WITHOUT_CLASSIFICATION	0.002401386675568931	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9998673609241404	WITHOUT_CLASSIFICATION	1.3263907585949044E-4	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9996992408402666	WITHOUT_CLASSIFICATION	3.007591597332717E-4	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9987148898284334	WITHOUT_CLASSIFICATION	0.001285110171566584	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.999282316181491	WITHOUT_CLASSIFICATION	7.176838185090823E-4	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.9983381631066994	WITHOUT_CLASSIFICATION	0.0016618368933005944	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999483050061883	WITHOUT_CLASSIFICATION	5.169499381178805E-5	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9980500769166653	WITHOUT_CLASSIFICATION	0.0019499230833348005	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9997022229833635	WITHOUT_CLASSIFICATION	2.977770166363826E-4	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9995148164316127	WITHOUT_CLASSIFICATION	4.8518356838732693E-4	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9998820362395556	WITHOUT_CLASSIFICATION	1.1796376044433509E-4	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9994151734845835	WITHOUT_CLASSIFICATION	5.848265154165872E-4	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9990878901338602	WITHOUT_CLASSIFICATION	9.121098661396392E-4	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9998374397652692	WITHOUT_CLASSIFICATION	1.6256023473087353E-4	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9995040738208746	WITHOUT_CLASSIFICATION	4.959261791253295E-4	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9998327228426093	WITHOUT_CLASSIFICATION	1.6727715739076092E-4	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.999690440112638	WITHOUT_CLASSIFICATION	3.0955988736212074E-4	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999405077283189	WITHOUT_CLASSIFICATION	5.9492271681007354E-5	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9993973799930185	WITHOUT_CLASSIFICATION	6.026200069815472E-4	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.999823483620458	WITHOUT_CLASSIFICATION	1.7651637954195853E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997258162508892	WITHOUT_CLASSIFICATION	2.741837491108558E-4	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9996012589692933	WITHOUT_CLASSIFICATION	3.9874103070671694E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9964259186992688	WITHOUT_CLASSIFICATION	0.0035740813007313185	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9988048125790525	WITHOUT_CLASSIFICATION	0.001195187420947391	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999059531919594	WITHOUT_CLASSIFICATION	9.40468080406033E-5	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9997316169444319	WITHOUT_CLASSIFICATION	2.6838305556806184E-4	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9998283228774278	WITHOUT_CLASSIFICATION	1.7167712257213884E-4	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9997904026444409	WITHOUT_CLASSIFICATION	2.095973555591083E-4	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9992937343731312	WITHOUT_CLASSIFICATION	7.062656268688403E-4	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9995216507502428	WITHOUT_CLASSIFICATION	4.783492497571851E-4	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9993713223459183	WITHOUT_CLASSIFICATION	6.286776540816389E-4	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9995531832872228	WITHOUT_CLASSIFICATION	4.4681671277726765E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9855438646712604	WITHOUT_CLASSIFICATION	0.014456135328739461	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999797679838824	WITHOUT_CLASSIFICATION	2.0232016117535575E-5	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9994358484170875	WITHOUT_CLASSIFICATION	5.641515829124205E-4	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9996307674092517	WITHOUT_CLASSIFICATION	3.6923259074835105E-4	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9997474200131315	WITHOUT_CLASSIFICATION	2.5257998686851205E-4	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9996630867813399	WITHOUT_CLASSIFICATION	3.3691321866015166E-4	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9997705678509096	WITHOUT_CLASSIFICATION	2.2943214909055805E-4	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9997267568968824	WITHOUT_CLASSIFICATION	2.732431031175597E-4	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9992469976486659	WITHOUT_CLASSIFICATION	7.530023513341883E-4	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.9998732921712716	WITHOUT_CLASSIFICATION	1.2670782872838116E-4	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9997927795247187	WITHOUT_CLASSIFICATION	2.0722047528138026E-4	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9994183910607466	WITHOUT_CLASSIFICATION	5.816089392533051E-4	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9997787661453466	WITHOUT_CLASSIFICATION	2.2123385465346257E-4	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.9997620451808928	WITHOUT_CLASSIFICATION	2.3795481910712983E-4	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999840411650898	WITHOUT_CLASSIFICATION	1.595883491019464E-5	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9993304161914213	WITHOUT_CLASSIFICATION	6.695838085786551E-4	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9993325771162012	WITHOUT_CLASSIFICATION	6.67422883798718E-4	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999871467216627	WITHOUT_CLASSIFICATION	1.2853278337394213E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9991166223605822	WITHOUT_CLASSIFICATION	8.833776394179209E-4	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.999563197824682	WITHOUT_CLASSIFICATION	4.3680217531806033E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9997432962986076	WITHOUT_CLASSIFICATION	2.567037013923419E-4	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999865196174192	WITHOUT_CLASSIFICATION	1.3480382580772932E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9998800419482541	WITHOUT_CLASSIFICATION	1.199580517460207E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997236207789241	WITHOUT_CLASSIFICATION	2.763792210759633E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997236207789241	WITHOUT_CLASSIFICATION	2.763792210759633E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999901062998349	WITHOUT_CLASSIFICATION	9.893700165044234E-6	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.99980552536362	WITHOUT_CLASSIFICATION	1.944746363799869E-4	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9998030931459649	WITHOUT_CLASSIFICATION	1.9690685403511127E-4	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999901062998349	WITHOUT_CLASSIFICATION	9.893700165044234E-6	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9998408740764612	WITHOUT_CLASSIFICATION	1.59125923538801E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9997432962986076	WITHOUT_CLASSIFICATION	2.567037013923419E-4	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9997432962986076	WITHOUT_CLASSIFICATION	2.567037013923419E-4	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997236207789241	WITHOUT_CLASSIFICATION	2.763792210759633E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997236207789241	WITHOUT_CLASSIFICATION	2.763792210759633E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999872373871421	WITHOUT_CLASSIFICATION	1.2762612857972057E-5	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.9990226576917568	WITHOUT_CLASSIFICATION	9.773423082430953E-4	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999901062998349	WITHOUT_CLASSIFICATION	9.893700165044234E-6	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9995457948628	WITHOUT_CLASSIFICATION	4.5420513719989983E-4	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999715382327741	WITHOUT_CLASSIFICATION	2.846176722590998E-5	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9998278837993884	WITHOUT_CLASSIFICATION	1.7211620061155093E-4	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999865196174192	WITHOUT_CLASSIFICATION	1.3480382580772932E-5	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997236207789241	WITHOUT_CLASSIFICATION	2.763792210759633E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997236207789241	WITHOUT_CLASSIFICATION	2.763792210759633E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999901062998349	WITHOUT_CLASSIFICATION	9.893700165044234E-6	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9998030931459649	WITHOUT_CLASSIFICATION	1.9690685403511127E-4	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9998030931459649	WITHOUT_CLASSIFICATION	1.9690685403511127E-4	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9998408740764612	WITHOUT_CLASSIFICATION	1.59125923538801E-4	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9994466627590158	WITHOUT_CLASSIFICATION	5.533372409842468E-4	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999901062998349	WITHOUT_CLASSIFICATION	9.893700165044234E-6	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9996545580126205	WITHOUT_CLASSIFICATION	3.4544198737954606E-4	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997236207789241	WITHOUT_CLASSIFICATION	2.763792210759633E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9998030931459649	WITHOUT_CLASSIFICATION	1.9690685403511127E-4	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999872373871421	WITHOUT_CLASSIFICATION	1.2762612857972057E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999715382327741	WITHOUT_CLASSIFICATION	2.846176722590998E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999715382327741	WITHOUT_CLASSIFICATION	2.846176722590998E-5	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9998278837993884	WITHOUT_CLASSIFICATION	1.7211620061155093E-4	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999871620648282	WITHOUT_CLASSIFICATION	1.2837935171936318E-5	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9996740004397787	WITHOUT_CLASSIFICATION	3.2599956022129367E-4	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999901062998349	WITHOUT_CLASSIFICATION	9.893700165044234E-6	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9996764209655018	WITHOUT_CLASSIFICATION	3.2357903449816805E-4	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9997430743456232	WITHOUT_CLASSIFICATION	2.56925654376898E-4	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9997405176717424	WITHOUT_CLASSIFICATION	2.5948232825747546E-4	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9996276704974111	WITHOUT_CLASSIFICATION	3.7232950258890834E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9997725178456442	WITHOUT_CLASSIFICATION	2.274821543557623E-4	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9944682121611886	WITHOUT_CLASSIFICATION	0.005531787838811289	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999361787701384	WITHOUT_CLASSIFICATION	6.382122986160176E-5	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9998369585603135	WITHOUT_CLASSIFICATION	1.6304143968639144E-4	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9997117231296736	WITHOUT_CLASSIFICATION	2.882768703264114E-4	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9992444010898558	WITHOUT_CLASSIFICATION	7.555989101442653E-4	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9998924833587773	WITHOUT_CLASSIFICATION	1.075166412226268E-4	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9998924833587773	WITHOUT_CLASSIFICATION	1.075166412226268E-4	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9998924833587773	WITHOUT_CLASSIFICATION	1.075166412226268E-4	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9998924833587773	WITHOUT_CLASSIFICATION	1.075166412226268E-4	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9998127310832422	WITHOUT_CLASSIFICATION	1.8726891675776994E-4	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9993585838809899	WITHOUT_CLASSIFICATION	6.414161190101552E-4	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9993991992482351	WITHOUT_CLASSIFICATION	6.008007517649626E-4	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9740225044901352	WITHOUT_CLASSIFICATION	0.02597749550986484	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9993859314235366	WITHOUT_CLASSIFICATION	6.140685764633211E-4	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9997085535068465	WITHOUT_CLASSIFICATION	2.9144649315351423E-4	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.999608055046495	WITHOUT_CLASSIFICATION	3.919449535049698E-4	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9990219987223101	WITHOUT_CLASSIFICATION	9.780012776899078E-4	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9995997853596078	WITHOUT_CLASSIFICATION	4.002146403921425E-4	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.999265109957036	WITHOUT_CLASSIFICATION	7.348900429640156E-4	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999178291786883	WITHOUT_CLASSIFICATION	8.217082131165072E-5	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9997349586837073	WITHOUT_CLASSIFICATION	2.650413162927455E-4	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.998521812272888	WITHOUT_CLASSIFICATION	0.0014781877271119264	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9996710761584723	WITHOUT_CLASSIFICATION	3.28923841527712E-4	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9997725178456442	WITHOUT_CLASSIFICATION	2.274821543557623E-4	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9997752256950777	WITHOUT_CLASSIFICATION	2.2477430492237726E-4	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9998012930376345	WITHOUT_CLASSIFICATION	1.9870696236551745E-4	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9997813667783735	WITHOUT_CLASSIFICATION	2.1863322162642127E-4	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9998325492539115	WITHOUT_CLASSIFICATION	1.6745074608859022E-4	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9997432962986076	WITHOUT_CLASSIFICATION	2.567037013923419E-4	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9996357004852807	WITHOUT_CLASSIFICATION	3.6429951471933346E-4	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9999203847671938	WITHOUT_CLASSIFICATION	7.961523280611408E-5	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.99975602648197	WITHOUT_CLASSIFICATION	2.4397351802996653E-4	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9991361355765551	WITHOUT_CLASSIFICATION	8.638644234449395E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.998238427000757	WITHOUT_CLASSIFICATION	0.0017615729992429558	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.998238427000757	WITHOUT_CLASSIFICATION	0.0017615729992429558	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.999847087118588	WITHOUT_CLASSIFICATION	1.5291288141190877E-4	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.999085123889394	WITHOUT_CLASSIFICATION	9.148761106059371E-4	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.9996376114404314	WITHOUT_CLASSIFICATION	3.623885595685619E-4	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9997037972531347	WITHOUT_CLASSIFICATION	2.9620274686529646E-4	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9827572141572443	WITHOUT_CLASSIFICATION	0.01724278584275563	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9997838795378075	WITHOUT_CLASSIFICATION	2.1612046219259505E-4	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9992307271301586	WITHOUT_CLASSIFICATION	7.692728698414375E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9990353982017357	WITHOUT_CLASSIFICATION	9.646017982641617E-4	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9990353982017357	WITHOUT_CLASSIFICATION	9.646017982641617E-4	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9993864023099978	WITHOUT_CLASSIFICATION	6.135976900022305E-4	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.9990353982017357	WITHOUT_CLASSIFICATION	9.646017982641617E-4	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9995279233933785	WITHOUT_CLASSIFICATION	4.720766066215705E-4	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9996491273288259	WITHOUT_CLASSIFICATION	3.5087267117406225E-4	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.999837130651818	WITHOUT_CLASSIFICATION	1.6286934818203906E-4	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9983335504880683	WITHOUT_CLASSIFICATION	0.0016664495119316919	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9997450147834009	WITHOUT_CLASSIFICATION	2.549852165991456E-4	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.999613739349741	WITHOUT_CLASSIFICATION	3.862606502590031E-4	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9992944538237242	WITHOUT_CLASSIFICATION	7.055461762758134E-4	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9990236217511942	WITHOUT_CLASSIFICATION	9.763782488058332E-4	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9976844670862077	WITHOUT_CLASSIFICATION	0.0023155329137922198	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9977679095223884	WITHOUT_CLASSIFICATION	0.0022320904776115917	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9998012930376345	WITHOUT_CLASSIFICATION	1.9870696236551745E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.998238427000757	WITHOUT_CLASSIFICATION	0.0017615729992429558	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.998238427000757	WITHOUT_CLASSIFICATION	0.0017615729992429558	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.999085123889394	WITHOUT_CLASSIFICATION	9.148761106059371E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9960515354834398	WITHOUT_CLASSIFICATION	0.003948464516560127	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9995018480565033	WITHOUT_CLASSIFICATION	4.981519434967223E-4	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.9994032345649515	WITHOUT_CLASSIFICATION	5.967654350485323E-4	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9996915590881572	WITHOUT_CLASSIFICATION	3.0844091184282206E-4	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9991548592751529	WITHOUT_CLASSIFICATION	8.451407248471557E-4	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9992392752917784	WITHOUT_CLASSIFICATION	7.607247082216424E-4	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9989610050605688	WITHOUT_CLASSIFICATION	0.0010389949394311259	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999045697617897	WITHOUT_CLASSIFICATION	9.543023821031973E-5	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9995207848569077	WITHOUT_CLASSIFICATION	4.792151430923258E-4	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.9999265061005814	WITHOUT_CLASSIFICATION	7.349389941862036E-5	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9997873900685339	WITHOUT_CLASSIFICATION	2.1260993146619549E-4	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.999948245272624	WITHOUT_CLASSIFICATION	5.17547273758456E-5	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.999844060813203	WITHOUT_CLASSIFICATION	1.5593918679699794E-4	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9997384720653787	WITHOUT_CLASSIFICATION	2.615279346212848E-4	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999904263975788	WITHOUT_CLASSIFICATION	9.573602421176575E-6	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9998158299555674	WITHOUT_CLASSIFICATION	1.841700444326597E-4	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.9998136177074916	WITHOUT_CLASSIFICATION	1.8638229250842362E-4	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9989307433764807	WITHOUT_CLASSIFICATION	0.0010692566235192638	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.999733791151442	WITHOUT_CLASSIFICATION	2.662088485580205E-4	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999724435995608	WITHOUT_CLASSIFICATION	2.7556400439124092E-5	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9998290454195828	WITHOUT_CLASSIFICATION	1.709545804171569E-4	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999244819474526	WITHOUT_CLASSIFICATION	7.551805254733107E-5	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9998882592278151	WITHOUT_CLASSIFICATION	1.1174077218485818E-4	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.999320738694379	WITHOUT_CLASSIFICATION	6.792613056209658E-4	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9999196340321076	WITHOUT_CLASSIFICATION	8.036596789242245E-5	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.999909959742124	WITHOUT_CLASSIFICATION	9.004025787587995E-5	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9999194665864425	WITHOUT_CLASSIFICATION	8.053341355748455E-5	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9998328251977008	WITHOUT_CLASSIFICATION	1.6717480229917915E-4	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9999454166631795	WITHOUT_CLASSIFICATION	5.4583336820579405E-5	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9998328251977008	WITHOUT_CLASSIFICATION	1.6717480229917915E-4	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999647621927146	WITHOUT_CLASSIFICATION	3.523780728532415E-5	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9998770467386286	WITHOUT_CLASSIFICATION	1.2295326137122696E-4	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9991025237122605	WITHOUT_CLASSIFICATION	8.974762877394216E-4	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.999653694417174	WITHOUT_CLASSIFICATION	3.463055828259951E-4	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9997845339597501	WITHOUT_CLASSIFICATION	2.1546604024999234E-4	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.999735868885954	WITHOUT_CLASSIFICATION	2.6413111404597066E-4	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999373916363463	WITHOUT_CLASSIFICATION	6.260836365370346E-5	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9991025237122605	WITHOUT_CLASSIFICATION	8.974762877394216E-4	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999410021675569	WITHOUT_CLASSIFICATION	5.899783244311593E-5	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999260045884103	WITHOUT_CLASSIFICATION	7.399541158964839E-5	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999404302268936	WITHOUT_CLASSIFICATION	5.956977310640169E-5	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9996989454642151	WITHOUT_CLASSIFICATION	3.0105453578498044E-4	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9996399259893112	WITHOUT_CLASSIFICATION	3.600740106888285E-4	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9996447747936691	WITHOUT_CLASSIFICATION	3.552252063309337E-4	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.9996315198502063	WITHOUT_CLASSIFICATION	3.684801497937673E-4	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9995885224020237	WITHOUT_CLASSIFICATION	4.1147759797635885E-4	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999879807909887	WITHOUT_CLASSIFICATION	1.2019209011418305E-5	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9993800600230082	WITHOUT_CLASSIFICATION	6.199399769918197E-4	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9995924030568769	WITHOUT_CLASSIFICATION	4.075969431230978E-4	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9991878771339098	WITHOUT_CLASSIFICATION	8.121228660902821E-4	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.9991345765027815	WITHOUT_CLASSIFICATION	8.654234972184851E-4	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9991025237122605	WITHOUT_CLASSIFICATION	8.974762877394216E-4	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.999896692971185	WITHOUT_CLASSIFICATION	1.0330702881507201E-4	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9991025237122605	WITHOUT_CLASSIFICATION	8.974762877394216E-4	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9996903988267677	WITHOUT_CLASSIFICATION	3.096011732323455E-4	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9995791517143362	WITHOUT_CLASSIFICATION	4.208482856638268E-4	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9998074693662167	WITHOUT_CLASSIFICATION	1.9253063378346446E-4	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9998074693662167	WITHOUT_CLASSIFICATION	1.9253063378346446E-4	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.999465984228308	WITHOUT_CLASSIFICATION	5.340157716919788E-4	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.999465984228308	WITHOUT_CLASSIFICATION	5.340157716919788E-4	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9988978908039451	WITHOUT_CLASSIFICATION	0.0011021091960549054	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9988978908039451	WITHOUT_CLASSIFICATION	0.0011021091960549054	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999868272079221	WITHOUT_CLASSIFICATION	1.317279207790188E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999868272079221	WITHOUT_CLASSIFICATION	1.317279207790188E-4	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999567827235624	WITHOUT_CLASSIFICATION	4.321727643755519E-5	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999156175102559	WITHOUT_CLASSIFICATION	8.438248974403159E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9998487346751842	WITHOUT_CLASSIFICATION	1.5126532481585608E-4	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9998487346751842	WITHOUT_CLASSIFICATION	1.5126532481585608E-4	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999503722434065	WITHOUT_CLASSIFICATION	4.9627756593523405E-5	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9998238985506934	WITHOUT_CLASSIFICATION	1.7610144930650141E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999868272079221	WITHOUT_CLASSIFICATION	1.317279207790188E-4	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9998487346751842	WITHOUT_CLASSIFICATION	1.5126532481585608E-4	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999031015270873	WITHOUT_CLASSIFICATION	9.689847291274513E-5	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9997963579471146	WITHOUT_CLASSIFICATION	2.0364205288527643E-4	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9980075173612817	WITHOUT_CLASSIFICATION	0.001992482638718231	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9998238528701825	WITHOUT_CLASSIFICATION	1.7614712981740862E-4	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9994657963844704	WITHOUT_CLASSIFICATION	5.342036155295372E-4	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.9997885738460984	WITHOUT_CLASSIFICATION	2.1142615390156756E-4	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9996774671945621	WITHOUT_CLASSIFICATION	3.225328054378653E-4	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999108143133484	WITHOUT_CLASSIFICATION	8.918568665156209E-5	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9997714639727258	WITHOUT_CLASSIFICATION	2.2853602727424896E-4	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.9999028921049371	WITHOUT_CLASSIFICATION	9.7107895062865E-5	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9994443962385547	WITHOUT_CLASSIFICATION	5.556037614451995E-4	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9998979182755388	WITHOUT_CLASSIFICATION	1.0208172446116334E-4	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9997972761694999	WITHOUT_CLASSIFICATION	2.0272383050007366E-4	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9996764846501545	WITHOUT_CLASSIFICATION	3.235153498454924E-4	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9997990413283004	WITHOUT_CLASSIFICATION	2.0095867169944907E-4	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9891658828671327	WITHOUT_CLASSIFICATION	0.010834117132867326	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9997439076031456	WITHOUT_CLASSIFICATION	2.5609239685451195E-4	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9995096955425848	WITHOUT_CLASSIFICATION	4.903044574151269E-4	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.999953663576203	WITHOUT_CLASSIFICATION	4.633642379706779E-5	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9998047115374974	WITHOUT_CLASSIFICATION	1.9528846250260013E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9980075173612817	WITHOUT_CLASSIFICATION	0.001992482638718231	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9990768927667211	WITHOUT_CLASSIFICATION	9.231072332789796E-4	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9994697030640979	WITHOUT_CLASSIFICATION	5.30296935902054E-4	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9997337726012975	WITHOUT_CLASSIFICATION	2.6622739870246125E-4	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9998328251977008	WITHOUT_CLASSIFICATION	1.6717480229917915E-4	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9998328251977008	WITHOUT_CLASSIFICATION	1.6717480229917915E-4	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9998802263983075	WITHOUT_CLASSIFICATION	1.1977360169248806E-4	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9994375853344539	WITHOUT_CLASSIFICATION	5.624146655461649E-4	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9995244436327816	WITHOUT_CLASSIFICATION	4.755563672184999E-4	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.999848176719872	WITHOUT_CLASSIFICATION	1.5182328012803276E-4	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9995365504097071	WITHOUT_CLASSIFICATION	4.634495902928749E-4	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.9996446673420576	WITHOUT_CLASSIFICATION	3.553326579423837E-4	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9996707663039076	WITHOUT_CLASSIFICATION	3.2923369609236784E-4	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.998883683970329	WITHOUT_CLASSIFICATION	0.001116316029671007	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9996282588269081	WITHOUT_CLASSIFICATION	3.7174117309190244E-4	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.999700174874605	WITHOUT_CLASSIFICATION	2.9982512539505413E-4	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9996604691245728	WITHOUT_CLASSIFICATION	3.3953087542715985E-4	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9995957860516167	WITHOUT_CLASSIFICATION	4.0421394838337975E-4	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.999878669973132	WITHOUT_CLASSIFICATION	1.2133002686795425E-4	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9997131044180773	WITHOUT_CLASSIFICATION	2.8689558192275533E-4	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9959196316483213	WITHOUT_CLASSIFICATION	0.004080368351678752	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999571209401503	WITHOUT_CLASSIFICATION	4.287905984972221E-5	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9998556023008343	WITHOUT_CLASSIFICATION	1.4439769916579735E-4	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9959743992238351	WITHOUT_CLASSIFICATION	0.004025600776164817	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9997471167672616	WITHOUT_CLASSIFICATION	2.528832327385237E-4	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.999880307986606	WITHOUT_CLASSIFICATION	1.1969201339406665E-4	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9992667867299865	WITHOUT_CLASSIFICATION	7.332132700135233E-4	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.9999442590325345	WITHOUT_CLASSIFICATION	5.574096746555774E-5	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9997514514940088	WITHOUT_CLASSIFICATION	2.485485059912327E-4	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9998261651158525	WITHOUT_CLASSIFICATION	1.7383488414741795E-4	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9994841589266772	WITHOUT_CLASSIFICATION	5.158410733228454E-4	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9998715889092511	WITHOUT_CLASSIFICATION	1.284110907488584E-4	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9996271535996823	WITHOUT_CLASSIFICATION	3.7284640031770046E-4	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9996284559616756	WITHOUT_CLASSIFICATION	3.715440383243619E-4	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9996502153214337	WITHOUT_CLASSIFICATION	3.4978467856630976E-4	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9997081297281484	WITHOUT_CLASSIFICATION	2.918702718517058E-4	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.999818653917668	WITHOUT_CLASSIFICATION	1.8134608233200776E-4	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999688819211379	WITHOUT_CLASSIFICATION	3.1118078862167945E-5	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9998276207444654	WITHOUT_CLASSIFICATION	1.7237925553455932E-4	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.9997199781587343	WITHOUT_CLASSIFICATION	2.800218412656534E-4	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9998420865680044	WITHOUT_CLASSIFICATION	1.5791343199559544E-4	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9997584200778914	WITHOUT_CLASSIFICATION	2.4157992210850377E-4	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9998592283989062	WITHOUT_CLASSIFICATION	1.4077160109384463E-4	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9997628826664295	WITHOUT_CLASSIFICATION	2.3711733357049527E-4	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9997663479776221	WITHOUT_CLASSIFICATION	2.336520223778549E-4	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.999748793082726	WITHOUT_CLASSIFICATION	2.5120691727394725E-4	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9996582888101576	WITHOUT_CLASSIFICATION	3.417111898423821E-4	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9997175333823456	WITHOUT_CLASSIFICATION	2.8246661765437176E-4	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9997976830047559	WITHOUT_CLASSIFICATION	2.0231699524408944E-4	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9998872025034501	WITHOUT_CLASSIFICATION	1.127974965499426E-4	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9989963973362583	WITHOUT_CLASSIFICATION	0.0010036026637416486	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9997615199236453	WITHOUT_CLASSIFICATION	2.384800763548133E-4	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9988978908039451	WITHOUT_CLASSIFICATION	0.0011021091960549054	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9976401655027747	WITHOUT_CLASSIFICATION	0.0023598344972252847	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9995365504097071	WITHOUT_CLASSIFICATION	4.634495902928749E-4	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9995404552636733	WITHOUT_CLASSIFICATION	4.595447363266888E-4	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9997203806591032	WITHOUT_CLASSIFICATION	2.7961934089678876E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9997384905036841	WITHOUT_CLASSIFICATION	2.615094963158123E-4	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9996410027773075	WITHOUT_CLASSIFICATION	3.5899722269255315E-4	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9998199774768861	WITHOUT_CLASSIFICATION	1.8002252311384966E-4	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9995393618362326	WITHOUT_CLASSIFICATION	4.606381637673905E-4	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.999931566031107	WITHOUT_CLASSIFICATION	6.843396889297274E-5	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9993268215570462	WITHOUT_CLASSIFICATION	6.731784429538202E-4	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9978562861752446	WITHOUT_CLASSIFICATION	0.002143713824755488	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9978459893131546	WITHOUT_CLASSIFICATION	0.0021540106868454386	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.998663225097264	WITHOUT_CLASSIFICATION	0.001336774902736025	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9997463149417251	WITHOUT_CLASSIFICATION	2.53685058275013E-4	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9998708672576044	WITHOUT_CLASSIFICATION	1.291327423955407E-4	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9998523756147518	WITHOUT_CLASSIFICATION	1.4762438524806366E-4	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9979661479816151	WITHOUT_CLASSIFICATION	0.0020338520183849486	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9968572309300299	WITHOUT_CLASSIFICATION	0.003142769069970079	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9996829408525392	WITHOUT_CLASSIFICATION	3.170591474608153E-4	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9869517759886531	WITHOUT_CLASSIFICATION	0.01304822401134684	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9993563904771819	WITHOUT_CLASSIFICATION	6.436095228181076E-4	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.99903592425445	WITHOUT_CLASSIFICATION	9.640757455499939E-4	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9997178223787629	WITHOUT_CLASSIFICATION	2.821776212371052E-4	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9990017021808456	WITHOUT_CLASSIFICATION	9.982978191543444E-4	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9997348744249881	WITHOUT_CLASSIFICATION	2.651255750118927E-4	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9997159945769015	WITHOUT_CLASSIFICATION	2.840054230984568E-4	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9998111277941399	WITHOUT_CLASSIFICATION	1.8887220585999052E-4	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9998273797259585	WITHOUT_CLASSIFICATION	1.72620274041525E-4	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9998057219819567	WITHOUT_CLASSIFICATION	1.9427801804318268E-4	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999244819474526	WITHOUT_CLASSIFICATION	7.551805254733107E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9988978908039451	WITHOUT_CLASSIFICATION	0.0011021091960549054	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999571209401503	WITHOUT_CLASSIFICATION	4.287905984972221E-5	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9990994001478308	WITHOUT_CLASSIFICATION	9.005998521691466E-4	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9976401655027747	WITHOUT_CLASSIFICATION	0.0023598344972252847	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9986512115080836	WITHOUT_CLASSIFICATION	0.0013487884919165067	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.9997684155713198	WITHOUT_CLASSIFICATION	2.3158442868012553E-4	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9981177687683791	WITHOUT_CLASSIFICATION	0.0018822312316209167	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.9993756055103351	WITHOUT_CLASSIFICATION	6.243944896649423E-4	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9998744911632094	WITHOUT_CLASSIFICATION	1.2550883679061472E-4	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9992843814976572	WITHOUT_CLASSIFICATION	7.156185023428168E-4	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9997581989964263	WITHOUT_CLASSIFICATION	2.4180100357383314E-4	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999936227047576	WITHOUT_CLASSIFICATION	6.377295242454157E-6	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9994443962385547	WITHOUT_CLASSIFICATION	5.556037614451995E-4	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9980040868807121	WITHOUT_CLASSIFICATION	0.001995913119287857	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9997493503631865	WITHOUT_CLASSIFICATION	2.506496368135564E-4	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.999616687650183	WITHOUT_CLASSIFICATION	3.8331234981705967E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9991897915569262	WITHOUT_CLASSIFICATION	8.102084430736922E-4	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9994320977919252	WITHOUT_CLASSIFICATION	5.679022080746958E-4	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9993404961115029	WITHOUT_CLASSIFICATION	6.595038884971373E-4	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9992669433845258	WITHOUT_CLASSIFICATION	7.330566154742562E-4	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9992595390407144	WITHOUT_CLASSIFICATION	7.404609592855739E-4	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9988759363462979	WITHOUT_CLASSIFICATION	0.0011240636537021898	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9991415521113961	WITHOUT_CLASSIFICATION	8.584478886037899E-4	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9992705232961389	WITHOUT_CLASSIFICATION	7.294767038610834E-4	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9987785119975142	WITHOUT_CLASSIFICATION	0.0012214880024858249	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9991286757911173	WITHOUT_CLASSIFICATION	8.713242088826478E-4	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.9995969102083789	WITHOUT_CLASSIFICATION	4.0308979162105536E-4	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.999509437500999	WITHOUT_CLASSIFICATION	4.905624990009642E-4	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9996726230498835	WITHOUT_CLASSIFICATION	3.2737695011654397E-4	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9997888194080292	WITHOUT_CLASSIFICATION	2.1118059197077038E-4	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9998986352059058	WITHOUT_CLASSIFICATION	1.0136479409414466E-4	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9996910730001657	WITHOUT_CLASSIFICATION	3.089269998342725E-4	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.9996487900169833	WITHOUT_CLASSIFICATION	3.5120998301672765E-4	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9991203071829395	WITHOUT_CLASSIFICATION	8.796928170604155E-4	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9988978908039451	WITHOUT_CLASSIFICATION	0.0011021091960549054	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9993268215570462	WITHOUT_CLASSIFICATION	6.731784429538202E-4	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9978562861752446	WITHOUT_CLASSIFICATION	0.002143713824755488	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9998523756147518	WITHOUT_CLASSIFICATION	1.4762438524806366E-4	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9979661479816151	WITHOUT_CLASSIFICATION	0.0020338520183849486	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9968572309300299	WITHOUT_CLASSIFICATION	0.003142769069970079	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.9996829408525392	WITHOUT_CLASSIFICATION	3.170591474608153E-4	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.9869517759886531	WITHOUT_CLASSIFICATION	0.01304822401134684	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9992327479721713	WITHOUT_CLASSIFICATION	7.672520278286359E-4	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9997178223787629	WITHOUT_CLASSIFICATION	2.821776212371052E-4	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999467410227579	WITHOUT_CLASSIFICATION	5.325897724214643E-5	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9997101860876683	WITHOUT_CLASSIFICATION	2.898139123316768E-4	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9997805329983992	WITHOUT_CLASSIFICATION	2.1946700160078064E-4	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9998753370297235	WITHOUT_CLASSIFICATION	1.2466297027643246E-4	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9998887788163097	WITHOUT_CLASSIFICATION	1.1122118369036928E-4	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.999931566031107	WITHOUT_CLASSIFICATION	6.843396889297274E-5	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9978459893131546	WITHOUT_CLASSIFICATION	0.0021540106868454386	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.998663225097264	WITHOUT_CLASSIFICATION	0.001336774902736025	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9998829619974143	WITHOUT_CLASSIFICATION	1.1703800258558917E-4	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9998392724214928	WITHOUT_CLASSIFICATION	1.607275785072868E-4	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.99903592425445	WITHOUT_CLASSIFICATION	9.640757455499939E-4	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9990017021808456	WITHOUT_CLASSIFICATION	9.982978191543444E-4	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9997703908901607	WITHOUT_CLASSIFICATION	2.296091098393902E-4	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999503196176479	WITHOUT_CLASSIFICATION	4.9680382352091285E-5	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9997725485426384	WITHOUT_CLASSIFICATION	2.2745145736166643E-4	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9997725485426384	WITHOUT_CLASSIFICATION	2.2745145736166643E-4	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999503196176479	WITHOUT_CLASSIFICATION	4.9680382352091285E-5	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9977725663905733	WITHOUT_CLASSIFICATION	0.002227433609426748	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9977725663905733	WITHOUT_CLASSIFICATION	0.002227433609426748	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9983406889198452	WITHOUT_CLASSIFICATION	0.0016593110801547308	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9997922408012212	WITHOUT_CLASSIFICATION	2.0775919877874465E-4	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9989771252551254	WITHOUT_CLASSIFICATION	0.0010228747448746218	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9991203071829395	WITHOUT_CLASSIFICATION	8.796928170604155E-4	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9987793713196792	WITHOUT_CLASSIFICATION	0.001220628680320826	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9989771252551254	WITHOUT_CLASSIFICATION	0.0010228747448746218	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9988005441694251	WITHOUT_CLASSIFICATION	0.001199455830574951	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9995208289423091	WITHOUT_CLASSIFICATION	4.7917105769083943E-4	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9998345412179056	WITHOUT_CLASSIFICATION	1.654587820944257E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9998324724175296	WITHOUT_CLASSIFICATION	1.6752758247043183E-4	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9986428169461022	WITHOUT_CLASSIFICATION	0.0013571830538977464	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9925540887936632	WITHOUT_CLASSIFICATION	0.0074459112063367805	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9998271179912351	WITHOUT_CLASSIFICATION	1.728820087649818E-4	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9994272003919001	WITHOUT_CLASSIFICATION	5.727996080999432E-4	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9998667546683577	WITHOUT_CLASSIFICATION	1.3324533164227898E-4	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9998533457559978	WITHOUT_CLASSIFICATION	1.4665424400213468E-4	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9990212061646263	WITHOUT_CLASSIFICATION	9.787938353737148E-4	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9995783977178644	WITHOUT_CLASSIFICATION	4.2160228213570963E-4	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9998925271829027	WITHOUT_CLASSIFICATION	1.074728170973496E-4	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9998488856821272	WITHOUT_CLASSIFICATION	1.5111431787277982E-4	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.999996474358906	WITHOUT_CLASSIFICATION	3.525641093943039E-6	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9997197284083946	WITHOUT_CLASSIFICATION	2.8027159160543057E-4	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.9998702854564213	WITHOUT_CLASSIFICATION	1.2971454357867286E-4	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9993164857261162	WITHOUT_CLASSIFICATION	6.83514273883903E-4	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999196638926944	WITHOUT_CLASSIFICATION	8.033610730565722E-5	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9998509404573279	WITHOUT_CLASSIFICATION	1.4905954267216716E-4	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9997246150249981	WITHOUT_CLASSIFICATION	2.753849750020049E-4	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9995573379256065	WITHOUT_CLASSIFICATION	4.4266207439347713E-4	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9994454088474692	WITHOUT_CLASSIFICATION	5.545911525307092E-4	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9999247231522177	WITHOUT_CLASSIFICATION	7.52768477823141E-5	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9994443418847136	WITHOUT_CLASSIFICATION	5.556581152863824E-4	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.996906565668216	WITHOUT_CLASSIFICATION	0.0030934343317838933	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9971297999521079	WITHOUT_CLASSIFICATION	0.0028702000478919754	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9967960341216461	WITHOUT_CLASSIFICATION	0.003203965878353874	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9996855423983979	WITHOUT_CLASSIFICATION	3.1445760160212237E-4	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9997728771261474	WITHOUT_CLASSIFICATION	2.2712287385272446E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996125690696633	WITHOUT_CLASSIFICATION	3.874309303367255E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997592441382221	WITHOUT_CLASSIFICATION	2.4075586177779284E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997293008081468	WITHOUT_CLASSIFICATION	2.706991918531709E-4	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9996855423983979	WITHOUT_CLASSIFICATION	3.1445760160212237E-4	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9993490772976478	WITHOUT_CLASSIFICATION	6.509227023522686E-4	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999762293034731	WITHOUT_CLASSIFICATION	2.377069652689783E-4	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999762293034731	WITHOUT_CLASSIFICATION	2.377069652689783E-4	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999762293034731	WITHOUT_CLASSIFICATION	2.377069652689783E-4	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9998938275204593	WITHOUT_CLASSIFICATION	1.0617247954069873E-4	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9998938275204593	WITHOUT_CLASSIFICATION	1.0617247954069873E-4	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9998938275204593	WITHOUT_CLASSIFICATION	1.0617247954069873E-4	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9998312009137688	WITHOUT_CLASSIFICATION	1.6879908623133183E-4	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9998312009137688	WITHOUT_CLASSIFICATION	1.6879908623133183E-4	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999311158429315	WITHOUT_CLASSIFICATION	6.888415706848471E-5	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9997580577284298	WITHOUT_CLASSIFICATION	2.4194227157016974E-4	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9998688281147601	WITHOUT_CLASSIFICATION	1.3117188523998187E-4	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9994597931866622	WITHOUT_CLASSIFICATION	5.402068133377318E-4	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9997021620316605	WITHOUT_CLASSIFICATION	2.97837968339522E-4	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9962309105538908	WITHOUT_CLASSIFICATION	0.003769089446109099	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9995512472033602	WITHOUT_CLASSIFICATION	4.487527966398052E-4	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.999379256511709	WITHOUT_CLASSIFICATION	6.207434882910137E-4	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9993037546963518	WITHOUT_CLASSIFICATION	6.962453036482619E-4	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9993918655649466	WITHOUT_CLASSIFICATION	6.081344350533905E-4	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9997295748459385	WITHOUT_CLASSIFICATION	2.704251540615081E-4	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999165027871806	WITHOUT_CLASSIFICATION	8.349721281953236E-5	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999790687477992	WITHOUT_CLASSIFICATION	2.093125220084331E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9998924833587773	WITHOUT_CLASSIFICATION	1.075166412226268E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9748271911641956	WITHOUT_CLASSIFICATION	0.025172808835804382	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.9978679882144783	WITHOUT_CLASSIFICATION	0.0021320117855217605	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9997790438290848	WITHOUT_CLASSIFICATION	2.2095617091516341E-4	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9994200905309313	WITHOUT_CLASSIFICATION	5.799094690686978E-4	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9974802046393889	WITHOUT_CLASSIFICATION	0.0025197953606111195	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.998064930965871	WITHOUT_CLASSIFICATION	0.001935069034128906	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9996532212314534	WITHOUT_CLASSIFICATION	3.4677876854654065E-4	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9995109949427387	WITHOUT_CLASSIFICATION	4.890050572613109E-4	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.9999233044973059	WITHOUT_CLASSIFICATION	7.66955026940791E-5	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.9996168193473166	WITHOUT_CLASSIFICATION	3.8318065268343486E-4	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9992886329172889	WITHOUT_CLASSIFICATION	7.113670827110456E-4	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9989607853502066	WITHOUT_CLASSIFICATION	0.0010392146497934442	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9991720660746904	WITHOUT_CLASSIFICATION	8.279339253096195E-4	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9983561573028849	WITHOUT_CLASSIFICATION	0.0016438426971152012	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9994212867469702	WITHOUT_CLASSIFICATION	5.787132530298587E-4	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9996384954030795	WITHOUT_CLASSIFICATION	3.615045969205152E-4	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9994760699638257	WITHOUT_CLASSIFICATION	5.239300361743332E-4	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9998112713608732	WITHOUT_CLASSIFICATION	1.8872863912669077E-4	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9994703460858844	WITHOUT_CLASSIFICATION	5.296539141156441E-4	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.998541157480763	WITHOUT_CLASSIFICATION	0.0014588425192368982	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.9957536601436608	WITHOUT_CLASSIFICATION	0.004246339856339126	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9994212867469702	WITHOUT_CLASSIFICATION	5.787132530298587E-4	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9996668329822179	WITHOUT_CLASSIFICATION	3.3316701778208705E-4	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9983639243252124	WITHOUT_CLASSIFICATION	0.0016360756747876909	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9988210670218857	WITHOUT_CLASSIFICATION	0.0011789329781142987	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9995606081006599	WITHOUT_CLASSIFICATION	4.3939189934004674E-4	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9982015586044629	WITHOUT_CLASSIFICATION	0.0017984413955370745	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999140530038602	WITHOUT_CLASSIFICATION	8.594699613982047E-5	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9998409731275116	WITHOUT_CLASSIFICATION	1.590268724883792E-4	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9995757726252104	WITHOUT_CLASSIFICATION	4.242273747896469E-4	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999016445030968	WITHOUT_CLASSIFICATION	9.83554969031288E-5	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9994476000122644	WITHOUT_CLASSIFICATION	5.523999877355407E-4	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9997559937188407	WITHOUT_CLASSIFICATION	2.4400628115931752E-4	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.990530864538155	WITHOUT_CLASSIFICATION	0.009469135461844929	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9996407703940424	WITHOUT_CLASSIFICATION	3.592296059576153E-4	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9996668329822179	WITHOUT_CLASSIFICATION	3.3316701778208705E-4	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9962442754214633	WITHOUT_CLASSIFICATION	0.0037557245785367504	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9989650340126746	WITHOUT_CLASSIFICATION	0.001034965987325388	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9995654936431635	WITHOUT_CLASSIFICATION	4.3450635683653507E-4	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9911323531259469	WITHOUT_CLASSIFICATION	0.008867646874052972	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9990230387803798	WITHOUT_CLASSIFICATION	9.769612196203186E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9993003298156272	WITHOUT_CLASSIFICATION	6.996701843728605E-4	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.999630998536322	WITHOUT_CLASSIFICATION	3.690014636780245E-4	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9997097432460431	WITHOUT_CLASSIFICATION	2.902567539568786E-4	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.9997123960030746	WITHOUT_CLASSIFICATION	2.8760399692538756E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9984685599604886	WITHOUT_CLASSIFICATION	0.0015314400395114263	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9997020655917894	WITHOUT_CLASSIFICATION	2.979344082104684E-4	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9988222794194614	WITHOUT_CLASSIFICATION	0.0011777205805386113	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.999237698209598	WITHOUT_CLASSIFICATION	7.623017904019831E-4	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9997020655917894	WITHOUT_CLASSIFICATION	2.979344082104684E-4	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9998811434812787	WITHOUT_CLASSIFICATION	1.1885651872136545E-4	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.9425422649008788	WITHOUT_CLASSIFICATION	0.057457735099121256	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.999834701252439	WITHOUT_CLASSIFICATION	1.6529874756096246E-4	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9992900774037529	WITHOUT_CLASSIFICATION	7.09922596247242E-4	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.9991082728201273	WITHOUT_CLASSIFICATION	8.917271798728198E-4	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9988512842463322	WITHOUT_CLASSIFICATION	0.0011487157536677823	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9998570865751248	WITHOUT_CLASSIFICATION	1.4291342487509473E-4	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9995898138379867	WITHOUT_CLASSIFICATION	4.1018616201320444E-4	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9993476589214789	WITHOUT_CLASSIFICATION	6.52341078521035E-4	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.999505731020082	WITHOUT_CLASSIFICATION	4.942689799180249E-4	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9984113897388446	WITHOUT_CLASSIFICATION	0.0015886102611554602	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9988168640417605	WITHOUT_CLASSIFICATION	0.0011831359582394482	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9996159025291056	WITHOUT_CLASSIFICATION	3.840974708944374E-4	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9997935734455362	WITHOUT_CLASSIFICATION	2.0642655446383116E-4	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.999896110933124	WITHOUT_CLASSIFICATION	1.0388906687602817E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9994606838644873	WITHOUT_CLASSIFICATION	5.393161355127504E-4	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9997412351290619	WITHOUT_CLASSIFICATION	2.587648709380651E-4	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999465540945282	WITHOUT_CLASSIFICATION	5.344590547190456E-5	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9997935734455362	WITHOUT_CLASSIFICATION	2.0642655446383116E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9992811293572449	WITHOUT_CLASSIFICATION	7.188706427551708E-4	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.9991055623030496	WITHOUT_CLASSIFICATION	8.944376969504757E-4	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.99974207972391	WITHOUT_CLASSIFICATION	2.5792027608997973E-4	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.999741475476805	WITHOUT_CLASSIFICATION	2.585245231949344E-4	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.99995914424584	WITHOUT_CLASSIFICATION	4.085575416008064E-5	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.9997399307436912	WITHOUT_CLASSIFICATION	2.6006925630886696E-4	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9999379300497566	WITHOUT_CLASSIFICATION	6.206995024336894E-5	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9976251268751616	WITHOUT_CLASSIFICATION	0.0023748731248384516	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9991286757911173	WITHOUT_CLASSIFICATION	8.713242088826478E-4	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9991286757911173	WITHOUT_CLASSIFICATION	8.713242088826478E-4	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9997332909149076	WITHOUT_CLASSIFICATION	2.6670908509245637E-4	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9997505978996413	WITHOUT_CLASSIFICATION	2.4940210035875323E-4	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999384881392915	WITHOUT_CLASSIFICATION	6.151186070847193E-5	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9993588512740639	WITHOUT_CLASSIFICATION	6.411487259361452E-4	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9660453627918975	WITHOUT_CLASSIFICATION	0.03395463720810263	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9998328251977008	WITHOUT_CLASSIFICATION	1.6717480229917915E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999165027871806	WITHOUT_CLASSIFICATION	8.349721281953236E-5	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999165027871806	WITHOUT_CLASSIFICATION	8.349721281953236E-5	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9988844494061004	WITHOUT_CLASSIFICATION	0.0011155505938995468	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999790687477992	WITHOUT_CLASSIFICATION	2.093125220084331E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.9999137455331729	WITHOUT_CLASSIFICATION	8.625446682712278E-5	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.9997864166819528	WITHOUT_CLASSIFICATION	2.1358331804716067E-4	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9997322239365489	WITHOUT_CLASSIFICATION	2.6777606345110294E-4	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.9988251334299607	WITHOUT_CLASSIFICATION	0.0011748665700393114	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9998357262414751	WITHOUT_CLASSIFICATION	1.642737585249177E-4	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9995932343707793	WITHOUT_CLASSIFICATION	4.067656292206959E-4	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9993831978546703	WITHOUT_CLASSIFICATION	6.168021453295628E-4	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9997917148823015	WITHOUT_CLASSIFICATION	2.082851176984362E-4	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9074719444152914	WITHOUT_CLASSIFICATION	0.09252805558470865	DEFECT
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999003460878313	WITHOUT_CLASSIFICATION	9.965391216871312E-5	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9996443480908375	WITHOUT_CLASSIFICATION	3.556519091625541E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9977704804699633	WITHOUT_CLASSIFICATION	0.002229519530036572	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.999672680558732	WITHOUT_CLASSIFICATION	3.273194412679283E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9992232454935256	WITHOUT_CLASSIFICATION	7.767545064743165E-4	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9979866156612467	WITHOUT_CLASSIFICATION	0.0020133843387532394	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9996971152946482	WITHOUT_CLASSIFICATION	3.028847053517646E-4	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9998554809462984	WITHOUT_CLASSIFICATION	1.4451905370161508E-4	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9996439931420398	WITHOUT_CLASSIFICATION	3.560068579602212E-4	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9997941610031045	WITHOUT_CLASSIFICATION	2.058389968954044E-4	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9996011210435304	WITHOUT_CLASSIFICATION	3.9887895646962266E-4	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9997197010948196	WITHOUT_CLASSIFICATION	2.802989051804259E-4	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.999902331121504	WITHOUT_CLASSIFICATION	9.76688784960469E-5	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9980374345418117	WITHOUT_CLASSIFICATION	0.0019625654581882945	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9997555929774752	WITHOUT_CLASSIFICATION	2.444070225248079E-4	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9997970968667542	WITHOUT_CLASSIFICATION	2.0290313324572982E-4	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9998060952036643	WITHOUT_CLASSIFICATION	1.9390479633577177E-4	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9991811433514302	WITHOUT_CLASSIFICATION	8.188566485698753E-4	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.994772797426045	WITHOUT_CLASSIFICATION	0.00522720257395493	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9993244623284246	WITHOUT_CLASSIFICATION	6.755376715753311E-4	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9997044063997834	WITHOUT_CLASSIFICATION	2.9559360021661927E-4	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9995881937688745	WITHOUT_CLASSIFICATION	4.1180623112543993E-4	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.999751048575283	WITHOUT_CLASSIFICATION	2.489514247170508E-4	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9997380347301568	WITHOUT_CLASSIFICATION	2.619652698432259E-4	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9996480114707127	WITHOUT_CLASSIFICATION	3.5198852928737464E-4	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.9976954227560328	WITHOUT_CLASSIFICATION	0.0023045772439672413	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9996974287860437	WITHOUT_CLASSIFICATION	3.025712139562648E-4	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9980642029523892	WITHOUT_CLASSIFICATION	0.0019357970476109319	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.9985247010940921	WITHOUT_CLASSIFICATION	0.0014752989059079547	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999045613365112	WITHOUT_CLASSIFICATION	9.543866348891896E-5	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9997399307436912	WITHOUT_CLASSIFICATION	2.6006925630886696E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9997600481292596	WITHOUT_CLASSIFICATION	2.3995187074043946E-4	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9996722774650336	WITHOUT_CLASSIFICATION	3.2772253496631025E-4	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9943892821398475	WITHOUT_CLASSIFICATION	0.005610717860152501	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9962309105538908	WITHOUT_CLASSIFICATION	0.003769089446109099	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9978114101813977	WITHOUT_CLASSIFICATION	0.0021885898186022757	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9996286108094978	WITHOUT_CLASSIFICATION	3.7138919050219265E-4	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9997548191561964	WITHOUT_CLASSIFICATION	2.451808438036993E-4	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9997572047453546	WITHOUT_CLASSIFICATION	2.427952546453665E-4	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9997837002971254	WITHOUT_CLASSIFICATION	2.162997028744994E-4	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9996122993168421	WITHOUT_CLASSIFICATION	3.877006831577789E-4	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.998188837108015	WITHOUT_CLASSIFICATION	0.0018111628919850978	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9997209802919528	WITHOUT_CLASSIFICATION	2.790197080472877E-4	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9998533882687097	WITHOUT_CLASSIFICATION	1.4661173129028722E-4	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9992113880883292	WITHOUT_CLASSIFICATION	7.886119116708753E-4	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9996825663677259	WITHOUT_CLASSIFICATION	3.174336322741141E-4	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9989637949069479	WITHOUT_CLASSIFICATION	0.0010362050930521787	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.999628826368755	WITHOUT_CLASSIFICATION	3.7117363124492165E-4	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9996837545367923	WITHOUT_CLASSIFICATION	3.1624546320778316E-4	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9998029728850812	WITHOUT_CLASSIFICATION	1.9702711491869265E-4	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.9997975876934214	WITHOUT_CLASSIFICATION	2.0241230657858236E-4	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9994862180674539	WITHOUT_CLASSIFICATION	5.137819325460492E-4	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.9998877788113082	WITHOUT_CLASSIFICATION	1.1222118869176068E-4	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9999413867319584	WITHOUT_CLASSIFICATION	5.8613268041674064E-5	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9996484644251729	WITHOUT_CLASSIFICATION	3.5153557482710935E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9996484644251729	WITHOUT_CLASSIFICATION	3.5153557482710935E-4	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9992577129138952	WITHOUT_CLASSIFICATION	7.422870861047719E-4	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9998904290665376	WITHOUT_CLASSIFICATION	1.0957093346246376E-4	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9988137877171661	WITHOUT_CLASSIFICATION	0.001186212282833899	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999948689548941	WITHOUT_CLASSIFICATION	5.131045106023951E-6	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9991873362444327	WITHOUT_CLASSIFICATION	8.12663755567363E-4	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9998829785706921	WITHOUT_CLASSIFICATION	1.1702142930790675E-4	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9992415651491852	WITHOUT_CLASSIFICATION	7.584348508148274E-4	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.999950112521212	WITHOUT_CLASSIFICATION	4.988747878791888E-5	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9983147743260163	WITHOUT_CLASSIFICATION	0.001685225673983681	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9998043989064959	WITHOUT_CLASSIFICATION	1.95601093504172E-4	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.9995332339466352	WITHOUT_CLASSIFICATION	4.667660533647857E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9994540683434643	WITHOUT_CLASSIFICATION	5.459316565357149E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9994154794838924	WITHOUT_CLASSIFICATION	5.845205161075073E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998630876760881	WITHOUT_CLASSIFICATION	1.3691232391185355E-4	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9995782954847184	WITHOUT_CLASSIFICATION	4.2170451528156515E-4	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.999535275354204	WITHOUT_CLASSIFICATION	4.6472464579604594E-4	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9979244588219468	WITHOUT_CLASSIFICATION	0.0020755411780532867	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9995888247912277	WITHOUT_CLASSIFICATION	4.1117520877234984E-4	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.999222238232777	WITHOUT_CLASSIFICATION	7.777617672228791E-4	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9997802726725618	WITHOUT_CLASSIFICATION	2.197273274382798E-4	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.9998630876760881	WITHOUT_CLASSIFICATION	1.3691232391185355E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998630876760881	WITHOUT_CLASSIFICATION	1.3691232391185355E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.9998630876760881	WITHOUT_CLASSIFICATION	1.3691232391185355E-4	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.9998630876760881	WITHOUT_CLASSIFICATION	1.3691232391185355E-4	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.9998630876760881	WITHOUT_CLASSIFICATION	1.3691232391185355E-4	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9998648738075119	WITHOUT_CLASSIFICATION	1.3512619248816476E-4	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9989432242444782	WITHOUT_CLASSIFICATION	0.0010567757555218008	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9996448747844358	WITHOUT_CLASSIFICATION	3.5512521556431816E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.999650495602099	WITHOUT_CLASSIFICATION	3.4950439790094477E-4	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9989850841022385	WITHOUT_CLASSIFICATION	0.0010149158977614584	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9986891299766718	WITHOUT_CLASSIFICATION	0.0013108700233282547	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9993551057007876	WITHOUT_CLASSIFICATION	6.448942992125272E-4	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9992309616804361	WITHOUT_CLASSIFICATION	7.690383195639051E-4	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9991765382004103	WITHOUT_CLASSIFICATION	8.234617995897021E-4	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9997481802103073	WITHOUT_CLASSIFICATION	2.518197896927098E-4	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.9994864276523264	WITHOUT_CLASSIFICATION	5.135723476735371E-4	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9997184106886009	WITHOUT_CLASSIFICATION	2.8158931139908003E-4	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9956971728242846	WITHOUT_CLASSIFICATION	0.004302827175715453	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9804382359211041	WITHOUT_CLASSIFICATION	0.0195617640788958	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.9994844515235077	WITHOUT_CLASSIFICATION	5.155484764922491E-4	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999195204443287	WITHOUT_CLASSIFICATION	8.047955567123656E-5	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9997940337578192	WITHOUT_CLASSIFICATION	2.059662421808451E-4	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9999916652397979	WITHOUT_CLASSIFICATION	8.334760202180521E-6	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9998204267017974	WITHOUT_CLASSIFICATION	1.7957329820262848E-4	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9996262077885343	WITHOUT_CLASSIFICATION	3.737922114656864E-4	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.999057245498654	WITHOUT_CLASSIFICATION	9.427545013460995E-4	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9995424212401889	WITHOUT_CLASSIFICATION	4.575787598111812E-4	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999012812878647	WITHOUT_CLASSIFICATION	9.871871213533192E-5	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9997538739607917	WITHOUT_CLASSIFICATION	2.4612603920822786E-4	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9996306543847605	WITHOUT_CLASSIFICATION	3.693456152395048E-4	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.999938604172493	WITHOUT_CLASSIFICATION	6.139582750705006E-5	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.998190293301657	WITHOUT_CLASSIFICATION	0.0018097066983430103	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9996858653616466	WITHOUT_CLASSIFICATION	3.1413463835343856E-4	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9995361490910879	WITHOUT_CLASSIFICATION	4.6385090891208386E-4	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9998214699995829	WITHOUT_CLASSIFICATION	1.7853000041708776E-4	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9999221439047293	WITHOUT_CLASSIFICATION	7.785609527056864E-5	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9998779840387625	WITHOUT_CLASSIFICATION	1.2201596123754226E-4	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.9992083780692748	WITHOUT_CLASSIFICATION	7.916219307252721E-4	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9993058179430347	WITHOUT_CLASSIFICATION	6.941820569652243E-4	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9995349300736165	WITHOUT_CLASSIFICATION	4.6506992638357605E-4	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9971578015654097	WITHOUT_CLASSIFICATION	0.0028421984345903414	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9997903911874138	WITHOUT_CLASSIFICATION	2.0960881258628576E-4	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.999003758388795	WITHOUT_CLASSIFICATION	9.962416112050771E-4	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.998750092165553	WITHOUT_CLASSIFICATION	0.001249907834447038	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9997846569345749	WITHOUT_CLASSIFICATION	2.1534306542519196E-4	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9998110265871857	WITHOUT_CLASSIFICATION	1.889734128142855E-4	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9995155242274898	WITHOUT_CLASSIFICATION	4.8447577251024425E-4	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.999940009393746	WITHOUT_CLASSIFICATION	5.999060625395603E-5	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9996518488153491	WITHOUT_CLASSIFICATION	3.4815118465090556E-4	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9965984395956562	WITHOUT_CLASSIFICATION	0.0034015604043437743	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9987636181619379	WITHOUT_CLASSIFICATION	0.0012363818380620418	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9989793838991727	WITHOUT_CLASSIFICATION	0.001020616100827283	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9994612688068436	WITHOUT_CLASSIFICATION	5.387311931564491E-4	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9998931632424427	WITHOUT_CLASSIFICATION	1.0683675755731486E-4	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9993571712039064	WITHOUT_CLASSIFICATION	6.428287960935362E-4	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9992312605429944	WITHOUT_CLASSIFICATION	7.68739457005729E-4	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9998682201513005	WITHOUT_CLASSIFICATION	1.3177984869945823E-4	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9996903988267677	WITHOUT_CLASSIFICATION	3.096011732323455E-4	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9995340319049554	WITHOUT_CLASSIFICATION	4.6596809504468353E-4	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9998737030493001	WITHOUT_CLASSIFICATION	1.2629695069987023E-4	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.9997110051874928	WITHOUT_CLASSIFICATION	2.889948125072136E-4	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9998877028493105	WITHOUT_CLASSIFICATION	1.1229715068949041E-4	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9998293418309029	WITHOUT_CLASSIFICATION	1.7065816909713098E-4	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9998673417652142	WITHOUT_CLASSIFICATION	1.3265823478590067E-4	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9998265085961908	WITHOUT_CLASSIFICATION	1.7349140380904998E-4	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9997377888887466	WITHOUT_CLASSIFICATION	2.622111112533116E-4	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9997511506375379	WITHOUT_CLASSIFICATION	2.4884936246205987E-4	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9994877257370295	WITHOUT_CLASSIFICATION	5.122742629705599E-4	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999170973155791	WITHOUT_CLASSIFICATION	8.290268442082538E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9995349300736165	WITHOUT_CLASSIFICATION	4.6506992638357605E-4	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9996903988267677	WITHOUT_CLASSIFICATION	3.096011732323455E-4	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9996903988267677	WITHOUT_CLASSIFICATION	3.096011732323455E-4	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9996903988267677	WITHOUT_CLASSIFICATION	3.096011732323455E-4	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9996903988267677	WITHOUT_CLASSIFICATION	3.096011732323455E-4	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9997777259135108	WITHOUT_CLASSIFICATION	2.2227408648924438E-4	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9997777259135108	WITHOUT_CLASSIFICATION	2.2227408648924438E-4	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.999749168771156	WITHOUT_CLASSIFICATION	2.508312288438504E-4	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9998985025387473	WITHOUT_CLASSIFICATION	1.0149746125263353E-4	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9982766426396348	WITHOUT_CLASSIFICATION	0.0017233573603651728	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9996903988267677	WITHOUT_CLASSIFICATION	3.096011732323455E-4	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9997940573837901	WITHOUT_CLASSIFICATION	2.0594261620994435E-4	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.998731502991332	WITHOUT_CLASSIFICATION	0.0012684970086680476	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9996903988267677	WITHOUT_CLASSIFICATION	3.096011732323455E-4	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9997912403751891	WITHOUT_CLASSIFICATION	2.08759624810989E-4	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9998513451426295	WITHOUT_CLASSIFICATION	1.4865485737038727E-4	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.998421331529014	WITHOUT_CLASSIFICATION	0.0015786684709859925	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.99988449745432	WITHOUT_CLASSIFICATION	1.1550254568008195E-4	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.999548299657595	WITHOUT_CLASSIFICATION	4.517003424050466E-4	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.9995911705182662	WITHOUT_CLASSIFICATION	4.088294817338282E-4	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9997992026855115	WITHOUT_CLASSIFICATION	2.0079731448855996E-4	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9997992026855115	WITHOUT_CLASSIFICATION	2.0079731448855996E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9992445296525085	WITHOUT_CLASSIFICATION	7.554703474914405E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9997352807724884	WITHOUT_CLASSIFICATION	2.647192275116218E-4	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9997777259135108	WITHOUT_CLASSIFICATION	2.2227408648924438E-4	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.999749168771156	WITHOUT_CLASSIFICATION	2.508312288438504E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.999986724862648	WITHOUT_CLASSIFICATION	1.327513735210257E-5	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9996903988267677	WITHOUT_CLASSIFICATION	3.096011732323455E-4	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9996903988267677	WITHOUT_CLASSIFICATION	3.096011732323455E-4	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9998305478372159	WITHOUT_CLASSIFICATION	1.694521627840126E-4	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9987955590856867	WITHOUT_CLASSIFICATION	0.0012044409143133362	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.99970957554436	WITHOUT_CLASSIFICATION	2.904244556399733E-4	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9998506778121828	WITHOUT_CLASSIFICATION	1.4932218781712255E-4	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9996420691833484	WITHOUT_CLASSIFICATION	3.579308166516384E-4	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9997426846028508	WITHOUT_CLASSIFICATION	2.5731539714930496E-4	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9996833911715853	WITHOUT_CLASSIFICATION	3.1660882841465845E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9977231928688908	WITHOUT_CLASSIFICATION	0.0022768071311093266	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9996167476348012	WITHOUT_CLASSIFICATION	3.8325236519871973E-4	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.9997616399510698	WITHOUT_CLASSIFICATION	2.3836004893022355E-4	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9997514993357706	WITHOUT_CLASSIFICATION	2.4850066422945954E-4	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9996206494446623	WITHOUT_CLASSIFICATION	3.793505553376204E-4	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9996893467849088	WITHOUT_CLASSIFICATION	3.1065321509115006E-4	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9996169450823111	WITHOUT_CLASSIFICATION	3.830549176889049E-4	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9996726779429244	WITHOUT_CLASSIFICATION	3.2732205707571086E-4	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9996698164032243	WITHOUT_CLASSIFICATION	3.301835967756907E-4	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9994372579455237	WITHOUT_CLASSIFICATION	5.627420544762659E-4	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9996964729378688	WITHOUT_CLASSIFICATION	3.0352706213129446E-4	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9956503315407146	WITHOUT_CLASSIFICATION	0.004349668459285387	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9997558759092943	WITHOUT_CLASSIFICATION	2.4412409070580097E-4	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9994926841325044	WITHOUT_CLASSIFICATION	5.073158674957036E-4	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9994198526052835	WITHOUT_CLASSIFICATION	5.801473947164372E-4	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9998934687164309	WITHOUT_CLASSIFICATION	1.0653128356904748E-4	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9998992270171616	WITHOUT_CLASSIFICATION	1.007729828383453E-4	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9993878498186147	WITHOUT_CLASSIFICATION	6.12150181385261E-4	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9997550649341642	WITHOUT_CLASSIFICATION	2.4493506583585505E-4	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9996965843502817	WITHOUT_CLASSIFICATION	3.0341564971829606E-4	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9998245902347941	WITHOUT_CLASSIFICATION	1.7540976520594818E-4	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9998556380934562	WITHOUT_CLASSIFICATION	1.4436190654381102E-4	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9998032059297624	WITHOUT_CLASSIFICATION	1.9679407023751651E-4	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9998859491144106	WITHOUT_CLASSIFICATION	1.1405088558934854E-4	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9998859491144106	WITHOUT_CLASSIFICATION	1.1405088558934854E-4	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9994201944226777	WITHOUT_CLASSIFICATION	5.798055773223261E-4	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9994898829168394	WITHOUT_CLASSIFICATION	5.1011708316066E-4	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9994898829168394	WITHOUT_CLASSIFICATION	5.1011708316066E-4	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.999289495644566	WITHOUT_CLASSIFICATION	7.105043554340777E-4	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.999289495644566	WITHOUT_CLASSIFICATION	7.105043554340777E-4	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9983245691251199	WITHOUT_CLASSIFICATION	0.0016754308748800622	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9997985305801658	WITHOUT_CLASSIFICATION	2.014694198342248E-4	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.999898811297406	WITHOUT_CLASSIFICATION	1.0118870259395331E-4	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9994810360493975	WITHOUT_CLASSIFICATION	5.189639506024792E-4	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9998704115722431	WITHOUT_CLASSIFICATION	1.2958842775690456E-4	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.9997718131015816	WITHOUT_CLASSIFICATION	2.2818689841850828E-4	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9997097432460431	WITHOUT_CLASSIFICATION	2.902567539568786E-4	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9998859491144106	WITHOUT_CLASSIFICATION	1.1405088558934854E-4	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9991745952489007	WITHOUT_CLASSIFICATION	8.254047510994077E-4	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9996848958489442	WITHOUT_CLASSIFICATION	3.151041510558381E-4	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9998041477637186	WITHOUT_CLASSIFICATION	1.9585223628135607E-4	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9983045564023348	WITHOUT_CLASSIFICATION	0.0016954435976652214	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9998571733150723	WITHOUT_CLASSIFICATION	1.4282668492777227E-4	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9998771461529546	WITHOUT_CLASSIFICATION	1.2285384704532374E-4	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9993594622099913	WITHOUT_CLASSIFICATION	6.405377900086902E-4	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9997561543378344	WITHOUT_CLASSIFICATION	2.4384566216564124E-4	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9998300789482051	WITHOUT_CLASSIFICATION	1.6992105179491483E-4	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9998300789482051	WITHOUT_CLASSIFICATION	1.6992105179491483E-4	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9998960701628883	WITHOUT_CLASSIFICATION	1.0392983711176372E-4	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9997058441647061	WITHOUT_CLASSIFICATION	2.941558352939666E-4	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9996900138126111	WITHOUT_CLASSIFICATION	3.0998618738886836E-4	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9992762941612774	WITHOUT_CLASSIFICATION	7.237058387227087E-4	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9988286455451959	WITHOUT_CLASSIFICATION	0.001171354454804007	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996960527171465	WITHOUT_CLASSIFICATION	3.039472828535559E-4	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9972844092410525	WITHOUT_CLASSIFICATION	0.0027155907589473264	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.999539983879859	WITHOUT_CLASSIFICATION	4.600161201409829E-4	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9988286455451959	WITHOUT_CLASSIFICATION	0.001171354454804007	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9998942140596129	WITHOUT_CLASSIFICATION	1.0578594038723225E-4	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9991369132746645	WITHOUT_CLASSIFICATION	8.630867253355264E-4	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9996690119199401	WITHOUT_CLASSIFICATION	3.309880800599275E-4	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9994078562131914	WITHOUT_CLASSIFICATION	5.921437868086344E-4	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.9996168761548129	WITHOUT_CLASSIFICATION	3.831238451870203E-4	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9998099954511925	WITHOUT_CLASSIFICATION	1.9000454880743227E-4	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9998422460726965	WITHOUT_CLASSIFICATION	1.5775392730346536E-4	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9996969419571319	WITHOUT_CLASSIFICATION	3.03058042868087E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9996969419571319	WITHOUT_CLASSIFICATION	3.03058042868087E-4	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9997360797081498	WITHOUT_CLASSIFICATION	2.639202918501823E-4	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999310201840862	WITHOUT_CLASSIFICATION	6.897981591383258E-5	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9996705335170404	WITHOUT_CLASSIFICATION	3.294664829596165E-4	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.99988449745432	WITHOUT_CLASSIFICATION	1.1550254568008195E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9997432962986076	WITHOUT_CLASSIFICATION	2.567037013923419E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9997432962986076	WITHOUT_CLASSIFICATION	2.567037013923419E-4	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9995572334701376	WITHOUT_CLASSIFICATION	4.4276652986238767E-4	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9999178582376101	WITHOUT_CLASSIFICATION	8.214176238977822E-5	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9998823453401937	WITHOUT_CLASSIFICATION	1.176546598063625E-4	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9997399307436912	WITHOUT_CLASSIFICATION	2.6006925630886696E-4	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9975139340769399	WITHOUT_CLASSIFICATION	0.002486065923060162	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999855910557417	WITHOUT_CLASSIFICATION	1.4408944258194804E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9996969419571319	WITHOUT_CLASSIFICATION	3.03058042868087E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9996969419571319	WITHOUT_CLASSIFICATION	3.03058042868087E-4	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9997360797081498	WITHOUT_CLASSIFICATION	2.639202918501823E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9997432962986076	WITHOUT_CLASSIFICATION	2.567037013923419E-4	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9996862393106752	WITHOUT_CLASSIFICATION	3.1376068932477527E-4	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9993907656641927	WITHOUT_CLASSIFICATION	6.092343358073079E-4	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9994736239273452	WITHOUT_CLASSIFICATION	5.263760726549259E-4	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999873464385259	WITHOUT_CLASSIFICATION	1.2653561474048237E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9997432962986076	WITHOUT_CLASSIFICATION	2.567037013923419E-4	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9998823453401937	WITHOUT_CLASSIFICATION	1.176546598063625E-4	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9998823453401937	WITHOUT_CLASSIFICATION	1.176546598063625E-4	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999871542930582	WITHOUT_CLASSIFICATION	1.2845706941727061E-5	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9997612027318713	WITHOUT_CLASSIFICATION	2.3879726812879023E-4	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9998823453401937	WITHOUT_CLASSIFICATION	1.176546598063625E-4	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.999900737098756	WITHOUT_CLASSIFICATION	9.926290124394781E-5	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999869529803704	WITHOUT_CLASSIFICATION	1.304701962958255E-5	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9997399307436912	WITHOUT_CLASSIFICATION	2.6006925630886696E-4	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9988754959479728	WITHOUT_CLASSIFICATION	0.00112450405202718	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9990592020100629	WITHOUT_CLASSIFICATION	9.407979899369636E-4	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9993168051088247	WITHOUT_CLASSIFICATION	6.831948911753042E-4	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9993215770503441	WITHOUT_CLASSIFICATION	6.784229496559917E-4	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9988396878803368	WITHOUT_CLASSIFICATION	0.0011603121196631263	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9990277182972082	WITHOUT_CLASSIFICATION	9.722817027919599E-4	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9999216666267843	WITHOUT_CLASSIFICATION	7.833337321573456E-5	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9993272436982452	WITHOUT_CLASSIFICATION	6.727563017548561E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997258162508892	WITHOUT_CLASSIFICATION	2.741837491108558E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999847909661578	WITHOUT_CLASSIFICATION	1.5209033842202059E-5	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9998860274344665	WITHOUT_CLASSIFICATION	1.1397256553342995E-4	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9996256402900248	WITHOUT_CLASSIFICATION	3.7435970997518075E-4	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9864532384162057	WITHOUT_CLASSIFICATION	0.013546761583794264	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9998904475007309	WITHOUT_CLASSIFICATION	1.0955249926903911E-4	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.9998904475007309	WITHOUT_CLASSIFICATION	1.0955249926903911E-4	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.9995412444510243	WITHOUT_CLASSIFICATION	4.587555489757566E-4	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.999877344780745	WITHOUT_CLASSIFICATION	1.2265521925503418E-4	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.997693189518098	WITHOUT_CLASSIFICATION	0.0023068104819019466	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9988891667358653	WITHOUT_CLASSIFICATION	0.0011108332641346812	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9997202252327891	WITHOUT_CLASSIFICATION	2.797747672109174E-4	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9982356551272606	WITHOUT_CLASSIFICATION	0.0017643448727393376	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9994375450788116	WITHOUT_CLASSIFICATION	5.624549211885012E-4	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9994353765366097	WITHOUT_CLASSIFICATION	5.64623463390205E-4	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9977280646393576	WITHOUT_CLASSIFICATION	0.0022719353606423347	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9977280646393576	WITHOUT_CLASSIFICATION	0.0022719353606423347	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9977280646393576	WITHOUT_CLASSIFICATION	0.0022719353606423347	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9992919980344239	WITHOUT_CLASSIFICATION	7.080019655761069E-4	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9992919980344239	WITHOUT_CLASSIFICATION	7.080019655761069E-4	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9992919980344239	WITHOUT_CLASSIFICATION	7.080019655761069E-4	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.9992332211176278	WITHOUT_CLASSIFICATION	7.66778882372163E-4	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9988585005116056	WITHOUT_CLASSIFICATION	0.0011414994883942793	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9985558283270365	WITHOUT_CLASSIFICATION	0.0014441716729635095	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9992190233608704	WITHOUT_CLASSIFICATION	7.809766391295306E-4	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9991529226410344	WITHOUT_CLASSIFICATION	8.470773589657253E-4	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9995073389511633	WITHOUT_CLASSIFICATION	4.926610488367072E-4	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9993698822088436	WITHOUT_CLASSIFICATION	6.301177911564153E-4	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9997509400440274	WITHOUT_CLASSIFICATION	2.490599559725393E-4	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.999293684361136	WITHOUT_CLASSIFICATION	7.063156388640196E-4	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.999354674161526	WITHOUT_CLASSIFICATION	6.453258384740124E-4	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9991074793732264	WITHOUT_CLASSIFICATION	8.925206267735716E-4	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9999277852687579	WITHOUT_CLASSIFICATION	7.221473124205425E-5	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.9994159968737383	WITHOUT_CLASSIFICATION	5.840031262617781E-4	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9997564118645043	WITHOUT_CLASSIFICATION	2.435881354957841E-4	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9993499652029822	WITHOUT_CLASSIFICATION	6.500347970176606E-4	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9990335647393359	WITHOUT_CLASSIFICATION	9.664352606639901E-4	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9996444237482967	WITHOUT_CLASSIFICATION	3.555762517033521E-4	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.996976612891644	WITHOUT_CLASSIFICATION	0.0030233871083559633	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999030247825826	WITHOUT_CLASSIFICATION	9.697521741738236E-5	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9965204628659265	WITHOUT_CLASSIFICATION	0.0034795371340735452	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9982027496954723	WITHOUT_CLASSIFICATION	0.0017972503045277609	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9984671602271398	WITHOUT_CLASSIFICATION	0.0015328397728602335	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9996908969574791	WITHOUT_CLASSIFICATION	3.0910304252082494E-4	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999420613285119	WITHOUT_CLASSIFICATION	5.7938671487991655E-5	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9997548191561964	WITHOUT_CLASSIFICATION	2.451808438036993E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9997835440677203	WITHOUT_CLASSIFICATION	2.1645593227959497E-4	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9997835440677203	WITHOUT_CLASSIFICATION	2.1645593227959497E-4	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9992408541230616	WITHOUT_CLASSIFICATION	7.591458769383618E-4	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9998780359277669	WITHOUT_CLASSIFICATION	1.219640722331377E-4	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9949607194023413	WITHOUT_CLASSIFICATION	0.005039280597658756	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.999817683438647	WITHOUT_CLASSIFICATION	1.823165613530788E-4	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9992582779951343	WITHOUT_CLASSIFICATION	7.417220048657711E-4	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.9997550599485792	WITHOUT_CLASSIFICATION	2.4494005142076795E-4	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9998436103872906	WITHOUT_CLASSIFICATION	1.563896127093165E-4	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9996877522324491	WITHOUT_CLASSIFICATION	3.122477675509673E-4	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.9991533865712574	WITHOUT_CLASSIFICATION	8.466134287425664E-4	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9996932374722907	WITHOUT_CLASSIFICATION	3.0676252770934896E-4	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.998032237170241	WITHOUT_CLASSIFICATION	0.001967762829758892	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.9996608152990486	WITHOUT_CLASSIFICATION	3.3918470095133715E-4	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9998586384008413	WITHOUT_CLASSIFICATION	1.413615991586386E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997258162508892	WITHOUT_CLASSIFICATION	2.741837491108558E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9995260437302793	WITHOUT_CLASSIFICATION	4.7395626972063286E-4	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9981293099025527	WITHOUT_CLASSIFICATION	0.0018706900974472932	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.9975579648224662	WITHOUT_CLASSIFICATION	0.002442035177533835	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9900982683375805	WITHOUT_CLASSIFICATION	0.009901731662419474	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9994001426304517	WITHOUT_CLASSIFICATION	5.998573695483331E-4	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999173411716561	WITHOUT_CLASSIFICATION	8.265882834383993E-5	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9994101000639006	WITHOUT_CLASSIFICATION	5.89899936099325E-4	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9996593397079377	WITHOUT_CLASSIFICATION	3.4066029206222543E-4	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.9997453434370632	WITHOUT_CLASSIFICATION	2.546565629367693E-4	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9992532356544761	WITHOUT_CLASSIFICATION	7.467643455238342E-4	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9992570424512304	WITHOUT_CLASSIFICATION	7.429575487695036E-4	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9988428150682601	WITHOUT_CLASSIFICATION	0.0011571849317398044	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9997059718320268	WITHOUT_CLASSIFICATION	2.9402816797319877E-4	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9991187637285097	WITHOUT_CLASSIFICATION	8.812362714903401E-4	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9992897651799825	WITHOUT_CLASSIFICATION	7.102348200175552E-4	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9992897651799825	WITHOUT_CLASSIFICATION	7.102348200175552E-4	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9988740846200175	WITHOUT_CLASSIFICATION	0.0011259153799825566	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9950086230455083	WITHOUT_CLASSIFICATION	0.004991376954491717	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9991874424146194	WITHOUT_CLASSIFICATION	8.125575853806017E-4	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9996483762049626	WITHOUT_CLASSIFICATION	3.5162379503733145E-4	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.9998484211656206	WITHOUT_CLASSIFICATION	1.5157883437955745E-4	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.99986945333594	WITHOUT_CLASSIFICATION	1.305466640599144E-4	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9990567043572398	WITHOUT_CLASSIFICATION	9.432956427600795E-4	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9991979245574625	WITHOUT_CLASSIFICATION	8.020754425373983E-4	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9992734926985848	WITHOUT_CLASSIFICATION	7.265073014152461E-4	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.9993028475089172	WITHOUT_CLASSIFICATION	6.971524910828814E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9969452177950829	WITHOUT_CLASSIFICATION	0.003054782204916962	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9992258265310253	WITHOUT_CLASSIFICATION	7.741734689746409E-4	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9992258265310253	WITHOUT_CLASSIFICATION	7.741734689746409E-4	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9987793713196792	WITHOUT_CLASSIFICATION	0.001220628680320826	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9987793713196792	WITHOUT_CLASSIFICATION	0.001220628680320826	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9991529226410344	WITHOUT_CLASSIFICATION	8.470773589657253E-4	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9997548152208198	WITHOUT_CLASSIFICATION	2.451847791801633E-4	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9991150693238321	WITHOUT_CLASSIFICATION	8.849306761678718E-4	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9994892033710373	WITHOUT_CLASSIFICATION	5.107966289627053E-4	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9998966509276642	WITHOUT_CLASSIFICATION	1.0334907233588108E-4	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9997180445993108	WITHOUT_CLASSIFICATION	2.8195540068925106E-4	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.998222894303835	WITHOUT_CLASSIFICATION	0.0017771056961649013	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9993292436052615	WITHOUT_CLASSIFICATION	6.707563947384702E-4	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9730253100130561	WITHOUT_CLASSIFICATION	0.0269746899869438	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9995650904593943	WITHOUT_CLASSIFICATION	4.349095406056096E-4	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9997993834273187	WITHOUT_CLASSIFICATION	2.0061657268141426E-4	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.9997317758473266	WITHOUT_CLASSIFICATION	2.68224152673375E-4	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.998842157267385	WITHOUT_CLASSIFICATION	0.0011578427326150095	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9548447938838058	WITHOUT_CLASSIFICATION	0.04515520611619406	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9996397621549558	WITHOUT_CLASSIFICATION	3.602378450443104E-4	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.999667382697898	WITHOUT_CLASSIFICATION	3.326173021020464E-4	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999758107869933	WITHOUT_CLASSIFICATION	2.418921300672287E-5	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9991745952489007	WITHOUT_CLASSIFICATION	8.254047510994077E-4	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9931446474064158	WITHOUT_CLASSIFICATION	0.006855352593584163	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9986856641527742	WITHOUT_CLASSIFICATION	0.0013143358472258839	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9991088509387958	WITHOUT_CLASSIFICATION	8.911490612042885E-4	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9997783387064734	WITHOUT_CLASSIFICATION	2.2166129352659897E-4	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9997668365280017	WITHOUT_CLASSIFICATION	2.3316347199818193E-4	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9998667782182058	WITHOUT_CLASSIFICATION	1.3322178179420803E-4	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9997326268820895	WITHOUT_CLASSIFICATION	2.6737311791045755E-4	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9990578542257437	WITHOUT_CLASSIFICATION	9.421457742564368E-4	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.999685485328042	WITHOUT_CLASSIFICATION	3.145146719579595E-4	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9989597501420566	WITHOUT_CLASSIFICATION	0.001040249857943375	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9997790769128082	WITHOUT_CLASSIFICATION	2.2092308719184336E-4	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9988752787284406	WITHOUT_CLASSIFICATION	0.0011247212715594145	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9997466465626408	WITHOUT_CLASSIFICATION	2.533534373591875E-4	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9990833265172243	WITHOUT_CLASSIFICATION	9.166734827757516E-4	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9995371197388032	WITHOUT_CLASSIFICATION	4.628802611968415E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9976615155417983	WITHOUT_CLASSIFICATION	0.002338484458201826	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9976615155417983	WITHOUT_CLASSIFICATION	0.002338484458201826	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9976615155417983	WITHOUT_CLASSIFICATION	0.002338484458201826	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9976615155417983	WITHOUT_CLASSIFICATION	0.002338484458201826	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9976615155417983	WITHOUT_CLASSIFICATION	0.002338484458201826	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9976615155417983	WITHOUT_CLASSIFICATION	0.002338484458201826	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.999715778009226	WITHOUT_CLASSIFICATION	2.842219907740742E-4	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.9998938917512038	WITHOUT_CLASSIFICATION	1.0610824879623753E-4	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.999943571977608	WITHOUT_CLASSIFICATION	5.642802239205353E-5	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9988959768745791	WITHOUT_CLASSIFICATION	0.00110402312542087	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9988959768745791	WITHOUT_CLASSIFICATION	0.00110402312542087	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9994606838644873	WITHOUT_CLASSIFICATION	5.393161355127504E-4	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9994606838644873	WITHOUT_CLASSIFICATION	5.393161355127504E-4	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.9999455979344198	WITHOUT_CLASSIFICATION	5.440206558026251E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9996962490566894	WITHOUT_CLASSIFICATION	3.0375094331058387E-4	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9995691657133587	WITHOUT_CLASSIFICATION	4.308342866411684E-4	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.999869976859994	WITHOUT_CLASSIFICATION	1.300231400060333E-4	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9984633686740534	WITHOUT_CLASSIFICATION	0.0015366313259465685	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9994564743705838	WITHOUT_CLASSIFICATION	5.435256294162734E-4	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9998391286918199	WITHOUT_CLASSIFICATION	1.6087130818007107E-4	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9998391286918199	WITHOUT_CLASSIFICATION	1.6087130818007107E-4	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9997472641692091	WITHOUT_CLASSIFICATION	2.52735830790893E-4	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9997472641692091	WITHOUT_CLASSIFICATION	2.52735830790893E-4	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9997472641692091	WITHOUT_CLASSIFICATION	2.52735830790893E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9958401034753636	WITHOUT_CLASSIFICATION	0.004159896524636429	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9958401034753636	WITHOUT_CLASSIFICATION	0.004159896524636429	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9998132207728253	WITHOUT_CLASSIFICATION	1.8677922717479656E-4	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9997144802742778	WITHOUT_CLASSIFICATION	2.855197257222003E-4	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.9999079402981681	WITHOUT_CLASSIFICATION	9.205970183184926E-5	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9950593074184758	WITHOUT_CLASSIFICATION	0.004940692581524143	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9996928889460823	WITHOUT_CLASSIFICATION	3.0711105391771447E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9996928889460823	WITHOUT_CLASSIFICATION	3.0711105391771447E-4	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9997073037474445	WITHOUT_CLASSIFICATION	2.9269625255551546E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9976615155417983	WITHOUT_CLASSIFICATION	0.002338484458201826	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9996928889460823	WITHOUT_CLASSIFICATION	3.0711105391771447E-4	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9994929467911314	WITHOUT_CLASSIFICATION	5.070532088685193E-4	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9994929467911314	WITHOUT_CLASSIFICATION	5.070532088685193E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9996928889460823	WITHOUT_CLASSIFICATION	3.0711105391771447E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9996928889460823	WITHOUT_CLASSIFICATION	3.0711105391771447E-4	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9996928889460823	WITHOUT_CLASSIFICATION	3.0711105391771447E-4	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9974969317758429	WITHOUT_CLASSIFICATION	0.0025030682241570608	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9994761777017873	WITHOUT_CLASSIFICATION	5.238222982127368E-4	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9985068546496317	WITHOUT_CLASSIFICATION	0.0014931453503681735	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9985068546496317	WITHOUT_CLASSIFICATION	0.0014931453503681735	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.999851733247812	WITHOUT_CLASSIFICATION	1.482667521881272E-4	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999440065220716	WITHOUT_CLASSIFICATION	5.599347792841765E-5	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9998204176215483	WITHOUT_CLASSIFICATION	1.7958237845165648E-4	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9985068546496317	WITHOUT_CLASSIFICATION	0.0014931453503681735	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9618100541899405	WITHOUT_CLASSIFICATION	0.03818994581005946	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.9999855038997797	WITHOUT_CLASSIFICATION	1.4496100220290542E-5	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9998842837217449	WITHOUT_CLASSIFICATION	1.1571627825508461E-4	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9993493036536352	WITHOUT_CLASSIFICATION	6.506963463648385E-4	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9997040668567612	WITHOUT_CLASSIFICATION	2.959331432387409E-4	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9993680382666754	WITHOUT_CLASSIFICATION	6.319617333245683E-4	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9993605078447547	WITHOUT_CLASSIFICATION	6.394921552453532E-4	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9994482331030706	WITHOUT_CLASSIFICATION	5.51766896929287E-4	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9998409777625061	WITHOUT_CLASSIFICATION	1.590222374938344E-4	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9998449872023969	WITHOUT_CLASSIFICATION	1.5501279760319036E-4	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9993332898172054	WITHOUT_CLASSIFICATION	6.667101827945886E-4	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.9996027855055213	WITHOUT_CLASSIFICATION	3.9721449447873054E-4	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9997251585832927	WITHOUT_CLASSIFICATION	2.7484141670724825E-4	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9997451600904659	WITHOUT_CLASSIFICATION	2.548399095341562E-4	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9997629089126675	WITHOUT_CLASSIFICATION	2.370910873325411E-4	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9996556898531719	WITHOUT_CLASSIFICATION	3.4431014682809625E-4	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9997251585832927	WITHOUT_CLASSIFICATION	2.7484141670724825E-4	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9993322789707274	WITHOUT_CLASSIFICATION	6.677210292726987E-4	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9997451600904659	WITHOUT_CLASSIFICATION	2.548399095341562E-4	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9997629089126675	WITHOUT_CLASSIFICATION	2.370910873325411E-4	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9996638070326749	WITHOUT_CLASSIFICATION	3.3619296732514687E-4	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.999751311790692	WITHOUT_CLASSIFICATION	2.486882093079891E-4	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9997451600904659	WITHOUT_CLASSIFICATION	2.548399095341562E-4	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9996012589692933	WITHOUT_CLASSIFICATION	3.9874103070671694E-4	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9985330090151232	WITHOUT_CLASSIFICATION	0.0014669909848768182	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9996754924006381	WITHOUT_CLASSIFICATION	3.245075993618679E-4	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.9954461172547636	WITHOUT_CLASSIFICATION	0.0045538827452363045	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9994895964755296	WITHOUT_CLASSIFICATION	5.104035244704186E-4	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9995031424668562	WITHOUT_CLASSIFICATION	4.968575331437444E-4	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9998246958165682	WITHOUT_CLASSIFICATION	1.75304183431772E-4	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.999679824376237	WITHOUT_CLASSIFICATION	3.201756237630684E-4	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9997101918994156	WITHOUT_CLASSIFICATION	2.898081005844959E-4	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9996692015787351	WITHOUT_CLASSIFICATION	3.3079842126487567E-4	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9994446104159658	WITHOUT_CLASSIFICATION	5.553895840341622E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997306640211463	WITHOUT_CLASSIFICATION	2.6933597885375033E-4	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.9997011802070647	WITHOUT_CLASSIFICATION	2.988197929352651E-4	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9997627266638909	WITHOUT_CLASSIFICATION	2.372733361090427E-4	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9998432322079248	WITHOUT_CLASSIFICATION	1.5676779207514805E-4	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9993322217167333	WITHOUT_CLASSIFICATION	6.677782832665562E-4	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9993322217167333	WITHOUT_CLASSIFICATION	6.677782832665562E-4	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9992809038117929	WITHOUT_CLASSIFICATION	7.190961882070396E-4	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9992809038117929	WITHOUT_CLASSIFICATION	7.190961882070396E-4	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9993493036536352	WITHOUT_CLASSIFICATION	6.506963463648385E-4	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9993493036536352	WITHOUT_CLASSIFICATION	6.506963463648385E-4	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9996793838328311	WITHOUT_CLASSIFICATION	3.206161671689369E-4	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9997611740194029	WITHOUT_CLASSIFICATION	2.3882598059707185E-4	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9994909739208624	WITHOUT_CLASSIFICATION	5.090260791375727E-4	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9992395714719279	WITHOUT_CLASSIFICATION	7.60428528072113E-4	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9993493036536352	WITHOUT_CLASSIFICATION	6.506963463648385E-4	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9992809038117929	WITHOUT_CLASSIFICATION	7.190961882070396E-4	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9993493036536352	WITHOUT_CLASSIFICATION	6.506963463648385E-4	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9997925200643429	WITHOUT_CLASSIFICATION	2.0747993565721422E-4	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.999369310691313	WITHOUT_CLASSIFICATION	6.306893086870274E-4	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9999110555753196	WITHOUT_CLASSIFICATION	8.894442468045409E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9998996669584875	WITHOUT_CLASSIFICATION	1.0033304151249002E-4	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9999268664721667	WITHOUT_CLASSIFICATION	7.31335278332574E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9982949738415117	WITHOUT_CLASSIFICATION	0.0017050261584882868	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9777877093271349	WITHOUT_CLASSIFICATION	0.02221229067286514	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9985825572268078	WITHOUT_CLASSIFICATION	0.0014174427731922638	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9983370684655559	WITHOUT_CLASSIFICATION	0.0016629315344440364	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9993371467106245	WITHOUT_CLASSIFICATION	6.628532893756382E-4	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9997891721718717	WITHOUT_CLASSIFICATION	2.1082782812840176E-4	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9985405905985417	WITHOUT_CLASSIFICATION	0.0014594094014582393	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.9998400286649078	WITHOUT_CLASSIFICATION	1.5997133509211434E-4	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9990854948412028	WITHOUT_CLASSIFICATION	9.145051587971773E-4	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9998427203923752	WITHOUT_CLASSIFICATION	1.572796076247107E-4	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.999696474687384	WITHOUT_CLASSIFICATION	3.03525312615951E-4	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9997417550081201	WITHOUT_CLASSIFICATION	2.58244991879892E-4	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9997870613032918	WITHOUT_CLASSIFICATION	2.129386967081722E-4	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9997338366815455	WITHOUT_CLASSIFICATION	2.661633184546152E-4	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.999746850212919	WITHOUT_CLASSIFICATION	2.531497870810355E-4	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.9997883544448344	WITHOUT_CLASSIFICATION	2.1164555516556895E-4	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9998959675704883	WITHOUT_CLASSIFICATION	1.0403242951172998E-4	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9998381060325454	WITHOUT_CLASSIFICATION	1.6189396745458598E-4	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.955838884034587	WITHOUT_CLASSIFICATION	0.04416111596541289	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9997965165214837	WITHOUT_CLASSIFICATION	2.0348347851641797E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9997965165214837	WITHOUT_CLASSIFICATION	2.0348347851641797E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9990205130420624	WITHOUT_CLASSIFICATION	9.794869579375838E-4	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999122997053927	WITHOUT_CLASSIFICATION	8.770029460725864E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.9995429165634859	WITHOUT_CLASSIFICATION	4.5708343651399536E-4	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9992063141648662	WITHOUT_CLASSIFICATION	7.936858351338857E-4	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999805113667383	WITHOUT_CLASSIFICATION	1.9488633261707819E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999805113667383	WITHOUT_CLASSIFICATION	1.9488633261707819E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999805113667383	WITHOUT_CLASSIFICATION	1.9488633261707819E-4	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.9997010943554299	WITHOUT_CLASSIFICATION	2.9890564457015075E-4	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.99915859168699	WITHOUT_CLASSIFICATION	8.414083130099957E-4	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.99915859168699	WITHOUT_CLASSIFICATION	8.414083130099957E-4	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9993830195701577	WITHOUT_CLASSIFICATION	6.169804298422446E-4	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9973945758969783	WITHOUT_CLASSIFICATION	0.002605424103021617	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9997761162373027	WITHOUT_CLASSIFICATION	2.2388376269729112E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9997761162373027	WITHOUT_CLASSIFICATION	2.2388376269729112E-4	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9997761162373027	WITHOUT_CLASSIFICATION	2.2388376269729112E-4	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999314282962818	WITHOUT_CLASSIFICATION	6.857170371823201E-5	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.999661215182197	WITHOUT_CLASSIFICATION	3.3878481780304936E-4	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.99907310944663	WITHOUT_CLASSIFICATION	9.26890553369945E-4	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9973914580928125	WITHOUT_CLASSIFICATION	0.0026085419071874656	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.9997940951371026	WITHOUT_CLASSIFICATION	2.0590486289740902E-4	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9997125144580861	WITHOUT_CLASSIFICATION	2.8748554191386586E-4	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9998242153470331	WITHOUT_CLASSIFICATION	1.7578465296679013E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999040328360504	WITHOUT_CLASSIFICATION	9.596716394956471E-5	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9974562690430236	WITHOUT_CLASSIFICATION	0.0025437309569763303	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9974938165854044	WITHOUT_CLASSIFICATION	0.002506183414595671	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9992403311931565	WITHOUT_CLASSIFICATION	7.596688068436005E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.9996990564726129	WITHOUT_CLASSIFICATION	3.00943527387113E-4	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.99971915014249	WITHOUT_CLASSIFICATION	2.808498575099294E-4	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.99971915014249	WITHOUT_CLASSIFICATION	2.808498575099294E-4	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.99971915014249	WITHOUT_CLASSIFICATION	2.808498575099294E-4	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9997731575030626	WITHOUT_CLASSIFICATION	2.2684249693729917E-4	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9997731575030626	WITHOUT_CLASSIFICATION	2.2684249693729917E-4	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9997390634504401	WITHOUT_CLASSIFICATION	2.6093654955992044E-4	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9995700577648563	WITHOUT_CLASSIFICATION	4.299422351437449E-4	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9986682560543522	WITHOUT_CLASSIFICATION	0.0013317439456478094	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9990206452028119	WITHOUT_CLASSIFICATION	9.793547971880744E-4	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.99898941028568	WITHOUT_CLASSIFICATION	0.0010105897143199952	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.9997827910978743	WITHOUT_CLASSIFICATION	2.1720890212571458E-4	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9997451356334859	WITHOUT_CLASSIFICATION	2.5486436651405494E-4	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.999903139068856	WITHOUT_CLASSIFICATION	9.686093114403867E-5	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.998621829738828	WITHOUT_CLASSIFICATION	0.0013781702611720523	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9997728445689529	WITHOUT_CLASSIFICATION	2.2715543104706885E-4	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9998756325560407	WITHOUT_CLASSIFICATION	1.243674439592365E-4	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.9999077268013208	WITHOUT_CLASSIFICATION	9.22731986792324E-5	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9988232111632669	WITHOUT_CLASSIFICATION	0.0011767888367331903	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9996724502804529	WITHOUT_CLASSIFICATION	3.2754971954712805E-4	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9998835372918181	WITHOUT_CLASSIFICATION	1.1646270818195935E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9998369585603135	WITHOUT_CLASSIFICATION	1.6304143968639144E-4	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9990206452028119	WITHOUT_CLASSIFICATION	9.793547971880744E-4	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9998285293517861	WITHOUT_CLASSIFICATION	1.7147064821373205E-4	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9996248944587833	WITHOUT_CLASSIFICATION	3.7510554121670105E-4	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9998150060599429	WITHOUT_CLASSIFICATION	1.8499394005709434E-4	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9998150060599429	WITHOUT_CLASSIFICATION	1.8499394005709434E-4	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9992403168694571	WITHOUT_CLASSIFICATION	7.596831305428433E-4	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.998667739424245	WITHOUT_CLASSIFICATION	0.0013322605757550101	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.999838706763403	WITHOUT_CLASSIFICATION	1.6129323659703367E-4	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.9983468304415264	WITHOUT_CLASSIFICATION	0.0016531695584735466	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9997540219111427	WITHOUT_CLASSIFICATION	2.459780888572235E-4	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9983470426492672	WITHOUT_CLASSIFICATION	0.001652957350732825	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.999811454421357	WITHOUT_CLASSIFICATION	1.8854557864303787E-4	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9992642375304082	WITHOUT_CLASSIFICATION	7.357624695918306E-4	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9990110001208136	WITHOUT_CLASSIFICATION	9.88999879186363E-4	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9998689464015181	WITHOUT_CLASSIFICATION	1.3105359848189198E-4	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9997785594731043	WITHOUT_CLASSIFICATION	2.2144052689560998E-4	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9998407943906888	WITHOUT_CLASSIFICATION	1.5920560931120318E-4	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9996694675475989	WITHOUT_CLASSIFICATION	3.3053245240102097E-4	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9997665828217177	WITHOUT_CLASSIFICATION	2.3341717828225805E-4	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9997072949962988	WITHOUT_CLASSIFICATION	2.9270500370122475E-4	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9987194181369548	WITHOUT_CLASSIFICATION	0.0012805818630452824	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9989097821306739	WITHOUT_CLASSIFICATION	0.0010902178693259987	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9995675499892434	WITHOUT_CLASSIFICATION	4.3245001075666663E-4	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9996592260437849	WITHOUT_CLASSIFICATION	3.407739562151768E-4	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9996592260437849	WITHOUT_CLASSIFICATION	3.407739562151768E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999361787701384	WITHOUT_CLASSIFICATION	6.382122986160176E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9996724502804529	WITHOUT_CLASSIFICATION	3.2754971954712805E-4	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9997572079750069	WITHOUT_CLASSIFICATION	2.4279202499309063E-4	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999096772591176	WITHOUT_CLASSIFICATION	9.032274088240226E-5	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9962773304412432	WITHOUT_CLASSIFICATION	0.0037226695587566916	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.9998251249165718	WITHOUT_CLASSIFICATION	1.7487508342830564E-4	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9988843808049628	WITHOUT_CLASSIFICATION	0.0011156191950372088	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9996724502804529	WITHOUT_CLASSIFICATION	3.2754971954712805E-4	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9967027252222094	WITHOUT_CLASSIFICATION	0.003297274777790662	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9997330719909907	WITHOUT_CLASSIFICATION	2.6692800900925156E-4	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9993358721179708	WITHOUT_CLASSIFICATION	6.641278820291022E-4	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9995820256477982	WITHOUT_CLASSIFICATION	4.1797435220190706E-4	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9997907319098157	WITHOUT_CLASSIFICATION	2.0926809018426203E-4	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9999777822746324	WITHOUT_CLASSIFICATION	2.221772536763109E-5	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9967027252222094	WITHOUT_CLASSIFICATION	0.003297274777790662	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9996760294704427	WITHOUT_CLASSIFICATION	3.2397052955743293E-4	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9995104586474454	WITHOUT_CLASSIFICATION	4.895413525546772E-4	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.9999695255271082	WITHOUT_CLASSIFICATION	3.0474472891933833E-5	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999026316751234	WITHOUT_CLASSIFICATION	9.736832487661749E-5	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9999026316751234	WITHOUT_CLASSIFICATION	9.736832487661749E-5	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9994215826858898	WITHOUT_CLASSIFICATION	5.784173141102523E-4	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.99914615632601	WITHOUT_CLASSIFICATION	8.538436739901401E-4	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9998957645348288	WITHOUT_CLASSIFICATION	1.0423546517128144E-4	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.9994567319167917	WITHOUT_CLASSIFICATION	5.432680832083225E-4	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9998612304992454	WITHOUT_CLASSIFICATION	1.3876950075471757E-4	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.9994274793900344	WITHOUT_CLASSIFICATION	5.725206099656043E-4	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9991857393489383	WITHOUT_CLASSIFICATION	8.142606510617016E-4	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9997495270246166	WITHOUT_CLASSIFICATION	2.5047297538332316E-4	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9998804171518807	WITHOUT_CLASSIFICATION	1.1958284811929732E-4	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9998352351805914	WITHOUT_CLASSIFICATION	1.64764819408536E-4	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9993009386221501	WITHOUT_CLASSIFICATION	6.990613778498605E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9997556174703305	WITHOUT_CLASSIFICATION	2.443825296695553E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9997556174703305	WITHOUT_CLASSIFICATION	2.443825296695553E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9997556174703305	WITHOUT_CLASSIFICATION	2.443825296695553E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9997556174703305	WITHOUT_CLASSIFICATION	2.443825296695553E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9997556174703305	WITHOUT_CLASSIFICATION	2.443825296695553E-4	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9997556174703305	WITHOUT_CLASSIFICATION	2.443825296695553E-4	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9995219328334629	WITHOUT_CLASSIFICATION	4.7806716653697924E-4	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9998815998999926	WITHOUT_CLASSIFICATION	1.1840010000751212E-4	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.999674284512993	WITHOUT_CLASSIFICATION	3.2571548700700316E-4	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9998900536703453	WITHOUT_CLASSIFICATION	1.0994632965469149E-4	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9998476594649924	WITHOUT_CLASSIFICATION	1.523405350075399E-4	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9998050036984452	WITHOUT_CLASSIFICATION	1.9499630155484117E-4	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9998298515001761	WITHOUT_CLASSIFICATION	1.701484998238199E-4	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9998298515001761	WITHOUT_CLASSIFICATION	1.701484998238199E-4	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9981931605902351	WITHOUT_CLASSIFICATION	0.0018068394097648368	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.9999044871198649	WITHOUT_CLASSIFICATION	9.551288013508552E-5	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9995167813197957	WITHOUT_CLASSIFICATION	4.8321868020425343E-4	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9992585997117893	WITHOUT_CLASSIFICATION	7.414002882108142E-4	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9990360428202952	WITHOUT_CLASSIFICATION	9.639571797046707E-4	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9996126353398986	WITHOUT_CLASSIFICATION	3.8736466010127324E-4	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9983349373559909	WITHOUT_CLASSIFICATION	0.0016650626440090483	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.9996406754416001	WITHOUT_CLASSIFICATION	3.593245583999074E-4	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.9996920676891071	WITHOUT_CLASSIFICATION	3.0793231089289174E-4	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9994423229340963	WITHOUT_CLASSIFICATION	5.57677065903812E-4	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.9998665271366232	WITHOUT_CLASSIFICATION	1.3347286337689047E-4	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9998630876760881	WITHOUT_CLASSIFICATION	1.3691232391185355E-4	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9994917152957992	WITHOUT_CLASSIFICATION	5.082847042008048E-4	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9997288789014782	WITHOUT_CLASSIFICATION	2.711210985218147E-4	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9994682749895888	WITHOUT_CLASSIFICATION	5.317250104112046E-4	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9998044487092463	WITHOUT_CLASSIFICATION	1.9555129075364073E-4	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9996981707437939	WITHOUT_CLASSIFICATION	3.0182925620620706E-4	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9997404156777471	WITHOUT_CLASSIFICATION	2.5958432225295944E-4	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9996187770332464	WITHOUT_CLASSIFICATION	3.8122296675360086E-4	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9997011920744229	WITHOUT_CLASSIFICATION	2.988079255771348E-4	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9997816093209702	WITHOUT_CLASSIFICATION	2.1839067902982705E-4	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9993903966808713	WITHOUT_CLASSIFICATION	6.096033191287494E-4	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.999880253283581	WITHOUT_CLASSIFICATION	1.197467164190082E-4	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9996628419092802	WITHOUT_CLASSIFICATION	3.371580907196893E-4	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9994066479948133	WITHOUT_CLASSIFICATION	5.933520051866881E-4	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.9990975515297383	WITHOUT_CLASSIFICATION	9.024484702616758E-4	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9997055685876682	WITHOUT_CLASSIFICATION	2.9443141233180054E-4	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9994733135444756	WITHOUT_CLASSIFICATION	5.26686455524573E-4	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9994733135444756	WITHOUT_CLASSIFICATION	5.26686455524573E-4	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9994733135444756	WITHOUT_CLASSIFICATION	5.26686455524573E-4	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9994763726592806	WITHOUT_CLASSIFICATION	5.236273407194392E-4	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9988019353715951	WITHOUT_CLASSIFICATION	0.0011980646284048934	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999439274062984	WITHOUT_CLASSIFICATION	5.607259370157188E-5	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9997869016640457	WITHOUT_CLASSIFICATION	2.1309833595431428E-4	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9996286590849757	WITHOUT_CLASSIFICATION	3.713409150243385E-4	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9998298515001761	WITHOUT_CLASSIFICATION	1.701484998238199E-4	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9998811979266677	WITHOUT_CLASSIFICATION	1.1880207333214914E-4	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.999611430967212	WITHOUT_CLASSIFICATION	3.8856903278808666E-4	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9998214314860361	WITHOUT_CLASSIFICATION	1.7856851396382865E-4	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9997244690554001	WITHOUT_CLASSIFICATION	2.7553094459991496E-4	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9995669983715453	WITHOUT_CLASSIFICATION	4.330016284546711E-4	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9997569988957719	WITHOUT_CLASSIFICATION	2.430011042280725E-4	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9997569988957719	WITHOUT_CLASSIFICATION	2.430011042280725E-4	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9989005180549355	WITHOUT_CLASSIFICATION	0.0010994819450644558	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9998122213992252	WITHOUT_CLASSIFICATION	1.877786007748782E-4	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9994733725217623	WITHOUT_CLASSIFICATION	5.266274782378396E-4	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9995849577763084	WITHOUT_CLASSIFICATION	4.1504222369159575E-4	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.999348592733323	WITHOUT_CLASSIFICATION	6.514072666770373E-4	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9998333715420442	WITHOUT_CLASSIFICATION	1.6662845795582633E-4	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9997514143024536	WITHOUT_CLASSIFICATION	2.485856975463746E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9987712579454154	WITHOUT_CLASSIFICATION	0.0012287420545845054	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9997056241969724	WITHOUT_CLASSIFICATION	2.943758030275533E-4	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9997056241969724	WITHOUT_CLASSIFICATION	2.943758030275533E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9994733135444756	WITHOUT_CLASSIFICATION	5.26686455524573E-4	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9994733135444756	WITHOUT_CLASSIFICATION	5.26686455524573E-4	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9994773915308348	WITHOUT_CLASSIFICATION	5.226084691651797E-4	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9994733135444756	WITHOUT_CLASSIFICATION	5.26686455524573E-4	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.999862145816608	WITHOUT_CLASSIFICATION	1.378541833920059E-4	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.999643428976514	WITHOUT_CLASSIFICATION	3.565710234859767E-4	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9989238163777656	WITHOUT_CLASSIFICATION	0.0010761836222344288	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9993196333609338	WITHOUT_CLASSIFICATION	6.80366639066208E-4	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9997984074730498	WITHOUT_CLASSIFICATION	2.0159252695006643E-4	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9996816294762975	WITHOUT_CLASSIFICATION	3.1837052370247467E-4	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9995443453419978	WITHOUT_CLASSIFICATION	4.5565465800220085E-4	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9987034594552315	WITHOUT_CLASSIFICATION	0.0012965405447684635	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9997683000019071	WITHOUT_CLASSIFICATION	2.3169999809290084E-4	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.9987712579454154	WITHOUT_CLASSIFICATION	0.0012287420545845054	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.999887895837655	WITHOUT_CLASSIFICATION	1.1210416234501258E-4	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.999887895837655	WITHOUT_CLASSIFICATION	1.1210416234501258E-4	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9997683000019071	WITHOUT_CLASSIFICATION	2.3169999809290084E-4	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9993801526433607	WITHOUT_CLASSIFICATION	6.198473566392999E-4	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9998560869829514	WITHOUT_CLASSIFICATION	1.4391301704867957E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9997990841061333	WITHOUT_CLASSIFICATION	2.0091589386679457E-4	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9992910656455151	WITHOUT_CLASSIFICATION	7.089343544850117E-4	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.997907379068927	WITHOUT_CLASSIFICATION	0.0020926209310729174	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9998168068106132	WITHOUT_CLASSIFICATION	1.8319318938674918E-4	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9995024889201976	WITHOUT_CLASSIFICATION	4.975110798025459E-4	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997582790483639	WITHOUT_CLASSIFICATION	2.4172095163617628E-4	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999916204124174	WITHOUT_CLASSIFICATION	8.379587582502799E-6	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.99981158003527	WITHOUT_CLASSIFICATION	1.8841996472992548E-4	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9992636959849439	WITHOUT_CLASSIFICATION	7.363040150561908E-4	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9992636959849439	WITHOUT_CLASSIFICATION	7.363040150561908E-4	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9998508475525314	WITHOUT_CLASSIFICATION	1.4915244746848894E-4	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9995138549724931	WITHOUT_CLASSIFICATION	4.8614502750679963E-4	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9995217827810031	WITHOUT_CLASSIFICATION	4.782172189968049E-4	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9998201418334831	WITHOUT_CLASSIFICATION	1.7985816651680832E-4	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.9998201418334831	WITHOUT_CLASSIFICATION	1.7985816651680832E-4	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9997770155169162	WITHOUT_CLASSIFICATION	2.2298448308374444E-4	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9997770155169162	WITHOUT_CLASSIFICATION	2.2298448308374444E-4	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9998741861949082	WITHOUT_CLASSIFICATION	1.2581380509190933E-4	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9998484535486437	WITHOUT_CLASSIFICATION	1.515464513563322E-4	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9998138112818317	WITHOUT_CLASSIFICATION	1.8618871816822636E-4	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9998535941105425	WITHOUT_CLASSIFICATION	1.4640588945750573E-4	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9998433585458778	WITHOUT_CLASSIFICATION	1.566414541221376E-4	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9998860034194743	WITHOUT_CLASSIFICATION	1.139965805257436E-4	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.999696458666078	WITHOUT_CLASSIFICATION	3.035413339219095E-4	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.9998741861949082	WITHOUT_CLASSIFICATION	1.2581380509190933E-4	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9997744991270613	WITHOUT_CLASSIFICATION	2.2550087293880336E-4	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9998484535486437	WITHOUT_CLASSIFICATION	1.515464513563322E-4	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.999646139373886	WITHOUT_CLASSIFICATION	3.5386062611400765E-4	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9998138112818317	WITHOUT_CLASSIFICATION	1.8618871816822636E-4	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9998535941105425	WITHOUT_CLASSIFICATION	1.4640588945750573E-4	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9998433585458778	WITHOUT_CLASSIFICATION	1.566414541221376E-4	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9997739430330661	WITHOUT_CLASSIFICATION	2.26056966933939E-4	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9998448843160731	WITHOUT_CLASSIFICATION	1.5511568392679432E-4	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.9997762851975086	WITHOUT_CLASSIFICATION	2.2371480249137475E-4	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9997648821655215	WITHOUT_CLASSIFICATION	2.3511783447855203E-4	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.999289701484925	WITHOUT_CLASSIFICATION	7.102985150749642E-4	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9997351204489057	WITHOUT_CLASSIFICATION	2.6487955109432413E-4	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.999581061552915	WITHOUT_CLASSIFICATION	4.18938447084971E-4	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9996379986714616	WITHOUT_CLASSIFICATION	3.6200132853831134E-4	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9998098159950753	WITHOUT_CLASSIFICATION	1.9018400492458584E-4	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9993914341999837	WITHOUT_CLASSIFICATION	6.08565800016374E-4	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9998480729483806	WITHOUT_CLASSIFICATION	1.51927051619373E-4	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9996974329288514	WITHOUT_CLASSIFICATION	3.025670711487077E-4	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9996217912500672	WITHOUT_CLASSIFICATION	3.7820874993268984E-4	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9997412092105136	WITHOUT_CLASSIFICATION	2.587907894865048E-4	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9997950784774693	WITHOUT_CLASSIFICATION	2.0492152253080904E-4	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9997908942509858	WITHOUT_CLASSIFICATION	2.0910574901434484E-4	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9996410020773502	WITHOUT_CLASSIFICATION	3.5899792264987236E-4	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9997132501367716	WITHOUT_CLASSIFICATION	2.8674986322833223E-4	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9996356956332394	WITHOUT_CLASSIFICATION	3.643043667606318E-4	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9997839122728839	WITHOUT_CLASSIFICATION	2.160877271161199E-4	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9997376434841416	WITHOUT_CLASSIFICATION	2.623565158584713E-4	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9997403616486455	WITHOUT_CLASSIFICATION	2.596383513544725E-4	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9997271280468049	WITHOUT_CLASSIFICATION	2.7287195319511913E-4	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.999747222117399	WITHOUT_CLASSIFICATION	2.527778826009988E-4	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.9998277600010758	WITHOUT_CLASSIFICATION	1.7223999892422624E-4	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9996865757775918	WITHOUT_CLASSIFICATION	3.1342422240817806E-4	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9994418342276801	WITHOUT_CLASSIFICATION	5.581657723199676E-4	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.999065675564699	WITHOUT_CLASSIFICATION	9.343244353009186E-4	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9989571862317995	WITHOUT_CLASSIFICATION	0.0010428137682004632	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9992910656455151	WITHOUT_CLASSIFICATION	7.089343544850117E-4	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9981173454245783	WITHOUT_CLASSIFICATION	0.0018826545754217227	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9996046860663791	WITHOUT_CLASSIFICATION	3.9531393362097605E-4	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9993712087514927	WITHOUT_CLASSIFICATION	6.287912485072623E-4	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9991793508971668	WITHOUT_CLASSIFICATION	8.206491028331551E-4	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9997159945769015	WITHOUT_CLASSIFICATION	2.840054230984568E-4	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.9979208684423626	WITHOUT_CLASSIFICATION	0.0020791315576373973	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9997017549093398	WITHOUT_CLASSIFICATION	2.9824509066016675E-4	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9995057427369449	WITHOUT_CLASSIFICATION	4.94257263055002E-4	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9963995346657264	WITHOUT_CLASSIFICATION	0.0036004653342737165	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9999369733650479	WITHOUT_CLASSIFICATION	6.302663495211784E-5	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9995164772227298	WITHOUT_CLASSIFICATION	4.835227772701305E-4	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9996626933373988	WITHOUT_CLASSIFICATION	3.3730666260131843E-4	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999969591073002	WITHOUT_CLASSIFICATION	3.0408926997343368E-6	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9930745964841973	WITHOUT_CLASSIFICATION	0.006925403515802626	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9996319894251137	WITHOUT_CLASSIFICATION	3.6801057488643955E-4	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9997882729314717	WITHOUT_CLASSIFICATION	2.1172706852822117E-4	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9996974329288514	WITHOUT_CLASSIFICATION	3.025670711487077E-4	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9996217912500672	WITHOUT_CLASSIFICATION	3.7820874993268984E-4	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9997412092105136	WITHOUT_CLASSIFICATION	2.587907894865048E-4	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9997950784774693	WITHOUT_CLASSIFICATION	2.0492152253080904E-4	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9997908942509858	WITHOUT_CLASSIFICATION	2.0910574901434484E-4	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9996410020773502	WITHOUT_CLASSIFICATION	3.5899792264987236E-4	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9997132501367716	WITHOUT_CLASSIFICATION	2.8674986322833223E-4	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9997132501367716	WITHOUT_CLASSIFICATION	2.8674986322833223E-4	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9994418342276801	WITHOUT_CLASSIFICATION	5.581657723199676E-4	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.999065675564699	WITHOUT_CLASSIFICATION	9.343244353009186E-4	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9989571862317995	WITHOUT_CLASSIFICATION	0.0010428137682004632	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9992197473796135	WITHOUT_CLASSIFICATION	7.802526203865746E-4	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9992197473796135	WITHOUT_CLASSIFICATION	7.802526203865746E-4	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9981173454245783	WITHOUT_CLASSIFICATION	0.0018826545754217227	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9996046860663791	WITHOUT_CLASSIFICATION	3.9531393362097605E-4	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9993712087514927	WITHOUT_CLASSIFICATION	6.287912485072623E-4	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9997427786729502	WITHOUT_CLASSIFICATION	2.5722132704975747E-4	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9996548353329521	WITHOUT_CLASSIFICATION	3.4516466704797617E-4	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9998280268723676	WITHOUT_CLASSIFICATION	1.7197312763239493E-4	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9997921974144036	WITHOUT_CLASSIFICATION	2.0780258559640276E-4	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.9997339158872383	WITHOUT_CLASSIFICATION	2.6608411276169753E-4	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.99993411440878	WITHOUT_CLASSIFICATION	6.588559121997537E-5	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.9997136167271437	WITHOUT_CLASSIFICATION	2.863832728563148E-4	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.9996883066960218	WITHOUT_CLASSIFICATION	3.1169330397819807E-4	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9998020455418073	WITHOUT_CLASSIFICATION	1.9795445819256513E-4	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9945448154575599	WITHOUT_CLASSIFICATION	0.005455184542440069	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9998981130959007	WITHOUT_CLASSIFICATION	1.0188690409937698E-4	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9997444013853813	WITHOUT_CLASSIFICATION	2.555986146186451E-4	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9964282634142329	WITHOUT_CLASSIFICATION	0.0035717365857670697	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9997765460688226	WITHOUT_CLASSIFICATION	2.234539311773771E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9998199687554412	WITHOUT_CLASSIFICATION	1.8003124455884243E-4	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9998182562033744	WITHOUT_CLASSIFICATION	1.817437966256519E-4	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999865196174192	WITHOUT_CLASSIFICATION	1.3480382580772932E-5	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9999901062998349	WITHOUT_CLASSIFICATION	9.893700165044234E-6	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9999901062998349	WITHOUT_CLASSIFICATION	9.893700165044234E-6	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9979526023421211	WITHOUT_CLASSIFICATION	0.0020473976578789465	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9992239000535578	WITHOUT_CLASSIFICATION	7.760999464422572E-4	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9990768927667211	WITHOUT_CLASSIFICATION	9.231072332789796E-4	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9997814247975422	WITHOUT_CLASSIFICATION	2.1857520245776858E-4	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9999408687419105	WITHOUT_CLASSIFICATION	5.9131258089486984E-5	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9994691721425074	WITHOUT_CLASSIFICATION	5.308278574925767E-4	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999151746949404	WITHOUT_CLASSIFICATION	8.482530505954821E-5	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9993490772976478	WITHOUT_CLASSIFICATION	6.509227023522686E-4	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.9929979164513943	WITHOUT_CLASSIFICATION	0.007002083548605773	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999878949134794	WITHOUT_CLASSIFICATION	1.2105086520566365E-5	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9993313390758206	WITHOUT_CLASSIFICATION	6.686609241793255E-4	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9992258265310253	WITHOUT_CLASSIFICATION	7.741734689746409E-4	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9997551728757196	WITHOUT_CLASSIFICATION	2.4482712428050216E-4	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9999430578626636	WITHOUT_CLASSIFICATION	5.694213733644177E-5	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.999646139373886	WITHOUT_CLASSIFICATION	3.5386062611400765E-4	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.9992720496878434	WITHOUT_CLASSIFICATION	7.279503121565343E-4	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9995000786891141	WITHOUT_CLASSIFICATION	4.999213108859431E-4	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.998385664319889	WITHOUT_CLASSIFICATION	0.0016143356801110616	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9894017455996107	WITHOUT_CLASSIFICATION	0.010598254400389327	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9998455800745503	WITHOUT_CLASSIFICATION	1.5441992544971487E-4	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9997298220604001	WITHOUT_CLASSIFICATION	2.701779395999326E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9997160333667798	WITHOUT_CLASSIFICATION	2.839666332201153E-4	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9997160333667798	WITHOUT_CLASSIFICATION	2.839666332201153E-4	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9997160333667798	WITHOUT_CLASSIFICATION	2.839666332201153E-4	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9997216499448146	WITHOUT_CLASSIFICATION	2.78350055185432E-4	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9998666892460506	WITHOUT_CLASSIFICATION	1.3331075394944507E-4	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.999900325889492	WITHOUT_CLASSIFICATION	9.967411050805706E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9982819382290969	WITHOUT_CLASSIFICATION	0.0017180617709030618	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9982819382290969	WITHOUT_CLASSIFICATION	0.0017180617709030618	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9997690504669238	WITHOUT_CLASSIFICATION	2.309495330763249E-4	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9991145954105348	WITHOUT_CLASSIFICATION	8.854045894652258E-4	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999366977535291	WITHOUT_CLASSIFICATION	6.330224647082724E-5	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9997844497387127	WITHOUT_CLASSIFICATION	2.1555026128725055E-4	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9996999557952452	WITHOUT_CLASSIFICATION	3.0004420475475066E-4	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999020509430163	WITHOUT_CLASSIFICATION	9.794905698362578E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999020509430163	WITHOUT_CLASSIFICATION	9.794905698362578E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999020509430163	WITHOUT_CLASSIFICATION	9.794905698362578E-5	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9997120548499399	WITHOUT_CLASSIFICATION	2.8794515006010633E-4	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9994323414704535	WITHOUT_CLASSIFICATION	5.676585295466059E-4	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9996608629531046	WITHOUT_CLASSIFICATION	3.39137046895353E-4	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.999978458177344	WITHOUT_CLASSIFICATION	2.1541822656091542E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9995583743581645	WITHOUT_CLASSIFICATION	4.416256418354497E-4	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997672550102014	WITHOUT_CLASSIFICATION	2.3274498979855682E-4	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997672550102014	WITHOUT_CLASSIFICATION	2.3274498979855682E-4	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999383857620054	WITHOUT_CLASSIFICATION	6.161423799460029E-5	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9992062875660729	WITHOUT_CLASSIFICATION	7.937124339271062E-4	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9974009439701407	WITHOUT_CLASSIFICATION	0.0025990560298592706	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9990095171905212	WITHOUT_CLASSIFICATION	9.904828094787557E-4	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.998574409379243	WITHOUT_CLASSIFICATION	0.0014255906207569708	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9996000918546127	WITHOUT_CLASSIFICATION	3.999081453872071E-4	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.9992640277594579	WITHOUT_CLASSIFICATION	7.359722405421622E-4	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.9998960683050929	WITHOUT_CLASSIFICATION	1.0393169490705606E-4	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9998858059240773	WITHOUT_CLASSIFICATION	1.1419407592270627E-4	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9997737624821813	WITHOUT_CLASSIFICATION	2.2623751781873592E-4	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9997737624821813	WITHOUT_CLASSIFICATION	2.2623751781873592E-4	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9997737624821813	WITHOUT_CLASSIFICATION	2.2623751781873592E-4	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9997737624821813	WITHOUT_CLASSIFICATION	2.2623751781873592E-4	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9997737624821813	WITHOUT_CLASSIFICATION	2.2623751781873592E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9967744480174354	WITHOUT_CLASSIFICATION	0.003225551982564555	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9967744480174354	WITHOUT_CLASSIFICATION	0.003225551982564555	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9967744480174354	WITHOUT_CLASSIFICATION	0.003225551982564555	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.9967744480174354	WITHOUT_CLASSIFICATION	0.003225551982564555	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9997198799327406	WITHOUT_CLASSIFICATION	2.8012006725941567E-4	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9998202356914062	WITHOUT_CLASSIFICATION	1.7976430859378232E-4	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.9764688304159577	WITHOUT_CLASSIFICATION	0.023531169584042354	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9996094231424334	WITHOUT_CLASSIFICATION	3.905768575665354E-4	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9991067969461668	WITHOUT_CLASSIFICATION	8.932030538333027E-4	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9998701930771308	WITHOUT_CLASSIFICATION	1.2980692286924052E-4	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9990095902744268	WITHOUT_CLASSIFICATION	9.90409725573157E-4	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9992785837862735	WITHOUT_CLASSIFICATION	7.214162137263386E-4	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9991765249726632	WITHOUT_CLASSIFICATION	8.23475027336833E-4	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9997252919436602	WITHOUT_CLASSIFICATION	2.747080563398587E-4	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9998898372536686	WITHOUT_CLASSIFICATION	1.1016274633128996E-4	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.999768146790198	WITHOUT_CLASSIFICATION	2.3185320980200874E-4	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9997386968715385	WITHOUT_CLASSIFICATION	2.613031284615031E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9997115720833263	WITHOUT_CLASSIFICATION	2.884279166737837E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9997115720833263	WITHOUT_CLASSIFICATION	2.884279166737837E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9997115720833263	WITHOUT_CLASSIFICATION	2.884279166737837E-4	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9997957792075189	WITHOUT_CLASSIFICATION	2.0422079248104852E-4	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9997957792075189	WITHOUT_CLASSIFICATION	2.0422079248104852E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9997922960618022	WITHOUT_CLASSIFICATION	2.077039381978565E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9992968134283301	WITHOUT_CLASSIFICATION	7.031865716698094E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9996075311503627	WITHOUT_CLASSIFICATION	3.9246884963730657E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9996075311503627	WITHOUT_CLASSIFICATION	3.9246884963730657E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9996075311503627	WITHOUT_CLASSIFICATION	3.9246884963730657E-4	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.999846727849595	WITHOUT_CLASSIFICATION	1.5327215040492132E-4	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9998996669584875	WITHOUT_CLASSIFICATION	1.0033304151249002E-4	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.998394096131209	WITHOUT_CLASSIFICATION	0.001605903868791021	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9993312695060976	WITHOUT_CLASSIFICATION	6.687304939024999E-4	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.8673408001827836	WITHOUT_CLASSIFICATION	0.1326591998172163	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9994986925594744	WITHOUT_CLASSIFICATION	5.013074405255112E-4	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9963069697769372	WITHOUT_CLASSIFICATION	0.0036930302230628567	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.9995747911430851	WITHOUT_CLASSIFICATION	4.2520885691487787E-4	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9952037767422407	WITHOUT_CLASSIFICATION	0.0047962232577593005	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.9954327929814426	WITHOUT_CLASSIFICATION	0.004567207018557361	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9996798275824459	WITHOUT_CLASSIFICATION	3.2017241755409056E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9996798275824459	WITHOUT_CLASSIFICATION	3.2017241755409056E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9996798275824459	WITHOUT_CLASSIFICATION	3.2017241755409056E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9996798275824459	WITHOUT_CLASSIFICATION	3.2017241755409056E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9996798275824459	WITHOUT_CLASSIFICATION	3.2017241755409056E-4	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9936966588873234	WITHOUT_CLASSIFICATION	0.006303341112676593	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9995324705865257	WITHOUT_CLASSIFICATION	4.6752941347429165E-4	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9996081292446971	WITHOUT_CLASSIFICATION	3.9187075530291814E-4	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9997592406556765	WITHOUT_CLASSIFICATION	2.4075934432366927E-4	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9995956894536651	WITHOUT_CLASSIFICATION	4.043105463349399E-4	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9997499279647151	WITHOUT_CLASSIFICATION	2.500720352849484E-4	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9992535070270486	WITHOUT_CLASSIFICATION	7.464929729514583E-4	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9997834561476773	WITHOUT_CLASSIFICATION	2.1654385232263847E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999448644190411	WITHOUT_CLASSIFICATION	5.513558095902417E-5	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.9988208765192605	WITHOUT_CLASSIFICATION	0.0011791234807394973	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9990957876825599	WITHOUT_CLASSIFICATION	9.042123174401671E-4	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.9990957876825599	WITHOUT_CLASSIFICATION	9.042123174401671E-4	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9997735631772601	WITHOUT_CLASSIFICATION	2.2643682273985695E-4	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999823124755558	WITHOUT_CLASSIFICATION	1.7687524444156785E-5	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9869536698930456	WITHOUT_CLASSIFICATION	0.013046330106954565	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9998775697970608	WITHOUT_CLASSIFICATION	1.2243020293923747E-4	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9998443048389037	WITHOUT_CLASSIFICATION	1.556951610962967E-4	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9997799269675973	WITHOUT_CLASSIFICATION	2.200730324026374E-4	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9943892821398475	WITHOUT_CLASSIFICATION	0.005610717860152501	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9987730315125883	WITHOUT_CLASSIFICATION	0.0012269684874117275	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9998970037837752	WITHOUT_CLASSIFICATION	1.0299621622469661E-4	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9998379067218438	WITHOUT_CLASSIFICATION	1.6209327815619752E-4	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9998379067218438	WITHOUT_CLASSIFICATION	1.6209327815619752E-4	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9998379067218438	WITHOUT_CLASSIFICATION	1.6209327815619752E-4	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9998379067218438	WITHOUT_CLASSIFICATION	1.6209327815619752E-4	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.99883996126056	WITHOUT_CLASSIFICATION	0.0011600387394400224	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9992660236612327	WITHOUT_CLASSIFICATION	7.339763387671552E-4	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9993520632546286	WITHOUT_CLASSIFICATION	6.479367453715287E-4	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.9997871551413545	WITHOUT_CLASSIFICATION	2.128448586455395E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.997718041450274	WITHOUT_CLASSIFICATION	0.002281958549726045	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.99558456006634	WITHOUT_CLASSIFICATION	0.004415439933660034	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9977923845968066	WITHOUT_CLASSIFICATION	0.0022076154031933797	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9998400845477544	WITHOUT_CLASSIFICATION	1.5991545224558178E-4	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9998624530242511	WITHOUT_CLASSIFICATION	1.3754697574887908E-4	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9957047939666775	WITHOUT_CLASSIFICATION	0.004295206033322493	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9998898426887397	WITHOUT_CLASSIFICATION	1.1015731126031582E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9995313664584178	WITHOUT_CLASSIFICATION	4.6863354158222756E-4	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.9997245190580678	WITHOUT_CLASSIFICATION	2.754809419321932E-4	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.8967547822708944	WITHOUT_CLASSIFICATION	0.10324521772910546	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.9836392109913522	WITHOUT_CLASSIFICATION	0.01636078900864777	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.9992230744855303	WITHOUT_CLASSIFICATION	7.769255144697388E-4	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9996036736572042	WITHOUT_CLASSIFICATION	3.9632634279590523E-4	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9997852521148768	WITHOUT_CLASSIFICATION	2.147478851233591E-4	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.9999150282530852	WITHOUT_CLASSIFICATION	8.497174691479006E-5	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9933821781818426	WITHOUT_CLASSIFICATION	0.006617821818157388	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9997318234049924	WITHOUT_CLASSIFICATION	2.6817659500758326E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9991166223605822	WITHOUT_CLASSIFICATION	8.833776394179209E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9991166223605822	WITHOUT_CLASSIFICATION	8.833776394179209E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9991166223605822	WITHOUT_CLASSIFICATION	8.833776394179209E-4	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9997668354165861	WITHOUT_CLASSIFICATION	2.3316458341392666E-4	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9996962629091238	WITHOUT_CLASSIFICATION	3.0373709087621806E-4	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999493222705209	WITHOUT_CLASSIFICATION	5.0677729479043E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.9994503066921981	WITHOUT_CLASSIFICATION	5.49693307801812E-4	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9990516523740757	WITHOUT_CLASSIFICATION	9.483476259243834E-4	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9999408990195675	WITHOUT_CLASSIFICATION	5.910098043244625E-5	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9996378818694582	WITHOUT_CLASSIFICATION	3.6211813054175355E-4	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9996969531170361	WITHOUT_CLASSIFICATION	3.030468829638464E-4	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9994296921370929	WITHOUT_CLASSIFICATION	5.703078629071311E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9997352807724884	WITHOUT_CLASSIFICATION	2.647192275116218E-4	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9997212731738077	WITHOUT_CLASSIFICATION	2.787268261922802E-4	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9990722339798299	WITHOUT_CLASSIFICATION	9.277660201700337E-4	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9995192131432915	WITHOUT_CLASSIFICATION	4.807868567084242E-4	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9987255609117799	WITHOUT_CLASSIFICATION	0.0012744390882201276	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999008480797457	WITHOUT_CLASSIFICATION	9.91519202543479E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999008480797457	WITHOUT_CLASSIFICATION	9.91519202543479E-5	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9997210764495283	WITHOUT_CLASSIFICATION	2.789235504716302E-4	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999661625080927	WITHOUT_CLASSIFICATION	3.3837491907381834E-5	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.7133011896954344	DEFECT	0.28669881030456557	WITHOUT_CLASSIFICATION
// preserve permissions	WITHOUT_CLASSIFICATION	0.9997007535486683	WITHOUT_CLASSIFICATION	2.9924645133164613E-4	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9998927982326952	WITHOUT_CLASSIFICATION	1.0720176730492915E-4	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999422304546688	WITHOUT_CLASSIFICATION	5.776954533112576E-5	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9997387101567726	WITHOUT_CLASSIFICATION	2.6128984322737963E-4	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9981284337035321	WITHOUT_CLASSIFICATION	0.0018715662964678861	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9998074243902909	WITHOUT_CLASSIFICATION	1.9257560970913903E-4	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9997514089112123	WITHOUT_CLASSIFICATION	2.48591088787719E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9991166223605822	WITHOUT_CLASSIFICATION	8.833776394179209E-4	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9998403835640405	WITHOUT_CLASSIFICATION	1.5961643595958298E-4	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9998403178672352	WITHOUT_CLASSIFICATION	1.596821327648344E-4	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999459359999174	WITHOUT_CLASSIFICATION	5.40640000825679E-5	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.999678428556249	WITHOUT_CLASSIFICATION	3.215714437510946E-4	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9974198320765797	WITHOUT_CLASSIFICATION	0.0025801679234204082	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9980698464930299	WITHOUT_CLASSIFICATION	0.001930153506970111	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.9996026855184814	WITHOUT_CLASSIFICATION	3.9731448151857324E-4	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.9965809955127849	WITHOUT_CLASSIFICATION	0.003419004487215119	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999191145518216	WITHOUT_CLASSIFICATION	8.088544817839088E-5	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9996448621558449	WITHOUT_CLASSIFICATION	3.551378441550203E-4	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9997472732571624	WITHOUT_CLASSIFICATION	2.527267428375757E-4	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.99932128171058	WITHOUT_CLASSIFICATION	6.78718289419916E-4	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999760342582577	WITHOUT_CLASSIFICATION	2.396574174228562E-5	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.999663474561899	WITHOUT_CLASSIFICATION	3.365254381010117E-4	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9997272195897878	WITHOUT_CLASSIFICATION	2.7278041021223384E-4	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999916737209588	WITHOUT_CLASSIFICATION	8.326279041248774E-6	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9997128358063545	WITHOUT_CLASSIFICATION	2.871641936455297E-4	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9997722800036175	WITHOUT_CLASSIFICATION	2.2771999638248577E-4	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9992148708405325	WITHOUT_CLASSIFICATION	7.851291594674982E-4	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999034124782717	WITHOUT_CLASSIFICATION	9.65875217282569E-5	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.9998999221996857	WITHOUT_CLASSIFICATION	1.0007780031430925E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999420613285119	WITHOUT_CLASSIFICATION	5.7938671487991655E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999420613285119	WITHOUT_CLASSIFICATION	5.7938671487991655E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9999420613285119	WITHOUT_CLASSIFICATION	5.7938671487991655E-5	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999095311591263	WITHOUT_CLASSIFICATION	9.046884087373397E-5	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9991996828277193	WITHOUT_CLASSIFICATION	8.003171722807465E-4	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9992684390838692	WITHOUT_CLASSIFICATION	7.315609161307372E-4	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999663084412961	WITHOUT_CLASSIFICATION	3.369155870392706E-5	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.997242846421004	WITHOUT_CLASSIFICATION	0.002757153578995942	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.5540535888428966	WITHOUT_CLASSIFICATION	0.4459464111571036	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9993812805540065	WITHOUT_CLASSIFICATION	6.187194459934891E-4	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9995739485340934	WITHOUT_CLASSIFICATION	4.260514659064926E-4	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9993698822088436	WITHOUT_CLASSIFICATION	6.301177911564153E-4	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9993698822088436	WITHOUT_CLASSIFICATION	6.301177911564153E-4	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9993698822088436	WITHOUT_CLASSIFICATION	6.301177911564153E-4	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.999683249673004	WITHOUT_CLASSIFICATION	3.1675032699589616E-4	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999478565741701	WITHOUT_CLASSIFICATION	5.214342582982307E-5	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999261238920868	WITHOUT_CLASSIFICATION	7.387610791318136E-5	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9987452768439742	WITHOUT_CLASSIFICATION	0.0012547231560257723	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9987587325954549	WITHOUT_CLASSIFICATION	0.001241267404545014	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9971914949212075	WITHOUT_CLASSIFICATION	0.002808505078792421	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9997097432460431	WITHOUT_CLASSIFICATION	2.902567539568786E-4	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.999639813593999	WITHOUT_CLASSIFICATION	3.601864060009475E-4	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9998403178672352	WITHOUT_CLASSIFICATION	1.596821327648344E-4	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9999020058721126	WITHOUT_CLASSIFICATION	9.799412788727973E-5	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9998182562033744	WITHOUT_CLASSIFICATION	1.817437966256519E-4	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.9998182562033744	WITHOUT_CLASSIFICATION	1.817437966256519E-4	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9997439573333429	WITHOUT_CLASSIFICATION	2.5604266665713835E-4	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.9108636300386357	WITHOUT_CLASSIFICATION	0.08913636996136427	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9994585532700471	WITHOUT_CLASSIFICATION	5.414467299529197E-4	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9990743272068382	WITHOUT_CLASSIFICATION	9.256727931617913E-4	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999849708693378	WITHOUT_CLASSIFICATION	1.5029130662332816E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9991166223605822	WITHOUT_CLASSIFICATION	8.833776394179209E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9991166223605822	WITHOUT_CLASSIFICATION	8.833776394179209E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9997432962986076	WITHOUT_CLASSIFICATION	2.567037013923419E-4	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9997432962986076	WITHOUT_CLASSIFICATION	2.567037013923419E-4	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997236207789241	WITHOUT_CLASSIFICATION	2.763792210759633E-4	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.992286420691525	WITHOUT_CLASSIFICATION	0.00771357930847499	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9997348643652311	WITHOUT_CLASSIFICATION	2.651356347689609E-4	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9984262014319704	WITHOUT_CLASSIFICATION	0.001573798568029654	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.9994264844801833	WITHOUT_CLASSIFICATION	5.735155198167057E-4	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.9999219749080668	WITHOUT_CLASSIFICATION	7.802509193320234E-5	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9995784275899786	WITHOUT_CLASSIFICATION	4.2157241002138446E-4	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9996688075706559	WITHOUT_CLASSIFICATION	3.311924293441551E-4	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9998416208728277	WITHOUT_CLASSIFICATION	1.5837912717228255E-4	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9995714166879135	WITHOUT_CLASSIFICATION	4.2858331208649414E-4	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9997474150014707	WITHOUT_CLASSIFICATION	2.5258499852933564E-4	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.990139577760871	WITHOUT_CLASSIFICATION	0.00986042223912884	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9998585831915586	WITHOUT_CLASSIFICATION	1.4141680844133366E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997258162508892	WITHOUT_CLASSIFICATION	2.741837491108558E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997258162508892	WITHOUT_CLASSIFICATION	2.741837491108558E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997258162508892	WITHOUT_CLASSIFICATION	2.741837491108558E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997258162508892	WITHOUT_CLASSIFICATION	2.741837491108558E-4	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9991830776708833	WITHOUT_CLASSIFICATION	8.169223291167432E-4	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9974271963538877	WITHOUT_CLASSIFICATION	0.0025728036461123687	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9855438646712604	WITHOUT_CLASSIFICATION	0.014456135328739461	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9999840411650898	WITHOUT_CLASSIFICATION	1.595883491019464E-5	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9993325771162012	WITHOUT_CLASSIFICATION	6.67422883798718E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9991166223605822	WITHOUT_CLASSIFICATION	8.833776394179209E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9991166223605822	WITHOUT_CLASSIFICATION	8.833776394179209E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9991166223605822	WITHOUT_CLASSIFICATION	8.833776394179209E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9991166223605822	WITHOUT_CLASSIFICATION	8.833776394179209E-4	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.999922903037415	WITHOUT_CLASSIFICATION	7.709696258498832E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997236207789241	WITHOUT_CLASSIFICATION	2.763792210759633E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999868272079221	WITHOUT_CLASSIFICATION	1.317279207790188E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9996969419571319	WITHOUT_CLASSIFICATION	3.03058042868087E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9996969419571319	WITHOUT_CLASSIFICATION	3.03058042868087E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9996969419571319	WITHOUT_CLASSIFICATION	3.03058042868087E-4	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9998935980277852	WITHOUT_CLASSIFICATION	1.0640197221469121E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9998487346751842	WITHOUT_CLASSIFICATION	1.5126532481585608E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9997432962986076	WITHOUT_CLASSIFICATION	2.567037013923419E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9997432962986076	WITHOUT_CLASSIFICATION	2.567037013923419E-4	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.9999090923143006	WITHOUT_CLASSIFICATION	9.090768569949534E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.9998935980277852	WITHOUT_CLASSIFICATION	1.0640197221469121E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9953206703500721	WITHOUT_CLASSIFICATION	0.004679329649927849	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999361787701384	WITHOUT_CLASSIFICATION	6.382122986160176E-5	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.999555736616497	WITHOUT_CLASSIFICATION	4.4426338350301984E-4	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9999468260973309	WITHOUT_CLASSIFICATION	5.317390266901888E-5	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9999852394805511	WITHOUT_CLASSIFICATION	1.4760519448915272E-5	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9995904075060654	WITHOUT_CLASSIFICATION	4.0959249393463654E-4	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9938816442898649	WITHOUT_CLASSIFICATION	0.006118355710135096	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9996053916546764	WITHOUT_CLASSIFICATION	3.946083453236032E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.998238427000757	WITHOUT_CLASSIFICATION	0.0017615729992429558	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.998238427000757	WITHOUT_CLASSIFICATION	0.0017615729992429558	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9996282087237663	WITHOUT_CLASSIFICATION	3.7179127623367884E-4	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9982209935802695	WITHOUT_CLASSIFICATION	0.0017790064197305043	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999101465820952	WITHOUT_CLASSIFICATION	8.985341790475737E-5	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999275619313208	WITHOUT_CLASSIFICATION	7.243806867922005E-5	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9998882592278151	WITHOUT_CLASSIFICATION	1.1174077218485818E-4	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9971363111931102	WITHOUT_CLASSIFICATION	0.0028636888068898116	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.9980316473447288	WITHOUT_CLASSIFICATION	0.001968352655271209	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9935962559767831	WITHOUT_CLASSIFICATION	0.006403744023216754	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9998074693662167	WITHOUT_CLASSIFICATION	1.9253063378346446E-4	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.999465984228308	WITHOUT_CLASSIFICATION	5.340157716919788E-4	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9988978908039451	WITHOUT_CLASSIFICATION	0.0011021091960549054	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999868272079221	WITHOUT_CLASSIFICATION	1.317279207790188E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.999868272079221	WITHOUT_CLASSIFICATION	1.317279207790188E-4	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9996764209655018	WITHOUT_CLASSIFICATION	3.2357903449816805E-4	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9995278266272832	WITHOUT_CLASSIFICATION	4.721733727168369E-4	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9996604691245728	WITHOUT_CLASSIFICATION	3.3953087542715985E-4	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9993996068598259	WITHOUT_CLASSIFICATION	6.003931401741756E-4	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9999259237381947	WITHOUT_CLASSIFICATION	7.407626180530413E-5	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9997553641822072	WITHOUT_CLASSIFICATION	2.446358177927451E-4	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9998353111709942	WITHOUT_CLASSIFICATION	1.6468882900566757E-4	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9990994001478308	WITHOUT_CLASSIFICATION	9.005998521691466E-4	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9997462479432379	WITHOUT_CLASSIFICATION	2.537520567621428E-4	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9992327479721713	WITHOUT_CLASSIFICATION	7.672520278286359E-4	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9997348744249881	WITHOUT_CLASSIFICATION	2.651255750118927E-4	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9997159945769015	WITHOUT_CLASSIFICATION	2.840054230984568E-4	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9997159945769015	WITHOUT_CLASSIFICATION	2.840054230984568E-4	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999700653438888	WITHOUT_CLASSIFICATION	2.9934656111213613E-5	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9999202692422293	WITHOUT_CLASSIFICATION	7.973075777064994E-5	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.9991286757911173	WITHOUT_CLASSIFICATION	8.713242088826478E-4	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9998887788163097	WITHOUT_CLASSIFICATION	1.1122118369036928E-4	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9987793713196792	WITHOUT_CLASSIFICATION	0.001220628680320826	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9999503196176479	WITHOUT_CLASSIFICATION	4.9680382352091285E-5	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.9999503196176479	WITHOUT_CLASSIFICATION	4.9680382352091285E-5	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9994691721425074	WITHOUT_CLASSIFICATION	5.308278574925767E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9998324724175296	WITHOUT_CLASSIFICATION	1.6752758247043183E-4	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9995421980822442	WITHOUT_CLASSIFICATION	4.578019177559091E-4	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999622694280124	WITHOUT_CLASSIFICATION	3.773057198757028E-5	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9996855423983979	WITHOUT_CLASSIFICATION	3.1445760160212237E-4	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9998312009137688	WITHOUT_CLASSIFICATION	1.6879908623133183E-4	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9988844494061004	WITHOUT_CLASSIFICATION	0.0011155505938995468	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.999922903037415	WITHOUT_CLASSIFICATION	7.709696258498832E-5	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.9914043994794473	WITHOUT_CLASSIFICATION	0.008595600520552745	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9748271911641956	WITHOUT_CLASSIFICATION	0.025172808835804382	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9748271911641956	WITHOUT_CLASSIFICATION	0.025172808835804382	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9748271911641956	WITHOUT_CLASSIFICATION	0.025172808835804382	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9994212867469702	WITHOUT_CLASSIFICATION	5.787132530298587E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9994212867469702	WITHOUT_CLASSIFICATION	5.787132530298587E-4	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9998284943591537	WITHOUT_CLASSIFICATION	1.7150564084628486E-4	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9941943736795181	WITHOUT_CLASSIFICATION	0.005805626320481802	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999465540945282	WITHOUT_CLASSIFICATION	5.344590547190456E-5	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9995399693567386	WITHOUT_CLASSIFICATION	4.6003064326135195E-4	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9980563961380645	WITHOUT_CLASSIFICATION	0.0019436038619354875	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9997322239365489	WITHOUT_CLASSIFICATION	2.6777606345110294E-4	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.999922903037415	WITHOUT_CLASSIFICATION	7.709696258498832E-5	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9984601624451634	WITHOUT_CLASSIFICATION	0.0015398375548365613	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.999645823472407	WITHOUT_CLASSIFICATION	3.541765275928866E-4	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9994789018347764	WITHOUT_CLASSIFICATION	5.210981652236116E-4	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9999097147513616	WITHOUT_CLASSIFICATION	9.02852486384134E-5	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9999045613365112	WITHOUT_CLASSIFICATION	9.543866348891896E-5	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9994298797683057	WITHOUT_CLASSIFICATION	5.701202316944414E-4	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9998093567435903	WITHOUT_CLASSIFICATION	1.9064325640963834E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9996484644251729	WITHOUT_CLASSIFICATION	3.5153557482710935E-4	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9968805976901862	WITHOUT_CLASSIFICATION	0.003119402309813924	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9980988370209285	WITHOUT_CLASSIFICATION	0.001901162979071524	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999331449546255	WITHOUT_CLASSIFICATION	6.685504537456025E-5	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9997488606141293	WITHOUT_CLASSIFICATION	2.511393858707854E-4	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999129918721039	WITHOUT_CLASSIFICATION	8.700812789604195E-5	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9996323947825689	WITHOUT_CLASSIFICATION	3.676052174310168E-4	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.999909182617832	WITHOUT_CLASSIFICATION	9.08173821679496E-5	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9993091348399517	WITHOUT_CLASSIFICATION	6.908651600483385E-4	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9995349300736165	WITHOUT_CLASSIFICATION	4.6506992638357605E-4	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9996270909819416	WITHOUT_CLASSIFICATION	3.729090180583598E-4	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9996270909819416	WITHOUT_CLASSIFICATION	3.729090180583598E-4	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9998017050596829	WITHOUT_CLASSIFICATION	1.9829494031709804E-4	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9996211494012062	WITHOUT_CLASSIFICATION	3.7885059879371277E-4	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999085604332896	WITHOUT_CLASSIFICATION	9.143956671032772E-5	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.9951311248072053	WITHOUT_CLASSIFICATION	0.004868875192794679	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9994378629732901	WITHOUT_CLASSIFICATION	5.621370267099162E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9977231928688908	WITHOUT_CLASSIFICATION	0.0022768071311093266	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9977231928688908	WITHOUT_CLASSIFICATION	0.0022768071311093266	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9993878498186147	WITHOUT_CLASSIFICATION	6.12150181385261E-4	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9995974652218649	WITHOUT_CLASSIFICATION	4.025347781351422E-4	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9998556380934562	WITHOUT_CLASSIFICATION	1.4436190654381102E-4	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9998556380934562	WITHOUT_CLASSIFICATION	1.4436190654381102E-4	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9998032059297624	WITHOUT_CLASSIFICATION	1.9679407023751651E-4	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9997331476971807	WITHOUT_CLASSIFICATION	2.668523028192455E-4	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9999050580219083	WITHOUT_CLASSIFICATION	9.49419780916394E-5	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999856620289094	WITHOUT_CLASSIFICATION	1.433797109060204E-4	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.9956321479239613	WITHOUT_CLASSIFICATION	0.0043678520760387154	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999809240584899	WITHOUT_CLASSIFICATION	1.9075941510105196E-5	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9999871542930582	WITHOUT_CLASSIFICATION	1.2845706941727061E-5	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9997558219908688	WITHOUT_CLASSIFICATION	2.4417800913114555E-4	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.999970380748213	WITHOUT_CLASSIFICATION	2.9619251786917022E-5	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.996137608680046	WITHOUT_CLASSIFICATION	0.003862391319954012	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.9587992545151545	WITHOUT_CLASSIFICATION	0.04120074548484547	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9982027496954723	WITHOUT_CLASSIFICATION	0.0017972503045277609	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9996431506119924	WITHOUT_CLASSIFICATION	3.5684938800751784E-4	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9998036483451083	WITHOUT_CLASSIFICATION	1.9635165489166923E-4	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999021588695971	WITHOUT_CLASSIFICATION	9.7841130402898E-5	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9995631131250129	WITHOUT_CLASSIFICATION	4.368868749871895E-4	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9999726526977978	WITHOUT_CLASSIFICATION	2.734730220220115E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9931446474064158	WITHOUT_CLASSIFICATION	0.006855352593584163	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9999148493361321	WITHOUT_CLASSIFICATION	8.515066386795149E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9996962490566894	WITHOUT_CLASSIFICATION	3.0375094331058387E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9996962490566894	WITHOUT_CLASSIFICATION	3.0375094331058387E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9996962490566894	WITHOUT_CLASSIFICATION	3.0375094331058387E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9996962490566894	WITHOUT_CLASSIFICATION	3.0375094331058387E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9996962490566894	WITHOUT_CLASSIFICATION	3.0375094331058387E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9996962490566894	WITHOUT_CLASSIFICATION	3.0375094331058387E-4	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9996927591208401	WITHOUT_CLASSIFICATION	3.072408791599501E-4	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9997629089126675	WITHOUT_CLASSIFICATION	2.370910873325411E-4	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9992149341667644	WITHOUT_CLASSIFICATION	7.850658332354515E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997306640211463	WITHOUT_CLASSIFICATION	2.6933597885375033E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997306640211463	WITHOUT_CLASSIFICATION	2.6933597885375033E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997306640211463	WITHOUT_CLASSIFICATION	2.6933597885375033E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997306640211463	WITHOUT_CLASSIFICATION	2.6933597885375033E-4	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.998894429794171	WITHOUT_CLASSIFICATION	0.0011055702058290519	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9996898655787442	WITHOUT_CLASSIFICATION	3.1013442125575976E-4	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.955838884034587	WITHOUT_CLASSIFICATION	0.04416111596541289	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999805113667383	WITHOUT_CLASSIFICATION	1.9488633261707819E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999805113667383	WITHOUT_CLASSIFICATION	1.9488633261707819E-4	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9974035893946411	WITHOUT_CLASSIFICATION	0.0025964106053589114	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9986682560543522	WITHOUT_CLASSIFICATION	0.0013317439456478094	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.9998205772180153	WITHOUT_CLASSIFICATION	1.7942278198477776E-4	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9980910922836693	WITHOUT_CLASSIFICATION	0.0019089077163307172	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9993262292474134	WITHOUT_CLASSIFICATION	6.737707525865593E-4	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.9999093649920877	WITHOUT_CLASSIFICATION	9.063500791234905E-5	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9997907319098157	WITHOUT_CLASSIFICATION	2.0926809018426203E-4	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9997907319098157	WITHOUT_CLASSIFICATION	2.0926809018426203E-4	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.990602272683415	WITHOUT_CLASSIFICATION	0.00939772731658492	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9997556174703305	WITHOUT_CLASSIFICATION	2.443825296695553E-4	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9997989356305547	WITHOUT_CLASSIFICATION	2.010643694453784E-4	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9993267447655105	WITHOUT_CLASSIFICATION	6.732552344894625E-4	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.999844911939857	WITHOUT_CLASSIFICATION	1.5508806014290357E-4	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9989710630886313	WITHOUT_CLASSIFICATION	0.0010289369113686958	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.9997103495427712	WITHOUT_CLASSIFICATION	2.896504572287844E-4	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9994763726592806	WITHOUT_CLASSIFICATION	5.236273407194392E-4	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.999917985010129	WITHOUT_CLASSIFICATION	8.201498987105584E-5	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.9979235886972297	WITHOUT_CLASSIFICATION	0.002076411302770253	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.9875593930501013	WITHOUT_CLASSIFICATION	0.012440606949898654	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9917790725923258	WITHOUT_CLASSIFICATION	0.008220927407674243	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9987034594552315	WITHOUT_CLASSIFICATION	0.0012965405447684635	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.9974121684876198	WITHOUT_CLASSIFICATION	0.0025878315123801614	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.999696458666078	WITHOUT_CLASSIFICATION	3.035413339219095E-4	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9997744991270613	WITHOUT_CLASSIFICATION	2.2550087293880336E-4	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9998098159950753	WITHOUT_CLASSIFICATION	1.9018400492458584E-4	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.998380141390864	WITHOUT_CLASSIFICATION	0.001619858609135977	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9997132501367716	WITHOUT_CLASSIFICATION	2.8674986322833223E-4	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.9997932749741153	WITHOUT_CLASSIFICATION	2.067250258848431E-4	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9992197473796135	WITHOUT_CLASSIFICATION	7.802526203865746E-4	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9992197473796135	WITHOUT_CLASSIFICATION	7.802526203865746E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9944165570720687	WITHOUT_CLASSIFICATION	0.005583442927931335	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.9759310335461676	WITHOUT_CLASSIFICATION	0.024068966453832333	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9963092770795957	WITHOUT_CLASSIFICATION	0.003690722920404258	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9992008491124812	WITHOUT_CLASSIFICATION	7.991508875188891E-4	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9592991779884678	WITHOUT_CLASSIFICATION	0.04070082201153223	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.5127277145047472	WITHOUT_CLASSIFICATION	0.48727228549525275	DEFECT
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9782360234842687	WITHOUT_CLASSIFICATION	0.02176397651573128	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.5706814979447399	DEFECT	0.4293185020552601	WITHOUT_CLASSIFICATION
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.980953955474196	WITHOUT_CLASSIFICATION	0.019046044525804114	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9948632989026105	WITHOUT_CLASSIFICATION	0.005136701097389451	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.9109399381135778	WITHOUT_CLASSIFICATION	0.08906006188642221	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.5706814979447399	DEFECT	0.4293185020552601	WITHOUT_CLASSIFICATION
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.9856583648987077	WITHOUT_CLASSIFICATION	0.014341635101292377	DEFECT
